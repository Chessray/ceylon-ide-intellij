// $ANTLR 3.4 /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g 2014-05-19 10:13:34
package com.redhat.ceylon.compiler.typechecker.parser;
import com.redhat.ceylon.compiler.typechecker.tree.Node;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.*;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.Package;

import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class CeylonParser extends Parser {
    public static final String[] tokenNames = new String[] {
            "<invalid>", "<EOR>", "<DOWN>", "<UP>", "ABSTRACTED_TYPE", "ADD_SPECIFY", "AIDENTIFIER", "ALIAS", "AND_OP", "AND_SPECIFY", "ASSEMBLY", "ASSERT", "ASSIGN", "ASTRING_LITERAL", "AVERBATIM_STRING", "BACKTICK", "BREAK", "BinaryDigit", "BinaryDigits", "CASE_CLAUSE", "CASE_TYPES", "CATCH_CLAUSE", "CHAR_LITERAL", "CLASS_DEFINITION", "COMMA", "COMPARE_OP", "COMPILER_ANNOTATION", "COMPLEMENT_OP", "COMPLEMENT_SPECIFY", "COMPUTE", "CONTINUE", "CharPart", "DECREMENT_OP", "DIFFERENCE_OP", "DIVIDE_SPECIFY", "DYNAMIC", "Digit", "Digits", "ELLIPSIS", "ELSE_CLAUSE", "ENTRY_OP", "EQUAL_OP", "EXISTS", "EXTENDS", "EscapeSequence", "Exponent", "FINALLY_CLAUSE", "FLOAT_LITERAL", "FOR_CLAUSE", "FUNCTION_MODIFIER", "FractionalMagnitude", "HexDigit", "HexDigits", "IDENTICAL_OP", "IF_CLAUSE", "IMPORT", "INCREMENT_OP", "INTERFACE_DEFINITION", "INTERSECTION_OP", "INTERSECT_SPECIFY", "IN_OP", "IS_OP", "IdentifierPart", "IdentifierStart", "LARGER_OP", "LARGE_AS_OP", "LBRACE", "LBRACKET", "LET", "LIDENTIFIER", "LINE_COMMENT", "LIdentifierPrefix", "LPAREN", "Letter", "MEMBER_OP", "MODULE", "MULTIPLY_SPECIFY", "MULTI_COMMENT", "Magnitude", "NATURAL_LITERAL", "NEW", "NONEMPTY", "NOT_EQUAL_OP", "NOT_OP", "OBJECT_DEFINITION", "OPTIONAL", "OR_OP", "OR_SPECIFY", "OUT", "OUTER", "PACKAGE", "PIDENTIFIER", "POWER_OP", "PRODUCT_OP", "QUOTIENT_OP", "RANGE_OP", "RBRACE", "RBRACKET", "REMAINDER_OP", "REMAINDER_SPECIFY", "RETURN", "RPAREN", "SAFE_MEMBER_OP", "SATISFIES", "SCALE_OP", "SEGMENT_OP", "SEMICOLON", "SMALLER_OP", "SMALL_AS_OP", "SPECIFY", "SPREAD_OP", "STRING_END", "STRING_LITERAL", "STRING_MID", "STRING_START", "SUBTRACT_SPECIFY", "SUM_OP", "SUPER", "SWITCH_CLAUSE", "StringPart", "THEN_CLAUSE", "THIS", "THROW", "TRY_CLAUSE", "TYPE_CONSTRAINT", "UIDENTIFIER", "UIdentifierPrefix", "UNION_OP", "UNION_SPECIFY", "VALUE_MODIFIER", "VERBATIM_STRING", "VOID_MODIFIER", "WHILE_CLAUSE", "WS"
    };

    public static final int EOF=-1;
    public static final int ABSTRACTED_TYPE=4;
    public static final int ADD_SPECIFY=5;
    public static final int AIDENTIFIER=6;
    public static final int ALIAS=7;
    public static final int AND_OP=8;
    public static final int AND_SPECIFY=9;
    public static final int ASSEMBLY=10;
    public static final int ASSERT=11;
    public static final int ASSIGN=12;
    public static final int ASTRING_LITERAL=13;
    public static final int AVERBATIM_STRING=14;
    public static final int BACKTICK=15;
    public static final int BREAK=16;
    public static final int BinaryDigit=17;
    public static final int BinaryDigits=18;
    public static final int CASE_CLAUSE=19;
    public static final int CASE_TYPES=20;
    public static final int CATCH_CLAUSE=21;
    public static final int CHAR_LITERAL=22;
    public static final int CLASS_DEFINITION=23;
    public static final int COMMA=24;
    public static final int COMPARE_OP=25;
    public static final int COMPILER_ANNOTATION=26;
    public static final int COMPLEMENT_OP=27;
    public static final int COMPLEMENT_SPECIFY=28;
    public static final int COMPUTE=29;
    public static final int CONTINUE=30;
    public static final int CharPart=31;
    public static final int DECREMENT_OP=32;
    public static final int DIFFERENCE_OP=33;
    public static final int DIVIDE_SPECIFY=34;
    public static final int DYNAMIC=35;
    public static final int Digit=36;
    public static final int Digits=37;
    public static final int ELLIPSIS=38;
    public static final int ELSE_CLAUSE=39;
    public static final int ENTRY_OP=40;
    public static final int EQUAL_OP=41;
    public static final int EXISTS=42;
    public static final int EXTENDS=43;
    public static final int EscapeSequence=44;
    public static final int Exponent=45;
    public static final int FINALLY_CLAUSE=46;
    public static final int FLOAT_LITERAL=47;
    public static final int FOR_CLAUSE=48;
    public static final int FUNCTION_MODIFIER=49;
    public static final int FractionalMagnitude=50;
    public static final int HexDigit=51;
    public static final int HexDigits=52;
    public static final int IDENTICAL_OP=53;
    public static final int IF_CLAUSE=54;
    public static final int IMPORT=55;
    public static final int INCREMENT_OP=56;
    public static final int INTERFACE_DEFINITION=57;
    public static final int INTERSECTION_OP=58;
    public static final int INTERSECT_SPECIFY=59;
    public static final int IN_OP=60;
    public static final int IS_OP=61;
    public static final int IdentifierPart=62;
    public static final int IdentifierStart=63;
    public static final int LARGER_OP=64;
    public static final int LARGE_AS_OP=65;
    public static final int LBRACE=66;
    public static final int LBRACKET=67;
    public static final int LET=68;
    public static final int LIDENTIFIER=69;
    public static final int LINE_COMMENT=70;
    public static final int LIdentifierPrefix=71;
    public static final int LPAREN=72;
    public static final int Letter=73;
    public static final int MEMBER_OP=74;
    public static final int MODULE=75;
    public static final int MULTIPLY_SPECIFY=76;
    public static final int MULTI_COMMENT=77;
    public static final int Magnitude=78;
    public static final int NATURAL_LITERAL=79;
    public static final int NEW=80;
    public static final int NONEMPTY=81;
    public static final int NOT_EQUAL_OP=82;
    public static final int NOT_OP=83;
    public static final int OBJECT_DEFINITION=84;
    public static final int OPTIONAL=85;
    public static final int OR_OP=86;
    public static final int OR_SPECIFY=87;
    public static final int OUT=88;
    public static final int OUTER=89;
    public static final int PACKAGE=90;
    public static final int PIDENTIFIER=91;
    public static final int POWER_OP=92;
    public static final int PRODUCT_OP=93;
    public static final int QUOTIENT_OP=94;
    public static final int RANGE_OP=95;
    public static final int RBRACE=96;
    public static final int RBRACKET=97;
    public static final int REMAINDER_OP=98;
    public static final int REMAINDER_SPECIFY=99;
    public static final int RETURN=100;
    public static final int RPAREN=101;
    public static final int SAFE_MEMBER_OP=102;
    public static final int SATISFIES=103;
    public static final int SCALE_OP=104;
    public static final int SEGMENT_OP=105;
    public static final int SEMICOLON=106;
    public static final int SMALLER_OP=107;
    public static final int SMALL_AS_OP=108;
    public static final int SPECIFY=109;
    public static final int SPREAD_OP=110;
    public static final int STRING_END=111;
    public static final int STRING_LITERAL=112;
    public static final int STRING_MID=113;
    public static final int STRING_START=114;
    public static final int SUBTRACT_SPECIFY=115;
    public static final int SUM_OP=116;
    public static final int SUPER=117;
    public static final int SWITCH_CLAUSE=118;
    public static final int StringPart=119;
    public static final int THEN_CLAUSE=120;
    public static final int THIS=121;
    public static final int THROW=122;
    public static final int TRY_CLAUSE=123;
    public static final int TYPE_CONSTRAINT=124;
    public static final int UIDENTIFIER=125;
    public static final int UIdentifierPrefix=126;
    public static final int UNION_OP=127;
    public static final int UNION_SPECIFY=128;
    public static final int VALUE_MODIFIER=129;
    public static final int VERBATIM_STRING=130;
    public static final int VOID_MODIFIER=131;
    public static final int WHILE_CLAUSE=132;
    public static final int WS=133;

    // delegates
    public Parser[] getDelegates() {
        return new Parser[] {};
    }

    // delegators


    public CeylonParser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public CeylonParser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
        this.state.ruleMemo = new HashMap[241+1];


    }

    public String[] getTokenNames() { return CeylonParser.tokenNames; }
    public String getGrammarFileName() { return "/Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g"; }


    private java.util.List<ParseError> errors
            = new java.util.ArrayList<ParseError>();
    @Override public void displayRecognitionError(String[] tn,
                                                  RecognitionException re) {
        errors.add(new ParseError(this, re, tn));
    }
    public void displayRecognitionError(String[] tn, RecognitionException re, int code) {
        errors.add(new ParseError(this, re, tn, code));
    }
    public java.util.List<ParseError> getErrors() {
        return errors;
    }
    int expecting=-1;



    // $ANTLR start "compilationUnit"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:41:1: compilationUnit returns [CompilationUnit compilationUnit] : (ca1= compilerAnnotations SEMICOLON )? ( importDeclaration | ( compilerAnnotations annotations MODULE )=> moduleDescriptor | ( compilerAnnotations annotations PACKAGE )=> packageDescriptor |ca2= compilerAnnotations declaration | RBRACE )* EOF ;
    public CompilationUnit compilationUnit() throws RecognitionException {
        CompilationUnit compilationUnit = null;


        List<CompilerAnnotation> ca1 =null;

        List<CompilerAnnotation> ca2 =null;

        Import importDeclaration1 =null;

        ModuleDescriptor moduleDescriptor2 =null;

        PackageDescriptor packageDescriptor3 =null;

        Declaration declaration4 =null;


        compilationUnit = new CompilationUnit(null);
        ImportList importList = new ImportList(null);
        compilationUnit.setImportList(importList);
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:45:5: ( (ca1= compilerAnnotations SEMICOLON )? ( importDeclaration | ( compilerAnnotations annotations MODULE )=> moduleDescriptor | ( compilerAnnotations annotations PACKAGE )=> packageDescriptor |ca2= compilerAnnotations declaration | RBRACE )* EOF )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:45:7: (ca1= compilerAnnotations SEMICOLON )? ( importDeclaration | ( compilerAnnotations annotations MODULE )=> moduleDescriptor | ( compilerAnnotations annotations PACKAGE )=> packageDescriptor |ca2= compilerAnnotations declaration | RBRACE )* EOF
            {
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:45:7: (ca1= compilerAnnotations SEMICOLON )?
                int alt1=2;
                alt1 = dfa1.predict(input);
                switch (alt1) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:46:9: ca1= compilerAnnotations SEMICOLON
                    {
                        pushFollow(FOLLOW_compilerAnnotations_in_compilationUnit86);
                        ca1=compilerAnnotations();

                        state._fsp--;
                        if (state.failed) return compilationUnit;

                        match(input,SEMICOLON,FOLLOW_SEMICOLON_in_compilationUnit96); if (state.failed) return compilationUnit;

                        if ( state.backtracking==0 ) { compilationUnit.getCompilerAnnotations().addAll(ca1); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:50:7: ( importDeclaration | ( compilerAnnotations annotations MODULE )=> moduleDescriptor | ( compilerAnnotations annotations PACKAGE )=> packageDescriptor |ca2= compilerAnnotations declaration | RBRACE )*
                loop2:
                do {
                    int alt2=6;
                    int LA2_0 = input.LA(1);

                    if ( (LA2_0==IMPORT) ) {
                        alt2=1;
                    }
                    else if ( (LA2_0==COMPILER_ANNOTATION) ) {
                        int LA2_3 = input.LA(2);

                        if ( (synpred1_Ceylon()) ) {
                            alt2=2;
                        }
                        else if ( (synpred2_Ceylon()) ) {
                            alt2=3;
                        }
                        else if ( (true) ) {
                            alt2=4;
                        }


                    }
                    else if ( (LA2_0==STRING_LITERAL) ) {
                        int LA2_4 = input.LA(2);

                        if ( (synpred1_Ceylon()) ) {
                            alt2=2;
                        }
                        else if ( (synpred2_Ceylon()) ) {
                            alt2=3;
                        }
                        else if ( (true) ) {
                            alt2=4;
                        }


                    }
                    else if ( (LA2_0==VERBATIM_STRING) ) {
                        int LA2_5 = input.LA(2);

                        if ( (synpred1_Ceylon()) ) {
                            alt2=2;
                        }
                        else if ( (synpred2_Ceylon()) ) {
                            alt2=3;
                        }
                        else if ( (true) ) {
                            alt2=4;
                        }


                    }
                    else if ( (LA2_0==LIDENTIFIER) ) {
                        int LA2_6 = input.LA(2);

                        if ( (synpred1_Ceylon()) ) {
                            alt2=2;
                        }
                        else if ( (synpred2_Ceylon()) ) {
                            alt2=3;
                        }
                        else if ( (true) ) {
                            alt2=4;
                        }


                    }
                    else if ( (LA2_0==MODULE) && (synpred1_Ceylon())) {
                        alt2=2;
                    }
                    else if ( (LA2_0==PACKAGE) && (synpred2_Ceylon())) {
                        alt2=3;
                    }
                    else if ( (LA2_0==ALIAS||LA2_0==ASSIGN||LA2_0==CLASS_DEFINITION||LA2_0==DYNAMIC||LA2_0==FUNCTION_MODIFIER||LA2_0==INTERFACE_DEFINITION||(LA2_0 >= LBRACE && LA2_0 <= LBRACKET)||LA2_0==OBJECT_DEFINITION||LA2_0==SMALLER_OP||LA2_0==UIDENTIFIER||LA2_0==VALUE_MODIFIER||LA2_0==VOID_MODIFIER) ) {
                        alt2=4;
                    }
                    else if ( (LA2_0==RBRACE) ) {
                        alt2=5;
                    }


                    switch (alt2) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:51:9: importDeclaration
                        {
                            pushFollow(FOLLOW_importDeclaration_in_compilationUnit134);
                            importDeclaration1=importDeclaration();

                            state._fsp--;
                            if (state.failed) return compilationUnit;

                            if ( state.backtracking==0 ) { importList.addImport(importDeclaration1); }

                        }
                        break;
                        case 2 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:54:9: ( compilerAnnotations annotations MODULE )=> moduleDescriptor
                        {
                            pushFollow(FOLLOW_moduleDescriptor_in_compilationUnit180);
                            moduleDescriptor2=moduleDescriptor();

                            state._fsp--;
                            if (state.failed) return compilationUnit;

                            if ( state.backtracking==0 ) { compilationUnit.addModuleDescriptor(moduleDescriptor2); }

                        }
                        break;
                        case 3 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:58:9: ( compilerAnnotations annotations PACKAGE )=> packageDescriptor
                        {
                            pushFollow(FOLLOW_packageDescriptor_in_compilationUnit226);
                            packageDescriptor3=packageDescriptor();

                            state._fsp--;
                            if (state.failed) return compilationUnit;

                            if ( state.backtracking==0 ) { compilationUnit.addPackageDescriptor(packageDescriptor3); }

                        }
                        break;
                        case 4 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:62:9: ca2= compilerAnnotations declaration
                        {
                            pushFollow(FOLLOW_compilerAnnotations_in_compilationUnit256);
                            ca2=compilerAnnotations();

                            state._fsp--;
                            if (state.failed) return compilationUnit;

                            pushFollow(FOLLOW_declaration_in_compilationUnit258);
                            declaration4=declaration();

                            state._fsp--;
                            if (state.failed) return compilationUnit;

                            if ( state.backtracking==0 ) { if (declaration4!=null)
                                compilationUnit.addDeclaration(declaration4);
                                if (declaration4!=null)
                                    declaration4.getCompilerAnnotations().addAll(ca2); }

                        }
                        break;
                        case 5 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:67:9: RBRACE
                        {
                            match(input,RBRACE,FOLLOW_RBRACE_in_compilationUnit278); if (state.failed) return compilationUnit;

                            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                    new MismatchedTokenException(EOF, input)); }

                        }
                        break;

                        default :
                            break loop2;
                    }
                } while (true);


                match(input,EOF,FOLLOW_EOF_in_compilationUnit305); if (state.failed) return compilationUnit;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return compilationUnit;
    }
    // $ANTLR end "compilationUnit"



    // $ANTLR start "moduleDescriptor"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:74:1: moduleDescriptor returns [ModuleDescriptor moduleDescriptor] : compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList ;
    public ModuleDescriptor moduleDescriptor() throws RecognitionException {
        ModuleDescriptor moduleDescriptor = null;


        Token MODULE5=null;
        Token CHAR_LITERAL9=null;
        Token STRING_LITERAL10=null;
        AnnotationList annotations6 =null;

        List<CompilerAnnotation> compilerAnnotations7 =null;

        ImportPath packagePath8 =null;

        ImportModuleList importModuleList11 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:75:5: ( compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:75:7: compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList
            {
                pushFollow(FOLLOW_compilerAnnotations_in_moduleDescriptor326);
                compilerAnnotations7=compilerAnnotations();

                state._fsp--;
                if (state.failed) return moduleDescriptor;

                pushFollow(FOLLOW_annotations_in_moduleDescriptor328);
                annotations6=annotations();

                state._fsp--;
                if (state.failed) return moduleDescriptor;

                MODULE5=(Token)match(input,MODULE,FOLLOW_MODULE_in_moduleDescriptor336); if (state.failed) return moduleDescriptor;

                if ( state.backtracking==0 ) { moduleDescriptor = new ModuleDescriptor(MODULE5);
                    moduleDescriptor.setAnnotationList(annotations6);
                    moduleDescriptor.getCompilerAnnotations().addAll(compilerAnnotations7); }

                pushFollow(FOLLOW_packagePath_in_moduleDescriptor353);
                packagePath8=packagePath();

                state._fsp--;
                if (state.failed) return moduleDescriptor;

                if ( state.backtracking==0 ) { moduleDescriptor.setImportPath(packagePath8); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:82:7: ( CHAR_LITERAL | STRING_LITERAL )
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==CHAR_LITERAL) ) {
                    alt3=1;
                }
                else if ( (LA3_0==STRING_LITERAL) ) {
                    alt3=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return moduleDescriptor;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 3, 0, input);

                    throw nvae;

                }
                switch (alt3) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:83:9: CHAR_LITERAL
                    {
                        CHAR_LITERAL9=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_moduleDescriptor379); if (state.failed) return moduleDescriptor;

                        if ( state.backtracking==0 ) { moduleDescriptor.setVersion(new QuotedLiteral(CHAR_LITERAL9)); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:86:9: STRING_LITERAL
                    {
                        STRING_LITERAL10=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_moduleDescriptor407); if (state.failed) return moduleDescriptor;

                        if ( state.backtracking==0 ) { moduleDescriptor.setVersion(new QuotedLiteral(STRING_LITERAL10)); }

                    }
                    break;

                }


                pushFollow(FOLLOW_importModuleList_in_moduleDescriptor433);
                importModuleList11=importModuleList();

                state._fsp--;
                if (state.failed) return moduleDescriptor;

                if ( state.backtracking==0 ) { moduleDescriptor.setImportModuleList(importModuleList11); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return moduleDescriptor;
    }
    // $ANTLR end "moduleDescriptor"



    // $ANTLR start "importModuleList"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:93:1: importModuleList returns [ImportModuleList importModuleList] : LBRACE ( compilerAnnotations annotations importModule )* RBRACE ;
    public ImportModuleList importModuleList() throws RecognitionException {
        ImportModuleList importModuleList = null;


        Token LBRACE12=null;
        Token RBRACE16=null;
        ImportModule importModule13 =null;

        AnnotationList annotations14 =null;

        List<CompilerAnnotation> compilerAnnotations15 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:94:5: ( LBRACE ( compilerAnnotations annotations importModule )* RBRACE )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:94:7: LBRACE ( compilerAnnotations annotations importModule )* RBRACE
            {
                LBRACE12=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_importModuleList462); if (state.failed) return importModuleList;

                if ( state.backtracking==0 ) { importModuleList = new ImportModuleList(LBRACE12); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:96:7: ( compilerAnnotations annotations importModule )*
                loop4:
                do {
                    int alt4=2;
                    int LA4_0 = input.LA(1);

                    if ( (LA4_0==ALIAS||(LA4_0 >= ASSERT && LA4_0 <= ASSIGN)||(LA4_0 >= BACKTICK && LA4_0 <= BREAK)||(LA4_0 >= CHAR_LITERAL && LA4_0 <= CLASS_DEFINITION)||LA4_0==COMPILER_ANNOTATION||LA4_0==CONTINUE||(LA4_0 >= DECREMENT_OP && LA4_0 <= DIFFERENCE_OP)||LA4_0==DYNAMIC||(LA4_0 >= FLOAT_LITERAL && LA4_0 <= FUNCTION_MODIFIER)||(LA4_0 >= IF_CLAUSE && LA4_0 <= INTERFACE_DEFINITION)||LA4_0==IN_OP||(LA4_0 >= LBRACE && LA4_0 <= LBRACKET)||LA4_0==LIDENTIFIER||LA4_0==LPAREN||LA4_0==MODULE||LA4_0==NATURAL_LITERAL||(LA4_0 >= NOT_OP && LA4_0 <= OBJECT_DEFINITION)||(LA4_0 >= OUT && LA4_0 <= PACKAGE)||LA4_0==PRODUCT_OP||(LA4_0 >= RETURN && LA4_0 <= RPAREN)||(LA4_0 >= SEMICOLON && LA4_0 <= SMALLER_OP)||LA4_0==STRING_LITERAL||LA4_0==STRING_START||(LA4_0 >= SUM_OP && LA4_0 <= SWITCH_CLAUSE)||(LA4_0 >= THIS && LA4_0 <= UIDENTIFIER)||(LA4_0 >= VALUE_MODIFIER && LA4_0 <= WHILE_CLAUSE)) ) {
                        alt4=1;
                    }


                    switch (alt4) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:97:9: compilerAnnotations annotations importModule
                        {
                            pushFollow(FOLLOW_compilerAnnotations_in_importModuleList488);
                            compilerAnnotations15=compilerAnnotations();

                            state._fsp--;
                            if (state.failed) return importModuleList;

                            pushFollow(FOLLOW_annotations_in_importModuleList490);
                            annotations14=annotations();

                            state._fsp--;
                            if (state.failed) return importModuleList;

                            pushFollow(FOLLOW_importModule_in_importModuleList500);
                            importModule13=importModule();

                            state._fsp--;
                            if (state.failed) return importModuleList;

                            if ( state.backtracking==0 ) { if (importModule13!=null)
                                importModuleList.addImportModule(importModule13);
                                if (importModule13!=null)
                                    importModule13.setAnnotationList(annotations14);
                                if (importModule13!=null)
                                    importModule13.getCompilerAnnotations().addAll(compilerAnnotations15); }

                        }
                        break;

                        default :
                            break loop4;
                    }
                } while (true);


                RBRACE16=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_importModuleList527); if (state.failed) return importModuleList;

                if ( state.backtracking==0 ) { importModuleList.setEndToken(RBRACE16); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return importModuleList;
    }
    // $ANTLR end "importModuleList"



    // $ANTLR start "packageDescriptor"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:110:1: packageDescriptor returns [PackageDescriptor packageDescriptor] : compilerAnnotations annotations PACKAGE packagePath SEMICOLON ;
    public PackageDescriptor packageDescriptor() throws RecognitionException {
        PackageDescriptor packageDescriptor = null;


        Token PACKAGE17=null;
        Token SEMICOLON21=null;
        AnnotationList annotations18 =null;

        List<CompilerAnnotation> compilerAnnotations19 =null;

        ImportPath packagePath20 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:111:5: ( compilerAnnotations annotations PACKAGE packagePath SEMICOLON )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:111:7: compilerAnnotations annotations PACKAGE packagePath SEMICOLON
            {
                pushFollow(FOLLOW_compilerAnnotations_in_packageDescriptor556);
                compilerAnnotations19=compilerAnnotations();

                state._fsp--;
                if (state.failed) return packageDescriptor;

                pushFollow(FOLLOW_annotations_in_packageDescriptor558);
                annotations18=annotations();

                state._fsp--;
                if (state.failed) return packageDescriptor;

                PACKAGE17=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_packageDescriptor566); if (state.failed) return packageDescriptor;

                if ( state.backtracking==0 ) { packageDescriptor = new PackageDescriptor(PACKAGE17);
                    packageDescriptor.setAnnotationList(annotations18);
                    packageDescriptor.getCompilerAnnotations().addAll(compilerAnnotations19); }

                pushFollow(FOLLOW_packagePath_in_packageDescriptor583);
                packagePath20=packagePath();

                state._fsp--;
                if (state.failed) return packageDescriptor;

                if ( state.backtracking==0 ) { packageDescriptor.setImportPath(packagePath20);
                    expecting=SEMICOLON; }

                SEMICOLON21=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_packageDescriptor599); if (state.failed) return packageDescriptor;

                if ( state.backtracking==0 ) { packageDescriptor.setEndToken(SEMICOLON21);
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return packageDescriptor;
    }
    // $ANTLR end "packageDescriptor"



    // $ANTLR start "importModule"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:124:1: importModule returns [ImportModule importModule] : IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON ;
    public ImportModule importModule() throws RecognitionException {
        ImportModule importModule = null;


        Token c1=null;
        Token s1=null;
        Token c2=null;
        Token s2=null;
        Token IMPORT22=null;
        Token SEMICOLON24=null;
        ImportPath packagePath23 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:125:5: ( IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:125:7: IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON
            {
                IMPORT22=(Token)match(input,IMPORT,FOLLOW_IMPORT_in_importModule628); if (state.failed) return importModule;

                if ( state.backtracking==0 ) { importModule = new ImportModule(IMPORT22); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:127:7: (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath )
                int alt5=3;
                switch ( input.LA(1) ) {
                    case CHAR_LITERAL:
                    {
                        alt5=1;
                    }
                    break;
                    case STRING_LITERAL:
                    {
                        alt5=2;
                    }
                    break;
                    case LIDENTIFIER:
                    case UIDENTIFIER:
                    {
                        alt5=3;
                    }
                    break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return importModule;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 5, 0, input);

                        throw nvae;

                }

                switch (alt5) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:128:9: c1= CHAR_LITERAL
                    {
                        c1=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_importModule657); if (state.failed) return importModule;

                        if ( state.backtracking==0 ) { importModule.setQuotedLiteral(new QuotedLiteral(c1)); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:131:9: s1= STRING_LITERAL
                    {
                        s1=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_importModule687); if (state.failed) return importModule;

                        if ( state.backtracking==0 ) { importModule.setQuotedLiteral(new QuotedLiteral(s1)); }

                    }
                    break;
                    case 3 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:134:9: packagePath
                    {
                        pushFollow(FOLLOW_packagePath_in_importModule715);
                        packagePath23=packagePath();

                        state._fsp--;
                        if (state.failed) return importModule;

                        if ( state.backtracking==0 ) { importModule.setImportPath(packagePath23); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:137:7: (c2= CHAR_LITERAL |s2= STRING_LITERAL )?
                int alt6=3;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==CHAR_LITERAL) ) {
                    alt6=1;
                }
                else if ( (LA6_0==STRING_LITERAL) ) {
                    alt6=2;
                }
                switch (alt6) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:138:9: c2= CHAR_LITERAL
                    {
                        c2=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_importModule753); if (state.failed) return importModule;

                        if ( state.backtracking==0 ) { importModule.setVersion(new QuotedLiteral(c2));
                            expecting=SEMICOLON; }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:142:9: s2= STRING_LITERAL
                    {
                        s2=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_importModule783); if (state.failed) return importModule;

                        if ( state.backtracking==0 ) { importModule.setVersion(new QuotedLiteral(s2));
                            expecting=SEMICOLON; }

                    }
                    break;

                }


                SEMICOLON24=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_importModule810); if (state.failed) return importModule;

                if ( state.backtracking==0 ) { importModule.setEndToken(SEMICOLON24);
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return importModule;
    }
    // $ANTLR end "importModule"



    // $ANTLR start "importDeclaration"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:151:1: importDeclaration returns [Import importDeclaration] : IMPORT ( packagePath |) importElementList ;
    public Import importDeclaration() throws RecognitionException {
        Import importDeclaration = null;


        Token IMPORT25=null;
        ImportPath packagePath26 =null;

        ImportMemberOrTypeList importElementList27 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:152:5: ( IMPORT ( packagePath |) importElementList )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:152:7: IMPORT ( packagePath |) importElementList
            {
                IMPORT25=(Token)match(input,IMPORT,FOLLOW_IMPORT_in_importDeclaration839); if (state.failed) return importDeclaration;

                if ( state.backtracking==0 ) { importDeclaration = new Import(IMPORT25); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:154:7: ( packagePath |)
                int alt7=2;
                int LA7_0 = input.LA(1);

                if ( (LA7_0==LIDENTIFIER||LA7_0==UIDENTIFIER) ) {
                    alt7=1;
                }
                else if ( (LA7_0==LBRACE) ) {
                    alt7=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return importDeclaration;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 7, 0, input);

                    throw nvae;

                }
                switch (alt7) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:155:9: packagePath
                    {
                        pushFollow(FOLLOW_packagePath_in_importDeclaration867);
                        packagePath26=packagePath();

                        state._fsp--;
                        if (state.failed) return importDeclaration;

                        if ( state.backtracking==0 ) { importDeclaration.setImportPath(packagePath26); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:157:9: 
                    {
                        if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

                }


                pushFollow(FOLLOW_importElementList_in_importDeclaration903);
                importElementList27=importElementList();

                state._fsp--;
                if (state.failed) return importDeclaration;

                if ( state.backtracking==0 ) { importDeclaration.setImportMemberOrTypeList(importElementList27); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return importDeclaration;
    }
    // $ANTLR end "importDeclaration"



    // $ANTLR start "importElementList"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:164:1: importElementList returns [ImportMemberOrTypeList importMemberOrTypeList] : LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE ;
    public ImportMemberOrTypeList importElementList() throws RecognitionException {
        ImportMemberOrTypeList importMemberOrTypeList = null;


        Token c1=null;
        Token LBRACE28=null;
        Token RBRACE29=null;
        ImportMemberOrType ie1 =null;

        ImportMemberOrType ie2 =null;

        ImportWildcard iw =null;


        ImportMemberOrTypeList il=null;
        boolean wildcarded = false;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:167:5: ( LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:168:5: LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE
            {
                LBRACE28=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_importElementList945); if (state.failed) return importMemberOrTypeList;

                if ( state.backtracking==0 ) { il = new ImportMemberOrTypeList(LBRACE28);
                    importMemberOrTypeList = il; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:171:5: (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )?
                int alt10=3;
                int LA10_0 = input.LA(1);

                if ( (LA10_0==ALIAS||(LA10_0 >= ASSERT && LA10_0 <= ASSIGN)||(LA10_0 >= BACKTICK && LA10_0 <= BREAK)||(LA10_0 >= CHAR_LITERAL && LA10_0 <= CLASS_DEFINITION)||LA10_0==COMPILER_ANNOTATION||LA10_0==CONTINUE||(LA10_0 >= DECREMENT_OP && LA10_0 <= DIFFERENCE_OP)||LA10_0==DYNAMIC||(LA10_0 >= FLOAT_LITERAL && LA10_0 <= FUNCTION_MODIFIER)||(LA10_0 >= IF_CLAUSE && LA10_0 <= INTERFACE_DEFINITION)||LA10_0==IN_OP||(LA10_0 >= LBRACE && LA10_0 <= LBRACKET)||LA10_0==LIDENTIFIER||LA10_0==LPAREN||LA10_0==MODULE||LA10_0==NATURAL_LITERAL||(LA10_0 >= NOT_OP && LA10_0 <= OBJECT_DEFINITION)||(LA10_0 >= OUT && LA10_0 <= PACKAGE)||LA10_0==PRODUCT_OP||(LA10_0 >= RETURN && LA10_0 <= RPAREN)||(LA10_0 >= SEMICOLON && LA10_0 <= SMALLER_OP)||LA10_0==STRING_LITERAL||LA10_0==STRING_START||(LA10_0 >= SUM_OP && LA10_0 <= SWITCH_CLAUSE)||(LA10_0 >= THIS && LA10_0 <= UIDENTIFIER)||(LA10_0 >= VALUE_MODIFIER && LA10_0 <= WHILE_CLAUSE)) ) {
                    alt10=1;
                }
                else if ( (LA10_0==ELLIPSIS) ) {
                    alt10=2;
                }
                switch (alt10) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:172:7: ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )*
                    {
                        pushFollow(FOLLOW_importElement_in_importElementList968);
                        ie1=importElement();

                        state._fsp--;
                        if (state.failed) return importMemberOrTypeList;

                        if ( state.backtracking==0 ) { if (ie1!=null)
                            il.addImportMemberOrType(ie1); }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:175:7: (c1= COMMA (ie2= importElement |iw= importWildcard |) )*
                        loop9:
                        do {
                            int alt9=2;
                            int LA9_0 = input.LA(1);

                            if ( (LA9_0==COMMA) ) {
                                alt9=1;
                            }


                            switch (alt9) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:176:9: c1= COMMA (ie2= importElement |iw= importWildcard |)
                                {
                                    c1=(Token)match(input,COMMA,FOLLOW_COMMA_in_importElementList999); if (state.failed) return importMemberOrTypeList;

                                    if ( state.backtracking==0 ) { il.setEndToken(c1);
                                        if (wildcarded)
                                            displayRecognitionError(getTokenNames(),
                                                    new MismatchedTokenException(RBRACE, input)); }

                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:181:9: (ie2= importElement |iw= importWildcard |)
                                    int alt8=3;
                                    switch ( input.LA(1) ) {
                                        case ALIAS:
                                        case ASSERT:
                                        case ASSIGN:
                                        case BACKTICK:
                                        case BREAK:
                                        case CHAR_LITERAL:
                                        case CLASS_DEFINITION:
                                        case COMPILER_ANNOTATION:
                                        case CONTINUE:
                                        case DECREMENT_OP:
                                        case DIFFERENCE_OP:
                                        case DYNAMIC:
                                        case FLOAT_LITERAL:
                                        case FOR_CLAUSE:
                                        case FUNCTION_MODIFIER:
                                        case IF_CLAUSE:
                                        case IMPORT:
                                        case INCREMENT_OP:
                                        case INTERFACE_DEFINITION:
                                        case IN_OP:
                                        case LBRACE:
                                        case LBRACKET:
                                        case LIDENTIFIER:
                                        case LPAREN:
                                        case MODULE:
                                        case NATURAL_LITERAL:
                                        case NOT_OP:
                                        case OBJECT_DEFINITION:
                                        case OUT:
                                        case OUTER:
                                        case PACKAGE:
                                        case PRODUCT_OP:
                                        case RETURN:
                                        case RPAREN:
                                        case SEMICOLON:
                                        case SMALLER_OP:
                                        case STRING_LITERAL:
                                        case STRING_START:
                                        case SUM_OP:
                                        case SUPER:
                                        case SWITCH_CLAUSE:
                                        case THIS:
                                        case THROW:
                                        case TRY_CLAUSE:
                                        case TYPE_CONSTRAINT:
                                        case UIDENTIFIER:
                                        case VALUE_MODIFIER:
                                        case VERBATIM_STRING:
                                        case VOID_MODIFIER:
                                        case WHILE_CLAUSE:
                                        {
                                            alt8=1;
                                        }
                                        break;
                                        case ELLIPSIS:
                                        {
                                            alt8=2;
                                        }
                                        break;
                                        case COMMA:
                                        case RBRACE:
                                        {
                                            alt8=3;
                                        }
                                        break;
                                        default:
                                            if (state.backtracking>0) {state.failed=true; return importMemberOrTypeList;}
                                            NoViableAltException nvae =
                                                    new NoViableAltException("", 8, 0, input);

                                            throw nvae;

                                    }

                                    switch (alt8) {
                                        case 1 :
                                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:182:11: ie2= importElement
                                        {
                                            pushFollow(FOLLOW_importElement_in_importElementList1034);
                                            ie2=importElement();

                                            state._fsp--;
                                            if (state.failed) return importMemberOrTypeList;

                                            if ( state.backtracking==0 ) { if (ie2!=null)
                                                il.addImportMemberOrType(ie2);
                                                if (ie2!=null)
                                                    il.setEndToken(null); }

                                        }
                                        break;
                                        case 2 :
                                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:187:11: iw= importWildcard
                                        {
                                            pushFollow(FOLLOW_importWildcard_in_importElementList1062);
                                            iw=importWildcard();

                                            state._fsp--;
                                            if (state.failed) return importMemberOrTypeList;

                                            if ( state.backtracking==0 ) { wildcarded = true;
                                                if (iw!=null)
                                                    il.setImportWildcard(iw);
                                                if (iw!=null)
                                                    il.setEndToken(null); }

                                        }
                                        break;
                                        case 3 :
                                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:193:11: 
                                        {
                                            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                                    new MismatchedTokenException(ELLIPSIS, input)); }

                                        }
                                        break;

                                    }


                                }
                                break;

                                default :
                                    break loop9;
                            }
                        } while (true);


                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:197:7: iw= importWildcard
                    {
                        pushFollow(FOLLOW_importWildcard_in_importElementList1116);
                        iw=importWildcard();

                        state._fsp--;
                        if (state.failed) return importMemberOrTypeList;

                        if ( state.backtracking==0 ) { il.setImportWildcard(iw); }

                    }
                    break;

                }


                RBRACE29=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_importElementList1131); if (state.failed) return importMemberOrTypeList;

                if ( state.backtracking==0 ) { il.setEndToken(RBRACE29); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return importMemberOrTypeList;
    }
    // $ANTLR end "importElementList"



    // $ANTLR start "importElement"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:203:1: importElement returns [ImportMemberOrType importMemberOrType] : compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? ) ;
    public ImportMemberOrType importElement() throws RecognitionException {
        ImportMemberOrType importMemberOrType = null;


        Token SPECIFY30=null;
        Identifier in1 =null;

        Identifier in2 =null;

        ImportMemberOrTypeList iel2 =null;

        List<CompilerAnnotation> compilerAnnotations31 =null;


        Alias alias = null;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:205:5: ( compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:205:7: compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? )
            {
                pushFollow(FOLLOW_compilerAnnotations_in_importElement1167);
                compilerAnnotations31=compilerAnnotations();

                state._fsp--;
                if (state.failed) return importMemberOrType;

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:206:5: (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? )
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:206:7: in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )?
                {
                    pushFollow(FOLLOW_importName_in_importElement1177);
                    in1=importName();

                    state._fsp--;
                    if (state.failed) return importMemberOrType;

                    if ( state.backtracking==0 ) { importMemberOrType = new ImportMember(null);
                        importMemberOrType.setIdentifier(in1); }

                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:209:7: ( SPECIFY (in2= importName |) )?
                    int alt12=2;
                    int LA12_0 = input.LA(1);

                    if ( (LA12_0==SPECIFY) ) {
                        alt12=1;
                    }
                    switch (alt12) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:209:9: SPECIFY (in2= importName |)
                        {
                            SPECIFY30=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_importElement1196); if (state.failed) return importMemberOrType;

                            if ( state.backtracking==0 ) { alias = new Alias(SPECIFY30);
                                alias.setIdentifier(in1);
                                importMemberOrType.setAlias(alias);
                                importMemberOrType.setIdentifier(null); }

                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:214:9: (in2= importName |)
                            int alt11=2;
                            int LA11_0 = input.LA(1);

                            if ( (LA11_0==LIDENTIFIER||LA11_0==UIDENTIFIER) ) {
                                alt11=1;
                            }
                            else if ( (LA11_0==COMMA||LA11_0==LBRACE||LA11_0==RBRACE) ) {
                                alt11=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return importMemberOrType;}
                                NoViableAltException nvae =
                                        new NoViableAltException("", 11, 0, input);

                                throw nvae;

                            }
                            switch (alt11) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:215:11: in2= importName
                                {
                                    pushFollow(FOLLOW_importName_in_importElement1230);
                                    in2=importName();

                                    state._fsp--;
                                    if (state.failed) return importMemberOrType;

                                    if ( state.backtracking==0 ) { importMemberOrType.setIdentifier(in2); }

                                }
                                break;
                                case 2 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:217:11: 
                                {
                                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                            new MismatchedTokenException(in1.getToken().getType(), input)); }

                                }
                                break;

                            }


                        }
                        break;

                    }


                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:221:7: (iel2= importElementList )?
                    int alt13=2;
                    int LA13_0 = input.LA(1);

                    if ( (LA13_0==LBRACE) ) {
                        alt13=1;
                    }
                    switch (alt13) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:222:9: iel2= importElementList
                        {
                            pushFollow(FOLLOW_importElementList_in_importElement1294);
                            iel2=importElementList();

                            state._fsp--;
                            if (state.failed) return importMemberOrType;

                            if ( state.backtracking==0 ) { importMemberOrType.setImportMemberOrTypeList(iel2); }

                        }
                        break;

                    }


                }


                if ( state.backtracking==0 ) { if (importMemberOrType!=null)
                    importMemberOrType.getCompilerAnnotations().addAll(compilerAnnotations31); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return importMemberOrType;
    }
    // $ANTLR end "importElement"



    // $ANTLR start "importWildcard"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:230:1: importWildcard returns [ImportWildcard importWildcard] : ELLIPSIS ;
    public ImportWildcard importWildcard() throws RecognitionException {
        ImportWildcard importWildcard = null;


        Token ELLIPSIS32=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:231:5: ( ELLIPSIS )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:231:7: ELLIPSIS
            {
                ELLIPSIS32=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_importWildcard1346); if (state.failed) return importWildcard;

                if ( state.backtracking==0 ) { importWildcard = new ImportWildcard(ELLIPSIS32); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return importWildcard;
    }
    // $ANTLR end "importWildcard"



    // $ANTLR start "importName"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:235:1: importName returns [Identifier identifier] : ( memberName | typeName );
    public Identifier importName() throws RecognitionException {
        Identifier identifier = null;


        Identifier memberName33 =null;

        Identifier typeName34 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:236:5: ( memberName | typeName )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==LIDENTIFIER) ) {
                alt14=1;
            }
            else if ( (LA14_0==UIDENTIFIER) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                        new NoViableAltException("", 14, 0, input);

                throw nvae;

            }
            switch (alt14) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:236:7: memberName
                {
                    pushFollow(FOLLOW_memberName_in_importName1375);
                    memberName33=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =memberName33; }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:237:7: typeName
                {
                    pushFollow(FOLLOW_typeName_in_importName1385);
                    typeName34=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =typeName34; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "importName"



    // $ANTLR start "packagePath"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:240:1: packagePath returns [ImportPath importPath] : pn1= packageName (m= MEMBER_OP (pn2= packageName |) )* ;
    public ImportPath packagePath() throws RecognitionException {
        ImportPath importPath = null;


        Token m=null;
        Identifier pn1 =null;

        Identifier pn2 =null;


        importPath = new ImportPath(null);
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:242:5: (pn1= packageName (m= MEMBER_OP (pn2= packageName |) )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:242:7: pn1= packageName (m= MEMBER_OP (pn2= packageName |) )*
            {
                pushFollow(FOLLOW_packageName_in_packagePath1419);
                pn1=packageName();

                state._fsp--;
                if (state.failed) return importPath;

                if ( state.backtracking==0 ) { if (pn1!=null)
                    importPath.addIdentifier(pn1); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:245:7: (m= MEMBER_OP (pn2= packageName |) )*
                loop16:
                do {
                    int alt16=2;
                    int LA16_0 = input.LA(1);

                    if ( (LA16_0==MEMBER_OP) ) {
                        alt16=1;
                    }


                    switch (alt16) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:246:9: m= MEMBER_OP (pn2= packageName |)
                        {
                            m=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_packagePath1450); if (state.failed) return importPath;

                            if ( state.backtracking==0 ) { importPath.setEndToken(m); }

                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:248:9: (pn2= packageName |)
                            int alt15=2;
                            int LA15_0 = input.LA(1);

                            if ( (LA15_0==LIDENTIFIER||LA15_0==UIDENTIFIER) ) {
                                alt15=1;
                            }
                            else if ( (LA15_0==BACKTICK||LA15_0==CHAR_LITERAL||LA15_0==LBRACE||LA15_0==MEMBER_OP||LA15_0==SEMICOLON||LA15_0==STRING_LITERAL) ) {
                                alt15=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return importPath;}
                                NoViableAltException nvae =
                                        new NoViableAltException("", 15, 0, input);

                                throw nvae;

                            }
                            switch (alt15) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:249:11: pn2= packageName
                                {
                                    pushFollow(FOLLOW_packageName_in_packagePath1485);
                                    pn2=packageName();

                                    state._fsp--;
                                    if (state.failed) return importPath;

                                    if ( state.backtracking==0 ) { importPath.addIdentifier(pn2);
                                        importPath.setEndToken(null); }

                                }
                                break;
                                case 2 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:252:11: 
                                {
                                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                            new MismatchedTokenException(LIDENTIFIER, input)); }

                                }
                                break;

                            }


                        }
                        break;

                        default :
                            break loop16;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return importPath;
    }
    // $ANTLR end "packagePath"



    // $ANTLR start "packageName"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:258:1: packageName returns [Identifier identifier] : ( LIDENTIFIER | UIDENTIFIER );
    public Identifier packageName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER35=null;
        Token UIDENTIFIER36=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:259:5: ( LIDENTIFIER | UIDENTIFIER )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==LIDENTIFIER) ) {
                alt17=1;
            }
            else if ( (LA17_0==UIDENTIFIER) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                        new NoViableAltException("", 17, 0, input);

                throw nvae;

            }
            switch (alt17) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:259:7: LIDENTIFIER
                {
                    LIDENTIFIER35=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_packageName1550); if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER35);
                        LIDENTIFIER35.setType(PIDENTIFIER);}

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:262:7: UIDENTIFIER
                {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                            new MismatchedTokenException(LIDENTIFIER, input), 5001); }

                    UIDENTIFIER36=(Token)match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_packageName1574); if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = new Identifier(UIDENTIFIER36);
                        UIDENTIFIER36.setType(PIDENTIFIER);}

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "packageName"



    // $ANTLR start "typeName"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:269:1: typeName returns [Identifier identifier] : UIDENTIFIER ;
    public Identifier typeName() throws RecognitionException {
        Identifier identifier = null;


        Token UIDENTIFIER37=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:270:5: ( UIDENTIFIER )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:270:7: UIDENTIFIER
            {
                UIDENTIFIER37=(Token)match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_typeName1603); if (state.failed) return identifier;

                if ( state.backtracking==0 ) { identifier = new Identifier(UIDENTIFIER37); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "typeName"



    // $ANTLR start "annotationName"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:274:1: annotationName returns [Identifier identifier] : LIDENTIFIER ;
    public Identifier annotationName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER38=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:275:5: ( LIDENTIFIER )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:275:7: LIDENTIFIER
            {
                LIDENTIFIER38=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_annotationName1632); if (state.failed) return identifier;

                if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER38);
                    LIDENTIFIER38.setType(AIDENTIFIER); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "annotationName"



    // $ANTLR start "memberName"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:280:1: memberName returns [Identifier identifier] : LIDENTIFIER ;
    public Identifier memberName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER39=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:281:5: ( LIDENTIFIER )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:281:7: LIDENTIFIER
            {
                LIDENTIFIER39=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_memberName1661); if (state.failed) return identifier;

                if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER39); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "memberName"



    // $ANTLR start "memberNameDeclaration"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:285:1: memberNameDeclaration returns [Identifier identifier] : ( memberName | typeName );
    public Identifier memberNameDeclaration() throws RecognitionException {
        Identifier identifier = null;


        Identifier memberName40 =null;

        Identifier typeName41 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:286:5: ( memberName | typeName )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==LIDENTIFIER) ) {
                alt18=1;
            }
            else if ( (LA18_0==UIDENTIFIER) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                        new NoViableAltException("", 18, 0, input);

                throw nvae;

            }
            switch (alt18) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:286:7: memberName
                {
                    pushFollow(FOLLOW_memberName_in_memberNameDeclaration1694);
                    memberName40=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = memberName40; }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:287:7: typeName
                {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                            new MismatchedTokenException(LIDENTIFIER, input), 5001); }

                    pushFollow(FOLLOW_typeName_in_memberNameDeclaration1712);
                    typeName41=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = typeName41; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "memberNameDeclaration"



    // $ANTLR start "typeNameDeclaration"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:293:1: typeNameDeclaration returns [Identifier identifier] : ( typeName | memberName );
    public Identifier typeNameDeclaration() throws RecognitionException {
        Identifier identifier = null;


        Identifier typeName42 =null;

        Identifier memberName43 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:294:5: ( typeName | memberName )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==UIDENTIFIER) ) {
                alt19=1;
            }
            else if ( (LA19_0==LIDENTIFIER) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                        new NoViableAltException("", 19, 0, input);

                throw nvae;

            }
            switch (alt19) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:294:7: typeName
                {
                    pushFollow(FOLLOW_typeName_in_typeNameDeclaration1742);
                    typeName42=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = typeName42; }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:295:7: memberName
                {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                            new MismatchedTokenException(UIDENTIFIER, input), 5002); }

                    pushFollow(FOLLOW_memberName_in_typeNameDeclaration1760);
                    memberName43=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = memberName43; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "typeNameDeclaration"



    // $ANTLR start "objectDeclaration"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:301:1: objectDeclaration returns [ObjectDefinition declaration] : OBJECT_DEFINITION memberNameDeclaration ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) ;
    public ObjectDefinition objectDeclaration() throws RecognitionException {
        ObjectDefinition declaration = null;


        Token OBJECT_DEFINITION44=null;
        Token SEMICOLON49=null;
        Identifier memberNameDeclaration45 =null;

        ExtendedType extendedType46 =null;

        SatisfiedTypes satisfiedTypes47 =null;

        ClassBody classBody48 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:302:5: ( OBJECT_DEFINITION memberNameDeclaration ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:302:7: OBJECT_DEFINITION memberNameDeclaration ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON )
            {
                OBJECT_DEFINITION44=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_objectDeclaration1790); if (state.failed) return declaration;

                if ( state.backtracking==0 ) { declaration = new ObjectDefinition(OBJECT_DEFINITION44);
                    declaration.setType(new ValueModifier(null)); }

                pushFollow(FOLLOW_memberNameDeclaration_in_objectDeclaration1806);
                memberNameDeclaration45=memberNameDeclaration();

                state._fsp--;
                if (state.failed) return declaration;

                if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration45); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:307:7: ( extendedType )?
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0==EXTENDS) ) {
                    alt20=1;
                }
                switch (alt20) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:308:9: extendedType
                    {
                        pushFollow(FOLLOW_extendedType_in_objectDeclaration1833);
                        extendedType46=extendedType();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setExtendedType(extendedType46); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:311:7: ( satisfiedTypes )?
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==SATISFIES) ) {
                    alt21=1;
                }
                switch (alt21) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:312:9: satisfiedTypes
                    {
                        pushFollow(FOLLOW_satisfiedTypes_in_objectDeclaration1872);
                        satisfiedTypes47=satisfiedTypes();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setSatisfiedTypes(satisfiedTypes47); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:315:7: ( classBody | SEMICOLON )
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==LBRACE) ) {
                    alt22=1;
                }
                else if ( (LA22_0==SEMICOLON) ) {
                    alt22=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 22, 0, input);

                    throw nvae;

                }
                switch (alt22) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:316:9: classBody
                    {
                        pushFollow(FOLLOW_classBody_in_objectDeclaration1910);
                        classBody48=classBody();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setClassBody(classBody48); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:318:9: SEMICOLON
                    {
                        if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                new MismatchedTokenException(LBRACE, input)); }

                        SEMICOLON49=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_objectDeclaration1940); if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON49); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "objectDeclaration"



    // $ANTLR start "voidOrInferredMethodDeclaration"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:325:1: voidOrInferredMethodDeclaration returns [AnyMethod declaration] : ( VOID_MODIFIER | FUNCTION_MODIFIER ) memberNameDeclaration ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON ) ;
    public AnyMethod voidOrInferredMethodDeclaration() throws RecognitionException {
        AnyMethod declaration = null;


        Token VOID_MODIFIER50=null;
        Token FUNCTION_MODIFIER51=null;
        Token SEMICOLON58=null;
        Identifier memberNameDeclaration52 =null;

        TypeParameterList typeParameters53 =null;

        ParameterList parameters54 =null;

        TypeConstraintList typeConstraints55 =null;

        Block block56 =null;

        SpecifierExpression functionSpecifier57 =null;


        MethodDefinition def=null;
        MethodDeclaration dec=null;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:328:5: ( ( VOID_MODIFIER | FUNCTION_MODIFIER ) memberNameDeclaration ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:328:7: ( VOID_MODIFIER | FUNCTION_MODIFIER ) memberNameDeclaration ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON )
            {
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:328:7: ( VOID_MODIFIER | FUNCTION_MODIFIER )
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( (LA23_0==VOID_MODIFIER) ) {
                    alt23=1;
                }
                else if ( (LA23_0==FUNCTION_MODIFIER) ) {
                    alt23=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 23, 0, input);

                    throw nvae;

                }
                switch (alt23) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:329:9: VOID_MODIFIER
                    {
                        VOID_MODIFIER50=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodDeclaration1998); if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { VoidModifier vm = new VoidModifier(VOID_MODIFIER50);
                            def = new MethodDefinition(VOID_MODIFIER50);
                            dec = new MethodDeclaration(VOID_MODIFIER50);
                            def.setType(vm);
                            dec.setType(vm);
                            declaration = dec; }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:336:9: FUNCTION_MODIFIER
                    {
                        FUNCTION_MODIFIER51=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodDeclaration2018); if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { FunctionModifier fm = new FunctionModifier(FUNCTION_MODIFIER51);
                            def = new MethodDefinition(FUNCTION_MODIFIER51);
                            dec = new MethodDeclaration(FUNCTION_MODIFIER51);
                            def.setType(fm);
                            dec.setType(fm);
                            declaration = dec; }

                    }
                    break;

                }


                pushFollow(FOLLOW_memberNameDeclaration_in_voidOrInferredMethodDeclaration2044);
                memberNameDeclaration52=memberNameDeclaration();

                state._fsp--;
                if (state.failed) return declaration;

                if ( state.backtracking==0 ) { dec.setIdentifier(memberNameDeclaration52);
                    def.setIdentifier(memberNameDeclaration52); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:347:7: ( typeParameters )?
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==SMALLER_OP) ) {
                    alt24=1;
                }
                switch (alt24) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:348:9: typeParameters
                    {
                        pushFollow(FOLLOW_typeParameters_in_voidOrInferredMethodDeclaration2070);
                        typeParameters53=typeParameters();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters53);
                            dec.setTypeParameterList(typeParameters53); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:352:7: ( parameters )*
                loop25:
                do {
                    int alt25=2;
                    int LA25_0 = input.LA(1);

                    if ( (LA25_0==LPAREN) ) {
                        alt25=1;
                    }


                    switch (alt25) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:353:9: parameters
                        {
                            pushFollow(FOLLOW_parameters_in_voidOrInferredMethodDeclaration2115);
                            parameters54=parameters();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { def.addParameterList(parameters54);
                                dec.addParameterList(parameters54); }

                        }
                        break;

                        default :
                            break loop25;
                    }
                } while (true);


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:358:7: ( typeConstraints )?
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==COMPILER_ANNOTATION||LA26_0==TYPE_CONSTRAINT) ) {
                    alt26=1;
                }
                switch (alt26) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:359:9: typeConstraints
                    {
                        pushFollow(FOLLOW_typeConstraints_in_voidOrInferredMethodDeclaration2159);
                        typeConstraints55=typeConstraints();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints55);
                            dec.setTypeConstraintList(typeConstraints55); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:363:7: ( block | ( functionSpecifier )? SEMICOLON )
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( (LA28_0==LBRACE) ) {
                    alt28=1;
                }
                else if ( (LA28_0==COMPUTE||LA28_0==SEMICOLON||LA28_0==SPECIFY) ) {
                    alt28=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 28, 0, input);

                    throw nvae;

                }
                switch (alt28) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:364:9: block
                    {
                        if ( state.backtracking==0 ) { declaration = def; }

                        pushFollow(FOLLOW_block_in_voidOrInferredMethodDeclaration2207);
                        block56=block();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { def.setBlock(block56); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:368:9: ( functionSpecifier )? SEMICOLON
                    {
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:368:9: ( functionSpecifier )?
                        int alt27=2;
                        int LA27_0 = input.LA(1);

                        if ( (LA27_0==COMPUTE||LA27_0==SPECIFY) ) {
                            alt27=1;
                        }
                        switch (alt27) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:369:11: functionSpecifier
                            {
                                pushFollow(FOLLOW_functionSpecifier_in_voidOrInferredMethodDeclaration2249);
                                functionSpecifier57=functionSpecifier();

                                state._fsp--;
                                if (state.failed) return declaration;

                                if ( state.backtracking==0 ) { dec.setSpecifierExpression(functionSpecifier57); }

                            }
                            break;

                        }


                        if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                        SEMICOLON58=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_voidOrInferredMethodDeclaration2292); if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { expecting=-1; }

                        if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON58); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "voidOrInferredMethodDeclaration"



    // $ANTLR start "setterDeclaration"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:379:1: setterDeclaration returns [AttributeSetterDefinition declaration] : ASSIGN memberNameDeclaration ( block | ( functionSpecifier )? SEMICOLON ) ;
    public AttributeSetterDefinition setterDeclaration() throws RecognitionException {
        AttributeSetterDefinition declaration = null;


        Token ASSIGN59=null;
        Token SEMICOLON63=null;
        Identifier memberNameDeclaration60 =null;

        Block block61 =null;

        SpecifierExpression functionSpecifier62 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:380:5: ( ASSIGN memberNameDeclaration ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:380:7: ASSIGN memberNameDeclaration ( block | ( functionSpecifier )? SEMICOLON )
            {
                ASSIGN59=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_setterDeclaration2341); if (state.failed) return declaration;

                if ( state.backtracking==0 ) { declaration = new AttributeSetterDefinition(ASSIGN59);
                    declaration.setType( new VoidModifier(null) ); }

                pushFollow(FOLLOW_memberNameDeclaration_in_setterDeclaration2358);
                memberNameDeclaration60=memberNameDeclaration();

                state._fsp--;
                if (state.failed) return declaration;

                if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration60); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:385:7: ( block | ( functionSpecifier )? SEMICOLON )
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==LBRACE) ) {
                    alt30=1;
                }
                else if ( (LA30_0==COMPUTE||LA30_0==SEMICOLON||LA30_0==SPECIFY) ) {
                    alt30=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 30, 0, input);

                    throw nvae;

                }
                switch (alt30) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:386:9: block
                    {
                        pushFollow(FOLLOW_block_in_setterDeclaration2386);
                        block61=block();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setBlock(block61); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:388:9: ( functionSpecifier )? SEMICOLON
                    {
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:388:9: ( functionSpecifier )?
                        int alt29=2;
                        int LA29_0 = input.LA(1);

                        if ( (LA29_0==COMPUTE||LA29_0==SPECIFY) ) {
                            alt29=1;
                        }
                        switch (alt29) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:389:11: functionSpecifier
                            {
                                pushFollow(FOLLOW_functionSpecifier_in_setterDeclaration2418);
                                functionSpecifier62=functionSpecifier();

                                state._fsp--;
                                if (state.failed) return declaration;

                                if ( state.backtracking==0 ) { declaration.setSpecifierExpression(functionSpecifier62); }

                            }
                            break;

                        }


                        if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                        SEMICOLON63=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_setterDeclaration2461); if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON63);
                            expecting=-1; }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "setterDeclaration"



    // $ANTLR start "inferredAttributeDeclaration"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:399:1: inferredAttributeDeclaration returns [AnyAttribute declaration] : VALUE_MODIFIER memberNameDeclaration ( ( specifier | lazySpecifier )? SEMICOLON | block ) ;
    public AnyAttribute inferredAttributeDeclaration() throws RecognitionException {
        AnyAttribute declaration = null;


        Token VALUE_MODIFIER64=null;
        Token SEMICOLON68=null;
        Identifier memberNameDeclaration65 =null;

        SpecifierExpression specifier66 =null;

        SpecifierExpression lazySpecifier67 =null;

        Block block69 =null;


        AttributeGetterDefinition def=null;
        AttributeDeclaration dec=null;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:402:5: ( VALUE_MODIFIER memberNameDeclaration ( ( specifier | lazySpecifier )? SEMICOLON | block ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:402:7: VALUE_MODIFIER memberNameDeclaration ( ( specifier | lazySpecifier )? SEMICOLON | block )
            {
                VALUE_MODIFIER64=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_inferredAttributeDeclaration2509); if (state.failed) return declaration;

                if ( state.backtracking==0 ) { ValueModifier fm = new ValueModifier(VALUE_MODIFIER64);
                    def = new AttributeGetterDefinition(VALUE_MODIFIER64);
                    dec = new AttributeDeclaration(VALUE_MODIFIER64);
                    def.setType(fm);
                    dec.setType(fm);
                    declaration = dec; }

                pushFollow(FOLLOW_memberNameDeclaration_in_inferredAttributeDeclaration2526);
                memberNameDeclaration65=memberNameDeclaration();

                state._fsp--;
                if (state.failed) return declaration;

                if ( state.backtracking==0 ) { dec.setIdentifier(memberNameDeclaration65);
                    def.setIdentifier(memberNameDeclaration65); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:412:7: ( ( specifier | lazySpecifier )? SEMICOLON | block )
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==COMPUTE||LA32_0==SEMICOLON||LA32_0==SPECIFY) ) {
                    alt32=1;
                }
                else if ( (LA32_0==LBRACE) ) {
                    alt32=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 32, 0, input);

                    throw nvae;

                }
                switch (alt32) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:413:9: ( specifier | lazySpecifier )? SEMICOLON
                    {
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:413:9: ( specifier | lazySpecifier )?
                        int alt31=3;
                        int LA31_0 = input.LA(1);

                        if ( (LA31_0==SPECIFY) ) {
                            alt31=1;
                        }
                        else if ( (LA31_0==COMPUTE) ) {
                            alt31=2;
                        }
                        switch (alt31) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:414:11: specifier
                            {
                                pushFollow(FOLLOW_specifier_in_inferredAttributeDeclaration2565);
                                specifier66=specifier();

                                state._fsp--;
                                if (state.failed) return declaration;

                                if ( state.backtracking==0 ) { dec.setSpecifierOrInitializerExpression(specifier66); }

                            }
                            break;
                            case 2 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:417:11: lazySpecifier
                            {
                                pushFollow(FOLLOW_lazySpecifier_in_inferredAttributeDeclaration2600);
                                lazySpecifier67=lazySpecifier();

                                state._fsp--;
                                if (state.failed) return declaration;

                                if ( state.backtracking==0 ) { dec.setSpecifierOrInitializerExpression(lazySpecifier67); }

                            }
                            break;

                        }


                        if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                        SEMICOLON68=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_inferredAttributeDeclaration2643); if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON68);
                            expecting=-1; }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:425:9: block
                    {
                        if ( state.backtracking==0 ) { declaration = def; }

                        pushFollow(FOLLOW_block_in_inferredAttributeDeclaration2682);
                        block69=block();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { def.setBlock(block69); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "inferredAttributeDeclaration"



    // $ANTLR start "typedMethodOrAttributeDeclaration"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:431:1: typedMethodOrAttributeDeclaration returns [TypedDeclaration declaration] : ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block ) ;
    public TypedDeclaration typedMethodOrAttributeDeclaration() throws RecognitionException {
        TypedDeclaration declaration = null;


        Token s1=null;
        Token s2=null;
        Token DYNAMIC71=null;
        Block b1 =null;

        SpecifierExpression ms =null;

        SpecifierExpression as =null;

        SpecifierExpression ac =null;

        Block b2 =null;

        Type variadicType70 =null;

        Identifier memberNameDeclaration72 =null;

        TypeParameterList typeParameters73 =null;

        ParameterList parameters74 =null;

        TypeConstraintList typeConstraints75 =null;


        AttributeGetterDefinition adef=new AttributeGetterDefinition(null);
        AttributeDeclaration adec=new AttributeDeclaration(null);
        MethodDefinition mdef=new MethodDefinition(null);
        MethodDeclaration mdec=new MethodDeclaration(null);
        declaration = adec;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:437:5: ( ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:437:7: ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block )
            {
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:437:7: ( variadicType | DYNAMIC )
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( ((LA33_0 >= LBRACE && LA33_0 <= LBRACKET)||LA33_0==SMALLER_OP||LA33_0==UIDENTIFIER) ) {
                    alt33=1;
                }
                else if ( (LA33_0==DYNAMIC) ) {
                    alt33=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 33, 0, input);

                    throw nvae;

                }
                switch (alt33) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:437:9: variadicType
                    {
                        pushFollow(FOLLOW_variadicType_in_typedMethodOrAttributeDeclaration2732);
                        variadicType70=variadicType();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { adef.setType(variadicType70);
                            adec.setType(variadicType70);
                            mdef.setType(variadicType70);
                            mdec.setType(variadicType70); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:442:9: DYNAMIC
                    {
                        DYNAMIC71=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_typedMethodOrAttributeDeclaration2752); if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { DynamicModifier dm = new DynamicModifier(DYNAMIC71);
                            adef.setType(dm);
                            adec.setType(dm);
                            mdef.setType(dm);
                            mdec.setType(dm); }

                    }
                    break;

                }


                pushFollow(FOLLOW_memberNameDeclaration_in_typedMethodOrAttributeDeclaration2778);
                memberNameDeclaration72=memberNameDeclaration();

                state._fsp--;
                if (state.failed) return declaration;

                if ( state.backtracking==0 ) { adef.setIdentifier(memberNameDeclaration72);
                    adec.setIdentifier(memberNameDeclaration72);
                    mdef.setIdentifier(memberNameDeclaration72);
                    mdec.setIdentifier(memberNameDeclaration72); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:454:7: ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block )
                int alt40=3;
                switch ( input.LA(1) ) {
                    case LPAREN:
                    case SMALLER_OP:
                    {
                        alt40=1;
                    }
                    break;
                    case COMPUTE:
                    case SEMICOLON:
                    case SPECIFY:
                    {
                        alt40=2;
                    }
                    break;
                    case LBRACE:
                    {
                        alt40=3;
                    }
                    break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 40, 0, input);

                        throw nvae;

                }

                switch (alt40) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:455:9: ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON )
                    {
                        if ( state.backtracking==0 ) { declaration = mdec; }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:456:9: ( typeParameters )?
                        int alt34=2;
                        int LA34_0 = input.LA(1);

                        if ( (LA34_0==SMALLER_OP) ) {
                            alt34=1;
                        }
                        switch (alt34) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:457:11: typeParameters
                            {
                                pushFollow(FOLLOW_typeParameters_in_typedMethodOrAttributeDeclaration2827);
                                typeParameters73=typeParameters();

                                state._fsp--;
                                if (state.failed) return declaration;

                                if ( state.backtracking==0 ) { mdef.setTypeParameterList(typeParameters73);
                                    mdec.setTypeParameterList(typeParameters73); }

                            }
                            break;

                        }


                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:461:9: ( parameters )+
                        int cnt35=0;
                        loop35:
                        do {
                            int alt35=2;
                            int LA35_0 = input.LA(1);

                            if ( (LA35_0==LPAREN) ) {
                                alt35=1;
                            }


                            switch (alt35) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:462:11: parameters
                                {
                                    pushFollow(FOLLOW_parameters_in_typedMethodOrAttributeDeclaration2872);
                                    parameters74=parameters();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { mdef.addParameterList(parameters74);
                                        mdec.addParameterList(parameters74); }

                                }
                                break;

                                default :
                                    if ( cnt35 >= 1 ) break loop35;
                                    if (state.backtracking>0) {state.failed=true; return declaration;}
                                    EarlyExitException eee =
                                            new EarlyExitException(35, input);
                                    throw eee;
                            }
                            cnt35++;
                        } while (true);


                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:467:9: ( typeConstraints )?
                        int alt36=2;
                        int LA36_0 = input.LA(1);

                        if ( (LA36_0==COMPILER_ANNOTATION||LA36_0==TYPE_CONSTRAINT) ) {
                            alt36=1;
                        }
                        switch (alt36) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:468:11: typeConstraints
                            {
                                pushFollow(FOLLOW_typeConstraints_in_typedMethodOrAttributeDeclaration2927);
                                typeConstraints75=typeConstraints();

                                state._fsp--;
                                if (state.failed) return declaration;

                                if ( state.backtracking==0 ) { mdef.setTypeConstraintList(typeConstraints75);
                                    mdec.setTypeConstraintList(typeConstraints75); }

                            }
                            break;

                        }


                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:472:9: (b1= block | (ms= functionSpecifier )? s1= SEMICOLON )
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==LBRACE) ) {
                            alt38=1;
                        }
                        else if ( (LA38_0==COMPUTE||LA38_0==SEMICOLON||LA38_0==SPECIFY) ) {
                            alt38=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return declaration;}
                            NoViableAltException nvae =
                                    new NoViableAltException("", 38, 0, input);

                            throw nvae;

                        }
                        switch (alt38) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:473:11: b1= block
                            {
                                if ( state.backtracking==0 ) { declaration = mdef; }

                                pushFollow(FOLLOW_block_in_typedMethodOrAttributeDeclaration2987);
                                b1=block();

                                state._fsp--;
                                if (state.failed) return declaration;

                                if ( state.backtracking==0 ) { mdef.setBlock(b1); }

                            }
                            break;
                            case 2 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:477:11: (ms= functionSpecifier )? s1= SEMICOLON
                            {
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:477:11: (ms= functionSpecifier )?
                                int alt37=2;
                                int LA37_0 = input.LA(1);

                                if ( (LA37_0==COMPUTE||LA37_0==SPECIFY) ) {
                                    alt37=1;
                                }
                                switch (alt37) {
                                    case 1 :
                                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:478:13: ms= functionSpecifier
                                    {
                                        pushFollow(FOLLOW_functionSpecifier_in_typedMethodOrAttributeDeclaration3037);
                                        ms=functionSpecifier();

                                        state._fsp--;
                                        if (state.failed) return declaration;

                                        if ( state.backtracking==0 ) { mdec.setSpecifierExpression(ms); }

                                    }
                                    break;

                                }


                                if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                                s1=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration3089); if (state.failed) return declaration;

                                if ( state.backtracking==0 ) { declaration.setEndToken(s1);
                                    expecting=-1; }

                            }
                            break;

                        }


                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:487:9: (as= specifier |ac= lazySpecifier )? s2= SEMICOLON
                    {
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:487:9: (as= specifier |ac= lazySpecifier )?
                        int alt39=3;
                        int LA39_0 = input.LA(1);

                        if ( (LA39_0==SPECIFY) ) {
                            alt39=1;
                        }
                        else if ( (LA39_0==COMPUTE) ) {
                            alt39=2;
                        }
                        switch (alt39) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:488:11: as= specifier
                            {
                                pushFollow(FOLLOW_specifier_in_typedMethodOrAttributeDeclaration3144);
                                as=specifier();

                                state._fsp--;
                                if (state.failed) return declaration;

                                if ( state.backtracking==0 ) { adec.setSpecifierOrInitializerExpression(as); }

                            }
                            break;
                            case 2 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:491:11: ac= lazySpecifier
                            {
                                pushFollow(FOLLOW_lazySpecifier_in_typedMethodOrAttributeDeclaration3182);
                                ac=lazySpecifier();

                                state._fsp--;
                                if (state.failed) return declaration;

                                if ( state.backtracking==0 ) { adec.setSpecifierOrInitializerExpression(ac); }

                            }
                            break;

                        }


                        if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                        s2=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration3228); if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setEndToken(s2);
                            expecting=-1; }

                    }
                    break;
                    case 3 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:499:9: b2= block
                    {
                        if ( state.backtracking==0 ) { declaration = adef; }

                        pushFollow(FOLLOW_block_in_typedMethodOrAttributeDeclaration3269);
                        b2=block();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { adef.setBlock(b2); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "typedMethodOrAttributeDeclaration"



    // $ANTLR start "interfaceDeclaration"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:505:1: interfaceDeclaration returns [AnyInterface declaration] : INTERFACE_DEFINITION typeNameDeclaration ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON ) ;
    public AnyInterface interfaceDeclaration() throws RecognitionException {
        AnyInterface declaration = null;


        Token INTERFACE_DEFINITION76=null;
        Token SEMICOLON84=null;
        Identifier typeNameDeclaration77 =null;

        TypeParameterList typeParameters78 =null;

        CaseTypes caseTypes79 =null;

        SatisfiedTypes satisfiedTypes80 =null;

        TypeConstraintList typeConstraints81 =null;

        InterfaceBody interfaceBody82 =null;

        TypeSpecifier typeSpecifier83 =null;


        InterfaceDefinition def=null;
        InterfaceDeclaration dec=null;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:508:5: ( INTERFACE_DEFINITION typeNameDeclaration ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:508:7: INTERFACE_DEFINITION typeNameDeclaration ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON )
            {
                INTERFACE_DEFINITION76=(Token)match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_interfaceDeclaration3317); if (state.failed) return declaration;

                if ( state.backtracking==0 ) { def = new InterfaceDefinition(INTERFACE_DEFINITION76);
                    dec = new InterfaceDeclaration(INTERFACE_DEFINITION76);
                    declaration = dec; }

                pushFollow(FOLLOW_typeNameDeclaration_in_interfaceDeclaration3333);
                typeNameDeclaration77=typeNameDeclaration();

                state._fsp--;
                if (state.failed) return declaration;

                if ( state.backtracking==0 ) { dec.setIdentifier(typeNameDeclaration77);
                    def.setIdentifier(typeNameDeclaration77); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:515:7: ( typeParameters )?
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==SMALLER_OP) ) {
                    alt41=1;
                }
                switch (alt41) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:516:9: typeParameters
                    {
                        pushFollow(FOLLOW_typeParameters_in_interfaceDeclaration3360);
                        typeParameters78=typeParameters();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters78);
                            dec.setTypeParameterList(typeParameters78); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:520:7: ( caseTypes )?
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==CASE_TYPES) ) {
                    alt42=1;
                }
                switch (alt42) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:521:9: caseTypes
                    {
                        pushFollow(FOLLOW_caseTypes_in_interfaceDeclaration3398);
                        caseTypes79=caseTypes();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { def.setCaseTypes(caseTypes79);
                            dec.setCaseTypes(caseTypes79); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:530:7: ( satisfiedTypes )?
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==SATISFIES) ) {
                    alt43=1;
                }
                switch (alt43) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:531:9: satisfiedTypes
                    {
                        pushFollow(FOLLOW_satisfiedTypes_in_interfaceDeclaration3452);
                        satisfiedTypes80=satisfiedTypes();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { def.setSatisfiedTypes(satisfiedTypes80);
                            dec.setSatisfiedTypes(satisfiedTypes80); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:535:7: ( typeConstraints )?
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==COMPILER_ANNOTATION||LA44_0==TYPE_CONSTRAINT) ) {
                    alt44=1;
                }
                switch (alt44) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:536:9: typeConstraints
                    {
                        pushFollow(FOLLOW_typeConstraints_in_interfaceDeclaration3489);
                        typeConstraints81=typeConstraints();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints81);
                            dec.setTypeConstraintList(typeConstraints81); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:540:7: ( interfaceBody | ( typeSpecifier )? SEMICOLON )
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==LBRACE) ) {
                    alt46=1;
                }
                else if ( (LA46_0==COMPUTE||LA46_0==SEMICOLON||LA46_0==SPECIFY) ) {
                    alt46=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 46, 0, input);

                    throw nvae;

                }
                switch (alt46) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:541:9: interfaceBody
                    {
                        if ( state.backtracking==0 ) { declaration = def; }

                        pushFollow(FOLLOW_interfaceBody_in_interfaceDeclaration3536);
                        interfaceBody82=interfaceBody();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { def.setInterfaceBody(interfaceBody82); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:545:9: ( typeSpecifier )? SEMICOLON
                    {
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:545:9: ( typeSpecifier )?
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( (LA45_0==COMPUTE||LA45_0==SPECIFY) ) {
                            alt45=1;
                        }
                        switch (alt45) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:546:11: typeSpecifier
                            {
                                pushFollow(FOLLOW_typeSpecifier_in_interfaceDeclaration3577);
                                typeSpecifier83=typeSpecifier();

                                state._fsp--;
                                if (state.failed) return declaration;

                                if ( state.backtracking==0 ) { dec.setTypeSpecifier(typeSpecifier83); }

                            }
                            break;

                        }


                        if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                        SEMICOLON84=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interfaceDeclaration3621); if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON84);
                            expecting=-1; }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "interfaceDeclaration"



    // $ANTLR start "classDeclaration"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:556:1: classDeclaration returns [AnyClass declaration] : CLASS_DEFINITION typeNameDeclaration ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON ) ;
    public AnyClass classDeclaration() throws RecognitionException {
        AnyClass declaration = null;


        Token CLASS_DEFINITION85=null;
        Token SEMICOLON95=null;
        Identifier typeNameDeclaration86 =null;

        TypeParameterList typeParameters87 =null;

        ParameterList parameters88 =null;

        CaseTypes caseTypes89 =null;

        ExtendedType extendedType90 =null;

        SatisfiedTypes satisfiedTypes91 =null;

        TypeConstraintList typeConstraints92 =null;

        ClassBody classBody93 =null;

        ClassSpecifier classSpecifier94 =null;


        ClassDefinition def=null;
        ClassDeclaration dec=null;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:559:5: ( CLASS_DEFINITION typeNameDeclaration ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:559:7: CLASS_DEFINITION typeNameDeclaration ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON )
            {
                CLASS_DEFINITION85=(Token)match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_classDeclaration3669); if (state.failed) return declaration;

                if ( state.backtracking==0 ) { def = new ClassDefinition(CLASS_DEFINITION85);
                    dec = new ClassDeclaration(CLASS_DEFINITION85);
                    declaration = dec; }

                pushFollow(FOLLOW_typeNameDeclaration_in_classDeclaration3686);
                typeNameDeclaration86=typeNameDeclaration();

                state._fsp--;
                if (state.failed) return declaration;

                if ( state.backtracking==0 ) { dec.setIdentifier(typeNameDeclaration86);
                    def.setIdentifier(typeNameDeclaration86); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:566:7: ( typeParameters )?
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==SMALLER_OP) ) {
                    alt47=1;
                }
                switch (alt47) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:567:9: typeParameters
                    {
                        pushFollow(FOLLOW_typeParameters_in_classDeclaration3712);
                        typeParameters87=typeParameters();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters87);
                            dec.setTypeParameterList(typeParameters87); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:571:7: ( parameters )?
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==LPAREN) ) {
                    alt48=1;
                }
                switch (alt48) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:572:9: parameters
                    {
                        pushFollow(FOLLOW_parameters_in_classDeclaration3749);
                        parameters88=parameters();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { def.setParameterList(parameters88);
                            dec.setParameterList(parameters88); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:576:7: ( caseTypes )?
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==CASE_TYPES) ) {
                    alt49=1;
                }
                switch (alt49) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:577:9: caseTypes
                    {
                        pushFollow(FOLLOW_caseTypes_in_classDeclaration3786);
                        caseTypes89=caseTypes();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { def.setCaseTypes(caseTypes89);
                            dec.setCaseTypes(caseTypes89); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:582:7: ( extendedType )?
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==EXTENDS) ) {
                    alt50=1;
                }
                switch (alt50) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:583:9: extendedType
                    {
                        pushFollow(FOLLOW_extendedType_in_classDeclaration3832);
                        extendedType90=extendedType();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { def.setExtendedType(extendedType90);
                            dec.setExtendedType(extendedType90); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:587:7: ( satisfiedTypes )?
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==SATISFIES) ) {
                    alt51=1;
                }
                switch (alt51) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:588:9: satisfiedTypes
                    {
                        pushFollow(FOLLOW_satisfiedTypes_in_classDeclaration3870);
                        satisfiedTypes91=satisfiedTypes();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { def.setSatisfiedTypes(satisfiedTypes91);
                            dec.setSatisfiedTypes(satisfiedTypes91); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:592:7: ( typeConstraints )?
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==COMPILER_ANNOTATION||LA52_0==TYPE_CONSTRAINT) ) {
                    alt52=1;
                }
                switch (alt52) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:593:9: typeConstraints
                    {
                        pushFollow(FOLLOW_typeConstraints_in_classDeclaration3907);
                        typeConstraints92=typeConstraints();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints92);
                            dec.setTypeConstraintList(typeConstraints92); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:597:7: ( classBody | ( classSpecifier )? SEMICOLON )
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==LBRACE) ) {
                    alt54=1;
                }
                else if ( (LA54_0==COMPUTE||LA54_0==SEMICOLON||LA54_0==SPECIFY) ) {
                    alt54=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 54, 0, input);

                    throw nvae;

                }
                switch (alt54) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:598:9: classBody
                    {
                        if ( state.backtracking==0 ) { declaration = def; }

                        pushFollow(FOLLOW_classBody_in_classDeclaration3954);
                        classBody93=classBody();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { def.setClassBody(classBody93); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:602:9: ( classSpecifier )? SEMICOLON
                    {
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:602:9: ( classSpecifier )?
                        int alt53=2;
                        int LA53_0 = input.LA(1);

                        if ( (LA53_0==COMPUTE||LA53_0==SPECIFY) ) {
                            alt53=1;
                        }
                        switch (alt53) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:603:11: classSpecifier
                            {
                                pushFollow(FOLLOW_classSpecifier_in_classDeclaration3995);
                                classSpecifier94=classSpecifier();

                                state._fsp--;
                                if (state.failed) return declaration;

                                if ( state.backtracking==0 ) { dec.setClassSpecifier(classSpecifier94); }

                            }
                            break;

                        }


                        if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                        SEMICOLON95=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_classDeclaration4038); if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON95);
                            expecting=-1; }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "classDeclaration"



    // $ANTLR start "aliasDeclaration"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:613:1: aliasDeclaration returns [TypeAliasDeclaration declaration] : ALIAS typeNameDeclaration ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON ;
    public TypeAliasDeclaration aliasDeclaration() throws RecognitionException {
        TypeAliasDeclaration declaration = null;


        Token ALIAS96=null;
        Token SEMICOLON101=null;
        Identifier typeNameDeclaration97 =null;

        TypeParameterList typeParameters98 =null;

        TypeConstraintList typeConstraints99 =null;

        TypeSpecifier typeSpecifier100 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:614:5: ( ALIAS typeNameDeclaration ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:614:7: ALIAS typeNameDeclaration ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON
            {
                ALIAS96=(Token)match(input,ALIAS,FOLLOW_ALIAS_in_aliasDeclaration4077); if (state.failed) return declaration;

                if ( state.backtracking==0 ) { declaration = new TypeAliasDeclaration(ALIAS96);}

                pushFollow(FOLLOW_typeNameDeclaration_in_aliasDeclaration4093);
                typeNameDeclaration97=typeNameDeclaration();

                state._fsp--;
                if (state.failed) return declaration;

                if ( state.backtracking==0 ) { declaration.setIdentifier(typeNameDeclaration97); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:618:7: ( typeParameters )?
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==SMALLER_OP) ) {
                    alt55=1;
                }
                switch (alt55) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:619:9: typeParameters
                    {
                        pushFollow(FOLLOW_typeParameters_in_aliasDeclaration4120);
                        typeParameters98=typeParameters();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setTypeParameterList(typeParameters98); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:622:7: ( typeConstraints )?
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==COMPILER_ANNOTATION||LA56_0==TYPE_CONSTRAINT) ) {
                    alt56=1;
                }
                switch (alt56) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:623:9: typeConstraints
                    {
                        pushFollow(FOLLOW_typeConstraints_in_aliasDeclaration4158);
                        typeConstraints99=typeConstraints();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setTypeConstraintList(typeConstraints99); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:626:7: ( typeSpecifier )?
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==COMPUTE||LA57_0==SPECIFY) ) {
                    alt57=1;
                }
                switch (alt57) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:627:9: typeSpecifier
                    {
                        pushFollow(FOLLOW_typeSpecifier_in_aliasDeclaration4195);
                        typeSpecifier100=typeSpecifier();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setTypeSpecifier(typeSpecifier100); }

                    }
                    break;

                }


                if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                SEMICOLON101=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_aliasDeclaration4230); if (state.failed) return declaration;

                if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON101);
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "aliasDeclaration"



    // $ANTLR start "assertion"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:636:1: assertion returns [Assertion assertion] : annotations ASSERT conditions SEMICOLON ;
    public Assertion assertion() throws RecognitionException {
        Assertion assertion = null;


        Token ASSERT102=null;
        Token SEMICOLON105=null;
        AnnotationList annotations103 =null;

        ConditionList conditions104 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:637:5: ( annotations ASSERT conditions SEMICOLON )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:637:7: annotations ASSERT conditions SEMICOLON
            {
                pushFollow(FOLLOW_annotations_in_assertion4259);
                annotations103=annotations();

                state._fsp--;
                if (state.failed) return assertion;

                ASSERT102=(Token)match(input,ASSERT,FOLLOW_ASSERT_in_assertion4267); if (state.failed) return assertion;

                if ( state.backtracking==0 ) { assertion = new Assertion(ASSERT102);
                    assertion.setAnnotationList(annotations103); }

                pushFollow(FOLLOW_conditions_in_assertion4283);
                conditions104=conditions();

                state._fsp--;
                if (state.failed) return assertion;

                if ( state.backtracking==0 ) { assertion.setConditionList(conditions104); }

                if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                SEMICOLON105=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_assertion4307); if (state.failed) return assertion;

                if ( state.backtracking==0 ) { assertion.setEndToken(SEMICOLON105);
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return assertion;
    }
    // $ANTLR end "assertion"



    // $ANTLR start "block"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:649:1: block returns [Block block] : LBRACE ( declarationOrStatement )* RBRACE ;
    public Block block() throws RecognitionException {
        Block block = null;


        Token LBRACE106=null;
        Token RBRACE108=null;
        Statement declarationOrStatement107 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:650:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:650:7: LBRACE ( declarationOrStatement )* RBRACE
            {
                LBRACE106=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_block4336); if (state.failed) return block;

                if ( state.backtracking==0 ) { block = new Block(LBRACE106); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:652:7: ( declarationOrStatement )*
                loop58:
                do {
                    int alt58=2;
                    int LA58_0 = input.LA(1);

                    if ( (LA58_0==ALIAS||(LA58_0 >= ASSERT && LA58_0 <= ASSIGN)||(LA58_0 >= BACKTICK && LA58_0 <= BREAK)||(LA58_0 >= CHAR_LITERAL && LA58_0 <= CLASS_DEFINITION)||LA58_0==COMPILER_ANNOTATION||LA58_0==CONTINUE||(LA58_0 >= DECREMENT_OP && LA58_0 <= DIFFERENCE_OP)||LA58_0==DYNAMIC||(LA58_0 >= FLOAT_LITERAL && LA58_0 <= FUNCTION_MODIFIER)||(LA58_0 >= IF_CLAUSE && LA58_0 <= INTERFACE_DEFINITION)||LA58_0==IN_OP||(LA58_0 >= LBRACE && LA58_0 <= LBRACKET)||LA58_0==LIDENTIFIER||LA58_0==LPAREN||LA58_0==MODULE||LA58_0==NATURAL_LITERAL||(LA58_0 >= NOT_OP && LA58_0 <= OBJECT_DEFINITION)||(LA58_0 >= OUT && LA58_0 <= PACKAGE)||LA58_0==PRODUCT_OP||(LA58_0 >= RETURN && LA58_0 <= RPAREN)||(LA58_0 >= SEMICOLON && LA58_0 <= SMALLER_OP)||LA58_0==STRING_LITERAL||LA58_0==STRING_START||(LA58_0 >= SUM_OP && LA58_0 <= SWITCH_CLAUSE)||(LA58_0 >= THIS && LA58_0 <= UIDENTIFIER)||(LA58_0 >= VALUE_MODIFIER && LA58_0 <= WHILE_CLAUSE)) ) {
                        alt58=1;
                    }


                    switch (alt58) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:653:9: declarationOrStatement
                        {
                            pushFollow(FOLLOW_declarationOrStatement_in_block4363);
                            declarationOrStatement107=declarationOrStatement();

                            state._fsp--;
                            if (state.failed) return block;

                            if ( state.backtracking==0 ) { if (declarationOrStatement107!=null)
                                block.addStatement(declarationOrStatement107); }

                        }
                        break;

                        default :
                            break loop58;
                    }
                } while (true);


                RBRACE108=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_block4390); if (state.failed) return block;

                if ( state.backtracking==0 ) { block.setEndToken(RBRACE108); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "block"



    // $ANTLR start "interfaceBody"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:665:1: interfaceBody returns [InterfaceBody interfaceBody] : LBRACE ( declarationOrStatement )* RBRACE ;
    public InterfaceBody interfaceBody() throws RecognitionException {
        InterfaceBody interfaceBody = null;


        Token LBRACE109=null;
        Token RBRACE111=null;
        Statement declarationOrStatement110 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:666:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:666:7: LBRACE ( declarationOrStatement )* RBRACE
            {
                LBRACE109=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_interfaceBody4423); if (state.failed) return interfaceBody;

                if ( state.backtracking==0 ) { interfaceBody = new InterfaceBody(LBRACE109); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:668:7: ( declarationOrStatement )*
                loop59:
                do {
                    int alt59=2;
                    int LA59_0 = input.LA(1);

                    if ( (LA59_0==ALIAS||(LA59_0 >= ASSERT && LA59_0 <= ASSIGN)||(LA59_0 >= BACKTICK && LA59_0 <= BREAK)||(LA59_0 >= CHAR_LITERAL && LA59_0 <= CLASS_DEFINITION)||LA59_0==COMPILER_ANNOTATION||LA59_0==CONTINUE||(LA59_0 >= DECREMENT_OP && LA59_0 <= DIFFERENCE_OP)||LA59_0==DYNAMIC||(LA59_0 >= FLOAT_LITERAL && LA59_0 <= FUNCTION_MODIFIER)||(LA59_0 >= IF_CLAUSE && LA59_0 <= INTERFACE_DEFINITION)||LA59_0==IN_OP||(LA59_0 >= LBRACE && LA59_0 <= LBRACKET)||LA59_0==LIDENTIFIER||LA59_0==LPAREN||LA59_0==MODULE||LA59_0==NATURAL_LITERAL||(LA59_0 >= NOT_OP && LA59_0 <= OBJECT_DEFINITION)||(LA59_0 >= OUT && LA59_0 <= PACKAGE)||LA59_0==PRODUCT_OP||(LA59_0 >= RETURN && LA59_0 <= RPAREN)||(LA59_0 >= SEMICOLON && LA59_0 <= SMALLER_OP)||LA59_0==STRING_LITERAL||LA59_0==STRING_START||(LA59_0 >= SUM_OP && LA59_0 <= SWITCH_CLAUSE)||(LA59_0 >= THIS && LA59_0 <= UIDENTIFIER)||(LA59_0 >= VALUE_MODIFIER && LA59_0 <= WHILE_CLAUSE)) ) {
                        alt59=1;
                    }


                    switch (alt59) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:669:9: declarationOrStatement
                        {
                            pushFollow(FOLLOW_declarationOrStatement_in_interfaceBody4450);
                            declarationOrStatement110=declarationOrStatement();

                            state._fsp--;
                            if (state.failed) return interfaceBody;

                            if ( state.backtracking==0 ) { if (declarationOrStatement110!=null)
                                interfaceBody.addStatement(declarationOrStatement110); }

                        }
                        break;

                        default :
                            break loop59;
                    }
                } while (true);


                RBRACE111=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_interfaceBody4477); if (state.failed) return interfaceBody;

                if ( state.backtracking==0 ) { interfaceBody.setEndToken(RBRACE111); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return interfaceBody;
    }
    // $ANTLR end "interfaceBody"



    // $ANTLR start "classBody"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:677:1: classBody returns [ClassBody classBody] : LBRACE ( declarationOrStatement )* RBRACE ;
    public ClassBody classBody() throws RecognitionException {
        ClassBody classBody = null;


        Token LBRACE112=null;
        Token RBRACE114=null;
        Statement declarationOrStatement113 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:678:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:678:7: LBRACE ( declarationOrStatement )* RBRACE
            {
                LBRACE112=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_classBody4506); if (state.failed) return classBody;

                if ( state.backtracking==0 ) { classBody = new ClassBody(LBRACE112); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:680:7: ( declarationOrStatement )*
                loop60:
                do {
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==ALIAS||(LA60_0 >= ASSERT && LA60_0 <= ASSIGN)||(LA60_0 >= BACKTICK && LA60_0 <= BREAK)||(LA60_0 >= CHAR_LITERAL && LA60_0 <= CLASS_DEFINITION)||LA60_0==COMPILER_ANNOTATION||LA60_0==CONTINUE||(LA60_0 >= DECREMENT_OP && LA60_0 <= DIFFERENCE_OP)||LA60_0==DYNAMIC||(LA60_0 >= FLOAT_LITERAL && LA60_0 <= FUNCTION_MODIFIER)||(LA60_0 >= IF_CLAUSE && LA60_0 <= INTERFACE_DEFINITION)||LA60_0==IN_OP||(LA60_0 >= LBRACE && LA60_0 <= LBRACKET)||LA60_0==LIDENTIFIER||LA60_0==LPAREN||LA60_0==MODULE||LA60_0==NATURAL_LITERAL||(LA60_0 >= NOT_OP && LA60_0 <= OBJECT_DEFINITION)||(LA60_0 >= OUT && LA60_0 <= PACKAGE)||LA60_0==PRODUCT_OP||(LA60_0 >= RETURN && LA60_0 <= RPAREN)||(LA60_0 >= SEMICOLON && LA60_0 <= SMALLER_OP)||LA60_0==STRING_LITERAL||LA60_0==STRING_START||(LA60_0 >= SUM_OP && LA60_0 <= SWITCH_CLAUSE)||(LA60_0 >= THIS && LA60_0 <= UIDENTIFIER)||(LA60_0 >= VALUE_MODIFIER && LA60_0 <= WHILE_CLAUSE)) ) {
                        alt60=1;
                    }


                    switch (alt60) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:681:9: declarationOrStatement
                        {
                            pushFollow(FOLLOW_declarationOrStatement_in_classBody4532);
                            declarationOrStatement113=declarationOrStatement();

                            state._fsp--;
                            if (state.failed) return classBody;

                            if ( state.backtracking==0 ) { if (declarationOrStatement113!=null)
                                classBody.addStatement(declarationOrStatement113); }

                        }
                        break;

                        default :
                            break loop60;
                    }
                } while (true);


                RBRACE114=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_classBody4559); if (state.failed) return classBody;

                if ( state.backtracking==0 ) { classBody.setEndToken(RBRACE114); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return classBody;
    }
    // $ANTLR end "classBody"



    // $ANTLR start "extendedType"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:689:1: extendedType returns [ExtendedType extendedType] : EXTENDS ci= classInstantiation ;
    public ExtendedType extendedType() throws RecognitionException {
        ExtendedType extendedType = null;


        Token EXTENDS115=null;
        CeylonParser.classInstantiation_return ci =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:690:5: ( EXTENDS ci= classInstantiation )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:690:7: EXTENDS ci= classInstantiation
            {
                EXTENDS115=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_extendedType4588); if (state.failed) return extendedType;

                if ( state.backtracking==0 ) { extendedType = new ExtendedType(EXTENDS115); }

                pushFollow(FOLLOW_classInstantiation_in_extendedType4600);
                ci=classInstantiation();

                state._fsp--;
                if (state.failed) return extendedType;

                if ( state.backtracking==0 ) { extendedType.setType((ci!=null?ci.type:null));
                    extendedType.setInvocationExpression((ci!=null?ci.invocationExpression:null)); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return extendedType;
    }
    // $ANTLR end "extendedType"



    // $ANTLR start "classSpecifier"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:696:1: classSpecifier returns [ClassSpecifier classSpecifier] : ( COMPUTE | SPECIFY ) ci= classInstantiation ;
    public ClassSpecifier classSpecifier() throws RecognitionException {
        ClassSpecifier classSpecifier = null;


        Token COMPUTE116=null;
        Token SPECIFY117=null;
        CeylonParser.classInstantiation_return ci =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:697:5: ( ( COMPUTE | SPECIFY ) ci= classInstantiation )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:697:7: ( COMPUTE | SPECIFY ) ci= classInstantiation
            {
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:697:7: ( COMPUTE | SPECIFY )
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==COMPUTE) ) {
                    alt61=1;
                }
                else if ( (LA61_0==SPECIFY) ) {
                    alt61=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return classSpecifier;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 61, 0, input);

                    throw nvae;

                }
                switch (alt61) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:698:9: COMPUTE
                    {
                        COMPUTE116=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_classSpecifier4639); if (state.failed) return classSpecifier;

                        if ( state.backtracking==0 ) { classSpecifier = new ClassSpecifier(COMPUTE116); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:701:9: SPECIFY
                    {
                        SPECIFY117=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_classSpecifier4668); if (state.failed) return classSpecifier;

                        if ( state.backtracking==0 ) { classSpecifier = new ClassSpecifier(SPECIFY117); }

                    }
                    break;

                }


                pushFollow(FOLLOW_classInstantiation_in_classSpecifier4697);
                ci=classInstantiation();

                state._fsp--;
                if (state.failed) return classSpecifier;

                if ( state.backtracking==0 ) { classSpecifier.setType((ci!=null?ci.type:null));
                    classSpecifier.setInvocationExpression((ci!=null?ci.invocationExpression:null)); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return classSpecifier;
    }
    // $ANTLR end "classSpecifier"


    public static class classInstantiation_return extends ParserRuleReturnScope {
        public SimpleType type;
        public InvocationExpression invocationExpression;
    };


    // $ANTLR start "classInstantiation"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:709:1: classInstantiation returns [SimpleType type, InvocationExpression invocationExpression] : (t1= typeNameWithArguments | SUPER MEMBER_OP t2= typeNameWithArguments ) ( positionalArguments )? ;
    public CeylonParser.classInstantiation_return classInstantiation() throws RecognitionException {
        CeylonParser.classInstantiation_return retval = new CeylonParser.classInstantiation_return();
        retval.start = input.LT(1);


        Token SUPER118=null;
        CeylonParser.typeNameWithArguments_return t1 =null;

        CeylonParser.typeNameWithArguments_return t2 =null;

        PositionalArgumentList positionalArguments119 =null;


        Primary p=null;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:711:5: ( (t1= typeNameWithArguments | SUPER MEMBER_OP t2= typeNameWithArguments ) ( positionalArguments )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:711:7: (t1= typeNameWithArguments | SUPER MEMBER_OP t2= typeNameWithArguments ) ( positionalArguments )?
            {
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:711:7: (t1= typeNameWithArguments | SUPER MEMBER_OP t2= typeNameWithArguments )
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==UIDENTIFIER) ) {
                    alt62=1;
                }
                else if ( (LA62_0==SUPER) ) {
                    alt62=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 62, 0, input);

                    throw nvae;

                }
                switch (alt62) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:712:9: t1= typeNameWithArguments
                    {
                        pushFollow(FOLLOW_typeNameWithArguments_in_classInstantiation4747);
                        t1=typeNameWithArguments();

                        state._fsp--;
                        if (state.failed) return retval;

                        if ( state.backtracking==0 ) { BaseType bt = new BaseType(null);
                            bt.setIdentifier((t1!=null?t1.identifier:null));
                            if ((t1!=null?t1.typeArgumentList:null)!=null)
                                bt.setTypeArgumentList((t1!=null?t1.typeArgumentList:null));
                            retval.type =bt;
                            ExtendedTypeExpression ete = new ExtendedTypeExpression(null);
                            ete.setExtendedType(retval.type);
                            p = ete; }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:721:9: SUPER MEMBER_OP t2= typeNameWithArguments
                    {
                        SUPER118=(Token)match(input,SUPER,FOLLOW_SUPER_in_classInstantiation4767); if (state.failed) return retval;

                        match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_classInstantiation4769); if (state.failed) return retval;

                        pushFollow(FOLLOW_typeNameWithArguments_in_classInstantiation4782);
                        t2=typeNameWithArguments();

                        state._fsp--;
                        if (state.failed) return retval;

                        if ( state.backtracking==0 ) { QualifiedType qt=new QualifiedType(null);
                            SuperType st = new SuperType(SUPER118);
                            qt.setOuterType(st);
                            qt.setIdentifier((t2!=null?t2.identifier:null));
                            if ((t2!=null?t2.typeArgumentList:null)!=null)
                                qt.setTypeArgumentList((t2!=null?t2.typeArgumentList:null));
                            retval.type =qt;
                            ExtendedTypeExpression ete = new ExtendedTypeExpression(null);
                            ete.setExtendedType(retval.type);
                            p = ete; }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:734:7: ( positionalArguments )?
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==LPAREN) ) {
                    alt63=1;
                }
                switch (alt63) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:735:9: positionalArguments
                    {
                        pushFollow(FOLLOW_positionalArguments_in_classInstantiation4819);
                        positionalArguments119=positionalArguments();

                        state._fsp--;
                        if (state.failed) return retval;

                        if ( state.backtracking==0 ) { InvocationExpression ie = new InvocationExpression(null);
                            ie.setPrimary(p);
                            ie.setPositionalArgumentList(positionalArguments119);
                            retval.invocationExpression =ie;
                            p = ie; }

                    }
                    break;

                }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "classInstantiation"



    // $ANTLR start "satisfiedTypes"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:751:1: satisfiedTypes returns [SatisfiedTypes satisfiedTypes] : SATISFIES (t1= abbreviatedType ) (i= INTERSECTION_OP (t2= abbreviatedType ) )* ;
    public SatisfiedTypes satisfiedTypes() throws RecognitionException {
        SatisfiedTypes satisfiedTypes = null;


        Token i=null;
        Token SATISFIES120=null;
        StaticType t1 =null;

        StaticType t2 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:752:5: ( SATISFIES (t1= abbreviatedType ) (i= INTERSECTION_OP (t2= abbreviatedType ) )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:752:7: SATISFIES (t1= abbreviatedType ) (i= INTERSECTION_OP (t2= abbreviatedType ) )*
            {
                SATISFIES120=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiedTypes4869); if (state.failed) return satisfiedTypes;

                if ( state.backtracking==0 ) { satisfiedTypes = new SatisfiedTypes(SATISFIES120); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:754:7: (t1= abbreviatedType )
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:755:9: t1= abbreviatedType
                {
                    pushFollow(FOLLOW_abbreviatedType_in_satisfiedTypes4899);
                    t1=abbreviatedType();

                    state._fsp--;
                    if (state.failed) return satisfiedTypes;

                    if ( state.backtracking==0 ) { if (t1!=null) satisfiedTypes.addType(t1); }

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:758:7: (i= INTERSECTION_OP (t2= abbreviatedType ) )*
                loop64:
                do {
                    int alt64=2;
                    int LA64_0 = input.LA(1);

                    if ( (LA64_0==INTERSECTION_OP) ) {
                        alt64=1;
                    }


                    switch (alt64) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:759:9: i= INTERSECTION_OP (t2= abbreviatedType )
                        {
                            i=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_satisfiedTypes4938); if (state.failed) return satisfiedTypes;

                            if ( state.backtracking==0 ) { satisfiedTypes.setEndToken(i); }

                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:761:9: (t2= abbreviatedType )
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:762:11: t2= abbreviatedType
                            {
                                pushFollow(FOLLOW_abbreviatedType_in_satisfiedTypes4972);
                                t2=abbreviatedType();

                                state._fsp--;
                                if (state.failed) return satisfiedTypes;

                                if ( state.backtracking==0 ) { if (t2!=null) {
                                    satisfiedTypes.addType(t2);
                                    satisfiedTypes.setEndToken(null); } }

                            }


                        }
                        break;

                        default :
                            break loop64;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return satisfiedTypes;
    }
    // $ANTLR end "satisfiedTypes"



    // $ANTLR start "caseTypes"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:770:1: caseTypes returns [CaseTypes caseTypes] : CASE_TYPES ct1= caseType (u= UNION_OP (ct2= caseType ) )* ;
    public CaseTypes caseTypes() throws RecognitionException {
        CaseTypes caseTypes = null;


        Token u=null;
        Token CASE_TYPES121=null;
        CeylonParser.caseType_return ct1 =null;

        CeylonParser.caseType_return ct2 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:771:5: ( CASE_TYPES ct1= caseType (u= UNION_OP (ct2= caseType ) )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:771:7: CASE_TYPES ct1= caseType (u= UNION_OP (ct2= caseType ) )*
            {
                CASE_TYPES121=(Token)match(input,CASE_TYPES,FOLLOW_CASE_TYPES_in_caseTypes5024); if (state.failed) return caseTypes;

                if ( state.backtracking==0 ) { caseTypes = new CaseTypes(CASE_TYPES121); }

                pushFollow(FOLLOW_caseType_in_caseTypes5042);
                ct1=caseType();

                state._fsp--;
                if (state.failed) return caseTypes;

                if ( state.backtracking==0 ) { if ((ct1!=null?ct1.type:null)!=null) caseTypes.addType((ct1!=null?ct1.type:null));
                    if ((ct1!=null?ct1.instance:null)!=null) caseTypes.addBaseMemberExpression((ct1!=null?ct1.instance:null)); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:776:7: (u= UNION_OP (ct2= caseType ) )*
                loop65:
                do {
                    int alt65=2;
                    int LA65_0 = input.LA(1);

                    if ( (LA65_0==UNION_OP) ) {
                        alt65=1;
                    }


                    switch (alt65) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:777:9: u= UNION_OP (ct2= caseType )
                        {
                            u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_caseTypes5071); if (state.failed) return caseTypes;

                            if ( state.backtracking==0 ) { caseTypes.setEndToken(u); }

                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:779:9: (ct2= caseType )
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:780:11: ct2= caseType
                            {
                                pushFollow(FOLLOW_caseType_in_caseTypes5106);
                                ct2=caseType();

                                state._fsp--;
                                if (state.failed) return caseTypes;

                                if ( state.backtracking==0 ) { if ((ct2!=null?ct2.type:null)!=null) caseTypes.addType((ct2!=null?ct2.type:null));
                                    if ((ct2!=null?ct2.instance:null)!=null) caseTypes.addBaseMemberExpression((ct2!=null?ct2.instance:null));
                                    if ((ct2!=null?ct2.type:null)!=null||(ct2!=null?ct2.instance:null)!=null) caseTypes.setEndToken(null); }

                            }


                        }
                        break;

                        default :
                            break loop65;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return caseTypes;
    }
    // $ANTLR end "caseTypes"


    public static class caseType_return extends ParserRuleReturnScope {
        public StaticType type;
        public BaseMemberExpression instance;
    };


    // $ANTLR start "caseType"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:788:1: caseType returns [StaticType type, BaseMemberExpression instance] : (t= abbreviatedType | memberName );
    public CeylonParser.caseType_return caseType() throws RecognitionException {
        CeylonParser.caseType_return retval = new CeylonParser.caseType_return();
        retval.start = input.LT(1);


        StaticType t =null;

        Identifier memberName122 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:789:5: (t= abbreviatedType | memberName )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( ((LA66_0 >= LBRACE && LA66_0 <= LBRACKET)||LA66_0==SMALLER_OP||LA66_0==UIDENTIFIER) ) {
                alt66=1;
            }
            else if ( (LA66_0==LIDENTIFIER) ) {
                alt66=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                        new NoViableAltException("", 66, 0, input);

                throw nvae;

            }
            switch (alt66) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:789:7: t= abbreviatedType
                {
                    pushFollow(FOLLOW_abbreviatedType_in_caseType5160);
                    t=abbreviatedType();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =t;}

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:791:7: memberName
                {
                    pushFollow(FOLLOW_memberName_in_caseType5177);
                    memberName122=memberName();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.instance = new BaseMemberExpression(null);
                        retval.instance.setIdentifier(memberName122);
                        retval.instance.setTypeArguments( new InferredTypeArguments(null) ); }

                }
                break;

            }
            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "caseType"



    // $ANTLR start "abstractedType"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:799:1: abstractedType returns [AbstractedType abstractedType] : ABSTRACTED_TYPE abbreviatedType ;
    public AbstractedType abstractedType() throws RecognitionException {
        AbstractedType abstractedType = null;


        Token ABSTRACTED_TYPE123=null;
        StaticType abbreviatedType124 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:800:5: ( ABSTRACTED_TYPE abbreviatedType )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:800:7: ABSTRACTED_TYPE abbreviatedType
            {
                ABSTRACTED_TYPE123=(Token)match(input,ABSTRACTED_TYPE,FOLLOW_ABSTRACTED_TYPE_in_abstractedType5212); if (state.failed) return abstractedType;

                if ( state.backtracking==0 ) { abstractedType = new AbstractedType(ABSTRACTED_TYPE123); }

                pushFollow(FOLLOW_abbreviatedType_in_abstractedType5228);
                abbreviatedType124=abbreviatedType();

                state._fsp--;
                if (state.failed) return abstractedType;

                if ( state.backtracking==0 ) { abstractedType.setType(abbreviatedType124); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return abstractedType;
    }
    // $ANTLR end "abstractedType"



    // $ANTLR start "parameters"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:806:1: parameters returns [ParameterList parameterList] : LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN ;
    public ParameterList parameters() throws RecognitionException {
        ParameterList parameterList = null;


        Token c=null;
        Token LPAREN125=null;
        Token RPAREN126=null;
        Parameter ap1 =null;

        Parameter ap2 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:807:5: ( LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:807:7: LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN
            {
                LPAREN125=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parameters5257); if (state.failed) return parameterList;

                if ( state.backtracking==0 ) { parameterList =new ParameterList(LPAREN125); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:809:7: (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )?
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==COMPILER_ANNOTATION||LA69_0==DYNAMIC||LA69_0==FUNCTION_MODIFIER||(LA69_0 >= LBRACE && LA69_0 <= LBRACKET)||LA69_0==LIDENTIFIER||LA69_0==SMALLER_OP||LA69_0==STRING_LITERAL||LA69_0==UIDENTIFIER||(LA69_0 >= VALUE_MODIFIER && LA69_0 <= VOID_MODIFIER)) ) {
                    alt69=1;
                }
                switch (alt69) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:810:9: ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )*
                    {
                        pushFollow(FOLLOW_parameterDeclarationOrRef_in_parameters5285);
                        ap1=parameterDeclarationOrRef();

                        state._fsp--;
                        if (state.failed) return parameterList;

                        if ( state.backtracking==0 ) { if (ap1!=null)
                            parameterList.addParameter(ap1); }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:813:9: (c= COMMA (ap2= parameterDeclarationOrRef |) )*
                        loop68:
                        do {
                            int alt68=2;
                            int LA68_0 = input.LA(1);

                            if ( (LA68_0==COMMA) ) {
                                alt68=1;
                            }


                            switch (alt68) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:814:11: c= COMMA (ap2= parameterDeclarationOrRef |)
                                {
                                    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_parameters5320); if (state.failed) return parameterList;

                                    if ( state.backtracking==0 ) { parameterList.setEndToken(c); }

                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:816:11: (ap2= parameterDeclarationOrRef |)
                                    int alt67=2;
                                    int LA67_0 = input.LA(1);

                                    if ( (LA67_0==COMPILER_ANNOTATION||LA67_0==DYNAMIC||LA67_0==FUNCTION_MODIFIER||(LA67_0 >= LBRACE && LA67_0 <= LBRACKET)||LA67_0==LIDENTIFIER||LA67_0==SMALLER_OP||LA67_0==STRING_LITERAL||LA67_0==UIDENTIFIER||(LA67_0 >= VALUE_MODIFIER && LA67_0 <= VOID_MODIFIER)) ) {
                                        alt67=1;
                                    }
                                    else if ( (LA67_0==COMMA||LA67_0==RPAREN) ) {
                                        alt67=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return parameterList;}
                                        NoViableAltException nvae =
                                                new NoViableAltException("", 67, 0, input);

                                        throw nvae;

                                    }
                                    switch (alt67) {
                                        case 1 :
                                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:817:13: ap2= parameterDeclarationOrRef
                                        {
                                            pushFollow(FOLLOW_parameterDeclarationOrRef_in_parameters5360);
                                            ap2=parameterDeclarationOrRef();

                                            state._fsp--;
                                            if (state.failed) return parameterList;

                                            if ( state.backtracking==0 ) { if (ap2!=null) {
                                                parameterList.addParameter(ap2);
                                                parameterList.setEndToken(null); } }

                                        }
                                        break;
                                        case 2 :
                                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:822:13: 
                                        {
                                            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                                    new MismatchedTokenException(UIDENTIFIER, input)); }

                                        }
                                        break;

                                    }


                                }
                                break;

                                default :
                                    break loop68;
                            }
                        } while (true);


                    }
                    break;

                }


                RPAREN126=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parameters5440); if (state.failed) return parameterList;

                if ( state.backtracking==0 ) { parameterList.setEndToken(RPAREN126); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return parameterList;
    }
    // $ANTLR end "parameters"



    // $ANTLR start "parameter"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:835:1: parameter returns [ParameterDeclaration parameter] : ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( parameters )+ ( functionSpecifier )? ) ;
    public ParameterDeclaration parameter() throws RecognitionException {
        ParameterDeclaration parameter = null;


        Token VOID_MODIFIER128=null;
        Token FUNCTION_MODIFIER129=null;
        Token DYNAMIC130=null;
        Token VALUE_MODIFIER131=null;
        Type variadicType127 =null;

        Identifier memberName132 =null;

        SpecifierExpression specifier133 =null;

        ParameterList parameters134 =null;

        SpecifierExpression functionSpecifier135 =null;


        ValueParameterDeclaration vp = new ValueParameterDeclaration(null);
        FunctionalParameterDeclaration fp = new FunctionalParameterDeclaration(null);
        AttributeDeclaration a = new AttributeDeclaration(null);
        MethodDeclaration m = new MethodDeclaration(null);
        vp.setTypedDeclaration(a);
        fp.setTypedDeclaration(m);
        parameter = vp;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:843:5: ( ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( parameters )+ ( functionSpecifier )? ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:843:7: ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( parameters )+ ( functionSpecifier )? )
            {
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:843:7: ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER )
                int alt70=5;
                switch ( input.LA(1) ) {
                    case LBRACE:
                    case LBRACKET:
                    case SMALLER_OP:
                    case UIDENTIFIER:
                    {
                        alt70=1;
                    }
                    break;
                    case VOID_MODIFIER:
                    {
                        alt70=2;
                    }
                    break;
                    case FUNCTION_MODIFIER:
                    {
                        alt70=3;
                    }
                    break;
                    case DYNAMIC:
                    {
                        alt70=4;
                    }
                    break;
                    case VALUE_MODIFIER:
                    {
                        alt70=5;
                    }
                    break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return parameter;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 70, 0, input);

                        throw nvae;

                }

                switch (alt70) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:844:9: variadicType
                    {
                        pushFollow(FOLLOW_variadicType_in_parameter5493);
                        variadicType127=variadicType();

                        state._fsp--;
                        if (state.failed) return parameter;

                        if ( state.backtracking==0 ) { a.setType(variadicType127);
                            m.setType(variadicType127); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:847:9: VOID_MODIFIER
                    {
                        VOID_MODIFIER128=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_parameter5513); if (state.failed) return parameter;

                        if ( state.backtracking==0 ) { m.setType(new VoidModifier(VOID_MODIFIER128));
                            parameter =fp; }

                    }
                    break;
                    case 3 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:850:9: FUNCTION_MODIFIER
                    {
                        FUNCTION_MODIFIER129=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_parameter5533); if (state.failed) return parameter;

                        if ( state.backtracking==0 ) { m.setType(new FunctionModifier(FUNCTION_MODIFIER129));
                            parameter =fp; }

                    }
                    break;
                    case 4 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:853:9: DYNAMIC
                    {
                        DYNAMIC130=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_parameter5553); if (state.failed) return parameter;

                        if ( state.backtracking==0 ) { a.setType(new DynamicModifier(DYNAMIC130)); }

                    }
                    break;
                    case 5 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:855:9: VALUE_MODIFIER
                    {
                        VALUE_MODIFIER131=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_parameter5573); if (state.failed) return parameter;

                        if ( state.backtracking==0 ) { a.setType(new ValueModifier(VALUE_MODIFIER131)); }

                    }
                    break;

                }


                pushFollow(FOLLOW_memberName_in_parameter5599);
                memberName132=memberName();

                state._fsp--;
                if (state.failed) return parameter;

                if ( state.backtracking==0 ) { a.setIdentifier(memberName132);
                    m.setIdentifier(memberName132); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:861:7: ( ( specifier )? | ( parameters )+ ( functionSpecifier )? )
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==COMMA||LA74_0==RPAREN||LA74_0==SPECIFY) ) {
                    alt74=1;
                }
                else if ( (LA74_0==LPAREN) ) {
                    alt74=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return parameter;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 74, 0, input);

                    throw nvae;

                }
                switch (alt74) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:862:9: ( specifier )?
                    {
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:862:9: ( specifier )?
                        int alt71=2;
                        int LA71_0 = input.LA(1);

                        if ( (LA71_0==SPECIFY) ) {
                            alt71=1;
                        }
                        switch (alt71) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:863:11: specifier
                            {
                                pushFollow(FOLLOW_specifier_in_parameter5637);
                                specifier133=specifier();

                                state._fsp--;
                                if (state.failed) return parameter;

                                if ( state.backtracking==0 ) { a.setSpecifierOrInitializerExpression(specifier133); }

                            }
                            break;

                        }


                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:867:9: ( parameters )+ ( functionSpecifier )?
                    {
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:867:9: ( parameters )+
                        int cnt72=0;
                        loop72:
                        do {
                            int alt72=2;
                            int LA72_0 = input.LA(1);

                            if ( (LA72_0==LPAREN) ) {
                                alt72=1;
                            }


                            switch (alt72) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:868:11: parameters
                                {
                                    pushFollow(FOLLOW_parameters_in_parameter5690);
                                    parameters134=parameters();

                                    state._fsp--;
                                    if (state.failed) return parameter;

                                    if ( state.backtracking==0 ) { m.addParameterList(parameters134);
                                        parameter =fp; }

                                }
                                break;

                                default :
                                    if ( cnt72 >= 1 ) break loop72;
                                    if (state.backtracking>0) {state.failed=true; return parameter;}
                                    EarlyExitException eee =
                                            new EarlyExitException(72, input);
                                    throw eee;
                            }
                            cnt72++;
                        } while (true);


                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:872:9: ( functionSpecifier )?
                        int alt73=2;
                        int LA73_0 = input.LA(1);

                        if ( (LA73_0==COMPUTE||LA73_0==SPECIFY) ) {
                            alt73=1;
                        }
                        switch (alt73) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:873:11: functionSpecifier
                            {
                                pushFollow(FOLLOW_functionSpecifier_in_parameter5735);
                                functionSpecifier135=functionSpecifier();

                                state._fsp--;
                                if (state.failed) return parameter;

                                if ( state.backtracking==0 ) { m.setSpecifierExpression(functionSpecifier135); }

                            }
                            break;

                        }


                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameter"



    // $ANTLR start "parameterRef"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:879:1: parameterRef returns [InitializerParameter parameter] : memberName ( specifier )? ;
    public InitializerParameter parameterRef() throws RecognitionException {
        InitializerParameter parameter = null;


        Identifier memberName136 =null;

        SpecifierExpression specifier137 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:880:5: ( memberName ( specifier )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:880:7: memberName ( specifier )?
            {
                pushFollow(FOLLOW_memberName_in_parameterRef5787);
                memberName136=memberName();

                state._fsp--;
                if (state.failed) return parameter;

                if ( state.backtracking==0 ) { parameter = new InitializerParameter(null);
                    parameter.setIdentifier(memberName136); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:883:7: ( specifier )?
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==SPECIFY) ) {
                    alt75=1;
                }
                switch (alt75) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:884:9: specifier
                    {
                        pushFollow(FOLLOW_specifier_in_parameterRef5813);
                        specifier137=specifier();

                        state._fsp--;
                        if (state.failed) return parameter;

                        if ( state.backtracking==0 ) { parameter.setSpecifierExpression(specifier137); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameterRef"



    // $ANTLR start "parameterDeclarationOrRef"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:889:1: parameterDeclarationOrRef returns [Parameter parameter] : (r= parameterRef | compilerAnnotations annotations p= parameter );
    public Parameter parameterDeclarationOrRef() throws RecognitionException {
        Parameter parameter = null;


        InitializerParameter r =null;

        ParameterDeclaration p =null;

        AnnotationList annotations138 =null;

        List<CompilerAnnotation> compilerAnnotations139 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:890:5: (r= parameterRef | compilerAnnotations annotations p= parameter )
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==LIDENTIFIER) ) {
                int LA76_1 = input.LA(2);

                if ( (LA76_1==COMMA||LA76_1==RPAREN||LA76_1==SPECIFY) ) {
                    alt76=1;
                }
                else if ( (LA76_1==DYNAMIC||LA76_1==FUNCTION_MODIFIER||(LA76_1 >= LBRACE && LA76_1 <= LBRACKET)||LA76_1==LIDENTIFIER||LA76_1==LPAREN||LA76_1==SMALLER_OP||LA76_1==UIDENTIFIER||LA76_1==VALUE_MODIFIER||LA76_1==VOID_MODIFIER) ) {
                    alt76=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return parameter;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 76, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA76_0==COMPILER_ANNOTATION||LA76_0==DYNAMIC||LA76_0==FUNCTION_MODIFIER||(LA76_0 >= LBRACE && LA76_0 <= LBRACKET)||LA76_0==SMALLER_OP||LA76_0==STRING_LITERAL||LA76_0==UIDENTIFIER||(LA76_0 >= VALUE_MODIFIER && LA76_0 <= VOID_MODIFIER)) ) {
                alt76=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return parameter;}
                NoViableAltException nvae =
                        new NoViableAltException("", 76, 0, input);

                throw nvae;

            }
            switch (alt76) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:891:7: r= parameterRef
                {
                    pushFollow(FOLLOW_parameterRef_in_parameterDeclarationOrRef5861);
                    r=parameterRef();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter =r; }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:894:7: compilerAnnotations annotations p= parameter
                {
                    pushFollow(FOLLOW_compilerAnnotations_in_parameterDeclarationOrRef5884);
                    compilerAnnotations139=compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return parameter;

                    pushFollow(FOLLOW_annotations_in_parameterDeclarationOrRef5892);
                    annotations138=annotations();

                    state._fsp--;
                    if (state.failed) return parameter;

                    pushFollow(FOLLOW_parameter_in_parameterDeclarationOrRef5902);
                    p=parameter();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter =p;
                        p.getTypedDeclaration().setAnnotationList(annotations138);
                        p.getTypedDeclaration().getCompilerAnnotations().addAll(compilerAnnotations139); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameterDeclarationOrRef"



    // $ANTLR start "typeParameters"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:902:1: typeParameters returns [TypeParameterList typeParameterList] : SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP ;
    public TypeParameterList typeParameters() throws RecognitionException {
        TypeParameterList typeParameterList = null;


        Token c=null;
        Token SMALLER_OP140=null;
        Token LARGER_OP141=null;
        TypeParameterDeclaration tp1 =null;

        TypeParameterDeclaration tp2 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:903:5: ( SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:903:7: SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP
            {
                SMALLER_OP140=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeParameters5931); if (state.failed) return typeParameterList;

                if ( state.backtracking==0 ) { typeParameterList = new TypeParameterList(SMALLER_OP140); }

                pushFollow(FOLLOW_typeParameter_in_typeParameters5949);
                tp1=typeParameter();

                state._fsp--;
                if (state.failed) return typeParameterList;

                if ( state.backtracking==0 ) { if (tp1 instanceof TypeParameterDeclaration)
                    typeParameterList.addTypeParameterDeclaration(tp1); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:908:7: (c= COMMA (tp2= typeParameter |) )*
                loop78:
                do {
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==COMMA) ) {
                        alt78=1;
                    }


                    switch (alt78) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:909:9: c= COMMA (tp2= typeParameter |)
                        {
                            c=(Token)match(input,COMMA,FOLLOW_COMMA_in_typeParameters5977); if (state.failed) return typeParameterList;

                            if ( state.backtracking==0 ) { typeParameterList.setEndToken(c); }

                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:911:9: (tp2= typeParameter |)
                            int alt77=2;
                            int LA77_0 = input.LA(1);

                            if ( (LA77_0==ALIAS||(LA77_0 >= ASSERT && LA77_0 <= ASSIGN)||(LA77_0 >= BACKTICK && LA77_0 <= BREAK)||(LA77_0 >= CHAR_LITERAL && LA77_0 <= CLASS_DEFINITION)||LA77_0==COMPILER_ANNOTATION||LA77_0==CONTINUE||(LA77_0 >= DECREMENT_OP && LA77_0 <= DIFFERENCE_OP)||LA77_0==DYNAMIC||(LA77_0 >= FLOAT_LITERAL && LA77_0 <= FUNCTION_MODIFIER)||(LA77_0 >= IF_CLAUSE && LA77_0 <= INTERFACE_DEFINITION)||LA77_0==IN_OP||(LA77_0 >= LBRACE && LA77_0 <= LBRACKET)||LA77_0==LIDENTIFIER||LA77_0==LPAREN||LA77_0==MODULE||LA77_0==NATURAL_LITERAL||(LA77_0 >= NOT_OP && LA77_0 <= OBJECT_DEFINITION)||(LA77_0 >= OUT && LA77_0 <= PACKAGE)||LA77_0==PRODUCT_OP||(LA77_0 >= RETURN && LA77_0 <= RPAREN)||(LA77_0 >= SEMICOLON && LA77_0 <= SMALLER_OP)||LA77_0==STRING_LITERAL||LA77_0==STRING_START||(LA77_0 >= SUM_OP && LA77_0 <= SWITCH_CLAUSE)||(LA77_0 >= THIS && LA77_0 <= UIDENTIFIER)||(LA77_0 >= VALUE_MODIFIER && LA77_0 <= WHILE_CLAUSE)) ) {
                                alt77=1;
                            }
                            else if ( (LA77_0==COMMA||LA77_0==LARGER_OP) ) {
                                alt77=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return typeParameterList;}
                                NoViableAltException nvae =
                                        new NoViableAltException("", 77, 0, input);

                                throw nvae;

                            }
                            switch (alt77) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:912:11: tp2= typeParameter
                                {
                                    pushFollow(FOLLOW_typeParameter_in_typeParameters6011);
                                    tp2=typeParameter();

                                    state._fsp--;
                                    if (state.failed) return typeParameterList;

                                    if ( state.backtracking==0 ) { if (tp2 instanceof TypeParameterDeclaration)
                                        typeParameterList.addTypeParameterDeclaration(tp2);
                                        typeParameterList.setEndToken(null); }

                                }
                                break;
                                case 2 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:916:11: 
                                {
                                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                            new MismatchedTokenException(UIDENTIFIER, input)); }

                                }
                                break;

                            }


                        }
                        break;

                        default :
                            break loop78;
                    }
                } while (true);


                LARGER_OP141=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeParameters6062); if (state.failed) return typeParameterList;

                if ( state.backtracking==0 ) { typeParameterList.setEndToken(LARGER_OP141); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return typeParameterList;
    }
    // $ANTLR end "typeParameters"



    // $ANTLR start "typeParameter"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:924:1: typeParameter returns [TypeParameterDeclaration typeParameter] : compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )? ;
    public TypeParameterDeclaration typeParameter() throws RecognitionException {
        TypeParameterDeclaration typeParameter = null;


        TypeVariance variance142 =null;

        Identifier typeNameDeclaration143 =null;

        TypeSpecifier typeDefault144 =null;

        List<CompilerAnnotation> compilerAnnotations145 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:925:5: ( compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:925:7: compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )?
            {
                if ( state.backtracking==0 ) { typeParameter = new TypeParameterDeclaration(null); }

                pushFollow(FOLLOW_compilerAnnotations_in_typeParameter6099);
                compilerAnnotations145=compilerAnnotations();

                state._fsp--;
                if (state.failed) return typeParameter;

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:927:7: ( variance )?
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==IN_OP||LA79_0==OUT) ) {
                    alt79=1;
                }
                switch (alt79) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:928:9: variance
                    {
                        pushFollow(FOLLOW_variance_in_typeParameter6118);
                        variance142=variance();

                        state._fsp--;
                        if (state.failed) return typeParameter;

                        if ( state.backtracking==0 ) { typeParameter.setTypeVariance(variance142); }

                    }
                    break;

                }


                pushFollow(FOLLOW_typeNameDeclaration_in_typeParameter6148);
                typeNameDeclaration143=typeNameDeclaration();

                state._fsp--;
                if (state.failed) return typeParameter;

                if ( state.backtracking==0 ) { typeParameter.setIdentifier(typeNameDeclaration143); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:933:7: ( typeDefault )?
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==SPECIFY) ) {
                    alt80=1;
                }
                switch (alt80) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:934:9: typeDefault
                    {
                        pushFollow(FOLLOW_typeDefault_in_typeParameter6174);
                        typeDefault144=typeDefault();

                        state._fsp--;
                        if (state.failed) return typeParameter;

                        if ( state.backtracking==0 ) { typeParameter.setTypeSpecifier(typeDefault144); }

                    }
                    break;

                }


                if ( state.backtracking==0 ) { typeParameter.getCompilerAnnotations().addAll(compilerAnnotations145); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return typeParameter;
    }
    // $ANTLR end "typeParameter"



    // $ANTLR start "variance"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:940:1: variance returns [TypeVariance typeVariance] : ( IN_OP | OUT );
    public TypeVariance variance() throws RecognitionException {
        TypeVariance typeVariance = null;


        Token IN_OP146=null;
        Token OUT147=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:941:5: ( IN_OP | OUT )
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==IN_OP) ) {
                alt81=1;
            }
            else if ( (LA81_0==OUT) ) {
                alt81=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return typeVariance;}
                NoViableAltException nvae =
                        new NoViableAltException("", 81, 0, input);

                throw nvae;

            }
            switch (alt81) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:941:7: IN_OP
                {
                    IN_OP146=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_variance6222); if (state.failed) return typeVariance;

                    if ( state.backtracking==0 ) { typeVariance = new TypeVariance(IN_OP146); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:943:7: OUT
                {
                    OUT147=(Token)match(input,OUT,FOLLOW_OUT_in_variance6238); if (state.failed) return typeVariance;

                    if ( state.backtracking==0 ) { typeVariance = new TypeVariance(OUT147); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return typeVariance;
    }
    // $ANTLR end "variance"



    // $ANTLR start "typeConstraint"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:947:1: typeConstraint returns [TypeConstraint typeConstraint] : compilerAnnotations TYPE_CONSTRAINT typeNameDeclaration ( parameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )? ;
    public TypeConstraint typeConstraint() throws RecognitionException {
        TypeConstraint typeConstraint = null;


        Token TYPE_CONSTRAINT148=null;
        List<CompilerAnnotation> compilerAnnotations149 =null;

        Identifier typeNameDeclaration150 =null;

        ParameterList parameters151 =null;

        CaseTypes caseTypes152 =null;

        SatisfiedTypes satisfiedTypes153 =null;

        AbstractedType abstractedType154 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:948:5: ( compilerAnnotations TYPE_CONSTRAINT typeNameDeclaration ( parameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:948:7: compilerAnnotations TYPE_CONSTRAINT typeNameDeclaration ( parameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )?
            {
                pushFollow(FOLLOW_compilerAnnotations_in_typeConstraint6271);
                compilerAnnotations149=compilerAnnotations();

                state._fsp--;
                if (state.failed) return typeConstraint;

                TYPE_CONSTRAINT148=(Token)match(input,TYPE_CONSTRAINT,FOLLOW_TYPE_CONSTRAINT_in_typeConstraint6279); if (state.failed) return typeConstraint;

                if ( state.backtracking==0 ) { typeConstraint = new TypeConstraint(TYPE_CONSTRAINT148);
                    typeConstraint.getCompilerAnnotations().addAll(compilerAnnotations149); }

                pushFollow(FOLLOW_typeNameDeclaration_in_typeConstraint6295);
                typeNameDeclaration150=typeNameDeclaration();

                state._fsp--;
                if (state.failed) return typeConstraint;

                if ( state.backtracking==0 ) { typeConstraint.setIdentifier(typeNameDeclaration150); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:955:7: ( parameters )?
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==LPAREN) ) {
                    alt82=1;
                }
                switch (alt82) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:956:9: parameters
                    {
                        pushFollow(FOLLOW_parameters_in_typeConstraint6329);
                        parameters151=parameters();

                        state._fsp--;
                        if (state.failed) return typeConstraint;

                        if ( state.backtracking==0 ) { typeConstraint.setParameterList(parameters151); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:959:7: ( caseTypes )?
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==CASE_TYPES) ) {
                    alt83=1;
                }
                switch (alt83) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:960:9: caseTypes
                    {
                        pushFollow(FOLLOW_caseTypes_in_typeConstraint6366);
                        caseTypes152=caseTypes();

                        state._fsp--;
                        if (state.failed) return typeConstraint;

                        if ( state.backtracking==0 ) { typeConstraint.setCaseTypes(caseTypes152); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:964:7: ( satisfiedTypes )?
                int alt84=2;
                int LA84_0 = input.LA(1);

                if ( (LA84_0==SATISFIES) ) {
                    alt84=1;
                }
                switch (alt84) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:965:9: satisfiedTypes
                    {
                        pushFollow(FOLLOW_satisfiedTypes_in_typeConstraint6410);
                        satisfiedTypes153=satisfiedTypes();

                        state._fsp--;
                        if (state.failed) return typeConstraint;

                        if ( state.backtracking==0 ) { typeConstraint.setSatisfiedTypes(satisfiedTypes153); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:968:7: ( abstractedType )?
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==ABSTRACTED_TYPE) ) {
                    alt85=1;
                }
                switch (alt85) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:969:9: abstractedType
                    {
                        pushFollow(FOLLOW_abstractedType_in_typeConstraint6448);
                        abstractedType154=abstractedType();

                        state._fsp--;
                        if (state.failed) return typeConstraint;

                        if ( state.backtracking==0 ) { typeConstraint.setAbstractedType(abstractedType154); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return typeConstraint;
    }
    // $ANTLR end "typeConstraint"



    // $ANTLR start "typeConstraints"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:974:1: typeConstraints returns [TypeConstraintList typeConstraintList] : ( typeConstraint )+ ;
    public TypeConstraintList typeConstraints() throws RecognitionException {
        TypeConstraintList typeConstraintList = null;


        TypeConstraint typeConstraint155 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:975:5: ( ( typeConstraint )+ )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:975:7: ( typeConstraint )+
            {
                if ( state.backtracking==0 ) { typeConstraintList =new TypeConstraintList(null); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:976:7: ( typeConstraint )+
                int cnt86=0;
                loop86:
                do {
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==COMPILER_ANNOTATION||LA86_0==TYPE_CONSTRAINT) ) {
                        alt86=1;
                    }


                    switch (alt86) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:977:9: typeConstraint
                        {
                            pushFollow(FOLLOW_typeConstraint_in_typeConstraints6506);
                            typeConstraint155=typeConstraint();

                            state._fsp--;
                            if (state.failed) return typeConstraintList;

                            if ( state.backtracking==0 ) { if (typeConstraint155!=null)
                                typeConstraintList.addTypeConstraint(typeConstraint155); }

                        }
                        break;

                        default :
                            if ( cnt86 >= 1 ) break loop86;
                            if (state.backtracking>0) {state.failed=true; return typeConstraintList;}
                            EarlyExitException eee =
                                    new EarlyExitException(86, input);
                            throw eee;
                    }
                    cnt86++;
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return typeConstraintList;
    }
    // $ANTLR end "typeConstraints"



    // $ANTLR start "annotationListStart"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:983:1: annotationListStart : ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VOID_MODIFIER ) ;
    public void annotationListStart() throws RecognitionException {
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:984:5: ( ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VOID_MODIFIER ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:984:7: ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VOID_MODIFIER )
            {
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:984:7: ( stringLiteral | annotation )
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==STRING_LITERAL||LA87_0==VERBATIM_STRING) ) {
                    alt87=1;
                }
                else if ( (LA87_0==LIDENTIFIER) ) {
                    alt87=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 87, 0, input);

                    throw nvae;

                }
                switch (alt87) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:984:8: stringLiteral
                    {
                        pushFollow(FOLLOW_stringLiteral_in_annotationListStart6543);
                        stringLiteral();

                        state._fsp--;
                        if (state.failed) return ;

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:984:22: annotation
                    {
                        pushFollow(FOLLOW_annotation_in_annotationListStart6545);
                        annotation();

                        state._fsp--;
                        if (state.failed) return ;

                    }
                    break;

                }


                if ( input.LA(1)==FUNCTION_MODIFIER||input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER||input.LA(1)==VOID_MODIFIER ) {
                    input.consume();
                    state.errorRecovery=false;
                    state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotationListStart"



    // $ANTLR start "declarationOrStatement"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:988:1: declarationOrStatement returns [Statement statement] options {memoize=true; } : compilerAnnotations ( ( annotatedDeclarationStart )=>d= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d1= declaration |s= statement ) ;
    public Statement declarationOrStatement() throws RecognitionException {
        Statement statement = null;

        int declarationOrStatement_StartIndex = input.index();

        Declaration d =null;

        Declaration d1 =null;

        Statement s =null;

        Assertion assertion156 =null;

        List<CompilerAnnotation> compilerAnnotations157 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return statement; }

            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:990:5: ( compilerAnnotations ( ( annotatedDeclarationStart )=>d= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d1= declaration |s= statement ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:990:7: compilerAnnotations ( ( annotatedDeclarationStart )=>d= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d1= declaration |s= statement )
            {
                pushFollow(FOLLOW_compilerAnnotations_in_declarationOrStatement6595);
                compilerAnnotations157=compilerAnnotations();

                state._fsp--;
                if (state.failed) return statement;

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:991:7: ( ( annotatedDeclarationStart )=>d= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d1= declaration |s= statement )
                int alt88=4;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==STRING_LITERAL) ) {
                    int LA88_1 = input.LA(2);

                    if ( (synpred3_Ceylon()) ) {
                        alt88=1;
                    }
                    else if ( (synpred4_Ceylon()) ) {
                        alt88=2;
                    }
                    else if ( (synpred5_Ceylon()) ) {
                        alt88=3;
                    }
                    else if ( (true) ) {
                        alt88=4;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return statement;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 88, 1, input);

                        throw nvae;

                    }
                }
                else if ( (LA88_0==VERBATIM_STRING) ) {
                    int LA88_2 = input.LA(2);

                    if ( (synpred3_Ceylon()) ) {
                        alt88=1;
                    }
                    else if ( (synpred4_Ceylon()) ) {
                        alt88=2;
                    }
                    else if ( (synpred5_Ceylon()) ) {
                        alt88=3;
                    }
                    else if ( (true) ) {
                        alt88=4;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return statement;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 88, 2, input);

                        throw nvae;

                    }
                }
                else if ( (LA88_0==LIDENTIFIER) ) {
                    int LA88_3 = input.LA(2);

                    if ( (synpred3_Ceylon()) ) {
                        alt88=1;
                    }
                    else if ( (synpred4_Ceylon()) ) {
                        alt88=2;
                    }
                    else if ( (synpred5_Ceylon()) ) {
                        alt88=3;
                    }
                    else if ( (true) ) {
                        alt88=4;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return statement;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 88, 3, input);

                        throw nvae;

                    }
                }
                else if ( (LA88_0==OBJECT_DEFINITION) ) {
                    int LA88_4 = input.LA(2);

                    if ( (synpred3_Ceylon()) ) {
                        alt88=1;
                    }
                    else if ( (synpred5_Ceylon()) ) {
                        alt88=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return statement;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 88, 4, input);

                        throw nvae;

                    }
                }
                else if ( (LA88_0==ASSIGN) ) {
                    int LA88_5 = input.LA(2);

                    if ( (synpred3_Ceylon()) ) {
                        alt88=1;
                    }
                    else if ( (synpred5_Ceylon()) ) {
                        alt88=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return statement;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 88, 5, input);

                        throw nvae;

                    }
                }
                else if ( (LA88_0==VOID_MODIFIER) ) {
                    int LA88_6 = input.LA(2);

                    if ( (synpred3_Ceylon()) ) {
                        alt88=1;
                    }
                    else if ( (synpred5_Ceylon()) ) {
                        alt88=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return statement;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 88, 6, input);

                        throw nvae;

                    }
                }
                else if ( (LA88_0==FUNCTION_MODIFIER) ) {
                    int LA88_7 = input.LA(2);

                    if ( (synpred3_Ceylon()) ) {
                        alt88=1;
                    }
                    else if ( (synpred5_Ceylon()) ) {
                        alt88=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return statement;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 88, 7, input);

                        throw nvae;

                    }
                }
                else if ( (LA88_0==VALUE_MODIFIER) ) {
                    int LA88_8 = input.LA(2);

                    if ( (synpred3_Ceylon()) ) {
                        alt88=1;
                    }
                    else if ( (synpred5_Ceylon()) ) {
                        alt88=3;
                    }
                    else if ( (true) ) {
                        alt88=4;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return statement;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 88, 8, input);

                        throw nvae;

                    }
                }
                else if ( (LA88_0==UIDENTIFIER) ) {
                    int LA88_9 = input.LA(2);

                    if ( (synpred3_Ceylon()) ) {
                        alt88=1;
                    }
                    else if ( (synpred5_Ceylon()) ) {
                        alt88=3;
                    }
                    else if ( (true) ) {
                        alt88=4;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return statement;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 88, 9, input);

                        throw nvae;

                    }
                }
                else if ( (LA88_0==SMALLER_OP) ) {
                    int LA88_10 = input.LA(2);

                    if ( (synpred3_Ceylon()) ) {
                        alt88=1;
                    }
                    else if ( (synpred5_Ceylon()) ) {
                        alt88=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return statement;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 88, 10, input);

                        throw nvae;

                    }
                }
                else if ( (LA88_0==LBRACKET) ) {
                    int LA88_11 = input.LA(2);

                    if ( (synpred3_Ceylon()) ) {
                        alt88=1;
                    }
                    else if ( (synpred5_Ceylon()) ) {
                        alt88=3;
                    }
                    else if ( (true) ) {
                        alt88=4;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return statement;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 88, 11, input);

                        throw nvae;

                    }
                }
                else if ( (LA88_0==LBRACE) ) {
                    int LA88_12 = input.LA(2);

                    if ( (synpred3_Ceylon()) ) {
                        alt88=1;
                    }
                    else if ( (synpred5_Ceylon()) ) {
                        alt88=3;
                    }
                    else if ( (true) ) {
                        alt88=4;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return statement;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 88, 12, input);

                        throw nvae;

                    }
                }
                else if ( (LA88_0==DYNAMIC) ) {
                    int LA88_13 = input.LA(2);

                    if ( (synpred3_Ceylon()) ) {
                        alt88=1;
                    }
                    else if ( (synpred5_Ceylon()) ) {
                        alt88=3;
                    }
                    else if ( (true) ) {
                        alt88=4;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return statement;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 88, 13, input);

                        throw nvae;

                    }
                }
                else if ( (LA88_0==CLASS_DEFINITION) ) {
                    int LA88_14 = input.LA(2);

                    if ( (synpred3_Ceylon()) ) {
                        alt88=1;
                    }
                    else if ( (synpred5_Ceylon()) ) {
                        alt88=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return statement;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 88, 14, input);

                        throw nvae;

                    }
                }
                else if ( (LA88_0==INTERFACE_DEFINITION) ) {
                    int LA88_15 = input.LA(2);

                    if ( (synpred3_Ceylon()) ) {
                        alt88=1;
                    }
                    else if ( (synpred5_Ceylon()) ) {
                        alt88=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return statement;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 88, 15, input);

                        throw nvae;

                    }
                }
                else if ( (LA88_0==ALIAS) ) {
                    int LA88_16 = input.LA(2);

                    if ( (synpred3_Ceylon()) ) {
                        alt88=1;
                    }
                    else if ( (synpred5_Ceylon()) ) {
                        alt88=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return statement;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 88, 16, input);

                        throw nvae;

                    }
                }
                else if ( (LA88_0==ASSERT) && (synpred4_Ceylon())) {
                    alt88=2;
                }
                else if ( ((LA88_0 >= BACKTICK && LA88_0 <= BREAK)||LA88_0==CHAR_LITERAL||LA88_0==CONTINUE||(LA88_0 >= DECREMENT_OP && LA88_0 <= DIFFERENCE_OP)||(LA88_0 >= FLOAT_LITERAL && LA88_0 <= FOR_CLAUSE)||LA88_0==IF_CLAUSE||LA88_0==INCREMENT_OP||LA88_0==LPAREN||LA88_0==NATURAL_LITERAL||LA88_0==NOT_OP||(LA88_0 >= OUTER && LA88_0 <= PACKAGE)||LA88_0==RETURN||LA88_0==STRING_START||(LA88_0 >= SUM_OP && LA88_0 <= SWITCH_CLAUSE)||(LA88_0 >= THIS && LA88_0 <= TRY_CLAUSE)||LA88_0==WHILE_CLAUSE) ) {
                    alt88=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 88, 0, input);

                    throw nvae;

                }
                switch (alt88) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:992:9: ( annotatedDeclarationStart )=>d= declaration
                    {
                        pushFollow(FOLLOW_declaration_in_declarationOrStatement6622);
                        d=declaration();

                        state._fsp--;
                        if (state.failed) return statement;

                        if ( state.backtracking==0 ) { statement =d; }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:994:9: ( annotatedAssertionStart )=> assertion
                    {
                        pushFollow(FOLLOW_assertion_in_declarationOrStatement6648);
                        assertion156=assertion();

                        state._fsp--;
                        if (state.failed) return statement;

                        if ( state.backtracking==0 ) { statement = assertion156; }

                    }
                    break;
                    case 3 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:996:9: ( annotationListStart )=>d1= declaration
                    {
                        pushFollow(FOLLOW_declaration_in_declarationOrStatement6676);
                        d1=declaration();

                        state._fsp--;
                        if (state.failed) return statement;

                        if ( state.backtracking==0 ) { statement =d1; }

                    }
                    break;
                    case 4 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:998:9: s= statement
                    {
                        pushFollow(FOLLOW_statement_in_declarationOrStatement6698);
                        s=statement();

                        state._fsp--;
                        if (state.failed) return statement;

                        if ( state.backtracking==0 ) { statement =s; }

                    }
                    break;

                }


                if ( state.backtracking==0 ) { if (statement!=null)
                    statement.getCompilerAnnotations().addAll(compilerAnnotations157); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 47, declarationOrStatement_StartIndex); }

        }
        return statement;
    }
    // $ANTLR end "declarationOrStatement"



    // $ANTLR start "declaration"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1005:1: declaration returns [Declaration declaration] : annotations ( objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | classDeclaration | interfaceDeclaration | aliasDeclaration ) ;
    public Declaration declaration() throws RecognitionException {
        Declaration declaration = null;


        AnnotationList annotations158 =null;

        ObjectDefinition objectDeclaration159 =null;

        AttributeSetterDefinition setterDeclaration160 =null;

        AnyMethod voidOrInferredMethodDeclaration161 =null;

        AnyAttribute inferredAttributeDeclaration162 =null;

        TypedDeclaration typedMethodOrAttributeDeclaration163 =null;

        AnyClass classDeclaration164 =null;

        AnyInterface interfaceDeclaration165 =null;

        TypeAliasDeclaration aliasDeclaration166 =null;


        declaration = new MissingDeclaration(null);
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1007:5: ( annotations ( objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | classDeclaration | interfaceDeclaration | aliasDeclaration ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1007:7: annotations ( objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | classDeclaration | interfaceDeclaration | aliasDeclaration )
            {
                pushFollow(FOLLOW_annotations_in_declaration6754);
                annotations158=annotations();

                state._fsp--;
                if (state.failed) return declaration;

                if ( state.backtracking==0 ) { declaration.setAnnotationList(annotations158); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1009:5: ( objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | classDeclaration | interfaceDeclaration | aliasDeclaration )
                int alt89=8;
                switch ( input.LA(1) ) {
                    case OBJECT_DEFINITION:
                    {
                        alt89=1;
                    }
                    break;
                    case ASSIGN:
                    {
                        alt89=2;
                    }
                    break;
                    case FUNCTION_MODIFIER:
                    case VOID_MODIFIER:
                    {
                        alt89=3;
                    }
                    break;
                    case VALUE_MODIFIER:
                    {
                        alt89=4;
                    }
                    break;
                    case DYNAMIC:
                    case LBRACE:
                    case LBRACKET:
                    case SMALLER_OP:
                    case UIDENTIFIER:
                    {
                        alt89=5;
                    }
                    break;
                    case CLASS_DEFINITION:
                    {
                        alt89=6;
                    }
                    break;
                    case INTERFACE_DEFINITION:
                    {
                        alt89=7;
                    }
                    break;
                    case ALIAS:
                    {
                        alt89=8;
                    }
                    break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 89, 0, input);

                        throw nvae;

                }

                switch (alt89) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1010:7: objectDeclaration
                    {
                        pushFollow(FOLLOW_objectDeclaration_in_declaration6777);
                        objectDeclaration159=objectDeclaration();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration =objectDeclaration159; }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1012:7: setterDeclaration
                    {
                        pushFollow(FOLLOW_setterDeclaration_in_declaration6793);
                        setterDeclaration160=setterDeclaration();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration =setterDeclaration160; }

                    }
                    break;
                    case 3 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1014:7: voidOrInferredMethodDeclaration
                    {
                        pushFollow(FOLLOW_voidOrInferredMethodDeclaration_in_declaration6809);
                        voidOrInferredMethodDeclaration161=voidOrInferredMethodDeclaration();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration =voidOrInferredMethodDeclaration161; }

                    }
                    break;
                    case 4 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1016:7: inferredAttributeDeclaration
                    {
                        pushFollow(FOLLOW_inferredAttributeDeclaration_in_declaration6825);
                        inferredAttributeDeclaration162=inferredAttributeDeclaration();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration =inferredAttributeDeclaration162; }

                    }
                    break;
                    case 5 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1018:7: typedMethodOrAttributeDeclaration
                    {
                        pushFollow(FOLLOW_typedMethodOrAttributeDeclaration_in_declaration6841);
                        typedMethodOrAttributeDeclaration163=typedMethodOrAttributeDeclaration();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration =typedMethodOrAttributeDeclaration163; }

                    }
                    break;
                    case 6 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1020:7: classDeclaration
                    {
                        pushFollow(FOLLOW_classDeclaration_in_declaration6857);
                        classDeclaration164=classDeclaration();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration =classDeclaration164; }

                    }
                    break;
                    case 7 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1022:7: interfaceDeclaration
                    {
                        pushFollow(FOLLOW_interfaceDeclaration_in_declaration6873);
                        interfaceDeclaration165=interfaceDeclaration();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration =interfaceDeclaration165; }

                    }
                    break;
                    case 8 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1024:7: aliasDeclaration
                    {
                        pushFollow(FOLLOW_aliasDeclaration_in_declaration6889);
                        aliasDeclaration166=aliasDeclaration();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration =aliasDeclaration166; }

                    }
                    break;

                }


                if ( state.backtracking==0 ) { declaration.setAnnotationList(annotations158);  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "declaration"



    // $ANTLR start "annotatedDeclarationStart"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1034:1: annotatedDeclarationStart : ( stringLiteral )? ( annotation )* declarationStart ;
    public void annotatedDeclarationStart() throws RecognitionException {
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1035:5: ( ( stringLiteral )? ( annotation )* declarationStart )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1035:7: ( stringLiteral )? ( annotation )* declarationStart
            {
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1035:7: ( stringLiteral )?
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==STRING_LITERAL||LA90_0==VERBATIM_STRING) ) {
                    alt90=1;
                }
                switch (alt90) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1035:7: stringLiteral
                    {
                        pushFollow(FOLLOW_stringLiteral_in_annotatedDeclarationStart6932);
                        stringLiteral();

                        state._fsp--;
                        if (state.failed) return ;

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1035:22: ( annotation )*
                loop91:
                do {
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( (LA91_0==LIDENTIFIER) ) {
                        alt91=1;
                    }


                    switch (alt91) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1035:22: annotation
                        {
                            pushFollow(FOLLOW_annotation_in_annotatedDeclarationStart6935);
                            annotation();

                            state._fsp--;
                            if (state.failed) return ;

                        }
                        break;

                        default :
                            break loop91;
                    }
                } while (true);


                pushFollow(FOLLOW_declarationStart_in_annotatedDeclarationStart6938);
                declarationStart();

                state._fsp--;
                if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedDeclarationStart"



    // $ANTLR start "annotatedAssertionStart"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1038:1: annotatedAssertionStart : ( stringLiteral )? ( annotation )* ASSERT ;
    public void annotatedAssertionStart() throws RecognitionException {
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1039:5: ( ( stringLiteral )? ( annotation )* ASSERT )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1039:7: ( stringLiteral )? ( annotation )* ASSERT
            {
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1039:7: ( stringLiteral )?
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==STRING_LITERAL||LA92_0==VERBATIM_STRING) ) {
                    alt92=1;
                }
                switch (alt92) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1039:7: stringLiteral
                    {
                        pushFollow(FOLLOW_stringLiteral_in_annotatedAssertionStart6955);
                        stringLiteral();

                        state._fsp--;
                        if (state.failed) return ;

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1039:22: ( annotation )*
                loop93:
                do {
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( (LA93_0==LIDENTIFIER) ) {
                        alt93=1;
                    }


                    switch (alt93) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1039:22: annotation
                        {
                            pushFollow(FOLLOW_annotation_in_annotatedAssertionStart6958);
                            annotation();

                            state._fsp--;
                            if (state.failed) return ;

                        }
                        break;

                        default :
                            break loop93;
                    }
                } while (true);


                match(input,ASSERT,FOLLOW_ASSERT_in_annotatedAssertionStart6961); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedAssertionStart"



    // $ANTLR start "declarationStart"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1045:1: declarationStart : ( VALUE_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | ASSIGN | INTERFACE_DEFINITION | CLASS_DEFINITION | OBJECT_DEFINITION | ALIAS | ( variadicType | DYNAMIC ) LIDENTIFIER );
    public void declarationStart() throws RecognitionException {
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1046:5: ( VALUE_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | ASSIGN | INTERFACE_DEFINITION | CLASS_DEFINITION | OBJECT_DEFINITION | ALIAS | ( variadicType | DYNAMIC ) LIDENTIFIER )
            int alt95=9;
            switch ( input.LA(1) ) {
                case VALUE_MODIFIER:
                {
                    alt95=1;
                }
                break;
                case FUNCTION_MODIFIER:
                {
                    alt95=2;
                }
                break;
                case VOID_MODIFIER:
                {
                    alt95=3;
                }
                break;
                case ASSIGN:
                {
                    alt95=4;
                }
                break;
                case INTERFACE_DEFINITION:
                {
                    alt95=5;
                }
                break;
                case CLASS_DEFINITION:
                {
                    alt95=6;
                }
                break;
                case OBJECT_DEFINITION:
                {
                    alt95=7;
                }
                break;
                case ALIAS:
                {
                    alt95=8;
                }
                break;
                case DYNAMIC:
                case LBRACE:
                case LBRACKET:
                case SMALLER_OP:
                case UIDENTIFIER:
                {
                    alt95=9;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 95, 0, input);

                    throw nvae;

            }

            switch (alt95) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1046:7: VALUE_MODIFIER ( LIDENTIFIER | UIDENTIFIER )
                {
                    match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_declarationStart6981); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1047:7: FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER )
                {
                    match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_declarationStart6996); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1048:7: VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER )
                {
                    match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_declarationStart7011); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                }
                break;
                case 4 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1049:7: ASSIGN
                {
                    match(input,ASSIGN,FOLLOW_ASSIGN_in_declarationStart7026); if (state.failed) return ;

                }
                break;
                case 5 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1050:7: INTERFACE_DEFINITION
                {
                    match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_declarationStart7034); if (state.failed) return ;

                }
                break;
                case 6 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1051:7: CLASS_DEFINITION
                {
                    match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_declarationStart7042); if (state.failed) return ;

                }
                break;
                case 7 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1052:7: OBJECT_DEFINITION
                {
                    match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_declarationStart7050); if (state.failed) return ;

                }
                break;
                case 8 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1053:7: ALIAS
                {
                    match(input,ALIAS,FOLLOW_ALIAS_in_declarationStart7058); if (state.failed) return ;

                }
                break;
                case 9 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1054:7: ( variadicType | DYNAMIC ) LIDENTIFIER
                {
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1054:7: ( variadicType | DYNAMIC )
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( ((LA94_0 >= LBRACE && LA94_0 <= LBRACKET)||LA94_0==SMALLER_OP||LA94_0==UIDENTIFIER) ) {
                        alt94=1;
                    }
                    else if ( (LA94_0==DYNAMIC) ) {
                        alt94=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 94, 0, input);

                        throw nvae;

                    }
                    switch (alt94) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1054:8: variadicType
                        {
                            pushFollow(FOLLOW_variadicType_in_declarationStart7068);
                            variadicType();

                            state._fsp--;
                            if (state.failed) return ;

                        }
                        break;
                        case 2 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1054:21: DYNAMIC
                        {
                            match(input,DYNAMIC,FOLLOW_DYNAMIC_in_declarationStart7070); if (state.failed) return ;

                        }
                        break;

                    }


                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_declarationStart7073); if (state.failed) return ;

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "declarationStart"



    // $ANTLR start "statement"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1057:1: statement returns [Statement statement] : ( directiveStatement | controlStatement | expressionOrSpecificationStatement );
    public Statement statement() throws RecognitionException {
        Statement statement = null;


        Directive directiveStatement167 =null;

        ControlStatement controlStatement168 =null;

        Statement expressionOrSpecificationStatement169 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1058:5: ( directiveStatement | controlStatement | expressionOrSpecificationStatement )
            int alt96=3;
            switch ( input.LA(1) ) {
                case BREAK:
                case CONTINUE:
                case RETURN:
                case THROW:
                {
                    alt96=1;
                }
                break;
                case DYNAMIC:
                case FOR_CLAUSE:
                case IF_CLAUSE:
                case SWITCH_CLAUSE:
                case TRY_CLAUSE:
                case WHILE_CLAUSE:
                {
                    alt96=2;
                }
                break;
                case BACKTICK:
                case CHAR_LITERAL:
                case DECREMENT_OP:
                case DIFFERENCE_OP:
                case FLOAT_LITERAL:
                case INCREMENT_OP:
                case LBRACE:
                case LBRACKET:
                case LIDENTIFIER:
                case LPAREN:
                case NATURAL_LITERAL:
                case NOT_OP:
                case OUTER:
                case PACKAGE:
                case STRING_LITERAL:
                case STRING_START:
                case SUM_OP:
                case SUPER:
                case THIS:
                case UIDENTIFIER:
                case VALUE_MODIFIER:
                case VERBATIM_STRING:
                {
                    alt96=3;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 96, 0, input);

                    throw nvae;

            }

            switch (alt96) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1058:7: directiveStatement
                {
                    pushFollow(FOLLOW_directiveStatement_in_statement7094);
                    directiveStatement167=directiveStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = directiveStatement167; }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1060:7: controlStatement
                {
                    pushFollow(FOLLOW_controlStatement_in_statement7110);
                    controlStatement168=controlStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = controlStatement168; }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1062:7: expressionOrSpecificationStatement
                {
                    pushFollow(FOLLOW_expressionOrSpecificationStatement_in_statement7126);
                    expressionOrSpecificationStatement169=expressionOrSpecificationStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = expressionOrSpecificationStatement169; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "statement"



    // $ANTLR start "expressionOrSpecificationStatement"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1066:1: expressionOrSpecificationStatement returns [Statement statement] : expression ( lazySpecifier )? ( SEMICOLON | COMMA ) ;
    public Statement expressionOrSpecificationStatement() throws RecognitionException {
        Statement statement = null;


        Token SEMICOLON172=null;
        Token COMMA173=null;
        Expression expression170 =null;

        SpecifierExpression lazySpecifier171 =null;


        SpecifierStatement ss=new SpecifierStatement(null);
        ExpressionStatement es=new ExpressionStatement(null);
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1069:5: ( expression ( lazySpecifier )? ( SEMICOLON | COMMA ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1069:7: expression ( lazySpecifier )? ( SEMICOLON | COMMA )
            {
                pushFollow(FOLLOW_expression_in_expressionOrSpecificationStatement7164);
                expression170=expression();

                state._fsp--;
                if (state.failed) return statement;

                if ( state.backtracking==0 ) { statement = es;
                    if (expression170!=null)
                        es.setExpression(expression170);
                    if (expression170.getTerm() instanceof AssignOp) {
                        AssignOp a = (AssignOp) expression170.getTerm();
                        if (a.getLeftTerm() instanceof BaseMemberExpression ||
                                a.getLeftTerm() instanceof ParameterizedExpression) {
                            SpecifierExpression se = new SpecifierExpression(null);
                            Expression e = new Expression(null);
                            se.setExpression(e);
                            e.setTerm(a.getRightTerm());
                            ss.setSpecifierExpression(se);
                            ss.setBaseMemberExpression(a.getLeftTerm());
                            statement = ss;
                        }
                    }
                }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1087:7: ( lazySpecifier )?
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==COMPUTE) ) {
                    alt97=1;
                }
                switch (alt97) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1093:9: lazySpecifier
                    {
                        pushFollow(FOLLOW_lazySpecifier_in_expressionOrSpecificationStatement7200);
                        lazySpecifier171=lazySpecifier();

                        state._fsp--;
                        if (state.failed) return statement;

                        if ( state.backtracking==0 ) { ss.setSpecifierExpression(lazySpecifier171);
                            ss.setBaseMemberExpression(expression170.getTerm());
                            statement = ss; }

                    }
                    break;

                }


                if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1099:7: ( SEMICOLON | COMMA )
                int alt98=2;
                int LA98_0 = input.LA(1);

                if ( (LA98_0==SEMICOLON) ) {
                    alt98=1;
                }
                else if ( (LA98_0==COMMA) ) {
                    alt98=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 98, 0, input);

                    throw nvae;

                }
                switch (alt98) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1100:9: SEMICOLON
                    {
                        SEMICOLON172=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_expressionOrSpecificationStatement7245); if (state.failed) return statement;

                        if ( state.backtracking==0 ) { statement.setEndToken(SEMICOLON172); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1102:9: COMMA
                    {
                        if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                new MismatchedTokenException(SEMICOLON, input)); }

                        COMMA173=(Token)match(input,COMMA,FOLLOW_COMMA_in_expressionOrSpecificationStatement7275); if (state.failed) return statement;

                        if ( state.backtracking==0 ) { statement.setEndToken(COMMA173); }

                    }
                    break;

                }


                if ( state.backtracking==0 ) { expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "expressionOrSpecificationStatement"



    // $ANTLR start "directiveStatement"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1110:1: directiveStatement returns [Directive directive] : d= directive SEMICOLON ;
    public Directive directiveStatement() throws RecognitionException {
        Directive directive = null;


        Token SEMICOLON174=null;
        Directive d =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1111:5: (d= directive SEMICOLON )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1111:7: d= directive SEMICOLON
            {
                pushFollow(FOLLOW_directive_in_directiveStatement7324);
                d=directive();

                state._fsp--;
                if (state.failed) return directive;

                if ( state.backtracking==0 ) { directive =d; }

                if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                SEMICOLON174=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_directiveStatement7350); if (state.failed) return directive;

                if ( state.backtracking==0 ) { directive.setEndToken(SEMICOLON174); }

                if ( state.backtracking==0 ) { expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "directiveStatement"



    // $ANTLR start "directive"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1119:1: directive returns [Directive directive] : ( returnDirective | throwDirective | breakDirective | continueDirective );
    public Directive directive() throws RecognitionException {
        Directive directive = null;


        Return returnDirective175 =null;

        Throw throwDirective176 =null;

        Break breakDirective177 =null;

        Continue continueDirective178 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1120:5: ( returnDirective | throwDirective | breakDirective | continueDirective )
            int alt99=4;
            switch ( input.LA(1) ) {
                case RETURN:
                {
                    alt99=1;
                }
                break;
                case THROW:
                {
                    alt99=2;
                }
                break;
                case BREAK:
                {
                    alt99=3;
                }
                break;
                case CONTINUE:
                {
                    alt99=4;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return directive;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 99, 0, input);

                    throw nvae;

            }

            switch (alt99) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1120:7: returnDirective
                {
                    pushFollow(FOLLOW_returnDirective_in_directive7387);
                    returnDirective175=returnDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = returnDirective175; }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1122:7: throwDirective
                {
                    pushFollow(FOLLOW_throwDirective_in_directive7403);
                    throwDirective176=throwDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = throwDirective176; }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1124:7: breakDirective
                {
                    pushFollow(FOLLOW_breakDirective_in_directive7419);
                    breakDirective177=breakDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = breakDirective177; }

                }
                break;
                case 4 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1126:7: continueDirective
                {
                    pushFollow(FOLLOW_continueDirective_in_directive7435);
                    continueDirective178=continueDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = continueDirective178; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "directive"



    // $ANTLR start "returnDirective"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1130:1: returnDirective returns [Return directive] : RETURN ( functionOrExpression )? ;
    public Return returnDirective() throws RecognitionException {
        Return directive = null;


        Token RETURN179=null;
        Expression functionOrExpression180 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1131:5: ( RETURN ( functionOrExpression )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1131:7: RETURN ( functionOrExpression )?
            {
                RETURN179=(Token)match(input,RETURN,FOLLOW_RETURN_in_returnDirective7464); if (state.failed) return directive;

                if ( state.backtracking==0 ) { directive = new Return(RETURN179); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1133:7: ( functionOrExpression )?
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==BACKTICK||LA100_0==CHAR_LITERAL||(LA100_0 >= DECREMENT_OP && LA100_0 <= DIFFERENCE_OP)||LA100_0==FLOAT_LITERAL||LA100_0==FUNCTION_MODIFIER||LA100_0==INCREMENT_OP||(LA100_0 >= LBRACE && LA100_0 <= LBRACKET)||LA100_0==LIDENTIFIER||LA100_0==LPAREN||LA100_0==NATURAL_LITERAL||LA100_0==NOT_OP||(LA100_0 >= OUTER && LA100_0 <= PACKAGE)||LA100_0==STRING_LITERAL||LA100_0==STRING_START||(LA100_0 >= SUM_OP && LA100_0 <= SUPER)||LA100_0==THIS||LA100_0==UIDENTIFIER||(LA100_0 >= VALUE_MODIFIER && LA100_0 <= VOID_MODIFIER)) ) {
                    alt100=1;
                }
                switch (alt100) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1134:9: functionOrExpression
                    {
                        pushFollow(FOLLOW_functionOrExpression_in_returnDirective7491);
                        functionOrExpression180=functionOrExpression();

                        state._fsp--;
                        if (state.failed) return directive;

                        if ( state.backtracking==0 ) { directive.setExpression(functionOrExpression180); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "returnDirective"



    // $ANTLR start "throwDirective"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1139:1: throwDirective returns [Throw directive] : THROW ( expression )? ;
    public Throw throwDirective() throws RecognitionException {
        Throw directive = null;


        Token THROW181=null;
        Expression expression182 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1140:5: ( THROW ( expression )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1140:7: THROW ( expression )?
            {
                THROW181=(Token)match(input,THROW,FOLLOW_THROW_in_throwDirective7531); if (state.failed) return directive;

                if ( state.backtracking==0 ) { directive = new Throw(THROW181); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1142:7: ( expression )?
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==BACKTICK||LA101_0==CHAR_LITERAL||(LA101_0 >= DECREMENT_OP && LA101_0 <= DIFFERENCE_OP)||LA101_0==FLOAT_LITERAL||LA101_0==INCREMENT_OP||(LA101_0 >= LBRACE && LA101_0 <= LBRACKET)||LA101_0==LIDENTIFIER||LA101_0==LPAREN||LA101_0==NATURAL_LITERAL||LA101_0==NOT_OP||(LA101_0 >= OUTER && LA101_0 <= PACKAGE)||LA101_0==STRING_LITERAL||LA101_0==STRING_START||(LA101_0 >= SUM_OP && LA101_0 <= SUPER)||LA101_0==THIS||LA101_0==UIDENTIFIER||(LA101_0 >= VALUE_MODIFIER && LA101_0 <= VERBATIM_STRING)) ) {
                    alt101=1;
                }
                switch (alt101) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1143:9: expression
                    {
                        pushFollow(FOLLOW_expression_in_throwDirective7558);
                        expression182=expression();

                        state._fsp--;
                        if (state.failed) return directive;

                        if ( state.backtracking==0 ) { directive.setExpression(expression182); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "throwDirective"



    // $ANTLR start "breakDirective"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1148:1: breakDirective returns [Break directive] : BREAK ;
    public Break breakDirective() throws RecognitionException {
        Break directive = null;


        Token BREAK183=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1149:5: ( BREAK )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1149:7: BREAK
            {
                BREAK183=(Token)match(input,BREAK,FOLLOW_BREAK_in_breakDirective7598); if (state.failed) return directive;

                if ( state.backtracking==0 ) { directive = new Break(BREAK183); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "breakDirective"



    // $ANTLR start "continueDirective"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1153:1: continueDirective returns [Continue directive] : CONTINUE ;
    public Continue continueDirective() throws RecognitionException {
        Continue directive = null;


        Token CONTINUE184=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1154:5: ( CONTINUE )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1154:7: CONTINUE
            {
                CONTINUE184=(Token)match(input,CONTINUE,FOLLOW_CONTINUE_in_continueDirective7627); if (state.failed) return directive;

                if ( state.backtracking==0 ) { directive = new Continue(CONTINUE184); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "continueDirective"



    // $ANTLR start "typeSpecifier"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1158:1: typeSpecifier returns [TypeSpecifier typeSpecifier] : ( COMPUTE | SPECIFY ) type ;
    public TypeSpecifier typeSpecifier() throws RecognitionException {
        TypeSpecifier typeSpecifier = null;


        Token COMPUTE185=null;
        Token SPECIFY186=null;
        StaticType type187 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1159:5: ( ( COMPUTE | SPECIFY ) type )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1159:7: ( COMPUTE | SPECIFY ) type
            {
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1159:7: ( COMPUTE | SPECIFY )
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==COMPUTE) ) {
                    alt102=1;
                }
                else if ( (LA102_0==SPECIFY) ) {
                    alt102=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return typeSpecifier;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 102, 0, input);

                    throw nvae;

                }
                switch (alt102) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1160:9: COMPUTE
                    {
                        COMPUTE185=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_typeSpecifier7666); if (state.failed) return typeSpecifier;

                        if ( state.backtracking==0 ) { typeSpecifier = new TypeSpecifier(COMPUTE185); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1163:9: SPECIFY
                    {
                        SPECIFY186=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_typeSpecifier7695); if (state.failed) return typeSpecifier;

                        if ( state.backtracking==0 ) { typeSpecifier = new TypeSpecifier(SPECIFY186); }

                    }
                    break;

                }


                pushFollow(FOLLOW_type_in_typeSpecifier7722);
                type187=type();

                state._fsp--;
                if (state.failed) return typeSpecifier;

                if ( state.backtracking==0 ) { typeSpecifier.setType(type187); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return typeSpecifier;
    }
    // $ANTLR end "typeSpecifier"



    // $ANTLR start "typeDefault"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1170:1: typeDefault returns [TypeSpecifier typeSpecifier] : SPECIFY type ;
    public TypeSpecifier typeDefault() throws RecognitionException {
        TypeSpecifier typeSpecifier = null;


        Token SPECIFY188=null;
        StaticType type189 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1171:5: ( SPECIFY type )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1171:7: SPECIFY type
            {
                SPECIFY188=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_typeDefault7751); if (state.failed) return typeSpecifier;

                if ( state.backtracking==0 ) { typeSpecifier = new DefaultTypeArgument(SPECIFY188); }

                pushFollow(FOLLOW_type_in_typeDefault7768);
                type189=type();

                state._fsp--;
                if (state.failed) return typeSpecifier;

                if ( state.backtracking==0 ) { typeSpecifier.setType(type189); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return typeSpecifier;
    }
    // $ANTLR end "typeDefault"



    // $ANTLR start "specifier"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1177:1: specifier returns [SpecifierExpression specifierExpression] : SPECIFY functionOrExpression ;
    public SpecifierExpression specifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token SPECIFY190=null;
        Expression functionOrExpression191 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1178:5: ( SPECIFY functionOrExpression )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1178:7: SPECIFY functionOrExpression
            {
                SPECIFY190=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_specifier7797); if (state.failed) return specifierExpression;

                if ( state.backtracking==0 ) { specifierExpression = new SpecifierExpression(SPECIFY190); }

                pushFollow(FOLLOW_functionOrExpression_in_specifier7813);
                functionOrExpression191=functionOrExpression();

                state._fsp--;
                if (state.failed) return specifierExpression;

                if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression191); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "specifier"



    // $ANTLR start "lazySpecifier"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1184:1: lazySpecifier returns [SpecifierExpression specifierExpression] : COMPUTE functionOrExpression ;
    public SpecifierExpression lazySpecifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token COMPUTE192=null;
        Expression functionOrExpression193 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1185:5: ( COMPUTE functionOrExpression )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1185:7: COMPUTE functionOrExpression
            {
                COMPUTE192=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_lazySpecifier7842); if (state.failed) return specifierExpression;

                if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(COMPUTE192); }

                pushFollow(FOLLOW_functionOrExpression_in_lazySpecifier7858);
                functionOrExpression193=functionOrExpression();

                state._fsp--;
                if (state.failed) return specifierExpression;

                if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression193); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "lazySpecifier"



    // $ANTLR start "functionSpecifier"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1191:1: functionSpecifier returns [SpecifierExpression specifierExpression] : ( COMPUTE | SPECIFY ) functionOrExpression ;
    public SpecifierExpression functionSpecifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token COMPUTE194=null;
        Token SPECIFY195=null;
        Expression functionOrExpression196 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1192:5: ( ( COMPUTE | SPECIFY ) functionOrExpression )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1192:7: ( COMPUTE | SPECIFY ) functionOrExpression
            {
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1192:7: ( COMPUTE | SPECIFY )
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( (LA103_0==COMPUTE) ) {
                    alt103=1;
                }
                else if ( (LA103_0==SPECIFY) ) {
                    alt103=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return specifierExpression;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 103, 0, input);

                    throw nvae;

                }
                switch (alt103) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1193:9: COMPUTE
                    {
                        COMPUTE194=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_functionSpecifier7897); if (state.failed) return specifierExpression;

                        if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(COMPUTE194); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1196:9: SPECIFY
                    {
                        SPECIFY195=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_functionSpecifier7925); if (state.failed) return specifierExpression;

                        if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(SPECIFY195); }

                    }
                    break;

                }


                pushFollow(FOLLOW_functionOrExpression_in_functionSpecifier7951);
                functionOrExpression196=functionOrExpression();

                state._fsp--;
                if (state.failed) return specifierExpression;

                if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression196); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "functionSpecifier"



    // $ANTLR start "expression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1203:1: expression returns [Expression expression] : assignmentExpression ;
    public Expression expression() throws RecognitionException {
        Expression expression = null;


        Term assignmentExpression197 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1204:5: ( assignmentExpression )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1204:7: assignmentExpression
            {
                if ( state.backtracking==0 ) { expression = new Expression(null); }

                pushFollow(FOLLOW_assignmentExpression_in_expression7988);
                assignmentExpression197=assignmentExpression();

                state._fsp--;
                if (state.failed) return expression;

                if ( state.backtracking==0 ) { expression.setTerm(assignmentExpression197); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "expression"



    // $ANTLR start "base"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1209:1: base returns [Primary primary] : ( nonstringLiteral | stringExpression | metaLiteral | enumeration | tuple | dynamicObject | selfReference | parExpression | baseReference );
    public Primary base() throws RecognitionException {
        Primary primary = null;


        Literal nonstringLiteral198 =null;

        Atom stringExpression199 =null;

        MetaLiteral metaLiteral200 =null;

        SequenceEnumeration enumeration201 =null;

        Tuple tuple202 =null;

        Dynamic dynamicObject203 =null;

        Atom selfReference204 =null;

        Expression parExpression205 =null;

        CeylonParser.baseReference_return baseReference206 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1210:5: ( nonstringLiteral | stringExpression | metaLiteral | enumeration | tuple | dynamicObject | selfReference | parExpression | baseReference )
            int alt104=9;
            switch ( input.LA(1) ) {
                case CHAR_LITERAL:
                case FLOAT_LITERAL:
                case NATURAL_LITERAL:
                {
                    alt104=1;
                }
                break;
                case STRING_LITERAL:
                case STRING_START:
                case VERBATIM_STRING:
                {
                    alt104=2;
                }
                break;
                case BACKTICK:
                {
                    alt104=3;
                }
                break;
                case LBRACE:
                {
                    alt104=4;
                }
                break;
                case LBRACKET:
                {
                    alt104=5;
                }
                break;
                case VALUE_MODIFIER:
                {
                    alt104=6;
                }
                break;
                case OUTER:
                case PACKAGE:
                case SUPER:
                case THIS:
                {
                    alt104=7;
                }
                break;
                case LPAREN:
                {
                    alt104=8;
                }
                break;
                case LIDENTIFIER:
                case UIDENTIFIER:
                {
                    alt104=9;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return primary;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 104, 0, input);

                    throw nvae;

            }

            switch (alt104) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1210:7: nonstringLiteral
                {
                    pushFollow(FOLLOW_nonstringLiteral_in_base8017);
                    nonstringLiteral198=nonstringLiteral();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =nonstringLiteral198; }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1212:7: stringExpression
                {
                    pushFollow(FOLLOW_stringExpression_in_base8033);
                    stringExpression199=stringExpression();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =stringExpression199; }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1214:7: metaLiteral
                {
                    pushFollow(FOLLOW_metaLiteral_in_base8049);
                    metaLiteral200=metaLiteral();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =metaLiteral200; }

                }
                break;
                case 4 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1216:7: enumeration
                {
                    pushFollow(FOLLOW_enumeration_in_base8065);
                    enumeration201=enumeration();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =enumeration201; }

                }
                break;
                case 5 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1218:7: tuple
                {
                    pushFollow(FOLLOW_tuple_in_base8081);
                    tuple202=tuple();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =tuple202; }

                }
                break;
                case 6 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1220:7: dynamicObject
                {
                    pushFollow(FOLLOW_dynamicObject_in_base8097);
                    dynamicObject203=dynamicObject();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =dynamicObject203; }

                }
                break;
                case 7 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1222:7: selfReference
                {
                    pushFollow(FOLLOW_selfReference_in_base8113);
                    selfReference204=selfReference();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =selfReference204; }

                }
                break;
                case 8 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1224:7: parExpression
                {
                    pushFollow(FOLLOW_parExpression_in_base8129);
                    parExpression205=parExpression();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =parExpression205; }

                }
                break;
                case 9 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1226:7: baseReference
                {
                    pushFollow(FOLLOW_baseReference_in_base8145);
                    baseReference206=baseReference();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { BaseMemberOrTypeExpression be;
                        if ((baseReference206!=null?baseReference206.isMember:false))
                            be = new BaseMemberExpression(null);
                        else
                            be = new BaseTypeExpression(null);
                        be.setIdentifier((baseReference206!=null?baseReference206.identifier:null));
                        be.setTypeArguments( new InferredTypeArguments(null) );
                        if ((baseReference206!=null?baseReference206.typeArgumentList:null)!=null)
                            be.setTypeArguments((baseReference206!=null?baseReference206.typeArgumentList:null));
                        primary =be; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return primary;
    }
    // $ANTLR end "base"


    public static class baseReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
        public boolean isMember;
    };


    // $ANTLR start "baseReference"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1239:1: baseReference returns [Identifier identifier, TypeArgumentList typeArgumentList, \n boolean isMember] : ( memberReference | typeReference ) ;
    public CeylonParser.baseReference_return baseReference() throws RecognitionException {
        CeylonParser.baseReference_return retval = new CeylonParser.baseReference_return();
        retval.start = input.LT(1);


        CeylonParser.memberReference_return memberReference207 =null;

        CeylonParser.typeReference_return typeReference208 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1241:5: ( ( memberReference | typeReference ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1242:5: ( memberReference | typeReference )
            {
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1242:5: ( memberReference | typeReference )
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==LIDENTIFIER) ) {
                    alt105=1;
                }
                else if ( (LA105_0==UIDENTIFIER) ) {
                    alt105=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 105, 0, input);

                    throw nvae;

                }
                switch (alt105) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1243:7: memberReference
                    {
                        pushFollow(FOLLOW_memberReference_in_baseReference8187);
                        memberReference207=memberReference();

                        state._fsp--;
                        if (state.failed) return retval;

                        if ( state.backtracking==0 ) { retval.identifier = (memberReference207!=null?memberReference207.identifier:null);
                            retval.typeArgumentList = (memberReference207!=null?memberReference207.typeArgumentList:null);
                            retval.isMember = true; }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1247:7: typeReference
                    {
                        pushFollow(FOLLOW_typeReference_in_baseReference8203);
                        typeReference208=typeReference();

                        state._fsp--;
                        if (state.failed) return retval;

                        if ( state.backtracking==0 ) { retval.identifier = (typeReference208!=null?typeReference208.identifier:null);
                            retval.typeArgumentList = (typeReference208!=null?typeReference208.typeArgumentList:null);
                            retval.isMember = false; }

                    }
                    break;

                }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "baseReference"



    // $ANTLR start "primary"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1254:1: primary returns [Primary primary] : base ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )* ;
    public Primary primary() throws RecognitionException {
        Primary primary = null;


        Primary base209 =null;

        CeylonParser.qualifiedReference_return qualifiedReference210 =null;

        IndexExpression indexOrIndexRange211 =null;

        ParameterList parameters212 =null;

        PositionalArgumentList positionalArguments213 =null;

        NamedArgumentList namedArguments214 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1255:5: ( base ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1255:7: base ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )*
            {
                pushFollow(FOLLOW_base_in_primary8238);
                base209=base();

                state._fsp--;
                if (state.failed) return primary;

                if ( state.backtracking==0 ) { primary =base209; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1257:5: ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )*
                loop106:
                do {
                    int alt106=6;
                    alt106 = dfa106.predict(input);
                    switch (alt106) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1260:11: qualifiedReference
                        {
                            pushFollow(FOLLOW_qualifiedReference_in_primary8271);
                            qualifiedReference210=qualifiedReference();

                            state._fsp--;
                            if (state.failed) return primary;

                            if ( state.backtracking==0 ) { QualifiedMemberOrTypeExpression qe;
                                if ((qualifiedReference210!=null?qualifiedReference210.isMember:false))
                                    qe = new QualifiedMemberExpression(null);
                                else
                                    qe = new QualifiedTypeExpression(null);
                                qe.setPrimary(primary);
                                qe.setMemberOperator((qualifiedReference210!=null?qualifiedReference210.operator:null));
                                qe.setIdentifier((qualifiedReference210!=null?qualifiedReference210.identifier:null));
                                qe.setTypeArguments( new InferredTypeArguments(null) );
                                if ((qualifiedReference210!=null?qualifiedReference210.typeArgumentList:null)!=null)
                                    qe.setTypeArguments((qualifiedReference210!=null?qualifiedReference210.typeArgumentList:null));
                                primary =qe; }

                        }
                        break;
                        case 2 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1273:9: indexOrIndexRange
                        {
                            pushFollow(FOLLOW_indexOrIndexRange_in_primary8289);
                            indexOrIndexRange211=indexOrIndexRange();

                            state._fsp--;
                            if (state.failed) return primary;

                            if ( state.backtracking==0 ) { indexOrIndexRange211.setPrimary(primary);
                                primary = indexOrIndexRange211; }

                        }
                        break;
                        case 3 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1276:9: ( specifierParametersStart )=> parameters
                        {
                            pushFollow(FOLLOW_parameters_in_primary8315);
                            parameters212=parameters();

                            state._fsp--;
                            if (state.failed) return primary;

                            if ( state.backtracking==0 ) { ParameterizedExpression pe;
                                if (primary instanceof ParameterizedExpression) {
                                    pe = (ParameterizedExpression) primary;
                                } else {
                                    pe = new ParameterizedExpression(null);
                                    pe.setPrimary(primary);
                                }
                                pe.addParameterList(parameters212);
                                primary = pe; }

                        }
                        break;
                        case 4 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1286:9: positionalArguments
                        {
                            pushFollow(FOLLOW_positionalArguments_in_primary8335);
                            positionalArguments213=positionalArguments();

                            state._fsp--;
                            if (state.failed) return primary;

                            if ( state.backtracking==0 ) { InvocationExpression ie = new InvocationExpression(null);
                                ie.setPrimary(primary);
                                ie.setPositionalArgumentList(positionalArguments213);
                                primary =ie; }

                        }
                        break;
                        case 5 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1291:9: namedArguments
                        {
                            pushFollow(FOLLOW_namedArguments_in_primary8356);
                            namedArguments214=namedArguments();

                            state._fsp--;
                            if (state.failed) return primary;

                            if ( state.backtracking==0 ) { InvocationExpression ie = new InvocationExpression(null);
                                ie.setPrimary(primary);
                                ie.setNamedArgumentList(namedArguments214);
                                primary =ie; }

                        }
                        break;

                        default :
                            break loop106;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return primary;
    }
    // $ANTLR end "primary"



    // $ANTLR start "specifierParametersStart"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1299:1: specifierParametersStart : LPAREN ( compilerAnnotations annotatedDeclarationStart | RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) ) ;
    public void specifierParametersStart() throws RecognitionException {
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1300:5: ( LPAREN ( compilerAnnotations annotatedDeclarationStart | RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1300:7: LPAREN ( compilerAnnotations annotatedDeclarationStart | RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) )
            {
                match(input,LPAREN,FOLLOW_LPAREN_in_specifierParametersStart8390); if (state.failed) return ;

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1300:14: ( compilerAnnotations annotatedDeclarationStart | RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) )
                int alt108=2;
                int LA108_0 = input.LA(1);

                if ( (LA108_0==ALIAS||LA108_0==ASSIGN||LA108_0==CLASS_DEFINITION||LA108_0==COMPILER_ANNOTATION||LA108_0==DYNAMIC||LA108_0==FUNCTION_MODIFIER||LA108_0==INTERFACE_DEFINITION||(LA108_0 >= LBRACE && LA108_0 <= LBRACKET)||LA108_0==LIDENTIFIER||LA108_0==OBJECT_DEFINITION||LA108_0==SMALLER_OP||LA108_0==STRING_LITERAL||LA108_0==UIDENTIFIER||(LA108_0 >= VALUE_MODIFIER && LA108_0 <= VOID_MODIFIER)) ) {
                    alt108=1;
                }
                else if ( (LA108_0==RPAREN) ) {
                    alt108=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 108, 0, input);

                    throw nvae;

                }
                switch (alt108) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1300:15: compilerAnnotations annotatedDeclarationStart
                    {
                        pushFollow(FOLLOW_compilerAnnotations_in_specifierParametersStart8393);
                        compilerAnnotations();

                        state._fsp--;
                        if (state.failed) return ;

                        pushFollow(FOLLOW_annotatedDeclarationStart_in_specifierParametersStart8395);
                        annotatedDeclarationStart();

                        state._fsp--;
                        if (state.failed) return ;

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1300:63: RPAREN ( SPECIFY | COMPUTE | specifierParametersStart )
                    {
                        match(input,RPAREN,FOLLOW_RPAREN_in_specifierParametersStart8399); if (state.failed) return ;

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1300:70: ( SPECIFY | COMPUTE | specifierParametersStart )
                        int alt107=3;
                        switch ( input.LA(1) ) {
                            case SPECIFY:
                            {
                                alt107=1;
                            }
                            break;
                            case COMPUTE:
                            {
                                alt107=2;
                            }
                            break;
                            case LPAREN:
                            {
                                alt107=3;
                            }
                            break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return ;}
                                NoViableAltException nvae =
                                        new NoViableAltException("", 107, 0, input);

                                throw nvae;

                        }

                        switch (alt107) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1300:71: SPECIFY
                            {
                                match(input,SPECIFY,FOLLOW_SPECIFY_in_specifierParametersStart8402); if (state.failed) return ;

                            }
                            break;
                            case 2 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1300:79: COMPUTE
                            {
                                match(input,COMPUTE,FOLLOW_COMPUTE_in_specifierParametersStart8404); if (state.failed) return ;

                            }
                            break;
                            case 3 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1300:87: specifierParametersStart
                            {
                                pushFollow(FOLLOW_specifierParametersStart_in_specifierParametersStart8406);
                                specifierParametersStart();

                                state._fsp--;
                                if (state.failed) return ;

                            }
                            break;

                        }


                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "specifierParametersStart"


    public static class qualifiedReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public MemberOperator operator;
        public TypeArgumentList typeArgumentList;
        public boolean isMember;
    };


    // $ANTLR start "qualifiedReference"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1303:1: qualifiedReference returns [Identifier identifier, MemberOperator operator, \n TypeArgumentList typeArgumentList, boolean isMember] : memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>) ;
    public CeylonParser.qualifiedReference_return qualifiedReference() throws RecognitionException {
        CeylonParser.qualifiedReference_return retval = new CeylonParser.qualifiedReference_return();
        retval.start = input.LT(1);


        MemberOperator memberSelectionOperator215 =null;

        CeylonParser.memberReference_return memberReference216 =null;

        CeylonParser.typeReference_return typeReference217 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1305:5: ( memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1305:7: memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)
            {
                pushFollow(FOLLOW_memberSelectionOperator_in_qualifiedReference8429);
                memberSelectionOperator215=memberSelectionOperator();

                state._fsp--;
                if (state.failed) return retval;

                if ( state.backtracking==0 ) { retval.operator = memberSelectionOperator215;
                    retval.identifier = new Identifier(retval.operator.getToken());
                    retval.identifier.setText("");
                    retval.isMember =true; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1310:7: ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)
                int alt109=3;
                alt109 = dfa109.predict(input);
                switch (alt109) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1311:9: memberReference
                    {
                        pushFollow(FOLLOW_memberReference_in_qualifiedReference8457);
                        memberReference216=memberReference();

                        state._fsp--;
                        if (state.failed) return retval;

                        if ( state.backtracking==0 ) { retval.identifier = (memberReference216!=null?memberReference216.identifier:null);
                            retval.typeArgumentList = (memberReference216!=null?memberReference216.typeArgumentList:null); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1314:9: typeReference
                    {
                        pushFollow(FOLLOW_typeReference_in_qualifiedReference8477);
                        typeReference217=typeReference();

                        state._fsp--;
                        if (state.failed) return retval;

                        if ( state.backtracking==0 ) { retval.identifier = (typeReference217!=null?typeReference217.identifier:null);
                            retval.typeArgumentList = (typeReference217!=null?typeReference217.typeArgumentList:null);
                            retval.isMember =false; }

                    }
                    break;
                    case 3 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1318:9: (~ ( LIDENTIFIER | UIDENTIFIER ) )=>
                    {
                        if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

                }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "qualifiedReference"



    // $ANTLR start "memberSelectionOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1324:1: memberSelectionOperator returns [MemberOperator operator] : ( MEMBER_OP | SAFE_MEMBER_OP | SPREAD_OP );
    public MemberOperator memberSelectionOperator() throws RecognitionException {
        MemberOperator operator = null;


        Token MEMBER_OP218=null;
        Token SAFE_MEMBER_OP219=null;
        Token SPREAD_OP220=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1325:5: ( MEMBER_OP | SAFE_MEMBER_OP | SPREAD_OP )
            int alt110=3;
            switch ( input.LA(1) ) {
                case MEMBER_OP:
                {
                    alt110=1;
                }
                break;
                case SAFE_MEMBER_OP:
                {
                    alt110=2;
                }
                break;
                case SPREAD_OP:
                {
                    alt110=3;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return operator;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 110, 0, input);

                    throw nvae;

            }

            switch (alt110) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1325:7: MEMBER_OP
                {
                    MEMBER_OP218=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_memberSelectionOperator8544); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new MemberOp(MEMBER_OP218); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1327:7: SAFE_MEMBER_OP
                {
                    SAFE_MEMBER_OP219=(Token)match(input,SAFE_MEMBER_OP,FOLLOW_SAFE_MEMBER_OP_in_memberSelectionOperator8560); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new SafeMemberOp(SAFE_MEMBER_OP219); }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1329:7: SPREAD_OP
                {
                    SPREAD_OP220=(Token)match(input,SPREAD_OP,FOLLOW_SPREAD_OP_in_memberSelectionOperator8576); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new SpreadOp(SPREAD_OP220); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "memberSelectionOperator"



    // $ANTLR start "enumeration"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1333:1: enumeration returns [SequenceEnumeration sequenceEnumeration] : LBRACE ( sequencedArgument )? RBRACE ;
    public SequenceEnumeration enumeration() throws RecognitionException {
        SequenceEnumeration sequenceEnumeration = null;


        Token LBRACE221=null;
        Token RBRACE223=null;
        SequencedArgument sequencedArgument222 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1334:5: ( LBRACE ( sequencedArgument )? RBRACE )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1334:7: LBRACE ( sequencedArgument )? RBRACE
            {
                LBRACE221=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_enumeration8605); if (state.failed) return sequenceEnumeration;

                if ( state.backtracking==0 ) { sequenceEnumeration = new SequenceEnumeration(LBRACE221); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1336:7: ( sequencedArgument )?
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( (LA111_0==ALIAS||(LA111_0 >= ASSERT && LA111_0 <= ASSIGN)||(LA111_0 >= BACKTICK && LA111_0 <= BREAK)||(LA111_0 >= CHAR_LITERAL && LA111_0 <= CLASS_DEFINITION)||LA111_0==COMPILER_ANNOTATION||LA111_0==CONTINUE||(LA111_0 >= DECREMENT_OP && LA111_0 <= DIFFERENCE_OP)||LA111_0==DYNAMIC||(LA111_0 >= FLOAT_LITERAL && LA111_0 <= FUNCTION_MODIFIER)||(LA111_0 >= IF_CLAUSE && LA111_0 <= INTERFACE_DEFINITION)||LA111_0==IN_OP||(LA111_0 >= LBRACE && LA111_0 <= LBRACKET)||LA111_0==LIDENTIFIER||LA111_0==LPAREN||LA111_0==MODULE||LA111_0==NATURAL_LITERAL||(LA111_0 >= NOT_OP && LA111_0 <= OBJECT_DEFINITION)||(LA111_0 >= OUT && LA111_0 <= PACKAGE)||LA111_0==PRODUCT_OP||(LA111_0 >= RETURN && LA111_0 <= RPAREN)||(LA111_0 >= SEMICOLON && LA111_0 <= SMALLER_OP)||LA111_0==STRING_LITERAL||LA111_0==STRING_START||(LA111_0 >= SUM_OP && LA111_0 <= SWITCH_CLAUSE)||(LA111_0 >= THIS && LA111_0 <= UIDENTIFIER)||(LA111_0 >= VALUE_MODIFIER && LA111_0 <= WHILE_CLAUSE)) ) {
                    alt111=1;
                }
                switch (alt111) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1337:9: sequencedArgument
                    {
                        pushFollow(FOLLOW_sequencedArgument_in_enumeration8633);
                        sequencedArgument222=sequencedArgument();

                        state._fsp--;
                        if (state.failed) return sequenceEnumeration;

                        if ( state.backtracking==0 ) { sequenceEnumeration.setSequencedArgument(sequencedArgument222); }

                    }
                    break;

                }


                RBRACE223=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_enumeration8660); if (state.failed) return sequenceEnumeration;

                if ( state.backtracking==0 ) { sequenceEnumeration.setEndToken(RBRACE223); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return sequenceEnumeration;
    }
    // $ANTLR end "enumeration"



    // $ANTLR start "tuple"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1344:1: tuple returns [Tuple tuple] : LBRACKET ( sequencedArgument )? RBRACKET ;
    public Tuple tuple() throws RecognitionException {
        Tuple tuple = null;


        Token LBRACKET224=null;
        Token RBRACKET226=null;
        SequencedArgument sequencedArgument225 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1345:5: ( LBRACKET ( sequencedArgument )? RBRACKET )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1345:7: LBRACKET ( sequencedArgument )? RBRACKET
            {
                LBRACKET224=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_tuple8689); if (state.failed) return tuple;

                if ( state.backtracking==0 ) { tuple = new Tuple(LBRACKET224); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1347:7: ( sequencedArgument )?
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==ALIAS||(LA112_0 >= ASSERT && LA112_0 <= ASSIGN)||(LA112_0 >= BACKTICK && LA112_0 <= BREAK)||(LA112_0 >= CHAR_LITERAL && LA112_0 <= CLASS_DEFINITION)||LA112_0==COMPILER_ANNOTATION||LA112_0==CONTINUE||(LA112_0 >= DECREMENT_OP && LA112_0 <= DIFFERENCE_OP)||LA112_0==DYNAMIC||(LA112_0 >= FLOAT_LITERAL && LA112_0 <= FUNCTION_MODIFIER)||(LA112_0 >= IF_CLAUSE && LA112_0 <= INTERFACE_DEFINITION)||LA112_0==IN_OP||(LA112_0 >= LBRACE && LA112_0 <= LBRACKET)||LA112_0==LIDENTIFIER||LA112_0==LPAREN||LA112_0==MODULE||LA112_0==NATURAL_LITERAL||(LA112_0 >= NOT_OP && LA112_0 <= OBJECT_DEFINITION)||(LA112_0 >= OUT && LA112_0 <= PACKAGE)||LA112_0==PRODUCT_OP||(LA112_0 >= RETURN && LA112_0 <= RPAREN)||(LA112_0 >= SEMICOLON && LA112_0 <= SMALLER_OP)||LA112_0==STRING_LITERAL||LA112_0==STRING_START||(LA112_0 >= SUM_OP && LA112_0 <= SWITCH_CLAUSE)||(LA112_0 >= THIS && LA112_0 <= UIDENTIFIER)||(LA112_0 >= VALUE_MODIFIER && LA112_0 <= WHILE_CLAUSE)) ) {
                    alt112=1;
                }
                switch (alt112) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1348:9: sequencedArgument
                    {
                        pushFollow(FOLLOW_sequencedArgument_in_tuple8716);
                        sequencedArgument225=sequencedArgument();

                        state._fsp--;
                        if (state.failed) return tuple;

                        if ( state.backtracking==0 ) { tuple.setSequencedArgument(sequencedArgument225); }

                    }
                    break;

                }


                RBRACKET226=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_tuple8743); if (state.failed) return tuple;

                if ( state.backtracking==0 ) { tuple.setEndToken(RBRACKET226); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return tuple;
    }
    // $ANTLR end "tuple"



    // $ANTLR start "dynamicObject"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1355:1: dynamicObject returns [Dynamic dynamic] : VALUE_MODIFIER namedArguments ;
    public Dynamic dynamicObject() throws RecognitionException {
        Dynamic dynamic = null;


        Token VALUE_MODIFIER227=null;
        NamedArgumentList namedArguments228 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1356:5: ( VALUE_MODIFIER namedArguments )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1356:7: VALUE_MODIFIER namedArguments
            {
                VALUE_MODIFIER227=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_dynamicObject8776); if (state.failed) return dynamic;

                if ( state.backtracking==0 ) { dynamic = new Dynamic(VALUE_MODIFIER227); }

                pushFollow(FOLLOW_namedArguments_in_dynamicObject8793);
                namedArguments228=namedArguments();

                state._fsp--;
                if (state.failed) return dynamic;

                if ( state.backtracking==0 ) { dynamic.setNamedArgumentList(namedArguments228); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return dynamic;
    }
    // $ANTLR end "dynamicObject"



    // $ANTLR start "expressions"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1362:1: expressions returns [ExpressionList expressionList] :e1= expression (c= COMMA (e2= expression |) )* ;
    public ExpressionList expressions() throws RecognitionException {
        ExpressionList expressionList = null;


        Token c=null;
        Expression e1 =null;

        Expression e2 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1363:5: (e1= expression (c= COMMA (e2= expression |) )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1363:7: e1= expression (c= COMMA (e2= expression |) )*
            {
                if ( state.backtracking==0 ) { expressionList = new ExpressionList(null); }

                pushFollow(FOLLOW_expression_in_expressions8836);
                e1=expression();

                state._fsp--;
                if (state.failed) return expressionList;

                if ( state.backtracking==0 ) { expressionList.addExpression(e1); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1366:7: (c= COMMA (e2= expression |) )*
                loop114:
                do {
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( (LA114_0==COMMA) ) {
                        alt114=1;
                    }


                    switch (alt114) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1366:9: c= COMMA (e2= expression |)
                        {
                            c=(Token)match(input,COMMA,FOLLOW_COMMA_in_expressions8857); if (state.failed) return expressionList;

                            if ( state.backtracking==0 ) { expressionList.setEndToken(c); }

                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1368:9: (e2= expression |)
                            int alt113=2;
                            int LA113_0 = input.LA(1);

                            if ( (LA113_0==BACKTICK||LA113_0==CHAR_LITERAL||(LA113_0 >= DECREMENT_OP && LA113_0 <= DIFFERENCE_OP)||LA113_0==FLOAT_LITERAL||LA113_0==INCREMENT_OP||(LA113_0 >= LBRACE && LA113_0 <= LBRACKET)||LA113_0==LIDENTIFIER||LA113_0==LPAREN||LA113_0==NATURAL_LITERAL||LA113_0==NOT_OP||(LA113_0 >= OUTER && LA113_0 <= PACKAGE)||LA113_0==STRING_LITERAL||LA113_0==STRING_START||(LA113_0 >= SUM_OP && LA113_0 <= SUPER)||LA113_0==THIS||LA113_0==UIDENTIFIER||(LA113_0 >= VALUE_MODIFIER && LA113_0 <= VERBATIM_STRING)) ) {
                                alt113=1;
                            }
                            else if ( (LA113_0==COMMA||LA113_0==RPAREN) ) {
                                alt113=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return expressionList;}
                                NoViableAltException nvae =
                                        new NoViableAltException("", 113, 0, input);

                                throw nvae;

                            }
                            switch (alt113) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1369:11: e2= expression
                                {
                                    pushFollow(FOLLOW_expression_in_expressions8892);
                                    e2=expression();

                                    state._fsp--;
                                    if (state.failed) return expressionList;

                                    if ( state.backtracking==0 ) { if (e2!=null) {
                                        expressionList.addExpression(e2);
                                        expressionList.setEndToken(null); } }

                                }
                                break;
                                case 2 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1373:11: 
                                {
                                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                            new MismatchedTokenException(LIDENTIFIER, input)); }

                                }
                                break;

                            }


                        }
                        break;

                        default :
                            break loop114;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return expressionList;
    }
    // $ANTLR end "expressions"


    public static class memberReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "memberReference"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1379:1: memberReference returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : memberName ( ( typeArgumentsStart )=> typeArguments )? ;
    public CeylonParser.memberReference_return memberReference() throws RecognitionException {
        CeylonParser.memberReference_return retval = new CeylonParser.memberReference_return();
        retval.start = input.LT(1);


        Identifier memberName229 =null;

        TypeArgumentList typeArguments230 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1381:5: ( memberName ( ( typeArgumentsStart )=> typeArguments )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1381:7: memberName ( ( typeArgumentsStart )=> typeArguments )?
            {
                pushFollow(FOLLOW_memberName_in_memberReference8958);
                memberName229=memberName();

                state._fsp--;
                if (state.failed) return retval;

                if ( state.backtracking==0 ) { retval.identifier = memberName229; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1383:7: ( ( typeArgumentsStart )=> typeArguments )?
                int alt115=2;
                alt115 = dfa115.predict(input);
                switch (alt115) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1384:9: ( typeArgumentsStart )=> typeArguments
                    {
                        pushFollow(FOLLOW_typeArguments_in_memberReference8998);
                        typeArguments230=typeArguments();

                        state._fsp--;
                        if (state.failed) return retval;

                        if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments230; }

                    }
                    break;

                }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "memberReference"


    public static class typeReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "typeReference"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1390:1: typeReference returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : typeName ( ( typeArgumentsStart )=> typeArguments )? ;
    public CeylonParser.typeReference_return typeReference() throws RecognitionException {
        CeylonParser.typeReference_return retval = new CeylonParser.typeReference_return();
        retval.start = input.LT(1);


        Identifier typeName231 =null;

        TypeArgumentList typeArguments232 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1392:5: ( typeName ( ( typeArgumentsStart )=> typeArguments )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1392:7: typeName ( ( typeArgumentsStart )=> typeArguments )?
            {
                pushFollow(FOLLOW_typeName_in_typeReference9038);
                typeName231=typeName();

                state._fsp--;
                if (state.failed) return retval;

                if ( state.backtracking==0 ) { retval.identifier = typeName231; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1394:7: ( ( typeArgumentsStart )=> typeArguments )?
                int alt116=2;
                alt116 = dfa116.predict(input);
                switch (alt116) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1395:9: ( typeArgumentsStart )=> typeArguments
                    {
                        pushFollow(FOLLOW_typeArguments_in_typeReference9079);
                        typeArguments232=typeArguments();

                        state._fsp--;
                        if (state.failed) return retval;

                        if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments232; }

                    }
                    break;

                }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "typeReference"



    // $ANTLR start "typeArgumentsStart"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1404:1: typeArgumentsStart : SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP ) ;
    public void typeArgumentsStart() throws RecognitionException {
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1405:5: ( SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1405:7: SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP )
            {
                match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArgumentsStart9118); if (state.failed) return ;

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1406:5: ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP )
                int alt117=3;
                switch ( input.LA(1) ) {
                    case LBRACE:
                    case LBRACKET:
                    case UIDENTIFIER:
                    {
                        alt117=1;
                    }
                    break;
                    case SMALLER_OP:
                    {
                        int LA117_2 = input.LA(2);

                        if ( ((LA117_2 >= LBRACE && LA117_2 <= LBRACKET)||LA117_2==SMALLER_OP||LA117_2==UIDENTIFIER) ) {
                            alt117=1;
                        }
                        else if ( (LA117_2==EOF) ) {
                            alt117=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            NoViableAltException nvae =
                                    new NoViableAltException("", 117, 2, input);

                            throw nvae;

                        }
                    }
                    break;
                    case LARGER_OP:
                    {
                        alt117=3;
                    }
                    break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 117, 0, input);

                        throw nvae;

                }

                switch (alt117) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1407:7: type ( LARGER_OP | SMALLER_OP | COMMA )
                    {
                        pushFollow(FOLLOW_type_in_typeArgumentsStart9132);
                        type();

                        state._fsp--;
                        if (state.failed) return ;

                        if ( input.LA(1)==COMMA||input.LA(1)==LARGER_OP||input.LA(1)==SMALLER_OP ) {
                            input.consume();
                            state.errorRecovery=false;
                            state.failed=false;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            MismatchedSetException mse = new MismatchedSetException(null,input);
                            throw mse;
                        }


                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1410:7: SMALLER_OP
                    {
                        match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArgumentsStart9160); if (state.failed) return ;

                    }
                    break;
                    case 3 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1412:7: LARGER_OP
                    {
                        match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeArgumentsStart9175); if (state.failed) return ;

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "typeArgumentsStart"



    // $ANTLR start "indexOrIndexRange"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1416:1: indexOrIndexRange returns [IndexExpression indexExpression] : LBRACKET (e1= ELLIPSIS i= index |l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? ) RBRACKET ;
    public IndexExpression indexOrIndexRange() throws RecognitionException {
        IndexExpression indexExpression = null;


        Token e1=null;
        Token e2=null;
        Token LBRACKET233=null;
        Token RANGE_OP234=null;
        Token SEGMENT_OP235=null;
        Token RBRACKET236=null;
        Expression i =null;

        Expression l =null;

        Expression u =null;

        Expression s =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1421:5: ( LBRACKET (e1= ELLIPSIS i= index |l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? ) RBRACKET )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1421:7: LBRACKET (e1= ELLIPSIS i= index |l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? ) RBRACKET
            {
                LBRACKET233=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_indexOrIndexRange9223); if (state.failed) return indexExpression;

                if ( state.backtracking==0 ) { indexExpression = new IndexExpression(LBRACKET233); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1423:7: (e1= ELLIPSIS i= index |l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? )
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==ELLIPSIS) ) {
                    alt119=1;
                }
                else if ( (LA119_0==BACKTICK||LA119_0==CHAR_LITERAL||(LA119_0 >= DECREMENT_OP && LA119_0 <= DIFFERENCE_OP)||LA119_0==FLOAT_LITERAL||LA119_0==INCREMENT_OP||(LA119_0 >= LBRACE && LA119_0 <= LBRACKET)||LA119_0==LIDENTIFIER||LA119_0==LPAREN||LA119_0==NATURAL_LITERAL||(LA119_0 >= OUTER && LA119_0 <= PACKAGE)||LA119_0==STRING_LITERAL||LA119_0==STRING_START||(LA119_0 >= SUM_OP && LA119_0 <= SUPER)||LA119_0==THIS||LA119_0==UIDENTIFIER||(LA119_0 >= VALUE_MODIFIER && LA119_0 <= VERBATIM_STRING)) ) {
                    alt119=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 119, 0, input);

                    throw nvae;

                }
                switch (alt119) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1424:9: e1= ELLIPSIS i= index
                    {
                        e1=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_indexOrIndexRange9251); if (state.failed) return indexExpression;

                        if ( state.backtracking==0 ) { indexExpression.setEndToken(e1); }

                        pushFollow(FOLLOW_index_in_indexOrIndexRange9271);
                        i=index();

                        state._fsp--;
                        if (state.failed) return indexExpression;

                        if ( state.backtracking==0 ) { ElementRange er0 = new ElementRange(null);
                            indexExpression.setElementOrRange(er0);
                            er0.setUpperBound(i); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1431:7: l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )?
                    {
                        pushFollow(FOLLOW_index_in_indexOrIndexRange9297);
                        l=index();

                        state._fsp--;
                        if (state.failed) return indexExpression;

                        if ( state.backtracking==0 ) { Element e = new Element(null);
                            indexExpression.setElementOrRange(e);
                            e.setExpression(l); }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1435:7: (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )?
                        int alt118=4;
                        switch ( input.LA(1) ) {
                            case ELLIPSIS:
                            {
                                alt118=1;
                            }
                            break;
                            case RANGE_OP:
                            {
                                alt118=2;
                            }
                            break;
                            case SEGMENT_OP:
                            {
                                alt118=3;
                            }
                            break;
                        }

                        switch (alt118) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1436:9: e2= ELLIPSIS
                            {
                                e2=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_indexOrIndexRange9325); if (state.failed) return indexExpression;

                                if ( state.backtracking==0 ) { indexExpression.setEndToken(e2); }

                                if ( state.backtracking==0 ) { ElementRange er1 = new ElementRange(null);
                                    indexExpression.setElementOrRange(er1);
                                    er1.setLowerBound(l); }

                            }
                            break;
                            case 2 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1441:9: RANGE_OP u= index
                            {
                                RANGE_OP234=(Token)match(input,RANGE_OP,FOLLOW_RANGE_OP_in_indexOrIndexRange9353); if (state.failed) return indexExpression;

                                if ( state.backtracking==0 ) { indexExpression.setEndToken(RANGE_OP234); }

                                pushFollow(FOLLOW_index_in_indexOrIndexRange9376);
                                u=index();

                                state._fsp--;
                                if (state.failed) return indexExpression;

                                if ( state.backtracking==0 ) { ElementRange er2 = new ElementRange(null);
                                    indexExpression.setElementOrRange(er2);
                                    er2.setLowerBound(l);
                                    er2.setUpperBound(u); }

                            }
                            break;
                            case 3 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1448:9: SEGMENT_OP s= index
                            {
                                SEGMENT_OP235=(Token)match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_indexOrIndexRange9395); if (state.failed) return indexExpression;

                                if ( state.backtracking==0 ) { indexExpression.setEndToken(SEGMENT_OP235); }

                                pushFollow(FOLLOW_index_in_indexOrIndexRange9417);
                                s=index();

                                state._fsp--;
                                if (state.failed) return indexExpression;

                                if ( state.backtracking==0 ) { ElementRange er3 = new ElementRange(null);
                                    indexExpression.setElementOrRange(er3);
                                    er3.setLowerBound(l);
                                    er3.setLength(s); }

                            }
                            break;

                        }


                    }
                    break;

                }


                RBRACKET236=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_indexOrIndexRange9451); if (state.failed) return indexExpression;

                if ( state.backtracking==0 ) { indexExpression.setEndToken(RBRACKET236); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return indexExpression;
    }
    // $ANTLR end "indexOrIndexRange"



    // $ANTLR start "index"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1461:1: index returns [Expression expression] : additiveExpression ;
    public Expression index() throws RecognitionException {
        Expression expression = null;


        Term additiveExpression237 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1462:5: ( additiveExpression )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1462:7: additiveExpression
            {
                pushFollow(FOLLOW_additiveExpression_in_index9480);
                additiveExpression237=additiveExpression();

                state._fsp--;
                if (state.failed) return expression;

                if ( state.backtracking==0 ) { expression = new Expression(null);
                    expression.setTerm(additiveExpression237); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "index"



    // $ANTLR start "namedArguments"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1467:1: namedArguments returns [NamedArgumentList namedArgumentList] : LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE ;
    public NamedArgumentList namedArguments() throws RecognitionException {
        NamedArgumentList namedArgumentList = null;


        Token LBRACE238=null;
        Token RBRACE242=null;
        NamedArgument namedArgument239 =null;

        SpecifiedArgument anonymousArgument240 =null;

        SequencedArgument sequencedArgument241 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1468:5: ( LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1468:7: LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE
            {
                LBRACE238=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_namedArguments9510); if (state.failed) return namedArgumentList;

                if ( state.backtracking==0 ) { namedArgumentList = new NamedArgumentList(LBRACE238); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1470:7: ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )*
                loop120:
                do {
                    int alt120=3;
                    int LA120_0 = input.LA(1);

                    if ( (LA120_0==COMPILER_ANNOTATION) ) {
                        int LA120_1 = input.LA(2);

                        if ( (synpred10_Ceylon()) ) {
                            alt120=1;
                        }


                    }
                    else if ( (LA120_0==FUNCTION_MODIFIER) ) {
                        int LA120_2 = input.LA(2);

                        if ( (synpred10_Ceylon()) ) {
                            alt120=1;
                        }
                        else if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==VOID_MODIFIER) ) {
                        int LA120_3 = input.LA(2);

                        if ( (synpred10_Ceylon()) ) {
                            alt120=1;
                        }
                        else if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==LPAREN) ) {
                        int LA120_4 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==NOT_OP) ) {
                        int LA120_5 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==DIFFERENCE_OP) ) {
                        int LA120_6 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==SUM_OP) ) {
                        int LA120_7 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==DECREMENT_OP) ) {
                        int LA120_8 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==INCREMENT_OP) ) {
                        int LA120_9 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==NATURAL_LITERAL) ) {
                        int LA120_10 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==FLOAT_LITERAL) ) {
                        int LA120_11 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==CHAR_LITERAL) ) {
                        int LA120_12 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==STRING_LITERAL) ) {
                        int LA120_13 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==VERBATIM_STRING) ) {
                        int LA120_14 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==STRING_START) ) {
                        int LA120_15 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==BACKTICK) ) {
                        int LA120_16 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==LBRACE) ) {
                        int LA120_17 = input.LA(2);

                        if ( (synpred10_Ceylon()) ) {
                            alt120=1;
                        }
                        else if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==LBRACKET) ) {
                        int LA120_18 = input.LA(2);

                        if ( (synpred10_Ceylon()) ) {
                            alt120=1;
                        }
                        else if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==VALUE_MODIFIER) ) {
                        int LA120_19 = input.LA(2);

                        if ( (synpred10_Ceylon()) ) {
                            alt120=1;
                        }
                        else if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==THIS) ) {
                        int LA120_20 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==SUPER) ) {
                        int LA120_21 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==OUTER) ) {
                        int LA120_22 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==PACKAGE) ) {
                        int LA120_23 = input.LA(2);

                        if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==LIDENTIFIER) ) {
                        int LA120_24 = input.LA(2);

                        if ( (synpred10_Ceylon()) ) {
                            alt120=1;
                        }
                        else if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==UIDENTIFIER) ) {
                        int LA120_25 = input.LA(2);

                        if ( (synpred10_Ceylon()) ) {
                            alt120=1;
                        }
                        else if ( (synpred11_Ceylon()) ) {
                            alt120=2;
                        }


                    }
                    else if ( (LA120_0==OBJECT_DEFINITION) && (synpred10_Ceylon())) {
                        alt120=1;
                    }
                    else if ( (LA120_0==SMALLER_OP) && (synpred10_Ceylon())) {
                        alt120=1;
                    }


                    switch (alt120) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1472:9: ( namedArgumentStart )=> namedArgument
                        {
                            pushFollow(FOLLOW_namedArgument_in_namedArguments9562);
                            namedArgument239=namedArgument();

                            state._fsp--;
                            if (state.failed) return namedArgumentList;

                            if ( state.backtracking==0 ) { if (namedArgument239!=null)
                                namedArgumentList.addNamedArgument(namedArgument239); }

                        }
                        break;
                        case 2 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1476:9: ( anonymousArgument )=> anonymousArgument
                        {
                            pushFollow(FOLLOW_anonymousArgument_in_namedArguments9596);
                            anonymousArgument240=anonymousArgument();

                            state._fsp--;
                            if (state.failed) return namedArgumentList;

                            if ( state.backtracking==0 ) { if (anonymousArgument240!=null)
                                namedArgumentList.addNamedArgument(anonymousArgument240); }

                        }
                        break;

                        default :
                            break loop120;
                    }
                } while (true);


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1481:7: ( sequencedArgument )?
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( (LA121_0==ALIAS||(LA121_0 >= ASSERT && LA121_0 <= ASSIGN)||(LA121_0 >= BACKTICK && LA121_0 <= BREAK)||(LA121_0 >= CHAR_LITERAL && LA121_0 <= CLASS_DEFINITION)||LA121_0==COMPILER_ANNOTATION||LA121_0==CONTINUE||(LA121_0 >= DECREMENT_OP && LA121_0 <= DIFFERENCE_OP)||LA121_0==DYNAMIC||(LA121_0 >= FLOAT_LITERAL && LA121_0 <= FUNCTION_MODIFIER)||(LA121_0 >= IF_CLAUSE && LA121_0 <= INTERFACE_DEFINITION)||LA121_0==IN_OP||(LA121_0 >= LBRACE && LA121_0 <= LBRACKET)||LA121_0==LIDENTIFIER||LA121_0==LPAREN||LA121_0==MODULE||LA121_0==NATURAL_LITERAL||(LA121_0 >= NOT_OP && LA121_0 <= OBJECT_DEFINITION)||(LA121_0 >= OUT && LA121_0 <= PACKAGE)||LA121_0==PRODUCT_OP||(LA121_0 >= RETURN && LA121_0 <= RPAREN)||(LA121_0 >= SEMICOLON && LA121_0 <= SMALLER_OP)||LA121_0==STRING_LITERAL||LA121_0==STRING_START||(LA121_0 >= SUM_OP && LA121_0 <= SWITCH_CLAUSE)||(LA121_0 >= THIS && LA121_0 <= UIDENTIFIER)||(LA121_0 >= VALUE_MODIFIER && LA121_0 <= WHILE_CLAUSE)) ) {
                    alt121=1;
                }
                switch (alt121) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1482:9: sequencedArgument
                    {
                        pushFollow(FOLLOW_sequencedArgument_in_namedArguments9634);
                        sequencedArgument241=sequencedArgument();

                        state._fsp--;
                        if (state.failed) return namedArgumentList;

                        if ( state.backtracking==0 ) { namedArgumentList.setSequencedArgument(sequencedArgument241); }

                    }
                    break;

                }


                RBRACE242=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_namedArguments9661); if (state.failed) return namedArgumentList;

                if ( state.backtracking==0 ) { namedArgumentList.setEndToken(RBRACE242); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return namedArgumentList;
    }
    // $ANTLR end "namedArguments"



    // $ANTLR start "sequencedArgument"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1489:1: sequencedArgument returns [SequencedArgument sequencedArgument] : compilerAnnotations (pa1= positionalArgument |sa1= spreadArgument |c1= comprehension ) (c= COMMA (pa2= positionalArgument |sa2= spreadArgument |c2= comprehension |) )* ;
    public SequencedArgument sequencedArgument() throws RecognitionException {
        SequencedArgument sequencedArgument = null;


        Token c=null;
        ListedArgument pa1 =null;

        SpreadArgument sa1 =null;

        Comprehension c1 =null;

        ListedArgument pa2 =null;

        SpreadArgument sa2 =null;

        Comprehension c2 =null;

        List<CompilerAnnotation> compilerAnnotations243 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1490:5: ( compilerAnnotations (pa1= positionalArgument |sa1= spreadArgument |c1= comprehension ) (c= COMMA (pa2= positionalArgument |sa2= spreadArgument |c2= comprehension |) )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1490:7: compilerAnnotations (pa1= positionalArgument |sa1= spreadArgument |c1= comprehension ) (c= COMMA (pa2= positionalArgument |sa2= spreadArgument |c2= comprehension |) )*
            {
                pushFollow(FOLLOW_compilerAnnotations_in_sequencedArgument9690);
                compilerAnnotations243=compilerAnnotations();

                state._fsp--;
                if (state.failed) return sequencedArgument;

                if ( state.backtracking==0 ) { sequencedArgument = new SequencedArgument(null);
                    sequencedArgument.getCompilerAnnotations().addAll(compilerAnnotations243); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1493:9: (pa1= positionalArgument |sa1= spreadArgument |c1= comprehension )
                int alt122=3;
                switch ( input.LA(1) ) {
                    case BACKTICK:
                    case CHAR_LITERAL:
                    case DECREMENT_OP:
                    case DIFFERENCE_OP:
                    case FLOAT_LITERAL:
                    case FUNCTION_MODIFIER:
                    case INCREMENT_OP:
                    case LBRACE:
                    case LBRACKET:
                    case LIDENTIFIER:
                    case LPAREN:
                    case NATURAL_LITERAL:
                    case NOT_OP:
                    case OUTER:
                    case PACKAGE:
                    case STRING_LITERAL:
                    case STRING_START:
                    case SUM_OP:
                    case SUPER:
                    case THIS:
                    case UIDENTIFIER:
                    case VALUE_MODIFIER:
                    case VERBATIM_STRING:
                    case VOID_MODIFIER:
                    {
                        alt122=1;
                    }
                    break;
                    case PRODUCT_OP:
                    {
                        alt122=2;
                    }
                    break;
                    case FOR_CLAUSE:
                    case IF_CLAUSE:
                    {
                        alt122=3;
                    }
                    break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 122, 0, input);

                        throw nvae;

                }

                switch (alt122) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1494:11: pa1= positionalArgument
                    {
                        pushFollow(FOLLOW_positionalArgument_in_sequencedArgument9722);
                        pa1=positionalArgument();

                        state._fsp--;
                        if (state.failed) return sequencedArgument;

                        if ( state.backtracking==0 ) { if (pa1!=null)
                            sequencedArgument.addPositionalArgument(pa1); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1498:11: sa1= spreadArgument
                    {
                        pushFollow(FOLLOW_spreadArgument_in_sequencedArgument9758);
                        sa1=spreadArgument();

                        state._fsp--;
                        if (state.failed) return sequencedArgument;

                        if ( state.backtracking==0 ) { if (sa1!=null)
                            sequencedArgument.addPositionalArgument(sa1); }

                    }
                    break;
                    case 3 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1502:11: c1= comprehension
                    {
                        pushFollow(FOLLOW_comprehension_in_sequencedArgument9794);
                        c1=comprehension();

                        state._fsp--;
                        if (state.failed) return sequencedArgument;

                        if ( state.backtracking==0 ) { if (c1!=null)
                            sequencedArgument.addPositionalArgument(c1); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1506:9: (c= COMMA (pa2= positionalArgument |sa2= spreadArgument |c2= comprehension |) )*
                loop124:
                do {
                    int alt124=2;
                    int LA124_0 = input.LA(1);

                    if ( (LA124_0==COMMA) ) {
                        alt124=1;
                    }


                    switch (alt124) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1507:11: c= COMMA (pa2= positionalArgument |sa2= spreadArgument |c2= comprehension |)
                        {
                            c=(Token)match(input,COMMA,FOLLOW_COMMA_in_sequencedArgument9840); if (state.failed) return sequencedArgument;

                            if ( state.backtracking==0 ) { sequencedArgument.setEndToken(c); }

                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1509:11: (pa2= positionalArgument |sa2= spreadArgument |c2= comprehension |)
                            int alt123=4;
                            switch ( input.LA(1) ) {
                                case BACKTICK:
                                case CHAR_LITERAL:
                                case DECREMENT_OP:
                                case DIFFERENCE_OP:
                                case FLOAT_LITERAL:
                                case FUNCTION_MODIFIER:
                                case INCREMENT_OP:
                                case LBRACE:
                                case LBRACKET:
                                case LIDENTIFIER:
                                case LPAREN:
                                case NATURAL_LITERAL:
                                case NOT_OP:
                                case OUTER:
                                case PACKAGE:
                                case STRING_LITERAL:
                                case STRING_START:
                                case SUM_OP:
                                case SUPER:
                                case THIS:
                                case UIDENTIFIER:
                                case VALUE_MODIFIER:
                                case VERBATIM_STRING:
                                case VOID_MODIFIER:
                                {
                                    alt123=1;
                                }
                                break;
                                case PRODUCT_OP:
                                {
                                    alt123=2;
                                }
                                break;
                                case FOR_CLAUSE:
                                case IF_CLAUSE:
                                {
                                    alt123=3;
                                }
                                break;
                                case COMMA:
                                case RBRACE:
                                case RBRACKET:
                                case RPAREN:
                                {
                                    alt123=4;
                                }
                                break;
                                default:
                                    if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
                                    NoViableAltException nvae =
                                            new NoViableAltException("", 123, 0, input);

                                    throw nvae;

                            }

                            switch (alt123) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1510:13: pa2= positionalArgument
                                {
                                    pushFollow(FOLLOW_positionalArgument_in_sequencedArgument9880);
                                    pa2=positionalArgument();

                                    state._fsp--;
                                    if (state.failed) return sequencedArgument;

                                    if ( state.backtracking==0 ) { if (pa2!=null) {
                                        sequencedArgument.addPositionalArgument(pa2);
                                        sequencedArgument.setEndToken(null); } }

                                }
                                break;
                                case 2 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1515:13: sa2= spreadArgument
                                {
                                    pushFollow(FOLLOW_spreadArgument_in_sequencedArgument9922);
                                    sa2=spreadArgument();

                                    state._fsp--;
                                    if (state.failed) return sequencedArgument;

                                    if ( state.backtracking==0 ) { if (sa2!=null) {
                                        sequencedArgument.addPositionalArgument(sa2);
                                        sequencedArgument.setEndToken(null); } }

                                }
                                break;
                                case 3 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1520:13: c2= comprehension
                                {
                                    pushFollow(FOLLOW_comprehension_in_sequencedArgument9964);
                                    c2=comprehension();

                                    state._fsp--;
                                    if (state.failed) return sequencedArgument;

                                    if ( state.backtracking==0 ) { if (c2!=null) {
                                        sequencedArgument.addPositionalArgument(c2);
                                        sequencedArgument.setEndToken(null); } }

                                }
                                break;
                                case 4 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1525:13: 
                                {
                                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                            new MismatchedTokenException(LIDENTIFIER, input)); }

                                }
                                break;

                            }


                        }
                        break;

                        default :
                            break loop124;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return sequencedArgument;
    }
    // $ANTLR end "sequencedArgument"



    // $ANTLR start "namedArgument"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1531:1: namedArgument returns [NamedArgument namedArgument] : compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration ) ;
    public NamedArgument namedArgument() throws RecognitionException {
        NamedArgument namedArgument = null;


        SpecifiedArgument namedSpecifiedArgument244 =null;

        NamedArgument namedArgumentDeclaration245 =null;

        List<CompilerAnnotation> compilerAnnotations246 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1532:5: ( compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1532:7: compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration )
            {
                pushFollow(FOLLOW_compilerAnnotations_in_namedArgument10049);
                compilerAnnotations246=compilerAnnotations();

                state._fsp--;
                if (state.failed) return namedArgument;

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1533:5: ( namedSpecifiedArgument | namedArgumentDeclaration )
                int alt125=2;
                int LA125_0 = input.LA(1);

                if ( (LA125_0==LIDENTIFIER) ) {
                    int LA125_1 = input.LA(2);

                    if ( (LA125_1==SEMICOLON||LA125_1==SPECIFY) ) {
                        alt125=1;
                    }
                    else if ( (LA125_1==COMPUTE||LA125_1==LPAREN) ) {
                        alt125=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return namedArgument;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 125, 1, input);

                        throw nvae;

                    }
                }
                else if ( (LA125_0==FUNCTION_MODIFIER||(LA125_0 >= LBRACE && LA125_0 <= LBRACKET)||LA125_0==OBJECT_DEFINITION||LA125_0==SMALLER_OP||LA125_0==UIDENTIFIER||LA125_0==VALUE_MODIFIER||LA125_0==VOID_MODIFIER) ) {
                    alt125=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return namedArgument;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 125, 0, input);

                    throw nvae;

                }
                switch (alt125) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1534:7: namedSpecifiedArgument
                    {
                        pushFollow(FOLLOW_namedSpecifiedArgument_in_namedArgument10066);
                        namedSpecifiedArgument244=namedSpecifiedArgument();

                        state._fsp--;
                        if (state.failed) return namedArgument;

                        if ( state.backtracking==0 ) { namedArgument = namedSpecifiedArgument244; }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1537:7: namedArgumentDeclaration
                    {
                        pushFollow(FOLLOW_namedArgumentDeclaration_in_namedArgument10088);
                        namedArgumentDeclaration245=namedArgumentDeclaration();

                        state._fsp--;
                        if (state.failed) return namedArgument;

                        if ( state.backtracking==0 ) { namedArgument = namedArgumentDeclaration245; }

                    }
                    break;

                }


                if ( state.backtracking==0 ) { if (namedArgument!=null)
                    namedArgument.getCompilerAnnotations().addAll(compilerAnnotations246); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return namedArgument;
    }
    // $ANTLR end "namedArgument"



    // $ANTLR start "namedSpecifiedArgument"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1544:1: namedSpecifiedArgument returns [SpecifiedArgument specifiedArgument] : memberName ( specifier )? SEMICOLON ;
    public SpecifiedArgument namedSpecifiedArgument() throws RecognitionException {
        SpecifiedArgument specifiedArgument = null;


        Token SEMICOLON249=null;
        Identifier memberName247 =null;

        SpecifierExpression specifier248 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1545:5: ( memberName ( specifier )? SEMICOLON )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1545:7: memberName ( specifier )? SEMICOLON
            {
                pushFollow(FOLLOW_memberName_in_namedSpecifiedArgument10129);
                memberName247=memberName();

                state._fsp--;
                if (state.failed) return specifiedArgument;

                if ( state.backtracking==0 ) { specifiedArgument = new SpecifiedArgument(null);
                    specifiedArgument.setIdentifier(memberName247); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1548:7: ( specifier )?
                int alt126=2;
                int LA126_0 = input.LA(1);

                if ( (LA126_0==SPECIFY) ) {
                    alt126=1;
                }
                switch (alt126) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1549:9: specifier
                    {
                        pushFollow(FOLLOW_specifier_in_namedSpecifiedArgument10155);
                        specifier248=specifier();

                        state._fsp--;
                        if (state.failed) return specifiedArgument;

                        if ( state.backtracking==0 ) { specifiedArgument.setSpecifierExpression(specifier248); }

                    }
                    break;

                }


                if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                SEMICOLON249=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_namedSpecifiedArgument10191); if (state.failed) return specifiedArgument;

                if ( state.backtracking==0 ) { specifiedArgument.setEndToken(SEMICOLON249); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return specifiedArgument;
    }
    // $ANTLR end "namedSpecifiedArgument"



    // $ANTLR start "anonymousArgument"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1557:1: anonymousArgument returns [SpecifiedArgument namedArgument] : functionOrExpression SEMICOLON ;
    public SpecifiedArgument anonymousArgument() throws RecognitionException {
        SpecifiedArgument namedArgument = null;


        Token SEMICOLON251=null;
        Expression functionOrExpression250 =null;


        namedArgument = new SpecifiedArgument(null);
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1559:5: ( functionOrExpression SEMICOLON )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1559:7: functionOrExpression SEMICOLON
            {
                pushFollow(FOLLOW_functionOrExpression_in_anonymousArgument10229);
                functionOrExpression250=functionOrExpression();

                state._fsp--;
                if (state.failed) return namedArgument;

                if ( state.backtracking==0 ) { SpecifierExpression se = new SpecifierExpression(null);
                    se.setExpression(functionOrExpression250);
                    namedArgument.setSpecifierExpression(se); }

                if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                SEMICOLON251=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_anonymousArgument10255); if (state.failed) return namedArgument;

                if ( state.backtracking==0 ) { namedArgument.setEndToken(SEMICOLON251); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return namedArgument;
    }
    // $ANTLR end "anonymousArgument"



    // $ANTLR start "objectArgument"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1568:1: objectArgument returns [ObjectArgument declaration] : OBJECT_DEFINITION memberNameDeclaration ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) ;
    public ObjectArgument objectArgument() throws RecognitionException {
        ObjectArgument declaration = null;


        Token OBJECT_DEFINITION252=null;
        Token SEMICOLON257=null;
        Identifier memberNameDeclaration253 =null;

        ExtendedType extendedType254 =null;

        SatisfiedTypes satisfiedTypes255 =null;

        ClassBody classBody256 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1569:5: ( OBJECT_DEFINITION memberNameDeclaration ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1569:7: OBJECT_DEFINITION memberNameDeclaration ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON )
            {
                OBJECT_DEFINITION252=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_objectArgument10284); if (state.failed) return declaration;

                if ( state.backtracking==0 ) { declaration = new ObjectArgument(OBJECT_DEFINITION252);
                    declaration.setType(new ValueModifier(null)); }

                pushFollow(FOLLOW_memberNameDeclaration_in_objectArgument10301);
                memberNameDeclaration253=memberNameDeclaration();

                state._fsp--;
                if (state.failed) return declaration;

                if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration253); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1574:7: ( extendedType )?
                int alt127=2;
                int LA127_0 = input.LA(1);

                if ( (LA127_0==EXTENDS) ) {
                    alt127=1;
                }
                switch (alt127) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1575:9: extendedType
                    {
                        pushFollow(FOLLOW_extendedType_in_objectArgument10328);
                        extendedType254=extendedType();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setExtendedType(extendedType254); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1578:7: ( satisfiedTypes )?
                int alt128=2;
                int LA128_0 = input.LA(1);

                if ( (LA128_0==SATISFIES) ) {
                    alt128=1;
                }
                switch (alt128) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1579:9: satisfiedTypes
                    {
                        pushFollow(FOLLOW_satisfiedTypes_in_objectArgument10367);
                        satisfiedTypes255=satisfiedTypes();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setSatisfiedTypes(satisfiedTypes255); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1582:7: ( classBody | SEMICOLON )
                int alt129=2;
                int LA129_0 = input.LA(1);

                if ( (LA129_0==LBRACE) ) {
                    alt129=1;
                }
                else if ( (LA129_0==SEMICOLON) ) {
                    alt129=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 129, 0, input);

                    throw nvae;

                }
                switch (alt129) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1583:9: classBody
                    {
                        pushFollow(FOLLOW_classBody_in_objectArgument10405);
                        classBody256=classBody();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setClassBody(classBody256); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1585:9: SEMICOLON
                    {
                        if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                new MismatchedTokenException(LBRACE, input)); }

                        SEMICOLON257=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_objectArgument10435); if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON257); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "objectArgument"



    // $ANTLR start "voidOrInferredMethodArgument"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1592:1: voidOrInferredMethodArgument returns [MethodArgument declaration] : ( VOID_MODIFIER | FUNCTION_MODIFIER ) memberNameDeclaration ( parameters )* ( block | ( functionSpecifier )? SEMICOLON ) ;
    public MethodArgument voidOrInferredMethodArgument() throws RecognitionException {
        MethodArgument declaration = null;


        Token VOID_MODIFIER258=null;
        Token FUNCTION_MODIFIER259=null;
        Token SEMICOLON264=null;
        Identifier memberNameDeclaration260 =null;

        ParameterList parameters261 =null;

        Block block262 =null;

        SpecifierExpression functionSpecifier263 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1593:5: ( ( VOID_MODIFIER | FUNCTION_MODIFIER ) memberNameDeclaration ( parameters )* ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1593:7: ( VOID_MODIFIER | FUNCTION_MODIFIER ) memberNameDeclaration ( parameters )* ( block | ( functionSpecifier )? SEMICOLON )
            {
                if ( state.backtracking==0 ) { declaration =new MethodArgument(null); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1594:7: ( VOID_MODIFIER | FUNCTION_MODIFIER )
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==VOID_MODIFIER) ) {
                    alt130=1;
                }
                else if ( (LA130_0==FUNCTION_MODIFIER) ) {
                    alt130=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 130, 0, input);

                    throw nvae;

                }
                switch (alt130) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1595:9: VOID_MODIFIER
                    {
                        VOID_MODIFIER258=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodArgument10492); if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setType(new VoidModifier(VOID_MODIFIER258)); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1598:9: FUNCTION_MODIFIER
                    {
                        FUNCTION_MODIFIER259=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodArgument10520); if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setType(new FunctionModifier(FUNCTION_MODIFIER259)); }

                    }
                    break;

                }


                pushFollow(FOLLOW_memberNameDeclaration_in_voidOrInferredMethodArgument10547);
                memberNameDeclaration260=memberNameDeclaration();

                state._fsp--;
                if (state.failed) return declaration;

                if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration260); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1603:7: ( parameters )*
                loop131:
                do {
                    int alt131=2;
                    int LA131_0 = input.LA(1);

                    if ( (LA131_0==LPAREN) ) {
                        alt131=1;
                    }


                    switch (alt131) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1604:9: parameters
                        {
                            pushFollow(FOLLOW_parameters_in_voidOrInferredMethodArgument10574);
                            parameters261=parameters();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.addParameterList(parameters261); }

                        }
                        break;

                        default :
                            break loop131;
                    }
                } while (true);


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1607:7: ( block | ( functionSpecifier )? SEMICOLON )
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==LBRACE) ) {
                    alt133=1;
                }
                else if ( (LA133_0==COMPUTE||LA133_0==SEMICOLON||LA133_0==SPECIFY) ) {
                    alt133=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 133, 0, input);

                    throw nvae;

                }
                switch (alt133) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1608:9: block
                    {
                        pushFollow(FOLLOW_block_in_voidOrInferredMethodArgument10611);
                        block262=block();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setBlock(block262); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1611:9: ( functionSpecifier )? SEMICOLON
                    {
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1611:9: ( functionSpecifier )?
                        int alt132=2;
                        int LA132_0 = input.LA(1);

                        if ( (LA132_0==COMPUTE||LA132_0==SPECIFY) ) {
                            alt132=1;
                        }
                        switch (alt132) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1612:11: functionSpecifier
                            {
                                pushFollow(FOLLOW_functionSpecifier_in_voidOrInferredMethodArgument10652);
                                functionSpecifier263=functionSpecifier();

                                state._fsp--;
                                if (state.failed) return declaration;

                                if ( state.backtracking==0 ) { declaration.setSpecifierExpression(functionSpecifier263); }

                            }
                            break;

                        }


                        if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                        SEMICOLON264=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_voidOrInferredMethodArgument10695); if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { expecting=-1; }

                        if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON264); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "voidOrInferredMethodArgument"



    // $ANTLR start "inferredGetterArgument"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1622:1: inferredGetterArgument returns [AttributeArgument declaration] : VALUE_MODIFIER memberNameDeclaration ( block | ( functionSpecifier )? SEMICOLON ) ;
    public AttributeArgument inferredGetterArgument() throws RecognitionException {
        AttributeArgument declaration = null;


        Token VALUE_MODIFIER265=null;
        Token SEMICOLON269=null;
        Identifier memberNameDeclaration266 =null;

        Block block267 =null;

        SpecifierExpression functionSpecifier268 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1623:5: ( VALUE_MODIFIER memberNameDeclaration ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1623:7: VALUE_MODIFIER memberNameDeclaration ( block | ( functionSpecifier )? SEMICOLON )
            {
                if ( state.backtracking==0 ) { declaration =new AttributeArgument(null); }

                VALUE_MODIFIER265=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_inferredGetterArgument10752); if (state.failed) return declaration;

                if ( state.backtracking==0 ) { declaration.setType(new ValueModifier(VALUE_MODIFIER265)); }

                pushFollow(FOLLOW_memberNameDeclaration_in_inferredGetterArgument10769);
                memberNameDeclaration266=memberNameDeclaration();

                state._fsp--;
                if (state.failed) return declaration;

                if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration266); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1628:7: ( block | ( functionSpecifier )? SEMICOLON )
                int alt135=2;
                int LA135_0 = input.LA(1);

                if ( (LA135_0==LBRACE) ) {
                    alt135=1;
                }
                else if ( (LA135_0==COMPUTE||LA135_0==SEMICOLON||LA135_0==SPECIFY) ) {
                    alt135=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 135, 0, input);

                    throw nvae;

                }
                switch (alt135) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1629:9: block
                    {
                        pushFollow(FOLLOW_block_in_inferredGetterArgument10796);
                        block267=block();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { declaration.setBlock(block267); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1632:9: ( functionSpecifier )? SEMICOLON
                    {
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1632:9: ( functionSpecifier )?
                        int alt134=2;
                        int LA134_0 = input.LA(1);

                        if ( (LA134_0==COMPUTE||LA134_0==SPECIFY) ) {
                            alt134=1;
                        }
                        switch (alt134) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1633:11: functionSpecifier
                            {
                                pushFollow(FOLLOW_functionSpecifier_in_inferredGetterArgument10837);
                                functionSpecifier268=functionSpecifier();

                                state._fsp--;
                                if (state.failed) return declaration;

                                if ( state.backtracking==0 ) { declaration.setSpecifierExpression(functionSpecifier268); }

                            }
                            break;

                        }


                        if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                        SEMICOLON269=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_inferredGetterArgument10880); if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { expecting=-1; }

                        if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON269); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "inferredGetterArgument"



    // $ANTLR start "typedMethodOrGetterArgument"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1643:1: typedMethodOrGetterArgument returns [TypedArgument declaration] : type memberNameDeclaration ( ( parameters )+ )? ( block | ( functionSpecifier )? SEMICOLON ) ;
    public TypedArgument typedMethodOrGetterArgument() throws RecognitionException {
        TypedArgument declaration = null;


        Token SEMICOLON275=null;
        StaticType type270 =null;

        Identifier memberNameDeclaration271 =null;

        ParameterList parameters272 =null;

        Block block273 =null;

        SpecifierExpression functionSpecifier274 =null;


        MethodArgument marg = new MethodArgument(null);
        AttributeArgument aarg = new AttributeArgument(null);
        declaration =aarg;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1647:5: ( type memberNameDeclaration ( ( parameters )+ )? ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1647:7: type memberNameDeclaration ( ( parameters )+ )? ( block | ( functionSpecifier )? SEMICOLON )
            {
                pushFollow(FOLLOW_type_in_typedMethodOrGetterArgument10938);
                type270=type();

                state._fsp--;
                if (state.failed) return declaration;

                if ( state.backtracking==0 ) { marg.setType(type270);
                    aarg.setType(type270); }

                pushFollow(FOLLOW_memberNameDeclaration_in_typedMethodOrGetterArgument10955);
                memberNameDeclaration271=memberNameDeclaration();

                state._fsp--;
                if (state.failed) return declaration;

                if ( state.backtracking==0 ) { marg.setIdentifier(memberNameDeclaration271);
                    aarg.setIdentifier(memberNameDeclaration271); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1653:7: ( ( parameters )+ )?
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==LPAREN) ) {
                    alt137=1;
                }
                switch (alt137) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1654:9: ( parameters )+
                    {
                        if ( state.backtracking==0 ) { declaration = marg; }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1655:9: ( parameters )+
                        int cnt136=0;
                        loop136:
                        do {
                            int alt136=2;
                            int LA136_0 = input.LA(1);

                            if ( (LA136_0==LPAREN) ) {
                                alt136=1;
                            }


                            switch (alt136) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1656:11: parameters
                                {
                                    pushFollow(FOLLOW_parameters_in_typedMethodOrGetterArgument11004);
                                    parameters272=parameters();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { marg.addParameterList(parameters272); }

                                }
                                break;

                                default :
                                    if ( cnt136 >= 1 ) break loop136;
                                    if (state.backtracking>0) {state.failed=true; return declaration;}
                                    EarlyExitException eee =
                                            new EarlyExitException(136, input);
                                    throw eee;
                            }
                            cnt136++;
                        } while (true);


                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1660:7: ( block | ( functionSpecifier )? SEMICOLON )
                int alt139=2;
                int LA139_0 = input.LA(1);

                if ( (LA139_0==LBRACE) ) {
                    alt139=1;
                }
                else if ( (LA139_0==COMPUTE||LA139_0==SEMICOLON||LA139_0==SPECIFY) ) {
                    alt139=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 139, 0, input);

                    throw nvae;

                }
                switch (alt139) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1661:9: block
                    {
                        pushFollow(FOLLOW_block_in_typedMethodOrGetterArgument11054);
                        block273=block();

                        state._fsp--;
                        if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { marg.setBlock(block273);
                            aarg.setBlock(block273); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1665:9: ( functionSpecifier )? SEMICOLON
                    {
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1665:9: ( functionSpecifier )?
                        int alt138=2;
                        int LA138_0 = input.LA(1);

                        if ( (LA138_0==COMPUTE||LA138_0==SPECIFY) ) {
                            alt138=1;
                        }
                        switch (alt138) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1666:11: functionSpecifier
                            {
                                pushFollow(FOLLOW_functionSpecifier_in_typedMethodOrGetterArgument11095);
                                functionSpecifier274=functionSpecifier();

                                state._fsp--;
                                if (state.failed) return declaration;

                                if ( state.backtracking==0 ) { marg.setSpecifierExpression(functionSpecifier274);
                                    aarg.setSpecifierExpression(functionSpecifier274); }

                            }
                            break;

                        }


                        if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                        SEMICOLON275=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument11138); if (state.failed) return declaration;

                        if ( state.backtracking==0 ) { expecting=-1; }

                        if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON275); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "typedMethodOrGetterArgument"



    // $ANTLR start "untypedMethodOrGetterArgument"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1677:1: untypedMethodOrGetterArgument returns [TypedArgument declaration] : memberName ( ( parameters )+ )? lazySpecifier SEMICOLON ;
    public TypedArgument untypedMethodOrGetterArgument() throws RecognitionException {
        TypedArgument declaration = null;


        Token SEMICOLON279=null;
        Identifier memberName276 =null;

        ParameterList parameters277 =null;

        SpecifierExpression lazySpecifier278 =null;


        MethodArgument marg = new MethodArgument(null);
        marg.setType(new FunctionModifier(null));
        AttributeArgument aarg = new AttributeArgument(null);
        aarg.setType(new ValueModifier(null));
        declaration =aarg;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1683:5: ( memberName ( ( parameters )+ )? lazySpecifier SEMICOLON )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1683:7: memberName ( ( parameters )+ )? lazySpecifier SEMICOLON
            {
                pushFollow(FOLLOW_memberName_in_untypedMethodOrGetterArgument11196);
                memberName276=memberName();

                state._fsp--;
                if (state.failed) return declaration;

                if ( state.backtracking==0 ) { marg.setIdentifier(memberName276);
                    aarg.setIdentifier(memberName276); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1686:7: ( ( parameters )+ )?
                int alt141=2;
                int LA141_0 = input.LA(1);

                if ( (LA141_0==LPAREN) ) {
                    alt141=1;
                }
                switch (alt141) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1687:9: ( parameters )+
                    {
                        if ( state.backtracking==0 ) { declaration = marg; }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1688:9: ( parameters )+
                        int cnt140=0;
                        loop140:
                        do {
                            int alt140=2;
                            int LA140_0 = input.LA(1);

                            if ( (LA140_0==LPAREN) ) {
                                alt140=1;
                            }


                            switch (alt140) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1689:11: parameters
                                {
                                    pushFollow(FOLLOW_parameters_in_untypedMethodOrGetterArgument11245);
                                    parameters277=parameters();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { marg.addParameterList(parameters277); }

                                }
                                break;

                                default :
                                    if ( cnt140 >= 1 ) break loop140;
                                    if (state.backtracking>0) {state.failed=true; return declaration;}
                                    EarlyExitException eee =
                                            new EarlyExitException(140, input);
                                    throw eee;
                            }
                            cnt140++;
                        } while (true);


                    }
                    break;

                }


                pushFollow(FOLLOW_lazySpecifier_in_untypedMethodOrGetterArgument11285);
                lazySpecifier278=lazySpecifier();

                state._fsp--;
                if (state.failed) return declaration;

                if ( state.backtracking==0 ) { marg.setSpecifierExpression(lazySpecifier278);
                    aarg.setSpecifierExpression(lazySpecifier278); }

                if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                SEMICOLON279=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_untypedMethodOrGetterArgument11309); if (state.failed) return declaration;

                if ( state.backtracking==0 ) { expecting=-1; }

                if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON279); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "untypedMethodOrGetterArgument"



    // $ANTLR start "namedArgumentDeclaration"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1702:1: namedArgumentDeclaration returns [NamedArgument declaration] : ( objectArgument | typedMethodOrGetterArgument | voidOrInferredMethodArgument | inferredGetterArgument | untypedMethodOrGetterArgument );
    public NamedArgument namedArgumentDeclaration() throws RecognitionException {
        NamedArgument declaration = null;


        ObjectArgument objectArgument280 =null;

        TypedArgument typedMethodOrGetterArgument281 =null;

        MethodArgument voidOrInferredMethodArgument282 =null;

        AttributeArgument inferredGetterArgument283 =null;

        TypedArgument untypedMethodOrGetterArgument284 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1703:5: ( objectArgument | typedMethodOrGetterArgument | voidOrInferredMethodArgument | inferredGetterArgument | untypedMethodOrGetterArgument )
            int alt142=5;
            switch ( input.LA(1) ) {
                case OBJECT_DEFINITION:
                {
                    alt142=1;
                }
                break;
                case LBRACE:
                case LBRACKET:
                case SMALLER_OP:
                case UIDENTIFIER:
                {
                    alt142=2;
                }
                break;
                case FUNCTION_MODIFIER:
                case VOID_MODIFIER:
                {
                    alt142=3;
                }
                break;
                case VALUE_MODIFIER:
                {
                    alt142=4;
                }
                break;
                case LIDENTIFIER:
                {
                    alt142=5;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 142, 0, input);

                    throw nvae;

            }

            switch (alt142) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1703:7: objectArgument
                {
                    pushFollow(FOLLOW_objectArgument_in_namedArgumentDeclaration11346);
                    objectArgument280=objectArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =objectArgument280; }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1705:7: typedMethodOrGetterArgument
                {
                    pushFollow(FOLLOW_typedMethodOrGetterArgument_in_namedArgumentDeclaration11362);
                    typedMethodOrGetterArgument281=typedMethodOrGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =typedMethodOrGetterArgument281; }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1707:7: voidOrInferredMethodArgument
                {
                    pushFollow(FOLLOW_voidOrInferredMethodArgument_in_namedArgumentDeclaration11378);
                    voidOrInferredMethodArgument282=voidOrInferredMethodArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =voidOrInferredMethodArgument282; }

                }
                break;
                case 4 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1709:7: inferredGetterArgument
                {
                    pushFollow(FOLLOW_inferredGetterArgument_in_namedArgumentDeclaration11394);
                    inferredGetterArgument283=inferredGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =inferredGetterArgument283; }

                }
                break;
                case 5 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1711:7: untypedMethodOrGetterArgument
                {
                    pushFollow(FOLLOW_untypedMethodOrGetterArgument_in_namedArgumentDeclaration11410);
                    untypedMethodOrGetterArgument284=untypedMethodOrGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =untypedMethodOrGetterArgument284; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "namedArgumentDeclaration"



    // $ANTLR start "namedArgumentStart"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1718:1: namedArgumentStart : compilerAnnotations ( specificationStart | declarationStart ) ;
    public void namedArgumentStart() throws RecognitionException {
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1719:5: ( compilerAnnotations ( specificationStart | declarationStart ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1719:7: compilerAnnotations ( specificationStart | declarationStart )
            {
                pushFollow(FOLLOW_compilerAnnotations_in_namedArgumentStart11438);
                compilerAnnotations();

                state._fsp--;
                if (state.failed) return ;

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1720:7: ( specificationStart | declarationStart )
                int alt143=2;
                int LA143_0 = input.LA(1);

                if ( (LA143_0==LIDENTIFIER) ) {
                    alt143=1;
                }
                else if ( (LA143_0==ALIAS||LA143_0==ASSIGN||LA143_0==CLASS_DEFINITION||LA143_0==DYNAMIC||LA143_0==FUNCTION_MODIFIER||LA143_0==INTERFACE_DEFINITION||(LA143_0 >= LBRACE && LA143_0 <= LBRACKET)||LA143_0==OBJECT_DEFINITION||LA143_0==SMALLER_OP||LA143_0==UIDENTIFIER||LA143_0==VALUE_MODIFIER||LA143_0==VOID_MODIFIER) ) {
                    alt143=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 143, 0, input);

                    throw nvae;

                }
                switch (alt143) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1720:8: specificationStart
                    {
                        pushFollow(FOLLOW_specificationStart_in_namedArgumentStart11448);
                        specificationStart();

                        state._fsp--;
                        if (state.failed) return ;

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1720:29: declarationStart
                    {
                        pushFollow(FOLLOW_declarationStart_in_namedArgumentStart11452);
                        declarationStart();

                        state._fsp--;
                        if (state.failed) return ;

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "namedArgumentStart"



    // $ANTLR start "namedAnnotationArgumentsStart"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1723:1: namedAnnotationArgumentsStart : LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE ) ;
    public void namedAnnotationArgumentsStart() throws RecognitionException {
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1724:5: ( LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1724:7: LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE )
            {
                match(input,LBRACE,FOLLOW_LBRACE_in_namedAnnotationArgumentsStart11470); if (state.failed) return ;

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1724:14: ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE )
                int alt144=3;
                int LA144_0 = input.LA(1);

                if ( (LA144_0==COMPILER_ANNOTATION) ) {
                    int LA144_1 = input.LA(2);

                    if ( (synpred12_Ceylon()) ) {
                        alt144=1;
                    }
                    else if ( (true) ) {
                        alt144=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 144, 1, input);

                        throw nvae;

                    }
                }
                else if ( (LA144_0==LIDENTIFIER) ) {
                    int LA144_2 = input.LA(2);

                    if ( (synpred12_Ceylon()) ) {
                        alt144=1;
                    }
                    else if ( (true) ) {
                        alt144=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 144, 2, input);

                        throw nvae;

                    }
                }
                else if ( (LA144_0==VALUE_MODIFIER) ) {
                    int LA144_3 = input.LA(2);

                    if ( (synpred12_Ceylon()) ) {
                        alt144=1;
                    }
                    else if ( (true) ) {
                        alt144=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 144, 3, input);

                        throw nvae;

                    }
                }
                else if ( (LA144_0==FUNCTION_MODIFIER) && (synpred12_Ceylon())) {
                    alt144=1;
                }
                else if ( (LA144_0==VOID_MODIFIER) && (synpred12_Ceylon())) {
                    alt144=1;
                }
                else if ( (LA144_0==ASSIGN) && (synpred12_Ceylon())) {
                    alt144=1;
                }
                else if ( (LA144_0==INTERFACE_DEFINITION) && (synpred12_Ceylon())) {
                    alt144=1;
                }
                else if ( (LA144_0==CLASS_DEFINITION) && (synpred12_Ceylon())) {
                    alt144=1;
                }
                else if ( (LA144_0==OBJECT_DEFINITION) && (synpred12_Ceylon())) {
                    alt144=1;
                }
                else if ( (LA144_0==ALIAS) && (synpred12_Ceylon())) {
                    alt144=1;
                }
                else if ( (LA144_0==UIDENTIFIER) ) {
                    int LA144_11 = input.LA(2);

                    if ( (synpred12_Ceylon()) ) {
                        alt144=1;
                    }
                    else if ( (true) ) {
                        alt144=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 144, 11, input);

                        throw nvae;

                    }
                }
                else if ( (LA144_0==SMALLER_OP) && (synpred12_Ceylon())) {
                    alt144=1;
                }
                else if ( (LA144_0==LBRACKET) ) {
                    int LA144_13 = input.LA(2);

                    if ( (synpred12_Ceylon()) ) {
                        alt144=1;
                    }
                    else if ( (true) ) {
                        alt144=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 144, 13, input);

                        throw nvae;

                    }
                }
                else if ( (LA144_0==LBRACE) ) {
                    int LA144_14 = input.LA(2);

                    if ( (synpred12_Ceylon()) ) {
                        alt144=1;
                    }
                    else if ( (true) ) {
                        alt144=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 144, 14, input);

                        throw nvae;

                    }
                }
                else if ( (LA144_0==DYNAMIC) && (synpred12_Ceylon())) {
                    alt144=1;
                }
                else if ( (LA144_0==BACKTICK||LA144_0==CHAR_LITERAL||(LA144_0 >= DECREMENT_OP && LA144_0 <= DIFFERENCE_OP)||LA144_0==FLOAT_LITERAL||LA144_0==INCREMENT_OP||LA144_0==LPAREN||LA144_0==NATURAL_LITERAL||LA144_0==NOT_OP||(LA144_0 >= OUTER && LA144_0 <= PACKAGE)||LA144_0==STRING_LITERAL||LA144_0==STRING_START||(LA144_0 >= SUM_OP && LA144_0 <= SUPER)||LA144_0==THIS||LA144_0==VERBATIM_STRING) ) {
                    alt144=2;
                }
                else if ( (LA144_0==RBRACE) ) {
                    alt144=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 144, 0, input);

                    throw nvae;

                }
                switch (alt144) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1724:15: ( namedArgumentStart )=> namedArgumentStart
                    {
                        pushFollow(FOLLOW_namedArgumentStart_in_namedAnnotationArgumentsStart11477);
                        namedArgumentStart();

                        state._fsp--;
                        if (state.failed) return ;

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1724:58: iterableArgumentStart
                    {
                        pushFollow(FOLLOW_iterableArgumentStart_in_namedAnnotationArgumentsStart11481);
                        iterableArgumentStart();

                        state._fsp--;
                        if (state.failed) return ;

                    }
                    break;
                    case 3 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1724:82: RBRACE
                    {
                        match(input,RBRACE,FOLLOW_RBRACE_in_namedAnnotationArgumentsStart11485); if (state.failed) return ;

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "namedAnnotationArgumentsStart"



    // $ANTLR start "iterableArgumentStart"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1727:1: iterableArgumentStart : compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE ) ;
    public void iterableArgumentStart() throws RecognitionException {
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1728:5: ( compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1728:7: compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE )
            {
                pushFollow(FOLLOW_compilerAnnotations_in_iterableArgumentStart11503);
                compilerAnnotations();

                state._fsp--;
                if (state.failed) return ;

                pushFollow(FOLLOW_expression_in_iterableArgumentStart11505);
                expression();

                state._fsp--;
                if (state.failed) return ;

                if ( input.LA(1)==COMMA||input.LA(1)==RBRACE||input.LA(1)==SEMICOLON ) {
                    input.consume();
                    state.errorRecovery=false;
                    state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "iterableArgumentStart"



    // $ANTLR start "specificationStart"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1732:1: specificationStart : LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE ) ;
    public void specificationStart() throws RecognitionException {
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1733:5: ( LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1733:7: LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE )
            {
                match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_specificationStart11531); if (state.failed) return ;

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1733:19: ( parameters )*
                loop145:
                do {
                    int alt145=2;
                    int LA145_0 = input.LA(1);

                    if ( (LA145_0==LPAREN) ) {
                        alt145=1;
                    }


                    switch (alt145) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1733:19: parameters
                        {
                            pushFollow(FOLLOW_parameters_in_specificationStart11533);
                            parameters();

                            state._fsp--;
                            if (state.failed) return ;

                        }
                        break;

                        default :
                            break loop145;
                    }
                } while (true);


                if ( input.LA(1)==COMPUTE||input.LA(1)==SPECIFY ) {
                    input.consume();
                    state.errorRecovery=false;
                    state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "specificationStart"



    // $ANTLR start "parExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1736:1: parExpression returns [Expression expression] : LPAREN functionOrExpression RPAREN ;
    public Expression parExpression() throws RecognitionException {
        Expression expression = null;


        Token LPAREN285=null;
        Token RPAREN287=null;
        Expression functionOrExpression286 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1737:5: ( LPAREN functionOrExpression RPAREN )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1737:7: LPAREN functionOrExpression RPAREN
            {
                LPAREN285=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parExpression11562); if (state.failed) return expression;

                if ( state.backtracking==0 ) { expression = new Expression(LPAREN285); }

                pushFollow(FOLLOW_functionOrExpression_in_parExpression11579);
                functionOrExpression286=functionOrExpression();

                state._fsp--;
                if (state.failed) return expression;

                if ( state.backtracking==0 ) { if (functionOrExpression286!=null)
                    expression.setTerm(functionOrExpression286.getTerm()); }

                RPAREN287=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parExpression11595); if (state.failed) return expression;

                if ( state.backtracking==0 ) { expression.setEndToken(RPAREN287); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "parExpression"



    // $ANTLR start "positionalArguments"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1746:1: positionalArguments returns [PositionalArgumentList positionalArgumentList] : LPAREN (sa= sequencedArgument )? RPAREN ;
    public PositionalArgumentList positionalArguments() throws RecognitionException {
        PositionalArgumentList positionalArgumentList = null;


        Token LPAREN288=null;
        Token RPAREN289=null;
        SequencedArgument sa =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1747:5: ( LPAREN (sa= sequencedArgument )? RPAREN )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1747:7: LPAREN (sa= sequencedArgument )? RPAREN
            {
                LPAREN288=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_positionalArguments11632); if (state.failed) return positionalArgumentList;

                if ( state.backtracking==0 ) { positionalArgumentList = new PositionalArgumentList(LPAREN288); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1749:7: (sa= sequencedArgument )?
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( (LA146_0==BACKTICK||LA146_0==CHAR_LITERAL||LA146_0==COMPILER_ANNOTATION||(LA146_0 >= DECREMENT_OP && LA146_0 <= DIFFERENCE_OP)||(LA146_0 >= FLOAT_LITERAL && LA146_0 <= FUNCTION_MODIFIER)||LA146_0==IF_CLAUSE||LA146_0==INCREMENT_OP||(LA146_0 >= LBRACE && LA146_0 <= LBRACKET)||LA146_0==LIDENTIFIER||LA146_0==LPAREN||LA146_0==NATURAL_LITERAL||LA146_0==NOT_OP||(LA146_0 >= OUTER && LA146_0 <= PACKAGE)||LA146_0==PRODUCT_OP||LA146_0==STRING_LITERAL||LA146_0==STRING_START||(LA146_0 >= SUM_OP && LA146_0 <= SUPER)||LA146_0==THIS||LA146_0==UIDENTIFIER||(LA146_0 >= VALUE_MODIFIER && LA146_0 <= VOID_MODIFIER)) ) {
                    alt146=1;
                }
                switch (alt146) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1750:9: sa= sequencedArgument
                    {
                        pushFollow(FOLLOW_sequencedArgument_in_positionalArguments11661);
                        sa=sequencedArgument();

                        state._fsp--;
                        if (state.failed) return positionalArgumentList;

                        if ( state.backtracking==0 ) { if (sa!=null) {
                            for (PositionalArgument pa: sa.getPositionalArguments())
                                positionalArgumentList.addPositionalArgument(pa);
                            //TODO: this is really nasty, PositionalArgumentList should have
                            //      or be a SequencedArgument, not copy its PositionalArguments!
                            positionalArgumentList.setEndToken(sa.getMainEndToken()); } }

                    }
                    break;

                }


                RPAREN289=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_positionalArguments11688); if (state.failed) return positionalArgumentList;

                if ( state.backtracking==0 ) { positionalArgumentList.setEndToken(RPAREN289); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return positionalArgumentList;
    }
    // $ANTLR end "positionalArguments"



    // $ANTLR start "positionalArgument"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1762:1: positionalArgument returns [ListedArgument positionalArgument] : functionOrExpression ;
    public ListedArgument positionalArgument() throws RecognitionException {
        ListedArgument positionalArgument = null;


        Expression functionOrExpression290 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1763:5: ( functionOrExpression )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1763:7: functionOrExpression
            {
                if ( state.backtracking==0 ) { positionalArgument = new ListedArgument(null); }

                pushFollow(FOLLOW_functionOrExpression_in_positionalArgument11725);
                functionOrExpression290=functionOrExpression();

                state._fsp--;
                if (state.failed) return positionalArgument;

                if ( state.backtracking==0 ) { positionalArgument.setExpression(functionOrExpression290); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return positionalArgument;
    }
    // $ANTLR end "positionalArgument"



    // $ANTLR start "spreadArgument"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1768:1: spreadArgument returns [SpreadArgument positionalArgument] : PRODUCT_OP unionExpression ;
    public SpreadArgument spreadArgument() throws RecognitionException {
        SpreadArgument positionalArgument = null;


        Token PRODUCT_OP291=null;
        Term unionExpression292 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1769:5: ( PRODUCT_OP unionExpression )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1769:7: PRODUCT_OP unionExpression
            {
                PRODUCT_OP291=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_spreadArgument11754); if (state.failed) return positionalArgument;

                if ( state.backtracking==0 ) { positionalArgument = new SpreadArgument(PRODUCT_OP291); }

                pushFollow(FOLLOW_unionExpression_in_spreadArgument11770);
                unionExpression292=unionExpression();

                state._fsp--;
                if (state.failed) return positionalArgument;

                if ( state.backtracking==0 ) { Expression e = new Expression(null);
                    e.setTerm(unionExpression292);
                    positionalArgument.setExpression(e); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return positionalArgument;
    }
    // $ANTLR end "spreadArgument"



    // $ANTLR start "anonParametersStart"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1777:1: anonParametersStart : LPAREN ( compilerAnnotations annotatedDeclarationStart | RPAREN ) ;
    public void anonParametersStart() throws RecognitionException {
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1778:5: ( LPAREN ( compilerAnnotations annotatedDeclarationStart | RPAREN ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1778:7: LPAREN ( compilerAnnotations annotatedDeclarationStart | RPAREN )
            {
                match(input,LPAREN,FOLLOW_LPAREN_in_anonParametersStart11795); if (state.failed) return ;

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1778:14: ( compilerAnnotations annotatedDeclarationStart | RPAREN )
                int alt147=2;
                int LA147_0 = input.LA(1);

                if ( (LA147_0==ALIAS||LA147_0==ASSIGN||LA147_0==CLASS_DEFINITION||LA147_0==COMPILER_ANNOTATION||LA147_0==DYNAMIC||LA147_0==FUNCTION_MODIFIER||LA147_0==INTERFACE_DEFINITION||(LA147_0 >= LBRACE && LA147_0 <= LBRACKET)||LA147_0==LIDENTIFIER||LA147_0==OBJECT_DEFINITION||LA147_0==SMALLER_OP||LA147_0==STRING_LITERAL||LA147_0==UIDENTIFIER||(LA147_0 >= VALUE_MODIFIER && LA147_0 <= VOID_MODIFIER)) ) {
                    alt147=1;
                }
                else if ( (LA147_0==RPAREN) ) {
                    alt147=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 147, 0, input);

                    throw nvae;

                }
                switch (alt147) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1778:15: compilerAnnotations annotatedDeclarationStart
                    {
                        pushFollow(FOLLOW_compilerAnnotations_in_anonParametersStart11798);
                        compilerAnnotations();

                        state._fsp--;
                        if (state.failed) return ;

                        pushFollow(FOLLOW_annotatedDeclarationStart_in_anonParametersStart11800);
                        annotatedDeclarationStart();

                        state._fsp--;
                        if (state.failed) return ;

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1778:63: RPAREN
                    {
                        match(input,RPAREN,FOLLOW_RPAREN_in_anonParametersStart11804); if (state.failed) return ;

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "anonParametersStart"



    // $ANTLR start "nonemptyParametersStart"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1781:1: nonemptyParametersStart : LPAREN compilerAnnotations annotatedDeclarationStart ;
    public void nonemptyParametersStart() throws RecognitionException {
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1782:5: ( LPAREN compilerAnnotations annotatedDeclarationStart )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1782:7: LPAREN compilerAnnotations annotatedDeclarationStart
            {
                match(input,LPAREN,FOLLOW_LPAREN_in_nonemptyParametersStart11822); if (state.failed) return ;

                pushFollow(FOLLOW_compilerAnnotations_in_nonemptyParametersStart11824);
                compilerAnnotations();

                state._fsp--;
                if (state.failed) return ;

                pushFollow(FOLLOW_annotatedDeclarationStart_in_nonemptyParametersStart11826);
                annotatedDeclarationStart();

                state._fsp--;
                if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "nonemptyParametersStart"



    // $ANTLR start "functionOrExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1785:1: functionOrExpression returns [Expression expression] : ( ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=>f= anonymousFunction |e= expression );
    public Expression functionOrExpression() throws RecognitionException {
        Expression expression = null;


        Expression f =null;

        Expression e =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1786:5: ( ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=>f= anonymousFunction |e= expression )
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==FUNCTION_MODIFIER) && (synpred13_Ceylon())) {
                alt148=1;
            }
            else if ( (LA148_0==VOID_MODIFIER) && (synpred13_Ceylon())) {
                alt148=1;
            }
            else if ( (LA148_0==LPAREN) ) {
                int LA148_3 = input.LA(2);

                if ( (synpred13_Ceylon()) ) {
                    alt148=1;
                }
                else if ( (true) ) {
                    alt148=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return expression;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 148, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA148_0==BACKTICK||LA148_0==CHAR_LITERAL||(LA148_0 >= DECREMENT_OP && LA148_0 <= DIFFERENCE_OP)||LA148_0==FLOAT_LITERAL||LA148_0==INCREMENT_OP||(LA148_0 >= LBRACE && LA148_0 <= LBRACKET)||LA148_0==LIDENTIFIER||LA148_0==NATURAL_LITERAL||LA148_0==NOT_OP||(LA148_0 >= OUTER && LA148_0 <= PACKAGE)||LA148_0==STRING_LITERAL||LA148_0==STRING_START||(LA148_0 >= SUM_OP && LA148_0 <= SUPER)||LA148_0==THIS||LA148_0==UIDENTIFIER||(LA148_0 >= VALUE_MODIFIER && LA148_0 <= VERBATIM_STRING)) ) {
                alt148=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return expression;}
                NoViableAltException nvae =
                        new NoViableAltException("", 148, 0, input);

                throw nvae;

            }
            switch (alt148) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1786:7: ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=>f= anonymousFunction
                {
                    pushFollow(FOLLOW_anonymousFunction_in_functionOrExpression11865);
                    f=anonymousFunction();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = f; }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1789:7: e= expression
                {
                    pushFollow(FOLLOW_expression_in_functionOrExpression11883);
                    e=expression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = e; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "functionOrExpression"



    // $ANTLR start "anonymousFunction"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1793:1: anonymousFunction returns [Expression expression] : ( FUNCTION_MODIFIER | VOID_MODIFIER )? p1= parameters (p2= parameters )* ( COMPUTE fe= functionOrExpression | block ) ;
    public Expression anonymousFunction() throws RecognitionException {
        Expression expression = null;


        Token FUNCTION_MODIFIER293=null;
        Token VOID_MODIFIER294=null;
        ParameterList p1 =null;

        ParameterList p2 =null;

        Expression fe =null;

        Block block295 =null;


        FunctionArgument fa = new FunctionArgument(null);
        fa.setType(new FunctionModifier(null));
        Expression e = new Expression(null);
        e.setTerm(fa);
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1798:5: ( ( FUNCTION_MODIFIER | VOID_MODIFIER )? p1= parameters (p2= parameters )* ( COMPUTE fe= functionOrExpression | block ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1798:7: ( FUNCTION_MODIFIER | VOID_MODIFIER )? p1= parameters (p2= parameters )* ( COMPUTE fe= functionOrExpression | block )
            {
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1798:7: ( FUNCTION_MODIFIER | VOID_MODIFIER )?
                int alt149=3;
                int LA149_0 = input.LA(1);

                if ( (LA149_0==FUNCTION_MODIFIER) ) {
                    alt149=1;
                }
                else if ( (LA149_0==VOID_MODIFIER) ) {
                    alt149=2;
                }
                switch (alt149) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1799:9: FUNCTION_MODIFIER
                    {
                        FUNCTION_MODIFIER293=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_anonymousFunction11931); if (state.failed) return expression;

                        if ( state.backtracking==0 ) { fa.setType(new FunctionModifier(FUNCTION_MODIFIER293)); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1802:9: VOID_MODIFIER
                    {
                        VOID_MODIFIER294=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_anonymousFunction11959); if (state.failed) return expression;

                        if ( state.backtracking==0 ) { fa.setType(new VoidModifier(VOID_MODIFIER294)); }

                    }
                    break;

                }


                if ( state.backtracking==0 ) { expression =e; }

                pushFollow(FOLLOW_parameters_in_anonymousFunction11996);
                p1=parameters();

                state._fsp--;
                if (state.failed) return expression;

                if ( state.backtracking==0 ) { fa.addParameterList(p1); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1808:7: (p2= parameters )*
                loop150:
                do {
                    int alt150=2;
                    int LA150_0 = input.LA(1);

                    if ( (LA150_0==LPAREN) ) {
                        alt150=1;
                    }


                    switch (alt150) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1810:9: p2= parameters
                        {
                            pushFollow(FOLLOW_parameters_in_anonymousFunction12034);
                            p2=parameters();

                            state._fsp--;
                            if (state.failed) return expression;

                            if ( state.backtracking==0 ) { fa.addParameterList(p2); }

                        }
                        break;

                        default :
                            break loop150;
                    }
                } while (true);


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1813:7: ( COMPUTE fe= functionOrExpression | block )
                int alt151=2;
                int LA151_0 = input.LA(1);

                if ( (LA151_0==COMPUTE) ) {
                    alt151=1;
                }
                else if ( (LA151_0==LBRACE) ) {
                    alt151=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return expression;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 151, 0, input);

                    throw nvae;

                }
                switch (alt151) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1814:9: COMPUTE fe= functionOrExpression
                    {
                        match(input,COMPUTE,FOLLOW_COMPUTE_in_anonymousFunction12072); if (state.failed) return expression;

                        pushFollow(FOLLOW_functionOrExpression_in_anonymousFunction12084);
                        fe=functionOrExpression();

                        state._fsp--;
                        if (state.failed) return expression;

                        if ( state.backtracking==0 ) { fa.setExpression(fe); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1818:9: block
                    {
                        pushFollow(FOLLOW_block_in_anonymousFunction12112);
                        block295=block();

                        state._fsp--;
                        if (state.failed) return expression;

                        if ( state.backtracking==0 ) { fa.setBlock(block295); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "anonymousFunction"



    // $ANTLR start "comprehension"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1823:1: comprehension returns [Comprehension comprehension] : ( forComprehensionClause | ifComprehensionClause );
    public Comprehension comprehension() throws RecognitionException {
        Comprehension comprehension = null;


        ForComprehensionClause forComprehensionClause296 =null;

        IfComprehensionClause ifComprehensionClause297 =null;


        comprehension = new Comprehension(null);
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1825:5: ( forComprehensionClause | ifComprehensionClause )
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==FOR_CLAUSE) ) {
                alt152=1;
            }
            else if ( (LA152_0==IF_CLAUSE) ) {
                alt152=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return comprehension;}
                NoViableAltException nvae =
                        new NoViableAltException("", 152, 0, input);

                throw nvae;

            }
            switch (alt152) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1825:7: forComprehensionClause
                {
                    pushFollow(FOLLOW_forComprehensionClause_in_comprehension12160);
                    forComprehensionClause296=forComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehension;

                    if ( state.backtracking==0 ) { comprehension.setInitialComprehensionClause(forComprehensionClause296); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1827:7: ifComprehensionClause
                {
                    pushFollow(FOLLOW_ifComprehensionClause_in_comprehension12176);
                    ifComprehensionClause297=ifComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehension;

                    if ( state.backtracking==0 ) { comprehension.setInitialComprehensionClause(ifComprehensionClause297); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return comprehension;
    }
    // $ANTLR end "comprehension"



    // $ANTLR start "comprehensionClause"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1831:1: comprehensionClause returns [ComprehensionClause comprehensionClause] : ( forComprehensionClause | ifComprehensionClause | expressionComprehensionClause );
    public ComprehensionClause comprehensionClause() throws RecognitionException {
        ComprehensionClause comprehensionClause = null;


        ForComprehensionClause forComprehensionClause298 =null;

        IfComprehensionClause ifComprehensionClause299 =null;

        ExpressionComprehensionClause expressionComprehensionClause300 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1832:5: ( forComprehensionClause | ifComprehensionClause | expressionComprehensionClause )
            int alt153=3;
            switch ( input.LA(1) ) {
                case FOR_CLAUSE:
                {
                    alt153=1;
                }
                break;
                case IF_CLAUSE:
                {
                    alt153=2;
                }
                break;
                case BACKTICK:
                case CHAR_LITERAL:
                case COMMA:
                case DECREMENT_OP:
                case DIFFERENCE_OP:
                case FLOAT_LITERAL:
                case FUNCTION_MODIFIER:
                case INCREMENT_OP:
                case LBRACE:
                case LBRACKET:
                case LIDENTIFIER:
                case LPAREN:
                case NATURAL_LITERAL:
                case NOT_OP:
                case OUTER:
                case PACKAGE:
                case RBRACE:
                case RBRACKET:
                case RPAREN:
                case STRING_LITERAL:
                case STRING_START:
                case SUM_OP:
                case SUPER:
                case THIS:
                case UIDENTIFIER:
                case VALUE_MODIFIER:
                case VERBATIM_STRING:
                case VOID_MODIFIER:
                {
                    alt153=3;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return comprehensionClause;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 153, 0, input);

                    throw nvae;

            }

            switch (alt153) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1832:7: forComprehensionClause
                {
                    pushFollow(FOLLOW_forComprehensionClause_in_comprehensionClause12205);
                    forComprehensionClause298=forComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = forComprehensionClause298; }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1834:7: ifComprehensionClause
                {
                    pushFollow(FOLLOW_ifComprehensionClause_in_comprehensionClause12222);
                    ifComprehensionClause299=ifComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = ifComprehensionClause299; }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1836:7: expressionComprehensionClause
                {
                    pushFollow(FOLLOW_expressionComprehensionClause_in_comprehensionClause12239);
                    expressionComprehensionClause300=expressionComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = expressionComprehensionClause300; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "comprehensionClause"



    // $ANTLR start "expressionComprehensionClause"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1840:1: expressionComprehensionClause returns [ExpressionComprehensionClause comprehensionClause] : ( functionOrExpression |);
    public ExpressionComprehensionClause expressionComprehensionClause() throws RecognitionException {
        ExpressionComprehensionClause comprehensionClause = null;


        Expression functionOrExpression301 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1841:5: ( functionOrExpression |)
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==BACKTICK||LA154_0==CHAR_LITERAL||(LA154_0 >= DECREMENT_OP && LA154_0 <= DIFFERENCE_OP)||LA154_0==FLOAT_LITERAL||LA154_0==FUNCTION_MODIFIER||LA154_0==INCREMENT_OP||(LA154_0 >= LBRACE && LA154_0 <= LBRACKET)||LA154_0==LIDENTIFIER||LA154_0==LPAREN||LA154_0==NATURAL_LITERAL||LA154_0==NOT_OP||(LA154_0 >= OUTER && LA154_0 <= PACKAGE)||LA154_0==STRING_LITERAL||LA154_0==STRING_START||(LA154_0 >= SUM_OP && LA154_0 <= SUPER)||LA154_0==THIS||LA154_0==UIDENTIFIER||(LA154_0 >= VALUE_MODIFIER && LA154_0 <= VOID_MODIFIER)) ) {
                alt154=1;
            }
            else if ( (LA154_0==COMMA||(LA154_0 >= RBRACE && LA154_0 <= RBRACKET)||LA154_0==RPAREN) ) {
                alt154=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return comprehensionClause;}
                NoViableAltException nvae =
                        new NoViableAltException("", 154, 0, input);

                throw nvae;

            }
            switch (alt154) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1841:7: functionOrExpression
                {
                    pushFollow(FOLLOW_functionOrExpression_in_expressionComprehensionClause12269);
                    functionOrExpression301=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = new ExpressionComprehensionClause(null);
                        comprehensionClause.setExpression(functionOrExpression301); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1844:7: 
                {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                            new MismatchedTokenException(LIDENTIFIER, input)); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "expressionComprehensionClause"



    // $ANTLR start "forComprehensionClause"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1848:1: forComprehensionClause returns [ForComprehensionClause comprehensionClause] : FOR_CLAUSE forIterator comprehensionClause ;
    public ForComprehensionClause forComprehensionClause() throws RecognitionException {
        ForComprehensionClause comprehensionClause = null;


        Token FOR_CLAUSE302=null;
        ForIterator forIterator303 =null;

        ComprehensionClause comprehensionClause304 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1849:5: ( FOR_CLAUSE forIterator comprehensionClause )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1849:7: FOR_CLAUSE forIterator comprehensionClause
            {
                FOR_CLAUSE302=(Token)match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_forComprehensionClause12306); if (state.failed) return comprehensionClause;

                if ( state.backtracking==0 ) { comprehensionClause = new ForComprehensionClause(FOR_CLAUSE302); }

                pushFollow(FOLLOW_forIterator_in_forComprehensionClause12322);
                forIterator303=forIterator();

                state._fsp--;
                if (state.failed) return comprehensionClause;

                if ( state.backtracking==0 ) { comprehensionClause.setForIterator(forIterator303); }

                pushFollow(FOLLOW_comprehensionClause_in_forComprehensionClause12338);
                comprehensionClause304=comprehensionClause();

                state._fsp--;
                if (state.failed) return comprehensionClause;

                if ( state.backtracking==0 ) { comprehensionClause.setComprehensionClause(comprehensionClause304); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "forComprehensionClause"



    // $ANTLR start "ifComprehensionClause"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1857:1: ifComprehensionClause returns [IfComprehensionClause comprehensionClause] : IF_CLAUSE conditions comprehensionClause ;
    public IfComprehensionClause ifComprehensionClause() throws RecognitionException {
        IfComprehensionClause comprehensionClause = null;


        Token IF_CLAUSE305=null;
        ConditionList conditions306 =null;

        ComprehensionClause comprehensionClause307 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1858:5: ( IF_CLAUSE conditions comprehensionClause )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1858:7: IF_CLAUSE conditions comprehensionClause
            {
                IF_CLAUSE305=(Token)match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_ifComprehensionClause12371); if (state.failed) return comprehensionClause;

                if ( state.backtracking==0 ) { comprehensionClause = new IfComprehensionClause(IF_CLAUSE305); }

                pushFollow(FOLLOW_conditions_in_ifComprehensionClause12387);
                conditions306=conditions();

                state._fsp--;
                if (state.failed) return comprehensionClause;

                if ( state.backtracking==0 ) { comprehensionClause.setConditionList(conditions306); }

                pushFollow(FOLLOW_comprehensionClause_in_ifComprehensionClause12403);
                comprehensionClause307=comprehensionClause();

                state._fsp--;
                if (state.failed) return comprehensionClause;

                if ( state.backtracking==0 ) { comprehensionClause.setComprehensionClause(comprehensionClause307); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "ifComprehensionClause"



    // $ANTLR start "assignmentExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1866:1: assignmentExpression returns [Term term] : ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression | memberReference ( positionalArgument )? )? ;
    public Term assignmentExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        Expression ee2 =null;

        AssignmentOp assignmentOperator308 =null;

        CeylonParser.memberReference_return memberReference309 =null;

        ListedArgument positionalArgument310 =null;


        QualifiedMemberOrTypeExpression qe=null;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1868:5: (ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression | memberReference ( positionalArgument )? )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1868:7: ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression | memberReference ( positionalArgument )? )?
            {
                pushFollow(FOLLOW_thenElseExpression_in_assignmentExpression12447);
                ee1=thenElseExpression();

                state._fsp--;
                if (state.failed) return term;

                if ( state.backtracking==0 ) { term = ee1; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1870:7: ( assignmentOperator ee2= functionOrExpression | memberReference ( positionalArgument )? )?
                int alt156=3;
                int LA156_0 = input.LA(1);

                if ( (LA156_0==ADD_SPECIFY||LA156_0==AND_SPECIFY||LA156_0==COMPLEMENT_SPECIFY||LA156_0==DIVIDE_SPECIFY||LA156_0==INTERSECT_SPECIFY||LA156_0==MULTIPLY_SPECIFY||LA156_0==OR_SPECIFY||LA156_0==REMAINDER_SPECIFY||LA156_0==SPECIFY||LA156_0==SUBTRACT_SPECIFY||LA156_0==UNION_SPECIFY) ) {
                    alt156=1;
                }
                else if ( (LA156_0==LIDENTIFIER) ) {
                    alt156=2;
                }
                switch (alt156) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1871:9: assignmentOperator ee2= functionOrExpression
                    {
                        pushFollow(FOLLOW_assignmentOperator_in_assignmentExpression12473);
                        assignmentOperator308=assignmentOperator();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { assignmentOperator308.setLeftTerm(term);
                            term = assignmentOperator308; }

                        pushFollow(FOLLOW_functionOrExpression_in_assignmentExpression12496);
                        ee2=functionOrExpression();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { if (ee2!=null)
                            assignmentOperator308.setRightTerm(ee2.getTerm()); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1877:9: memberReference ( positionalArgument )?
                    {
                        pushFollow(FOLLOW_memberReference_in_assignmentExpression12516);
                        memberReference309=memberReference();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { qe = new QualifiedMemberExpression(null);
                            Expression e = new Expression(null);
                            e.setTerm(term);
                            qe.setPrimary(e);
                            qe.setMemberOperator(new MemberOp(null));
                            qe.setIdentifier((memberReference309!=null?memberReference309.identifier:null));
                            qe.setTypeArguments( new InferredTypeArguments(null) );
                            if ((memberReference309!=null?memberReference309.typeArgumentList:null)!=null)
                                qe.setTypeArguments((memberReference309!=null?memberReference309.typeArgumentList:null));
                            term = qe; }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1888:9: ( positionalArgument )?
                        int alt155=2;
                        int LA155_0 = input.LA(1);

                        if ( (LA155_0==BACKTICK||LA155_0==CHAR_LITERAL||(LA155_0 >= DECREMENT_OP && LA155_0 <= DIFFERENCE_OP)||LA155_0==FLOAT_LITERAL||LA155_0==FUNCTION_MODIFIER||LA155_0==INCREMENT_OP||(LA155_0 >= LBRACE && LA155_0 <= LBRACKET)||LA155_0==LIDENTIFIER||LA155_0==LPAREN||LA155_0==NATURAL_LITERAL||LA155_0==NOT_OP||(LA155_0 >= OUTER && LA155_0 <= PACKAGE)||LA155_0==STRING_LITERAL||LA155_0==STRING_START||(LA155_0 >= SUM_OP && LA155_0 <= SUPER)||LA155_0==THIS||LA155_0==UIDENTIFIER||(LA155_0 >= VALUE_MODIFIER && LA155_0 <= VOID_MODIFIER)) ) {
                            alt155=1;
                        }
                        switch (alt155) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1889:9: positionalArgument
                            {
                                pushFollow(FOLLOW_positionalArgument_in_assignmentExpression12546);
                                positionalArgument310=positionalArgument();

                                state._fsp--;
                                if (state.failed) return term;

                                if ( state.backtracking==0 ) { InvocationExpression ie = new InvocationExpression(null);
                                    ie.setPrimary(qe);
                                    PositionalArgumentList al = new PositionalArgumentList(null);
                                    al.addPositionalArgument(positionalArgument310);
                                    ie.setPositionalArgumentList(al);
                                    term = ie; }

                            }
                            break;

                        }


                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "assignmentExpression"



    // $ANTLR start "assignmentOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1900:1: assignmentOperator returns [AssignmentOp operator] : ( SPECIFY | ADD_SPECIFY | SUBTRACT_SPECIFY | MULTIPLY_SPECIFY | DIVIDE_SPECIFY | REMAINDER_SPECIFY | INTERSECT_SPECIFY | UNION_SPECIFY | COMPLEMENT_SPECIFY | AND_SPECIFY | OR_SPECIFY );
    public AssignmentOp assignmentOperator() throws RecognitionException {
        AssignmentOp operator = null;


        Token SPECIFY311=null;
        Token ADD_SPECIFY312=null;
        Token SUBTRACT_SPECIFY313=null;
        Token MULTIPLY_SPECIFY314=null;
        Token DIVIDE_SPECIFY315=null;
        Token REMAINDER_SPECIFY316=null;
        Token INTERSECT_SPECIFY317=null;
        Token UNION_SPECIFY318=null;
        Token COMPLEMENT_SPECIFY319=null;
        Token AND_SPECIFY320=null;
        Token OR_SPECIFY321=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1901:5: ( SPECIFY | ADD_SPECIFY | SUBTRACT_SPECIFY | MULTIPLY_SPECIFY | DIVIDE_SPECIFY | REMAINDER_SPECIFY | INTERSECT_SPECIFY | UNION_SPECIFY | COMPLEMENT_SPECIFY | AND_SPECIFY | OR_SPECIFY )
            int alt157=11;
            switch ( input.LA(1) ) {
                case SPECIFY:
                {
                    alt157=1;
                }
                break;
                case ADD_SPECIFY:
                {
                    alt157=2;
                }
                break;
                case SUBTRACT_SPECIFY:
                {
                    alt157=3;
                }
                break;
                case MULTIPLY_SPECIFY:
                {
                    alt157=4;
                }
                break;
                case DIVIDE_SPECIFY:
                {
                    alt157=5;
                }
                break;
                case REMAINDER_SPECIFY:
                {
                    alt157=6;
                }
                break;
                case INTERSECT_SPECIFY:
                {
                    alt157=7;
                }
                break;
                case UNION_SPECIFY:
                {
                    alt157=8;
                }
                break;
                case COMPLEMENT_SPECIFY:
                {
                    alt157=9;
                }
                break;
                case AND_SPECIFY:
                {
                    alt157=10;
                }
                break;
                case OR_SPECIFY:
                {
                    alt157=11;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return operator;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 157, 0, input);

                    throw nvae;

            }

            switch (alt157) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1901:7: SPECIFY
                {
                    SPECIFY311=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_assignmentOperator12597); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AssignOp(SPECIFY311); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1903:7: ADD_SPECIFY
                {
                    ADD_SPECIFY312=(Token)match(input,ADD_SPECIFY,FOLLOW_ADD_SPECIFY_in_assignmentOperator12612); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AddAssignOp(ADD_SPECIFY312); }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1904:7: SUBTRACT_SPECIFY
                {
                    SUBTRACT_SPECIFY313=(Token)match(input,SUBTRACT_SPECIFY,FOLLOW_SUBTRACT_SPECIFY_in_assignmentOperator12622); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SubtractAssignOp(SUBTRACT_SPECIFY313); }

                }
                break;
                case 4 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1905:7: MULTIPLY_SPECIFY
                {
                    MULTIPLY_SPECIFY314=(Token)match(input,MULTIPLY_SPECIFY,FOLLOW_MULTIPLY_SPECIFY_in_assignmentOperator12632); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new MultiplyAssignOp(MULTIPLY_SPECIFY314); }

                }
                break;
                case 5 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1906:7: DIVIDE_SPECIFY
                {
                    DIVIDE_SPECIFY315=(Token)match(input,DIVIDE_SPECIFY,FOLLOW_DIVIDE_SPECIFY_in_assignmentOperator12642); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DivideAssignOp(DIVIDE_SPECIFY315); }

                }
                break;
                case 6 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1907:7: REMAINDER_SPECIFY
                {
                    REMAINDER_SPECIFY316=(Token)match(input,REMAINDER_SPECIFY,FOLLOW_REMAINDER_SPECIFY_in_assignmentOperator12652); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RemainderAssignOp(REMAINDER_SPECIFY316); }

                }
                break;
                case 7 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1908:7: INTERSECT_SPECIFY
                {
                    INTERSECT_SPECIFY317=(Token)match(input,INTERSECT_SPECIFY,FOLLOW_INTERSECT_SPECIFY_in_assignmentOperator12662); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IntersectAssignOp(INTERSECT_SPECIFY317); }

                }
                break;
                case 8 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1909:7: UNION_SPECIFY
                {
                    UNION_SPECIFY318=(Token)match(input,UNION_SPECIFY,FOLLOW_UNION_SPECIFY_in_assignmentOperator12672); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new UnionAssignOp(UNION_SPECIFY318); }

                }
                break;
                case 9 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1910:7: COMPLEMENT_SPECIFY
                {
                    COMPLEMENT_SPECIFY319=(Token)match(input,COMPLEMENT_SPECIFY,FOLLOW_COMPLEMENT_SPECIFY_in_assignmentOperator12682); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ComplementAssignOp(COMPLEMENT_SPECIFY319); }

                }
                break;
                case 10 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1911:7: AND_SPECIFY
                {
                    AND_SPECIFY320=(Token)match(input,AND_SPECIFY,FOLLOW_AND_SPECIFY_in_assignmentOperator12692); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AndAssignOp(AND_SPECIFY320); }

                }
                break;
                case 11 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1912:7: OR_SPECIFY
                {
                    OR_SPECIFY321=(Token)match(input,OR_SPECIFY,FOLLOW_OR_SPECIFY_in_assignmentOperator12702); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new OrAssignOp(OR_SPECIFY321); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "assignmentOperator"



    // $ANTLR start "thenElseExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1916:1: thenElseExpression returns [Term term] : de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )* ;
    public Term thenElseExpression() throws RecognitionException {
        Term term = null;


        Term de1 =null;

        Term de2 =null;

        BinaryOperatorExpression thenElseOperator322 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1917:5: (de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1917:7: de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )*
            {
                pushFollow(FOLLOW_disjunctionExpression_in_thenElseExpression12732);
                de1=disjunctionExpression();

                state._fsp--;
                if (state.failed) return term;

                if ( state.backtracking==0 ) { term = de1; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1919:7: ( thenElseOperator de2= disjunctionExpression )*
                loop158:
                do {
                    int alt158=2;
                    int LA158_0 = input.LA(1);

                    if ( (LA158_0==ELSE_CLAUSE||LA158_0==THEN_CLAUSE) ) {
                        alt158=1;
                    }


                    switch (alt158) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1920:9: thenElseOperator de2= disjunctionExpression
                        {
                            pushFollow(FOLLOW_thenElseOperator_in_thenElseExpression12758);
                            thenElseOperator322=thenElseOperator();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { thenElseOperator322.setLeftTerm(term);
                                term = thenElseOperator322; }

                            pushFollow(FOLLOW_disjunctionExpression_in_thenElseExpression12780);
                            de2=disjunctionExpression();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { thenElseOperator322.setRightTerm(de2); }

                        }
                        break;

                        default :
                            break loop158;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "thenElseExpression"



    // $ANTLR start "thenElseOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1941:1: thenElseOperator returns [BinaryOperatorExpression operator] : ( ELSE_CLAUSE | THEN_CLAUSE );
    public BinaryOperatorExpression thenElseOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token ELSE_CLAUSE323=null;
        Token THEN_CLAUSE324=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1942:5: ( ELSE_CLAUSE | THEN_CLAUSE )
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==ELSE_CLAUSE) ) {
                alt159=1;
            }
            else if ( (LA159_0==THEN_CLAUSE) ) {
                alt159=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                        new NoViableAltException("", 159, 0, input);

                throw nvae;

            }
            switch (alt159) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1942:7: ELSE_CLAUSE
                {
                    ELSE_CLAUSE323=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_thenElseOperator12851); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DefaultOp(ELSE_CLAUSE323); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1944:7: THEN_CLAUSE
                {
                    THEN_CLAUSE324=(Token)match(input,THEN_CLAUSE,FOLLOW_THEN_CLAUSE_in_thenElseOperator12868); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ThenOp(THEN_CLAUSE324); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "thenElseOperator"



    // $ANTLR start "disjunctionExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1948:1: disjunctionExpression returns [Term term] : me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )* ;
    public Term disjunctionExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        OrOp disjunctionOperator325 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1949:5: (me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1949:7: me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )*
            {
                pushFollow(FOLLOW_conjunctionExpression_in_disjunctionExpression12899);
                me1=conjunctionExpression();

                state._fsp--;
                if (state.failed) return term;

                if ( state.backtracking==0 ) { term = me1; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1951:7: ( disjunctionOperator me2= conjunctionExpression )*
                loop160:
                do {
                    int alt160=2;
                    int LA160_0 = input.LA(1);

                    if ( (LA160_0==OR_OP) ) {
                        alt160=1;
                    }


                    switch (alt160) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1952:9: disjunctionOperator me2= conjunctionExpression
                        {
                            pushFollow(FOLLOW_disjunctionOperator_in_disjunctionExpression12925);
                            disjunctionOperator325=disjunctionOperator();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { disjunctionOperator325.setLeftTerm(term);
                                term = disjunctionOperator325; }

                            pushFollow(FOLLOW_conjunctionExpression_in_disjunctionExpression12948);
                            me2=conjunctionExpression();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { disjunctionOperator325.setRightTerm(me2); }

                        }
                        break;

                        default :
                            break loop160;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "disjunctionExpression"



    // $ANTLR start "disjunctionOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1960:1: disjunctionOperator returns [OrOp operator] : OR_OP ;
    public OrOp disjunctionOperator() throws RecognitionException {
        OrOp operator = null;


        Token OR_OP326=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1961:5: ( OR_OP )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1961:7: OR_OP
            {
                OR_OP326=(Token)match(input,OR_OP,FOLLOW_OR_OP_in_disjunctionOperator12988); if (state.failed) return operator;

                if ( state.backtracking==0 ) { operator = new OrOp(OR_OP326); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "disjunctionOperator"



    // $ANTLR start "conjunctionExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1965:1: conjunctionExpression returns [Term term] : me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )* ;
    public Term conjunctionExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        AndOp conjunctionOperator327 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1966:5: (me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1966:7: me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )*
            {
                pushFollow(FOLLOW_logicalNegationExpression_in_conjunctionExpression13020);
                me1=logicalNegationExpression();

                state._fsp--;
                if (state.failed) return term;

                if ( state.backtracking==0 ) { term = me1; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1968:7: ( conjunctionOperator me2= logicalNegationExpression )*
                loop161:
                do {
                    int alt161=2;
                    int LA161_0 = input.LA(1);

                    if ( (LA161_0==AND_OP) ) {
                        alt161=1;
                    }


                    switch (alt161) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1969:9: conjunctionOperator me2= logicalNegationExpression
                        {
                            pushFollow(FOLLOW_conjunctionOperator_in_conjunctionExpression13046);
                            conjunctionOperator327=conjunctionOperator();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { conjunctionOperator327.setLeftTerm(term);
                                term = conjunctionOperator327; }

                            pushFollow(FOLLOW_logicalNegationExpression_in_conjunctionExpression13069);
                            me2=logicalNegationExpression();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { conjunctionOperator327.setRightTerm(me2); }

                        }
                        break;

                        default :
                            break loop161;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "conjunctionExpression"



    // $ANTLR start "conjunctionOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1977:1: conjunctionOperator returns [AndOp operator] : AND_OP ;
    public AndOp conjunctionOperator() throws RecognitionException {
        AndOp operator = null;


        Token AND_OP328=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1978:5: ( AND_OP )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1978:7: AND_OP
            {
                AND_OP328=(Token)match(input,AND_OP,FOLLOW_AND_OP_in_conjunctionOperator13109); if (state.failed) return operator;

                if ( state.backtracking==0 ) { operator = new AndOp(AND_OP328); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "conjunctionOperator"



    // $ANTLR start "logicalNegationExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1982:1: logicalNegationExpression returns [Term term] : ( notOperator le= logicalNegationExpression | equalityExpression );
    public Term logicalNegationExpression() throws RecognitionException {
        Term term = null;


        Term le =null;

        NotOp notOperator329 =null;

        Term equalityExpression330 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1983:5: ( notOperator le= logicalNegationExpression | equalityExpression )
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==NOT_OP) ) {
                alt162=1;
            }
            else if ( (LA162_0==BACKTICK||LA162_0==CHAR_LITERAL||(LA162_0 >= DECREMENT_OP && LA162_0 <= DIFFERENCE_OP)||LA162_0==FLOAT_LITERAL||LA162_0==INCREMENT_OP||(LA162_0 >= LBRACE && LA162_0 <= LBRACKET)||LA162_0==LIDENTIFIER||LA162_0==LPAREN||LA162_0==NATURAL_LITERAL||(LA162_0 >= OUTER && LA162_0 <= PACKAGE)||LA162_0==STRING_LITERAL||LA162_0==STRING_START||(LA162_0 >= SUM_OP && LA162_0 <= SUPER)||LA162_0==THIS||LA162_0==UIDENTIFIER||(LA162_0 >= VALUE_MODIFIER && LA162_0 <= VERBATIM_STRING)) ) {
                alt162=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                        new NoViableAltException("", 162, 0, input);

                throw nvae;

            }
            switch (alt162) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1983:7: notOperator le= logicalNegationExpression
                {
                    pushFollow(FOLLOW_notOperator_in_logicalNegationExpression13139);
                    notOperator329=notOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = notOperator329; }

                    pushFollow(FOLLOW_logicalNegationExpression_in_logicalNegationExpression13158);
                    le=logicalNegationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { notOperator329.setTerm(le); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1987:7: equalityExpression
                {
                    pushFollow(FOLLOW_equalityExpression_in_logicalNegationExpression13174);
                    equalityExpression330=equalityExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = equalityExpression330; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "logicalNegationExpression"



    // $ANTLR start "notOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1991:1: notOperator returns [NotOp operator] : NOT_OP ;
    public NotOp notOperator() throws RecognitionException {
        NotOp operator = null;


        Token NOT_OP331=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1992:5: ( NOT_OP )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1992:7: NOT_OP
            {
                NOT_OP331=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_notOperator13203); if (state.failed) return operator;

                if ( state.backtracking==0 ) { operator = new NotOp(NOT_OP331); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "notOperator"



    // $ANTLR start "equalityExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1996:1: equalityExpression returns [Term term] : ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )? ;
    public Term equalityExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        Term ee2 =null;

        BinaryOperatorExpression equalityOperator332 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1997:5: (ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1997:7: ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )?
            {
                pushFollow(FOLLOW_comparisonExpression_in_equalityExpression13235);
                ee1=comparisonExpression();

                state._fsp--;
                if (state.failed) return term;

                if ( state.backtracking==0 ) { term = ee1; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1999:7: ( equalityOperator ee2= comparisonExpression )?
                int alt163=2;
                int LA163_0 = input.LA(1);

                if ( (LA163_0==EQUAL_OP||LA163_0==IDENTICAL_OP||LA163_0==NOT_EQUAL_OP) ) {
                    alt163=1;
                }
                switch (alt163) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2000:9: equalityOperator ee2= comparisonExpression
                    {
                        pushFollow(FOLLOW_equalityOperator_in_equalityExpression13261);
                        equalityOperator332=equalityOperator();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { equalityOperator332.setLeftTerm(term);
                            term = equalityOperator332; }

                        pushFollow(FOLLOW_comparisonExpression_in_equalityExpression13284);
                        ee2=comparisonExpression();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { equalityOperator332.setRightTerm(ee2); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "equalityExpression"



    // $ANTLR start "equalityOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2008:1: equalityOperator returns [BinaryOperatorExpression operator] : ( EQUAL_OP | NOT_EQUAL_OP | IDENTICAL_OP );
    public BinaryOperatorExpression equalityOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token EQUAL_OP333=null;
        Token NOT_EQUAL_OP334=null;
        Token IDENTICAL_OP335=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2009:5: ( EQUAL_OP | NOT_EQUAL_OP | IDENTICAL_OP )
            int alt164=3;
            switch ( input.LA(1) ) {
                case EQUAL_OP:
                {
                    alt164=1;
                }
                break;
                case NOT_EQUAL_OP:
                {
                    alt164=2;
                }
                break;
                case IDENTICAL_OP:
                {
                    alt164=3;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return operator;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 164, 0, input);

                    throw nvae;

            }

            switch (alt164) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2009:7: EQUAL_OP
                {
                    EQUAL_OP333=(Token)match(input,EQUAL_OP,FOLLOW_EQUAL_OP_in_equalityOperator13324); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new EqualOp(EQUAL_OP333); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2011:7: NOT_EQUAL_OP
                {
                    NOT_EQUAL_OP334=(Token)match(input,NOT_EQUAL_OP,FOLLOW_NOT_EQUAL_OP_in_equalityOperator13341); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new NotEqualOp(NOT_EQUAL_OP334); }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2013:7: IDENTICAL_OP
                {
                    IDENTICAL_OP335=(Token)match(input,IDENTICAL_OP,FOLLOW_IDENTICAL_OP_in_equalityOperator13357); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IdenticalOp(IDENTICAL_OP335); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "equalityOperator"



    // $ANTLR start "comparisonExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2017:1: comparisonExpression returns [Term term] : ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )? ;
    public Term comparisonExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        BinaryOperatorExpression co1 =null;

        Term ee2 =null;

        ComparisonOp lo1 =null;

        Term ee3 =null;

        ComparisonOp so1 =null;

        Term ee4 =null;

        ComparisonOp so2 =null;

        Term ee5 =null;

        TypeOperatorExpression to1 =null;

        StaticType t1 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2018:5: (ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2018:7: ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )?
            {
                pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression13388);
                ee1=existenceEmptinessExpression();

                state._fsp--;
                if (state.failed) return term;

                if ( state.backtracking==0 ) { term = ee1; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2020:7: (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )?
                int alt166=5;
                switch ( input.LA(1) ) {
                    case COMPARE_OP:
                    case IN_OP:
                    {
                        alt166=1;
                    }
                    break;
                    case LARGER_OP:
                    case LARGE_AS_OP:
                    {
                        alt166=2;
                    }
                    break;
                    case SMALLER_OP:
                    case SMALL_AS_OP:
                    {
                        alt166=3;
                    }
                    break;
                    case CASE_TYPES:
                    case EXTENDS:
                    case IS_OP:
                    case SATISFIES:
                    {
                        alt166=4;
                    }
                    break;
                }

                switch (alt166) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2021:9: co1= comparisonOperator ee2= existenceEmptinessExpression
                    {
                        pushFollow(FOLLOW_comparisonOperator_in_comparisonExpression13416);
                        co1=comparisonOperator();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { co1.setLeftTerm(term);
                            term = co1; }

                        pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression13439);
                        ee2=existenceEmptinessExpression();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { co1.setRightTerm(ee2); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2026:9: lo1= largerOperator ee3= existenceEmptinessExpression
                    {
                        pushFollow(FOLLOW_largerOperator_in_comparisonExpression13461);
                        lo1=largerOperator();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { lo1.setLeftTerm(term);
                            term = lo1; }

                        pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression13484);
                        ee3=existenceEmptinessExpression();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { lo1.setRightTerm(ee3); }

                    }
                    break;
                    case 3 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2031:9: so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )?
                    {
                        pushFollow(FOLLOW_smallerOperator_in_comparisonExpression13506);
                        so1=smallerOperator();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { so1.setLeftTerm(term);
                            term = so1; }

                        pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression13529);
                        ee4=existenceEmptinessExpression();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { so1.setRightTerm(ee4); }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2036:9: (so2= smallerOperator ee5= existenceEmptinessExpression )?
                        int alt165=2;
                        int LA165_0 = input.LA(1);

                        if ( ((LA165_0 >= SMALLER_OP && LA165_0 <= SMALL_AS_OP)) ) {
                            alt165=1;
                        }
                        switch (alt165) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2037:11: so2= smallerOperator ee5= existenceEmptinessExpression
                            {
                                pushFollow(FOLLOW_smallerOperator_in_comparisonExpression13564);
                                so2=smallerOperator();

                                state._fsp--;
                                if (state.failed) return term;

                                pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression13578);
                                ee5=existenceEmptinessExpression();

                                state._fsp--;
                                if (state.failed) return term;

                                if ( state.backtracking==0 ) { WithinOp w = new WithinOp(null);
                                    Bound lb = so1 instanceof SmallerOp ?
                                            new OpenBound(null) : new ClosedBound(null);
                                    lb.setTerm(ee1);
                                    Bound ub = so2 instanceof SmallerOp ?
                                            new OpenBound(null) : new ClosedBound(null);
                                    ub.setTerm(ee5);
                                    w.setLowerBound(lb);
                                    w.setUpperBound(ub);
                                    w.setTerm(ee4);
                                    term = w; }

                            }
                            break;

                        }


                    }
                    break;
                    case 4 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2051:9: to1= typeOperator t1= type
                    {
                        pushFollow(FOLLOW_typeOperator_in_comparisonExpression13613);
                        to1=typeOperator();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { to1.setTerm(ee1);
                            term = to1; }

                        pushFollow(FOLLOW_type_in_comparisonExpression13635);
                        t1=type();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { to1.setType(t1); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "comparisonExpression"



    // $ANTLR start "smallerOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2065:1: smallerOperator returns [ComparisonOp operator] : ( SMALL_AS_OP | SMALLER_OP );
    public ComparisonOp smallerOperator() throws RecognitionException {
        ComparisonOp operator = null;


        Token SMALL_AS_OP336=null;
        Token SMALLER_OP337=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2066:5: ( SMALL_AS_OP | SMALLER_OP )
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==SMALL_AS_OP) ) {
                alt167=1;
            }
            else if ( (LA167_0==SMALLER_OP) ) {
                alt167=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                        new NoViableAltException("", 167, 0, input);

                throw nvae;

            }
            switch (alt167) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2066:7: SMALL_AS_OP
                {
                    SMALL_AS_OP336=(Token)match(input,SMALL_AS_OP,FOLLOW_SMALL_AS_OP_in_smallerOperator13681); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SmallAsOp(SMALL_AS_OP336); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2068:7: SMALLER_OP
                {
                    SMALLER_OP337=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_smallerOperator13697); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SmallerOp(SMALLER_OP337); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "smallerOperator"



    // $ANTLR start "largerOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2072:1: largerOperator returns [ComparisonOp operator] : ( LARGE_AS_OP | LARGER_OP );
    public ComparisonOp largerOperator() throws RecognitionException {
        ComparisonOp operator = null;


        Token LARGE_AS_OP338=null;
        Token LARGER_OP339=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2073:5: ( LARGE_AS_OP | LARGER_OP )
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==LARGE_AS_OP) ) {
                alt168=1;
            }
            else if ( (LA168_0==LARGER_OP) ) {
                alt168=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                        new NoViableAltException("", 168, 0, input);

                throw nvae;

            }
            switch (alt168) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2073:7: LARGE_AS_OP
                {
                    LARGE_AS_OP338=(Token)match(input,LARGE_AS_OP,FOLLOW_LARGE_AS_OP_in_largerOperator13726); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new LargeAsOp(LARGE_AS_OP338); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2075:7: LARGER_OP
                {
                    LARGER_OP339=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_largerOperator13742); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new LargerOp(LARGER_OP339); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "largerOperator"



    // $ANTLR start "comparisonOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2079:1: comparisonOperator returns [BinaryOperatorExpression operator] : ( COMPARE_OP | IN_OP );
    public BinaryOperatorExpression comparisonOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token COMPARE_OP340=null;
        Token IN_OP341=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2080:5: ( COMPARE_OP | IN_OP )
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==COMPARE_OP) ) {
                alt169=1;
            }
            else if ( (LA169_0==IN_OP) ) {
                alt169=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                        new NoViableAltException("", 169, 0, input);

                throw nvae;

            }
            switch (alt169) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2080:7: COMPARE_OP
                {
                    COMPARE_OP340=(Token)match(input,COMPARE_OP,FOLLOW_COMPARE_OP_in_comparisonOperator13771); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new CompareOp(COMPARE_OP340); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2082:7: IN_OP
                {
                    IN_OP341=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_comparisonOperator13788); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new InOp(IN_OP341); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "comparisonOperator"



    // $ANTLR start "typeOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2086:1: typeOperator returns [TypeOperatorExpression operator] : ( IS_OP | EXTENDS | SATISFIES | CASE_TYPES );
    public TypeOperatorExpression typeOperator() throws RecognitionException {
        TypeOperatorExpression operator = null;


        Token IS_OP342=null;
        Token EXTENDS343=null;
        Token SATISFIES344=null;
        Token CASE_TYPES345=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2087:5: ( IS_OP | EXTENDS | SATISFIES | CASE_TYPES )
            int alt170=4;
            switch ( input.LA(1) ) {
                case IS_OP:
                {
                    alt170=1;
                }
                break;
                case EXTENDS:
                {
                    alt170=2;
                }
                break;
                case SATISFIES:
                {
                    alt170=3;
                }
                break;
                case CASE_TYPES:
                {
                    alt170=4;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return operator;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 170, 0, input);

                    throw nvae;

            }

            switch (alt170) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2087:7: IS_OP
                {
                    IS_OP342=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_typeOperator13817); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IsOp(IS_OP342); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2089:7: EXTENDS
                {
                    EXTENDS343=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_typeOperator13833); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Extends(EXTENDS343); }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2091:7: SATISFIES
                {
                    SATISFIES344=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_typeOperator13849); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Satisfies(SATISFIES344); }

                }
                break;
                case 4 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2093:7: CASE_TYPES
                {
                    CASE_TYPES345=(Token)match(input,CASE_TYPES,FOLLOW_CASE_TYPES_in_typeOperator13865); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new OfOp(CASE_TYPES345); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "typeOperator"



    // $ANTLR start "existenceEmptinessExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2097:1: existenceEmptinessExpression returns [Term term] : de1= entryRangeExpression (eno1= existsNonemptyOperator )? ;
    public Term existenceEmptinessExpression() throws RecognitionException {
        Term term = null;


        Term de1 =null;

        UnaryOperatorExpression eno1 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2098:5: (de1= entryRangeExpression (eno1= existsNonemptyOperator )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2098:7: de1= entryRangeExpression (eno1= existsNonemptyOperator )?
            {
                pushFollow(FOLLOW_entryRangeExpression_in_existenceEmptinessExpression13896);
                de1=entryRangeExpression();

                state._fsp--;
                if (state.failed) return term;

                if ( state.backtracking==0 ) { term = de1; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2100:7: (eno1= existsNonemptyOperator )?
                int alt171=2;
                int LA171_0 = input.LA(1);

                if ( (LA171_0==EXISTS||LA171_0==NONEMPTY) ) {
                    alt171=1;
                }
                switch (alt171) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2101:9: eno1= existsNonemptyOperator
                    {
                        pushFollow(FOLLOW_existsNonemptyOperator_in_existenceEmptinessExpression13924);
                        eno1=existsNonemptyOperator();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { term = eno1;
                            eno1.setTerm(de1); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "existenceEmptinessExpression"



    // $ANTLR start "existsNonemptyOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2111:1: existsNonemptyOperator returns [UnaryOperatorExpression operator] : ( EXISTS | NONEMPTY );
    public UnaryOperatorExpression existsNonemptyOperator() throws RecognitionException {
        UnaryOperatorExpression operator = null;


        Token EXISTS346=null;
        Token NONEMPTY347=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2112:5: ( EXISTS | NONEMPTY )
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==EXISTS) ) {
                alt172=1;
            }
            else if ( (LA172_0==NONEMPTY) ) {
                alt172=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                        new NoViableAltException("", 172, 0, input);

                throw nvae;

            }
            switch (alt172) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2112:7: EXISTS
                {
                    EXISTS346=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_existsNonemptyOperator13970); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Exists(EXISTS346); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2114:7: NONEMPTY
                {
                    NONEMPTY347=(Token)match(input,NONEMPTY,FOLLOW_NONEMPTY_in_existsNonemptyOperator13987); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Nonempty(NONEMPTY347); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "existsNonemptyOperator"



    // $ANTLR start "entryRangeExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2118:1: entryRangeExpression returns [Term term] : ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )? ;
    public Term entryRangeExpression() throws RecognitionException {
        Term term = null;


        Term ae1 =null;

        Term ae2 =null;

        BinaryOperatorExpression rangeIntervalEntryOperator348 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2119:5: (ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2119:7: ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )?
            {
                pushFollow(FOLLOW_additiveExpression_in_entryRangeExpression14018);
                ae1=additiveExpression();

                state._fsp--;
                if (state.failed) return term;

                if ( state.backtracking==0 ) { term = ae1; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2121:7: ( rangeIntervalEntryOperator ae2= additiveExpression )?
                int alt173=2;
                int LA173_0 = input.LA(1);

                if ( (LA173_0==ENTRY_OP||LA173_0==RANGE_OP||LA173_0==SEGMENT_OP) ) {
                    alt173=1;
                }
                switch (alt173) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2122:9: rangeIntervalEntryOperator ae2= additiveExpression
                    {
                        pushFollow(FOLLOW_rangeIntervalEntryOperator_in_entryRangeExpression14044);
                        rangeIntervalEntryOperator348=rangeIntervalEntryOperator();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { rangeIntervalEntryOperator348.setLeftTerm(term);
                            term = rangeIntervalEntryOperator348; }

                        pushFollow(FOLLOW_additiveExpression_in_entryRangeExpression14067);
                        ae2=additiveExpression();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { rangeIntervalEntryOperator348.setRightTerm(ae2); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "entryRangeExpression"



    // $ANTLR start "rangeIntervalEntryOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2130:1: rangeIntervalEntryOperator returns [BinaryOperatorExpression operator] : ( RANGE_OP | SEGMENT_OP | ENTRY_OP );
    public BinaryOperatorExpression rangeIntervalEntryOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token RANGE_OP349=null;
        Token SEGMENT_OP350=null;
        Token ENTRY_OP351=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2131:5: ( RANGE_OP | SEGMENT_OP | ENTRY_OP )
            int alt174=3;
            switch ( input.LA(1) ) {
                case RANGE_OP:
                {
                    alt174=1;
                }
                break;
                case SEGMENT_OP:
                {
                    alt174=2;
                }
                break;
                case ENTRY_OP:
                {
                    alt174=3;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return operator;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 174, 0, input);

                    throw nvae;

            }

            switch (alt174) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2131:7: RANGE_OP
                {
                    RANGE_OP349=(Token)match(input,RANGE_OP,FOLLOW_RANGE_OP_in_rangeIntervalEntryOperator14107); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RangeOp(RANGE_OP349); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2133:7: SEGMENT_OP
                {
                    SEGMENT_OP350=(Token)match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_rangeIntervalEntryOperator14124); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SegmentOp(SEGMENT_OP350); }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2135:7: ENTRY_OP
                {
                    ENTRY_OP351=(Token)match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_rangeIntervalEntryOperator14140); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new EntryOp(ENTRY_OP351); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "rangeIntervalEntryOperator"



    // $ANTLR start "additiveExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2139:1: additiveExpression returns [Term term] : me1= scaleExpression ( additiveOperator me2= scaleExpression )* ;
    public Term additiveExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        BinaryOperatorExpression additiveOperator352 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2140:5: (me1= scaleExpression ( additiveOperator me2= scaleExpression )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2140:7: me1= scaleExpression ( additiveOperator me2= scaleExpression )*
            {
                pushFollow(FOLLOW_scaleExpression_in_additiveExpression14171);
                me1=scaleExpression();

                state._fsp--;
                if (state.failed) return term;

                if ( state.backtracking==0 ) { term = me1; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2142:7: ( additiveOperator me2= scaleExpression )*
                loop175:
                do {
                    int alt175=2;
                    int LA175_0 = input.LA(1);

                    if ( (LA175_0==DIFFERENCE_OP||LA175_0==SUM_OP) ) {
                        alt175=1;
                    }


                    switch (alt175) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2143:9: additiveOperator me2= scaleExpression
                        {
                            pushFollow(FOLLOW_additiveOperator_in_additiveExpression14197);
                            additiveOperator352=additiveOperator();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { additiveOperator352.setLeftTerm(term);
                                term = additiveOperator352; }

                            pushFollow(FOLLOW_scaleExpression_in_additiveExpression14220);
                            me2=scaleExpression();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { additiveOperator352.setRightTerm(me2); }

                        }
                        break;

                        default :
                            break loop175;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "additiveExpression"



    // $ANTLR start "additiveOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2151:1: additiveOperator returns [BinaryOperatorExpression operator] : ( SUM_OP | DIFFERENCE_OP );
    public BinaryOperatorExpression additiveOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token SUM_OP353=null;
        Token DIFFERENCE_OP354=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2152:5: ( SUM_OP | DIFFERENCE_OP )
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==SUM_OP) ) {
                alt176=1;
            }
            else if ( (LA176_0==DIFFERENCE_OP) ) {
                alt176=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                        new NoViableAltException("", 176, 0, input);

                throw nvae;

            }
            switch (alt176) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2152:7: SUM_OP
                {
                    SUM_OP353=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_additiveOperator14260); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SumOp(SUM_OP353); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2154:7: DIFFERENCE_OP
                {
                    DIFFERENCE_OP354=(Token)match(input,DIFFERENCE_OP,FOLLOW_DIFFERENCE_OP_in_additiveOperator14277); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DifferenceOp(DIFFERENCE_OP354); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "additiveOperator"



    // $ANTLR start "scaleExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2158:1: scaleExpression returns [Term term] : multiplicativeExpression ( scaleOperator se= scaleExpression )? ;
    public Term scaleExpression() throws RecognitionException {
        Term term = null;


        Term se =null;

        Term multiplicativeExpression355 =null;

        ScaleOp scaleOperator356 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2159:5: ( multiplicativeExpression ( scaleOperator se= scaleExpression )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2159:7: multiplicativeExpression ( scaleOperator se= scaleExpression )?
            {
                pushFollow(FOLLOW_multiplicativeExpression_in_scaleExpression14306);
                multiplicativeExpression355=multiplicativeExpression();

                state._fsp--;
                if (state.failed) return term;

                if ( state.backtracking==0 ) { term = multiplicativeExpression355; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2161:7: ( scaleOperator se= scaleExpression )?
                int alt177=2;
                int LA177_0 = input.LA(1);

                if ( (LA177_0==SCALE_OP) ) {
                    alt177=1;
                }
                switch (alt177) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2162:9: scaleOperator se= scaleExpression
                    {
                        pushFollow(FOLLOW_scaleOperator_in_scaleExpression14332);
                        scaleOperator356=scaleOperator();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { scaleOperator356.setLeftTerm(term);
                            term = scaleOperator356; }

                        pushFollow(FOLLOW_scaleExpression_in_scaleExpression14354);
                        se=scaleExpression();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { scaleOperator356.setRightTerm(se); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "scaleExpression"



    // $ANTLR start "multiplicativeExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2170:1: multiplicativeExpression returns [Term term] : ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )* ;
    public Term multiplicativeExpression() throws RecognitionException {
        Term term = null;


        Term ue1 =null;

        Term ue2 =null;

        BinaryOperatorExpression multiplicativeOperator357 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2171:5: (ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2171:7: ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )*
            {
                pushFollow(FOLLOW_unionExpression_in_multiplicativeExpression14396);
                ue1=unionExpression();

                state._fsp--;
                if (state.failed) return term;

                if ( state.backtracking==0 ) { term = ue1; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2173:7: ( multiplicativeOperator ue2= unionExpression )*
                loop178:
                do {
                    int alt178=2;
                    int LA178_0 = input.LA(1);

                    if ( ((LA178_0 >= PRODUCT_OP && LA178_0 <= QUOTIENT_OP)||LA178_0==REMAINDER_OP) ) {
                        alt178=1;
                    }


                    switch (alt178) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2174:9: multiplicativeOperator ue2= unionExpression
                        {
                            pushFollow(FOLLOW_multiplicativeOperator_in_multiplicativeExpression14422);
                            multiplicativeOperator357=multiplicativeOperator();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { multiplicativeOperator357.setLeftTerm(term);
                                term = multiplicativeOperator357; }

                            pushFollow(FOLLOW_unionExpression_in_multiplicativeExpression14445);
                            ue2=unionExpression();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { multiplicativeOperator357.setRightTerm(ue2); }

                        }
                        break;

                        default :
                            break loop178;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "multiplicativeExpression"



    // $ANTLR start "multiplicativeOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2182:1: multiplicativeOperator returns [BinaryOperatorExpression operator] : ( PRODUCT_OP | QUOTIENT_OP | REMAINDER_OP );
    public BinaryOperatorExpression multiplicativeOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token PRODUCT_OP358=null;
        Token QUOTIENT_OP359=null;
        Token REMAINDER_OP360=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2183:5: ( PRODUCT_OP | QUOTIENT_OP | REMAINDER_OP )
            int alt179=3;
            switch ( input.LA(1) ) {
                case PRODUCT_OP:
                {
                    alt179=1;
                }
                break;
                case QUOTIENT_OP:
                {
                    alt179=2;
                }
                break;
                case REMAINDER_OP:
                {
                    alt179=3;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return operator;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 179, 0, input);

                    throw nvae;

            }

            switch (alt179) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2183:7: PRODUCT_OP
                {
                    PRODUCT_OP358=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_multiplicativeOperator14485); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ProductOp(PRODUCT_OP358); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2185:7: QUOTIENT_OP
                {
                    QUOTIENT_OP359=(Token)match(input,QUOTIENT_OP,FOLLOW_QUOTIENT_OP_in_multiplicativeOperator14502); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new QuotientOp(QUOTIENT_OP359); }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2187:7: REMAINDER_OP
                {
                    REMAINDER_OP360=(Token)match(input,REMAINDER_OP,FOLLOW_REMAINDER_OP_in_multiplicativeOperator14518); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RemainderOp(REMAINDER_OP360); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "multiplicativeOperator"



    // $ANTLR start "unionExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2191:1: unionExpression returns [Term term] : ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )* ;
    public Term unionExpression() throws RecognitionException {
        Term term = null;


        Term ie1 =null;

        Term ie2 =null;

        BinaryOperatorExpression unionOperator361 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2192:5: (ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2192:7: ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )*
            {
                pushFollow(FOLLOW_intersectionExpression_in_unionExpression14549);
                ie1=intersectionExpression();

                state._fsp--;
                if (state.failed) return term;

                if ( state.backtracking==0 ) { term = ie1; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2194:7: ( unionOperator ie2= intersectionExpression )*
                loop180:
                do {
                    int alt180=2;
                    int LA180_0 = input.LA(1);

                    if ( (LA180_0==COMPLEMENT_OP||LA180_0==UNION_OP) ) {
                        alt180=1;
                    }


                    switch (alt180) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2195:9: unionOperator ie2= intersectionExpression
                        {
                            pushFollow(FOLLOW_unionOperator_in_unionExpression14575);
                            unionOperator361=unionOperator();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { unionOperator361.setLeftTerm(term);
                                term = unionOperator361; }

                            pushFollow(FOLLOW_intersectionExpression_in_unionExpression14598);
                            ie2=intersectionExpression();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { unionOperator361.setRightTerm(ie2); }

                        }
                        break;

                        default :
                            break loop180;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "unionExpression"



    // $ANTLR start "unionOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2203:1: unionOperator returns [BinaryOperatorExpression operator] : ( UNION_OP | COMPLEMENT_OP );
    public BinaryOperatorExpression unionOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token UNION_OP362=null;
        Token COMPLEMENT_OP363=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2204:5: ( UNION_OP | COMPLEMENT_OP )
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==UNION_OP) ) {
                alt181=1;
            }
            else if ( (LA181_0==COMPLEMENT_OP) ) {
                alt181=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                        new NoViableAltException("", 181, 0, input);

                throw nvae;

            }
            switch (alt181) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2204:7: UNION_OP
                {
                    UNION_OP362=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_unionOperator14642); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new UnionOp(UNION_OP362); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2206:7: COMPLEMENT_OP
                {
                    COMPLEMENT_OP363=(Token)match(input,COMPLEMENT_OP,FOLLOW_COMPLEMENT_OP_in_unionOperator14658); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ComplementOp(COMPLEMENT_OP363); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "unionOperator"



    // $ANTLR start "intersectionExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2210:1: intersectionExpression returns [Term term] : ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )* ;
    public Term intersectionExpression() throws RecognitionException {
        Term term = null;


        Term ne1 =null;

        Term ne2 =null;

        BinaryOperatorExpression intersectionOperator364 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2211:5: (ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2211:7: ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )*
            {
                pushFollow(FOLLOW_negationComplementExpression_in_intersectionExpression14689);
                ne1=negationComplementExpression();

                state._fsp--;
                if (state.failed) return term;

                if ( state.backtracking==0 ) { term = ne1; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2213:7: ( intersectionOperator ne2= negationComplementExpression )*
                loop182:
                do {
                    int alt182=2;
                    int LA182_0 = input.LA(1);

                    if ( (LA182_0==INTERSECTION_OP) ) {
                        alt182=1;
                    }


                    switch (alt182) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2214:9: intersectionOperator ne2= negationComplementExpression
                        {
                            pushFollow(FOLLOW_intersectionOperator_in_intersectionExpression14715);
                            intersectionOperator364=intersectionOperator();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { intersectionOperator364.setLeftTerm(term);
                                term = intersectionOperator364; }

                            pushFollow(FOLLOW_negationComplementExpression_in_intersectionExpression14738);
                            ne2=negationComplementExpression();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { intersectionOperator364.setRightTerm(ne2); }

                        }
                        break;

                        default :
                            break loop182;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "intersectionExpression"



    // $ANTLR start "intersectionOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2222:1: intersectionOperator returns [BinaryOperatorExpression operator] : INTERSECTION_OP ;
    public BinaryOperatorExpression intersectionOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token INTERSECTION_OP365=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2223:5: ( INTERSECTION_OP )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2223:7: INTERSECTION_OP
            {
                INTERSECTION_OP365=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_intersectionOperator14782); if (state.failed) return operator;

                if ( state.backtracking==0 ) { operator = new IntersectionOp(INTERSECTION_OP365); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "intersectionOperator"



    // $ANTLR start "negationComplementExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2227:1: negationComplementExpression returns [Term term] : ( unaryMinusOrComplementOperator ne= negationComplementExpression | exponentiationExpression );
    public Term negationComplementExpression() throws RecognitionException {
        Term term = null;


        Term ne =null;

        UnaryOperatorExpression unaryMinusOrComplementOperator366 =null;

        Term exponentiationExpression367 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2228:5: ( unaryMinusOrComplementOperator ne= negationComplementExpression | exponentiationExpression )
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==DIFFERENCE_OP||LA183_0==SUM_OP) ) {
                alt183=1;
            }
            else if ( (LA183_0==BACKTICK||LA183_0==CHAR_LITERAL||LA183_0==DECREMENT_OP||LA183_0==FLOAT_LITERAL||LA183_0==INCREMENT_OP||(LA183_0 >= LBRACE && LA183_0 <= LBRACKET)||LA183_0==LIDENTIFIER||LA183_0==LPAREN||LA183_0==NATURAL_LITERAL||(LA183_0 >= OUTER && LA183_0 <= PACKAGE)||LA183_0==STRING_LITERAL||LA183_0==STRING_START||LA183_0==SUPER||LA183_0==THIS||LA183_0==UIDENTIFIER||(LA183_0 >= VALUE_MODIFIER && LA183_0 <= VERBATIM_STRING)) ) {
                alt183=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                        new NoViableAltException("", 183, 0, input);

                throw nvae;

            }
            switch (alt183) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2228:7: unaryMinusOrComplementOperator ne= negationComplementExpression
                {
                    pushFollow(FOLLOW_unaryMinusOrComplementOperator_in_negationComplementExpression14811);
                    unaryMinusOrComplementOperator366=unaryMinusOrComplementOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = unaryMinusOrComplementOperator366; }

                    pushFollow(FOLLOW_negationComplementExpression_in_negationComplementExpression14830);
                    ne=negationComplementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { unaryMinusOrComplementOperator366.setTerm(ne); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2232:7: exponentiationExpression
                {
                    pushFollow(FOLLOW_exponentiationExpression_in_negationComplementExpression14846);
                    exponentiationExpression367=exponentiationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = exponentiationExpression367; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "negationComplementExpression"



    // $ANTLR start "unaryMinusOrComplementOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2236:1: unaryMinusOrComplementOperator returns [UnaryOperatorExpression operator] : ( DIFFERENCE_OP | SUM_OP );
    public UnaryOperatorExpression unaryMinusOrComplementOperator() throws RecognitionException {
        UnaryOperatorExpression operator = null;


        Token DIFFERENCE_OP368=null;
        Token SUM_OP369=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2237:5: ( DIFFERENCE_OP | SUM_OP )
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==DIFFERENCE_OP) ) {
                alt184=1;
            }
            else if ( (LA184_0==SUM_OP) ) {
                alt184=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                        new NoViableAltException("", 184, 0, input);

                throw nvae;

            }
            switch (alt184) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2237:7: DIFFERENCE_OP
                {
                    DIFFERENCE_OP368=(Token)match(input,DIFFERENCE_OP,FOLLOW_DIFFERENCE_OP_in_unaryMinusOrComplementOperator14875); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new NegativeOp(DIFFERENCE_OP368); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2239:7: SUM_OP
                {
                    SUM_OP369=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_unaryMinusOrComplementOperator14892); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PositiveOp(SUM_OP369); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "unaryMinusOrComplementOperator"



    // $ANTLR start "exponentiationExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2243:1: exponentiationExpression returns [Term term] : incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )? ;
    public Term exponentiationExpression() throws RecognitionException {
        Term term = null;


        Term ee =null;

        Term incrementDecrementExpression370 =null;

        PowerOp exponentiationOperator371 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2244:5: ( incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2244:7: incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )?
            {
                pushFollow(FOLLOW_incrementDecrementExpression_in_exponentiationExpression14921);
                incrementDecrementExpression370=incrementDecrementExpression();

                state._fsp--;
                if (state.failed) return term;

                if ( state.backtracking==0 ) { term = incrementDecrementExpression370; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2246:7: ( exponentiationOperator ee= exponentiationExpression )?
                int alt185=2;
                int LA185_0 = input.LA(1);

                if ( (LA185_0==POWER_OP) ) {
                    alt185=1;
                }
                switch (alt185) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2247:9: exponentiationOperator ee= exponentiationExpression
                    {
                        pushFollow(FOLLOW_exponentiationOperator_in_exponentiationExpression14947);
                        exponentiationOperator371=exponentiationOperator();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { exponentiationOperator371.setLeftTerm(term);
                            term = exponentiationOperator371; }

                        pushFollow(FOLLOW_exponentiationExpression_in_exponentiationExpression14969);
                        ee=exponentiationExpression();

                        state._fsp--;
                        if (state.failed) return term;

                        if ( state.backtracking==0 ) { exponentiationOperator371.setRightTerm(ee); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "exponentiationExpression"



    // $ANTLR start "exponentiationOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2255:1: exponentiationOperator returns [PowerOp operator] : POWER_OP ;
    public PowerOp exponentiationOperator() throws RecognitionException {
        PowerOp operator = null;


        Token POWER_OP372=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2256:5: ( POWER_OP )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2256:7: POWER_OP
            {
                POWER_OP372=(Token)match(input,POWER_OP,FOLLOW_POWER_OP_in_exponentiationOperator15009); if (state.failed) return operator;

                if ( state.backtracking==0 ) { operator = new PowerOp(POWER_OP372); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "exponentiationOperator"



    // $ANTLR start "scaleOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2260:1: scaleOperator returns [ScaleOp operator] : SCALE_OP ;
    public ScaleOp scaleOperator() throws RecognitionException {
        ScaleOp operator = null;


        Token SCALE_OP373=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2261:5: ( SCALE_OP )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2261:7: SCALE_OP
            {
                SCALE_OP373=(Token)match(input,SCALE_OP,FOLLOW_SCALE_OP_in_scaleOperator15039); if (state.failed) return operator;

                if ( state.backtracking==0 ) { operator = new ScaleOp(SCALE_OP373); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "scaleOperator"



    // $ANTLR start "incrementDecrementExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2265:1: incrementDecrementExpression returns [Term term] : ( prefixOperator ie= incrementDecrementExpression | postfixIncrementDecrementExpression );
    public Term incrementDecrementExpression() throws RecognitionException {
        Term term = null;


        Term ie =null;

        PrefixOperatorExpression prefixOperator374 =null;

        Term postfixIncrementDecrementExpression375 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2266:5: ( prefixOperator ie= incrementDecrementExpression | postfixIncrementDecrementExpression )
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( (LA186_0==DECREMENT_OP||LA186_0==INCREMENT_OP) ) {
                alt186=1;
            }
            else if ( (LA186_0==BACKTICK||LA186_0==CHAR_LITERAL||LA186_0==FLOAT_LITERAL||(LA186_0 >= LBRACE && LA186_0 <= LBRACKET)||LA186_0==LIDENTIFIER||LA186_0==LPAREN||LA186_0==NATURAL_LITERAL||(LA186_0 >= OUTER && LA186_0 <= PACKAGE)||LA186_0==STRING_LITERAL||LA186_0==STRING_START||LA186_0==SUPER||LA186_0==THIS||LA186_0==UIDENTIFIER||(LA186_0 >= VALUE_MODIFIER && LA186_0 <= VERBATIM_STRING)) ) {
                alt186=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                        new NoViableAltException("", 186, 0, input);

                throw nvae;

            }
            switch (alt186) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2266:7: prefixOperator ie= incrementDecrementExpression
                {
                    pushFollow(FOLLOW_prefixOperator_in_incrementDecrementExpression15069);
                    prefixOperator374=prefixOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = prefixOperator374; }

                    pushFollow(FOLLOW_incrementDecrementExpression_in_incrementDecrementExpression15087);
                    ie=incrementDecrementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { prefixOperator374.setTerm(ie); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2270:7: postfixIncrementDecrementExpression
                {
                    pushFollow(FOLLOW_postfixIncrementDecrementExpression_in_incrementDecrementExpression15103);
                    postfixIncrementDecrementExpression375=postfixIncrementDecrementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = postfixIncrementDecrementExpression375; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "incrementDecrementExpression"



    // $ANTLR start "prefixOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2274:1: prefixOperator returns [PrefixOperatorExpression operator] : ( DECREMENT_OP | INCREMENT_OP );
    public PrefixOperatorExpression prefixOperator() throws RecognitionException {
        PrefixOperatorExpression operator = null;


        Token DECREMENT_OP376=null;
        Token INCREMENT_OP377=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2275:5: ( DECREMENT_OP | INCREMENT_OP )
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==DECREMENT_OP) ) {
                alt187=1;
            }
            else if ( (LA187_0==INCREMENT_OP) ) {
                alt187=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                        new NoViableAltException("", 187, 0, input);

                throw nvae;

            }
            switch (alt187) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2275:7: DECREMENT_OP
                {
                    DECREMENT_OP376=(Token)match(input,DECREMENT_OP,FOLLOW_DECREMENT_OP_in_prefixOperator15132); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DecrementOp(DECREMENT_OP376); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2277:7: INCREMENT_OP
                {
                    INCREMENT_OP377=(Token)match(input,INCREMENT_OP,FOLLOW_INCREMENT_OP_in_prefixOperator15149); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IncrementOp(INCREMENT_OP377); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "prefixOperator"



    // $ANTLR start "postfixIncrementDecrementExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2281:1: postfixIncrementDecrementExpression returns [Term term] : primary ( postfixOperator )* ;
    public Term postfixIncrementDecrementExpression() throws RecognitionException {
        Term term = null;


        Primary primary378 =null;

        PostfixOperatorExpression postfixOperator379 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2282:5: ( primary ( postfixOperator )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2282:7: primary ( postfixOperator )*
            {
                pushFollow(FOLLOW_primary_in_postfixIncrementDecrementExpression15179);
                primary378=primary();

                state._fsp--;
                if (state.failed) return term;

                if ( state.backtracking==0 ) { term = primary378; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2284:7: ( postfixOperator )*
                loop188:
                do {
                    int alt188=2;
                    int LA188_0 = input.LA(1);

                    if ( (LA188_0==DECREMENT_OP||LA188_0==INCREMENT_OP) ) {
                        alt188=1;
                    }


                    switch (alt188) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2285:9: postfixOperator
                        {
                            pushFollow(FOLLOW_postfixOperator_in_postfixIncrementDecrementExpression15207);
                            postfixOperator379=postfixOperator();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { postfixOperator379.setTerm(term);
                                term = postfixOperator379; }

                        }
                        break;

                        default :
                            break loop188;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "postfixIncrementDecrementExpression"



    // $ANTLR start "postfixOperator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2291:1: postfixOperator returns [PostfixOperatorExpression operator] : ( DECREMENT_OP | INCREMENT_OP );
    public PostfixOperatorExpression postfixOperator() throws RecognitionException {
        PostfixOperatorExpression operator = null;


        Token DECREMENT_OP380=null;
        Token INCREMENT_OP381=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2292:5: ( DECREMENT_OP | INCREMENT_OP )
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==DECREMENT_OP) ) {
                alt189=1;
            }
            else if ( (LA189_0==INCREMENT_OP) ) {
                alt189=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                        new NoViableAltException("", 189, 0, input);

                throw nvae;

            }
            switch (alt189) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2292:7: DECREMENT_OP
                {
                    DECREMENT_OP380=(Token)match(input,DECREMENT_OP,FOLLOW_DECREMENT_OP_in_postfixOperator15247); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PostfixDecrementOp(DECREMENT_OP380); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2294:7: INCREMENT_OP
                {
                    INCREMENT_OP381=(Token)match(input,INCREMENT_OP,FOLLOW_INCREMENT_OP_in_postfixOperator15264); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PostfixIncrementOp(INCREMENT_OP381); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "postfixOperator"



    // $ANTLR start "selfReference"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2298:1: selfReference returns [Atom atom] : ( THIS | SUPER | OUTER | PACKAGE );
    public Atom selfReference() throws RecognitionException {
        Atom atom = null;


        Token THIS382=null;
        Token SUPER383=null;
        Token OUTER384=null;
        Token PACKAGE385=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2299:5: ( THIS | SUPER | OUTER | PACKAGE )
            int alt190=4;
            switch ( input.LA(1) ) {
                case THIS:
                {
                    alt190=1;
                }
                break;
                case SUPER:
                {
                    alt190=2;
                }
                break;
                case OUTER:
                {
                    alt190=3;
                }
                break;
                case PACKAGE:
                {
                    alt190=4;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return atom;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 190, 0, input);

                    throw nvae;

            }

            switch (alt190) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2299:7: THIS
                {
                    THIS382=(Token)match(input,THIS,FOLLOW_THIS_in_selfReference15294); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new This(THIS382); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2301:7: SUPER
                {
                    SUPER383=(Token)match(input,SUPER,FOLLOW_SUPER_in_selfReference15310); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Super(SUPER383); }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2303:7: OUTER
                {
                    OUTER384=(Token)match(input,OUTER,FOLLOW_OUTER_in_selfReference15327); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Outer(OUTER384); }

                }
                break;
                case 4 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2305:7: PACKAGE
                {
                    PACKAGE385=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_selfReference15343); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Package(PACKAGE385); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return atom;
    }
    // $ANTLR end "selfReference"



    // $ANTLR start "nonstringLiteral"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2309:1: nonstringLiteral returns [Literal literal] : ( NATURAL_LITERAL | FLOAT_LITERAL | CHAR_LITERAL );
    public Literal nonstringLiteral() throws RecognitionException {
        Literal literal = null;


        Token NATURAL_LITERAL386=null;
        Token FLOAT_LITERAL387=null;
        Token CHAR_LITERAL388=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2310:5: ( NATURAL_LITERAL | FLOAT_LITERAL | CHAR_LITERAL )
            int alt191=3;
            switch ( input.LA(1) ) {
                case NATURAL_LITERAL:
                {
                    alt191=1;
                }
                break;
                case FLOAT_LITERAL:
                {
                    alt191=2;
                }
                break;
                case CHAR_LITERAL:
                {
                    alt191=3;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return literal;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 191, 0, input);

                    throw nvae;

            }

            switch (alt191) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2310:7: NATURAL_LITERAL
                {
                    NATURAL_LITERAL386=(Token)match(input,NATURAL_LITERAL,FOLLOW_NATURAL_LITERAL_in_nonstringLiteral15376); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new NaturalLiteral(NATURAL_LITERAL386); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2312:7: FLOAT_LITERAL
                {
                    FLOAT_LITERAL387=(Token)match(input,FLOAT_LITERAL,FOLLOW_FLOAT_LITERAL_in_nonstringLiteral15393); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new FloatLiteral(FLOAT_LITERAL387); }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2314:7: CHAR_LITERAL
                {
                    CHAR_LITERAL388=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_nonstringLiteral15410); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new CharLiteral(CHAR_LITERAL388); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "nonstringLiteral"



    // $ANTLR start "stringLiteral"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2318:1: stringLiteral returns [StringLiteral stringLiteral] : ( STRING_LITERAL | VERBATIM_STRING );
    public StringLiteral stringLiteral() throws RecognitionException {
        StringLiteral stringLiteral = null;


        Token STRING_LITERAL389=null;
        Token VERBATIM_STRING390=null;

        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2319:5: ( STRING_LITERAL | VERBATIM_STRING )
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==STRING_LITERAL) ) {
                alt192=1;
            }
            else if ( (LA192_0==VERBATIM_STRING) ) {
                alt192=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return stringLiteral;}
                NoViableAltException nvae =
                        new NoViableAltException("", 192, 0, input);

                throw nvae;

            }
            switch (alt192) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2319:7: STRING_LITERAL
                {
                    STRING_LITERAL389=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_stringLiteral15440); if (state.failed) return stringLiteral;

                    if ( state.backtracking==0 ) { stringLiteral = new StringLiteral(STRING_LITERAL389); }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2321:7: VERBATIM_STRING
                {
                    VERBATIM_STRING390=(Token)match(input,VERBATIM_STRING,FOLLOW_VERBATIM_STRING_in_stringLiteral15457); if (state.failed) return stringLiteral;

                    if ( state.backtracking==0 ) { stringLiteral = new StringLiteral(VERBATIM_STRING390); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return stringLiteral;
    }
    // $ANTLR end "stringLiteral"



    // $ANTLR start "stringExpression"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2325:1: stringExpression returns [Atom atom] : (sl1= stringLiteral | STRING_START e1= expression ( STRING_MID e2= expression )* STRING_END );
    public Atom stringExpression() throws RecognitionException {
        Atom atom = null;


        Token STRING_START391=null;
        Token STRING_MID392=null;
        Token STRING_END393=null;
        StringLiteral sl1 =null;

        Expression e1 =null;

        Expression e2 =null;


        StringTemplate st=null;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2327:5: (sl1= stringLiteral | STRING_START e1= expression ( STRING_MID e2= expression )* STRING_END )
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==STRING_LITERAL||LA194_0==VERBATIM_STRING) ) {
                alt194=1;
            }
            else if ( (LA194_0==STRING_START) ) {
                alt194=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return atom;}
                NoViableAltException nvae =
                        new NoViableAltException("", 194, 0, input);

                throw nvae;

            }
            switch (alt194) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2327:7: sl1= stringLiteral
                {
                    pushFollow(FOLLOW_stringLiteral_in_stringExpression15497);
                    sl1=stringLiteral();

                    state._fsp--;
                    if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom =sl1; }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2329:7: STRING_START e1= expression ( STRING_MID e2= expression )* STRING_END
                {
                    STRING_START391=(Token)match(input,STRING_START,FOLLOW_STRING_START_in_stringExpression15513); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { st = new StringTemplate(null);
                        st.addStringLiteral(new StringLiteral(STRING_START391));
                        atom =st; }

                    pushFollow(FOLLOW_expression_in_stringExpression15531);
                    e1=expression();

                    state._fsp--;
                    if (state.failed) return atom;

                    if ( state.backtracking==0 ) { if (e1!=null)
                        st.addExpression(e1); }

                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2336:7: ( STRING_MID e2= expression )*
                    loop193:
                    do {
                        int alt193=2;
                        int LA193_0 = input.LA(1);

                        if ( (LA193_0==STRING_MID) ) {
                            alt193=1;
                        }


                        switch (alt193) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2337:9: STRING_MID e2= expression
                            {
                                STRING_MID392=(Token)match(input,STRING_MID,FOLLOW_STRING_MID_in_stringExpression15557); if (state.failed) return atom;

                                if ( state.backtracking==0 ) { st.addStringLiteral(new StringLiteral(STRING_MID392)); }

                                pushFollow(FOLLOW_expression_in_stringExpression15579);
                                e2=expression();

                                state._fsp--;
                                if (state.failed) return atom;

                                if ( state.backtracking==0 ) { if (e2!=null)
                                    st.addExpression(e2); }

                            }
                            break;

                            default :
                                break loop193;
                        }
                    } while (true);


                    STRING_END393=(Token)match(input,STRING_END,FOLLOW_STRING_END_in_stringExpression15606); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { st.addStringLiteral(new StringLiteral(STRING_END393)); }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return atom;
    }
    // $ANTLR end "stringExpression"



    // $ANTLR start "typeArguments"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2347:1: typeArguments returns [TypeArgumentList typeArgumentList] : SMALLER_OP (ta1= type (c= COMMA (ta2= type |) )* )? LARGER_OP ;
    public TypeArgumentList typeArguments() throws RecognitionException {
        TypeArgumentList typeArgumentList = null;


        Token c=null;
        Token SMALLER_OP394=null;
        Token LARGER_OP395=null;
        StaticType ta1 =null;

        StaticType ta2 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2348:5: ( SMALLER_OP (ta1= type (c= COMMA (ta2= type |) )* )? LARGER_OP )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2348:7: SMALLER_OP (ta1= type (c= COMMA (ta2= type |) )* )? LARGER_OP
            {
                SMALLER_OP394=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArguments15635); if (state.failed) return typeArgumentList;

                if ( state.backtracking==0 ) { typeArgumentList = new TypeArgumentList(SMALLER_OP394); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2350:7: (ta1= type (c= COMMA (ta2= type |) )* )?
                int alt197=2;
                int LA197_0 = input.LA(1);

                if ( ((LA197_0 >= LBRACE && LA197_0 <= LBRACKET)||LA197_0==SMALLER_OP||LA197_0==UIDENTIFIER) ) {
                    alt197=1;
                }
                switch (alt197) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2351:9: ta1= type (c= COMMA (ta2= type |) )*
                    {
                        pushFollow(FOLLOW_type_in_typeArguments15663);
                        ta1=type();

                        state._fsp--;
                        if (state.failed) return typeArgumentList;

                        if ( state.backtracking==0 ) { if (ta1!=null)
                            typeArgumentList.addType(ta1); }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2354:9: (c= COMMA (ta2= type |) )*
                        loop196:
                        do {
                            int alt196=2;
                            int LA196_0 = input.LA(1);

                            if ( (LA196_0==COMMA) ) {
                                alt196=1;
                            }


                            switch (alt196) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2355:11: c= COMMA (ta2= type |)
                                {
                                    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_typeArguments15697); if (state.failed) return typeArgumentList;

                                    if ( state.backtracking==0 ) { typeArgumentList.setEndToken(c); }

                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2357:11: (ta2= type |)
                                    int alt195=2;
                                    int LA195_0 = input.LA(1);

                                    if ( ((LA195_0 >= LBRACE && LA195_0 <= LBRACKET)||LA195_0==SMALLER_OP||LA195_0==UIDENTIFIER) ) {
                                        alt195=1;
                                    }
                                    else if ( (LA195_0==COMMA||LA195_0==LARGER_OP) ) {
                                        alt195=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                                        NoViableAltException nvae =
                                                new NoViableAltException("", 195, 0, input);

                                        throw nvae;

                                    }
                                    switch (alt195) {
                                        case 1 :
                                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2358:13: ta2= type
                                        {
                                            pushFollow(FOLLOW_type_in_typeArguments15737);
                                            ta2=type();

                                            state._fsp--;
                                            if (state.failed) return typeArgumentList;

                                            if ( state.backtracking==0 ) { if (ta2!=null) {
                                                typeArgumentList.addType(ta2);
                                                typeArgumentList.setEndToken(null); } }

                                        }
                                        break;
                                        case 2 :
                                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2362:15: 
                                        {
                                            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                                    new MismatchedTokenException(UIDENTIFIER, input)); }

                                        }
                                        break;

                                    }


                                }
                                break;

                                default :
                                    break loop196;
                            }
                        } while (true);


                    }
                    break;

                }


                LARGER_OP395=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeArguments15807); if (state.failed) return typeArgumentList;

                if ( state.backtracking==0 ) { typeArgumentList.setEndToken(LARGER_OP395); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return typeArgumentList;
    }
    // $ANTLR end "typeArguments"



    // $ANTLR start "variadicType"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2371:1: variadicType returns [Type type] : ( ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )? |t= type );
    public Type variadicType() throws RecognitionException {
        Type type = null;


        Token PRODUCT_OP396=null;
        Token SUM_OP397=null;
        StaticType at =null;

        StaticType t =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2372:5: ( ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )? |t= type )
            int alt199=2;
            switch ( input.LA(1) ) {
                case UIDENTIFIER:
                {
                    int LA199_1 = input.LA(2);

                    if ( (synpred14_Ceylon()) ) {
                        alt199=1;
                    }
                    else if ( (true) ) {
                        alt199=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return type;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 199, 1, input);

                        throw nvae;

                    }
                }
                break;
                case SMALLER_OP:
                {
                    int LA199_2 = input.LA(2);

                    if ( (synpred14_Ceylon()) ) {
                        alt199=1;
                    }
                    else if ( (true) ) {
                        alt199=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return type;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 199, 2, input);

                        throw nvae;

                    }
                }
                break;
                case LBRACKET:
                {
                    int LA199_3 = input.LA(2);

                    if ( (synpred14_Ceylon()) ) {
                        alt199=1;
                    }
                    else if ( (true) ) {
                        alt199=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return type;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 199, 3, input);

                        throw nvae;

                    }
                }
                break;
                case LBRACE:
                {
                    int LA199_4 = input.LA(2);

                    if ( (synpred14_Ceylon()) ) {
                        alt199=1;
                    }
                    else if ( (true) ) {
                        alt199=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return type;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 199, 4, input);

                        throw nvae;

                    }
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 199, 0, input);

                    throw nvae;

            }

            switch (alt199) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2372:7: ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )?
                {
                    pushFollow(FOLLOW_unionType_in_variadicType15855);
                    at=unionType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = at; }

                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2375:7: ( PRODUCT_OP | SUM_OP )?
                    int alt198=3;
                    int LA198_0 = input.LA(1);

                    if ( (LA198_0==PRODUCT_OP) ) {
                        alt198=1;
                    }
                    else if ( (LA198_0==SUM_OP) ) {
                        alt198=2;
                    }
                    switch (alt198) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2376:9: PRODUCT_OP
                        {
                            PRODUCT_OP396=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_variadicType15881); if (state.failed) return type;

                            if ( state.backtracking==0 ) { SequencedType st = new SequencedType(null);
                                st.setType(at);
                                st.setEndToken(PRODUCT_OP396);
                                type = st; }

                        }
                        break;
                        case 2 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2382:9: SUM_OP
                        {
                            SUM_OP397=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_variadicType15909); if (state.failed) return type;

                            if ( state.backtracking==0 ) { SequencedType st = new SequencedType(null);
                                st.setType(at);
                                st.setEndToken(SUM_OP397);
                                st.setAtLeastOne(true);
                                type = st; }

                        }
                        break;

                    }


                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2389:7: t= type
                {
                    pushFollow(FOLLOW_type_in_variadicType15938);
                    t=type();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = t; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "variadicType"



    // $ANTLR start "defaultedType"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2393:1: defaultedType returns [Type type] : ( ( type ( SPECIFY ) )=>t= type ( SPECIFY )? | variadicType );
    public Type defaultedType() throws RecognitionException {
        Type type = null;


        Token SPECIFY398=null;
        StaticType t =null;

        Type variadicType399 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2394:5: ( ( type ( SPECIFY ) )=>t= type ( SPECIFY )? | variadicType )
            int alt201=2;
            switch ( input.LA(1) ) {
                case UIDENTIFIER:
                {
                    int LA201_1 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt201=1;
                    }
                    else if ( (true) ) {
                        alt201=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return type;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 201, 1, input);

                        throw nvae;

                    }
                }
                break;
                case SMALLER_OP:
                {
                    int LA201_2 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt201=1;
                    }
                    else if ( (true) ) {
                        alt201=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return type;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 201, 2, input);

                        throw nvae;

                    }
                }
                break;
                case LBRACKET:
                {
                    int LA201_3 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt201=1;
                    }
                    else if ( (true) ) {
                        alt201=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return type;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 201, 3, input);

                        throw nvae;

                    }
                }
                break;
                case LBRACE:
                {
                    int LA201_4 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt201=1;
                    }
                    else if ( (true) ) {
                        alt201=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return type;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 201, 4, input);

                        throw nvae;

                    }
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 201, 0, input);

                    throw nvae;

            }

            switch (alt201) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2394:7: ( type ( SPECIFY ) )=>t= type ( SPECIFY )?
                {
                    pushFollow(FOLLOW_type_in_defaultedType15984);
                    t=type();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = t; }

                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2397:7: ( SPECIFY )?
                    int alt200=2;
                    int LA200_0 = input.LA(1);

                    if ( (LA200_0==SPECIFY) ) {
                        alt200=1;
                    }
                    switch (alt200) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2398:9: SPECIFY
                        {
                            SPECIFY398=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_defaultedType16010); if (state.failed) return type;

                            if ( state.backtracking==0 ) { DefaultedType st = new DefaultedType(null);
                                st.setType(t);
                                st.setEndToken(SPECIFY398);
                                type = st; }

                        }
                        break;

                    }


                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2404:7: variadicType
                {
                    pushFollow(FOLLOW_variadicType_in_defaultedType16037);
                    variadicType399=variadicType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =variadicType399; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "defaultedType"



    // $ANTLR start "tupleType"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2408:1: tupleType returns [TupleType type] : LBRACKET (t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET ;
    public TupleType tupleType() throws RecognitionException {
        TupleType type = null;


        Token c=null;
        Token LBRACKET400=null;
        Token RBRACKET401=null;
        Type t1 =null;

        Type t2 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2409:5: ( LBRACKET (t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2409:7: LBRACKET (t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET
            {
                LBRACKET400=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_tupleType16066); if (state.failed) return type;

                if ( state.backtracking==0 ) { type = new TupleType(LBRACKET400); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2411:7: (t1= defaultedType (c= COMMA t2= defaultedType )* )?
                int alt203=2;
                int LA203_0 = input.LA(1);

                if ( ((LA203_0 >= LBRACE && LA203_0 <= LBRACKET)||LA203_0==SMALLER_OP||LA203_0==UIDENTIFIER) ) {
                    alt203=1;
                }
                switch (alt203) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2412:9: t1= defaultedType (c= COMMA t2= defaultedType )*
                    {
                        pushFollow(FOLLOW_defaultedType_in_tupleType16094);
                        t1=defaultedType();

                        state._fsp--;
                        if (state.failed) return type;

                        if ( state.backtracking==0 ) { type.addElementType(t1); }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2414:9: (c= COMMA t2= defaultedType )*
                        loop202:
                        do {
                            int alt202=2;
                            int LA202_0 = input.LA(1);

                            if ( (LA202_0==COMMA) ) {
                                alt202=1;
                            }


                            switch (alt202) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2415:11: c= COMMA t2= defaultedType
                                {
                                    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_tupleType16128); if (state.failed) return type;

                                    if ( state.backtracking==0 ) { type.setEndToken(c); }

                                    pushFollow(FOLLOW_defaultedType_in_tupleType16154);
                                    t2=defaultedType();

                                    state._fsp--;
                                    if (state.failed) return type;

                                    if ( state.backtracking==0 ) { type.addElementType(t2);
                                        type.setEndToken(null); }

                                }
                                break;

                                default :
                                    break loop202;
                            }
                        } while (true);


                    }
                    break;

                }


                RBRACKET401=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_tupleType16194); if (state.failed) return type;

                if ( state.backtracking==0 ) { type.setEndToken(RBRACKET401); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "tupleType"



    // $ANTLR start "groupedType"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2426:1: groupedType returns [StaticType type] : SMALLER_OP t= type LARGER_OP ;
    public StaticType groupedType() throws RecognitionException {
        StaticType type = null;


        StaticType t =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2427:5: ( SMALLER_OP t= type LARGER_OP )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2427:7: SMALLER_OP t= type LARGER_OP
            {
                match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_groupedType16223); if (state.failed) return type;

                pushFollow(FOLLOW_type_in_groupedType16234);
                t=type();

                state._fsp--;
                if (state.failed) return type;

                if ( state.backtracking==0 ) { type =t; }

                match(input,LARGER_OP,FOLLOW_LARGER_OP_in_groupedType16250); if (state.failed) return type;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "groupedType"



    // $ANTLR start "iterableType"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2433:1: iterableType returns [IterableType type] : LBRACE t= variadicType RBRACE ;
    public IterableType iterableType() throws RecognitionException {
        IterableType type = null;


        Token LBRACE402=null;
        Token RBRACE403=null;
        Type t =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2434:4: ( LBRACE t= variadicType RBRACE )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2434:6: LBRACE t= variadicType RBRACE
            {
                LBRACE402=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_iterableType16271); if (state.failed) return type;

                if ( state.backtracking==0 ) { type = new IterableType(LBRACE402); }

                pushFollow(FOLLOW_variadicType_in_iterableType16287);
                t=variadicType();

                state._fsp--;
                if (state.failed) return type;

                if ( state.backtracking==0 ) { type.setElementType(t); }

                RBRACE403=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_iterableType16301); if (state.failed) return type;

                if ( state.backtracking==0 ) { type.setEndToken(RBRACE403); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "iterableType"



    // $ANTLR start "type"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2442:1: type returns [StaticType type] : t1= unionType ( ENTRY_OP (t2= unionType ) )? ;
    public StaticType type() throws RecognitionException {
        StaticType type = null;


        Token ENTRY_OP404=null;
        StaticType t1 =null;

        StaticType t2 =null;


        EntryType bt=null;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2444:5: (t1= unionType ( ENTRY_OP (t2= unionType ) )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2444:7: t1= unionType ( ENTRY_OP (t2= unionType ) )?
            {
                pushFollow(FOLLOW_unionType_in_type16339);
                t1=unionType();

                state._fsp--;
                if (state.failed) return type;

                if ( state.backtracking==0 ) { type =t1; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2446:7: ( ENTRY_OP (t2= unionType ) )?
                int alt204=2;
                int LA204_0 = input.LA(1);

                if ( (LA204_0==ENTRY_OP) ) {
                    alt204=1;
                }
                switch (alt204) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2447:9: ENTRY_OP (t2= unionType )
                    {
                        ENTRY_OP404=(Token)match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_type16365); if (state.failed) return type;

                        if ( state.backtracking==0 ) { bt=new EntryType(null);
                            bt.setKeyType(type);
                            bt.setEndToken(ENTRY_OP404);
                            type =bt; }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2452:9: (t2= unionType )
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2453:11: t2= unionType
                        {
                            pushFollow(FOLLOW_unionType_in_type16399);
                            t2=unionType();

                            state._fsp--;
                            if (state.failed) return type;

                            if ( state.backtracking==0 ) { bt.setValueType(t2);
                                bt.setEndToken(null); }

                        }


                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "type"



    // $ANTLR start "unionType"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2462:1: unionType returns [StaticType type] : it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )? ;
    public StaticType unionType() throws RecognitionException {
        StaticType type = null;


        Token u=null;
        StaticType it1 =null;

        StaticType it2 =null;


        UnionType ut=null;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2464:5: (it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2464:7: it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )?
            {
                pushFollow(FOLLOW_intersectionType_in_unionType16464);
                it1=intersectionType();

                state._fsp--;
                if (state.failed) return type;

                if ( state.backtracking==0 ) { type = it1;
                    ut = new UnionType(null);
                    ut.addStaticType(type); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2468:7: ( (u= UNION_OP (it2= intersectionType ) )+ )?
                int alt206=2;
                int LA206_0 = input.LA(1);

                if ( (LA206_0==UNION_OP) ) {
                    alt206=1;
                }
                switch (alt206) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2469:9: (u= UNION_OP (it2= intersectionType ) )+
                    {
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2469:9: (u= UNION_OP (it2= intersectionType ) )+
                        int cnt205=0;
                        loop205:
                        do {
                            int alt205=2;
                            int LA205_0 = input.LA(1);

                            if ( (LA205_0==UNION_OP) ) {
                                alt205=1;
                            }


                            switch (alt205) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2470:11: u= UNION_OP (it2= intersectionType )
                                {
                                    u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_unionType16505); if (state.failed) return type;

                                    if ( state.backtracking==0 ) { ut.setEndToken(u); }

                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2472:11: (it2= intersectionType )
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2473:13: it2= intersectionType
                                    {
                                        pushFollow(FOLLOW_intersectionType_in_unionType16545);
                                        it2=intersectionType();

                                        state._fsp--;
                                        if (state.failed) return type;

                                        if ( state.backtracking==0 ) { if (it2!=null) {
                                            ut.addStaticType(it2);
                                            ut.setEndToken(null);
                                        } }

                                    }


                                }
                                break;

                                default :
                                    if ( cnt205 >= 1 ) break loop205;
                                    if (state.backtracking>0) {state.failed=true; return type;}
                                    EarlyExitException eee =
                                            new EarlyExitException(205, input);
                                    throw eee;
                            }
                            cnt205++;
                        } while (true);


                        if ( state.backtracking==0 ) { type = ut; }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "unionType"



    // $ANTLR start "intersectionType"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2486:1: intersectionType returns [StaticType type] : at1= abbreviatedType ( (i= INTERSECTION_OP (at2= abbreviatedType ) )+ )? ;
    public StaticType intersectionType() throws RecognitionException {
        StaticType type = null;


        Token i=null;
        StaticType at1 =null;

        StaticType at2 =null;


        IntersectionType it=null;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2488:5: (at1= abbreviatedType ( (i= INTERSECTION_OP (at2= abbreviatedType ) )+ )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2488:7: at1= abbreviatedType ( (i= INTERSECTION_OP (at2= abbreviatedType ) )+ )?
            {
                pushFollow(FOLLOW_abbreviatedType_in_intersectionType16635);
                at1=abbreviatedType();

                state._fsp--;
                if (state.failed) return type;

                if ( state.backtracking==0 ) { type = at1;
                    it = new IntersectionType(null);
                    it.addStaticType(type); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2492:7: ( (i= INTERSECTION_OP (at2= abbreviatedType ) )+ )?
                int alt208=2;
                int LA208_0 = input.LA(1);

                if ( (LA208_0==INTERSECTION_OP) ) {
                    alt208=1;
                }
                switch (alt208) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2493:9: (i= INTERSECTION_OP (at2= abbreviatedType ) )+
                    {
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2493:9: (i= INTERSECTION_OP (at2= abbreviatedType ) )+
                        int cnt207=0;
                        loop207:
                        do {
                            int alt207=2;
                            int LA207_0 = input.LA(1);

                            if ( (LA207_0==INTERSECTION_OP) ) {
                                alt207=1;
                            }


                            switch (alt207) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2494:11: i= INTERSECTION_OP (at2= abbreviatedType )
                                {
                                    i=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_intersectionType16676); if (state.failed) return type;

                                    if ( state.backtracking==0 ) { it.setEndToken(i); }

                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2496:11: (at2= abbreviatedType )
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2497:13: at2= abbreviatedType
                                    {
                                        pushFollow(FOLLOW_abbreviatedType_in_intersectionType16716);
                                        at2=abbreviatedType();

                                        state._fsp--;
                                        if (state.failed) return type;

                                        if ( state.backtracking==0 ) { if (at2!=null) {
                                            it.addStaticType(at2);
                                            it.setEndToken(null);
                                        } }

                                    }


                                }
                                break;

                                default :
                                    if ( cnt207 >= 1 ) break loop207;
                                    if (state.backtracking>0) {state.failed=true; return type;}
                                    EarlyExitException eee =
                                            new EarlyExitException(207, input);
                                    throw eee;
                            }
                            cnt207++;
                        } while (true);


                        if ( state.backtracking==0 ) { type = it; }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "intersectionType"



    // $ANTLR start "qualifiedOrTupleType"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2510:1: qualifiedOrTupleType returns [StaticType type] : ( qualifiedType | tupleType | iterableType );
    public StaticType qualifiedOrTupleType() throws RecognitionException {
        StaticType type = null;


        StaticType qualifiedType405 =null;

        TupleType tupleType406 =null;

        IterableType iterableType407 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2511:5: ( qualifiedType | tupleType | iterableType )
            int alt209=3;
            switch ( input.LA(1) ) {
                case SMALLER_OP:
                case UIDENTIFIER:
                {
                    alt209=1;
                }
                break;
                case LBRACKET:
                {
                    alt209=2;
                }
                break;
                case LBRACE:
                {
                    alt209=3;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 209, 0, input);

                    throw nvae;

            }

            switch (alt209) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2511:7: qualifiedType
                {
                    pushFollow(FOLLOW_qualifiedType_in_qualifiedOrTupleType16795);
                    qualifiedType405=qualifiedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =qualifiedType405; }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2513:7: tupleType
                {
                    pushFollow(FOLLOW_tupleType_in_qualifiedOrTupleType16812);
                    tupleType406=tupleType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =tupleType406; }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2515:7: iterableType
                {
                    pushFollow(FOLLOW_iterableType_in_qualifiedOrTupleType16829);
                    iterableType407=iterableType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =iterableType407; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "qualifiedOrTupleType"



    // $ANTLR start "abbreviatedType"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2525:1: abbreviatedType returns [StaticType type] : qualifiedOrTupleType ( ( OPTIONAL | LBRACKET RBRACKET | LPAREN (t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN ) )* ;
    public StaticType abbreviatedType() throws RecognitionException {
        StaticType type = null;


        Token OPTIONAL409=null;
        Token LBRACKET410=null;
        Token RBRACKET411=null;
        Token LPAREN412=null;
        Token COMMA413=null;
        Token RPAREN414=null;
        Type t1 =null;

        Type t2 =null;

        StaticType qualifiedOrTupleType408 =null;


        FunctionType bt=null;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2527:5: ( qualifiedOrTupleType ( ( OPTIONAL | LBRACKET RBRACKET | LPAREN (t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN ) )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2527:7: qualifiedOrTupleType ( ( OPTIONAL | LBRACKET RBRACKET | LPAREN (t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN ) )*
            {
                pushFollow(FOLLOW_qualifiedOrTupleType_in_abbreviatedType16870);
                qualifiedOrTupleType408=qualifiedOrTupleType();

                state._fsp--;
                if (state.failed) return type;

                if ( state.backtracking==0 ) { type =qualifiedOrTupleType408; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2529:7: ( ( OPTIONAL | LBRACKET RBRACKET | LPAREN (t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN ) )*
                loop213:
                do {
                    int alt213=2;
                    int LA213_0 = input.LA(1);

                    if ( (LA213_0==LBRACKET||LA213_0==LPAREN||LA213_0==OPTIONAL) ) {
                        alt213=1;
                    }


                    switch (alt213) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2534:7: ( OPTIONAL | LBRACKET RBRACKET | LPAREN (t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )
                        {
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2534:7: ( OPTIONAL | LBRACKET RBRACKET | LPAREN (t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )
                            int alt212=3;
                            switch ( input.LA(1) ) {
                                case OPTIONAL:
                                {
                                    alt212=1;
                                }
                                break;
                                case LBRACKET:
                                {
                                    alt212=2;
                                }
                                break;
                                case LPAREN:
                                {
                                    alt212=3;
                                }
                                break;
                                default:
                                    if (state.backtracking>0) {state.failed=true; return type;}
                                    NoViableAltException nvae =
                                            new NoViableAltException("", 212, 0, input);

                                    throw nvae;

                            }

                            switch (alt212) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2535:9: OPTIONAL
                                {
                                    OPTIONAL409=(Token)match(input,OPTIONAL,FOLLOW_OPTIONAL_in_abbreviatedType16932); if (state.failed) return type;

                                    if ( state.backtracking==0 ) { OptionalType ot = new OptionalType(null);
                                        ot.setDefiniteType(type);
                                        ot.setEndToken(OPTIONAL409);
                                        type =ot; }

                                }
                                break;
                                case 2 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2540:9: LBRACKET RBRACKET
                                {
                                    LBRACKET410=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_abbreviatedType16953); if (state.failed) return type;

                                    RBRACKET411=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_abbreviatedType16955); if (state.failed) return type;

                                    if ( state.backtracking==0 ) { SequenceType st = new SequenceType(null);
                                        st.setElementType(type);
                                        st.setEndToken(LBRACKET410);
                                        st.setEndToken(RBRACKET411);
                                        type =st; }

                                }
                                break;
                                case 3 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2546:9: LPAREN (t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN
                                {
                                    LPAREN412=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_abbreviatedType16976); if (state.failed) return type;

                                    if ( state.backtracking==0 ) { bt = new FunctionType(null);
                                        bt.setEndToken(LPAREN412);
                                        bt.setReturnType(type);
                                        type =bt; }

                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2551:11: (t1= defaultedType ( COMMA t2= defaultedType )* )?
                                    int alt211=2;
                                    int LA211_0 = input.LA(1);

                                    if ( ((LA211_0 >= LBRACE && LA211_0 <= LBRACKET)||LA211_0==SMALLER_OP||LA211_0==UIDENTIFIER) ) {
                                        alt211=1;
                                    }
                                    switch (alt211) {
                                        case 1 :
                                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2552:13: t1= defaultedType ( COMMA t2= defaultedType )*
                                        {
                                            pushFollow(FOLLOW_defaultedType_in_abbreviatedType17014);
                                            t1=defaultedType();

                                            state._fsp--;
                                            if (state.failed) return type;

                                            if ( state.backtracking==0 ) { if (t1!=null)
                                                bt.addArgumentType(t1); }

                                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2555:13: ( COMMA t2= defaultedType )*
                                            loop210:
                                            do {
                                                int alt210=2;
                                                int LA210_0 = input.LA(1);

                                                if ( (LA210_0==COMMA) ) {
                                                    alt210=1;
                                                }


                                                switch (alt210) {
                                                    case 1 :
                                                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2556:15: COMMA t2= defaultedType
                                                    {
                                                        COMMA413=(Token)match(input,COMMA,FOLLOW_COMMA_in_abbreviatedType17058); if (state.failed) return type;

                                                        if ( state.backtracking==0 ) { bt.setEndToken(COMMA413); }

                                                        pushFollow(FOLLOW_defaultedType_in_abbreviatedType17092);
                                                        t2=defaultedType();

                                                        state._fsp--;
                                                        if (state.failed) return type;

                                                        if ( state.backtracking==0 ) { if (t2!=null)
                                                            bt.addArgumentType(t2); }

                                                    }
                                                    break;

                                                    default :
                                                        break loop210;
                                                }
                                            } while (true);


                                        }
                                        break;

                                    }


                                    RPAREN414=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_abbreviatedType17146); if (state.failed) return type;

                                    if ( state.backtracking==0 ) { bt.setEndToken(RPAREN414); }

                                }
                                break;

                            }


                        }
                        break;

                        default :
                            break loop213;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "abbreviatedType"



    // $ANTLR start "baseType"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2569:1: baseType returns [StaticType type] : (ot= typeNameWithArguments | groupedType );
    public StaticType baseType() throws RecognitionException {
        StaticType type = null;


        CeylonParser.typeNameWithArguments_return ot =null;

        StaticType groupedType415 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2570:5: (ot= typeNameWithArguments | groupedType )
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==UIDENTIFIER) ) {
                alt214=1;
            }
            else if ( (LA214_0==SMALLER_OP) ) {
                alt214=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                        new NoViableAltException("", 214, 0, input);

                throw nvae;

            }
            switch (alt214) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2571:7: ot= typeNameWithArguments
                {
                    pushFollow(FOLLOW_typeNameWithArguments_in_baseType17203);
                    ot=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { BaseType bt = new BaseType(null);
                        bt.setIdentifier((ot!=null?ot.identifier:null));
                        if ((ot!=null?ot.typeArgumentList:null)!=null)
                            bt.setTypeArgumentList((ot!=null?ot.typeArgumentList:null));
                        type =bt; }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2578:7: groupedType
                {
                    pushFollow(FOLLOW_groupedType_in_baseType17225);
                    groupedType415=groupedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =groupedType415; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "baseType"



    // $ANTLR start "qualifiedType"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2582:1: qualifiedType returns [StaticType type] : baseType ( MEMBER_OP it= typeNameWithArguments )* ;
    public StaticType qualifiedType() throws RecognitionException {
        StaticType type = null;


        Token MEMBER_OP417=null;
        CeylonParser.typeNameWithArguments_return it =null;

        StaticType baseType416 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2583:5: ( baseType ( MEMBER_OP it= typeNameWithArguments )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2583:7: baseType ( MEMBER_OP it= typeNameWithArguments )*
            {
                pushFollow(FOLLOW_baseType_in_qualifiedType17254);
                baseType416=baseType();

                state._fsp--;
                if (state.failed) return type;

                if ( state.backtracking==0 ) { type =baseType416; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2585:7: ( MEMBER_OP it= typeNameWithArguments )*
                loop215:
                do {
                    int alt215=2;
                    int LA215_0 = input.LA(1);

                    if ( (LA215_0==MEMBER_OP) ) {
                        int LA215_2 = input.LA(2);

                        if ( (LA215_2==UIDENTIFIER) ) {
                            alt215=1;
                        }


                    }


                    switch (alt215) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2586:9: MEMBER_OP it= typeNameWithArguments
                        {
                            MEMBER_OP417=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_qualifiedType17280); if (state.failed) return type;

                            pushFollow(FOLLOW_typeNameWithArguments_in_qualifiedType17293);
                            it=typeNameWithArguments();

                            state._fsp--;
                            if (state.failed) return type;

                            if ( state.backtracking==0 ) { QualifiedType qt = new QualifiedType(MEMBER_OP417);
                                qt.setIdentifier((it!=null?it.identifier:null));
                                if ((it!=null?it.typeArgumentList:null)!=null)
                                    qt.setTypeArgumentList((it!=null?it.typeArgumentList:null));
                                qt.setOuterType(type);
                                type =qt; }

                        }
                        break;

                        default :
                            break loop215;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "qualifiedType"


    public static class typeNameWithArguments_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "typeNameWithArguments"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2597:1: typeNameWithArguments returns [Identifier identifier, TypeArgumentList typeArgumentList] : typeName ( typeArguments )? ;
    public CeylonParser.typeNameWithArguments_return typeNameWithArguments() throws RecognitionException {
        CeylonParser.typeNameWithArguments_return retval = new CeylonParser.typeNameWithArguments_return();
        retval.start = input.LT(1);


        Identifier typeName418 =null;

        TypeArgumentList typeArguments419 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2598:5: ( typeName ( typeArguments )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2598:7: typeName ( typeArguments )?
            {
                pushFollow(FOLLOW_typeName_in_typeNameWithArguments17333);
                typeName418=typeName();

                state._fsp--;
                if (state.failed) return retval;

                if ( state.backtracking==0 ) { retval.identifier = typeName418; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2600:7: ( typeArguments )?
                int alt216=2;
                int LA216_0 = input.LA(1);

                if ( (LA216_0==SMALLER_OP) ) {
                    int LA216_1 = input.LA(2);

                    if ( (LA216_1==LARGER_OP||(LA216_1 >= LBRACE && LA216_1 <= LBRACKET)||LA216_1==SMALLER_OP||LA216_1==UIDENTIFIER) ) {
                        alt216=1;
                    }
                }
                switch (alt216) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2601:9: typeArguments
                    {
                        pushFollow(FOLLOW_typeArguments_in_typeNameWithArguments17360);
                        typeArguments419=typeArguments();

                        state._fsp--;
                        if (state.failed) return retval;

                        if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments419; }

                    }
                    break;

                }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "typeNameWithArguments"



    // $ANTLR start "annotations"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2606:1: annotations returns [AnnotationList annotationList] : ( stringLiteral )? ( annotation )* ;
    public AnnotationList annotations() throws RecognitionException {
        AnnotationList annotationList = null;


        StringLiteral stringLiteral420 =null;

        Annotation annotation421 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2607:5: ( ( stringLiteral )? ( annotation )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2607:7: ( stringLiteral )? ( annotation )*
            {
                if ( state.backtracking==0 ) { annotationList = new AnnotationList(null); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2608:7: ( stringLiteral )?
                int alt217=2;
                int LA217_0 = input.LA(1);

                if ( (LA217_0==STRING_LITERAL||LA217_0==VERBATIM_STRING) ) {
                    alt217=1;
                }
                switch (alt217) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2609:11: stringLiteral
                    {
                        pushFollow(FOLLOW_stringLiteral_in_annotations17424);
                        stringLiteral420=stringLiteral();

                        state._fsp--;
                        if (state.failed) return annotationList;

                        if ( state.backtracking==0 ) { if (stringLiteral420.getToken().getType()==VERBATIM_STRING)
                            stringLiteral420.getToken().setType(AVERBATIM_STRING);
                        else
                            stringLiteral420.getToken().setType(ASTRING_LITERAL);
                            AnonymousAnnotation aa = new AnonymousAnnotation(null);
                            aa.setStringLiteral(stringLiteral420);
                            annotationList.setAnonymousAnnotation(aa); }

                    }
                    break;

                }


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2618:7: ( annotation )*
                loop218:
                do {
                    int alt218=2;
                    int LA218_0 = input.LA(1);

                    if ( (LA218_0==LIDENTIFIER) ) {
                        alt218=1;
                    }


                    switch (alt218) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2619:9: annotation
                        {
                            pushFollow(FOLLOW_annotation_in_annotations17463);
                            annotation421=annotation();

                            state._fsp--;
                            if (state.failed) return annotationList;

                            if ( state.backtracking==0 ) { annotationList.addAnnotation(annotation421);
                                new com.redhat.ceylon.compiler.typechecker.tree.Visitor() {
                                    public void visit(StringLiteral that) {
                                        if (that.getToken().getType()==VERBATIM_STRING)
                                            that.getToken().setType(AVERBATIM_STRING);
                                        else
                                            that.getToken().setType(ASTRING_LITERAL);
                                    }
                                }.visit(annotation421); }

                        }
                        break;

                        default :
                            break loop218;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return annotationList;
    }
    // $ANTLR end "annotations"



    // $ANTLR start "annotation"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2632:1: annotation returns [Annotation annotation] : annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |) ;
    public Annotation annotation() throws RecognitionException {
        Annotation annotation = null;


        Identifier annotationName422 =null;

        PositionalArgumentList positionalArguments423 =null;

        NamedArgumentList namedArguments424 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2633:5: ( annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2633:7: annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |)
            {
                pushFollow(FOLLOW_annotationName_in_annotation17504);
                annotationName422=annotationName();

                state._fsp--;
                if (state.failed) return annotation;

                if ( state.backtracking==0 ) { annotation = new Annotation(null);
                    BaseMemberExpression bme = new BaseMemberExpression(null);
                    bme.setIdentifier(annotationName422);
                    bme.setTypeArguments( new InferredTypeArguments(null) );
                    annotation.setPrimary(bme); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2639:5: ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |)
                int alt219=3;
                switch ( input.LA(1) ) {
                    case LPAREN:
                    {
                        alt219=1;
                    }
                    break;
                    case LBRACE:
                    {
                        int LA219_2 = input.LA(2);

                        if ( (synpred16_Ceylon()) ) {
                            alt219=2;
                        }
                        else if ( (true) ) {
                            alt219=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return annotation;}
                            NoViableAltException nvae =
                                    new NoViableAltException("", 219, 2, input);

                            throw nvae;

                        }
                    }
                    break;
                    case ALIAS:
                    case ASSERT:
                    case ASSIGN:
                    case CLASS_DEFINITION:
                    case DYNAMIC:
                    case FUNCTION_MODIFIER:
                    case IMPORT:
                    case INTERFACE_DEFINITION:
                    case LBRACKET:
                    case LIDENTIFIER:
                    case MODULE:
                    case OBJECT_DEFINITION:
                    case PACKAGE:
                    case SMALLER_OP:
                    case UIDENTIFIER:
                    case VALUE_MODIFIER:
                    case VOID_MODIFIER:
                    {
                        alt219=3;
                    }
                    break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return annotation;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 219, 0, input);

                        throw nvae;

                }

                switch (alt219) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2640:7: positionalArguments
                    {
                        pushFollow(FOLLOW_positionalArguments_in_annotation17527);
                        positionalArguments423=positionalArguments();

                        state._fsp--;
                        if (state.failed) return annotation;

                        if ( state.backtracking==0 ) { annotation.setPositionalArgumentList(positionalArguments423); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2642:7: ( namedAnnotationArgumentsStart )=> namedArguments
                    {
                        pushFollow(FOLLOW_namedArguments_in_annotation17556);
                        namedArguments424=namedArguments();

                        state._fsp--;
                        if (state.failed) return annotation;

                        if ( state.backtracking==0 ) { annotation.setNamedArgumentList(namedArguments424); }

                    }
                    break;
                    case 3 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2645:7: 
                    {
                        if ( state.backtracking==0 ) { annotation.setPositionalArgumentList(new PositionalArgumentList(null)); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return annotation;
    }
    // $ANTLR end "annotation"



    // $ANTLR start "prefixOperatorStart"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2649:1: prefixOperatorStart : ( DIFFERENCE_OP | INCREMENT_OP | DECREMENT_OP | COMPLEMENT_OP );
    public void prefixOperatorStart() throws RecognitionException {
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2650:5: ( DIFFERENCE_OP | INCREMENT_OP | DECREMENT_OP | COMPLEMENT_OP )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:
            {
                if ( input.LA(1)==COMPLEMENT_OP||(input.LA(1) >= DECREMENT_OP && input.LA(1) <= DIFFERENCE_OP)||input.LA(1)==INCREMENT_OP ) {
                    input.consume();
                    state.errorRecovery=false;
                    state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "prefixOperatorStart"



    // $ANTLR start "compilerAnnotations"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2656:1: compilerAnnotations returns [List<CompilerAnnotation> annotations] : ( compilerAnnotation )* ;
    public List<CompilerAnnotation> compilerAnnotations() throws RecognitionException {
        List<CompilerAnnotation> annotations = null;


        CompilerAnnotation compilerAnnotation425 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2657:5: ( ( compilerAnnotation )* )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2657:7: ( compilerAnnotation )*
            {
                if ( state.backtracking==0 ) { annotations = new ArrayList<CompilerAnnotation>(); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2658:5: ( compilerAnnotation )*
                loop220:
                do {
                    int alt220=2;
                    int LA220_0 = input.LA(1);

                    if ( (LA220_0==COMPILER_ANNOTATION) ) {
                        alt220=1;
                    }


                    switch (alt220) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2659:7: compilerAnnotation
                        {
                            pushFollow(FOLLOW_compilerAnnotation_in_compilerAnnotations17660);
                            compilerAnnotation425=compilerAnnotation();

                            state._fsp--;
                            if (state.failed) return annotations;

                            if ( state.backtracking==0 ) { annotations.add(compilerAnnotation425); }

                        }
                        break;

                        default :
                            break loop220;
                    }
                } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return annotations;
    }
    // $ANTLR end "compilerAnnotations"



    // $ANTLR start "compilerAnnotation"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2664:1: compilerAnnotation returns [CompilerAnnotation annotation] : COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )? ;
    public CompilerAnnotation compilerAnnotation() throws RecognitionException {
        CompilerAnnotation annotation = null;


        Token COMPILER_ANNOTATION426=null;
        Identifier annotationName427 =null;

        StringLiteral stringLiteral428 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2665:5: ( COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2665:7: COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )?
            {
                COMPILER_ANNOTATION426=(Token)match(input,COMPILER_ANNOTATION,FOLLOW_COMPILER_ANNOTATION_in_compilerAnnotation17700); if (state.failed) return annotation;

                if ( state.backtracking==0 ) { annotation =new CompilerAnnotation(COMPILER_ANNOTATION426); }

                pushFollow(FOLLOW_annotationName_in_compilerAnnotation17717);
                annotationName427=annotationName();

                state._fsp--;
                if (state.failed) return annotation;

                if ( state.backtracking==0 ) { annotation.setIdentifier(annotationName427); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2669:7: ( SEGMENT_OP stringLiteral )?
                int alt221=2;
                int LA221_0 = input.LA(1);

                if ( (LA221_0==SEGMENT_OP) ) {
                    alt221=1;
                }
                switch (alt221) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2670:11: SEGMENT_OP stringLiteral
                    {
                        match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_compilerAnnotation17747); if (state.failed) return annotation;

                        pushFollow(FOLLOW_stringLiteral_in_compilerAnnotation17759);
                        stringLiteral428=stringLiteral();

                        state._fsp--;
                        if (state.failed) return annotation;

                        if ( state.backtracking==0 ) { annotation.setStringLiteral(stringLiteral428); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return annotation;
    }
    // $ANTLR end "compilerAnnotation"



    // $ANTLR start "conditions"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2676:1: conditions returns [ConditionList conditionList] : LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN ;
    public ConditionList conditions() throws RecognitionException {
        ConditionList conditionList = null;


        Token c=null;
        Token LPAREN429=null;
        Token RPAREN430=null;
        Condition c1 =null;

        Condition c2 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2677:5: ( LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2677:7: LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN
            {
                LPAREN429=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_conditions17801); if (state.failed) return conditionList;

                if ( state.backtracking==0 ) { conditionList = new ConditionList(LPAREN429); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2679:7: (c1= condition (c= COMMA (c2= condition |) )* )?
                int alt224=2;
                int LA224_0 = input.LA(1);

                if ( (LA224_0==BACKTICK||LA224_0==CHAR_LITERAL||(LA224_0 >= DECREMENT_OP && LA224_0 <= DIFFERENCE_OP)||LA224_0==EXISTS||LA224_0==FLOAT_LITERAL||LA224_0==INCREMENT_OP||LA224_0==IS_OP||(LA224_0 >= LBRACE && LA224_0 <= LBRACKET)||LA224_0==LIDENTIFIER||LA224_0==LPAREN||LA224_0==NATURAL_LITERAL||LA224_0==NONEMPTY||LA224_0==NOT_OP||(LA224_0 >= OUTER && LA224_0 <= PACKAGE)||LA224_0==SATISFIES||LA224_0==STRING_LITERAL||LA224_0==STRING_START||(LA224_0 >= SUM_OP && LA224_0 <= SUPER)||LA224_0==THIS||LA224_0==UIDENTIFIER||(LA224_0 >= VALUE_MODIFIER && LA224_0 <= VERBATIM_STRING)) ) {
                    alt224=1;
                }
                switch (alt224) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2680:7: c1= condition (c= COMMA (c2= condition |) )*
                    {
                        pushFollow(FOLLOW_condition_in_conditions17827);
                        c1=condition();

                        state._fsp--;
                        if (state.failed) return conditionList;

                        if ( state.backtracking==0 ) { if (c1!=null)
                            conditionList.addCondition(c1); }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2683:7: (c= COMMA (c2= condition |) )*
                        loop223:
                        do {
                            int alt223=2;
                            int LA223_0 = input.LA(1);

                            if ( (LA223_0==COMMA) ) {
                                alt223=1;
                            }


                            switch (alt223) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2683:9: c= COMMA (c2= condition |)
                                {
                                    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_conditions17847); if (state.failed) return conditionList;

                                    if ( state.backtracking==0 ) { conditionList.setEndToken(c); }

                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2685:9: (c2= condition |)
                                    int alt222=2;
                                    int LA222_0 = input.LA(1);

                                    if ( (LA222_0==BACKTICK||LA222_0==CHAR_LITERAL||(LA222_0 >= DECREMENT_OP && LA222_0 <= DIFFERENCE_OP)||LA222_0==EXISTS||LA222_0==FLOAT_LITERAL||LA222_0==INCREMENT_OP||LA222_0==IS_OP||(LA222_0 >= LBRACE && LA222_0 <= LBRACKET)||LA222_0==LIDENTIFIER||LA222_0==LPAREN||LA222_0==NATURAL_LITERAL||LA222_0==NONEMPTY||LA222_0==NOT_OP||(LA222_0 >= OUTER && LA222_0 <= PACKAGE)||LA222_0==SATISFIES||LA222_0==STRING_LITERAL||LA222_0==STRING_START||(LA222_0 >= SUM_OP && LA222_0 <= SUPER)||LA222_0==THIS||LA222_0==UIDENTIFIER||(LA222_0 >= VALUE_MODIFIER && LA222_0 <= VERBATIM_STRING)) ) {
                                        alt222=1;
                                    }
                                    else if ( (LA222_0==COMMA||LA222_0==RPAREN) ) {
                                        alt222=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return conditionList;}
                                        NoViableAltException nvae =
                                                new NoViableAltException("", 222, 0, input);

                                        throw nvae;

                                    }
                                    switch (alt222) {
                                        case 1 :
                                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2686:11: c2= condition
                                        {
                                            pushFollow(FOLLOW_condition_in_conditions17882);
                                            c2=condition();

                                            state._fsp--;
                                            if (state.failed) return conditionList;

                                            if ( state.backtracking==0 ) { if (c2!=null)
                                                conditionList.addCondition(c2);
                                                conditionList.setEndToken(null); }

                                        }
                                        break;
                                        case 2 :
                                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2690:11: 
                                        {
                                            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                                    new MismatchedTokenException(LIDENTIFIER, input)); }

                                        }
                                        break;

                                    }


                                }
                                break;

                                default :
                                    break loop223;
                            }
                        } while (true);


                    }
                    break;

                }


                RPAREN430=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_conditions17944); if (state.failed) return conditionList;

                if ( state.backtracking==0 ) { conditionList.setEndToken(RPAREN430); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return conditionList;
    }
    // $ANTLR end "conditions"



    // $ANTLR start "condition"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2699:1: condition returns [Condition condition] : ( existsCondition | nonemptyCondition | isCondition | satisfiesCondition | booleanCondition );
    public Condition condition() throws RecognitionException {
        Condition condition = null;


        ExistsCondition existsCondition431 =null;

        NonemptyCondition nonemptyCondition432 =null;

        IsCondition isCondition433 =null;

        SatisfiesCondition satisfiesCondition434 =null;

        BooleanCondition booleanCondition435 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2700:5: ( existsCondition | nonemptyCondition | isCondition | satisfiesCondition | booleanCondition )
            int alt225=5;
            switch ( input.LA(1) ) {
                case EXISTS:
                {
                    alt225=1;
                }
                break;
                case NONEMPTY:
                {
                    alt225=2;
                }
                break;
                case NOT_OP:
                {
                    int LA225_3 = input.LA(2);

                    if ( (LA225_3==IS_OP) ) {
                        alt225=3;
                    }
                    else if ( (LA225_3==BACKTICK||LA225_3==CHAR_LITERAL||(LA225_3 >= DECREMENT_OP && LA225_3 <= DIFFERENCE_OP)||LA225_3==FLOAT_LITERAL||LA225_3==INCREMENT_OP||(LA225_3 >= LBRACE && LA225_3 <= LBRACKET)||LA225_3==LIDENTIFIER||LA225_3==LPAREN||LA225_3==NATURAL_LITERAL||LA225_3==NOT_OP||(LA225_3 >= OUTER && LA225_3 <= PACKAGE)||LA225_3==STRING_LITERAL||LA225_3==STRING_START||(LA225_3 >= SUM_OP && LA225_3 <= SUPER)||LA225_3==THIS||LA225_3==UIDENTIFIER||(LA225_3 >= VALUE_MODIFIER && LA225_3 <= VERBATIM_STRING)) ) {
                        alt225=5;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return condition;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 225, 3, input);

                        throw nvae;

                    }
                }
                break;
                case IS_OP:
                {
                    alt225=3;
                }
                break;
                case SATISFIES:
                {
                    alt225=4;
                }
                break;
                case BACKTICK:
                case CHAR_LITERAL:
                case DECREMENT_OP:
                case DIFFERENCE_OP:
                case FLOAT_LITERAL:
                case INCREMENT_OP:
                case LBRACE:
                case LBRACKET:
                case LIDENTIFIER:
                case LPAREN:
                case NATURAL_LITERAL:
                case OUTER:
                case PACKAGE:
                case STRING_LITERAL:
                case STRING_START:
                case SUM_OP:
                case SUPER:
                case THIS:
                case UIDENTIFIER:
                case VALUE_MODIFIER:
                case VERBATIM_STRING:
                {
                    alt225=5;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 225, 0, input);

                    throw nvae;

            }

            switch (alt225) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2700:7: existsCondition
                {
                    pushFollow(FOLLOW_existsCondition_in_condition17973);
                    existsCondition431=existsCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =existsCondition431; }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2702:7: nonemptyCondition
                {
                    pushFollow(FOLLOW_nonemptyCondition_in_condition17989);
                    nonemptyCondition432=nonemptyCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =nonemptyCondition432; }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2704:7: isCondition
                {
                    pushFollow(FOLLOW_isCondition_in_condition18005);
                    isCondition433=isCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =isCondition433; }

                }
                break;
                case 4 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2706:7: satisfiesCondition
                {
                    pushFollow(FOLLOW_satisfiesCondition_in_condition18022);
                    satisfiesCondition434=satisfiesCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =satisfiesCondition434; }

                }
                break;
                case 5 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2708:7: booleanCondition
                {
                    pushFollow(FOLLOW_booleanCondition_in_condition18038);
                    booleanCondition435=booleanCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =booleanCondition435; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "condition"



    // $ANTLR start "booleanCondition"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2712:1: booleanCondition returns [BooleanCondition condition] : expression ;
    public BooleanCondition booleanCondition() throws RecognitionException {
        BooleanCondition condition = null;


        Expression expression436 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2713:5: ( expression )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2713:7: expression
            {
                if ( state.backtracking==0 ) { condition = new BooleanCondition(null); }

                pushFollow(FOLLOW_expression_in_booleanCondition18079);
                expression436=expression();

                state._fsp--;
                if (state.failed) return condition;

                if ( state.backtracking==0 ) { condition.setExpression(expression436); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "booleanCondition"



    // $ANTLR start "existsCondition"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2718:1: existsCondition returns [ExistsCondition condition] : EXISTS ( ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable | ( LIDENTIFIER )=> impliedVariable | expression ) ;
    public ExistsCondition existsCondition() throws RecognitionException {
        ExistsCondition condition = null;


        Token EXISTS437=null;
        Variable specifiedVariable438 =null;

        Variable impliedVariable439 =null;

        Expression expression440 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2719:5: ( EXISTS ( ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable | ( LIDENTIFIER )=> impliedVariable | expression ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2719:7: EXISTS ( ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable | ( LIDENTIFIER )=> impliedVariable | expression )
            {
                EXISTS437=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_existsCondition18112); if (state.failed) return condition;

                if ( state.backtracking==0 ) { condition = new ExistsCondition(EXISTS437); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2721:5: ( ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable | ( LIDENTIFIER )=> impliedVariable | expression )
                int alt226=3;
                int LA226_0 = input.LA(1);

                if ( (LA226_0==COMPILER_ANNOTATION) && (synpred17_Ceylon())) {
                    alt226=1;
                }
                else if ( (LA226_0==UIDENTIFIER) ) {
                    int LA226_2 = input.LA(2);

                    if ( (synpred17_Ceylon()) ) {
                        alt226=1;
                    }
                    else if ( (true) ) {
                        alt226=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return condition;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 226, 2, input);

                        throw nvae;

                    }
                }
                else if ( (LA226_0==SMALLER_OP) && (synpred17_Ceylon())) {
                    alt226=1;
                }
                else if ( (LA226_0==LBRACKET) ) {
                    int LA226_4 = input.LA(2);

                    if ( (synpred17_Ceylon()) ) {
                        alt226=1;
                    }
                    else if ( (true) ) {
                        alt226=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return condition;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 226, 4, input);

                        throw nvae;

                    }
                }
                else if ( (LA226_0==LBRACE) ) {
                    int LA226_5 = input.LA(2);

                    if ( (synpred17_Ceylon()) ) {
                        alt226=1;
                    }
                    else if ( (true) ) {
                        alt226=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return condition;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 226, 5, input);

                        throw nvae;

                    }
                }
                else if ( (LA226_0==VOID_MODIFIER) && (synpred17_Ceylon())) {
                    alt226=1;
                }
                else if ( (LA226_0==FUNCTION_MODIFIER) && (synpred17_Ceylon())) {
                    alt226=1;
                }
                else if ( (LA226_0==VALUE_MODIFIER) ) {
                    int LA226_8 = input.LA(2);

                    if ( (synpred17_Ceylon()) ) {
                        alt226=1;
                    }
                    else if ( (true) ) {
                        alt226=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return condition;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 226, 8, input);

                        throw nvae;

                    }
                }
                else if ( (LA226_0==LIDENTIFIER) ) {
                    int LA226_9 = input.LA(2);

                    if ( (synpred17_Ceylon()) ) {
                        alt226=1;
                    }
                    else if ( (synpred18_Ceylon()) ) {
                        alt226=2;
                    }
                    else if ( (true) ) {
                        alt226=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return condition;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 226, 9, input);

                        throw nvae;

                    }
                }
                else if ( (LA226_0==BACKTICK||LA226_0==CHAR_LITERAL||(LA226_0 >= DECREMENT_OP && LA226_0 <= DIFFERENCE_OP)||LA226_0==FLOAT_LITERAL||LA226_0==INCREMENT_OP||LA226_0==LPAREN||LA226_0==NATURAL_LITERAL||LA226_0==NOT_OP||(LA226_0 >= OUTER && LA226_0 <= PACKAGE)||LA226_0==STRING_LITERAL||LA226_0==STRING_START||(LA226_0 >= SUM_OP && LA226_0 <= SUPER)||LA226_0==THIS||LA226_0==VERBATIM_STRING) ) {
                    alt226=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 226, 0, input);

                    throw nvae;

                }
                switch (alt226) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2721:7: ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable
                    {
                        pushFollow(FOLLOW_specifiedVariable_in_existsCondition18149);
                        specifiedVariable438=specifiedVariable();

                        state._fsp--;
                        if (state.failed) return condition;

                        if ( state.backtracking==0 ) { condition.setVariable(specifiedVariable438); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2725:9: ( LIDENTIFIER )=> impliedVariable
                    {
                        pushFollow(FOLLOW_impliedVariable_in_existsCondition18184);
                        impliedVariable439=impliedVariable();

                        state._fsp--;
                        if (state.failed) return condition;

                        if ( state.backtracking==0 ) { condition.setVariable(impliedVariable439); }

                    }
                    break;
                    case 3 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2727:9: expression
                    {
                        pushFollow(FOLLOW_expression_in_existsCondition18204);
                        expression440=expression();

                        state._fsp--;
                        if (state.failed) return condition;

                        if ( state.backtracking==0 ) { condition.setBrokenExpression(expression440); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "existsCondition"



    // $ANTLR start "nonemptyCondition"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2732:1: nonemptyCondition returns [NonemptyCondition condition] : NONEMPTY ( ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable | ( LIDENTIFIER )=> impliedVariable | expression ) ;
    public NonemptyCondition nonemptyCondition() throws RecognitionException {
        NonemptyCondition condition = null;


        Token NONEMPTY441=null;
        Variable specifiedVariable442 =null;

        Variable impliedVariable443 =null;

        Expression expression444 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2733:5: ( NONEMPTY ( ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable | ( LIDENTIFIER )=> impliedVariable | expression ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2733:7: NONEMPTY ( ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable | ( LIDENTIFIER )=> impliedVariable | expression )
            {
                NONEMPTY441=(Token)match(input,NONEMPTY,FOLLOW_NONEMPTY_in_nonemptyCondition18245); if (state.failed) return condition;

                if ( state.backtracking==0 ) { condition = new NonemptyCondition(NONEMPTY441); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2735:5: ( ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable | ( LIDENTIFIER )=> impliedVariable | expression )
                int alt227=3;
                int LA227_0 = input.LA(1);

                if ( (LA227_0==COMPILER_ANNOTATION) && (synpred19_Ceylon())) {
                    alt227=1;
                }
                else if ( (LA227_0==UIDENTIFIER) ) {
                    int LA227_2 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt227=1;
                    }
                    else if ( (true) ) {
                        alt227=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return condition;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 227, 2, input);

                        throw nvae;

                    }
                }
                else if ( (LA227_0==SMALLER_OP) && (synpred19_Ceylon())) {
                    alt227=1;
                }
                else if ( (LA227_0==LBRACKET) ) {
                    int LA227_4 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt227=1;
                    }
                    else if ( (true) ) {
                        alt227=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return condition;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 227, 4, input);

                        throw nvae;

                    }
                }
                else if ( (LA227_0==LBRACE) ) {
                    int LA227_5 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt227=1;
                    }
                    else if ( (true) ) {
                        alt227=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return condition;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 227, 5, input);

                        throw nvae;

                    }
                }
                else if ( (LA227_0==VOID_MODIFIER) && (synpred19_Ceylon())) {
                    alt227=1;
                }
                else if ( (LA227_0==FUNCTION_MODIFIER) && (synpred19_Ceylon())) {
                    alt227=1;
                }
                else if ( (LA227_0==VALUE_MODIFIER) ) {
                    int LA227_8 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt227=1;
                    }
                    else if ( (true) ) {
                        alt227=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return condition;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 227, 8, input);

                        throw nvae;

                    }
                }
                else if ( (LA227_0==LIDENTIFIER) ) {
                    int LA227_9 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt227=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt227=2;
                    }
                    else if ( (true) ) {
                        alt227=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return condition;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 227, 9, input);

                        throw nvae;

                    }
                }
                else if ( (LA227_0==BACKTICK||LA227_0==CHAR_LITERAL||(LA227_0 >= DECREMENT_OP && LA227_0 <= DIFFERENCE_OP)||LA227_0==FLOAT_LITERAL||LA227_0==INCREMENT_OP||LA227_0==LPAREN||LA227_0==NATURAL_LITERAL||LA227_0==NOT_OP||(LA227_0 >= OUTER && LA227_0 <= PACKAGE)||LA227_0==STRING_LITERAL||LA227_0==STRING_START||(LA227_0 >= SUM_OP && LA227_0 <= SUPER)||LA227_0==THIS||LA227_0==VERBATIM_STRING) ) {
                    alt227=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 227, 0, input);

                    throw nvae;

                }
                switch (alt227) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2735:7: ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable
                    {
                        pushFollow(FOLLOW_specifiedVariable_in_nonemptyCondition18280);
                        specifiedVariable442=specifiedVariable();

                        state._fsp--;
                        if (state.failed) return condition;

                        if ( state.backtracking==0 ) { condition.setVariable(specifiedVariable442); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2739:7: ( LIDENTIFIER )=> impliedVariable
                    {
                        pushFollow(FOLLOW_impliedVariable_in_nonemptyCondition18309);
                        impliedVariable443=impliedVariable();

                        state._fsp--;
                        if (state.failed) return condition;

                        if ( state.backtracking==0 ) { condition.setVariable(impliedVariable443); }

                    }
                    break;
                    case 3 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2741:7: expression
                    {
                        pushFollow(FOLLOW_expression_in_nonemptyCondition18326);
                        expression444=expression();

                        state._fsp--;
                        if (state.failed) return condition;

                        if ( state.backtracking==0 ) { condition.setBrokenExpression(expression444); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "nonemptyCondition"



    // $ANTLR start "isCondition"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2746:1: isCondition returns [IsCondition condition] : ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=> memberName specifier | impliedVariable ) ;
    public IsCondition isCondition() throws RecognitionException {
        IsCondition condition = null;


        Token NOT_OP445=null;
        Token IS_OP446=null;
        StaticType type447 =null;

        Identifier memberName448 =null;

        SpecifierExpression specifier449 =null;

        Variable impliedVariable450 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2747:5: ( ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=> memberName specifier | impliedVariable ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2747:7: ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=> memberName specifier | impliedVariable )
            {
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2747:7: ( NOT_OP )?
                int alt228=2;
                int LA228_0 = input.LA(1);

                if ( (LA228_0==NOT_OP) ) {
                    alt228=1;
                }
                switch (alt228) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2748:9: NOT_OP
                    {
                        NOT_OP445=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_isCondition18371); if (state.failed) return condition;

                        if ( state.backtracking==0 ) { condition = new IsCondition(NOT_OP445);
                            condition.setNot(true); }

                    }
                    break;

                }


                IS_OP446=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_isCondition18398); if (state.failed) return condition;

                if ( state.backtracking==0 ) { if (condition==null)
                    condition = new IsCondition(IS_OP446); }

                pushFollow(FOLLOW_type_in_isCondition18415);
                type447=type();

                state._fsp--;
                if (state.failed) return condition;

                if ( state.backtracking==0 ) { condition.setType(type447); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2757:5: ( ( LIDENTIFIER SPECIFY )=> memberName specifier | impliedVariable )
                int alt229=2;
                int LA229_0 = input.LA(1);

                if ( (LA229_0==LIDENTIFIER) ) {
                    int LA229_1 = input.LA(2);

                    if ( (LA229_1==SPECIFY) && (synpred21_Ceylon())) {
                        alt229=1;
                    }
                    else if ( (LA229_1==COMMA||LA229_1==RPAREN) ) {
                        alt229=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return condition;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 229, 1, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 229, 0, input);

                    throw nvae;

                }
                switch (alt229) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2757:7: ( LIDENTIFIER SPECIFY )=> memberName specifier
                    {
                        if ( state.backtracking==0 ) { Variable v = new Variable(null);
                            v.setType(new ValueModifier(null));
                            condition.setVariable(v); }

                        pushFollow(FOLLOW_memberName_in_isCondition18453);
                        memberName448=memberName();

                        state._fsp--;
                        if (state.failed) return condition;

                        if ( state.backtracking==0 ) { condition.getVariable().setIdentifier(memberName448); }

                        pushFollow(FOLLOW_specifier_in_isCondition18469);
                        specifier449=specifier();

                        state._fsp--;
                        if (state.failed) return condition;

                        if ( state.backtracking==0 ) { condition.getVariable().setSpecifierExpression(specifier449); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2766:7: impliedVariable
                    {
                        pushFollow(FOLLOW_impliedVariable_in_isCondition18492);
                        impliedVariable450=impliedVariable();

                        state._fsp--;
                        if (state.failed) return condition;

                        if ( state.backtracking==0 ) { condition.setVariable(impliedVariable450); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "isCondition"



    // $ANTLR start "satisfiesCondition"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2771:1: satisfiesCondition returns [SatisfiesCondition condition] : SATISFIES type typeName ;
    public SatisfiesCondition satisfiesCondition() throws RecognitionException {
        SatisfiesCondition condition = null;


        Token SATISFIES451=null;
        StaticType type452 =null;

        Identifier typeName453 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2772:5: ( SATISFIES type typeName )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2772:7: SATISFIES type typeName
            {
                SATISFIES451=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiesCondition18528); if (state.failed) return condition;

                if ( state.backtracking==0 ) { condition = new SatisfiesCondition(SATISFIES451); }

                pushFollow(FOLLOW_type_in_satisfiesCondition18545);
                type452=type();

                state._fsp--;
                if (state.failed) return condition;

                if ( state.backtracking==0 ) { condition.setType(type452); }

                pushFollow(FOLLOW_typeName_in_satisfiesCondition18562);
                typeName453=typeName();

                state._fsp--;
                if (state.failed) return condition;

                if ( state.backtracking==0 ) { condition.setIdentifier(typeName453); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "satisfiesCondition"



    // $ANTLR start "controlStatement"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2780:1: controlStatement returns [ControlStatement controlStatement] : ( ifElse | switchCaseElse | whileLoop | forElse | tryCatchFinally | dynamic );
    public ControlStatement controlStatement() throws RecognitionException {
        ControlStatement controlStatement = null;


        IfStatement ifElse454 =null;

        SwitchStatement switchCaseElse455 =null;

        WhileStatement whileLoop456 =null;

        ForStatement forElse457 =null;

        TryCatchStatement tryCatchFinally458 =null;

        DynamicStatement dynamic459 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2781:5: ( ifElse | switchCaseElse | whileLoop | forElse | tryCatchFinally | dynamic )
            int alt230=6;
            switch ( input.LA(1) ) {
                case IF_CLAUSE:
                {
                    alt230=1;
                }
                break;
                case SWITCH_CLAUSE:
                {
                    alt230=2;
                }
                break;
                case WHILE_CLAUSE:
                {
                    alt230=3;
                }
                break;
                case FOR_CLAUSE:
                {
                    alt230=4;
                }
                break;
                case TRY_CLAUSE:
                {
                    alt230=5;
                }
                break;
                case DYNAMIC:
                {
                    alt230=6;
                }
                break;
                default:
                    if (state.backtracking>0) {state.failed=true; return controlStatement;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 230, 0, input);

                    throw nvae;

            }

            switch (alt230) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2781:7: ifElse
                {
                    pushFollow(FOLLOW_ifElse_in_controlStatement18591);
                    ifElse454=ifElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =ifElse454; }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2783:7: switchCaseElse
                {
                    pushFollow(FOLLOW_switchCaseElse_in_controlStatement18608);
                    switchCaseElse455=switchCaseElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =switchCaseElse455; }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2785:7: whileLoop
                {
                    pushFollow(FOLLOW_whileLoop_in_controlStatement18625);
                    whileLoop456=whileLoop();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =whileLoop456; }

                }
                break;
                case 4 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2787:7: forElse
                {
                    pushFollow(FOLLOW_forElse_in_controlStatement18642);
                    forElse457=forElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =forElse457; }

                }
                break;
                case 5 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2789:7: tryCatchFinally
                {
                    pushFollow(FOLLOW_tryCatchFinally_in_controlStatement18659);
                    tryCatchFinally458=tryCatchFinally();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =tryCatchFinally458; }

                }
                break;
                case 6 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2791:7: dynamic
                {
                    pushFollow(FOLLOW_dynamic_in_controlStatement18675);
                    dynamic459=dynamic();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =dynamic459; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return controlStatement;
    }
    // $ANTLR end "controlStatement"



    // $ANTLR start "controlBlock"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2795:1: controlBlock returns [Block block] : ( ( LBRACE )=>b= block |) ;
    public Block controlBlock() throws RecognitionException {
        Block block = null;


        Block b =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2796:5: ( ( ( LBRACE )=>b= block |) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2796:7: ( ( LBRACE )=>b= block |)
            {
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2796:7: ( ( LBRACE )=>b= block |)
                int alt231=2;
                int LA231_0 = input.LA(1);

                if ( (LA231_0==LBRACE) ) {
                    int LA231_1 = input.LA(2);

                    if ( (synpred22_Ceylon()) ) {
                        alt231=1;
                    }
                    else if ( (true) ) {
                        alt231=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return block;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 231, 1, input);

                        throw nvae;

                    }
                }
                else if ( (LA231_0==ALIAS||(LA231_0 >= ASSERT && LA231_0 <= ASSIGN)||(LA231_0 >= BACKTICK && LA231_0 <= BREAK)||(LA231_0 >= CATCH_CLAUSE && LA231_0 <= CLASS_DEFINITION)||LA231_0==COMPILER_ANNOTATION||LA231_0==CONTINUE||(LA231_0 >= DECREMENT_OP && LA231_0 <= DIFFERENCE_OP)||LA231_0==DYNAMIC||LA231_0==ELSE_CLAUSE||(LA231_0 >= FINALLY_CLAUSE && LA231_0 <= FUNCTION_MODIFIER)||LA231_0==IF_CLAUSE||(LA231_0 >= INCREMENT_OP && LA231_0 <= INTERFACE_DEFINITION)||LA231_0==LBRACKET||LA231_0==LIDENTIFIER||LA231_0==LPAREN||LA231_0==NATURAL_LITERAL||(LA231_0 >= NOT_OP && LA231_0 <= OBJECT_DEFINITION)||(LA231_0 >= OUTER && LA231_0 <= PACKAGE)||LA231_0==RBRACE||LA231_0==RETURN||LA231_0==SMALLER_OP||LA231_0==STRING_LITERAL||LA231_0==STRING_START||(LA231_0 >= SUM_OP && LA231_0 <= SWITCH_CLAUSE)||(LA231_0 >= THIS && LA231_0 <= TRY_CLAUSE)||LA231_0==UIDENTIFIER||(LA231_0 >= VALUE_MODIFIER && LA231_0 <= WHILE_CLAUSE)) ) {
                    alt231=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return block;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 231, 0, input);

                    throw nvae;

                }
                switch (alt231) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2796:9: ( LBRACE )=>b= block
                    {
                        pushFollow(FOLLOW_block_in_controlBlock18713);
                        b=block();

                        state._fsp--;
                        if (state.failed) return block;

                        if ( state.backtracking==0 ) { block =b; }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2798:9: 
                    {
                        if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                new MismatchedTokenException(LBRACE, input)); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "controlBlock"



    // $ANTLR start "dynamic"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2803:1: dynamic returns [DynamicStatement statement] : DYNAMIC controlBlock ;
    public DynamicStatement dynamic() throws RecognitionException {
        DynamicStatement statement = null;


        Token DYNAMIC460=null;
        Block controlBlock461 =null;


        DynamicClause dc = null;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2805:5: ( DYNAMIC controlBlock )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2805:7: DYNAMIC controlBlock
            {
                if ( state.backtracking==0 ) { statement =new DynamicStatement(null); }

                DYNAMIC460=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_dynamic18779); if (state.failed) return statement;

                if ( state.backtracking==0 ) { dc = new DynamicClause(DYNAMIC460);
                    statement.setDynamicClause(dc); }

                pushFollow(FOLLOW_controlBlock_in_dynamic18796);
                controlBlock461=controlBlock();

                state._fsp--;
                if (state.failed) return statement;

                if ( state.backtracking==0 ) { dc.setBlock(controlBlock461); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "dynamic"



    // $ANTLR start "ifElse"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2813:1: ifElse returns [IfStatement statement] : ifBlock ( elseBlock )? ;
    public IfStatement ifElse() throws RecognitionException {
        IfStatement statement = null;


        IfClause ifBlock462 =null;

        ElseClause elseBlock463 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2814:5: ( ifBlock ( elseBlock )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2814:7: ifBlock ( elseBlock )?
            {
                if ( state.backtracking==0 ) { statement =new IfStatement(null); }

                pushFollow(FOLLOW_ifBlock_in_ifElse18833);
                ifBlock462=ifBlock();

                state._fsp--;
                if (state.failed) return statement;

                if ( state.backtracking==0 ) { statement.setIfClause(ifBlock462); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2817:7: ( elseBlock )?
                int alt232=2;
                int LA232_0 = input.LA(1);

                if ( (LA232_0==ELSE_CLAUSE) ) {
                    alt232=1;
                }
                switch (alt232) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2818:9: elseBlock
                    {
                        pushFollow(FOLLOW_elseBlock_in_ifElse18861);
                        elseBlock463=elseBlock();

                        state._fsp--;
                        if (state.failed) return statement;

                        if ( state.backtracking==0 ) { statement.setElseClause(elseBlock463); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "ifElse"



    // $ANTLR start "ifBlock"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2823:1: ifBlock returns [IfClause clause] : IF_CLAUSE conditions controlBlock ;
    public IfClause ifBlock() throws RecognitionException {
        IfClause clause = null;


        Token IF_CLAUSE464=null;
        ConditionList conditions465 =null;

        Block controlBlock466 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2824:5: ( IF_CLAUSE conditions controlBlock )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2824:7: IF_CLAUSE conditions controlBlock
            {
                IF_CLAUSE464=(Token)match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_ifBlock18901); if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause = new IfClause(IF_CLAUSE464); }

                pushFollow(FOLLOW_conditions_in_ifBlock18918);
                conditions465=conditions();

                state._fsp--;
                if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause.setConditionList(conditions465); }

                pushFollow(FOLLOW_controlBlock_in_ifBlock18934);
                controlBlock466=controlBlock();

                state._fsp--;
                if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause.setBlock(controlBlock466); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "ifBlock"



    // $ANTLR start "elseBlock"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2832:1: elseBlock returns [ElseClause clause] : ELSE_CLAUSE ( elseIf | block ) ;
    public ElseClause elseBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE467=null;
        Block elseIf468 =null;

        Block block469 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2833:5: ( ELSE_CLAUSE ( elseIf | block ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2833:7: ELSE_CLAUSE ( elseIf | block )
            {
                ELSE_CLAUSE467=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_elseBlock18963); if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE467); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2835:7: ( elseIf | block )
                int alt233=2;
                int LA233_0 = input.LA(1);

                if ( (LA233_0==IF_CLAUSE) ) {
                    alt233=1;
                }
                else if ( (LA233_0==LBRACE) ) {
                    alt233=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return clause;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 233, 0, input);

                    throw nvae;

                }
                switch (alt233) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2836:9: elseIf
                    {
                        pushFollow(FOLLOW_elseIf_in_elseBlock18990);
                        elseIf468=elseIf();

                        state._fsp--;
                        if (state.failed) return clause;

                        if ( state.backtracking==0 ) { clause.setBlock(elseIf468); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2839:9: block
                    {
                        pushFollow(FOLLOW_block_in_elseBlock19020);
                        block469=block();

                        state._fsp--;
                        if (state.failed) return clause;

                        if ( state.backtracking==0 ) { clause.setBlock(block469); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "elseBlock"



    // $ANTLR start "elseIf"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2844:1: elseIf returns [Block block] : ifElse ;
    public Block elseIf() throws RecognitionException {
        Block block = null;


        IfStatement ifElse470 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2845:5: ( ifElse )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2845:7: ifElse
            {
                pushFollow(FOLLOW_ifElse_in_elseIf19059);
                ifElse470=ifElse();

                state._fsp--;
                if (state.failed) return block;

                if ( state.backtracking==0 ) { block = new Block(null);
                    block.addStatement(ifElse470); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "elseIf"



    // $ANTLR start "switchCaseElse"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2850:1: switchCaseElse returns [SwitchStatement statement] : switchHeader cases ;
    public SwitchStatement switchCaseElse() throws RecognitionException {
        SwitchStatement statement = null;


        SwitchClause switchHeader471 =null;

        SwitchCaseList cases472 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2851:5: ( switchHeader cases )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2851:7: switchHeader cases
            {
                if ( state.backtracking==0 ) { statement = new SwitchStatement(null); }

                pushFollow(FOLLOW_switchHeader_in_switchCaseElse19096);
                switchHeader471=switchHeader();

                state._fsp--;
                if (state.failed) return statement;

                if ( state.backtracking==0 ) { statement.setSwitchClause(switchHeader471); }

                pushFollow(FOLLOW_cases_in_switchCaseElse19113);
                cases472=cases();

                state._fsp--;
                if (state.failed) return statement;

                if ( state.backtracking==0 ) { statement.setSwitchCaseList(cases472);
                    Expression ex = switchHeader471.getExpression();
                    if (ex!=null && ex.getTerm() instanceof BaseMemberExpression) {
                        Identifier id = ((BaseMemberExpression) ex.getTerm()).getIdentifier();
                        for (CaseClause cc: cases472.getCaseClauses()) {
                            CaseItem item = cc.getCaseItem();
                            if (item instanceof IsCase) {
                                IsCase ic = (IsCase) item;
                                Variable v = new Variable(null);
                                v.setType(new SyntheticVariable(null));
                                v.setIdentifier(id);
                                SpecifierExpression se = new SpecifierExpression(null);
                                Expression e = new Expression(null);
                                BaseMemberExpression bme = new BaseMemberExpression(null);
                                bme.setIdentifier(id);
                                bme.setTypeArguments( new InferredTypeArguments(null) );
                                e.setTerm(bme);
                                se.setExpression(e);
                                v.setSpecifierExpression(se);
                                ic.setVariable(v);
                            }
                        }
                    }
                }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "switchCaseElse"



    // $ANTLR start "switchHeader"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2881:1: switchHeader returns [SwitchClause clause] : SWITCH_CLAUSE LPAREN ( expression )? RPAREN ;
    public SwitchClause switchHeader() throws RecognitionException {
        SwitchClause clause = null;


        Token SWITCH_CLAUSE473=null;
        Expression expression474 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2882:5: ( SWITCH_CLAUSE LPAREN ( expression )? RPAREN )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2882:7: SWITCH_CLAUSE LPAREN ( expression )? RPAREN
            {
                SWITCH_CLAUSE473=(Token)match(input,SWITCH_CLAUSE,FOLLOW_SWITCH_CLAUSE_in_switchHeader19142); if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause = new SwitchClause(SWITCH_CLAUSE473); }

                match(input,LPAREN,FOLLOW_LPAREN_in_switchHeader19159); if (state.failed) return clause;

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2885:7: ( expression )?
                int alt234=2;
                int LA234_0 = input.LA(1);

                if ( (LA234_0==BACKTICK||LA234_0==CHAR_LITERAL||(LA234_0 >= DECREMENT_OP && LA234_0 <= DIFFERENCE_OP)||LA234_0==FLOAT_LITERAL||LA234_0==INCREMENT_OP||(LA234_0 >= LBRACE && LA234_0 <= LBRACKET)||LA234_0==LIDENTIFIER||LA234_0==LPAREN||LA234_0==NATURAL_LITERAL||LA234_0==NOT_OP||(LA234_0 >= OUTER && LA234_0 <= PACKAGE)||LA234_0==STRING_LITERAL||LA234_0==STRING_START||(LA234_0 >= SUM_OP && LA234_0 <= SUPER)||LA234_0==THIS||LA234_0==UIDENTIFIER||(LA234_0 >= VALUE_MODIFIER && LA234_0 <= VERBATIM_STRING)) ) {
                    alt234=1;
                }
                switch (alt234) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2886:7: expression
                    {
                        pushFollow(FOLLOW_expression_in_switchHeader19176);
                        expression474=expression();

                        state._fsp--;
                        if (state.failed) return clause;

                        if ( state.backtracking==0 ) { clause.setExpression(expression474); }

                    }
                    break;

                }


                match(input,RPAREN,FOLLOW_RPAREN_in_switchHeader19202); if (state.failed) return clause;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "switchHeader"



    // $ANTLR start "cases"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2892:1: cases returns [SwitchCaseList switchCaseList] : ( caseBlock )+ ( defaultCaseBlock )? ;
    public SwitchCaseList cases() throws RecognitionException {
        SwitchCaseList switchCaseList = null;


        CaseClause caseBlock475 =null;

        ElseClause defaultCaseBlock476 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2893:5: ( ( caseBlock )+ ( defaultCaseBlock )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2893:7: ( caseBlock )+ ( defaultCaseBlock )?
            {
                if ( state.backtracking==0 ) { switchCaseList = new SwitchCaseList(null); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2894:7: ( caseBlock )+
                int cnt235=0;
                loop235:
                do {
                    int alt235=2;
                    int LA235_0 = input.LA(1);

                    if ( (LA235_0==CASE_CLAUSE) ) {
                        alt235=1;
                    }


                    switch (alt235) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2895:9: caseBlock
                        {
                            pushFollow(FOLLOW_caseBlock_in_cases19241);
                            caseBlock475=caseBlock();

                            state._fsp--;
                            if (state.failed) return switchCaseList;

                            if ( state.backtracking==0 ) { switchCaseList.addCaseClause(caseBlock475); }

                        }
                        break;

                        default :
                            if ( cnt235 >= 1 ) break loop235;
                            if (state.backtracking>0) {state.failed=true; return switchCaseList;}
                            EarlyExitException eee =
                                    new EarlyExitException(235, input);
                            throw eee;
                    }
                    cnt235++;
                } while (true);


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2898:7: ( defaultCaseBlock )?
                int alt236=2;
                int LA236_0 = input.LA(1);

                if ( (LA236_0==ELSE_CLAUSE) ) {
                    alt236=1;
                }
                switch (alt236) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2899:9: defaultCaseBlock
                    {
                        pushFollow(FOLLOW_defaultCaseBlock_in_cases19278);
                        defaultCaseBlock476=defaultCaseBlock();

                        state._fsp--;
                        if (state.failed) return switchCaseList;

                        if ( state.backtracking==0 ) { switchCaseList.setElseClause(defaultCaseBlock476); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return switchCaseList;
    }
    // $ANTLR end "cases"



    // $ANTLR start "caseBlock"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2904:1: caseBlock returns [CaseClause clause] : CASE_CLAUSE caseItemList block ;
    public CaseClause caseBlock() throws RecognitionException {
        CaseClause clause = null;


        Token CASE_CLAUSE477=null;
        CaseItem caseItemList478 =null;

        Block block479 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2905:5: ( CASE_CLAUSE caseItemList block )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2905:7: CASE_CLAUSE caseItemList block
            {
                CASE_CLAUSE477=(Token)match(input,CASE_CLAUSE,FOLLOW_CASE_CLAUSE_in_caseBlock19322); if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause = new CaseClause(CASE_CLAUSE477); }

                pushFollow(FOLLOW_caseItemList_in_caseBlock19339);
                caseItemList478=caseItemList();

                state._fsp--;
                if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause.setCaseItem(caseItemList478); }

                pushFollow(FOLLOW_block_in_caseBlock19355);
                block479=block();

                state._fsp--;
                if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause.setBlock(block479); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "caseBlock"



    // $ANTLR start "caseItemList"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2913:1: caseItemList returns [CaseItem item] : LPAREN (ci= caseItem )? RPAREN ;
    public CaseItem caseItemList() throws RecognitionException {
        CaseItem item = null;


        Token RPAREN480=null;
        CaseItem ci =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2914:5: ( LPAREN (ci= caseItem )? RPAREN )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2914:7: LPAREN (ci= caseItem )? RPAREN
            {
                match(input,LPAREN,FOLLOW_LPAREN_in_caseItemList19384); if (state.failed) return item;

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2915:7: (ci= caseItem )?
                int alt237=2;
                int LA237_0 = input.LA(1);

                if ( (LA237_0==BACKTICK||LA237_0==CHAR_LITERAL||(LA237_0 >= DECREMENT_OP && LA237_0 <= DIFFERENCE_OP)||LA237_0==FLOAT_LITERAL||LA237_0==INCREMENT_OP||LA237_0==IS_OP||(LA237_0 >= LBRACE && LA237_0 <= LBRACKET)||LA237_0==LIDENTIFIER||LA237_0==LPAREN||LA237_0==NATURAL_LITERAL||LA237_0==NOT_OP||(LA237_0 >= OUTER && LA237_0 <= PACKAGE)||LA237_0==SATISFIES||LA237_0==STRING_LITERAL||LA237_0==STRING_START||(LA237_0 >= SUM_OP && LA237_0 <= SUPER)||LA237_0==THIS||LA237_0==UIDENTIFIER||(LA237_0 >= VALUE_MODIFIER && LA237_0 <= VERBATIM_STRING)) ) {
                    alt237=1;
                }
                switch (alt237) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2916:9: ci= caseItem
                    {
                        pushFollow(FOLLOW_caseItem_in_caseItemList19405);
                        ci=caseItem();

                        state._fsp--;
                        if (state.failed) return item;

                        if ( state.backtracking==0 ) { item = ci; }

                    }
                    break;

                }


                RPAREN480=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_caseItemList19432); if (state.failed) return item;

                if ( state.backtracking==0 ) { if (item!=null)
                    item.setEndToken(RPAREN480); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "caseItemList"



    // $ANTLR start "defaultCaseBlock"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2924:1: defaultCaseBlock returns [ElseClause clause] : ELSE_CLAUSE block ;
    public ElseClause defaultCaseBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE481=null;
        Block block482 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2925:5: ( ELSE_CLAUSE block )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2925:7: ELSE_CLAUSE block
            {
                ELSE_CLAUSE481=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_defaultCaseBlock19462); if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE481); }

                pushFollow(FOLLOW_block_in_defaultCaseBlock19479);
                block482=block();

                state._fsp--;
                if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause.setBlock(block482); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "defaultCaseBlock"



    // $ANTLR start "caseItem"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2931:1: caseItem returns [CaseItem item] : ( ( IS_OP )=> isCaseCondition | ( SATISFIES )=> satisfiesCaseCondition | matchCaseCondition );
    public CaseItem caseItem() throws RecognitionException {
        CaseItem item = null;


        IsCase isCaseCondition483 =null;

        SatisfiesCase satisfiesCaseCondition484 =null;

        MatchCase matchCaseCondition485 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2932:5: ( ( IS_OP )=> isCaseCondition | ( SATISFIES )=> satisfiesCaseCondition | matchCaseCondition )
            int alt238=3;
            int LA238_0 = input.LA(1);

            if ( (LA238_0==IS_OP) && (synpred23_Ceylon())) {
                alt238=1;
            }
            else if ( (LA238_0==SATISFIES) && (synpred24_Ceylon())) {
                alt238=2;
            }
            else if ( (LA238_0==BACKTICK||LA238_0==CHAR_LITERAL||(LA238_0 >= DECREMENT_OP && LA238_0 <= DIFFERENCE_OP)||LA238_0==FLOAT_LITERAL||LA238_0==INCREMENT_OP||(LA238_0 >= LBRACE && LA238_0 <= LBRACKET)||LA238_0==LIDENTIFIER||LA238_0==LPAREN||LA238_0==NATURAL_LITERAL||LA238_0==NOT_OP||(LA238_0 >= OUTER && LA238_0 <= PACKAGE)||LA238_0==STRING_LITERAL||LA238_0==STRING_START||(LA238_0 >= SUM_OP && LA238_0 <= SUPER)||LA238_0==THIS||LA238_0==UIDENTIFIER||(LA238_0 >= VALUE_MODIFIER && LA238_0 <= VERBATIM_STRING)) ) {
                alt238=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return item;}
                NoViableAltException nvae =
                        new NoViableAltException("", 238, 0, input);

                throw nvae;

            }
            switch (alt238) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2932:7: ( IS_OP )=> isCaseCondition
                {
                    pushFollow(FOLLOW_isCaseCondition_in_caseItem19512);
                    isCaseCondition483=isCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =isCaseCondition483; }

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2934:7: ( SATISFIES )=> satisfiesCaseCondition
                {
                    pushFollow(FOLLOW_satisfiesCaseCondition_in_caseItem19533);
                    satisfiesCaseCondition484=satisfiesCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =satisfiesCaseCondition484; }

                }
                break;
                case 3 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2936:7: matchCaseCondition
                {
                    pushFollow(FOLLOW_matchCaseCondition_in_caseItem19549);
                    matchCaseCondition485=matchCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =matchCaseCondition485; }

                }
                break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "caseItem"



    // $ANTLR start "matchCaseCondition"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2940:1: matchCaseCondition returns [MatchCase item] : expressions ;
    public MatchCase matchCaseCondition() throws RecognitionException {
        MatchCase item = null;


        ExpressionList expressions486 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2941:5: ( expressions )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2941:7: expressions
            {
                pushFollow(FOLLOW_expressions_in_matchCaseCondition19578);
                expressions486=expressions();

                state._fsp--;
                if (state.failed) return item;

                if ( state.backtracking==0 ) { item = new MatchCase(null);
                    item.setExpressionList(expressions486); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "matchCaseCondition"



    // $ANTLR start "isCaseCondition"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2946:1: isCaseCondition returns [IsCase item] : IS_OP type ;
    public IsCase isCaseCondition() throws RecognitionException {
        IsCase item = null;


        Token IS_OP487=null;
        StaticType type488 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2947:5: ( IS_OP type )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2947:7: IS_OP type
            {
                IS_OP487=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_isCaseCondition19607); if (state.failed) return item;

                if ( state.backtracking==0 ) { item = new IsCase(IS_OP487); }

                pushFollow(FOLLOW_type_in_isCaseCondition19624);
                type488=type();

                state._fsp--;
                if (state.failed) return item;

                if ( state.backtracking==0 ) { item.setType(type488); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "isCaseCondition"



    // $ANTLR start "satisfiesCaseCondition"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2953:1: satisfiesCaseCondition returns [SatisfiesCase item] : SATISFIES type ;
    public SatisfiesCase satisfiesCaseCondition() throws RecognitionException {
        SatisfiesCase item = null;


        Token SATISFIES489=null;
        StaticType type490 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2954:5: ( SATISFIES type )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2954:7: SATISFIES type
            {
                SATISFIES489=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiesCaseCondition19653); if (state.failed) return item;

                if ( state.backtracking==0 ) { item = new SatisfiesCase(SATISFIES489); }

                pushFollow(FOLLOW_type_in_satisfiesCaseCondition19670);
                type490=type();

                state._fsp--;
                if (state.failed) return item;

                if ( state.backtracking==0 ) { item.setType(type490); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "satisfiesCaseCondition"



    // $ANTLR start "forElse"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2960:1: forElse returns [ForStatement statement] : forBlock ( failBlock )? ;
    public ForStatement forElse() throws RecognitionException {
        ForStatement statement = null;


        ForClause forBlock491 =null;

        ElseClause failBlock492 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2961:5: ( forBlock ( failBlock )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2961:7: forBlock ( failBlock )?
            {
                if ( state.backtracking==0 ) { statement =new ForStatement(null); }

                pushFollow(FOLLOW_forBlock_in_forElse19707);
                forBlock491=forBlock();

                state._fsp--;
                if (state.failed) return statement;

                if ( state.backtracking==0 ) { statement.setForClause(forBlock491); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2964:7: ( failBlock )?
                int alt239=2;
                int LA239_0 = input.LA(1);

                if ( (LA239_0==ELSE_CLAUSE) ) {
                    alt239=1;
                }
                switch (alt239) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2965:9: failBlock
                    {
                        pushFollow(FOLLOW_failBlock_in_forElse19734);
                        failBlock492=failBlock();

                        state._fsp--;
                        if (state.failed) return statement;

                        if ( state.backtracking==0 ) { statement.setElseClause(failBlock492); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "forElse"



    // $ANTLR start "forBlock"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2970:1: forBlock returns [ForClause clause] : FOR_CLAUSE forIterator controlBlock ;
    public ForClause forBlock() throws RecognitionException {
        ForClause clause = null;


        Token FOR_CLAUSE493=null;
        ForIterator forIterator494 =null;

        Block controlBlock495 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2971:5: ( FOR_CLAUSE forIterator controlBlock )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2971:7: FOR_CLAUSE forIterator controlBlock
            {
                FOR_CLAUSE493=(Token)match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_forBlock19774); if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause = new ForClause(FOR_CLAUSE493); }

                pushFollow(FOLLOW_forIterator_in_forBlock19791);
                forIterator494=forIterator();

                state._fsp--;
                if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause.setForIterator(forIterator494); }

                pushFollow(FOLLOW_controlBlock_in_forBlock19808);
                controlBlock495=controlBlock();

                state._fsp--;
                if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause.setBlock(controlBlock495); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "forBlock"



    // $ANTLR start "failBlock"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2979:1: failBlock returns [ElseClause clause] : ELSE_CLAUSE controlBlock ;
    public ElseClause failBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE496=null;
        Block controlBlock497 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2980:5: ( ELSE_CLAUSE controlBlock )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2980:7: ELSE_CLAUSE controlBlock
            {
                ELSE_CLAUSE496=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_failBlock19837); if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE496); }

                pushFollow(FOLLOW_controlBlock_in_failBlock19854);
                controlBlock497=controlBlock();

                state._fsp--;
                if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause.setBlock(controlBlock497); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "failBlock"



    // $ANTLR start "forIterator"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2986:1: forIterator returns [ForIterator iterator] : LPAREN compilerAnnotations (v1= var (c1= containment | ENTRY_OP v2= var c2= containment )? )? RPAREN ;
    public ForIterator forIterator() throws RecognitionException {
        ForIterator iterator = null;


        Token LPAREN498=null;
        Token RPAREN500=null;
        Variable v1 =null;

        SpecifierExpression c1 =null;

        Variable v2 =null;

        SpecifierExpression c2 =null;

        List<CompilerAnnotation> compilerAnnotations499 =null;


        ValueIterator vi = null;
        KeyValueIterator kvi = null;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2989:5: ( LPAREN compilerAnnotations (v1= var (c1= containment | ENTRY_OP v2= var c2= containment )? )? RPAREN )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2989:7: LPAREN compilerAnnotations (v1= var (c1= containment | ENTRY_OP v2= var c2= containment )? )? RPAREN
            {
                LPAREN498=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_forIterator19892); if (state.failed) return iterator;

                if ( state.backtracking==0 ) { vi = new ValueIterator(LPAREN498);
                    kvi = new KeyValueIterator(LPAREN498);
                    iterator = vi; }

                pushFollow(FOLLOW_compilerAnnotations_in_forIterator19904);
                compilerAnnotations499=compilerAnnotations();

                state._fsp--;
                if (state.failed) return iterator;

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2994:5: (v1= var (c1= containment | ENTRY_OP v2= var c2= containment )? )?
                int alt241=2;
                int LA241_0 = input.LA(1);

                if ( (LA241_0==FUNCTION_MODIFIER||(LA241_0 >= LBRACE && LA241_0 <= LBRACKET)||LA241_0==LIDENTIFIER||LA241_0==SMALLER_OP||LA241_0==UIDENTIFIER||LA241_0==VALUE_MODIFIER||LA241_0==VOID_MODIFIER) ) {
                    alt241=1;
                }
                switch (alt241) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2995:7: v1= var (c1= containment | ENTRY_OP v2= var c2= containment )?
                    {
                        pushFollow(FOLLOW_var_in_forIterator19921);
                        v1=var();

                        state._fsp--;
                        if (state.failed) return iterator;

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2996:7: (c1= containment | ENTRY_OP v2= var c2= containment )?
                        int alt240=3;
                        int LA240_0 = input.LA(1);

                        if ( (LA240_0==IN_OP) ) {
                            alt240=1;
                        }
                        else if ( (LA240_0==ENTRY_OP) ) {
                            alt240=2;
                        }
                        switch (alt240) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2997:9: c1= containment
                            {
                                if ( state.backtracking==0 ) { vi.setVariable(v1); }

                                pushFollow(FOLLOW_containment_in_forIterator19951);
                                c1=containment();

                                state._fsp--;
                                if (state.failed) return iterator;

                                if ( state.backtracking==0 ) { vi.setSpecifierExpression(c1); }

                            }
                            break;
                            case 2 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3001:9: ENTRY_OP v2= var c2= containment
                            {
                                if ( state.backtracking==0 ) { iterator = kvi; }

                                match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_forIterator19990); if (state.failed) return iterator;

                                if ( state.backtracking==0 ) { kvi.setKeyVariable(v1); }

                                pushFollow(FOLLOW_var_in_forIterator20012);
                                v2=var();

                                state._fsp--;
                                if (state.failed) return iterator;

                                if ( state.backtracking==0 ) { kvi.setValueVariable(v2); }

                                pushFollow(FOLLOW_containment_in_forIterator20034);
                                c2=containment();

                                state._fsp--;
                                if (state.failed) return iterator;

                                if ( state.backtracking==0 ) {  kvi.setSpecifierExpression(c2); }

                            }
                            break;

                        }


                    }
                    break;

                }


                if ( state.backtracking==0 ) { if (iterator!=null)
                    iterator.getCompilerAnnotations().addAll(compilerAnnotations499); }

                RPAREN500=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_forIterator20072); if (state.failed) return iterator;

                if ( state.backtracking==0 ) { iterator.setEndToken(RPAREN500); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return iterator;
    }
    // $ANTLR end "forIterator"



    // $ANTLR start "containment"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3016:1: containment returns [SpecifierExpression specifierExpression] : IN_OP ( expression )? ;
    public SpecifierExpression containment() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token IN_OP501=null;
        Expression expression502 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3017:5: ( IN_OP ( expression )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3017:7: IN_OP ( expression )?
            {
                IN_OP501=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_containment20103); if (state.failed) return specifierExpression;

                if ( state.backtracking==0 ) { specifierExpression = new SpecifierExpression(IN_OP501); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3019:7: ( expression )?
                int alt242=2;
                int LA242_0 = input.LA(1);

                if ( (LA242_0==BACKTICK||LA242_0==CHAR_LITERAL||(LA242_0 >= DECREMENT_OP && LA242_0 <= DIFFERENCE_OP)||LA242_0==FLOAT_LITERAL||LA242_0==INCREMENT_OP||(LA242_0 >= LBRACE && LA242_0 <= LBRACKET)||LA242_0==LIDENTIFIER||LA242_0==LPAREN||LA242_0==NATURAL_LITERAL||LA242_0==NOT_OP||(LA242_0 >= OUTER && LA242_0 <= PACKAGE)||LA242_0==STRING_LITERAL||LA242_0==STRING_START||(LA242_0 >= SUM_OP && LA242_0 <= SUPER)||LA242_0==THIS||LA242_0==UIDENTIFIER||(LA242_0 >= VALUE_MODIFIER && LA242_0 <= VERBATIM_STRING)) ) {
                    alt242=1;
                }
                switch (alt242) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3019:8: expression
                    {
                        pushFollow(FOLLOW_expression_in_containment20121);
                        expression502=expression();

                        state._fsp--;
                        if (state.failed) return specifierExpression;

                        if ( state.backtracking==0 ) { specifierExpression.setExpression(expression502); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "containment"



    // $ANTLR start "whileLoop"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3023:1: whileLoop returns [WhileStatement statement] : whileBlock ;
    public WhileStatement whileLoop() throws RecognitionException {
        WhileStatement statement = null;


        WhileClause whileBlock503 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3024:5: ( whileBlock )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3024:7: whileBlock
            {
                if ( state.backtracking==0 ) { statement = new WhileStatement(null); }

                pushFollow(FOLLOW_whileBlock_in_whileLoop20164);
                whileBlock503=whileBlock();

                state._fsp--;
                if (state.failed) return statement;

                if ( state.backtracking==0 ) { statement.setWhileClause(whileBlock503); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "whileLoop"



    // $ANTLR start "whileBlock"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3029:1: whileBlock returns [WhileClause clause] : WHILE_CLAUSE conditions controlBlock ;
    public WhileClause whileBlock() throws RecognitionException {
        WhileClause clause = null;


        Token WHILE_CLAUSE504=null;
        ConditionList conditions505 =null;

        Block controlBlock506 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3030:5: ( WHILE_CLAUSE conditions controlBlock )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3030:7: WHILE_CLAUSE conditions controlBlock
            {
                WHILE_CLAUSE504=(Token)match(input,WHILE_CLAUSE,FOLLOW_WHILE_CLAUSE_in_whileBlock20193); if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause = new WhileClause(WHILE_CLAUSE504); }

                pushFollow(FOLLOW_conditions_in_whileBlock20209);
                conditions505=conditions();

                state._fsp--;
                if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause.setConditionList(conditions505); }

                pushFollow(FOLLOW_controlBlock_in_whileBlock20225);
                controlBlock506=controlBlock();

                state._fsp--;
                if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause.setBlock(controlBlock506); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "whileBlock"



    // $ANTLR start "tryCatchFinally"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3038:1: tryCatchFinally returns [TryCatchStatement statement] : tryBlock ( catchBlock )* ( finallyBlock )? ;
    public TryCatchStatement tryCatchFinally() throws RecognitionException {
        TryCatchStatement statement = null;


        TryClause tryBlock507 =null;

        CatchClause catchBlock508 =null;

        FinallyClause finallyBlock509 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3039:5: ( tryBlock ( catchBlock )* ( finallyBlock )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3039:7: tryBlock ( catchBlock )* ( finallyBlock )?
            {
                if ( state.backtracking==0 ) { statement = new TryCatchStatement(null); }

                pushFollow(FOLLOW_tryBlock_in_tryCatchFinally20262);
                tryBlock507=tryBlock();

                state._fsp--;
                if (state.failed) return statement;

                if ( state.backtracking==0 ) { statement.setTryClause(tryBlock507); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3042:7: ( catchBlock )*
                loop243:
                do {
                    int alt243=2;
                    int LA243_0 = input.LA(1);

                    if ( (LA243_0==CATCH_CLAUSE) ) {
                        alt243=1;
                    }


                    switch (alt243) {
                        case 1 :
                            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3043:9: catchBlock
                        {
                            pushFollow(FOLLOW_catchBlock_in_tryCatchFinally20289);
                            catchBlock508=catchBlock();

                            state._fsp--;
                            if (state.failed) return statement;

                            if ( state.backtracking==0 ) { statement.addCatchClause(catchBlock508); }

                        }
                        break;

                        default :
                            break loop243;
                    }
                } while (true);


                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3046:7: ( finallyBlock )?
                int alt244=2;
                int LA244_0 = input.LA(1);

                if ( (LA244_0==FINALLY_CLAUSE) ) {
                    alt244=1;
                }
                switch (alt244) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3047:9: finallyBlock
                    {
                        pushFollow(FOLLOW_finallyBlock_in_tryCatchFinally20326);
                        finallyBlock509=finallyBlock();

                        state._fsp--;
                        if (state.failed) return statement;

                        if ( state.backtracking==0 ) { statement.setFinallyClause(finallyBlock509); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "tryCatchFinally"



    // $ANTLR start "tryBlock"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3052:1: tryBlock returns [TryClause clause] : TRY_CLAUSE ( resources controlBlock | block ) ;
    public TryClause tryBlock() throws RecognitionException {
        TryClause clause = null;


        Token TRY_CLAUSE510=null;
        ResourceList resources511 =null;

        Block controlBlock512 =null;

        Block block513 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3053:5: ( TRY_CLAUSE ( resources controlBlock | block ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3053:7: TRY_CLAUSE ( resources controlBlock | block )
            {
                TRY_CLAUSE510=(Token)match(input,TRY_CLAUSE,FOLLOW_TRY_CLAUSE_in_tryBlock20364); if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause = new TryClause(TRY_CLAUSE510); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3055:7: ( resources controlBlock | block )
                int alt245=2;
                int LA245_0 = input.LA(1);

                if ( (LA245_0==LPAREN) ) {
                    alt245=1;
                }
                else if ( (LA245_0==LBRACE) ) {
                    alt245=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return clause;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 245, 0, input);

                    throw nvae;

                }
                switch (alt245) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3056:9: resources controlBlock
                    {
                        pushFollow(FOLLOW_resources_in_tryBlock20391);
                        resources511=resources();

                        state._fsp--;
                        if (state.failed) return clause;

                        if ( state.backtracking==0 ) { clause.setResourceList(resources511); }

                        pushFollow(FOLLOW_controlBlock_in_tryBlock20411);
                        controlBlock512=controlBlock();

                        state._fsp--;
                        if (state.failed) return clause;

                        if ( state.backtracking==0 ) { clause.setBlock(controlBlock512); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3061:9: block
                    {
                        pushFollow(FOLLOW_block_in_tryBlock20439);
                        block513=block();

                        state._fsp--;
                        if (state.failed) return clause;

                        if ( state.backtracking==0 ) { clause.setBlock(block513); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "tryBlock"



    // $ANTLR start "catchBlock"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3066:1: catchBlock returns [CatchClause clause] : CATCH_CLAUSE catchVariable controlBlock ;
    public CatchClause catchBlock() throws RecognitionException {
        CatchClause clause = null;


        Token CATCH_CLAUSE514=null;
        CatchVariable catchVariable515 =null;

        Block controlBlock516 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3067:5: ( CATCH_CLAUSE catchVariable controlBlock )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3067:7: CATCH_CLAUSE catchVariable controlBlock
            {
                CATCH_CLAUSE514=(Token)match(input,CATCH_CLAUSE,FOLLOW_CATCH_CLAUSE_in_catchBlock20478); if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause = new CatchClause(CATCH_CLAUSE514); }

                pushFollow(FOLLOW_catchVariable_in_catchBlock20495);
                catchVariable515=catchVariable();

                state._fsp--;
                if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause.setCatchVariable(catchVariable515); }

                pushFollow(FOLLOW_controlBlock_in_catchBlock20511);
                controlBlock516=controlBlock();

                state._fsp--;
                if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause.setBlock(controlBlock516); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "catchBlock"



    // $ANTLR start "catchVariable"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3075:1: catchVariable returns [CatchVariable catchVariable] : LPAREN ( variable )? RPAREN ;
    public CatchVariable catchVariable() throws RecognitionException {
        CatchVariable catchVariable = null;


        Token LPAREN517=null;
        Token RPAREN519=null;
        Variable variable518 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3076:5: ( LPAREN ( variable )? RPAREN )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3076:7: LPAREN ( variable )? RPAREN
            {
                LPAREN517=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_catchVariable20540); if (state.failed) return catchVariable;

                if ( state.backtracking==0 ) { catchVariable =new CatchVariable(LPAREN517); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3078:7: ( variable )?
                int alt246=2;
                int LA246_0 = input.LA(1);

                if ( (LA246_0==COMPILER_ANNOTATION||LA246_0==FUNCTION_MODIFIER||(LA246_0 >= LBRACE && LA246_0 <= LBRACKET)||LA246_0==LIDENTIFIER||LA246_0==SMALLER_OP||LA246_0==UIDENTIFIER||LA246_0==VALUE_MODIFIER||LA246_0==VOID_MODIFIER) ) {
                    alt246=1;
                }
                switch (alt246) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3079:7: variable
                    {
                        pushFollow(FOLLOW_variable_in_catchVariable20565);
                        variable518=variable();

                        state._fsp--;
                        if (state.failed) return catchVariable;

                        if ( state.backtracking==0 ) { catchVariable.setVariable(variable518); }

                    }
                    break;

                }


                RPAREN519=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_catchVariable20591); if (state.failed) return catchVariable;

                if ( state.backtracking==0 ) { catchVariable.setEndToken(RPAREN519); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return catchVariable;
    }
    // $ANTLR end "catchVariable"



    // $ANTLR start "finallyBlock"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3087:1: finallyBlock returns [FinallyClause clause] : FINALLY_CLAUSE controlBlock ;
    public FinallyClause finallyBlock() throws RecognitionException {
        FinallyClause clause = null;


        Token FINALLY_CLAUSE520=null;
        Block controlBlock521 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3088:5: ( FINALLY_CLAUSE controlBlock )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3088:7: FINALLY_CLAUSE controlBlock
            {
                FINALLY_CLAUSE520=(Token)match(input,FINALLY_CLAUSE,FOLLOW_FINALLY_CLAUSE_in_finallyBlock20622); if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause = new FinallyClause(FINALLY_CLAUSE520); }

                pushFollow(FOLLOW_controlBlock_in_finallyBlock20639);
                controlBlock521=controlBlock();

                state._fsp--;
                if (state.failed) return clause;

                if ( state.backtracking==0 ) { clause.setBlock(controlBlock521); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "finallyBlock"



    // $ANTLR start "resources"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3094:1: resources returns [ResourceList resources] : LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN ;
    public ResourceList resources() throws RecognitionException {
        ResourceList resources = null;


        Token c=null;
        Token LPAREN522=null;
        Token RPAREN523=null;
        Resource r1 =null;

        Resource r2 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3095:5: ( LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3095:7: LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN
            {
                LPAREN522=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_resources20668); if (state.failed) return resources;

                if ( state.backtracking==0 ) { resources = new ResourceList(LPAREN522); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3097:5: (r1= resource (c= COMMA r2= resource )* )?
                int alt248=2;
                int LA248_0 = input.LA(1);

                if ( (LA248_0==BACKTICK||LA248_0==CHAR_LITERAL||LA248_0==COMPILER_ANNOTATION||(LA248_0 >= DECREMENT_OP && LA248_0 <= DIFFERENCE_OP)||LA248_0==FLOAT_LITERAL||LA248_0==FUNCTION_MODIFIER||LA248_0==INCREMENT_OP||(LA248_0 >= LBRACE && LA248_0 <= LBRACKET)||LA248_0==LIDENTIFIER||LA248_0==LPAREN||LA248_0==NATURAL_LITERAL||LA248_0==NOT_OP||(LA248_0 >= OUTER && LA248_0 <= PACKAGE)||LA248_0==SMALLER_OP||LA248_0==STRING_LITERAL||LA248_0==STRING_START||(LA248_0 >= SUM_OP && LA248_0 <= SUPER)||LA248_0==THIS||LA248_0==UIDENTIFIER||(LA248_0 >= VALUE_MODIFIER && LA248_0 <= VOID_MODIFIER)) ) {
                    alt248=1;
                }
                switch (alt248) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3098:5: r1= resource (c= COMMA r2= resource )*
                    {
                        pushFollow(FOLLOW_resource_in_resources20689);
                        r1=resource();

                        state._fsp--;
                        if (state.failed) return resources;

                        if ( state.backtracking==0 ) { resources.addResource(r1); }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3100:5: (c= COMMA r2= resource )*
                        loop247:
                        do {
                            int alt247=2;
                            int LA247_0 = input.LA(1);

                            if ( (LA247_0==COMMA) ) {
                                alt247=1;
                            }


                            switch (alt247) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3101:7: c= COMMA r2= resource
                                {
                                    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_resources20711); if (state.failed) return resources;

                                    if ( state.backtracking==0 ) { resources.setEndToken(c); }

                                    pushFollow(FOLLOW_resource_in_resources20730);
                                    r2=resource();

                                    state._fsp--;
                                    if (state.failed) return resources;

                                    if ( state.backtracking==0 ) { resources.addResource(r2);
                                        resources.setEndToken(null); }

                                }
                                break;

                                default :
                                    break loop247;
                            }
                        } while (true);


                    }
                    break;

                }


                RPAREN523=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_resources20758); if (state.failed) return resources;

                if ( state.backtracking==0 ) { resources.setEndToken(RPAREN523); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return resources;
    }
    // $ANTLR end "resources"



    // $ANTLR start "resource"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3112:1: resource returns [Resource resource] : ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression ) ;
    public Resource resource() throws RecognitionException {
        Resource resource = null;


        Variable specifiedVariable524 =null;

        Expression expression525 =null;


        resource = new Resource(null);
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3114:5: ( ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3114:7: ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression )
            {
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3114:7: ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression )
                int alt249=2;
                int LA249_0 = input.LA(1);

                if ( (LA249_0==COMPILER_ANNOTATION) && (synpred25_Ceylon())) {
                    alt249=1;
                }
                else if ( (LA249_0==UIDENTIFIER) ) {
                    int LA249_2 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt249=1;
                    }
                    else if ( (true) ) {
                        alt249=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return resource;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 249, 2, input);

                        throw nvae;

                    }
                }
                else if ( (LA249_0==SMALLER_OP) && (synpred25_Ceylon())) {
                    alt249=1;
                }
                else if ( (LA249_0==LBRACKET) ) {
                    int LA249_4 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt249=1;
                    }
                    else if ( (true) ) {
                        alt249=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return resource;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 249, 4, input);

                        throw nvae;

                    }
                }
                else if ( (LA249_0==LBRACE) ) {
                    int LA249_5 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt249=1;
                    }
                    else if ( (true) ) {
                        alt249=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return resource;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 249, 5, input);

                        throw nvae;

                    }
                }
                else if ( (LA249_0==VOID_MODIFIER) && (synpred25_Ceylon())) {
                    alt249=1;
                }
                else if ( (LA249_0==FUNCTION_MODIFIER) && (synpred25_Ceylon())) {
                    alt249=1;
                }
                else if ( (LA249_0==VALUE_MODIFIER) ) {
                    int LA249_8 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt249=1;
                    }
                    else if ( (true) ) {
                        alt249=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return resource;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 249, 8, input);

                        throw nvae;

                    }
                }
                else if ( (LA249_0==LIDENTIFIER) ) {
                    int LA249_9 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt249=1;
                    }
                    else if ( (true) ) {
                        alt249=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return resource;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 249, 9, input);

                        throw nvae;

                    }
                }
                else if ( (LA249_0==BACKTICK||LA249_0==CHAR_LITERAL||(LA249_0 >= DECREMENT_OP && LA249_0 <= DIFFERENCE_OP)||LA249_0==FLOAT_LITERAL||LA249_0==INCREMENT_OP||LA249_0==LPAREN||LA249_0==NATURAL_LITERAL||LA249_0==NOT_OP||(LA249_0 >= OUTER && LA249_0 <= PACKAGE)||LA249_0==STRING_LITERAL||LA249_0==STRING_START||(LA249_0 >= SUM_OP && LA249_0 <= SUPER)||LA249_0==THIS||LA249_0==VERBATIM_STRING) ) {
                    alt249=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 249, 0, input);

                    throw nvae;

                }
                switch (alt249) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3114:9: ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable
                    {
                        pushFollow(FOLLOW_specifiedVariable_in_resource20815);
                        specifiedVariable524=specifiedVariable();

                        state._fsp--;
                        if (state.failed) return resource;

                        if ( state.backtracking==0 ) { resource.setVariable(specifiedVariable524); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3117:9: expression
                    {
                        pushFollow(FOLLOW_expression_in_resource20835);
                        expression525=expression();

                        state._fsp--;
                        if (state.failed) return resource;

                        if ( state.backtracking==0 ) { resource.setExpression(expression525); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return resource;
    }
    // $ANTLR end "resource"



    // $ANTLR start "specifiedVariable"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3122:1: specifiedVariable returns [Variable variable] : v= variable ( specifier )? ;
    public Variable specifiedVariable() throws RecognitionException {
        Variable variable = null;


        Variable v =null;

        SpecifierExpression specifier526 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3123:5: (v= variable ( specifier )? )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3123:7: v= variable ( specifier )?
            {
                pushFollow(FOLLOW_variable_in_specifiedVariable20876);
                v=variable();

                state._fsp--;
                if (state.failed) return variable;

                if ( state.backtracking==0 ) { variable = v; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3125:7: ( specifier )?
                int alt250=2;
                int LA250_0 = input.LA(1);

                if ( (LA250_0==SPECIFY) ) {
                    alt250=1;
                }
                switch (alt250) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3126:9: specifier
                    {
                        pushFollow(FOLLOW_specifier_in_specifiedVariable20903);
                        specifier526=specifier();

                        state._fsp--;
                        if (state.failed) return variable;

                        if ( state.backtracking==0 ) { variable.setSpecifierExpression(specifier526); }

                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "specifiedVariable"



    // $ANTLR start "variable"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3131:1: variable returns [Variable variable] : compilerAnnotations var ;
    public Variable variable() throws RecognitionException {
        Variable variable = null;


        Variable var527 =null;

        List<CompilerAnnotation> compilerAnnotations528 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3132:5: ( compilerAnnotations var )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3132:7: compilerAnnotations var
            {
                pushFollow(FOLLOW_compilerAnnotations_in_variable20943);
                compilerAnnotations528=compilerAnnotations();

                state._fsp--;
                if (state.failed) return variable;

                pushFollow(FOLLOW_var_in_variable20951);
                var527=var();

                state._fsp--;
                if (state.failed) return variable;

                if ( state.backtracking==0 ) { variable =var527;
                    variable.getCompilerAnnotations().addAll(compilerAnnotations528); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "variable"



    // $ANTLR start "var"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3138:1: var returns [Variable variable] : ( ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )* |mn2= memberName |mn3= memberName (p3= parameters )+ ) ;
    public Variable var() throws RecognitionException {
        Variable variable = null;


        Token VOID_MODIFIER530=null;
        Token FUNCTION_MODIFIER531=null;
        Token VALUE_MODIFIER532=null;
        Identifier mn1 =null;

        ParameterList p1 =null;

        Identifier mn2 =null;

        Identifier mn3 =null;

        ParameterList p3 =null;

        StaticType type529 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3139:5: ( ( ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )* |mn2= memberName |mn3= memberName (p3= parameters )+ ) )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3139:7: ( ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )* |mn2= memberName |mn3= memberName (p3= parameters )+ )
            {
                if ( state.backtracking==0 ) { variable = new Variable(null); }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3140:5: ( ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )* |mn2= memberName |mn3= memberName (p3= parameters )+ )
                int alt254=3;
                int LA254_0 = input.LA(1);

                if ( (LA254_0==FUNCTION_MODIFIER||(LA254_0 >= LBRACE && LA254_0 <= LBRACKET)||LA254_0==SMALLER_OP||LA254_0==UIDENTIFIER||LA254_0==VALUE_MODIFIER||LA254_0==VOID_MODIFIER) ) {
                    alt254=1;
                }
                else if ( (LA254_0==LIDENTIFIER) ) {
                    int LA254_2 = input.LA(2);

                    if ( (LA254_2==COMMA||LA254_2==ENTRY_OP||LA254_2==IN_OP||LA254_2==RPAREN||LA254_2==SPECIFY) ) {
                        alt254=2;
                    }
                    else if ( (LA254_2==LPAREN) ) {
                        alt254=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return variable;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 254, 2, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return variable;}
                    NoViableAltException nvae =
                            new NoViableAltException("", 254, 0, input);

                    throw nvae;

                }
                switch (alt254) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3141:7: ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )*
                    {
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3141:7: ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER )
                        int alt251=4;
                        switch ( input.LA(1) ) {
                            case LBRACE:
                            case LBRACKET:
                            case SMALLER_OP:
                            case UIDENTIFIER:
                            {
                                alt251=1;
                            }
                            break;
                            case VOID_MODIFIER:
                            {
                                alt251=2;
                            }
                            break;
                            case FUNCTION_MODIFIER:
                            {
                                alt251=3;
                            }
                            break;
                            case VALUE_MODIFIER:
                            {
                                alt251=4;
                            }
                            break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return variable;}
                                NoViableAltException nvae =
                                        new NoViableAltException("", 251, 0, input);

                                throw nvae;

                        }

                        switch (alt251) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3141:9: type
                            {
                                pushFollow(FOLLOW_type_in_var21000);
                                type529=type();

                                state._fsp--;
                                if (state.failed) return variable;

                                if ( state.backtracking==0 ) { variable.setType(type529); }

                            }
                            break;
                            case 2 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3143:9: VOID_MODIFIER
                            {
                                VOID_MODIFIER530=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_var21021); if (state.failed) return variable;

                                if ( state.backtracking==0 ) { variable.setType(new VoidModifier(VOID_MODIFIER530)); }

                            }
                            break;
                            case 3 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3145:9: FUNCTION_MODIFIER
                            {
                                FUNCTION_MODIFIER531=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_var21041); if (state.failed) return variable;

                                if ( state.backtracking==0 ) { variable.setType(new FunctionModifier(FUNCTION_MODIFIER531)); }

                            }
                            break;
                            case 4 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3147:9: VALUE_MODIFIER
                            {
                                VALUE_MODIFIER532=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_var21061); if (state.failed) return variable;

                                if ( state.backtracking==0 ) { variable.setType(new ValueModifier(VALUE_MODIFIER532)); }

                            }
                            break;

                        }


                        pushFollow(FOLLOW_memberName_in_var21089);
                        mn1=memberName();

                        state._fsp--;
                        if (state.failed) return variable;

                        if ( state.backtracking==0 ) { variable.setIdentifier(mn1); }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3152:7: (p1= parameters )*
                        loop252:
                        do {
                            int alt252=2;
                            int LA252_0 = input.LA(1);

                            if ( (LA252_0==LPAREN) ) {
                                alt252=1;
                            }


                            switch (alt252) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3153:9: p1= parameters
                                {
                                    pushFollow(FOLLOW_parameters_in_var21119);
                                    p1=parameters();

                                    state._fsp--;
                                    if (state.failed) return variable;

                                    if ( state.backtracking==0 ) { variable.addParameterList(p1); }

                                }
                                break;

                                default :
                                    break loop252;
                            }
                        } while (true);


                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3157:7: mn2= memberName
                    {
                        if ( state.backtracking==0 ) { variable.setType( new ValueModifier(null) ); }

                        pushFollow(FOLLOW_memberName_in_var21163);
                        mn2=memberName();

                        state._fsp--;
                        if (state.failed) return variable;

                        if ( state.backtracking==0 ) { variable.setIdentifier(mn2); }

                    }
                    break;
                    case 3 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3161:7: mn3= memberName (p3= parameters )+
                    {
                        if ( state.backtracking==0 ) { variable.setType( new FunctionModifier(null) ); }

                        pushFollow(FOLLOW_memberName_in_var21196);
                        mn3=memberName();

                        state._fsp--;
                        if (state.failed) return variable;

                        if ( state.backtracking==0 ) { variable.setIdentifier(mn3); }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3164:7: (p3= parameters )+
                        int cnt253=0;
                        loop253:
                        do {
                            int alt253=2;
                            int LA253_0 = input.LA(1);

                            if ( (LA253_0==LPAREN) ) {
                                alt253=1;
                            }


                            switch (alt253) {
                                case 1 :
                                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3165:9: p3= parameters
                                {
                                    pushFollow(FOLLOW_parameters_in_var21225);
                                    p3=parameters();

                                    state._fsp--;
                                    if (state.failed) return variable;

                                    if ( state.backtracking==0 ) { variable.addParameterList(p3); }

                                }
                                break;

                                default :
                                    if ( cnt253 >= 1 ) break loop253;
                                    if (state.backtracking>0) {state.failed=true; return variable;}
                                    EarlyExitException eee =
                                            new EarlyExitException(253, input);
                                    throw eee;
                            }
                            cnt253++;
                        } while (true);


                    }
                    break;

                }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "var"



    // $ANTLR start "impliedVariable"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3171:1: impliedVariable returns [Variable variable] : memberName ;
    public Variable impliedVariable() throws RecognitionException {
        Variable variable = null;


        Identifier memberName533 =null;


        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3172:5: ( memberName )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3172:7: memberName
            {
                pushFollow(FOLLOW_memberName_in_impliedVariable21271);
                memberName533=memberName();

                state._fsp--;
                if (state.failed) return variable;

                if ( state.backtracking==0 ) { Variable v = new Variable(null);
                    v.setType(new SyntheticVariable(null));
                    v.setIdentifier(memberName533);
                    SpecifierExpression se = new SpecifierExpression(null);
                    Expression e = new Expression(null);
                    BaseMemberExpression bme = new BaseMemberExpression(null);
                    bme.setIdentifier(memberName533);
                    bme.setTypeArguments( new InferredTypeArguments(null) );
                    e.setTerm(bme);
                    se.setExpression(e);
                    v.setSpecifierExpression(se);
                    variable = v; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "impliedVariable"



    // $ANTLR start "metaLiteral"
    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3188:1: metaLiteral returns [MetaLiteral meta] : d1= BACKTICK ( MODULE p1= packagePath | PACKAGE p2= packagePath | CLASS_DEFINITION (ct= type |ot= memberName ) | INTERFACE_DEFINITION it= type | ALIAS at= type | TYPE_CONSTRAINT tt= type | ( VALUE_MODIFIER | OBJECT_DEFINITION ) ( (vt= type |vom= memberName ) vo= MEMBER_OP )? vm= memberName | FUNCTION_MODIFIER ( (ft= type |fom= memberName ) fo= MEMBER_OP )? fm= memberName | ( abbreviatedType MEMBER_OP )=>at= abbreviatedType o1= MEMBER_OP m1= memberName (ta1= typeArguments )? | ( groupedType MEMBER_OP )=>gt= groupedType o2= MEMBER_OP m2= memberName (ta2= typeArguments )? | ( memberName MEMBER_OP )=>mn= memberName o1= MEMBER_OP m4= memberName (ta1= typeArguments )? |t= type |m3= memberName (ta3= typeArguments )? ) d2= BACKTICK ;
    public MetaLiteral metaLiteral() throws RecognitionException {
        MetaLiteral meta = null;


        Token d1=null;
        Token vo=null;
        Token fo=null;
        Token o1=null;
        Token o2=null;
        Token d2=null;
        Token MODULE534=null;
        Token PACKAGE535=null;
        Token CLASS_DEFINITION536=null;
        Token INTERFACE_DEFINITION537=null;
        Token ALIAS538=null;
        Token TYPE_CONSTRAINT539=null;
        Token VALUE_MODIFIER540=null;
        Token OBJECT_DEFINITION541=null;
        Token FUNCTION_MODIFIER542=null;
        ImportPath p1 =null;

        ImportPath p2 =null;

        StaticType ct =null;

        Identifier ot =null;

        StaticType it =null;

        StaticType at =null;

        StaticType tt =null;

        StaticType vt =null;

        Identifier vom =null;

        Identifier vm =null;

        StaticType ft =null;

        Identifier fom =null;

        Identifier fm =null;

        Identifier m1 =null;

        TypeArgumentList ta1 =null;

        StaticType gt =null;

        Identifier m2 =null;

        TypeArgumentList ta2 =null;

        Identifier mn =null;

        Identifier m4 =null;

        StaticType t =null;

        Identifier m3 =null;

        TypeArgumentList ta3 =null;


        TypeLiteral tl=null;
        MemberLiteral ml=null;
        PackageLiteral p=null;
        ModuleLiteral m=null;
        ClassLiteral c=null;
        InterfaceLiteral i=null;
        AliasLiteral a=null;
        TypeParameterLiteral tp=null;
        ValueLiteral v=null;
        FunctionLiteral f=null;
        try {
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3199:5: (d1= BACKTICK ( MODULE p1= packagePath | PACKAGE p2= packagePath | CLASS_DEFINITION (ct= type |ot= memberName ) | INTERFACE_DEFINITION it= type | ALIAS at= type | TYPE_CONSTRAINT tt= type | ( VALUE_MODIFIER | OBJECT_DEFINITION ) ( (vt= type |vom= memberName ) vo= MEMBER_OP )? vm= memberName | FUNCTION_MODIFIER ( (ft= type |fom= memberName ) fo= MEMBER_OP )? fm= memberName | ( abbreviatedType MEMBER_OP )=>at= abbreviatedType o1= MEMBER_OP m1= memberName (ta1= typeArguments )? | ( groupedType MEMBER_OP )=>gt= groupedType o2= MEMBER_OP m2= memberName (ta2= typeArguments )? | ( memberName MEMBER_OP )=>mn= memberName o1= MEMBER_OP m4= memberName (ta1= typeArguments )? |t= type |m3= memberName (ta3= typeArguments )? ) d2= BACKTICK )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3199:7: d1= BACKTICK ( MODULE p1= packagePath | PACKAGE p2= packagePath | CLASS_DEFINITION (ct= type |ot= memberName ) | INTERFACE_DEFINITION it= type | ALIAS at= type | TYPE_CONSTRAINT tt= type | ( VALUE_MODIFIER | OBJECT_DEFINITION ) ( (vt= type |vom= memberName ) vo= MEMBER_OP )? vm= memberName | FUNCTION_MODIFIER ( (ft= type |fom= memberName ) fo= MEMBER_OP )? fm= memberName | ( abbreviatedType MEMBER_OP )=>at= abbreviatedType o1= MEMBER_OP m1= memberName (ta1= typeArguments )? | ( groupedType MEMBER_OP )=>gt= groupedType o2= MEMBER_OP m2= memberName (ta2= typeArguments )? | ( memberName MEMBER_OP )=>mn= memberName o1= MEMBER_OP m4= memberName (ta1= typeArguments )? |t= type |m3= memberName (ta3= typeArguments )? ) d2= BACKTICK
            {
                d1=(Token)match(input,BACKTICK,FOLLOW_BACKTICK_in_metaLiteral21313); if (state.failed) return meta;

                if ( state.backtracking==0 ) { tl = new TypeLiteral(d1);
                    meta = tl; }

                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3202:5: ( MODULE p1= packagePath | PACKAGE p2= packagePath | CLASS_DEFINITION (ct= type |ot= memberName ) | INTERFACE_DEFINITION it= type | ALIAS at= type | TYPE_CONSTRAINT tt= type | ( VALUE_MODIFIER | OBJECT_DEFINITION ) ( (vt= type |vom= memberName ) vo= MEMBER_OP )? vm= memberName | FUNCTION_MODIFIER ( (ft= type |fom= memberName ) fo= MEMBER_OP )? fm= memberName | ( abbreviatedType MEMBER_OP )=>at= abbreviatedType o1= MEMBER_OP m1= memberName (ta1= typeArguments )? | ( groupedType MEMBER_OP )=>gt= groupedType o2= MEMBER_OP m2= memberName (ta2= typeArguments )? | ( memberName MEMBER_OP )=>mn= memberName o1= MEMBER_OP m4= memberName (ta1= typeArguments )? |t= type |m3= memberName (ta3= typeArguments )? )
                int alt265=13;
                switch ( input.LA(1) ) {
                    case MODULE:
                    {
                        alt265=1;
                    }
                    break;
                    case PACKAGE:
                    {
                        alt265=2;
                    }
                    break;
                    case CLASS_DEFINITION:
                    {
                        alt265=3;
                    }
                    break;
                    case INTERFACE_DEFINITION:
                    {
                        alt265=4;
                    }
                    break;
                    case ALIAS:
                    {
                        alt265=5;
                    }
                    break;
                    case TYPE_CONSTRAINT:
                    {
                        alt265=6;
                    }
                    break;
                    case OBJECT_DEFINITION:
                    case VALUE_MODIFIER:
                    {
                        alt265=7;
                    }
                    break;
                    case FUNCTION_MODIFIER:
                    {
                        alt265=8;
                    }
                    break;
                    case UIDENTIFIER:
                    {
                        int LA265_10 = input.LA(2);

                        if ( (synpred26_Ceylon()) ) {
                            alt265=9;
                        }
                        else if ( (true) ) {
                            alt265=12;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return meta;}
                            NoViableAltException nvae =
                                    new NoViableAltException("", 265, 10, input);

                            throw nvae;

                        }
                    }
                    break;
                    case SMALLER_OP:
                    {
                        int LA265_11 = input.LA(2);

                        if ( (synpred26_Ceylon()) ) {
                            alt265=9;
                        }
                        else if ( (synpred27_Ceylon()) ) {
                            alt265=10;
                        }
                        else if ( (true) ) {
                            alt265=12;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return meta;}
                            NoViableAltException nvae =
                                    new NoViableAltException("", 265, 11, input);

                            throw nvae;

                        }
                    }
                    break;
                    case LBRACKET:
                    {
                        int LA265_12 = input.LA(2);

                        if ( (synpred26_Ceylon()) ) {
                            alt265=9;
                        }
                        else if ( (true) ) {
                            alt265=12;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return meta;}
                            NoViableAltException nvae =
                                    new NoViableAltException("", 265, 12, input);

                            throw nvae;

                        }
                    }
                    break;
                    case LBRACE:
                    {
                        int LA265_13 = input.LA(2);

                        if ( (synpred26_Ceylon()) ) {
                            alt265=9;
                        }
                        else if ( (true) ) {
                            alt265=12;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return meta;}
                            NoViableAltException nvae =
                                    new NoViableAltException("", 265, 13, input);

                            throw nvae;

                        }
                    }
                    break;
                    case LIDENTIFIER:
                    {
                        int LA265_14 = input.LA(2);

                        if ( (synpred28_Ceylon()) ) {
                            alt265=11;
                        }
                        else if ( (true) ) {
                            alt265=13;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return meta;}
                            NoViableAltException nvae =
                                    new NoViableAltException("", 265, 14, input);

                            throw nvae;

                        }
                    }
                    break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return meta;}
                        NoViableAltException nvae =
                                new NoViableAltException("", 265, 0, input);

                        throw nvae;

                }

                switch (alt265) {
                    case 1 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3203:7: MODULE p1= packagePath
                    {
                        MODULE534=(Token)match(input,MODULE,FOLLOW_MODULE_in_metaLiteral21335); if (state.failed) return meta;

                        if ( state.backtracking==0 ) { m = new ModuleLiteral(d1);
                            m.setEndToken(MODULE534);
                            meta =m; }

                        pushFollow(FOLLOW_packagePath_in_metaLiteral21353);
                        p1=packagePath();

                        state._fsp--;
                        if (state.failed) return meta;

                        if ( state.backtracking==0 ) { m.setImportPath(p1);
                            m.setEndToken(null); }

                    }
                    break;
                    case 2 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3211:7: PACKAGE p2= packagePath
                    {
                        PACKAGE535=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_metaLiteral21375); if (state.failed) return meta;

                        if ( state.backtracking==0 ) { p = new PackageLiteral(d1);
                            p.setEndToken(PACKAGE535);
                            meta =p; }

                        pushFollow(FOLLOW_packagePath_in_metaLiteral21393);
                        p2=packagePath();

                        state._fsp--;
                        if (state.failed) return meta;

                        if ( state.backtracking==0 ) { p.setImportPath(p2);
                            p.setEndToken(null); }

                    }
                    break;
                    case 3 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3219:7: CLASS_DEFINITION (ct= type |ot= memberName )
                    {
                        CLASS_DEFINITION536=(Token)match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_metaLiteral21415); if (state.failed) return meta;

                        if ( state.backtracking==0 ) { c = new ClassLiteral(d1);
                            c.setEndToken(CLASS_DEFINITION536);
                            meta =c; }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3223:7: (ct= type |ot= memberName )
                        int alt255=2;
                        int LA255_0 = input.LA(1);

                        if ( ((LA255_0 >= LBRACE && LA255_0 <= LBRACKET)||LA255_0==SMALLER_OP||LA255_0==UIDENTIFIER) ) {
                            alt255=1;
                        }
                        else if ( (LA255_0==LIDENTIFIER) ) {
                            alt255=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return meta;}
                            NoViableAltException nvae =
                                    new NoViableAltException("", 255, 0, input);

                            throw nvae;

                        }
                        switch (alt255) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3224:9: ct= type
                            {
                                pushFollow(FOLLOW_type_in_metaLiteral21443);
                                ct=type();

                                state._fsp--;
                                if (state.failed) return meta;

                                if ( state.backtracking==0 ) { c.setType(ct);
                                    c.setEndToken(null); }

                            }
                            break;
                            case 2 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3228:9: ot= memberName
                            {
                                pushFollow(FOLLOW_memberName_in_metaLiteral21473);
                                ot=memberName();

                                state._fsp--;
                                if (state.failed) return meta;

                                if ( state.backtracking==0 ) { BaseMemberExpression bme = new BaseMemberExpression(null);
                                    bme.setIdentifier(ot);
                                    bme.setTypeArguments(new InferredTypeArguments(null));
                                    c.setObjectExpression(bme); }

                            }
                            break;

                        }


                    }
                    break;
                    case 4 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3235:7: INTERFACE_DEFINITION it= type
                    {
                        INTERFACE_DEFINITION537=(Token)match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_metaLiteral21505); if (state.failed) return meta;

                        if ( state.backtracking==0 ) { i = new InterfaceLiteral(d1);
                            i.setEndToken(INTERFACE_DEFINITION537);
                            meta =i; }

                        pushFollow(FOLLOW_type_in_metaLiteral21523);
                        it=type();

                        state._fsp--;
                        if (state.failed) return meta;

                        if ( state.backtracking==0 ) { i.setType(it);
                            i.setEndToken(null); }

                    }
                    break;
                    case 5 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3243:7: ALIAS at= type
                    {
                        ALIAS538=(Token)match(input,ALIAS,FOLLOW_ALIAS_in_metaLiteral21545); if (state.failed) return meta;

                        if ( state.backtracking==0 ) { a = new AliasLiteral(d1);
                            a.setEndToken(ALIAS538);
                            meta =a; }

                        pushFollow(FOLLOW_type_in_metaLiteral21563);
                        at=type();

                        state._fsp--;
                        if (state.failed) return meta;

                        if ( state.backtracking==0 ) { a.setType(at);
                            a.setEndToken(null); }

                    }
                    break;
                    case 6 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3251:7: TYPE_CONSTRAINT tt= type
                    {
                        TYPE_CONSTRAINT539=(Token)match(input,TYPE_CONSTRAINT,FOLLOW_TYPE_CONSTRAINT_in_metaLiteral21585); if (state.failed) return meta;

                        if ( state.backtracking==0 ) { tp = new TypeParameterLiteral(d1);
                            tp.setEndToken(TYPE_CONSTRAINT539);
                            meta =tp; }

                        pushFollow(FOLLOW_type_in_metaLiteral21603);
                        tt=type();

                        state._fsp--;
                        if (state.failed) return meta;

                        if ( state.backtracking==0 ) { tp.setType(tt);
                            tp.setEndToken(null); }

                    }
                    break;
                    case 7 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3259:7: ( VALUE_MODIFIER | OBJECT_DEFINITION ) ( (vt= type |vom= memberName ) vo= MEMBER_OP )? vm= memberName
                    {
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3259:7: ( VALUE_MODIFIER | OBJECT_DEFINITION )
                        int alt256=2;
                        int LA256_0 = input.LA(1);

                        if ( (LA256_0==VALUE_MODIFIER) ) {
                            alt256=1;
                        }
                        else if ( (LA256_0==OBJECT_DEFINITION) ) {
                            alt256=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return meta;}
                            NoViableAltException nvae =
                                    new NoViableAltException("", 256, 0, input);

                            throw nvae;

                        }
                        switch (alt256) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3260:9: VALUE_MODIFIER
                            {
                                VALUE_MODIFIER540=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_metaLiteral21635); if (state.failed) return meta;

                                if ( state.backtracking==0 ) { v = new ValueLiteral(d1);
                                    v.setEndToken(VALUE_MODIFIER540);
                                    meta =v; }

                            }
                            break;
                            case 2 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3265:9: OBJECT_DEFINITION
                            {
                                OBJECT_DEFINITION541=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_metaLiteral21663); if (state.failed) return meta;

                                if ( state.backtracking==0 ) { v = new ValueLiteral(d1);
                                    v.setEndToken(OBJECT_DEFINITION541);
                                    v.setBroken(true);
                                    meta =v; }

                            }
                            break;

                        }


                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3271:7: ( (vt= type |vom= memberName ) vo= MEMBER_OP )?
                        int alt258=2;
                        int LA258_0 = input.LA(1);

                        if ( ((LA258_0 >= LBRACE && LA258_0 <= LBRACKET)||LA258_0==SMALLER_OP||LA258_0==UIDENTIFIER) ) {
                            alt258=1;
                        }
                        else if ( (LA258_0==LIDENTIFIER) ) {
                            int LA258_2 = input.LA(2);

                            if ( (LA258_2==MEMBER_OP) ) {
                                alt258=1;
                            }
                        }
                        switch (alt258) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3272:9: (vt= type |vom= memberName ) vo= MEMBER_OP
                            {
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3272:9: (vt= type |vom= memberName )
                                int alt257=2;
                                int LA257_0 = input.LA(1);

                                if ( ((LA257_0 >= LBRACE && LA257_0 <= LBRACKET)||LA257_0==SMALLER_OP||LA257_0==UIDENTIFIER) ) {
                                    alt257=1;
                                }
                                else if ( (LA257_0==LIDENTIFIER) ) {
                                    alt257=2;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return meta;}
                                    NoViableAltException nvae =
                                            new NoViableAltException("", 257, 0, input);

                                    throw nvae;

                                }
                                switch (alt257) {
                                    case 1 :
                                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3273:11: vt= type
                                    {
                                        pushFollow(FOLLOW_type_in_metaLiteral21713);
                                        vt=type();

                                        state._fsp--;
                                        if (state.failed) return meta;

                                        if ( state.backtracking==0 ) { v.setType(vt);
                                            v.setEndToken(null); }

                                    }
                                    break;
                                    case 2 :
                                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3277:11: vom= memberName
                                    {
                                        pushFollow(FOLLOW_memberName_in_metaLiteral21749);
                                        vom=memberName();

                                        state._fsp--;
                                        if (state.failed) return meta;

                                        if ( state.backtracking==0 ) { BaseMemberExpression bme = new BaseMemberExpression(null);
                                            bme.setIdentifier(vom);
                                            bme.setTypeArguments(new InferredTypeArguments(null));
                                            v.setObjectExpression(bme);
                                            v.setEndToken(null); }

                                    }
                                    break;

                                }


                                vo=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_metaLiteral21783); if (state.failed) return meta;

                                if ( state.backtracking==0 ) { v.setEndToken(vo); }

                            }
                            break;

                        }


                        pushFollow(FOLLOW_memberName_in_metaLiteral21812);
                        vm=memberName();

                        state._fsp--;
                        if (state.failed) return meta;

                        if ( state.backtracking==0 ) { v.setIdentifier(vm);
                            v.setEndToken(null); }

                    }
                    break;
                    case 8 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3291:7: FUNCTION_MODIFIER ( (ft= type |fom= memberName ) fo= MEMBER_OP )? fm= memberName
                    {
                        FUNCTION_MODIFIER542=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_metaLiteral21834); if (state.failed) return meta;

                        if ( state.backtracking==0 ) { f = new FunctionLiteral(d1);
                            f.setEndToken(FUNCTION_MODIFIER542);
                            meta =f; }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3295:7: ( (ft= type |fom= memberName ) fo= MEMBER_OP )?
                        int alt260=2;
                        int LA260_0 = input.LA(1);

                        if ( ((LA260_0 >= LBRACE && LA260_0 <= LBRACKET)||LA260_0==SMALLER_OP||LA260_0==UIDENTIFIER) ) {
                            alt260=1;
                        }
                        else if ( (LA260_0==LIDENTIFIER) ) {
                            int LA260_2 = input.LA(2);

                            if ( (LA260_2==MEMBER_OP) ) {
                                alt260=1;
                            }
                        }
                        switch (alt260) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3296:9: (ft= type |fom= memberName ) fo= MEMBER_OP
                            {
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3296:9: (ft= type |fom= memberName )
                                int alt259=2;
                                int LA259_0 = input.LA(1);

                                if ( ((LA259_0 >= LBRACE && LA259_0 <= LBRACKET)||LA259_0==SMALLER_OP||LA259_0==UIDENTIFIER) ) {
                                    alt259=1;
                                }
                                else if ( (LA259_0==LIDENTIFIER) ) {
                                    alt259=2;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return meta;}
                                    NoViableAltException nvae =
                                            new NoViableAltException("", 259, 0, input);

                                    throw nvae;

                                }
                                switch (alt259) {
                                    case 1 :
                                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3297:11: ft= type
                                    {
                                        pushFollow(FOLLOW_type_in_metaLiteral21874);
                                        ft=type();

                                        state._fsp--;
                                        if (state.failed) return meta;

                                        if ( state.backtracking==0 ) { f.setType(ft);
                                            f.setEndToken(null); }

                                    }
                                    break;
                                    case 2 :
                                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3301:11: fom= memberName
                                    {
                                        pushFollow(FOLLOW_memberName_in_metaLiteral21910);
                                        fom=memberName();

                                        state._fsp--;
                                        if (state.failed) return meta;

                                        if ( state.backtracking==0 ) { BaseMemberExpression bme = new BaseMemberExpression(null);
                                            bme.setIdentifier(fom);
                                            bme.setTypeArguments(new InferredTypeArguments(null));
                                            f.setObjectExpression(bme);
                                            f.setEndToken(null); }

                                    }
                                    break;

                                }


                                fo=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_metaLiteral21944); if (state.failed) return meta;

                                if ( state.backtracking==0 ) { f.setEndToken(fo); }

                            }
                            break;

                        }


                        pushFollow(FOLLOW_memberName_in_metaLiteral21973);
                        fm=memberName();

                        state._fsp--;
                        if (state.failed) return meta;

                        if ( state.backtracking==0 ) { f.setIdentifier(fm);
                            f.setEndToken(null); }

                    }
                    break;
                    case 9 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3315:7: ( abbreviatedType MEMBER_OP )=>at= abbreviatedType o1= MEMBER_OP m1= memberName (ta1= typeArguments )?
                    {
                        if ( state.backtracking==0 ) { ml = new MemberLiteral(d1);
                            meta = ml; }

                        pushFollow(FOLLOW_abbreviatedType_in_metaLiteral22019);
                        at=abbreviatedType();

                        state._fsp--;
                        if (state.failed) return meta;

                        if ( state.backtracking==0 ) { ml.setType(at); }

                        o1=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_metaLiteral22037); if (state.failed) return meta;

                        if ( state.backtracking==0 ) { ml.setEndToken(o1); }

                        pushFollow(FOLLOW_memberName_in_metaLiteral22055);
                        m1=memberName();

                        state._fsp--;
                        if (state.failed) return meta;

                        if ( state.backtracking==0 ) { ml.setIdentifier(m1);
                            ml.setEndToken(null); }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3325:7: (ta1= typeArguments )?
                        int alt261=2;
                        int LA261_0 = input.LA(1);

                        if ( (LA261_0==SMALLER_OP) ) {
                            alt261=1;
                        }
                        switch (alt261) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3326:9: ta1= typeArguments
                            {
                                pushFollow(FOLLOW_typeArguments_in_metaLiteral22083);
                                ta1=typeArguments();

                                state._fsp--;
                                if (state.failed) return meta;

                                if ( state.backtracking==0 ) { ml.setTypeArgumentList(ta1); }

                            }
                            break;

                        }


                    }
                    break;
                    case 10 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3330:7: ( groupedType MEMBER_OP )=>gt= groupedType o2= MEMBER_OP m2= memberName (ta2= typeArguments )?
                    {
                        if ( state.backtracking==0 ) { ml = new MemberLiteral(d1);
                            meta = ml; }

                        pushFollow(FOLLOW_groupedType_in_metaLiteral22141);
                        gt=groupedType();

                        state._fsp--;
                        if (state.failed) return meta;

                        if ( state.backtracking==0 ) { ml.setType(gt); }

                        o2=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_metaLiteral22159); if (state.failed) return meta;

                        if ( state.backtracking==0 ) { ml.setEndToken(o2); }

                        pushFollow(FOLLOW_memberName_in_metaLiteral22177);
                        m2=memberName();

                        state._fsp--;
                        if (state.failed) return meta;

                        if ( state.backtracking==0 ) { ml.setIdentifier(m2);
                            ml.setEndToken(null); }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3340:7: (ta2= typeArguments )?
                        int alt262=2;
                        int LA262_0 = input.LA(1);

                        if ( (LA262_0==SMALLER_OP) ) {
                            alt262=1;
                        }
                        switch (alt262) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3341:9: ta2= typeArguments
                            {
                                pushFollow(FOLLOW_typeArguments_in_metaLiteral22205);
                                ta2=typeArguments();

                                state._fsp--;
                                if (state.failed) return meta;

                                if ( state.backtracking==0 ) { ml.setTypeArgumentList(ta2); }

                            }
                            break;

                        }


                    }
                    break;
                    case 11 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3345:7: ( memberName MEMBER_OP )=>mn= memberName o1= MEMBER_OP m4= memberName (ta1= typeArguments )?
                    {
                        if ( state.backtracking==0 ) { ml = new MemberLiteral(d1);
                            meta = ml; }

                        pushFollow(FOLLOW_memberName_in_metaLiteral22262);
                        mn=memberName();

                        state._fsp--;
                        if (state.failed) return meta;

                        if ( state.backtracking==0 ) { BaseMemberExpression bme = new BaseMemberExpression(null);
                            bme.setIdentifier(mn);
                            bme.setTypeArguments(new InferredTypeArguments(null));
                            ml.setObjectExpression(bme); }

                        o1=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_metaLiteral22280); if (state.failed) return meta;

                        if ( state.backtracking==0 ) { ml.setEndToken(o1); }

                        pushFollow(FOLLOW_memberName_in_metaLiteral22298);
                        m4=memberName();

                        state._fsp--;
                        if (state.failed) return meta;

                        if ( state.backtracking==0 ) { ml.setIdentifier(m4);
                            ml.setEndToken(null); }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3358:7: (ta1= typeArguments )?
                        int alt263=2;
                        int LA263_0 = input.LA(1);

                        if ( (LA263_0==SMALLER_OP) ) {
                            alt263=1;
                        }
                        switch (alt263) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3359:9: ta1= typeArguments
                            {
                                pushFollow(FOLLOW_typeArguments_in_metaLiteral22326);
                                ta1=typeArguments();

                                state._fsp--;
                                if (state.failed) return meta;

                                if ( state.backtracking==0 ) { ml.setTypeArgumentList(ta1); }

                            }
                            break;

                        }


                    }
                    break;
                    case 12 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3363:7: t= type
                    {
                        pushFollow(FOLLOW_type_in_metaLiteral22362);
                        t=type();

                        state._fsp--;
                        if (state.failed) return meta;

                        if ( state.backtracking==0 ) { tl = new TypeLiteral(d1);
                            meta = tl;
                            tl.setType(t); }

                    }
                    break;
                    case 13 :
                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3368:7: m3= memberName (ta3= typeArguments )?
                    {
                        pushFollow(FOLLOW_memberName_in_metaLiteral22387);
                        m3=memberName();

                        state._fsp--;
                        if (state.failed) return meta;

                        if ( state.backtracking==0 ) { ml = new MemberLiteral(d1);
                            meta = ml;
                            ml.setIdentifier(m3); }

                        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3372:7: (ta3= typeArguments )?
                        int alt264=2;
                        int LA264_0 = input.LA(1);

                        if ( (LA264_0==SMALLER_OP) ) {
                            alt264=1;
                        }
                        switch (alt264) {
                            case 1 :
                                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3373:9: ta3= typeArguments
                            {
                                pushFollow(FOLLOW_typeArguments_in_metaLiteral22415);
                                ta3=typeArguments();

                                state._fsp--;
                                if (state.failed) return meta;

                                if ( state.backtracking==0 ) { ml.setTypeArgumentList(ta3); }

                            }
                            break;

                        }


                    }
                    break;

                }


                d2=(Token)match(input,BACKTICK,FOLLOW_BACKTICK_in_metaLiteral22450); if (state.failed) return meta;

                if ( state.backtracking==0 ) { meta.setEndToken(d2); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
            // do for sure before leaving
        }
        return meta;
    }
    // $ANTLR end "metaLiteral"

    // $ANTLR start synpred1_Ceylon
    public void synpred1_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:54:9: ( compilerAnnotations annotations MODULE )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:54:10: compilerAnnotations annotations MODULE
        {
            pushFollow(FOLLOW_compilerAnnotations_in_synpred1_Ceylon164);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_annotations_in_synpred1_Ceylon166);
            annotations();

            state._fsp--;
            if (state.failed) return ;

            match(input,MODULE,FOLLOW_MODULE_in_synpred1_Ceylon168); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred1_Ceylon

    // $ANTLR start synpred2_Ceylon
    public void synpred2_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:58:9: ( compilerAnnotations annotations PACKAGE )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:58:10: compilerAnnotations annotations PACKAGE
        {
            pushFollow(FOLLOW_compilerAnnotations_in_synpred2_Ceylon210);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_annotations_in_synpred2_Ceylon212);
            annotations();

            state._fsp--;
            if (state.failed) return ;

            match(input,PACKAGE,FOLLOW_PACKAGE_in_synpred2_Ceylon214); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred2_Ceylon

    // $ANTLR start synpred3_Ceylon
    public void synpred3_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:992:9: ( annotatedDeclarationStart )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:992:10: annotatedDeclarationStart
        {
            pushFollow(FOLLOW_annotatedDeclarationStart_in_synpred3_Ceylon6615);
            annotatedDeclarationStart();

            state._fsp--;
            if (state.failed) return ;

        }

    }
    // $ANTLR end synpred3_Ceylon

    // $ANTLR start synpred4_Ceylon
    public void synpred4_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:994:9: ( annotatedAssertionStart )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:994:10: annotatedAssertionStart
        {
            pushFollow(FOLLOW_annotatedAssertionStart_in_synpred4_Ceylon6643);
            annotatedAssertionStart();

            state._fsp--;
            if (state.failed) return ;

        }

    }
    // $ANTLR end synpred4_Ceylon

    // $ANTLR start synpred5_Ceylon
    public void synpred5_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:996:9: ( annotationListStart )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:996:10: annotationListStart
        {
            pushFollow(FOLLOW_annotationListStart_in_synpred5_Ceylon6669);
            annotationListStart();

            state._fsp--;
            if (state.failed) return ;

        }

    }
    // $ANTLR end synpred5_Ceylon

    // $ANTLR start synpred6_Ceylon
    public void synpred6_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1276:9: ( specifierParametersStart )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1276:10: specifierParametersStart
        {
            pushFollow(FOLLOW_specifierParametersStart_in_synpred6_Ceylon8311);
            specifierParametersStart();

            state._fsp--;
            if (state.failed) return ;

        }

    }
    // $ANTLR end synpred6_Ceylon

    // $ANTLR start synpred7_Ceylon
    public void synpred7_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1318:9: (~ ( LIDENTIFIER | UIDENTIFIER ) )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:
        {
            if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= LET)||(input.LA(1) >= LINE_COMMENT && input.LA(1) <= TYPE_CONSTRAINT)||(input.LA(1) >= UIdentifierPrefix && input.LA(1) <= WS) ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


        }

    }
    // $ANTLR end synpred7_Ceylon

    // $ANTLR start synpred8_Ceylon
    public void synpred8_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1384:9: ( typeArgumentsStart )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1384:10: typeArgumentsStart
        {
            pushFollow(FOLLOW_typeArgumentsStart_in_synpred8_Ceylon8985);
            typeArgumentsStart();

            state._fsp--;
            if (state.failed) return ;

        }

    }
    // $ANTLR end synpred8_Ceylon

    // $ANTLR start synpred9_Ceylon
    public void synpred9_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1395:9: ( typeArgumentsStart )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1395:10: typeArgumentsStart
        {
            pushFollow(FOLLOW_typeArgumentsStart_in_synpred9_Ceylon9066);
            typeArgumentsStart();

            state._fsp--;
            if (state.failed) return ;

        }

    }
    // $ANTLR end synpred9_Ceylon

    // $ANTLR start synpred10_Ceylon
    public void synpred10_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1472:9: ( namedArgumentStart )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1472:10: namedArgumentStart
        {
            pushFollow(FOLLOW_namedArgumentStart_in_synpred10_Ceylon9548);
            namedArgumentStart();

            state._fsp--;
            if (state.failed) return ;

        }

    }
    // $ANTLR end synpred10_Ceylon

    // $ANTLR start synpred11_Ceylon
    public void synpred11_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1476:9: ( anonymousArgument )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1476:10: anonymousArgument
        {
            pushFollow(FOLLOW_anonymousArgument_in_synpred11_Ceylon9583);
            anonymousArgument();

            state._fsp--;
            if (state.failed) return ;

        }

    }
    // $ANTLR end synpred11_Ceylon

    // $ANTLR start synpred12_Ceylon
    public void synpred12_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1724:15: ( namedArgumentStart )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1724:16: namedArgumentStart
        {
            pushFollow(FOLLOW_namedArgumentStart_in_synpred12_Ceylon11474);
            namedArgumentStart();

            state._fsp--;
            if (state.failed) return ;

        }

    }
    // $ANTLR end synpred12_Ceylon

    // $ANTLR start synpred13_Ceylon
    public void synpred13_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1786:7: ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )
        int alt266=3;
        switch ( input.LA(1) ) {
            case FUNCTION_MODIFIER:
            {
                alt266=1;
            }
            break;
            case VOID_MODIFIER:
            {
                alt266=2;
            }
            break;
            case LPAREN:
            {
                alt266=3;
            }
            break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                        new NoViableAltException("", 266, 0, input);

                throw nvae;

        }

        switch (alt266) {
            case 1 :
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1786:8: FUNCTION_MODIFIER
            {
                match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_synpred13_Ceylon11848); if (state.failed) return ;

            }
            break;
            case 2 :
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1786:26: VOID_MODIFIER
            {
                match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_synpred13_Ceylon11850); if (state.failed) return ;

            }
            break;
            case 3 :
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:1786:40: anonParametersStart
            {
                pushFollow(FOLLOW_anonParametersStart_in_synpred13_Ceylon11852);
                anonParametersStart();

                state._fsp--;
                if (state.failed) return ;

            }
            break;

        }
    }
    // $ANTLR end synpred13_Ceylon

    // $ANTLR start synpred14_Ceylon
    public void synpred14_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2372:7: ( unionType ( PRODUCT_OP | SUM_OP ) )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2372:8: unionType ( PRODUCT_OP | SUM_OP )
        {
            pushFollow(FOLLOW_unionType_in_synpred14_Ceylon15837);
            unionType();

            state._fsp--;
            if (state.failed) return ;

            if ( input.LA(1)==PRODUCT_OP||input.LA(1)==SUM_OP ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


        }

    }
    // $ANTLR end synpred14_Ceylon

    // $ANTLR start synpred15_Ceylon
    public void synpred15_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2394:7: ( type ( SPECIFY ) )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2394:8: type ( SPECIFY )
        {
            pushFollow(FOLLOW_type_in_synpred15_Ceylon15968);
            type();

            state._fsp--;
            if (state.failed) return ;

            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2394:13: ( SPECIFY )
            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2394:14: SPECIFY
            {
                match(input,SPECIFY,FOLLOW_SPECIFY_in_synpred15_Ceylon15971); if (state.failed) return ;

            }


        }

    }
    // $ANTLR end synpred15_Ceylon

    // $ANTLR start synpred16_Ceylon
    public void synpred16_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2642:7: ( namedAnnotationArgumentsStart )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2642:8: namedAnnotationArgumentsStart
        {
            pushFollow(FOLLOW_namedAnnotationArgumentsStart_in_synpred16_Ceylon17544);
            namedAnnotationArgumentsStart();

            state._fsp--;
            if (state.failed) return ;

        }

    }
    // $ANTLR end synpred16_Ceylon

    // $ANTLR start synpred17_Ceylon
    public void synpred17_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2721:7: ( compilerAnnotations ( declarationStart | specificationStart ) )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2721:8: compilerAnnotations ( declarationStart | specificationStart )
        {
            pushFollow(FOLLOW_compilerAnnotations_in_synpred17_Ceylon18130);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2721:28: ( declarationStart | specificationStart )
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==ALIAS||LA267_0==ASSIGN||LA267_0==CLASS_DEFINITION||LA267_0==DYNAMIC||LA267_0==FUNCTION_MODIFIER||LA267_0==INTERFACE_DEFINITION||(LA267_0 >= LBRACE && LA267_0 <= LBRACKET)||LA267_0==OBJECT_DEFINITION||LA267_0==SMALLER_OP||LA267_0==UIDENTIFIER||LA267_0==VALUE_MODIFIER||LA267_0==VOID_MODIFIER) ) {
                alt267=1;
            }
            else if ( (LA267_0==LIDENTIFIER) ) {
                alt267=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                        new NoViableAltException("", 267, 0, input);

                throw nvae;

            }
            switch (alt267) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2721:29: declarationStart
                {
                    pushFollow(FOLLOW_declarationStart_in_synpred17_Ceylon18133);
                    declarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2721:46: specificationStart
                {
                    pushFollow(FOLLOW_specificationStart_in_synpred17_Ceylon18135);
                    specificationStart();

                    state._fsp--;
                    if (state.failed) return ;

                }
                break;

            }


        }

    }
    // $ANTLR end synpred17_Ceylon

    // $ANTLR start synpred18_Ceylon
    public void synpred18_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2725:9: ( LIDENTIFIER )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2725:10: LIDENTIFIER
        {
            match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred18_Ceylon18180); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred18_Ceylon

    // $ANTLR start synpred19_Ceylon
    public void synpred19_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2735:7: ( compilerAnnotations ( declarationStart | specificationStart ) )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2735:8: compilerAnnotations ( declarationStart | specificationStart )
        {
            pushFollow(FOLLOW_compilerAnnotations_in_synpred19_Ceylon18263);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2735:28: ( declarationStart | specificationStart )
            int alt268=2;
            int LA268_0 = input.LA(1);

            if ( (LA268_0==ALIAS||LA268_0==ASSIGN||LA268_0==CLASS_DEFINITION||LA268_0==DYNAMIC||LA268_0==FUNCTION_MODIFIER||LA268_0==INTERFACE_DEFINITION||(LA268_0 >= LBRACE && LA268_0 <= LBRACKET)||LA268_0==OBJECT_DEFINITION||LA268_0==SMALLER_OP||LA268_0==UIDENTIFIER||LA268_0==VALUE_MODIFIER||LA268_0==VOID_MODIFIER) ) {
                alt268=1;
            }
            else if ( (LA268_0==LIDENTIFIER) ) {
                alt268=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                        new NoViableAltException("", 268, 0, input);

                throw nvae;

            }
            switch (alt268) {
                case 1 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2735:29: declarationStart
                {
                    pushFollow(FOLLOW_declarationStart_in_synpred19_Ceylon18266);
                    declarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                }
                break;
                case 2 :
                    // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2735:46: specificationStart
                {
                    pushFollow(FOLLOW_specificationStart_in_synpred19_Ceylon18268);
                    specificationStart();

                    state._fsp--;
                    if (state.failed) return ;

                }
                break;

            }


        }

    }
    // $ANTLR end synpred19_Ceylon

    // $ANTLR start synpred20_Ceylon
    public void synpred20_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2739:7: ( LIDENTIFIER )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2739:8: LIDENTIFIER
        {
            match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred20_Ceylon18305); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred20_Ceylon

    // $ANTLR start synpred21_Ceylon
    public void synpred21_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2757:7: ( LIDENTIFIER SPECIFY )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2757:8: LIDENTIFIER SPECIFY
        {
            match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred21_Ceylon18432); if (state.failed) return ;

            match(input,SPECIFY,FOLLOW_SPECIFY_in_synpred21_Ceylon18434); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred21_Ceylon

    // $ANTLR start synpred22_Ceylon
    public void synpred22_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2796:9: ( LBRACE )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2796:10: LBRACE
        {
            match(input,LBRACE,FOLLOW_LBRACE_in_synpred22_Ceylon18707); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred22_Ceylon

    // $ANTLR start synpred23_Ceylon
    public void synpred23_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2932:7: ( IS_OP )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2932:8: IS_OP
        {
            match(input,IS_OP,FOLLOW_IS_OP_in_synpred23_Ceylon19509); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred23_Ceylon

    // $ANTLR start synpred24_Ceylon
    public void synpred24_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2934:7: ( SATISFIES )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:2934:8: SATISFIES
        {
            match(input,SATISFIES,FOLLOW_SATISFIES_in_synpred24_Ceylon19530); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred24_Ceylon

    // $ANTLR start synpred25_Ceylon
    public void synpred25_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3114:9: ( COMPILER_ANNOTATION | declarationStart | specificationStart )
        int alt269=3;
        switch ( input.LA(1) ) {
            case COMPILER_ANNOTATION:
            {
                alt269=1;
            }
            break;
            case ALIAS:
            case ASSIGN:
            case CLASS_DEFINITION:
            case DYNAMIC:
            case FUNCTION_MODIFIER:
            case INTERFACE_DEFINITION:
            case LBRACE:
            case LBRACKET:
            case OBJECT_DEFINITION:
            case SMALLER_OP:
            case UIDENTIFIER:
            case VALUE_MODIFIER:
            case VOID_MODIFIER:
            {
                alt269=2;
            }
            break;
            case LIDENTIFIER:
            {
                alt269=3;
            }
            break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                        new NoViableAltException("", 269, 0, input);

                throw nvae;

        }

        switch (alt269) {
            case 1 :
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3114:10: COMPILER_ANNOTATION
            {
                match(input,COMPILER_ANNOTATION,FOLLOW_COMPILER_ANNOTATION_in_synpred25_Ceylon20797); if (state.failed) return ;

            }
            break;
            case 2 :
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3114:30: declarationStart
            {
                pushFollow(FOLLOW_declarationStart_in_synpred25_Ceylon20799);
                declarationStart();

                state._fsp--;
                if (state.failed) return ;

            }
            break;
            case 3 :
                // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3114:47: specificationStart
            {
                pushFollow(FOLLOW_specificationStart_in_synpred25_Ceylon20801);
                specificationStart();

                state._fsp--;
                if (state.failed) return ;

            }
            break;

        }
    }
    // $ANTLR end synpred25_Ceylon

    // $ANTLR start synpred26_Ceylon
    public void synpred26_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3315:7: ( abbreviatedType MEMBER_OP )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3315:8: abbreviatedType MEMBER_OP
        {
            pushFollow(FOLLOW_abbreviatedType_in_synpred26_Ceylon21996);
            abbreviatedType();

            state._fsp--;
            if (state.failed) return ;

            match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_synpred26_Ceylon21998); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred26_Ceylon

    // $ANTLR start synpred27_Ceylon
    public void synpred27_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3330:7: ( groupedType MEMBER_OP )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3330:8: groupedType MEMBER_OP
        {
            pushFollow(FOLLOW_groupedType_in_synpred27_Ceylon22118);
            groupedType();

            state._fsp--;
            if (state.failed) return ;

            match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_synpred27_Ceylon22120); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred27_Ceylon

    // $ANTLR start synpred28_Ceylon
    public void synpred28_Ceylon_fragment() throws RecognitionException {
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3345:7: ( memberName MEMBER_OP )
        // /Users/matic/Projects/ceylon/ceylon-spec/Ceylon.g:3345:8: memberName MEMBER_OP
        {
            pushFollow(FOLLOW_memberName_in_synpred28_Ceylon22239);
            memberName();

            state._fsp--;
            if (state.failed) return ;

            match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_synpred28_Ceylon22241); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred28_Ceylon

    // Delegated rules

    public boolean synpred24_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred25_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred13_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred9_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred10_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred15_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred7_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred1_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred16_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred12_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred2_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred20_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred6_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred23_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred11_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred14_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred8_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred18_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred28_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred27_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred4_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred21_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred22_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred26_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred3_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred17_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred5_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred19_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA106 dfa106 = new DFA106(this);
    protected DFA109 dfa109 = new DFA109(this);
    protected DFA115 dfa115 = new DFA115(this);
    protected DFA116 dfa116 = new DFA116(this);
    static final String DFA1_eotS =
            "\10\uffff";
    static final String DFA1_eofS =
            "\1\3\7\uffff";
    static final String DFA1_minS =
            "\1\7\1\105\2\uffff\1\7\1\160\2\7";
    static final String DFA1_maxS =
            "\1\u0083\1\105\2\uffff\1\u0083\1\u0082\2\u0083";
    static final String DFA1_acceptS =
            "\2\uffff\1\1\1\2\4\uffff";
    static final String DFA1_specialS =
            "\10\uffff}>";
    static final String[] DFA1_transitionS = {
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
                    "\1\3\5\uffff\1\3\1\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff"+
                    "\1\3\10\uffff\1\3\5\uffff\1\3\5\uffff\1\3\11\uffff\1\2\1\3\4"+
                    "\uffff\1\3\14\uffff\1\3\3\uffff\3\3",
            "\1\4",
            "",
            "",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
                    "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\10\uffff"+
                    "\1\3\5\uffff\1\3\16\uffff\1\5\1\2\1\3\4\uffff\1\3\14\uffff\1"+
                    "\3\3\uffff\3\3",
            "\1\6\21\uffff\1\7",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
                    "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\10\uffff"+
                    "\1\3\5\uffff\1\3\17\uffff\1\2\1\3\4\uffff\1\3\14\uffff\1\3\3"+
                    "\uffff\3\3",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
                    "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\10\uffff"+
                    "\1\3\5\uffff\1\3\17\uffff\1\2\1\3\4\uffff\1\3\14\uffff\1\3\3"+
                    "\uffff\3\3"
    };

    static final short[] DFA1_eot = DFA.unpackEncodedString(DFA1_eotS);
    static final short[] DFA1_eof = DFA.unpackEncodedString(DFA1_eofS);
    static final char[] DFA1_min = DFA.unpackEncodedStringToUnsignedChars(DFA1_minS);
    static final char[] DFA1_max = DFA.unpackEncodedStringToUnsignedChars(DFA1_maxS);
    static final short[] DFA1_accept = DFA.unpackEncodedString(DFA1_acceptS);
    static final short[] DFA1_special = DFA.unpackEncodedString(DFA1_specialS);
    static final short[][] DFA1_transition;

    static {
        int numStates = DFA1_transitionS.length;
        DFA1_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA1_transition[i] = DFA.unpackEncodedString(DFA1_transitionS[i]);
        }
    }

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "45:7: (ca1= compilerAnnotations SEMICOLON )?";
        }
    }
    static final String DFA106_eotS =
            "\100\uffff";
    static final String DFA106_eofS =
            "\100\uffff";
    static final String DFA106_minS =
            "\1\5\73\uffff\1\0\3\uffff";
    static final String DFA106_maxS =
            "\1\u0080\73\uffff\1\0\3\uffff";
    static final String DFA106_acceptS =
            "\1\uffff\1\6\66\uffff\1\1\2\uffff\1\2\1\uffff\1\5\1\3\1\4";
    static final String DFA106_specialS =
            "\74\uffff\1\0\3\uffff}>";
    static final String[] DFA106_transitionS = {
            "\1\1\2\uffff\2\1\12\uffff\1\1\3\uffff\2\1\1\uffff\3\1\2\uffff"+
                    "\3\1\3\uffff\6\1\11\uffff\1\1\2\uffff\1\1\1\uffff\4\1\2\uffff"+
                    "\2\1\1\75\1\73\1\uffff\1\1\2\uffff\1\74\1\uffff\1\70\1\uffff"+
                    "\1\1\4\uffff\2\1\3\uffff\2\1\4\uffff\10\1\1\uffff\1\1\1\70\7"+
                    "\1\1\70\1\1\1\uffff\1\1\1\uffff\2\1\3\uffff\1\1\6\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] DFA106_eot = DFA.unpackEncodedString(DFA106_eotS);
    static final short[] DFA106_eof = DFA.unpackEncodedString(DFA106_eofS);
    static final char[] DFA106_min = DFA.unpackEncodedStringToUnsignedChars(DFA106_minS);
    static final char[] DFA106_max = DFA.unpackEncodedStringToUnsignedChars(DFA106_maxS);
    static final short[] DFA106_accept = DFA.unpackEncodedString(DFA106_acceptS);
    static final short[] DFA106_special = DFA.unpackEncodedString(DFA106_specialS);
    static final short[][] DFA106_transition;

    static {
        int numStates = DFA106_transitionS.length;
        DFA106_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA106_transition[i] = DFA.unpackEncodedString(DFA106_transitionS[i]);
        }
    }

    class DFA106 extends DFA {

        public DFA106(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 106;
            this.eot = DFA106_eot;
            this.eof = DFA106_eof;
            this.min = DFA106_min;
            this.max = DFA106_max;
            this.accept = DFA106_accept;
            this.special = DFA106_special;
            this.transition = DFA106_transition;
        }
        public String getDescription() {
            return "()* loopback of 1257:5: ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
            int _s = s;
            switch ( s ) {
                case 0 :
                    int LA106_60 = input.LA(1);


                    int index106_60 = input.index();
                    input.rewind();

                    s = -1;
                    if ( (synpred6_Ceylon()) ) {s = 62;}

                    else if ( (true) ) {s = 63;}


                    input.seek(index106_60);

                    if ( s>=0 ) return s;
                    break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                    new NoViableAltException(getDescription(), 106, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA109_eotS =
            "\100\uffff";
    static final String DFA109_eofS =
            "\100\uffff";
    static final String DFA109_minS =
            "\1\5\1\0\76\uffff";
    static final String DFA109_maxS =
            "\1\u0080\1\0\76\uffff";
    static final String DFA109_acceptS =
            "\2\uffff\1\2\74\3\1\1";
    static final String DFA109_specialS =
            "\1\0\1\1\76\uffff}>";
    static final String[] DFA109_transitionS = {
            "\1\53\2\uffff\1\46\1\63\12\uffff\1\42\3\uffff\1\11\1\31\1\uffff"+
                    "\1\10\1\62\1\65\2\uffff\1\3\1\22\1\56\3\uffff\1\23\1\50\1\26"+
                    "\1\43\1\27\1\40\11\uffff\1\45\2\uffff\1\4\1\uffff\1\6\1\60\1"+
                    "\32\1\37\2\uffff\1\34\1\33\1\76\1\74\1\uffff\1\1\2\uffff\1\75"+
                    "\1\uffff\1\71\1\uffff\1\55\4\uffff\1\30\1\44\3\uffff\1\47\1"+
                    "\64\4\uffff\1\5\1\15\1\16\1\24\1\12\1\13\1\17\1\57\1\uffff\1"+
                    "\14\1\72\1\41\1\20\1\25\1\66\1\36\1\35\1\52\1\73\1\70\1\uffff"+
                    "\1\67\1\uffff\1\54\1\21\3\uffff\1\51\4\uffff\1\2\1\uffff\1\7"+
                    "\1\61",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA109_eot = DFA.unpackEncodedString(DFA109_eotS);
    static final short[] DFA109_eof = DFA.unpackEncodedString(DFA109_eofS);
    static final char[] DFA109_min = DFA.unpackEncodedStringToUnsignedChars(DFA109_minS);
    static final char[] DFA109_max = DFA.unpackEncodedStringToUnsignedChars(DFA109_maxS);
    static final short[] DFA109_accept = DFA.unpackEncodedString(DFA109_acceptS);
    static final short[] DFA109_special = DFA.unpackEncodedString(DFA109_specialS);
    static final short[][] DFA109_transition;

    static {
        int numStates = DFA109_transitionS.length;
        DFA109_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA109_transition[i] = DFA.unpackEncodedString(DFA109_transitionS[i]);
        }
    }

    class DFA109 extends DFA {

        public DFA109(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 109;
            this.eot = DFA109_eot;
            this.eof = DFA109_eof;
            this.min = DFA109_min;
            this.max = DFA109_max;
            this.accept = DFA109_accept;
            this.special = DFA109_special;
            this.transition = DFA109_transition;
        }
        public String getDescription() {
            return "1310:7: ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
            int _s = s;
            switch ( s ) {
                case 0 :
                    int LA109_0 = input.LA(1);


                    int index109_0 = input.index();
                    input.rewind();

                    s = -1;
                    if ( (LA109_0==LIDENTIFIER) ) {s = 1;}

                    else if ( (LA109_0==UIDENTIFIER) ) {s = 2;}

                    else if ( (LA109_0==DECREMENT_OP) && (synpred7_Ceylon())) {s = 3;}

                    else if ( (LA109_0==INCREMENT_OP) && (synpred7_Ceylon())) {s = 4;}

                    else if ( (LA109_0==POWER_OP) && (synpred7_Ceylon())) {s = 5;}

                    else if ( (LA109_0==INTERSECTION_OP) && (synpred7_Ceylon())) {s = 6;}

                    else if ( (LA109_0==UNION_OP) && (synpred7_Ceylon())) {s = 7;}

                    else if ( (LA109_0==COMPLEMENT_OP) && (synpred7_Ceylon())) {s = 8;}

                    else if ( (LA109_0==COMMA) && (synpred7_Ceylon())) {s = 9;}

                    else if ( (LA109_0==RBRACE) && (synpred7_Ceylon())) {s = 10;}

                    else if ( (LA109_0==RBRACKET) && (synpred7_Ceylon())) {s = 11;}

                    else if ( (LA109_0==RPAREN) && (synpred7_Ceylon())) {s = 12;}

                    else if ( (LA109_0==PRODUCT_OP) && (synpred7_Ceylon())) {s = 13;}

                    else if ( (LA109_0==QUOTIENT_OP) && (synpred7_Ceylon())) {s = 14;}

                    else if ( (LA109_0==REMAINDER_OP) && (synpred7_Ceylon())) {s = 15;}

                    else if ( (LA109_0==SCALE_OP) && (synpred7_Ceylon())) {s = 16;}

                    else if ( (LA109_0==SUM_OP) && (synpred7_Ceylon())) {s = 17;}

                    else if ( (LA109_0==DIFFERENCE_OP) && (synpred7_Ceylon())) {s = 18;}

                    else if ( (LA109_0==ELLIPSIS) && (synpred7_Ceylon())) {s = 19;}

                    else if ( (LA109_0==RANGE_OP) && (synpred7_Ceylon())) {s = 20;}

                    else if ( (LA109_0==SEGMENT_OP) && (synpred7_Ceylon())) {s = 21;}

                    else if ( (LA109_0==ENTRY_OP) && (synpred7_Ceylon())) {s = 22;}

                    else if ( (LA109_0==EXISTS) && (synpred7_Ceylon())) {s = 23;}

                    else if ( (LA109_0==NONEMPTY) && (synpred7_Ceylon())) {s = 24;}

                    else if ( (LA109_0==COMPARE_OP) && (synpred7_Ceylon())) {s = 25;}

                    else if ( (LA109_0==IN_OP) && (synpred7_Ceylon())) {s = 26;}

                    else if ( (LA109_0==LARGE_AS_OP) && (synpred7_Ceylon())) {s = 27;}

                    else if ( (LA109_0==LARGER_OP) && (synpred7_Ceylon())) {s = 28;}

                    else if ( (LA109_0==SMALL_AS_OP) && (synpred7_Ceylon())) {s = 29;}

                    else if ( (LA109_0==SMALLER_OP) && (synpred7_Ceylon())) {s = 30;}

                    else if ( (LA109_0==IS_OP) && (synpred7_Ceylon())) {s = 31;}

                    else if ( (LA109_0==EXTENDS) && (synpred7_Ceylon())) {s = 32;}

                    else if ( (LA109_0==SATISFIES) && (synpred7_Ceylon())) {s = 33;}

                    else if ( (LA109_0==CASE_TYPES) && (synpred7_Ceylon())) {s = 34;}

                    else if ( (LA109_0==EQUAL_OP) && (synpred7_Ceylon())) {s = 35;}

                    else if ( (LA109_0==NOT_EQUAL_OP) && (synpred7_Ceylon())) {s = 36;}

                    else if ( (LA109_0==IDENTICAL_OP) && (synpred7_Ceylon())) {s = 37;}

                    else if ( (LA109_0==AND_OP) && (synpred7_Ceylon())) {s = 38;}

                    else if ( (LA109_0==OR_OP) && (synpred7_Ceylon())) {s = 39;}

                    else if ( (LA109_0==ELSE_CLAUSE) && (synpred7_Ceylon())) {s = 40;}

                    else if ( (LA109_0==THEN_CLAUSE) && (synpred7_Ceylon())) {s = 41;}

                    else if ( (LA109_0==SPECIFY) && (synpred7_Ceylon())) {s = 42;}

                    else if ( (LA109_0==ADD_SPECIFY) && (synpred7_Ceylon())) {s = 43;}

                    else if ( (LA109_0==SUBTRACT_SPECIFY) && (synpred7_Ceylon())) {s = 44;}

                    else if ( (LA109_0==MULTIPLY_SPECIFY) && (synpred7_Ceylon())) {s = 45;}

                    else if ( (LA109_0==DIVIDE_SPECIFY) && (synpred7_Ceylon())) {s = 46;}

                    else if ( (LA109_0==REMAINDER_SPECIFY) && (synpred7_Ceylon())) {s = 47;}

                    else if ( (LA109_0==INTERSECT_SPECIFY) && (synpred7_Ceylon())) {s = 48;}

                    else if ( (LA109_0==UNION_SPECIFY) && (synpred7_Ceylon())) {s = 49;}

                    else if ( (LA109_0==COMPLEMENT_SPECIFY) && (synpred7_Ceylon())) {s = 50;}

                    else if ( (LA109_0==AND_SPECIFY) && (synpred7_Ceylon())) {s = 51;}

                    else if ( (LA109_0==OR_SPECIFY) && (synpred7_Ceylon())) {s = 52;}

                    else if ( (LA109_0==COMPUTE) && (synpred7_Ceylon())) {s = 53;}

                    else if ( (LA109_0==SEMICOLON) && (synpred7_Ceylon())) {s = 54;}

                    else if ( (LA109_0==STRING_MID) && (synpred7_Ceylon())) {s = 55;}

                    else if ( (LA109_0==STRING_END) && (synpred7_Ceylon())) {s = 56;}

                    else if ( (LA109_0==MEMBER_OP) && (synpred7_Ceylon())) {s = 57;}

                    else if ( (LA109_0==SAFE_MEMBER_OP) && (synpred7_Ceylon())) {s = 58;}

                    else if ( (LA109_0==SPREAD_OP) && (synpred7_Ceylon())) {s = 59;}

                    else if ( (LA109_0==LBRACKET) && (synpred7_Ceylon())) {s = 60;}

                    else if ( (LA109_0==LPAREN) && (synpred7_Ceylon())) {s = 61;}

                    else if ( (LA109_0==LBRACE) && (synpred7_Ceylon())) {s = 62;}


                    input.seek(index109_0);

                    if ( s>=0 ) return s;
                    break;

                case 1 :
                    int LA109_1 = input.LA(1);


                    int index109_1 = input.index();
                    input.rewind();

                    s = -1;
                    if ( (true) ) {s = 63;}

                    else if ( (synpred7_Ceylon()) ) {s = 62;}


                    input.seek(index109_1);

                    if ( s>=0 ) return s;
                    break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                    new NoViableAltException(getDescription(), 109, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA115_eotS =
            "\117\uffff";
    static final String DFA115_eofS =
            "\117\uffff";
    static final String DFA115_minS =
            "\1\5\1\0\115\uffff";
    static final String DFA115_maxS =
            "\1\u0083\1\0\115\uffff";
    static final String DFA115_acceptS =
            "\2\uffff\1\2\113\uffff\1\1";
    static final String DFA115_specialS =
            "\1\uffff\1\0\115\uffff}>";
    static final String[] DFA115_transitionS = {
            "\1\2\2\uffff\2\2\5\uffff\1\2\4\uffff\1\2\1\uffff\1\2\1\uffff"+
                    "\2\2\1\uffff\3\2\2\uffff\3\2\3\uffff\6\2\3\uffff\1\2\1\uffff"+
                    "\1\2\3\uffff\1\2\2\uffff\1\2\1\uffff\4\2\2\uffff\4\2\1\uffff"+
                    "\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff"+
                    "\3\2\2\uffff\2\2\1\uffff\2\2\1\uffff\10\2\1\uffff\6\2\1\1\12"+
                    "\2\2\uffff\2\2\3\uffff\1\2\1\uffff\5\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA115_eot = DFA.unpackEncodedString(DFA115_eotS);
    static final short[] DFA115_eof = DFA.unpackEncodedString(DFA115_eofS);
    static final char[] DFA115_min = DFA.unpackEncodedStringToUnsignedChars(DFA115_minS);
    static final char[] DFA115_max = DFA.unpackEncodedStringToUnsignedChars(DFA115_maxS);
    static final short[] DFA115_accept = DFA.unpackEncodedString(DFA115_acceptS);
    static final short[] DFA115_special = DFA.unpackEncodedString(DFA115_specialS);
    static final short[][] DFA115_transition;

    static {
        int numStates = DFA115_transitionS.length;
        DFA115_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA115_transition[i] = DFA.unpackEncodedString(DFA115_transitionS[i]);
        }
    }

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = DFA115_eot;
            this.eof = DFA115_eof;
            this.min = DFA115_min;
            this.max = DFA115_max;
            this.accept = DFA115_accept;
            this.special = DFA115_special;
            this.transition = DFA115_transition;
        }
        public String getDescription() {
            return "1383:7: ( ( typeArgumentsStart )=> typeArguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
            int _s = s;
            switch ( s ) {
                case 0 :
                    int LA115_1 = input.LA(1);


                    int index115_1 = input.index();
                    input.rewind();

                    s = -1;
                    if ( (synpred8_Ceylon()) ) {s = 78;}

                    else if ( (true) ) {s = 2;}


                    input.seek(index115_1);

                    if ( s>=0 ) return s;
                    break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                    new NoViableAltException(getDescription(), 115, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA116_eotS =
            "\77\uffff";
    static final String DFA116_eofS =
            "\77\uffff";
    static final String DFA116_minS =
            "\1\5\1\0\75\uffff";
    static final String DFA116_maxS =
            "\1\u0080\1\0\75\uffff";
    static final String DFA116_acceptS =
            "\2\uffff\1\2\73\uffff\1\1";
    static final String DFA116_specialS =
            "\1\uffff\1\0\75\uffff}>";
    static final String[] DFA116_transitionS = {
            "\1\2\2\uffff\2\2\12\uffff\1\2\3\uffff\2\2\1\uffff\3\2\2\uffff"+
                    "\3\2\3\uffff\6\2\11\uffff\1\2\2\uffff\1\2\1\uffff\4\2\2\uffff"+
                    "\4\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\4\uffff"+
                    "\2\2\3\uffff\2\2\4\uffff\10\2\1\uffff\6\2\1\1\4\2\1\uffff\1"+
                    "\2\1\uffff\2\2\3\uffff\1\2\6\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA116_eot = DFA.unpackEncodedString(DFA116_eotS);
    static final short[] DFA116_eof = DFA.unpackEncodedString(DFA116_eofS);
    static final char[] DFA116_min = DFA.unpackEncodedStringToUnsignedChars(DFA116_minS);
    static final char[] DFA116_max = DFA.unpackEncodedStringToUnsignedChars(DFA116_maxS);
    static final short[] DFA116_accept = DFA.unpackEncodedString(DFA116_acceptS);
    static final short[] DFA116_special = DFA.unpackEncodedString(DFA116_specialS);
    static final short[][] DFA116_transition;

    static {
        int numStates = DFA116_transitionS.length;
        DFA116_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA116_transition[i] = DFA.unpackEncodedString(DFA116_transitionS[i]);
        }
    }

    class DFA116 extends DFA {

        public DFA116(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 116;
            this.eot = DFA116_eot;
            this.eof = DFA116_eof;
            this.min = DFA116_min;
            this.max = DFA116_max;
            this.accept = DFA116_accept;
            this.special = DFA116_special;
            this.transition = DFA116_transition;
        }
        public String getDescription() {
            return "1394:7: ( ( typeArgumentsStart )=> typeArguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
            int _s = s;
            switch ( s ) {
                case 0 :
                    int LA116_1 = input.LA(1);


                    int index116_1 = input.index();
                    input.rewind();

                    s = -1;
                    if ( (synpred9_Ceylon()) ) {s = 62;}

                    else if ( (true) ) {s = 2;}


                    input.seek(index116_1);

                    if ( s>=0 ) return s;
                    break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                    new NoViableAltException(getDescription(), 116, _s, input);
            error(nvae);
            throw nvae;
        }

    }


    public static final BitSet FOLLOW_compilerAnnotations_in_compilationUnit86 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_compilationUnit96 = new BitSet(new long[]{0x0282000804801080L,0x200108010410082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_importDeclaration_in_compilationUnit134 = new BitSet(new long[]{0x0282000804801080L,0x200108010410082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_moduleDescriptor_in_compilationUnit180 = new BitSet(new long[]{0x0282000804801080L,0x200108010410082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_packageDescriptor_in_compilationUnit226 = new BitSet(new long[]{0x0282000804801080L,0x200108010410082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_compilerAnnotations_in_compilationUnit256 = new BitSet(new long[]{0x0202000800801080L,0x200108000010002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_declaration_in_compilationUnit258 = new BitSet(new long[]{0x0282000804801080L,0x200108010410082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_RBRACE_in_compilationUnit278 = new BitSet(new long[]{0x0282000804801080L,0x200108010410082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_EOF_in_compilationUnit305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_moduleDescriptor326 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000820L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_moduleDescriptor328 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_MODULE_in_moduleDescriptor336 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_moduleDescriptor353 = new BitSet(new long[]{0x0000000000400000L,0x0001000000000000L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_moduleDescriptor379 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_moduleDescriptor407 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_importModuleList_in_moduleDescriptor433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_importModuleList462 = new BitSet(new long[]{0x0080000004000000L,0x0001000100000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_compilerAnnotations_in_importModuleList488 = new BitSet(new long[]{0x0080000000000000L,0x0001000000000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_importModuleList490 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_importModule_in_importModuleList500 = new BitSet(new long[]{0x0080000004000000L,0x0001000100000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_RBRACE_in_importModuleList527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_packageDescriptor556 = new BitSet(new long[]{0x0000000000000000L,0x0001000004000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_packageDescriptor558 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_PACKAGE_in_packageDescriptor566 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_packageDescriptor583 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_packageDescriptor599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPORT_in_importModule628 = new BitSet(new long[]{0x0000000000400000L,0x2001000000000020L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_importModule657 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_importModule687 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_packagePath_in_importModule715 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_importModule753 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_importModule783 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_importModule810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPORT_in_importDeclaration839 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000024L});
    public static final BitSet FOLLOW_packagePath_in_importDeclaration867 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_importElementList_in_importDeclaration903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_importElementList945 = new BitSet(new long[]{0x0000004004000000L,0x2000000100000020L});
    public static final BitSet FOLLOW_importElement_in_importElementList968 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_COMMA_in_importElementList999 = new BitSet(new long[]{0x0000004005000000L,0x2000000100000020L});
    public static final BitSet FOLLOW_importElement_in_importElementList1034 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_importWildcard_in_importElementList1062 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_importWildcard_in_importElementList1116 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_importElementList1131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_importElement1167 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_importName_in_importElement1177 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000004L});
    public static final BitSet FOLLOW_SPECIFY_in_importElement1196 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000024L});
    public static final BitSet FOLLOW_importName_in_importElement1230 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_importElementList_in_importElement1294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELLIPSIS_in_importWildcard1346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_importName1375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_importName1385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_packageName_in_packagePath1419 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_packagePath1450 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000420L});
    public static final BitSet FOLLOW_packageName_in_packagePath1485 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_packageName1550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_packageName1574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_typeName1603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_annotationName1632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_memberName1661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_memberNameDeclaration1694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_memberNameDeclaration1712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_typeNameDeclaration1742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_typeNameDeclaration1760 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_objectDeclaration1790 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_objectDeclaration1806 = new BitSet(new long[]{0x0000080000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_extendedType_in_objectDeclaration1833 = new BitSet(new long[]{0x0000000000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_objectDeclaration1872 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_classBody_in_objectDeclaration1910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_objectDeclaration1940 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodDeclaration1998 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodDeclaration2018 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_voidOrInferredMethodDeclaration2044 = new BitSet(new long[]{0x0000000024000000L,0x10002C0000000104L});
    public static final BitSet FOLLOW_typeParameters_in_voidOrInferredMethodDeclaration2070 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_parameters_in_voidOrInferredMethodDeclaration2115 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_typeConstraints_in_voidOrInferredMethodDeclaration2159 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_voidOrInferredMethodDeclaration2207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_voidOrInferredMethodDeclaration2249 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_voidOrInferredMethodDeclaration2292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSIGN_in_setterDeclaration2341 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_setterDeclaration2358 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_setterDeclaration2386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_setterDeclaration2418 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_setterDeclaration2461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_inferredAttributeDeclaration2509 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_inferredAttributeDeclaration2526 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_specifier_in_inferredAttributeDeclaration2565 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_inferredAttributeDeclaration2600 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_inferredAttributeDeclaration2643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_inferredAttributeDeclaration2682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_typedMethodOrAttributeDeclaration2732 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_typedMethodOrAttributeDeclaration2752 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_typedMethodOrAttributeDeclaration2778 = new BitSet(new long[]{0x0000000020000000L,0x00002C0000000104L});
    public static final BitSet FOLLOW_typeParameters_in_typedMethodOrAttributeDeclaration2827 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_typedMethodOrAttributeDeclaration2872 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_typeConstraints_in_typedMethodOrAttributeDeclaration2927 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_typedMethodOrAttributeDeclaration2987 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_typedMethodOrAttributeDeclaration3037 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration3089 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_in_typedMethodOrAttributeDeclaration3144 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_typedMethodOrAttributeDeclaration3182 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration3228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_typedMethodOrAttributeDeclaration3269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_interfaceDeclaration3317 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_interfaceDeclaration3333 = new BitSet(new long[]{0x0000000024100000L,0x10002C8000000004L});
    public static final BitSet FOLLOW_typeParameters_in_interfaceDeclaration3360 = new BitSet(new long[]{0x0000000024100000L,0x1000248000000004L});
    public static final BitSet FOLLOW_caseTypes_in_interfaceDeclaration3398 = new BitSet(new long[]{0x0000000024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_interfaceDeclaration3452 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000004L});
    public static final BitSet FOLLOW_typeConstraints_in_interfaceDeclaration3489 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_interfaceBody_in_interfaceDeclaration3536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeSpecifier_in_interfaceDeclaration3577 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interfaceDeclaration3621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_classDeclaration3669 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_classDeclaration3686 = new BitSet(new long[]{0x0000080024100000L,0x10002C8000000104L});
    public static final BitSet FOLLOW_typeParameters_in_classDeclaration3712 = new BitSet(new long[]{0x0000080024100000L,0x1000248000000104L});
    public static final BitSet FOLLOW_parameters_in_classDeclaration3749 = new BitSet(new long[]{0x0000080024100000L,0x1000248000000004L});
    public static final BitSet FOLLOW_caseTypes_in_classDeclaration3786 = new BitSet(new long[]{0x0000080024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_extendedType_in_classDeclaration3832 = new BitSet(new long[]{0x0000000024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_classDeclaration3870 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000004L});
    public static final BitSet FOLLOW_typeConstraints_in_classDeclaration3907 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_classBody_in_classDeclaration3954 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classSpecifier_in_classDeclaration3995 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_classDeclaration4038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALIAS_in_aliasDeclaration4077 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_aliasDeclaration4093 = new BitSet(new long[]{0x0000000024000000L,0x10002C0000000000L});
    public static final BitSet FOLLOW_typeParameters_in_aliasDeclaration4120 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000000L});
    public static final BitSet FOLLOW_typeConstraints_in_aliasDeclaration4158 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000000L});
    public static final BitSet FOLLOW_typeSpecifier_in_aliasDeclaration4195 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_aliasDeclaration4230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotations_in_assertion4259 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_ASSERT_in_assertion4267 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_assertion4283 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_assertion4307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_block4336 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110618812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_block4363 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110618812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_block4390 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_interfaceBody4423 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110618812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_interfaceBody4450 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110618812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_interfaceBody4477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_classBody4506 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110618812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_classBody4532 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110618812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_classBody4559 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_extendedType4588 = new BitSet(new long[]{0x0000000000000000L,0x2020000000000000L});
    public static final BitSet FOLLOW_classInstantiation_in_extendedType4600 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_classSpecifier4639 = new BitSet(new long[]{0x0000000000000000L,0x2020000000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_classSpecifier4668 = new BitSet(new long[]{0x0000000000000000L,0x2020000000000000L});
    public static final BitSet FOLLOW_classInstantiation_in_classSpecifier4697 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_classInstantiation4747 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_SUPER_in_classInstantiation4767 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_classInstantiation4769 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_classInstantiation4782 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_positionalArguments_in_classInstantiation4819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiedTypes4869 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_abbreviatedType_in_satisfiedTypes4899 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_satisfiedTypes4938 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_abbreviatedType_in_satisfiedTypes4972 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_CASE_TYPES_in_caseTypes5024 = new BitSet(new long[]{0x0000000000000000L,0x200008000000002CL});
    public static final BitSet FOLLOW_caseType_in_caseTypes5042 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_caseTypes5071 = new BitSet(new long[]{0x0000000000000000L,0x200008000000002CL});
    public static final BitSet FOLLOW_caseType_in_caseTypes5106 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_abbreviatedType_in_caseType5160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_caseType5177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ABSTRACTED_TYPE_in_abstractedType5212 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_abbreviatedType_in_abstractedType5228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_parameters5257 = new BitSet(new long[]{0x0002000804000000L,0x200108200000002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_parameterDeclarationOrRef_in_parameters5285 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_parameters5320 = new BitSet(new long[]{0x0002000805000000L,0x200108200000002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_parameterDeclarationOrRef_in_parameters5360 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_parameters5440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_parameter5493 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_parameter5513 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_parameter5533 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_parameter5553 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_parameter5573 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_parameter5599 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000100L});
    public static final BitSet FOLLOW_specifier_in_parameter5637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameters_in_parameter5690 = new BitSet(new long[]{0x0000000020000002L,0x0000200000000100L});
    public static final BitSet FOLLOW_functionSpecifier_in_parameter5735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_parameterRef5787 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_parameterRef5813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameterRef_in_parameterDeclarationOrRef5861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_parameterDeclarationOrRef5884 = new BitSet(new long[]{0x0002000800000000L,0x200108000000002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotations_in_parameterDeclarationOrRef5892 = new BitSet(new long[]{0x0002000800000000L,0x200008000000000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_parameter_in_parameterDeclarationOrRef5902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeParameters5931 = new BitSet(new long[]{0x1000000004000000L,0x2000000001000020L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters5949 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_COMMA_in_typeParameters5977 = new BitSet(new long[]{0x1000000005000000L,0x2000000001000021L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters6011 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeParameters6062 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_typeParameter6099 = new BitSet(new long[]{0x1000000000000000L,0x2000000001000020L});
    public static final BitSet FOLLOW_variance_in_typeParameter6118 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_typeParameter6148 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_typeDefault_in_typeParameter6174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_variance6222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OUT_in_variance6238 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_typeConstraint6271 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_TYPE_CONSTRAINT_in_typeConstraint6279 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_typeConstraint6295 = new BitSet(new long[]{0x0000000000100012L,0x0000008000000100L});
    public static final BitSet FOLLOW_parameters_in_typeConstraint6329 = new BitSet(new long[]{0x0000000000100012L,0x0000008000000000L});
    public static final BitSet FOLLOW_caseTypes_in_typeConstraint6366 = new BitSet(new long[]{0x0000000000000012L,0x0000008000000000L});
    public static final BitSet FOLLOW_satisfiedTypes_in_typeConstraint6410 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_abstractedType_in_typeConstraint6448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeConstraint_in_typeConstraints6506 = new BitSet(new long[]{0x0000000004000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_stringLiteral_in_annotationListStart6543 = new BitSet(new long[]{0x0002000000000000L,0x2000000000000020L,0x0000000000000008L});
    public static final BitSet FOLLOW_annotation_in_annotationListStart6545 = new BitSet(new long[]{0x0002000000000000L,0x2000000000000020L,0x0000000000000008L});
    public static final BitSet FOLLOW_set_in_annotationListStart6555 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_declarationOrStatement6595 = new BitSet(new long[]{0x0343800B40C19880L,0x2E7508100618812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declaration_in_declarationOrStatement6622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assertion_in_declarationOrStatement6648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_declarationOrStatement6676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_declarationOrStatement6698 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotations_in_declaration6754 = new BitSet(new long[]{0x0202000800801080L,0x200008000010000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_objectDeclaration_in_declaration6777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_setterDeclaration_in_declaration6793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_voidOrInferredMethodDeclaration_in_declaration6809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_inferredAttributeDeclaration_in_declaration6825 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typedMethodOrAttributeDeclaration_in_declaration6841 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classDeclaration_in_declaration6857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceDeclaration_in_declaration6873 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_aliasDeclaration_in_declaration6889 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotatedDeclarationStart6932 = new BitSet(new long[]{0x0202000800801080L,0x200008000010002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_annotation_in_annotatedDeclarationStart6935 = new BitSet(new long[]{0x0202000800801080L,0x200008000010002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_annotatedDeclarationStart6938 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotatedAssertionStart6955 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotation_in_annotatedAssertionStart6958 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000020L});
    public static final BitSet FOLLOW_ASSERT_in_annotatedAssertionStart6961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_declarationStart6981 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart6983 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_declarationStart6996 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart6998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_declarationStart7011 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart7013 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSIGN_in_declarationStart7026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_declarationStart7034 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_declarationStart7042 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_declarationStart7050 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALIAS_in_declarationStart7058 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_declarationStart7068 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_declarationStart7070 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_declarationStart7073 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_directiveStatement_in_statement7094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_controlStatement_in_statement7110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionOrSpecificationStatement_in_statement7126 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_expressionOrSpecificationStatement7164 = new BitSet(new long[]{0x0000000021000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_expressionOrSpecificationStatement7200 = new BitSet(new long[]{0x0000000001000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_expressionOrSpecificationStatement7245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMMA_in_expressionOrSpecificationStatement7275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_directive_in_directiveStatement7324 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_directiveStatement7350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_returnDirective_in_directive7387 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_throwDirective_in_directive7403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_breakDirective_in_directive7419 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_continueDirective_in_directive7435 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RETURN_in_returnDirective7464 = new BitSet(new long[]{0x0102800300408002L,0x223500000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_functionOrExpression_in_returnDirective7491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THROW_in_throwDirective7531 = new BitSet(new long[]{0x0100800300408002L,0x223500000608812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_expression_in_throwDirective7558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BREAK_in_breakDirective7598 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CONTINUE_in_continueDirective7627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_typeSpecifier7666 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_SPECIFY_in_typeSpecifier7695 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_typeSpecifier7722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_typeDefault7751 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_typeDefault7768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_specifier7797 = new BitSet(new long[]{0x0102800300408000L,0x223500000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_functionOrExpression_in_specifier7813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_lazySpecifier7842 = new BitSet(new long[]{0x0102800300408000L,0x223500000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_functionOrExpression_in_lazySpecifier7858 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_functionSpecifier7897 = new BitSet(new long[]{0x0102800300408000L,0x223500000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_SPECIFY_in_functionSpecifier7925 = new BitSet(new long[]{0x0102800300408000L,0x223500000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_functionOrExpression_in_functionSpecifier7951 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assignmentExpression_in_expression7988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonstringLiteral_in_base8017 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringExpression_in_base8033 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaLiteral_in_base8049 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumeration_in_base8065 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuple_in_base8081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dynamicObject_in_base8097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selfReference_in_base8113 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parExpression_in_base8129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_baseReference_in_base8145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberReference_in_baseReference8187 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeReference_in_baseReference8203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_base_in_primary8238 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_qualifiedReference_in_primary8271 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_indexOrIndexRange_in_primary8289 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_parameters_in_primary8315 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_positionalArguments_in_primary8335 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_namedArguments_in_primary8356 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_LPAREN_in_specifierParametersStart8390 = new BitSet(new long[]{0x0202000804801080L,0x200108200010002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_compilerAnnotations_in_specifierParametersStart8393 = new BitSet(new long[]{0x0202000800801080L,0x200108000010002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_specifierParametersStart8395 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RPAREN_in_specifierParametersStart8399 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_SPECIFY_in_specifierParametersStart8402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_specifierParametersStart8404 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifierParametersStart_in_specifierParametersStart8406 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberSelectionOperator_in_qualifiedReference8429 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberReference_in_qualifiedReference8457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeReference_in_qualifiedReference8477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MEMBER_OP_in_memberSelectionOperator8544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SAFE_MEMBER_OP_in_memberSelectionOperator8560 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPREAD_OP_in_memberSelectionOperator8576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_enumeration8605 = new BitSet(new long[]{0x0143800304408000L,0x223500012608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_sequencedArgument_in_enumeration8633 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_enumeration8660 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tuple8689 = new BitSet(new long[]{0x0143800304408000L,0x223500022608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_sequencedArgument_in_tuple8716 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_tuple8743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_dynamicObject8776 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_namedArguments_in_dynamicObject8793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_expressions8836 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_COMMA_in_expressions8857 = new BitSet(new long[]{0x0100800301408002L,0x223500000608812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_expression_in_expressions8892 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_memberName_in_memberReference8958 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_memberReference8998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_typeReference9038 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_typeReference9079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArgumentsStart9118 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000DL});
    public static final BitSet FOLLOW_type_in_typeArgumentsStart9132 = new BitSet(new long[]{0x0000000001000000L,0x0000080000000001L});
    public static final BitSet FOLLOW_set_in_typeArgumentsStart9140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArgumentsStart9160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeArgumentsStart9175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_indexOrIndexRange9223 = new BitSet(new long[]{0x0100804300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_ELLIPSIS_in_indexOrIndexRange9251 = new BitSet(new long[]{0x0100800300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange9271 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange9297 = new BitSet(new long[]{0x0000004000000000L,0x0000020280000000L});
    public static final BitSet FOLLOW_ELLIPSIS_in_indexOrIndexRange9325 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RANGE_OP_in_indexOrIndexRange9353 = new BitSet(new long[]{0x0100800300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange9376 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_indexOrIndexRange9395 = new BitSet(new long[]{0x0100800300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange9417 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_indexOrIndexRange9451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_additiveExpression_in_index9480 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_namedArguments9510 = new BitSet(new long[]{0x0143800304408000L,0x223508012618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgument_in_namedArguments9562 = new BitSet(new long[]{0x0143800304408000L,0x223508012618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_anonymousArgument_in_namedArguments9596 = new BitSet(new long[]{0x0143800304408000L,0x223508012618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_sequencedArgument_in_namedArguments9634 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_namedArguments9661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_sequencedArgument9690 = new BitSet(new long[]{0x0143800300408000L,0x223500002608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_positionalArgument_in_sequencedArgument9722 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_spreadArgument_in_sequencedArgument9758 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_comprehension_in_sequencedArgument9794 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_COMMA_in_sequencedArgument9840 = new BitSet(new long[]{0x0143800301408002L,0x223500002608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_positionalArgument_in_sequencedArgument9880 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_spreadArgument_in_sequencedArgument9922 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_comprehension_in_sequencedArgument9964 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_namedArgument10049 = new BitSet(new long[]{0x0002000000000000L,0x200008000010002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_namedSpecifiedArgument_in_namedArgument10066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentDeclaration_in_namedArgument10088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_namedSpecifiedArgument10129 = new BitSet(new long[]{0x0000000000000000L,0x0000240000000000L});
    public static final BitSet FOLLOW_specifier_in_namedSpecifiedArgument10155 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_namedSpecifiedArgument10191 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_anonymousArgument10229 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_anonymousArgument10255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_objectArgument10284 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_objectArgument10301 = new BitSet(new long[]{0x0000080000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_extendedType_in_objectArgument10328 = new BitSet(new long[]{0x0000000000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_objectArgument10367 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_classBody_in_objectArgument10405 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_objectArgument10435 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodArgument10492 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodArgument10520 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_voidOrInferredMethodArgument10547 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_parameters_in_voidOrInferredMethodArgument10574 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_block_in_voidOrInferredMethodArgument10611 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_voidOrInferredMethodArgument10652 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_voidOrInferredMethodArgument10695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_inferredGetterArgument10752 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_inferredGetterArgument10769 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_inferredGetterArgument10796 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_inferredGetterArgument10837 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_inferredGetterArgument10880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typedMethodOrGetterArgument10938 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_typedMethodOrGetterArgument10955 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_parameters_in_typedMethodOrGetterArgument11004 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_block_in_typedMethodOrGetterArgument11054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_typedMethodOrGetterArgument11095 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument11138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_untypedMethodOrGetterArgument11196 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_untypedMethodOrGetterArgument11245 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_lazySpecifier_in_untypedMethodOrGetterArgument11285 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_untypedMethodOrGetterArgument11309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectArgument_in_namedArgumentDeclaration11346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typedMethodOrGetterArgument_in_namedArgumentDeclaration11362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_voidOrInferredMethodArgument_in_namedArgumentDeclaration11378 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_inferredGetterArgument_in_namedArgumentDeclaration11394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_untypedMethodOrGetterArgument_in_namedArgumentDeclaration11410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_namedArgumentStart11438 = new BitSet(new long[]{0x0202000800801080L,0x200008000010002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_specificationStart_in_namedArgumentStart11448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_namedArgumentStart11452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_namedAnnotationArgumentsStart11470 = new BitSet(new long[]{0x0302800B04C09080L,0x223508010618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgumentStart_in_namedAnnotationArgumentsStart11477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_iterableArgumentStart_in_namedAnnotationArgumentsStart11481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RBRACE_in_namedAnnotationArgumentsStart11485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_iterableArgumentStart11503 = new BitSet(new long[]{0x0100800300408000L,0x223500000608812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_expression_in_iterableArgumentStart11505 = new BitSet(new long[]{0x0000000001000000L,0x0000040100000000L});
    public static final BitSet FOLLOW_set_in_iterableArgumentStart11507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_specificationStart11531 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_parameters_in_specificationStart11533 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_set_in_specificationStart11536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_parExpression11562 = new BitSet(new long[]{0x0102800300408000L,0x223500000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_functionOrExpression_in_parExpression11579 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_parExpression11595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_positionalArguments11632 = new BitSet(new long[]{0x0143800304408000L,0x223500202608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_sequencedArgument_in_positionalArguments11661 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_positionalArguments11688 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_positionalArgument11725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_spreadArgument11754 = new BitSet(new long[]{0x0100800300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_unionExpression_in_spreadArgument11770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_anonParametersStart11795 = new BitSet(new long[]{0x0202000804801080L,0x200108200010002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_compilerAnnotations_in_anonParametersStart11798 = new BitSet(new long[]{0x0202000800801080L,0x200108000010002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_anonParametersStart11800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RPAREN_in_anonParametersStart11804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_nonemptyParametersStart11822 = new BitSet(new long[]{0x0202000804801080L,0x200108000010002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_compilerAnnotations_in_nonemptyParametersStart11824 = new BitSet(new long[]{0x0202000800801080L,0x200108000010002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_nonemptyParametersStart11826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousFunction_in_functionOrExpression11865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_functionOrExpression11883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_anonymousFunction11931 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_anonymousFunction11959 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_anonymousFunction11996 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000104L});
    public static final BitSet FOLLOW_parameters_in_anonymousFunction12034 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000104L});
    public static final BitSet FOLLOW_COMPUTE_in_anonymousFunction12072 = new BitSet(new long[]{0x0102800300408000L,0x223500000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_functionOrExpression_in_anonymousFunction12084 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_anonymousFunction12112 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forComprehensionClause_in_comprehension12160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifComprehensionClause_in_comprehension12176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forComprehensionClause_in_comprehensionClause12205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifComprehensionClause_in_comprehensionClause12222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionComprehensionClause_in_comprehensionClause12239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_expressionComprehensionClause12269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_forComprehensionClause12306 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_forIterator_in_forComprehensionClause12322 = new BitSet(new long[]{0x0143800300408000L,0x223500000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_comprehensionClause_in_forComprehensionClause12338 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_ifComprehensionClause12371 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_ifComprehensionClause12387 = new BitSet(new long[]{0x0143800300408000L,0x223500000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_comprehensionClause_in_ifComprehensionClause12403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_thenElseExpression_in_assignmentExpression12447 = new BitSet(new long[]{0x0800000410000222L,0x0008200800801020L,0x0000000000000001L});
    public static final BitSet FOLLOW_assignmentOperator_in_assignmentExpression12473 = new BitSet(new long[]{0x0102800300408000L,0x223500000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_functionOrExpression_in_assignmentExpression12496 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberReference_in_assignmentExpression12516 = new BitSet(new long[]{0x0102800300408002L,0x223500000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_positionalArgument_in_assignmentExpression12546 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_assignmentOperator12597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ADD_SPECIFY_in_assignmentOperator12612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUBTRACT_SPECIFY_in_assignmentOperator12622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MULTIPLY_SPECIFY_in_assignmentOperator12632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIVIDE_SPECIFY_in_assignmentOperator12642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REMAINDER_SPECIFY_in_assignmentOperator12652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERSECT_SPECIFY_in_assignmentOperator12662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNION_SPECIFY_in_assignmentOperator12672 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPLEMENT_SPECIFY_in_assignmentOperator12682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AND_SPECIFY_in_assignmentOperator12692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OR_SPECIFY_in_assignmentOperator12702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_disjunctionExpression_in_thenElseExpression12732 = new BitSet(new long[]{0x0000008000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_thenElseOperator_in_thenElseExpression12758 = new BitSet(new long[]{0x0100800300408000L,0x223500000608812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_disjunctionExpression_in_thenElseExpression12780 = new BitSet(new long[]{0x0000008000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_thenElseOperator12851 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THEN_CLAUSE_in_thenElseOperator12868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conjunctionExpression_in_disjunctionExpression12899 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_disjunctionOperator_in_disjunctionExpression12925 = new BitSet(new long[]{0x0100800300408000L,0x223500000608812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_conjunctionExpression_in_disjunctionExpression12948 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_OR_OP_in_disjunctionOperator12988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_conjunctionExpression13020 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_conjunctionOperator_in_conjunctionExpression13046 = new BitSet(new long[]{0x0100800300408000L,0x223500000608812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_conjunctionExpression13069 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_AND_OP_in_conjunctionOperator13109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_notOperator_in_logicalNegationExpression13139 = new BitSet(new long[]{0x0100800300408000L,0x223500000608812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_logicalNegationExpression13158 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_equalityExpression_in_logicalNegationExpression13174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_notOperator13203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_comparisonExpression_in_equalityExpression13235 = new BitSet(new long[]{0x0020020000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_equalityOperator_in_equalityExpression13261 = new BitSet(new long[]{0x0100800300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_comparisonExpression_in_equalityExpression13284 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EQUAL_OP_in_equalityOperator13324 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_EQUAL_OP_in_equalityOperator13341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTICAL_OP_in_equalityOperator13357 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression13388 = new BitSet(new long[]{0x3000080002100002L,0x0000188000000003L});
    public static final BitSet FOLLOW_comparisonOperator_in_comparisonExpression13416 = new BitSet(new long[]{0x0100800300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression13439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_largerOperator_in_comparisonExpression13461 = new BitSet(new long[]{0x0100800300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression13484 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_smallerOperator_in_comparisonExpression13506 = new BitSet(new long[]{0x0100800300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression13529 = new BitSet(new long[]{0x0000000000000002L,0x0000180000000000L});
    public static final BitSet FOLLOW_smallerOperator_in_comparisonExpression13564 = new BitSet(new long[]{0x0100800300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression13578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeOperator_in_comparisonExpression13613 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_comparisonExpression13635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALL_AS_OP_in_smallerOperator13681 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_smallerOperator13697 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGE_AS_OP_in_largerOperator13726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGER_OP_in_largerOperator13742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPARE_OP_in_comparisonOperator13771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_comparisonOperator13788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_typeOperator13817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_typeOperator13833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_typeOperator13849 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_TYPES_in_typeOperator13865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_entryRangeExpression_in_existenceEmptinessExpression13896 = new BitSet(new long[]{0x0000040000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_existsNonemptyOperator_in_existenceEmptinessExpression13924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXISTS_in_existsNonemptyOperator13970 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NONEMPTY_in_existsNonemptyOperator13987 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_additiveExpression_in_entryRangeExpression14018 = new BitSet(new long[]{0x0000010000000002L,0x0000020080000000L});
    public static final BitSet FOLLOW_rangeIntervalEntryOperator_in_entryRangeExpression14044 = new BitSet(new long[]{0x0100800300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_additiveExpression_in_entryRangeExpression14067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RANGE_OP_in_rangeIntervalEntryOperator14107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_rangeIntervalEntryOperator14124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ENTRY_OP_in_rangeIntervalEntryOperator14140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_scaleExpression_in_additiveExpression14171 = new BitSet(new long[]{0x0000000200000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_additiveOperator_in_additiveExpression14197 = new BitSet(new long[]{0x0100800300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_scaleExpression_in_additiveExpression14220 = new BitSet(new long[]{0x0000000200000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_SUM_OP_in_additiveOperator14260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIFFERENCE_OP_in_additiveOperator14277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_multiplicativeExpression_in_scaleExpression14306 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_scaleOperator_in_scaleExpression14332 = new BitSet(new long[]{0x0100800300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_scaleExpression_in_scaleExpression14354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionExpression_in_multiplicativeExpression14396 = new BitSet(new long[]{0x0000000000000002L,0x0000000460000000L});
    public static final BitSet FOLLOW_multiplicativeOperator_in_multiplicativeExpression14422 = new BitSet(new long[]{0x0100800300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_unionExpression_in_multiplicativeExpression14445 = new BitSet(new long[]{0x0000000000000002L,0x0000000460000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_multiplicativeOperator14485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QUOTIENT_OP_in_multiplicativeOperator14502 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REMAINDER_OP_in_multiplicativeOperator14518 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionExpression_in_unionExpression14549 = new BitSet(new long[]{0x0000000008000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_unionOperator_in_unionExpression14575 = new BitSet(new long[]{0x0100800300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_intersectionExpression_in_unionExpression14598 = new BitSet(new long[]{0x0000000008000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_unionOperator14642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPLEMENT_OP_in_unionOperator14658 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_negationComplementExpression_in_intersectionExpression14689 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_intersectionOperator_in_intersectionExpression14715 = new BitSet(new long[]{0x0100800300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_negationComplementExpression_in_intersectionExpression14738 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_intersectionOperator14782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unaryMinusOrComplementOperator_in_negationComplementExpression14811 = new BitSet(new long[]{0x0100800300408000L,0x223500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_negationComplementExpression_in_negationComplementExpression14830 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exponentiationExpression_in_negationComplementExpression14846 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIFFERENCE_OP_in_unaryMinusOrComplementOperator14875 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUM_OP_in_unaryMinusOrComplementOperator14892 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_incrementDecrementExpression_in_exponentiationExpression14921 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_exponentiationOperator_in_exponentiationExpression14947 = new BitSet(new long[]{0x0100800100408000L,0x222500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_exponentiationExpression_in_exponentiationExpression14969 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_POWER_OP_in_exponentiationOperator15009 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SCALE_OP_in_scaleOperator15039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_prefixOperator_in_incrementDecrementExpression15069 = new BitSet(new long[]{0x0100800100408000L,0x222500000600812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_incrementDecrementExpression_in_incrementDecrementExpression15087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_postfixIncrementDecrementExpression_in_incrementDecrementExpression15103 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DECREMENT_OP_in_prefixOperator15132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INCREMENT_OP_in_prefixOperator15149 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_in_postfixIncrementDecrementExpression15179 = new BitSet(new long[]{0x0100000100000002L});
    public static final BitSet FOLLOW_postfixOperator_in_postfixIncrementDecrementExpression15207 = new BitSet(new long[]{0x0100000100000002L});
    public static final BitSet FOLLOW_DECREMENT_OP_in_postfixOperator15247 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INCREMENT_OP_in_postfixOperator15264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THIS_in_selfReference15294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUPER_in_selfReference15310 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OUTER_in_selfReference15327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_selfReference15343 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NATURAL_LITERAL_in_nonstringLiteral15376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FLOAT_LITERAL_in_nonstringLiteral15393 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_nonstringLiteral15410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_stringLiteral15440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VERBATIM_STRING_in_stringLiteral15457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_stringExpression15497 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_START_in_stringExpression15513 = new BitSet(new long[]{0x0100800300408000L,0x223500000608812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_expression_in_stringExpression15531 = new BitSet(new long[]{0x0000000000000000L,0x0002800000000000L});
    public static final BitSet FOLLOW_STRING_MID_in_stringExpression15557 = new BitSet(new long[]{0x0100800300408000L,0x223500000608812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_expression_in_stringExpression15579 = new BitSet(new long[]{0x0000000000000000L,0x0002800000000000L});
    public static final BitSet FOLLOW_STRING_END_in_stringExpression15606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArguments15635 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000DL});
    public static final BitSet FOLLOW_type_in_typeArguments15663 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_COMMA_in_typeArguments15697 = new BitSet(new long[]{0x0000000001000000L,0x200008000000000DL});
    public static final BitSet FOLLOW_type_in_typeArguments15737 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeArguments15807 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_variadicType15855 = new BitSet(new long[]{0x0000000000000002L,0x0010000020000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_variadicType15881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUM_OP_in_variadicType15909 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_variadicType15938 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_defaultedType15984 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_defaultedType16010 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_defaultedType16037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tupleType16066 = new BitSet(new long[]{0x0000000000000000L,0x200008020000000CL});
    public static final BitSet FOLLOW_defaultedType_in_tupleType16094 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_COMMA_in_tupleType16128 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_defaultedType_in_tupleType16154 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_tupleType16194 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_groupedType16223 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_groupedType16234 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_groupedType16250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_iterableType16271 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_variadicType_in_iterableType16287 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_iterableType16301 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_type16339 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_ENTRY_OP_in_type16365 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_unionType_in_type16399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionType_in_unionType16464 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_unionType16505 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_intersectionType_in_unionType16545 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_abbreviatedType_in_intersectionType16635 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_intersectionType16676 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_abbreviatedType_in_intersectionType16716 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_qualifiedType_in_qualifiedOrTupleType16795 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tupleType_in_qualifiedOrTupleType16812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_iterableType_in_qualifiedOrTupleType16829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualifiedOrTupleType_in_abbreviatedType16870 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_OPTIONAL_in_abbreviatedType16932 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_LBRACKET_in_abbreviatedType16953 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_abbreviatedType16955 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_LPAREN_in_abbreviatedType16976 = new BitSet(new long[]{0x0000000000000000L,0x200008200000000CL});
    public static final BitSet FOLLOW_defaultedType_in_abbreviatedType17014 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_abbreviatedType17058 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_defaultedType_in_abbreviatedType17092 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_abbreviatedType17146 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_baseType17203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_groupedType_in_baseType17225 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_baseType_in_qualifiedType17254 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_qualifiedType17280 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_qualifiedType17293 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_typeName_in_typeNameWithArguments17333 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_typeNameWithArguments17360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotations17424 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotation_in_annotations17463 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotationName_in_annotation17504 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000104L});
    public static final BitSet FOLLOW_positionalArguments_in_annotation17527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArguments_in_annotation17556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotation_in_compilerAnnotations17660 = new BitSet(new long[]{0x0000000004000002L});
    public static final BitSet FOLLOW_COMPILER_ANNOTATION_in_compilerAnnotation17700 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotationName_in_compilerAnnotation17717 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_compilerAnnotation17747 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_stringLiteral_in_compilerAnnotation17759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_conditions17801 = new BitSet(new long[]{0x2100840300408000L,0x223500A0060A812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_condition_in_conditions17827 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_conditions17847 = new BitSet(new long[]{0x2100840301408000L,0x223500A0060A812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_condition_in_conditions17882 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_conditions17944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_existsCondition_in_condition17973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonemptyCondition_in_condition17989 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_isCondition_in_condition18005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_satisfiesCondition_in_condition18022 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_booleanCondition_in_condition18038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_booleanCondition18079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXISTS_in_existsCondition18112 = new BitSet(new long[]{0x0102800304408000L,0x223508000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_specifiedVariable_in_existsCondition18149 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_existsCondition18184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_existsCondition18204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NONEMPTY_in_nonemptyCondition18245 = new BitSet(new long[]{0x0102800304408000L,0x223508000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_specifiedVariable_in_nonemptyCondition18280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_nonemptyCondition18309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_nonemptyCondition18326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_isCondition18371 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_IS_OP_in_isCondition18398 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_isCondition18415 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_isCondition18453 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_isCondition18469 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_isCondition18492 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiesCondition18528 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_satisfiesCondition18545 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeName_in_satisfiesCondition18562 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifElse_in_controlStatement18591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchCaseElse_in_controlStatement18608 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_whileLoop_in_controlStatement18625 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forElse_in_controlStatement18642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tryCatchFinally_in_controlStatement18659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dynamic_in_controlStatement18675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_controlBlock18713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_dynamic18779 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_dynamic18796 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifBlock_in_ifElse18833 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_elseBlock_in_ifElse18861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_ifBlock18901 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_ifBlock18918 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_ifBlock18934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_elseBlock18963 = new BitSet(new long[]{0x0040000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_elseIf_in_elseBlock18990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_elseBlock19020 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifElse_in_elseIf19059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchHeader_in_switchCaseElse19096 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_cases_in_switchCaseElse19113 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SWITCH_CLAUSE_in_switchHeader19142 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_LPAREN_in_switchHeader19159 = new BitSet(new long[]{0x0100800300408000L,0x223500200608812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_expression_in_switchHeader19176 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_switchHeader19202 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_caseBlock_in_cases19241 = new BitSet(new long[]{0x0000008000080002L});
    public static final BitSet FOLLOW_defaultCaseBlock_in_cases19278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_CLAUSE_in_caseBlock19322 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_caseItemList_in_caseBlock19339 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_caseBlock19355 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_caseItemList19384 = new BitSet(new long[]{0x2100800300408000L,0x223500A00608812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_caseItem_in_caseItemList19405 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_caseItemList19432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_defaultCaseBlock19462 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_defaultCaseBlock19479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_isCaseCondition_in_caseItem19512 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_satisfiesCaseCondition_in_caseItem19533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_matchCaseCondition_in_caseItem19549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressions_in_matchCaseCondition19578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_isCaseCondition19607 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_isCaseCondition19624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiesCaseCondition19653 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_satisfiesCaseCondition19670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forBlock_in_forElse19707 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_failBlock_in_forElse19734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_forBlock19774 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_forIterator_in_forBlock19791 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_forBlock19808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_failBlock19837 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_failBlock19854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_forIterator19892 = new BitSet(new long[]{0x0002000004000000L,0x200008200000002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_compilerAnnotations_in_forIterator19904 = new BitSet(new long[]{0x0002000000000000L,0x200008200000002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_var_in_forIterator19921 = new BitSet(new long[]{0x1000010000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_containment_in_forIterator19951 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_forIterator19990 = new BitSet(new long[]{0x0002000000000000L,0x200008000000002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_var_in_forIterator20012 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_containment_in_forIterator20034 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_forIterator20072 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_containment20103 = new BitSet(new long[]{0x0100800300408002L,0x223500000608812CL,0x0000000000000006L});
    public static final BitSet FOLLOW_expression_in_containment20121 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_whileBlock_in_whileLoop20164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_WHILE_CLAUSE_in_whileBlock20193 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_whileBlock20209 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_whileBlock20225 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tryBlock_in_tryCatchFinally20262 = new BitSet(new long[]{0x0000400000200002L});
    public static final BitSet FOLLOW_catchBlock_in_tryCatchFinally20289 = new BitSet(new long[]{0x0000400000200002L});
    public static final BitSet FOLLOW_finallyBlock_in_tryCatchFinally20326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TRY_CLAUSE_in_tryBlock20364 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000104L});
    public static final BitSet FOLLOW_resources_in_tryBlock20391 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_tryBlock20411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_tryBlock20439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CATCH_CLAUSE_in_catchBlock20478 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_catchVariable_in_catchBlock20495 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_catchBlock20511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_catchVariable20540 = new BitSet(new long[]{0x0002000004000000L,0x200008200000002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variable_in_catchVariable20565 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_catchVariable20591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FINALLY_CLAUSE_in_finallyBlock20622 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_finallyBlock20639 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_resources20668 = new BitSet(new long[]{0x0102800304408000L,0x223508200608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_resource_in_resources20689 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_resources20711 = new BitSet(new long[]{0x0102800304408000L,0x223508000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_resource_in_resources20730 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_resources20758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifiedVariable_in_resource20815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_resource20835 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_specifiedVariable20876 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_specifiedVariable20903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_variable20943 = new BitSet(new long[]{0x0002000000000000L,0x200008000000002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_var_in_variable20951 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_var21000 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_var21021 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_var21041 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_var21061 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_var21089 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_var21119 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_memberName_in_var21163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_var21196 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_var21225 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_memberName_in_impliedVariable21271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BACKTICK_in_metaLiteral21313 = new BitSet(new long[]{0x0202000000800080L,0x300008000410082CL,0x0000000000000002L});
    public static final BitSet FOLLOW_MODULE_in_metaLiteral21335 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_metaLiteral21353 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_PACKAGE_in_metaLiteral21375 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_metaLiteral21393 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_metaLiteral21415 = new BitSet(new long[]{0x0000000000000000L,0x200008000000002CL});
    public static final BitSet FOLLOW_type_in_metaLiteral21443 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral21473 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_metaLiteral21505 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_metaLiteral21523 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_ALIAS_in_metaLiteral21545 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_metaLiteral21563 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_TYPE_CONSTRAINT_in_metaLiteral21585 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_metaLiteral21603 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_metaLiteral21635 = new BitSet(new long[]{0x0000000000000000L,0x200008000000002CL});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_metaLiteral21663 = new BitSet(new long[]{0x0000000000000000L,0x200008000000002CL});
    public static final BitSet FOLLOW_type_in_metaLiteral21713 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral21749 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_metaLiteral21783 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral21812 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_metaLiteral21834 = new BitSet(new long[]{0x0000000000000000L,0x200008000000002CL});
    public static final BitSet FOLLOW_type_in_metaLiteral21874 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral21910 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_metaLiteral21944 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral21973 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_abbreviatedType_in_metaLiteral22019 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_metaLiteral22037 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral22055 = new BitSet(new long[]{0x0000000000008000L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_metaLiteral22083 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_groupedType_in_metaLiteral22141 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_metaLiteral22159 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral22177 = new BitSet(new long[]{0x0000000000008000L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_metaLiteral22205 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral22262 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_metaLiteral22280 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral22298 = new BitSet(new long[]{0x0000000000008000L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_metaLiteral22326 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_type_in_metaLiteral22362 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral22387 = new BitSet(new long[]{0x0000000000008000L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_metaLiteral22415 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_BACKTICK_in_metaLiteral22450 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred1_Ceylon164 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000820L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_synpred1_Ceylon166 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_MODULE_in_synpred1_Ceylon168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred2_Ceylon210 = new BitSet(new long[]{0x0000000000000000L,0x0001000004000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_synpred2_Ceylon212 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_PACKAGE_in_synpred2_Ceylon214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_synpred3_Ceylon6615 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedAssertionStart_in_synpred4_Ceylon6643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationListStart_in_synpred5_Ceylon6669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifierParametersStart_in_synpred6_Ceylon8311 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeArgumentsStart_in_synpred8_Ceylon8985 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeArgumentsStart_in_synpred9_Ceylon9066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred10_Ceylon9548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousArgument_in_synpred11_Ceylon9583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred12_Ceylon11474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_synpred13_Ceylon11848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_synpred13_Ceylon11850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonParametersStart_in_synpred13_Ceylon11852 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_synpred14_Ceylon15837 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_set_in_synpred14_Ceylon15839 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_synpred15_Ceylon15968 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_synpred15_Ceylon15971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedAnnotationArgumentsStart_in_synpred16_Ceylon17544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred17_Ceylon18130 = new BitSet(new long[]{0x0202000800801080L,0x200008000010002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_synpred17_Ceylon18133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred17_Ceylon18135 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred18_Ceylon18180 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred19_Ceylon18263 = new BitSet(new long[]{0x0202000800801080L,0x200008000010002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_synpred19_Ceylon18266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred19_Ceylon18268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred20_Ceylon18305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred21_Ceylon18432 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_synpred21_Ceylon18434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_synpred22_Ceylon18707 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_synpred23_Ceylon19509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_synpred24_Ceylon19530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPILER_ANNOTATION_in_synpred25_Ceylon20797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_synpred25_Ceylon20799 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred25_Ceylon20801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_abbreviatedType_in_synpred26_Ceylon21996 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_synpred26_Ceylon21998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_groupedType_in_synpred27_Ceylon22118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_synpred27_Ceylon22120 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_synpred28_Ceylon22239 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_synpred28_Ceylon22241 = new BitSet(new long[]{0x0000000000000002L});

}