// $ANTLR 3.4 /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g 2014-12-08 23:21:48
 package com.redhat.ceylon.compiler.typechecker.parser;
                  import com.redhat.ceylon.compiler.typechecker.tree.MissingToken;
                  import com.redhat.ceylon.compiler.typechecker.tree.Node;
                  import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.*;
                  import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.Package; 

import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class CeylonParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "ABSTRACTED_TYPE", "ADD_SPECIFY", "AIDENTIFIER", "ALIAS", "AND_OP", "AND_SPECIFY", "ASSEMBLY", "ASSERT", "ASSIGN", "ASTRING_LITERAL", "AVERBATIM_STRING", "BACKTICK", "BREAK", "BinaryDigit", "BinaryDigits", "CASE_CLAUSE", "CASE_TYPES", "CATCH_CLAUSE", "CHAR_LITERAL", "CLASS_DEFINITION", "COMMA", "COMPARE_OP", "COMPILER_ANNOTATION", "COMPLEMENT_OP", "COMPLEMENT_SPECIFY", "COMPUTE", "CONTINUE", "CharPart", "DECREMENT_OP", "DIFFERENCE_OP", "DIVIDE_SPECIFY", "DYNAMIC", "Digit", "Digits", "ELLIPSIS", "ELSE_CLAUSE", "ENTRY_OP", "EQUAL_OP", "EXISTS", "EXTENDS", "EscapeSequence", "Exponent", "FINALLY_CLAUSE", "FLOAT_LITERAL", "FOR_CLAUSE", "FUNCTION_MODIFIER", "FractionalMagnitude", "HexDigit", "HexDigits", "IDENTICAL_OP", "IF_CLAUSE", "IMPORT", "INCREMENT_OP", "INTERFACE_DEFINITION", "INTERSECTION_OP", "INTERSECT_SPECIFY", "IN_OP", "IS_OP", "IdentifierPart", "IdentifierStart", "LARGER_OP", "LARGE_AS_OP", "LBRACE", "LBRACKET", "LET", "LIDENTIFIER", "LINE_COMMENT", "LIdentifierPrefix", "LPAREN", "Letter", "MEMBER_OP", "MODULE", "MULTIPLY_SPECIFY", "MULTI_COMMENT", "Magnitude", "NATURAL_LITERAL", "NEW", "NONEMPTY", "NOT_EQUAL_OP", "NOT_OP", "OBJECT_DEFINITION", "OPTIONAL", "OR_OP", "OR_SPECIFY", "OUT", "OUTER", "PACKAGE", "PIDENTIFIER", "POWER_OP", "PRODUCT_OP", "QUOTIENT_OP", "RANGE_OP", "RBRACE", "RBRACKET", "REMAINDER_OP", "REMAINDER_SPECIFY", "RETURN", "RPAREN", "SAFE_MEMBER_OP", "SATISFIES", "SCALE_OP", "SEGMENT_OP", "SEMICOLON", "SMALLER_OP", "SMALL_AS_OP", "SPECIFY", "SPREAD_OP", "STRING_END", "STRING_LITERAL", "STRING_MID", "STRING_START", "SUBTRACT_SPECIFY", "SUM_OP", "SUPER", "SWITCH_CLAUSE", "StringPart", "THEN_CLAUSE", "THIS", "THROW", "TRY_CLAUSE", "TYPE_CONSTRAINT", "UIDENTIFIER", "UIdentifierPrefix", "UNION_OP", "UNION_SPECIFY", "VALUE_MODIFIER", "VERBATIM_STRING", "VOID_MODIFIER", "WHILE_CLAUSE", "WS"
    };

    public static final int EOF=-1;
    public static final int ABSTRACTED_TYPE=4;
    public static final int ADD_SPECIFY=5;
    public static final int AIDENTIFIER=6;
    public static final int ALIAS=7;
    public static final int AND_OP=8;
    public static final int AND_SPECIFY=9;
    public static final int ASSEMBLY=10;
    public static final int ASSERT=11;
    public static final int ASSIGN=12;
    public static final int ASTRING_LITERAL=13;
    public static final int AVERBATIM_STRING=14;
    public static final int BACKTICK=15;
    public static final int BREAK=16;
    public static final int BinaryDigit=17;
    public static final int BinaryDigits=18;
    public static final int CASE_CLAUSE=19;
    public static final int CASE_TYPES=20;
    public static final int CATCH_CLAUSE=21;
    public static final int CHAR_LITERAL=22;
    public static final int CLASS_DEFINITION=23;
    public static final int COMMA=24;
    public static final int COMPARE_OP=25;
    public static final int COMPILER_ANNOTATION=26;
    public static final int COMPLEMENT_OP=27;
    public static final int COMPLEMENT_SPECIFY=28;
    public static final int COMPUTE=29;
    public static final int CONTINUE=30;
    public static final int CharPart=31;
    public static final int DECREMENT_OP=32;
    public static final int DIFFERENCE_OP=33;
    public static final int DIVIDE_SPECIFY=34;
    public static final int DYNAMIC=35;
    public static final int Digit=36;
    public static final int Digits=37;
    public static final int ELLIPSIS=38;
    public static final int ELSE_CLAUSE=39;
    public static final int ENTRY_OP=40;
    public static final int EQUAL_OP=41;
    public static final int EXISTS=42;
    public static final int EXTENDS=43;
    public static final int EscapeSequence=44;
    public static final int Exponent=45;
    public static final int FINALLY_CLAUSE=46;
    public static final int FLOAT_LITERAL=47;
    public static final int FOR_CLAUSE=48;
    public static final int FUNCTION_MODIFIER=49;
    public static final int FractionalMagnitude=50;
    public static final int HexDigit=51;
    public static final int HexDigits=52;
    public static final int IDENTICAL_OP=53;
    public static final int IF_CLAUSE=54;
    public static final int IMPORT=55;
    public static final int INCREMENT_OP=56;
    public static final int INTERFACE_DEFINITION=57;
    public static final int INTERSECTION_OP=58;
    public static final int INTERSECT_SPECIFY=59;
    public static final int IN_OP=60;
    public static final int IS_OP=61;
    public static final int IdentifierPart=62;
    public static final int IdentifierStart=63;
    public static final int LARGER_OP=64;
    public static final int LARGE_AS_OP=65;
    public static final int LBRACE=66;
    public static final int LBRACKET=67;
    public static final int LET=68;
    public static final int LIDENTIFIER=69;
    public static final int LINE_COMMENT=70;
    public static final int LIdentifierPrefix=71;
    public static final int LPAREN=72;
    public static final int Letter=73;
    public static final int MEMBER_OP=74;
    public static final int MODULE=75;
    public static final int MULTIPLY_SPECIFY=76;
    public static final int MULTI_COMMENT=77;
    public static final int Magnitude=78;
    public static final int NATURAL_LITERAL=79;
    public static final int NEW=80;
    public static final int NONEMPTY=81;
    public static final int NOT_EQUAL_OP=82;
    public static final int NOT_OP=83;
    public static final int OBJECT_DEFINITION=84;
    public static final int OPTIONAL=85;
    public static final int OR_OP=86;
    public static final int OR_SPECIFY=87;
    public static final int OUT=88;
    public static final int OUTER=89;
    public static final int PACKAGE=90;
    public static final int PIDENTIFIER=91;
    public static final int POWER_OP=92;
    public static final int PRODUCT_OP=93;
    public static final int QUOTIENT_OP=94;
    public static final int RANGE_OP=95;
    public static final int RBRACE=96;
    public static final int RBRACKET=97;
    public static final int REMAINDER_OP=98;
    public static final int REMAINDER_SPECIFY=99;
    public static final int RETURN=100;
    public static final int RPAREN=101;
    public static final int SAFE_MEMBER_OP=102;
    public static final int SATISFIES=103;
    public static final int SCALE_OP=104;
    public static final int SEGMENT_OP=105;
    public static final int SEMICOLON=106;
    public static final int SMALLER_OP=107;
    public static final int SMALL_AS_OP=108;
    public static final int SPECIFY=109;
    public static final int SPREAD_OP=110;
    public static final int STRING_END=111;
    public static final int STRING_LITERAL=112;
    public static final int STRING_MID=113;
    public static final int STRING_START=114;
    public static final int SUBTRACT_SPECIFY=115;
    public static final int SUM_OP=116;
    public static final int SUPER=117;
    public static final int SWITCH_CLAUSE=118;
    public static final int StringPart=119;
    public static final int THEN_CLAUSE=120;
    public static final int THIS=121;
    public static final int THROW=122;
    public static final int TRY_CLAUSE=123;
    public static final int TYPE_CONSTRAINT=124;
    public static final int UIDENTIFIER=125;
    public static final int UIdentifierPrefix=126;
    public static final int UNION_OP=127;
    public static final int UNION_SPECIFY=128;
    public static final int VALUE_MODIFIER=129;
    public static final int VERBATIM_STRING=130;
    public static final int VOID_MODIFIER=131;
    public static final int WHILE_CLAUSE=132;
    public static final int WS=133;

    // delegates
    public Parser[] getDelegates() {
        return new Parser[] {};
    }

    // delegators


    public CeylonParser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public CeylonParser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
        this.state.ruleMemo = new HashMap[248+1];
         

    }

    public String[] getTokenNames() { return CeylonParser.tokenNames; }
    public String getGrammarFileName() { return "/Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g"; }


        private java.util.List<ParseError> errors 
                = new java.util.ArrayList<ParseError>();
        @Override public void displayRecognitionError(String[] tn,
                RecognitionException re) {
            errors.add(new ParseError(this, re, tn));
        }
        public void displayRecognitionError(String[] tn, RecognitionException re, int code) {
            errors.add(new ParseError(this, re, tn, code));
        }
        public java.util.List<ParseError> getErrors() {
            return errors;
        }
        int expecting=-1;
      @Override
      protected Object getMissingSymbol(IntStream input,
                        RecognitionException e,
                        int expectedTokenType,
                        BitSet follow)
      {
        String tokenText;
        if ( expectedTokenType==Token.EOF ) tokenText = "<missing EOF>";
        else tokenText = "<missing "+getTokenNames()[expectedTokenType]+">";
        MissingToken t = new MissingToken(expectedTokenType, tokenText);
        Token current = ((TokenStream)input).LT(1);
        if ( current.getType() == Token.EOF ) {
          current = ((TokenStream)input).LT(-1);
        }
        t.setLine(current.getLine());
        t.setCharPositionInLine(current.getCharPositionInLine());
        t.setChannel(DEFAULT_TOKEN_CHANNEL);
        t.setInputStream(current.getInputStream());
        return t;
      }



    // $ANTLR start "compilationUnit"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:62:1: compilationUnit returns [CompilationUnit compilationUnit] : (ca1= compilerAnnotations SEMICOLON )? ( importDeclaration | ( compilerAnnotations annotations MODULE )=> moduleDescriptor | ( compilerAnnotations annotations PACKAGE )=> packageDescriptor |ca2= compilerAnnotations declaration | RBRACE )* EOF ;
    public CompilationUnit compilationUnit() throws RecognitionException {
        CompilationUnit compilationUnit = null;


        List<CompilerAnnotation> ca1 =null;

        List<CompilerAnnotation> ca2 =null;

        Import importDeclaration1 =null;

        ModuleDescriptor moduleDescriptor2 =null;

        PackageDescriptor packageDescriptor3 =null;

        Declaration declaration4 =null;


         compilationUnit = new CompilationUnit(null);
                    ImportList importList = new ImportList(null); 
                    compilationUnit.setImportList(importList); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:66:5: ( (ca1= compilerAnnotations SEMICOLON )? ( importDeclaration | ( compilerAnnotations annotations MODULE )=> moduleDescriptor | ( compilerAnnotations annotations PACKAGE )=> packageDescriptor |ca2= compilerAnnotations declaration | RBRACE )* EOF )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:66:7: (ca1= compilerAnnotations SEMICOLON )? ( importDeclaration | ( compilerAnnotations annotations MODULE )=> moduleDescriptor | ( compilerAnnotations annotations PACKAGE )=> packageDescriptor |ca2= compilerAnnotations declaration | RBRACE )* EOF
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:66:7: (ca1= compilerAnnotations SEMICOLON )?
            int alt1=2;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:67:9: ca1= compilerAnnotations SEMICOLON
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_compilationUnit86);
                    ca1=compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return compilationUnit;

                    match(input,SEMICOLON,FOLLOW_SEMICOLON_in_compilationUnit96); if (state.failed) return compilationUnit;

                    if ( state.backtracking==0 ) { compilationUnit.getCompilerAnnotations().addAll(ca1); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:71:7: ( importDeclaration | ( compilerAnnotations annotations MODULE )=> moduleDescriptor | ( compilerAnnotations annotations PACKAGE )=> packageDescriptor |ca2= compilerAnnotations declaration | RBRACE )*
            loop2:
            do {
                int alt2=6;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==IMPORT) ) {
                    alt2=1;
                }
                else if ( (LA2_0==COMPILER_ANNOTATION) ) {
                    int LA2_3 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==STRING_LITERAL) ) {
                    int LA2_4 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==VERBATIM_STRING) ) {
                    int LA2_5 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==LIDENTIFIER) ) {
                    int LA2_6 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==MODULE) && (synpred1_Ceylon())) {
                    alt2=2;
                }
                else if ( (LA2_0==PACKAGE) && (synpred2_Ceylon())) {
                    alt2=3;
                }
                else if ( (LA2_0==ALIAS||LA2_0==ASSIGN||LA2_0==CLASS_DEFINITION||LA2_0==DYNAMIC||LA2_0==FUNCTION_MODIFIER||LA2_0==INTERFACE_DEFINITION||(LA2_0 >= LBRACE && LA2_0 <= LBRACKET)||LA2_0==OBJECT_DEFINITION||LA2_0==SMALLER_OP||LA2_0==UIDENTIFIER||LA2_0==VALUE_MODIFIER||LA2_0==VOID_MODIFIER) ) {
                    alt2=4;
                }
                else if ( (LA2_0==RBRACE) ) {
                    alt2=5;
                }


                switch (alt2) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:72:9: importDeclaration
            	    {
            	    pushFollow(FOLLOW_importDeclaration_in_compilationUnit134);
            	    importDeclaration1=importDeclaration();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { importList.addImport(importDeclaration1); 
            	              compilationUnit.connect(importList); }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:76:9: ( compilerAnnotations annotations MODULE )=> moduleDescriptor
            	    {
            	    pushFollow(FOLLOW_moduleDescriptor_in_compilationUnit180);
            	    moduleDescriptor2=moduleDescriptor();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { compilationUnit.addModuleDescriptor(moduleDescriptor2); }

            	    }
            	    break;
            	case 3 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:80:9: ( compilerAnnotations annotations PACKAGE )=> packageDescriptor
            	    {
            	    pushFollow(FOLLOW_packageDescriptor_in_compilationUnit226);
            	    packageDescriptor3=packageDescriptor();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { compilationUnit.addPackageDescriptor(packageDescriptor3); }

            	    }
            	    break;
            	case 4 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:84:9: ca2= compilerAnnotations declaration
            	    {
            	    pushFollow(FOLLOW_compilerAnnotations_in_compilationUnit256);
            	    ca2=compilerAnnotations();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    pushFollow(FOLLOW_declaration_in_compilationUnit258);
            	    declaration4=declaration();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { if (declaration4!=null)
            	                  compilationUnit.addDeclaration(declaration4); 
            	              if (declaration4!=null)
            	                  declaration4.getCompilerAnnotations().addAll(ca2); }

            	    }
            	    break;
            	case 5 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:89:9: RBRACE
            	    {
            	    match(input,RBRACE,FOLLOW_RBRACE_in_compilationUnit278); if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
            	                  new MismatchedTokenException(EOF, input)); }

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            match(input,EOF,FOLLOW_EOF_in_compilationUnit305); if (state.failed) return compilationUnit;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return compilationUnit;
    }
    // $ANTLR end "compilationUnit"



    // $ANTLR start "moduleDescriptor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:96:1: moduleDescriptor returns [ModuleDescriptor moduleDescriptor] : compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList ;
    public ModuleDescriptor moduleDescriptor() throws RecognitionException {
        ModuleDescriptor moduleDescriptor = null;


        Token MODULE5=null;
        Token CHAR_LITERAL9=null;
        Token STRING_LITERAL10=null;
        AnnotationList annotations6 =null;

        List<CompilerAnnotation> compilerAnnotations7 =null;

        ImportPath packagePath8 =null;

        ImportModuleList importModuleList11 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:97:5: ( compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:97:7: compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList
            {
            pushFollow(FOLLOW_compilerAnnotations_in_moduleDescriptor326);
            compilerAnnotations7=compilerAnnotations();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            pushFollow(FOLLOW_annotations_in_moduleDescriptor328);
            annotations6=annotations();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            MODULE5=(Token)match(input,MODULE,FOLLOW_MODULE_in_moduleDescriptor336); if (state.failed) return moduleDescriptor;

            if ( state.backtracking==0 ) { moduleDescriptor = new ModuleDescriptor(MODULE5); 
                    moduleDescriptor.setAnnotationList(annotations6);
                    moduleDescriptor.getCompilerAnnotations().addAll(compilerAnnotations7); }

            pushFollow(FOLLOW_packagePath_in_moduleDescriptor353);
            packagePath8=packagePath();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            if ( state.backtracking==0 ) { moduleDescriptor.setImportPath(packagePath8); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:104:7: ( CHAR_LITERAL | STRING_LITERAL )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==CHAR_LITERAL) ) {
                alt3=1;
            }
            else if ( (LA3_0==STRING_LITERAL) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return moduleDescriptor;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;

            }
            switch (alt3) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:105:9: CHAR_LITERAL
                    {
                    CHAR_LITERAL9=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_moduleDescriptor379); if (state.failed) return moduleDescriptor;

                    if ( state.backtracking==0 ) { moduleDescriptor.setVersion(new QuotedLiteral(CHAR_LITERAL9)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:108:9: STRING_LITERAL
                    {
                    STRING_LITERAL10=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_moduleDescriptor407); if (state.failed) return moduleDescriptor;

                    if ( state.backtracking==0 ) { moduleDescriptor.setVersion(new QuotedLiteral(STRING_LITERAL10)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_importModuleList_in_moduleDescriptor433);
            importModuleList11=importModuleList();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            if ( state.backtracking==0 ) { moduleDescriptor.setImportModuleList(importModuleList11); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return moduleDescriptor;
    }
    // $ANTLR end "moduleDescriptor"



    // $ANTLR start "importModuleList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:115:1: importModuleList returns [ImportModuleList importModuleList] : LBRACE ( compilerAnnotations annotations importModule )* RBRACE ;
    public ImportModuleList importModuleList() throws RecognitionException {
        ImportModuleList importModuleList = null;


        Token LBRACE12=null;
        Token RBRACE16=null;
        ImportModule importModule13 =null;

        AnnotationList annotations14 =null;

        List<CompilerAnnotation> compilerAnnotations15 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:116:5: ( LBRACE ( compilerAnnotations annotations importModule )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:116:7: LBRACE ( compilerAnnotations annotations importModule )* RBRACE
            {
            LBRACE12=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_importModuleList462); if (state.failed) return importModuleList;

            if ( state.backtracking==0 ) { importModuleList = new ImportModuleList(LBRACE12); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:118:7: ( compilerAnnotations annotations importModule )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==ALIAS||(LA4_0 >= ASSERT && LA4_0 <= ASSIGN)||(LA4_0 >= BACKTICK && LA4_0 <= BREAK)||(LA4_0 >= CHAR_LITERAL && LA4_0 <= CLASS_DEFINITION)||LA4_0==COMPILER_ANNOTATION||LA4_0==CONTINUE||(LA4_0 >= DECREMENT_OP && LA4_0 <= DIFFERENCE_OP)||LA4_0==DYNAMIC||(LA4_0 >= FLOAT_LITERAL && LA4_0 <= FUNCTION_MODIFIER)||(LA4_0 >= IF_CLAUSE && LA4_0 <= INTERFACE_DEFINITION)||LA4_0==IN_OP||(LA4_0 >= LBRACE && LA4_0 <= LBRACKET)||LA4_0==LIDENTIFIER||LA4_0==LPAREN||LA4_0==MODULE||LA4_0==NATURAL_LITERAL||(LA4_0 >= NOT_OP && LA4_0 <= OBJECT_DEFINITION)||(LA4_0 >= OUT && LA4_0 <= PACKAGE)||LA4_0==PRODUCT_OP||(LA4_0 >= RETURN && LA4_0 <= RPAREN)||(LA4_0 >= SEMICOLON && LA4_0 <= SMALLER_OP)||LA4_0==STRING_LITERAL||LA4_0==STRING_START||(LA4_0 >= SUM_OP && LA4_0 <= SWITCH_CLAUSE)||(LA4_0 >= THIS && LA4_0 <= UIDENTIFIER)||(LA4_0 >= VALUE_MODIFIER && LA4_0 <= WHILE_CLAUSE)) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:119:9: compilerAnnotations annotations importModule
            	    {
            	    pushFollow(FOLLOW_compilerAnnotations_in_importModuleList488);
            	    compilerAnnotations15=compilerAnnotations();

            	    state._fsp--;
            	    if (state.failed) return importModuleList;

            	    pushFollow(FOLLOW_annotations_in_importModuleList490);
            	    annotations14=annotations();

            	    state._fsp--;
            	    if (state.failed) return importModuleList;

            	    pushFollow(FOLLOW_importModule_in_importModuleList500);
            	    importModule13=importModule();

            	    state._fsp--;
            	    if (state.failed) return importModuleList;

            	    if ( state.backtracking==0 ) { if (importModule13!=null)
            	                  importModuleList.addImportModule(importModule13); 
            	              if (importModule13!=null)
            	                  importModule13.setAnnotationList(annotations14);
            	              if (importModule13!=null)
            	                  importModule13.getCompilerAnnotations().addAll(compilerAnnotations15); }

            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            RBRACE16=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_importModuleList527); if (state.failed) return importModuleList;

            if ( state.backtracking==0 ) { importModuleList.setEndToken(RBRACE16); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importModuleList;
    }
    // $ANTLR end "importModuleList"



    // $ANTLR start "packageDescriptor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:132:1: packageDescriptor returns [PackageDescriptor packageDescriptor] : compilerAnnotations annotations PACKAGE packagePath SEMICOLON ;
    public PackageDescriptor packageDescriptor() throws RecognitionException {
        PackageDescriptor packageDescriptor = null;


        Token PACKAGE17=null;
        Token SEMICOLON21=null;
        AnnotationList annotations18 =null;

        List<CompilerAnnotation> compilerAnnotations19 =null;

        ImportPath packagePath20 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:133:5: ( compilerAnnotations annotations PACKAGE packagePath SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:133:7: compilerAnnotations annotations PACKAGE packagePath SEMICOLON
            {
            pushFollow(FOLLOW_compilerAnnotations_in_packageDescriptor556);
            compilerAnnotations19=compilerAnnotations();

            state._fsp--;
            if (state.failed) return packageDescriptor;

            pushFollow(FOLLOW_annotations_in_packageDescriptor558);
            annotations18=annotations();

            state._fsp--;
            if (state.failed) return packageDescriptor;

            PACKAGE17=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_packageDescriptor566); if (state.failed) return packageDescriptor;

            if ( state.backtracking==0 ) { packageDescriptor = new PackageDescriptor(PACKAGE17); 
                    packageDescriptor.setAnnotationList(annotations18); 
                    packageDescriptor.getCompilerAnnotations().addAll(compilerAnnotations19); }

            pushFollow(FOLLOW_packagePath_in_packageDescriptor583);
            packagePath20=packagePath();

            state._fsp--;
            if (state.failed) return packageDescriptor;

            if ( state.backtracking==0 ) { packageDescriptor.setImportPath(packagePath20); 
                    expecting=SEMICOLON; }

            SEMICOLON21=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_packageDescriptor599); if (state.failed) return packageDescriptor;

            if ( state.backtracking==0 ) { packageDescriptor.setEndToken(SEMICOLON21); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return packageDescriptor;
    }
    // $ANTLR end "packageDescriptor"



    // $ANTLR start "importModule"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:146:1: importModule returns [ImportModule importModule] : IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON ;
    public ImportModule importModule() throws RecognitionException {
        ImportModule importModule = null;


        Token c1=null;
        Token s1=null;
        Token c2=null;
        Token s2=null;
        Token IMPORT22=null;
        Token SEMICOLON24=null;
        ImportPath packagePath23 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:147:5: ( IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:147:7: IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON
            {
            IMPORT22=(Token)match(input,IMPORT,FOLLOW_IMPORT_in_importModule628); if (state.failed) return importModule;

            if ( state.backtracking==0 ) { importModule = new ImportModule(IMPORT22); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:149:7: (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath )
            int alt5=3;
            switch ( input.LA(1) ) {
            case CHAR_LITERAL:
                {
                alt5=1;
                }
                break;
            case STRING_LITERAL:
                {
                alt5=2;
                }
                break;
            case LIDENTIFIER:
            case UIDENTIFIER:
                {
                alt5=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return importModule;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;

            }

            switch (alt5) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:150:9: c1= CHAR_LITERAL
                    {
                    c1=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_importModule657); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setQuotedLiteral(new QuotedLiteral(c1)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:153:9: s1= STRING_LITERAL
                    {
                    s1=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_importModule687); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setQuotedLiteral(new QuotedLiteral(s1)); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:156:9: packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_importModule715);
                    packagePath23=packagePath();

                    state._fsp--;
                    if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setImportPath(packagePath23); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:159:7: (c2= CHAR_LITERAL |s2= STRING_LITERAL )?
            int alt6=3;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==CHAR_LITERAL) ) {
                alt6=1;
            }
            else if ( (LA6_0==STRING_LITERAL) ) {
                alt6=2;
            }
            switch (alt6) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:160:9: c2= CHAR_LITERAL
                    {
                    c2=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_importModule753); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setVersion(new QuotedLiteral(c2)); 
                              expecting=SEMICOLON; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:164:9: s2= STRING_LITERAL
                    {
                    s2=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_importModule783); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setVersion(new QuotedLiteral(s2)); 
                              expecting=SEMICOLON; }

                    }
                    break;

            }


            SEMICOLON24=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_importModule810); if (state.failed) return importModule;

            if ( state.backtracking==0 ) { importModule.setEndToken(SEMICOLON24); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importModule;
    }
    // $ANTLR end "importModule"



    // $ANTLR start "importDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:173:1: importDeclaration returns [Import importDeclaration] : IMPORT ( packagePath |) importElementList ;
    public Import importDeclaration() throws RecognitionException {
        Import importDeclaration = null;


        Token IMPORT25=null;
        ImportPath packagePath26 =null;

        ImportMemberOrTypeList importElementList27 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:174:5: ( IMPORT ( packagePath |) importElementList )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:174:7: IMPORT ( packagePath |) importElementList
            {
            IMPORT25=(Token)match(input,IMPORT,FOLLOW_IMPORT_in_importDeclaration839); if (state.failed) return importDeclaration;

            if ( state.backtracking==0 ) { importDeclaration = new Import(IMPORT25); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:176:7: ( packagePath |)
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==LIDENTIFIER||LA7_0==UIDENTIFIER) ) {
                alt7=1;
            }
            else if ( (LA7_0==LBRACE) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return importDeclaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;

            }
            switch (alt7) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:177:9: packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_importDeclaration867);
                    packagePath26=packagePath();

                    state._fsp--;
                    if (state.failed) return importDeclaration;

                    if ( state.backtracking==0 ) { importDeclaration.setImportPath(packagePath26); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:179:9: 
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_importElementList_in_importDeclaration903);
            importElementList27=importElementList();

            state._fsp--;
            if (state.failed) return importDeclaration;

            if ( state.backtracking==0 ) { importDeclaration.setImportMemberOrTypeList(importElementList27); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importDeclaration;
    }
    // $ANTLR end "importDeclaration"



    // $ANTLR start "importElementList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:186:1: importElementList returns [ImportMemberOrTypeList importMemberOrTypeList] : LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE ;
    public ImportMemberOrTypeList importElementList() throws RecognitionException {
        ImportMemberOrTypeList importMemberOrTypeList = null;


        Token c1=null;
        Token LBRACE28=null;
        Token RBRACE29=null;
        ImportMemberOrType ie1 =null;

        ImportMemberOrType ie2 =null;

        ImportWildcard iw =null;


         ImportMemberOrTypeList il=null; 
                    boolean wildcarded = false; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:189:5: ( LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:190:5: LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE
            {
            LBRACE28=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_importElementList945); if (state.failed) return importMemberOrTypeList;

            if ( state.backtracking==0 ) { il = new ImportMemberOrTypeList(LBRACE28);
                  importMemberOrTypeList = il; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:193:5: (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )?
            int alt10=3;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==ALIAS||(LA10_0 >= ASSERT && LA10_0 <= ASSIGN)||(LA10_0 >= BACKTICK && LA10_0 <= BREAK)||(LA10_0 >= CHAR_LITERAL && LA10_0 <= CLASS_DEFINITION)||LA10_0==COMPILER_ANNOTATION||LA10_0==CONTINUE||(LA10_0 >= DECREMENT_OP && LA10_0 <= DIFFERENCE_OP)||LA10_0==DYNAMIC||(LA10_0 >= FLOAT_LITERAL && LA10_0 <= FUNCTION_MODIFIER)||(LA10_0 >= IF_CLAUSE && LA10_0 <= INTERFACE_DEFINITION)||LA10_0==IN_OP||(LA10_0 >= LBRACE && LA10_0 <= LBRACKET)||LA10_0==LIDENTIFIER||LA10_0==LPAREN||LA10_0==MODULE||LA10_0==NATURAL_LITERAL||(LA10_0 >= NOT_OP && LA10_0 <= OBJECT_DEFINITION)||(LA10_0 >= OUT && LA10_0 <= PACKAGE)||LA10_0==PRODUCT_OP||(LA10_0 >= RETURN && LA10_0 <= RPAREN)||(LA10_0 >= SEMICOLON && LA10_0 <= SMALLER_OP)||LA10_0==STRING_LITERAL||LA10_0==STRING_START||(LA10_0 >= SUM_OP && LA10_0 <= SWITCH_CLAUSE)||(LA10_0 >= THIS && LA10_0 <= UIDENTIFIER)||(LA10_0 >= VALUE_MODIFIER && LA10_0 <= WHILE_CLAUSE)) ) {
                alt10=1;
            }
            else if ( (LA10_0==ELLIPSIS) ) {
                alt10=2;
            }
            switch (alt10) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:194:7: ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )*
                    {
                    pushFollow(FOLLOW_importElement_in_importElementList968);
                    ie1=importElement();

                    state._fsp--;
                    if (state.failed) return importMemberOrTypeList;

                    if ( state.backtracking==0 ) { if (ie1!=null)
                                il.addImportMemberOrType(ie1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:197:7: (c1= COMMA (ie2= importElement |iw= importWildcard |) )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==COMMA) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:198:9: c1= COMMA (ie2= importElement |iw= importWildcard |)
                    	    {
                    	    c1=(Token)match(input,COMMA,FOLLOW_COMMA_in_importElementList999); if (state.failed) return importMemberOrTypeList;

                    	    if ( state.backtracking==0 ) { il.setEndToken(c1); 
                    	              if (wildcarded) 
                    	                  displayRecognitionError(getTokenNames(), 
                    	                      new MismatchedTokenException(RBRACE, input)); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:203:9: (ie2= importElement |iw= importWildcard |)
                    	    int alt8=3;
                    	    switch ( input.LA(1) ) {
                    	    case ALIAS:
                    	    case ASSERT:
                    	    case ASSIGN:
                    	    case BACKTICK:
                    	    case BREAK:
                    	    case CHAR_LITERAL:
                    	    case CLASS_DEFINITION:
                    	    case COMPILER_ANNOTATION:
                    	    case CONTINUE:
                    	    case DECREMENT_OP:
                    	    case DIFFERENCE_OP:
                    	    case DYNAMIC:
                    	    case FLOAT_LITERAL:
                    	    case FOR_CLAUSE:
                    	    case FUNCTION_MODIFIER:
                    	    case IF_CLAUSE:
                    	    case IMPORT:
                    	    case INCREMENT_OP:
                    	    case INTERFACE_DEFINITION:
                    	    case IN_OP:
                    	    case LBRACE:
                    	    case LBRACKET:
                    	    case LIDENTIFIER:
                    	    case LPAREN:
                    	    case MODULE:
                    	    case NATURAL_LITERAL:
                    	    case NOT_OP:
                    	    case OBJECT_DEFINITION:
                    	    case OUT:
                    	    case OUTER:
                    	    case PACKAGE:
                    	    case PRODUCT_OP:
                    	    case RETURN:
                    	    case RPAREN:
                    	    case SEMICOLON:
                    	    case SMALLER_OP:
                    	    case STRING_LITERAL:
                    	    case STRING_START:
                    	    case SUM_OP:
                    	    case SUPER:
                    	    case SWITCH_CLAUSE:
                    	    case THIS:
                    	    case THROW:
                    	    case TRY_CLAUSE:
                    	    case TYPE_CONSTRAINT:
                    	    case UIDENTIFIER:
                    	    case VALUE_MODIFIER:
                    	    case VERBATIM_STRING:
                    	    case VOID_MODIFIER:
                    	    case WHILE_CLAUSE:
                    	        {
                    	        alt8=1;
                    	        }
                    	        break;
                    	    case ELLIPSIS:
                    	        {
                    	        alt8=2;
                    	        }
                    	        break;
                    	    case COMMA:
                    	    case RBRACE:
                    	        {
                    	        alt8=3;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return importMemberOrTypeList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 8, 0, input);

                    	        throw nvae;

                    	    }

                    	    switch (alt8) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:204:11: ie2= importElement
                    	            {
                    	            pushFollow(FOLLOW_importElement_in_importElementList1034);
                    	            ie2=importElement();

                    	            state._fsp--;
                    	            if (state.failed) return importMemberOrTypeList;

                    	            if ( state.backtracking==0 ) { if (ie2!=null)
                    	                            il.addImportMemberOrType(ie2);
                    	                        if (ie2!=null)
                    	                            il.setEndToken(null); }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:209:11: iw= importWildcard
                    	            {
                    	            pushFollow(FOLLOW_importWildcard_in_importElementList1062);
                    	            iw=importWildcard();

                    	            state._fsp--;
                    	            if (state.failed) return importMemberOrTypeList;

                    	            if ( state.backtracking==0 ) { wildcarded = true;
                    	                        if (iw!=null) 
                    	                            il.setImportWildcard(iw); 
                    	                        if (iw!=null) 
                    	                            il.setEndToken(null); }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:215:11: 
                    	            {
                    	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                            new MismatchedTokenException(ELLIPSIS, input)); }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:219:7: iw= importWildcard
                    {
                    pushFollow(FOLLOW_importWildcard_in_importElementList1116);
                    iw=importWildcard();

                    state._fsp--;
                    if (state.failed) return importMemberOrTypeList;

                    if ( state.backtracking==0 ) { il.setImportWildcard(iw); }

                    }
                    break;

            }


            RBRACE29=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_importElementList1131); if (state.failed) return importMemberOrTypeList;

            if ( state.backtracking==0 ) { il.setEndToken(RBRACE29); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importMemberOrTypeList;
    }
    // $ANTLR end "importElementList"



    // $ANTLR start "importElement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:225:1: importElement returns [ImportMemberOrType importMemberOrType] : compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? ) ;
    public ImportMemberOrType importElement() throws RecognitionException {
        ImportMemberOrType importMemberOrType = null;


        Token SPECIFY30=null;
        Identifier in1 =null;

        Identifier in2 =null;

        ImportMemberOrTypeList iel2 =null;

        List<CompilerAnnotation> compilerAnnotations31 =null;


         Alias alias = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:227:5: ( compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:227:7: compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_importElement1167);
            compilerAnnotations31=compilerAnnotations();

            state._fsp--;
            if (state.failed) return importMemberOrType;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:228:5: (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:228:7: in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )?
            {
            pushFollow(FOLLOW_importName_in_importElement1177);
            in1=importName();

            state._fsp--;
            if (state.failed) return importMemberOrType;

            if ( state.backtracking==0 ) { importMemberOrType = new ImportMember(null);
                    importMemberOrType.setIdentifier(in1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:231:7: ( SPECIFY (in2= importName |) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==SPECIFY) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:231:9: SPECIFY (in2= importName |)
                    {
                    SPECIFY30=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_importElement1196); if (state.failed) return importMemberOrType;

                    if ( state.backtracking==0 ) { alias = new Alias(SPECIFY30);
                              alias.setIdentifier(in1);
                              importMemberOrType.setAlias(alias); 
                              importMemberOrType.setIdentifier(null); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:236:9: (in2= importName |)
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==LIDENTIFIER||LA11_0==UIDENTIFIER) ) {
                        alt11=1;
                    }
                    else if ( (LA11_0==COMMA||LA11_0==LBRACE||LA11_0==RBRACE) ) {
                        alt11=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return importMemberOrType;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 11, 0, input);

                        throw nvae;

                    }
                    switch (alt11) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:237:11: in2= importName
                            {
                            pushFollow(FOLLOW_importName_in_importElement1230);
                            in2=importName();

                            state._fsp--;
                            if (state.failed) return importMemberOrType;

                            if ( state.backtracking==0 ) { importMemberOrType.setIdentifier(in2); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:239:11: 
                            {
                            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                              new MismatchedTokenException(in1.getToken().getType(), input)); }

                            }
                            break;

                    }


                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:243:7: (iel2= importElementList )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==LBRACE) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:244:9: iel2= importElementList
                    {
                    pushFollow(FOLLOW_importElementList_in_importElement1294);
                    iel2=importElementList();

                    state._fsp--;
                    if (state.failed) return importMemberOrType;

                    if ( state.backtracking==0 ) { importMemberOrType.setImportMemberOrTypeList(iel2); }

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) { if (importMemberOrType!=null)
                    importMemberOrType.getCompilerAnnotations().addAll(compilerAnnotations31); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importMemberOrType;
    }
    // $ANTLR end "importElement"



    // $ANTLR start "importWildcard"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:252:1: importWildcard returns [ImportWildcard importWildcard] : ELLIPSIS ;
    public ImportWildcard importWildcard() throws RecognitionException {
        ImportWildcard importWildcard = null;


        Token ELLIPSIS32=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:253:5: ( ELLIPSIS )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:253:7: ELLIPSIS
            {
            ELLIPSIS32=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_importWildcard1346); if (state.failed) return importWildcard;

            if ( state.backtracking==0 ) { importWildcard = new ImportWildcard(ELLIPSIS32); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importWildcard;
    }
    // $ANTLR end "importWildcard"



    // $ANTLR start "importName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:257:1: importName returns [Identifier identifier] : ( memberName | typeName );
    public Identifier importName() throws RecognitionException {
        Identifier identifier = null;


        Identifier memberName33 =null;

        Identifier typeName34 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:258:5: ( memberName | typeName )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==LIDENTIFIER) ) {
                alt14=1;
            }
            else if ( (LA14_0==UIDENTIFIER) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;

            }
            switch (alt14) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:258:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_importName1375);
                    memberName33=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =memberName33; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:259:7: typeName
                    {
                    pushFollow(FOLLOW_typeName_in_importName1385);
                    typeName34=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =typeName34; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "importName"



    // $ANTLR start "packagePath"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:262:1: packagePath returns [ImportPath importPath] : pn1= packageName (m= MEMBER_OP (pn2= packageName |) )* ;
    public ImportPath packagePath() throws RecognitionException {
        ImportPath importPath = null;


        Token m=null;
        Identifier pn1 =null;

        Identifier pn2 =null;


         importPath = new ImportPath(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:264:5: (pn1= packageName (m= MEMBER_OP (pn2= packageName |) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:264:7: pn1= packageName (m= MEMBER_OP (pn2= packageName |) )*
            {
            pushFollow(FOLLOW_packageName_in_packagePath1419);
            pn1=packageName();

            state._fsp--;
            if (state.failed) return importPath;

            if ( state.backtracking==0 ) { if (pn1!=null) 
                        importPath.addIdentifier(pn1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:267:7: (m= MEMBER_OP (pn2= packageName |) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==MEMBER_OP) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:268:9: m= MEMBER_OP (pn2= packageName |)
            	    {
            	    m=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_packagePath1450); if (state.failed) return importPath;

            	    if ( state.backtracking==0 ) { importPath.setEndToken(m); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:270:9: (pn2= packageName |)
            	    int alt15=2;
            	    int LA15_0 = input.LA(1);

            	    if ( (LA15_0==LIDENTIFIER||LA15_0==UIDENTIFIER) ) {
            	        alt15=1;
            	    }
            	    else if ( (LA15_0==BACKTICK||LA15_0==CHAR_LITERAL||LA15_0==LBRACE||LA15_0==MEMBER_OP||LA15_0==SEMICOLON||LA15_0==STRING_LITERAL) ) {
            	        alt15=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return importPath;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 15, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt15) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:271:11: pn2= packageName
            	            {
            	            pushFollow(FOLLOW_packageName_in_packagePath1485);
            	            pn2=packageName();

            	            state._fsp--;
            	            if (state.failed) return importPath;

            	            if ( state.backtracking==0 ) { importPath.addIdentifier(pn2); 
            	                        importPath.setEndToken(null); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:274:11: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                            new MismatchedTokenException(LIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importPath;
    }
    // $ANTLR end "packagePath"



    // $ANTLR start "packageName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:280:1: packageName returns [Identifier identifier] : ( LIDENTIFIER | UIDENTIFIER );
    public Identifier packageName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER35=null;
        Token UIDENTIFIER36=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:281:5: ( LIDENTIFIER | UIDENTIFIER )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==LIDENTIFIER) ) {
                alt17=1;
            }
            else if ( (LA17_0==UIDENTIFIER) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;

            }
            switch (alt17) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:281:7: LIDENTIFIER
                    {
                    LIDENTIFIER35=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_packageName1550); if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER35);
                            LIDENTIFIER35.setType(PIDENTIFIER);}

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:284:7: UIDENTIFIER
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                  new MismatchedTokenException(LIDENTIFIER, input), 5001); }

                    UIDENTIFIER36=(Token)match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_packageName1574); if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = new Identifier(UIDENTIFIER36);
                            UIDENTIFIER36.setType(PIDENTIFIER);}

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "packageName"



    // $ANTLR start "typeName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:291:1: typeName returns [Identifier identifier] : UIDENTIFIER ;
    public Identifier typeName() throws RecognitionException {
        Identifier identifier = null;


        Token UIDENTIFIER37=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:292:5: ( UIDENTIFIER )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:292:7: UIDENTIFIER
            {
            UIDENTIFIER37=(Token)match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_typeName1603); if (state.failed) return identifier;

            if ( state.backtracking==0 ) { identifier = new Identifier(UIDENTIFIER37); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "typeName"



    // $ANTLR start "annotationName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:296:1: annotationName returns [Identifier identifier] : LIDENTIFIER ;
    public Identifier annotationName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER38=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:297:5: ( LIDENTIFIER )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:297:7: LIDENTIFIER
            {
            LIDENTIFIER38=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_annotationName1632); if (state.failed) return identifier;

            if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER38); 
                    LIDENTIFIER38.setType(AIDENTIFIER); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "annotationName"



    // $ANTLR start "memberName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:302:1: memberName returns [Identifier identifier] : LIDENTIFIER ;
    public Identifier memberName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER39=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:303:5: ( LIDENTIFIER )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:303:7: LIDENTIFIER
            {
            LIDENTIFIER39=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_memberName1661); if (state.failed) return identifier;

            if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER39); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "memberName"



    // $ANTLR start "memberNameDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:307:1: memberNameDeclaration returns [Identifier identifier] : ( memberName | typeName );
    public Identifier memberNameDeclaration() throws RecognitionException {
        Identifier identifier = null;


        Identifier memberName40 =null;

        Identifier typeName41 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:308:5: ( memberName | typeName )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==LIDENTIFIER) ) {
                alt18=1;
            }
            else if ( (LA18_0==UIDENTIFIER) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;

            }
            switch (alt18) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:308:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_memberNameDeclaration1694);
                    memberName40=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = memberName40; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:309:7: typeName
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LIDENTIFIER, input), 5001); }

                    pushFollow(FOLLOW_typeName_in_memberNameDeclaration1712);
                    typeName41=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = typeName41; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "memberNameDeclaration"



    // $ANTLR start "typeNameDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:315:1: typeNameDeclaration returns [Identifier identifier] : ( typeName | memberName );
    public Identifier typeNameDeclaration() throws RecognitionException {
        Identifier identifier = null;


        Identifier typeName42 =null;

        Identifier memberName43 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:316:5: ( typeName | memberName )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==UIDENTIFIER) ) {
                alt19=1;
            }
            else if ( (LA19_0==LIDENTIFIER) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;

            }
            switch (alt19) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:316:7: typeName
                    {
                    pushFollow(FOLLOW_typeName_in_typeNameDeclaration1742);
                    typeName42=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = typeName42; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:317:7: memberName
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(UIDENTIFIER, input), 5002); }

                    pushFollow(FOLLOW_memberName_in_typeNameDeclaration1760);
                    memberName43=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = memberName43; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "typeNameDeclaration"



    // $ANTLR start "objectDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:323:1: objectDeclaration returns [ObjectDefinition declaration] : OBJECT_DEFINITION memberNameDeclaration ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) ;
    public ObjectDefinition objectDeclaration() throws RecognitionException {
        ObjectDefinition declaration = null;


        Token OBJECT_DEFINITION44=null;
        Token SEMICOLON49=null;
        Identifier memberNameDeclaration45 =null;

        ExtendedType extendedType46 =null;

        SatisfiedTypes satisfiedTypes47 =null;

        ClassBody classBody48 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:324:5: ( OBJECT_DEFINITION memberNameDeclaration ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:324:7: OBJECT_DEFINITION memberNameDeclaration ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON )
            {
            OBJECT_DEFINITION44=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_objectDeclaration1790); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new ObjectDefinition(OBJECT_DEFINITION44); 
                    declaration.setType(new ValueModifier(null)); }

            pushFollow(FOLLOW_memberNameDeclaration_in_objectDeclaration1806);
            memberNameDeclaration45=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration45); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:329:7: ( extendedType )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==EXTENDS) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:330:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_objectDeclaration1833);
                    extendedType46=extendedType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setExtendedType(extendedType46); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:333:7: ( satisfiedTypes )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==SATISFIES) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:334:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_objectDeclaration1872);
                    satisfiedTypes47=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setSatisfiedTypes(satisfiedTypes47); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:337:7: ( classBody | SEMICOLON )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==LBRACE) ) {
                alt22=1;
            }
            else if ( (LA22_0==SEMICOLON) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;

            }
            switch (alt22) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:338:9: classBody
                    {
                    pushFollow(FOLLOW_classBody_in_objectDeclaration1910);
                    classBody48=classBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setClassBody(classBody48); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:340:9: SEMICOLON
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LBRACE, input)); }

                    SEMICOLON49=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_objectDeclaration1940); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON49); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "objectDeclaration"



    // $ANTLR start "voidOrInferredMethodDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:347:1: voidOrInferredMethodDeclaration returns [AnyMethod declaration] : ( VOID_MODIFIER | FUNCTION_MODIFIER ) memberNameDeclaration ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON ) ;
    public AnyMethod voidOrInferredMethodDeclaration() throws RecognitionException {
        AnyMethod declaration = null;


        Token VOID_MODIFIER50=null;
        Token FUNCTION_MODIFIER51=null;
        Token SEMICOLON58=null;
        Identifier memberNameDeclaration52 =null;

        TypeParameterList typeParameters53 =null;

        ParameterList parameters54 =null;

        TypeConstraintList typeConstraints55 =null;

        Block block56 =null;

        SpecifierExpression functionSpecifier57 =null;


         MethodDefinition def=null;
                    MethodDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:350:5: ( ( VOID_MODIFIER | FUNCTION_MODIFIER ) memberNameDeclaration ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:350:7: ( VOID_MODIFIER | FUNCTION_MODIFIER ) memberNameDeclaration ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:350:7: ( VOID_MODIFIER | FUNCTION_MODIFIER )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==VOID_MODIFIER) ) {
                alt23=1;
            }
            else if ( (LA23_0==FUNCTION_MODIFIER) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;

            }
            switch (alt23) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:351:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER50=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodDeclaration1998); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { VoidModifier vm = new VoidModifier(VOID_MODIFIER50);
                              def = new MethodDefinition(VOID_MODIFIER50);
                              dec = new MethodDeclaration(VOID_MODIFIER50);
                              def.setType(vm);
                              dec.setType(vm);
                              declaration = dec; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:358:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER51=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodDeclaration2018); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { FunctionModifier fm = new FunctionModifier(FUNCTION_MODIFIER51);
                              def = new MethodDefinition(FUNCTION_MODIFIER51);
                              dec = new MethodDeclaration(FUNCTION_MODIFIER51);
                              def.setType(fm);
                              dec.setType(fm);
                              declaration = dec; }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberNameDeclaration_in_voidOrInferredMethodDeclaration2044);
            memberNameDeclaration52=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { dec.setIdentifier(memberNameDeclaration52); 
                    def.setIdentifier(memberNameDeclaration52); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:369:7: ( typeParameters )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==SMALLER_OP) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:370:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_voidOrInferredMethodDeclaration2070);
                    typeParameters53=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters53); 
                              dec.setTypeParameterList(typeParameters53); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:374:7: ( parameters )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==LPAREN) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:375:9: parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_voidOrInferredMethodDeclaration2115);
            	    parameters54=parameters();

            	    state._fsp--;
            	    if (state.failed) return declaration;

            	    if ( state.backtracking==0 ) { def.addParameterList(parameters54); 
            	              dec.addParameterList(parameters54); }

            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:380:7: ( typeConstraints )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==COMPILER_ANNOTATION||LA26_0==TYPE_CONSTRAINT) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:381:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_voidOrInferredMethodDeclaration2159);
                    typeConstraints55=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints55); 
                              dec.setTypeConstraintList(typeConstraints55); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:385:7: ( block | ( functionSpecifier )? SEMICOLON )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==LBRACE) ) {
                alt28=1;
            }
            else if ( (LA28_0==COMPUTE||LA28_0==SEMICOLON||LA28_0==SPECIFY) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;

            }
            switch (alt28) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:386:9: block
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_block_in_voidOrInferredMethodDeclaration2207);
                    block56=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setBlock(block56); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:390:9: ( functionSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:390:9: ( functionSpecifier )?
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==COMPUTE||LA27_0==SPECIFY) ) {
                        alt27=1;
                    }
                    switch (alt27) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:391:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_voidOrInferredMethodDeclaration2249);
                            functionSpecifier57=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setSpecifierExpression(functionSpecifier57); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON58=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_voidOrInferredMethodDeclaration2292); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { expecting=-1; }

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON58); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "voidOrInferredMethodDeclaration"



    // $ANTLR start "setterDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:401:1: setterDeclaration returns [AttributeSetterDefinition declaration] : ASSIGN memberNameDeclaration ( block | ( functionSpecifier )? SEMICOLON ) ;
    public AttributeSetterDefinition setterDeclaration() throws RecognitionException {
        AttributeSetterDefinition declaration = null;


        Token ASSIGN59=null;
        Token SEMICOLON63=null;
        Identifier memberNameDeclaration60 =null;

        Block block61 =null;

        SpecifierExpression functionSpecifier62 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:402:5: ( ASSIGN memberNameDeclaration ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:402:7: ASSIGN memberNameDeclaration ( block | ( functionSpecifier )? SEMICOLON )
            {
            ASSIGN59=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_setterDeclaration2341); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new AttributeSetterDefinition(ASSIGN59); 
                    declaration.setType( new VoidModifier(null) ); }

            pushFollow(FOLLOW_memberNameDeclaration_in_setterDeclaration2358);
            memberNameDeclaration60=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration60); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:407:7: ( block | ( functionSpecifier )? SEMICOLON )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==LBRACE) ) {
                alt30=1;
            }
            else if ( (LA30_0==COMPUTE||LA30_0==SEMICOLON||LA30_0==SPECIFY) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;

            }
            switch (alt30) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:408:9: block
                    {
                    pushFollow(FOLLOW_block_in_setterDeclaration2386);
                    block61=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block61); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:410:9: ( functionSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:410:9: ( functionSpecifier )?
                    int alt29=2;
                    int LA29_0 = input.LA(1);

                    if ( (LA29_0==COMPUTE||LA29_0==SPECIFY) ) {
                        alt29=1;
                    }
                    switch (alt29) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:411:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_setterDeclaration2418);
                            functionSpecifier62=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(functionSpecifier62); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON63=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_setterDeclaration2461); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON63); 
                              expecting=-1; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "setterDeclaration"



    // $ANTLR start "inferredAttributeDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:421:1: inferredAttributeDeclaration returns [AnyAttribute declaration] : VALUE_MODIFIER memberNameDeclaration ( ( specifier | lazySpecifier )? SEMICOLON | block ) ;
    public AnyAttribute inferredAttributeDeclaration() throws RecognitionException {
        AnyAttribute declaration = null;


        Token VALUE_MODIFIER64=null;
        Token SEMICOLON68=null;
        Identifier memberNameDeclaration65 =null;

        SpecifierExpression specifier66 =null;

        SpecifierExpression lazySpecifier67 =null;

        Block block69 =null;


         AttributeGetterDefinition def=null;
                    AttributeDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:424:5: ( VALUE_MODIFIER memberNameDeclaration ( ( specifier | lazySpecifier )? SEMICOLON | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:424:7: VALUE_MODIFIER memberNameDeclaration ( ( specifier | lazySpecifier )? SEMICOLON | block )
            {
            VALUE_MODIFIER64=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_inferredAttributeDeclaration2509); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { ValueModifier fm = new ValueModifier(VALUE_MODIFIER64);
                    def = new AttributeGetterDefinition(VALUE_MODIFIER64);
                    dec = new AttributeDeclaration(VALUE_MODIFIER64);
                    def.setType(fm);
                    dec.setType(fm);
                    declaration = dec; }

            pushFollow(FOLLOW_memberNameDeclaration_in_inferredAttributeDeclaration2526);
            memberNameDeclaration65=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { dec.setIdentifier(memberNameDeclaration65); 
                    def.setIdentifier(memberNameDeclaration65); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:434:7: ( ( specifier | lazySpecifier )? SEMICOLON | block )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==COMPUTE||LA32_0==SEMICOLON||LA32_0==SPECIFY) ) {
                alt32=1;
            }
            else if ( (LA32_0==LBRACE) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;

            }
            switch (alt32) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:435:9: ( specifier | lazySpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:435:9: ( specifier | lazySpecifier )?
                    int alt31=3;
                    int LA31_0 = input.LA(1);

                    if ( (LA31_0==SPECIFY) ) {
                        alt31=1;
                    }
                    else if ( (LA31_0==COMPUTE) ) {
                        alt31=2;
                    }
                    switch (alt31) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:436:11: specifier
                            {
                            pushFollow(FOLLOW_specifier_in_inferredAttributeDeclaration2565);
                            specifier66=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setSpecifierOrInitializerExpression(specifier66); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:439:11: lazySpecifier
                            {
                            pushFollow(FOLLOW_lazySpecifier_in_inferredAttributeDeclaration2600);
                            lazySpecifier67=lazySpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setSpecifierOrInitializerExpression(lazySpecifier67); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON68=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_inferredAttributeDeclaration2643); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON68); 
                              expecting=-1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:447:9: block
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_block_in_inferredAttributeDeclaration2682);
                    block69=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setBlock(block69); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "inferredAttributeDeclaration"



    // $ANTLR start "typedMethodOrAttributeDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:453:1: typedMethodOrAttributeDeclaration returns [TypedDeclaration declaration] : ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block ) ;
    public TypedDeclaration typedMethodOrAttributeDeclaration() throws RecognitionException {
        TypedDeclaration declaration = null;


        Token s1=null;
        Token s2=null;
        Token DYNAMIC71=null;
        Block b1 =null;

        SpecifierExpression ms =null;

        SpecifierExpression as =null;

        SpecifierExpression ac =null;

        Block b2 =null;

        Type variadicType70 =null;

        Identifier memberNameDeclaration72 =null;

        TypeParameterList typeParameters73 =null;

        ParameterList parameters74 =null;

        TypeConstraintList typeConstraints75 =null;


         AttributeGetterDefinition adef=new AttributeGetterDefinition(null);
                    AttributeDeclaration adec=new AttributeDeclaration(null);
                    MethodDefinition mdef=new MethodDefinition(null);
                    MethodDeclaration mdec=new MethodDeclaration(null); 
                    declaration = adec; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:459:5: ( ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:459:7: ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:459:7: ( variadicType | DYNAMIC )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( ((LA33_0 >= LBRACE && LA33_0 <= LBRACKET)||LA33_0==SMALLER_OP||LA33_0==UIDENTIFIER) ) {
                alt33=1;
            }
            else if ( (LA33_0==DYNAMIC) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;

            }
            switch (alt33) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:459:9: variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_typedMethodOrAttributeDeclaration2732);
                    variadicType70=variadicType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { adef.setType(variadicType70);
                              adec.setType(variadicType70); 
                              mdef.setType(variadicType70);
                              mdec.setType(variadicType70); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:464:9: DYNAMIC
                    {
                    DYNAMIC71=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_typedMethodOrAttributeDeclaration2752); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { DynamicModifier dm = new DynamicModifier(DYNAMIC71);
                              adef.setType(dm);
                              adec.setType(dm); 
                              mdef.setType(dm);
                              mdec.setType(dm); }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberNameDeclaration_in_typedMethodOrAttributeDeclaration2778);
            memberNameDeclaration72=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { adef.setIdentifier(memberNameDeclaration72);
                    adec.setIdentifier(memberNameDeclaration72); 
                    mdef.setIdentifier(memberNameDeclaration72);
                    mdec.setIdentifier(memberNameDeclaration72); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:476:7: ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block )
            int alt40=3;
            switch ( input.LA(1) ) {
            case LPAREN:
            case SMALLER_OP:
                {
                alt40=1;
                }
                break;
            case COMPUTE:
            case SEMICOLON:
            case SPECIFY:
                {
                alt40=2;
                }
                break;
            case LBRACE:
                {
                alt40=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;

            }

            switch (alt40) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:477:9: ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON )
                    {
                    if ( state.backtracking==0 ) { declaration = mdec; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:478:9: ( typeParameters )?
                    int alt34=2;
                    int LA34_0 = input.LA(1);

                    if ( (LA34_0==SMALLER_OP) ) {
                        alt34=1;
                    }
                    switch (alt34) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:479:11: typeParameters
                            {
                            pushFollow(FOLLOW_typeParameters_in_typedMethodOrAttributeDeclaration2827);
                            typeParameters73=typeParameters();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { mdef.setTypeParameterList(typeParameters73);
                                        mdec.setTypeParameterList(typeParameters73); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:483:9: ( parameters )+
                    int cnt35=0;
                    loop35:
                    do {
                        int alt35=2;
                        int LA35_0 = input.LA(1);

                        if ( (LA35_0==LPAREN) ) {
                            alt35=1;
                        }


                        switch (alt35) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:484:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_typedMethodOrAttributeDeclaration2872);
                    	    parameters74=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { mdef.addParameterList(parameters74);
                    	                mdec.addParameterList(parameters74); }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt35 >= 1 ) break loop35;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(35, input);
                                throw eee;
                        }
                        cnt35++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:489:9: ( typeConstraints )?
                    int alt36=2;
                    int LA36_0 = input.LA(1);

                    if ( (LA36_0==COMPILER_ANNOTATION||LA36_0==TYPE_CONSTRAINT) ) {
                        alt36=1;
                    }
                    switch (alt36) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:490:11: typeConstraints
                            {
                            pushFollow(FOLLOW_typeConstraints_in_typedMethodOrAttributeDeclaration2927);
                            typeConstraints75=typeConstraints();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { mdef.setTypeConstraintList(typeConstraints75);
                                        mdec.setTypeConstraintList(typeConstraints75); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:494:9: (b1= block | (ms= functionSpecifier )? s1= SEMICOLON )
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==LBRACE) ) {
                        alt38=1;
                    }
                    else if ( (LA38_0==COMPUTE||LA38_0==SEMICOLON||LA38_0==SPECIFY) ) {
                        alt38=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 38, 0, input);

                        throw nvae;

                    }
                    switch (alt38) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:495:11: b1= block
                            {
                            if ( state.backtracking==0 ) { declaration = mdef; }

                            pushFollow(FOLLOW_block_in_typedMethodOrAttributeDeclaration2987);
                            b1=block();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { mdef.setBlock(b1); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:499:11: (ms= functionSpecifier )? s1= SEMICOLON
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:499:11: (ms= functionSpecifier )?
                            int alt37=2;
                            int LA37_0 = input.LA(1);

                            if ( (LA37_0==COMPUTE||LA37_0==SPECIFY) ) {
                                alt37=1;
                            }
                            switch (alt37) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:500:13: ms= functionSpecifier
                                    {
                                    pushFollow(FOLLOW_functionSpecifier_in_typedMethodOrAttributeDeclaration3037);
                                    ms=functionSpecifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { mdec.setSpecifierExpression(ms); }

                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                            s1=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration3089); if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setEndToken(s1);
                                        expecting=-1; }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:509:9: (as= specifier |ac= lazySpecifier )? s2= SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:509:9: (as= specifier |ac= lazySpecifier )?
                    int alt39=3;
                    int LA39_0 = input.LA(1);

                    if ( (LA39_0==SPECIFY) ) {
                        alt39=1;
                    }
                    else if ( (LA39_0==COMPUTE) ) {
                        alt39=2;
                    }
                    switch (alt39) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:510:11: as= specifier
                            {
                            pushFollow(FOLLOW_specifier_in_typedMethodOrAttributeDeclaration3144);
                            as=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { adec.setSpecifierOrInitializerExpression(as); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:513:11: ac= lazySpecifier
                            {
                            pushFollow(FOLLOW_lazySpecifier_in_typedMethodOrAttributeDeclaration3182);
                            ac=lazySpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { adec.setSpecifierOrInitializerExpression(ac); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    s2=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration3228); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(s2); 
                            expecting=-1; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:521:9: b2= block
                    {
                    if ( state.backtracking==0 ) { declaration = adef; }

                    pushFollow(FOLLOW_block_in_typedMethodOrAttributeDeclaration3269);
                    b2=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { adef.setBlock(b2); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "typedMethodOrAttributeDeclaration"



    // $ANTLR start "interfaceDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:527:1: interfaceDeclaration returns [AnyInterface declaration] : ( INTERFACE_DEFINITION | DYNAMIC ) typeNameDeclaration ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON ) ;
    public AnyInterface interfaceDeclaration() throws RecognitionException {
        AnyInterface declaration = null;


        Token INTERFACE_DEFINITION76=null;
        Token DYNAMIC77=null;
        Token SEMICOLON85=null;
        Identifier typeNameDeclaration78 =null;

        TypeParameterList typeParameters79 =null;

        CaseTypes caseTypes80 =null;

        SatisfiedTypes satisfiedTypes81 =null;

        TypeConstraintList typeConstraints82 =null;

        InterfaceBody interfaceBody83 =null;

        TypeSpecifier typeSpecifier84 =null;


         InterfaceDefinition def=null; 
                    InterfaceDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:530:5: ( ( INTERFACE_DEFINITION | DYNAMIC ) typeNameDeclaration ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:530:7: ( INTERFACE_DEFINITION | DYNAMIC ) typeNameDeclaration ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:530:7: ( INTERFACE_DEFINITION | DYNAMIC )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==INTERFACE_DEFINITION) ) {
                alt41=1;
            }
            else if ( (LA41_0==DYNAMIC) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;

            }
            switch (alt41) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:531:9: INTERFACE_DEFINITION
                    {
                    INTERFACE_DEFINITION76=(Token)match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_interfaceDeclaration3328); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def = new InterfaceDefinition(INTERFACE_DEFINITION76); 
                              dec = new InterfaceDeclaration(INTERFACE_DEFINITION76);
                              declaration = dec; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:536:9: DYNAMIC
                    {
                    DYNAMIC77=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_interfaceDeclaration3357); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def = new InterfaceDefinition(DYNAMIC77);
                              dec = new InterfaceDeclaration(DYNAMIC77);
                              def.setDynamic(true);
                              declaration = def; }

                    }
                    break;

            }


            pushFollow(FOLLOW_typeNameDeclaration_in_interfaceDeclaration3383);
            typeNameDeclaration78=typeNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { dec.setIdentifier(typeNameDeclaration78); 
                    def.setIdentifier(typeNameDeclaration78); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:545:7: ( typeParameters )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==SMALLER_OP) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:546:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_interfaceDeclaration3410);
                    typeParameters79=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters79); 
                              dec.setTypeParameterList(typeParameters79); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:550:7: ( caseTypes )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==CASE_TYPES) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:551:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_interfaceDeclaration3448);
                    caseTypes80=caseTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setCaseTypes(caseTypes80); 
                              dec.setCaseTypes(caseTypes80); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:560:7: ( satisfiedTypes )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==SATISFIES) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:561:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_interfaceDeclaration3502);
                    satisfiedTypes81=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setSatisfiedTypes(satisfiedTypes81); 
                              dec.setSatisfiedTypes(satisfiedTypes81); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:565:7: ( typeConstraints )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==COMPILER_ANNOTATION||LA45_0==TYPE_CONSTRAINT) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:566:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_interfaceDeclaration3539);
                    typeConstraints82=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints82); 
                              dec.setTypeConstraintList(typeConstraints82); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:570:7: ( interfaceBody | ( typeSpecifier )? SEMICOLON )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==LBRACE) ) {
                alt47=1;
            }
            else if ( (LA47_0==COMPUTE||LA47_0==SEMICOLON||LA47_0==SPECIFY) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;

            }
            switch (alt47) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:571:9: interfaceBody
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_interfaceBody_in_interfaceDeclaration3586);
                    interfaceBody83=interfaceBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setInterfaceBody(interfaceBody83); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:575:9: ( typeSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:575:9: ( typeSpecifier )?
                    int alt46=2;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==COMPUTE||LA46_0==SPECIFY) ) {
                        alt46=1;
                    }
                    switch (alt46) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:576:11: typeSpecifier
                            {
                            pushFollow(FOLLOW_typeSpecifier_in_interfaceDeclaration3627);
                            typeSpecifier84=typeSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setTypeSpecifier(typeSpecifier84); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON85=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interfaceDeclaration3671); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON85); 
                              expecting=-1; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "interfaceDeclaration"



    // $ANTLR start "classDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:586:1: classDeclaration returns [AnyClass declaration] : CLASS_DEFINITION typeNameDeclaration ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON ) ;
    public AnyClass classDeclaration() throws RecognitionException {
        AnyClass declaration = null;


        Token CLASS_DEFINITION86=null;
        Token SEMICOLON96=null;
        Identifier typeNameDeclaration87 =null;

        TypeParameterList typeParameters88 =null;

        ParameterList parameters89 =null;

        CaseTypes caseTypes90 =null;

        ExtendedType extendedType91 =null;

        SatisfiedTypes satisfiedTypes92 =null;

        TypeConstraintList typeConstraints93 =null;

        ClassBody classBody94 =null;

        ClassSpecifier classSpecifier95 =null;


         ClassDefinition def=null; 
                    ClassDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:589:5: ( CLASS_DEFINITION typeNameDeclaration ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:589:7: CLASS_DEFINITION typeNameDeclaration ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON )
            {
            CLASS_DEFINITION86=(Token)match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_classDeclaration3719); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { def = new ClassDefinition(CLASS_DEFINITION86); 
                    dec = new ClassDeclaration(CLASS_DEFINITION86);
                    declaration = dec; }

            pushFollow(FOLLOW_typeNameDeclaration_in_classDeclaration3736);
            typeNameDeclaration87=typeNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { dec.setIdentifier(typeNameDeclaration87); 
                    def.setIdentifier(typeNameDeclaration87); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:596:7: ( typeParameters )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==SMALLER_OP) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:597:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_classDeclaration3762);
                    typeParameters88=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters88); 
                              dec.setTypeParameterList(typeParameters88); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:601:7: ( parameters )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==LPAREN) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:602:9: parameters
                    {
                    pushFollow(FOLLOW_parameters_in_classDeclaration3799);
                    parameters89=parameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setParameterList(parameters89); 
                              dec.setParameterList(parameters89); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:606:7: ( caseTypes )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==CASE_TYPES) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:607:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_classDeclaration3836);
                    caseTypes90=caseTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setCaseTypes(caseTypes90); 
                              dec.setCaseTypes(caseTypes90); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:612:7: ( extendedType )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==EXTENDS) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:613:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_classDeclaration3882);
                    extendedType91=extendedType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setExtendedType(extendedType91); 
                              dec.setExtendedType(extendedType91); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:617:7: ( satisfiedTypes )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==SATISFIES) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:618:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_classDeclaration3920);
                    satisfiedTypes92=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setSatisfiedTypes(satisfiedTypes92); 
                              dec.setSatisfiedTypes(satisfiedTypes92); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:622:7: ( typeConstraints )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==COMPILER_ANNOTATION||LA53_0==TYPE_CONSTRAINT) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:623:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_classDeclaration3957);
                    typeConstraints93=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints93); 
                              dec.setTypeConstraintList(typeConstraints93); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:627:7: ( classBody | ( classSpecifier )? SEMICOLON )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==LBRACE) ) {
                alt55=1;
            }
            else if ( (LA55_0==COMPUTE||LA55_0==SEMICOLON||LA55_0==SPECIFY) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;

            }
            switch (alt55) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:628:9: classBody
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_classBody_in_classDeclaration4004);
                    classBody94=classBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setClassBody(classBody94); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:632:9: ( classSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:632:9: ( classSpecifier )?
                    int alt54=2;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==COMPUTE||LA54_0==SPECIFY) ) {
                        alt54=1;
                    }
                    switch (alt54) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:633:11: classSpecifier
                            {
                            pushFollow(FOLLOW_classSpecifier_in_classDeclaration4045);
                            classSpecifier95=classSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setClassSpecifier(classSpecifier95); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON96=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_classDeclaration4088); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON96); 
                              expecting=-1; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "classDeclaration"



    // $ANTLR start "aliasDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:643:1: aliasDeclaration returns [TypeAliasDeclaration declaration] : ALIAS typeNameDeclaration ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON ;
    public TypeAliasDeclaration aliasDeclaration() throws RecognitionException {
        TypeAliasDeclaration declaration = null;


        Token ALIAS97=null;
        Token SEMICOLON102=null;
        Identifier typeNameDeclaration98 =null;

        TypeParameterList typeParameters99 =null;

        TypeConstraintList typeConstraints100 =null;

        TypeSpecifier typeSpecifier101 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:644:5: ( ALIAS typeNameDeclaration ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:644:7: ALIAS typeNameDeclaration ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON
            {
            ALIAS97=(Token)match(input,ALIAS,FOLLOW_ALIAS_in_aliasDeclaration4127); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new TypeAliasDeclaration(ALIAS97);}

            pushFollow(FOLLOW_typeNameDeclaration_in_aliasDeclaration4143);
            typeNameDeclaration98=typeNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setIdentifier(typeNameDeclaration98); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:648:7: ( typeParameters )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==SMALLER_OP) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:649:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_aliasDeclaration4170);
                    typeParameters99=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeParameterList(typeParameters99); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:652:7: ( typeConstraints )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==COMPILER_ANNOTATION||LA57_0==TYPE_CONSTRAINT) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:653:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_aliasDeclaration4208);
                    typeConstraints100=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeConstraintList(typeConstraints100); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:656:7: ( typeSpecifier )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==COMPUTE||LA58_0==SPECIFY) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:657:9: typeSpecifier
                    {
                    pushFollow(FOLLOW_typeSpecifier_in_aliasDeclaration4245);
                    typeSpecifier101=typeSpecifier();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeSpecifier(typeSpecifier101); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON102=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_aliasDeclaration4280); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON102); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "aliasDeclaration"



    // $ANTLR start "assertion"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:666:1: assertion returns [Assertion assertion] : annotations ASSERT conditions SEMICOLON ;
    public Assertion assertion() throws RecognitionException {
        Assertion assertion = null;


        Token ASSERT103=null;
        Token SEMICOLON106=null;
        AnnotationList annotations104 =null;

        ConditionList conditions105 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:667:5: ( annotations ASSERT conditions SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:667:7: annotations ASSERT conditions SEMICOLON
            {
            pushFollow(FOLLOW_annotations_in_assertion4309);
            annotations104=annotations();

            state._fsp--;
            if (state.failed) return assertion;

            ASSERT103=(Token)match(input,ASSERT,FOLLOW_ASSERT_in_assertion4317); if (state.failed) return assertion;

            if ( state.backtracking==0 ) { assertion = new Assertion(ASSERT103); 
                    assertion.setAnnotationList(annotations104); }

            pushFollow(FOLLOW_conditions_in_assertion4333);
            conditions105=conditions();

            state._fsp--;
            if (state.failed) return assertion;

            if ( state.backtracking==0 ) { assertion.setConditionList(conditions105); }

            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON106=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_assertion4357); if (state.failed) return assertion;

            if ( state.backtracking==0 ) { assertion.setEndToken(SEMICOLON106); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return assertion;
    }
    // $ANTLR end "assertion"



    // $ANTLR start "block"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:679:1: block returns [Block block] : LBRACE ( declarationOrStatement )* RBRACE ;
    public Block block() throws RecognitionException {
        Block block = null;


        Token LBRACE107=null;
        Token RBRACE109=null;
        Statement declarationOrStatement108 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:680:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:680:7: LBRACE ( declarationOrStatement )* RBRACE
            {
            LBRACE107=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_block4386); if (state.failed) return block;

            if ( state.backtracking==0 ) { block = new Block(LBRACE107); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:682:7: ( declarationOrStatement )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==ALIAS||(LA59_0 >= ASSERT && LA59_0 <= ASSIGN)||(LA59_0 >= BACKTICK && LA59_0 <= BREAK)||(LA59_0 >= CHAR_LITERAL && LA59_0 <= CLASS_DEFINITION)||LA59_0==COMPILER_ANNOTATION||LA59_0==CONTINUE||(LA59_0 >= DECREMENT_OP && LA59_0 <= DIFFERENCE_OP)||LA59_0==DYNAMIC||(LA59_0 >= FLOAT_LITERAL && LA59_0 <= FUNCTION_MODIFIER)||(LA59_0 >= IF_CLAUSE && LA59_0 <= INTERFACE_DEFINITION)||LA59_0==IN_OP||(LA59_0 >= LBRACE && LA59_0 <= LBRACKET)||LA59_0==LIDENTIFIER||LA59_0==LPAREN||LA59_0==MODULE||LA59_0==NATURAL_LITERAL||(LA59_0 >= NOT_OP && LA59_0 <= OBJECT_DEFINITION)||(LA59_0 >= OUT && LA59_0 <= PACKAGE)||LA59_0==PRODUCT_OP||(LA59_0 >= RETURN && LA59_0 <= RPAREN)||(LA59_0 >= SEMICOLON && LA59_0 <= SMALLER_OP)||LA59_0==STRING_LITERAL||LA59_0==STRING_START||(LA59_0 >= SUM_OP && LA59_0 <= SWITCH_CLAUSE)||(LA59_0 >= THIS && LA59_0 <= UIDENTIFIER)||(LA59_0 >= VALUE_MODIFIER && LA59_0 <= WHILE_CLAUSE)) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:683:9: declarationOrStatement
            	    {
            	    pushFollow(FOLLOW_declarationOrStatement_in_block4413);
            	    declarationOrStatement108=declarationOrStatement();

            	    state._fsp--;
            	    if (state.failed) return block;

            	    if ( state.backtracking==0 ) { if (declarationOrStatement108!=null)
            	                  block.addStatement(declarationOrStatement108); }

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);


            RBRACE109=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_block4440); if (state.failed) return block;

            if ( state.backtracking==0 ) { block.setEndToken(RBRACE109); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "block"



    // $ANTLR start "interfaceBody"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:695:1: interfaceBody returns [InterfaceBody interfaceBody] : LBRACE ( declarationOrStatement )* RBRACE ;
    public InterfaceBody interfaceBody() throws RecognitionException {
        InterfaceBody interfaceBody = null;


        Token LBRACE110=null;
        Token RBRACE112=null;
        Statement declarationOrStatement111 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:696:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:696:7: LBRACE ( declarationOrStatement )* RBRACE
            {
            LBRACE110=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_interfaceBody4473); if (state.failed) return interfaceBody;

            if ( state.backtracking==0 ) { interfaceBody = new InterfaceBody(LBRACE110); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:698:7: ( declarationOrStatement )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==ALIAS||(LA60_0 >= ASSERT && LA60_0 <= ASSIGN)||(LA60_0 >= BACKTICK && LA60_0 <= BREAK)||(LA60_0 >= CHAR_LITERAL && LA60_0 <= CLASS_DEFINITION)||LA60_0==COMPILER_ANNOTATION||LA60_0==CONTINUE||(LA60_0 >= DECREMENT_OP && LA60_0 <= DIFFERENCE_OP)||LA60_0==DYNAMIC||(LA60_0 >= FLOAT_LITERAL && LA60_0 <= FUNCTION_MODIFIER)||(LA60_0 >= IF_CLAUSE && LA60_0 <= INTERFACE_DEFINITION)||LA60_0==IN_OP||(LA60_0 >= LBRACE && LA60_0 <= LBRACKET)||LA60_0==LIDENTIFIER||LA60_0==LPAREN||LA60_0==MODULE||LA60_0==NATURAL_LITERAL||(LA60_0 >= NOT_OP && LA60_0 <= OBJECT_DEFINITION)||(LA60_0 >= OUT && LA60_0 <= PACKAGE)||LA60_0==PRODUCT_OP||(LA60_0 >= RETURN && LA60_0 <= RPAREN)||(LA60_0 >= SEMICOLON && LA60_0 <= SMALLER_OP)||LA60_0==STRING_LITERAL||LA60_0==STRING_START||(LA60_0 >= SUM_OP && LA60_0 <= SWITCH_CLAUSE)||(LA60_0 >= THIS && LA60_0 <= UIDENTIFIER)||(LA60_0 >= VALUE_MODIFIER && LA60_0 <= WHILE_CLAUSE)) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:699:9: declarationOrStatement
            	    {
            	    pushFollow(FOLLOW_declarationOrStatement_in_interfaceBody4500);
            	    declarationOrStatement111=declarationOrStatement();

            	    state._fsp--;
            	    if (state.failed) return interfaceBody;

            	    if ( state.backtracking==0 ) { if (declarationOrStatement111!=null)
            	                  interfaceBody.addStatement(declarationOrStatement111); }

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);


            RBRACE112=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_interfaceBody4527); if (state.failed) return interfaceBody;

            if ( state.backtracking==0 ) { interfaceBody.setEndToken(RBRACE112); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return interfaceBody;
    }
    // $ANTLR end "interfaceBody"



    // $ANTLR start "classBody"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:707:1: classBody returns [ClassBody classBody] : LBRACE ( declarationOrStatement )* RBRACE ;
    public ClassBody classBody() throws RecognitionException {
        ClassBody classBody = null;


        Token LBRACE113=null;
        Token RBRACE115=null;
        Statement declarationOrStatement114 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:708:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:708:7: LBRACE ( declarationOrStatement )* RBRACE
            {
            LBRACE113=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_classBody4556); if (state.failed) return classBody;

            if ( state.backtracking==0 ) { classBody = new ClassBody(LBRACE113); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:710:7: ( declarationOrStatement )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==ALIAS||(LA61_0 >= ASSERT && LA61_0 <= ASSIGN)||(LA61_0 >= BACKTICK && LA61_0 <= BREAK)||(LA61_0 >= CHAR_LITERAL && LA61_0 <= CLASS_DEFINITION)||LA61_0==COMPILER_ANNOTATION||LA61_0==CONTINUE||(LA61_0 >= DECREMENT_OP && LA61_0 <= DIFFERENCE_OP)||LA61_0==DYNAMIC||(LA61_0 >= FLOAT_LITERAL && LA61_0 <= FUNCTION_MODIFIER)||(LA61_0 >= IF_CLAUSE && LA61_0 <= INTERFACE_DEFINITION)||LA61_0==IN_OP||(LA61_0 >= LBRACE && LA61_0 <= LBRACKET)||LA61_0==LIDENTIFIER||LA61_0==LPAREN||LA61_0==MODULE||LA61_0==NATURAL_LITERAL||(LA61_0 >= NOT_OP && LA61_0 <= OBJECT_DEFINITION)||(LA61_0 >= OUT && LA61_0 <= PACKAGE)||LA61_0==PRODUCT_OP||(LA61_0 >= RETURN && LA61_0 <= RPAREN)||(LA61_0 >= SEMICOLON && LA61_0 <= SMALLER_OP)||LA61_0==STRING_LITERAL||LA61_0==STRING_START||(LA61_0 >= SUM_OP && LA61_0 <= SWITCH_CLAUSE)||(LA61_0 >= THIS && LA61_0 <= UIDENTIFIER)||(LA61_0 >= VALUE_MODIFIER && LA61_0 <= WHILE_CLAUSE)) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:711:9: declarationOrStatement
            	    {
            	    pushFollow(FOLLOW_declarationOrStatement_in_classBody4582);
            	    declarationOrStatement114=declarationOrStatement();

            	    state._fsp--;
            	    if (state.failed) return classBody;

            	    if ( state.backtracking==0 ) { if (declarationOrStatement114!=null)
            	                  classBody.addStatement(declarationOrStatement114); }

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);


            RBRACE115=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_classBody4609); if (state.failed) return classBody;

            if ( state.backtracking==0 ) { classBody.setEndToken(RBRACE115); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return classBody;
    }
    // $ANTLR end "classBody"



    // $ANTLR start "extendedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:719:1: extendedType returns [ExtendedType extendedType] : EXTENDS (ci= classInstantiation )? ;
    public ExtendedType extendedType() throws RecognitionException {
        ExtendedType extendedType = null;


        Token EXTENDS116=null;
        CeylonParser.classInstantiation_return ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:720:5: ( EXTENDS (ci= classInstantiation )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:720:7: EXTENDS (ci= classInstantiation )?
            {
            EXTENDS116=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_extendedType4638); if (state.failed) return extendedType;

            if ( state.backtracking==0 ) { extendedType = new ExtendedType(EXTENDS116); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:721:7: (ci= classInstantiation )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==SUPER||LA62_0==UIDENTIFIER) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:722:9: ci= classInstantiation
                    {
                    pushFollow(FOLLOW_classInstantiation_in_extendedType4662);
                    ci=classInstantiation();

                    state._fsp--;
                    if (state.failed) return extendedType;

                    if ( state.backtracking==0 ) { extendedType.setType((ci!=null?ci.type:null));
                              extendedType.setInvocationExpression((ci!=null?ci.invocationExpression:null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return extendedType;
    }
    // $ANTLR end "extendedType"



    // $ANTLR start "classSpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:728:1: classSpecifier returns [ClassSpecifier classSpecifier] : ( COMPUTE | SPECIFY ) (ci= classInstantiation )? ;
    public ClassSpecifier classSpecifier() throws RecognitionException {
        ClassSpecifier classSpecifier = null;


        Token COMPUTE117=null;
        Token SPECIFY118=null;
        CeylonParser.classInstantiation_return ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:729:5: ( ( COMPUTE | SPECIFY ) (ci= classInstantiation )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:729:7: ( COMPUTE | SPECIFY ) (ci= classInstantiation )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:729:7: ( COMPUTE | SPECIFY )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==COMPUTE) ) {
                alt63=1;
            }
            else if ( (LA63_0==SPECIFY) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return classSpecifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;

            }
            switch (alt63) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:730:9: COMPUTE
                    {
                    COMPUTE117=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_classSpecifier4712); if (state.failed) return classSpecifier;

                    if ( state.backtracking==0 ) { classSpecifier = new ClassSpecifier(COMPUTE117); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:733:9: SPECIFY
                    {
                    SPECIFY118=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_classSpecifier4741); if (state.failed) return classSpecifier;

                    if ( state.backtracking==0 ) { classSpecifier = new ClassSpecifier(SPECIFY118); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:736:7: (ci= classInstantiation )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==SUPER||LA64_0==UIDENTIFIER) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:737:9: ci= classInstantiation
                    {
                    pushFollow(FOLLOW_classInstantiation_in_classSpecifier4780);
                    ci=classInstantiation();

                    state._fsp--;
                    if (state.failed) return classSpecifier;

                    if ( state.backtracking==0 ) { classSpecifier.setType((ci!=null?ci.type:null));
                              classSpecifier.setInvocationExpression((ci!=null?ci.invocationExpression:null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return classSpecifier;
    }
    // $ANTLR end "classSpecifier"


    public static class classInstantiation_return extends ParserRuleReturnScope {
        public SimpleType type;
        public InvocationExpression invocationExpression;
    };


    // $ANTLR start "classInstantiation"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:743:1: classInstantiation returns [SimpleType type, InvocationExpression invocationExpression] : (t1= typeNameWithArguments | SUPER MEMBER_OP t2= typeNameWithArguments ) ( positionalArguments )? ;
    public CeylonParser.classInstantiation_return classInstantiation() throws RecognitionException {
        CeylonParser.classInstantiation_return retval = new CeylonParser.classInstantiation_return();
        retval.start = input.LT(1);


        Token SUPER119=null;
        CeylonParser.typeNameWithArguments_return t1 =null;

        CeylonParser.typeNameWithArguments_return t2 =null;

        PositionalArgumentList positionalArguments120 =null;


         Primary p=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:745:5: ( (t1= typeNameWithArguments | SUPER MEMBER_OP t2= typeNameWithArguments ) ( positionalArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:745:7: (t1= typeNameWithArguments | SUPER MEMBER_OP t2= typeNameWithArguments ) ( positionalArguments )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:745:7: (t1= typeNameWithArguments | SUPER MEMBER_OP t2= typeNameWithArguments )
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==UIDENTIFIER) ) {
                alt65=1;
            }
            else if ( (LA65_0==SUPER) ) {
                alt65=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;

            }
            switch (alt65) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:746:9: t1= typeNameWithArguments
                    {
                    pushFollow(FOLLOW_typeNameWithArguments_in_classInstantiation4841);
                    t1=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { BaseType bt = new BaseType(null);
                              bt.setIdentifier((t1!=null?t1.identifier:null));
                              if ((t1!=null?t1.typeArgumentList:null)!=null)
                                  bt.setTypeArgumentList((t1!=null?t1.typeArgumentList:null));
                              retval.type =bt; 
                              ExtendedTypeExpression ete = new ExtendedTypeExpression(null);
                              ete.setExtendedType(retval.type); 
                              p = ete; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:755:9: SUPER MEMBER_OP t2= typeNameWithArguments
                    {
                    SUPER119=(Token)match(input,SUPER,FOLLOW_SUPER_in_classInstantiation4861); if (state.failed) return retval;

                    match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_classInstantiation4863); if (state.failed) return retval;

                    pushFollow(FOLLOW_typeNameWithArguments_in_classInstantiation4876);
                    t2=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { QualifiedType qt=new QualifiedType(null);
                              SuperType st = new SuperType(SUPER119);
                              qt.setOuterType(st);
                              qt.setIdentifier((t2!=null?t2.identifier:null));
                              if ((t2!=null?t2.typeArgumentList:null)!=null)
                                  qt.setTypeArgumentList((t2!=null?t2.typeArgumentList:null));
                              retval.type =qt;
                              ExtendedTypeExpression ete = new ExtendedTypeExpression(null);
                              ete.setExtendedType(retval.type); 
                              p = ete; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:768:7: ( positionalArguments )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==LPAREN) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:769:9: positionalArguments
                    {
                    pushFollow(FOLLOW_positionalArguments_in_classInstantiation4913);
                    positionalArguments120=positionalArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { InvocationExpression ie = new InvocationExpression(null);
                              ie.setPrimary(p);
                              ie.setPositionalArgumentList(positionalArguments120);
                              retval.invocationExpression =ie; 
                              p = ie; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "classInstantiation"



    // $ANTLR start "satisfiedTypes"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:785:1: satisfiedTypes returns [SatisfiedTypes satisfiedTypes] : SATISFIES (t1= abbreviatedType ) ( (i= INTERSECTION_OP | COMMA | UNION_OP ) (t2= abbreviatedType ) )* ;
    public SatisfiedTypes satisfiedTypes() throws RecognitionException {
        SatisfiedTypes satisfiedTypes = null;


        Token i=null;
        Token SATISFIES121=null;
        StaticType t1 =null;

        StaticType t2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:786:5: ( SATISFIES (t1= abbreviatedType ) ( (i= INTERSECTION_OP | COMMA | UNION_OP ) (t2= abbreviatedType ) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:786:7: SATISFIES (t1= abbreviatedType ) ( (i= INTERSECTION_OP | COMMA | UNION_OP ) (t2= abbreviatedType ) )*
            {
            SATISFIES121=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiedTypes4963); if (state.failed) return satisfiedTypes;

            if ( state.backtracking==0 ) { satisfiedTypes = new SatisfiedTypes(SATISFIES121); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:788:7: (t1= abbreviatedType )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:789:9: t1= abbreviatedType
            {
            pushFollow(FOLLOW_abbreviatedType_in_satisfiedTypes4993);
            t1=abbreviatedType();

            state._fsp--;
            if (state.failed) return satisfiedTypes;

            if ( state.backtracking==0 ) { if (t1!=null) satisfiedTypes.addType(t1); }

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:792:7: ( (i= INTERSECTION_OP | COMMA | UNION_OP ) (t2= abbreviatedType ) )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==COMMA||LA68_0==INTERSECTION_OP||LA68_0==UNION_OP) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:793:9: (i= INTERSECTION_OP | COMMA | UNION_OP ) (t2= abbreviatedType )
            	    {
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:793:9: (i= INTERSECTION_OP | COMMA | UNION_OP )
            	    int alt67=3;
            	    switch ( input.LA(1) ) {
            	    case INTERSECTION_OP:
            	        {
            	        alt67=1;
            	        }
            	        break;
            	    case COMMA:
            	        {
            	        alt67=2;
            	        }
            	        break;
            	    case UNION_OP:
            	        {
            	        alt67=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return satisfiedTypes;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 67, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt67) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:794:11: i= INTERSECTION_OP
            	            {
            	            i=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_satisfiedTypes5045); if (state.failed) return satisfiedTypes;

            	            if ( state.backtracking==0 ) { satisfiedTypes.setEndToken(i); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:797:11: COMMA
            	            {
            	            match(input,COMMA,FOLLOW_COMMA_in_satisfiedTypes5080); if (state.failed) return satisfiedTypes;

            	            }
            	            break;
            	        case 3 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:797:17: UNION_OP
            	            {
            	            match(input,UNION_OP,FOLLOW_UNION_OP_in_satisfiedTypes5082); if (state.failed) return satisfiedTypes;

            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                          new MismatchedTokenException(INTERSECTION_OP, input)); }

            	            }
            	            break;

            	    }


            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:801:9: (t2= abbreviatedType )
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:802:11: t2= abbreviatedType
            	    {
            	    pushFollow(FOLLOW_abbreviatedType_in_satisfiedTypes5128);
            	    t2=abbreviatedType();

            	    state._fsp--;
            	    if (state.failed) return satisfiedTypes;

            	    if ( state.backtracking==0 ) { if (t2!=null) {
            	                    satisfiedTypes.addType(t2); 
            	                    satisfiedTypes.setEndToken(null); } }

            	    }


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return satisfiedTypes;
    }
    // $ANTLR end "satisfiedTypes"



    // $ANTLR start "caseTypes"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:810:1: caseTypes returns [CaseTypes caseTypes] : CASE_TYPES ct1= caseType ( (u= UNION_OP | COMMA | INTERSECTION_OP ) (ct2= caseType ) )* ;
    public CaseTypes caseTypes() throws RecognitionException {
        CaseTypes caseTypes = null;


        Token u=null;
        Token CASE_TYPES122=null;
        CeylonParser.caseType_return ct1 =null;

        CeylonParser.caseType_return ct2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:811:5: ( CASE_TYPES ct1= caseType ( (u= UNION_OP | COMMA | INTERSECTION_OP ) (ct2= caseType ) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:811:7: CASE_TYPES ct1= caseType ( (u= UNION_OP | COMMA | INTERSECTION_OP ) (ct2= caseType ) )*
            {
            CASE_TYPES122=(Token)match(input,CASE_TYPES,FOLLOW_CASE_TYPES_in_caseTypes5180); if (state.failed) return caseTypes;

            if ( state.backtracking==0 ) { caseTypes = new CaseTypes(CASE_TYPES122); }

            pushFollow(FOLLOW_caseType_in_caseTypes5198);
            ct1=caseType();

            state._fsp--;
            if (state.failed) return caseTypes;

            if ( state.backtracking==0 ) { if ((ct1!=null?ct1.type:null)!=null) caseTypes.addType((ct1!=null?ct1.type:null)); 
                    if ((ct1!=null?ct1.instance:null)!=null) caseTypes.addBaseMemberExpression((ct1!=null?ct1.instance:null)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:816:7: ( (u= UNION_OP | COMMA | INTERSECTION_OP ) (ct2= caseType ) )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==COMMA||LA70_0==INTERSECTION_OP||LA70_0==UNION_OP) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:817:9: (u= UNION_OP | COMMA | INTERSECTION_OP ) (ct2= caseType )
            	    {
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:817:9: (u= UNION_OP | COMMA | INTERSECTION_OP )
            	    int alt69=3;
            	    switch ( input.LA(1) ) {
            	    case UNION_OP:
            	        {
            	        alt69=1;
            	        }
            	        break;
            	    case COMMA:
            	        {
            	        alt69=2;
            	        }
            	        break;
            	    case INTERSECTION_OP:
            	        {
            	        alt69=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return caseTypes;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 69, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt69) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:818:11: u= UNION_OP
            	            {
            	            u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_caseTypes5240); if (state.failed) return caseTypes;

            	            if ( state.backtracking==0 ) { caseTypes.setEndToken(u); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:821:11: COMMA
            	            {
            	            match(input,COMMA,FOLLOW_COMMA_in_caseTypes5276); if (state.failed) return caseTypes;

            	            }
            	            break;
            	        case 3 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:821:17: INTERSECTION_OP
            	            {
            	            match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_caseTypes5278); if (state.failed) return caseTypes;

            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                          new MismatchedTokenException(UNION_OP, input)); }

            	            }
            	            break;

            	    }


            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:825:9: (ct2= caseType )
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:826:11: ct2= caseType
            	    {
            	    pushFollow(FOLLOW_caseType_in_caseTypes5324);
            	    ct2=caseType();

            	    state._fsp--;
            	    if (state.failed) return caseTypes;

            	    if ( state.backtracking==0 ) { if ((ct2!=null?ct2.type:null)!=null) caseTypes.addType((ct2!=null?ct2.type:null)); 
            	                if ((ct2!=null?ct2.instance:null)!=null) caseTypes.addBaseMemberExpression((ct2!=null?ct2.instance:null)); 
            	                if ((ct2!=null?ct2.type:null)!=null||(ct2!=null?ct2.instance:null)!=null) caseTypes.setEndToken(null); }

            	    }


            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return caseTypes;
    }
    // $ANTLR end "caseTypes"


    public static class caseType_return extends ParserRuleReturnScope {
        public StaticType type;
        public BaseMemberExpression instance;
    };


    // $ANTLR start "caseType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:834:1: caseType returns [StaticType type, BaseMemberExpression instance] : (t= abbreviatedType | memberName );
    public CeylonParser.caseType_return caseType() throws RecognitionException {
        CeylonParser.caseType_return retval = new CeylonParser.caseType_return();
        retval.start = input.LT(1);


        StaticType t =null;

        Identifier memberName123 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:835:5: (t= abbreviatedType | memberName )
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( ((LA71_0 >= LBRACE && LA71_0 <= LBRACKET)||LA71_0==SMALLER_OP||LA71_0==UIDENTIFIER) ) {
                alt71=1;
            }
            else if ( (LA71_0==LIDENTIFIER) ) {
                alt71=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;

            }
            switch (alt71) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:835:7: t= abbreviatedType
                    {
                    pushFollow(FOLLOW_abbreviatedType_in_caseType5378);
                    t=abbreviatedType();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =t;}

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:837:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_caseType5395);
                    memberName123=memberName();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.instance = new BaseMemberExpression(null);
                            retval.instance.setIdentifier(memberName123);
                            retval.instance.setTypeArguments( new InferredTypeArguments(null) ); }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "caseType"



    // $ANTLR start "abstractedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:845:1: abstractedType returns [AbstractedType abstractedType] : ABSTRACTED_TYPE abbreviatedType ;
    public AbstractedType abstractedType() throws RecognitionException {
        AbstractedType abstractedType = null;


        Token ABSTRACTED_TYPE124=null;
        StaticType abbreviatedType125 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:846:5: ( ABSTRACTED_TYPE abbreviatedType )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:846:7: ABSTRACTED_TYPE abbreviatedType
            {
            ABSTRACTED_TYPE124=(Token)match(input,ABSTRACTED_TYPE,FOLLOW_ABSTRACTED_TYPE_in_abstractedType5430); if (state.failed) return abstractedType;

            if ( state.backtracking==0 ) { abstractedType = new AbstractedType(ABSTRACTED_TYPE124); }

            pushFollow(FOLLOW_abbreviatedType_in_abstractedType5446);
            abbreviatedType125=abbreviatedType();

            state._fsp--;
            if (state.failed) return abstractedType;

            if ( state.backtracking==0 ) { abstractedType.setType(abbreviatedType125); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return abstractedType;
    }
    // $ANTLR end "abstractedType"



    // $ANTLR start "parameters"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:852:1: parameters returns [ParameterList parameterList] : LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN ;
    public ParameterList parameters() throws RecognitionException {
        ParameterList parameterList = null;


        Token c=null;
        Token LPAREN126=null;
        Token RPAREN127=null;
        Parameter ap1 =null;

        Parameter ap2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:853:5: ( LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:853:7: LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN
            {
            LPAREN126=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parameters5475); if (state.failed) return parameterList;

            if ( state.backtracking==0 ) { parameterList =new ParameterList(LPAREN126); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:855:7: (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==COMPILER_ANNOTATION||LA74_0==DYNAMIC||LA74_0==FUNCTION_MODIFIER||(LA74_0 >= LBRACE && LA74_0 <= LBRACKET)||LA74_0==LIDENTIFIER||LA74_0==SMALLER_OP||LA74_0==STRING_LITERAL||LA74_0==UIDENTIFIER||(LA74_0 >= VALUE_MODIFIER && LA74_0 <= VOID_MODIFIER)) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:856:9: ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )*
                    {
                    pushFollow(FOLLOW_parameterDeclarationOrRef_in_parameters5503);
                    ap1=parameterDeclarationOrRef();

                    state._fsp--;
                    if (state.failed) return parameterList;

                    if ( state.backtracking==0 ) { if (ap1!=null)
                                  parameterList.addParameter(ap1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:859:9: (c= COMMA (ap2= parameterDeclarationOrRef |) )*
                    loop73:
                    do {
                        int alt73=2;
                        int LA73_0 = input.LA(1);

                        if ( (LA73_0==COMMA) ) {
                            alt73=1;
                        }


                        switch (alt73) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:860:11: c= COMMA (ap2= parameterDeclarationOrRef |)
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_parameters5538); if (state.failed) return parameterList;

                    	    if ( state.backtracking==0 ) { parameterList.setEndToken(c); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:862:11: (ap2= parameterDeclarationOrRef |)
                    	    int alt72=2;
                    	    int LA72_0 = input.LA(1);

                    	    if ( (LA72_0==COMPILER_ANNOTATION||LA72_0==DYNAMIC||LA72_0==FUNCTION_MODIFIER||(LA72_0 >= LBRACE && LA72_0 <= LBRACKET)||LA72_0==LIDENTIFIER||LA72_0==SMALLER_OP||LA72_0==STRING_LITERAL||LA72_0==UIDENTIFIER||(LA72_0 >= VALUE_MODIFIER && LA72_0 <= VOID_MODIFIER)) ) {
                    	        alt72=1;
                    	    }
                    	    else if ( (LA72_0==COMMA||LA72_0==RPAREN) ) {
                    	        alt72=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return parameterList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 72, 0, input);

                    	        throw nvae;

                    	    }
                    	    switch (alt72) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:863:13: ap2= parameterDeclarationOrRef
                    	            {
                    	            pushFollow(FOLLOW_parameterDeclarationOrRef_in_parameters5578);
                    	            ap2=parameterDeclarationOrRef();

                    	            state._fsp--;
                    	            if (state.failed) return parameterList;

                    	            if ( state.backtracking==0 ) { if (ap2!=null) {
                    	                              parameterList.addParameter(ap2); 
                    	                              parameterList.setEndToken(null); } }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:868:13: 
                    	            {
                    	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                    	                            new MismatchedTokenException(UIDENTIFIER, input)); }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop73;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN127=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parameters5658); if (state.failed) return parameterList;

            if ( state.backtracking==0 ) { parameterList.setEndToken(RPAREN127); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameterList;
    }
    // $ANTLR end "parameters"



    // $ANTLR start "parameter"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:877:1: parameter returns [ParameterDeclaration parameter] : compilerAnnotations annotations parameterDeclaration ;
    public ParameterDeclaration parameter() throws RecognitionException {
        ParameterDeclaration parameter = null;


        TypedDeclaration parameterDeclaration128 =null;

        List<CompilerAnnotation> compilerAnnotations129 =null;

        AnnotationList annotations130 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:878:5: ( compilerAnnotations annotations parameterDeclaration )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:878:7: compilerAnnotations annotations parameterDeclaration
            {
            pushFollow(FOLLOW_compilerAnnotations_in_parameter5687);
            compilerAnnotations129=compilerAnnotations();

            state._fsp--;
            if (state.failed) return parameter;

            pushFollow(FOLLOW_annotations_in_parameter5695);
            annotations130=annotations();

            state._fsp--;
            if (state.failed) return parameter;

            pushFollow(FOLLOW_parameterDeclaration_in_parameter5703);
            parameterDeclaration128=parameterDeclaration();

            state._fsp--;
            if (state.failed) return parameter;

            if ( state.backtracking==0 ) { TypedDeclaration d = parameterDeclaration128;
                    d.getCompilerAnnotations().addAll(compilerAnnotations129);
                    d.setAnnotationList(annotations130);
                    if (d instanceof AttributeDeclaration) {
                        ValueParameterDeclaration vp = new ValueParameterDeclaration(null);
                        vp.setTypedDeclaration(d);
                        parameter = vp;
                    }
                    else if (d instanceof MethodDeclaration) {
                        FunctionalParameterDeclaration fp = new FunctionalParameterDeclaration(null);
                        fp.setTypedDeclaration(d);
                        parameter = fp;
                    }
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameter"



    // $ANTLR start "parameterDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:897:1: parameterDeclaration returns [TypedDeclaration declaration] : ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( parameters )+ ( functionSpecifier )? ) ;
    public TypedDeclaration parameterDeclaration() throws RecognitionException {
        TypedDeclaration declaration = null;


        Token VOID_MODIFIER132=null;
        Token FUNCTION_MODIFIER133=null;
        Token DYNAMIC134=null;
        Token VALUE_MODIFIER135=null;
        Type variadicType131 =null;

        Identifier memberName136 =null;

        SpecifierExpression specifier137 =null;

        ParameterList parameters138 =null;

        SpecifierExpression functionSpecifier139 =null;


         AttributeDeclaration a = new AttributeDeclaration(null); 
                    MethodDeclaration m = new MethodDeclaration(null);
                    declaration = a; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:901:5: ( ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( parameters )+ ( functionSpecifier )? ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:901:7: ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( parameters )+ ( functionSpecifier )? )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:901:7: ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER )
            int alt75=5;
            switch ( input.LA(1) ) {
            case LBRACE:
            case LBRACKET:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt75=1;
                }
                break;
            case VOID_MODIFIER:
                {
                alt75=2;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt75=3;
                }
                break;
            case DYNAMIC:
                {
                alt75=4;
                }
                break;
            case VALUE_MODIFIER:
                {
                alt75=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;

            }

            switch (alt75) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:902:9: variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_parameterDeclaration5756);
                    variadicType131=variadicType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { a.setType(variadicType131);
                              m.setType(variadicType131); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:905:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER132=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_parameterDeclaration5776); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { m.setType(new VoidModifier(VOID_MODIFIER132));
                              declaration =m; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:908:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER133=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_parameterDeclaration5796); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { m.setType(new FunctionModifier(FUNCTION_MODIFIER133));
                              declaration =m; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:911:9: DYNAMIC
                    {
                    DYNAMIC134=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_parameterDeclaration5816); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { a.setType(new DynamicModifier(DYNAMIC134));
                              m.setType(new DynamicModifier(DYNAMIC134)); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:914:9: VALUE_MODIFIER
                    {
                    VALUE_MODIFIER135=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_parameterDeclaration5836); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { a.setType(new ValueModifier(VALUE_MODIFIER135)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberName_in_parameterDeclaration5862);
            memberName136=memberName();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { a.setIdentifier(memberName136);
                    m.setIdentifier(memberName136); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:920:7: ( ( specifier )? | ( parameters )+ ( functionSpecifier )? )
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==COMMA||LA79_0==RPAREN||LA79_0==SPECIFY) ) {
                alt79=1;
            }
            else if ( (LA79_0==LPAREN) ) {
                alt79=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;

            }
            switch (alt79) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:921:9: ( specifier )?
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:921:9: ( specifier )?
                    int alt76=2;
                    int LA76_0 = input.LA(1);

                    if ( (LA76_0==SPECIFY) ) {
                        alt76=1;
                    }
                    switch (alt76) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:922:11: specifier
                            {
                            pushFollow(FOLLOW_specifier_in_parameterDeclaration5900);
                            specifier137=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { a.setSpecifierOrInitializerExpression(specifier137); }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:926:9: ( parameters )+ ( functionSpecifier )?
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:926:9: ( parameters )+
                    int cnt77=0;
                    loop77:
                    do {
                        int alt77=2;
                        int LA77_0 = input.LA(1);

                        if ( (LA77_0==LPAREN) ) {
                            alt77=1;
                        }


                        switch (alt77) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:927:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_parameterDeclaration5953);
                    	    parameters138=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { m.addParameterList(parameters138);
                    	                declaration =m; }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt77 >= 1 ) break loop77;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(77, input);
                                throw eee;
                        }
                        cnt77++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:931:9: ( functionSpecifier )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==COMPUTE||LA78_0==SPECIFY) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:932:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_parameterDeclaration5998);
                            functionSpecifier139=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { m.setSpecifierExpression(functionSpecifier139); }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "parameterDeclaration"



    // $ANTLR start "parameterRef"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:938:1: parameterRef returns [InitializerParameter parameter] : memberName ( specifier )? ;
    public InitializerParameter parameterRef() throws RecognitionException {
        InitializerParameter parameter = null;


        Identifier memberName140 =null;

        SpecifierExpression specifier141 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:939:5: ( memberName ( specifier )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:939:7: memberName ( specifier )?
            {
            pushFollow(FOLLOW_memberName_in_parameterRef6050);
            memberName140=memberName();

            state._fsp--;
            if (state.failed) return parameter;

            if ( state.backtracking==0 ) { parameter = new InitializerParameter(null);
                    parameter.setIdentifier(memberName140); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:942:7: ( specifier )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==SPECIFY) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:943:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_parameterRef6076);
                    specifier141=specifier();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter.setSpecifierExpression(specifier141); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameterRef"



    // $ANTLR start "parameterDeclarationOrRef"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:948:1: parameterDeclarationOrRef returns [Parameter parameter] : (r= parameterRef |p= parameter );
    public Parameter parameterDeclarationOrRef() throws RecognitionException {
        Parameter parameter = null;


        InitializerParameter r =null;

        ParameterDeclaration p =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:949:5: (r= parameterRef |p= parameter )
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==LIDENTIFIER) ) {
                int LA81_1 = input.LA(2);

                if ( (LA81_1==COMMA||LA81_1==RPAREN||LA81_1==SPECIFY) ) {
                    alt81=1;
                }
                else if ( (LA81_1==DYNAMIC||LA81_1==FUNCTION_MODIFIER||(LA81_1 >= LBRACE && LA81_1 <= LBRACKET)||LA81_1==LIDENTIFIER||LA81_1==LPAREN||LA81_1==SMALLER_OP||LA81_1==UIDENTIFIER||LA81_1==VALUE_MODIFIER||LA81_1==VOID_MODIFIER) ) {
                    alt81=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return parameter;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 81, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA81_0==COMPILER_ANNOTATION||LA81_0==DYNAMIC||LA81_0==FUNCTION_MODIFIER||(LA81_0 >= LBRACE && LA81_0 <= LBRACKET)||LA81_0==SMALLER_OP||LA81_0==STRING_LITERAL||LA81_0==UIDENTIFIER||(LA81_0 >= VALUE_MODIFIER && LA81_0 <= VOID_MODIFIER)) ) {
                alt81=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return parameter;}
                NoViableAltException nvae =
                    new NoViableAltException("", 81, 0, input);

                throw nvae;

            }
            switch (alt81) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:950:7: r= parameterRef
                    {
                    pushFollow(FOLLOW_parameterRef_in_parameterDeclarationOrRef6124);
                    r=parameterRef();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter =r; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:953:7: p= parameter
                    {
                    pushFollow(FOLLOW_parameter_in_parameterDeclarationOrRef6149);
                    p=parameter();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter =p; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameterDeclarationOrRef"



    // $ANTLR start "typeParameters"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:957:1: typeParameters returns [TypeParameterList typeParameterList] : SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP ;
    public TypeParameterList typeParameters() throws RecognitionException {
        TypeParameterList typeParameterList = null;


        Token c=null;
        Token SMALLER_OP142=null;
        Token LARGER_OP143=null;
        TypeParameterDeclaration tp1 =null;

        TypeParameterDeclaration tp2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:958:5: ( SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:958:7: SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP
            {
            SMALLER_OP142=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeParameters6178); if (state.failed) return typeParameterList;

            if ( state.backtracking==0 ) { typeParameterList = new TypeParameterList(SMALLER_OP142); }

            pushFollow(FOLLOW_typeParameter_in_typeParameters6196);
            tp1=typeParameter();

            state._fsp--;
            if (state.failed) return typeParameterList;

            if ( state.backtracking==0 ) { if (tp1 instanceof TypeParameterDeclaration)
                        typeParameterList.addTypeParameterDeclaration(tp1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:963:7: (c= COMMA (tp2= typeParameter |) )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==COMMA) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:964:9: c= COMMA (tp2= typeParameter |)
            	    {
            	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_typeParameters6224); if (state.failed) return typeParameterList;

            	    if ( state.backtracking==0 ) { typeParameterList.setEndToken(c); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:966:9: (tp2= typeParameter |)
            	    int alt82=2;
            	    int LA82_0 = input.LA(1);

            	    if ( (LA82_0==ALIAS||(LA82_0 >= ASSERT && LA82_0 <= ASSIGN)||(LA82_0 >= BACKTICK && LA82_0 <= BREAK)||(LA82_0 >= CHAR_LITERAL && LA82_0 <= CLASS_DEFINITION)||LA82_0==COMPILER_ANNOTATION||LA82_0==CONTINUE||(LA82_0 >= DECREMENT_OP && LA82_0 <= DIFFERENCE_OP)||LA82_0==DYNAMIC||(LA82_0 >= FLOAT_LITERAL && LA82_0 <= FUNCTION_MODIFIER)||(LA82_0 >= IF_CLAUSE && LA82_0 <= INTERFACE_DEFINITION)||LA82_0==IN_OP||(LA82_0 >= LBRACE && LA82_0 <= LBRACKET)||LA82_0==LIDENTIFIER||LA82_0==LPAREN||LA82_0==MODULE||LA82_0==NATURAL_LITERAL||(LA82_0 >= NOT_OP && LA82_0 <= OBJECT_DEFINITION)||(LA82_0 >= OUT && LA82_0 <= PACKAGE)||LA82_0==PRODUCT_OP||(LA82_0 >= RETURN && LA82_0 <= RPAREN)||(LA82_0 >= SEMICOLON && LA82_0 <= SMALLER_OP)||LA82_0==STRING_LITERAL||LA82_0==STRING_START||(LA82_0 >= SUM_OP && LA82_0 <= SWITCH_CLAUSE)||(LA82_0 >= THIS && LA82_0 <= UIDENTIFIER)||(LA82_0 >= VALUE_MODIFIER && LA82_0 <= WHILE_CLAUSE)) ) {
            	        alt82=1;
            	    }
            	    else if ( (LA82_0==COMMA||LA82_0==LARGER_OP) ) {
            	        alt82=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return typeParameterList;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 82, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt82) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:967:11: tp2= typeParameter
            	            {
            	            pushFollow(FOLLOW_typeParameter_in_typeParameters6258);
            	            tp2=typeParameter();

            	            state._fsp--;
            	            if (state.failed) return typeParameterList;

            	            if ( state.backtracking==0 ) { if (tp2 instanceof TypeParameterDeclaration)
            	                            typeParameterList.addTypeParameterDeclaration(tp2);
            	                        typeParameterList.setEndToken(null); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:971:11: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                            new MismatchedTokenException(UIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);


            LARGER_OP143=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeParameters6309); if (state.failed) return typeParameterList;

            if ( state.backtracking==0 ) { typeParameterList.setEndToken(LARGER_OP143); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeParameterList;
    }
    // $ANTLR end "typeParameters"



    // $ANTLR start "typeParameter"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:979:1: typeParameter returns [TypeParameterDeclaration typeParameter] : compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )? ;
    public TypeParameterDeclaration typeParameter() throws RecognitionException {
        TypeParameterDeclaration typeParameter = null;


        TypeVariance variance144 =null;

        Identifier typeNameDeclaration145 =null;

        TypeSpecifier typeDefault146 =null;

        List<CompilerAnnotation> compilerAnnotations147 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:980:5: ( compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:980:7: compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )?
            {
            if ( state.backtracking==0 ) { typeParameter = new TypeParameterDeclaration(null); }

            pushFollow(FOLLOW_compilerAnnotations_in_typeParameter6346);
            compilerAnnotations147=compilerAnnotations();

            state._fsp--;
            if (state.failed) return typeParameter;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:982:7: ( variance )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==IN_OP||LA84_0==OUT) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:983:9: variance
                    {
                    pushFollow(FOLLOW_variance_in_typeParameter6365);
                    variance144=variance();

                    state._fsp--;
                    if (state.failed) return typeParameter;

                    if ( state.backtracking==0 ) { typeParameter.setTypeVariance(variance144); }

                    }
                    break;

            }


            pushFollow(FOLLOW_typeNameDeclaration_in_typeParameter6395);
            typeNameDeclaration145=typeNameDeclaration();

            state._fsp--;
            if (state.failed) return typeParameter;

            if ( state.backtracking==0 ) { typeParameter.setIdentifier(typeNameDeclaration145); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:988:7: ( typeDefault )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==SPECIFY) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:989:9: typeDefault
                    {
                    pushFollow(FOLLOW_typeDefault_in_typeParameter6421);
                    typeDefault146=typeDefault();

                    state._fsp--;
                    if (state.failed) return typeParameter;

                    if ( state.backtracking==0 ) { typeParameter.setTypeSpecifier(typeDefault146); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { typeParameter.getCompilerAnnotations().addAll(compilerAnnotations147); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeParameter;
    }
    // $ANTLR end "typeParameter"



    // $ANTLR start "variance"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:995:1: variance returns [TypeVariance typeVariance] : ( IN_OP | OUT );
    public TypeVariance variance() throws RecognitionException {
        TypeVariance typeVariance = null;


        Token IN_OP148=null;
        Token OUT149=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:996:5: ( IN_OP | OUT )
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==IN_OP) ) {
                alt86=1;
            }
            else if ( (LA86_0==OUT) ) {
                alt86=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return typeVariance;}
                NoViableAltException nvae =
                    new NoViableAltException("", 86, 0, input);

                throw nvae;

            }
            switch (alt86) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:996:7: IN_OP
                    {
                    IN_OP148=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_variance6469); if (state.failed) return typeVariance;

                    if ( state.backtracking==0 ) { typeVariance = new TypeVariance(IN_OP148); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:998:7: OUT
                    {
                    OUT149=(Token)match(input,OUT,FOLLOW_OUT_in_variance6485); if (state.failed) return typeVariance;

                    if ( state.backtracking==0 ) { typeVariance = new TypeVariance(OUT149); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeVariance;
    }
    // $ANTLR end "variance"



    // $ANTLR start "typeConstraint"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1002:1: typeConstraint returns [TypeConstraint typeConstraint] : compilerAnnotations TYPE_CONSTRAINT typeNameDeclaration ( parameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )? ;
    public TypeConstraint typeConstraint() throws RecognitionException {
        TypeConstraint typeConstraint = null;


        Token TYPE_CONSTRAINT150=null;
        List<CompilerAnnotation> compilerAnnotations151 =null;

        Identifier typeNameDeclaration152 =null;

        ParameterList parameters153 =null;

        CaseTypes caseTypes154 =null;

        SatisfiedTypes satisfiedTypes155 =null;

        AbstractedType abstractedType156 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1003:5: ( compilerAnnotations TYPE_CONSTRAINT typeNameDeclaration ( parameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1003:7: compilerAnnotations TYPE_CONSTRAINT typeNameDeclaration ( parameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )?
            {
            pushFollow(FOLLOW_compilerAnnotations_in_typeConstraint6518);
            compilerAnnotations151=compilerAnnotations();

            state._fsp--;
            if (state.failed) return typeConstraint;

            TYPE_CONSTRAINT150=(Token)match(input,TYPE_CONSTRAINT,FOLLOW_TYPE_CONSTRAINT_in_typeConstraint6526); if (state.failed) return typeConstraint;

            if ( state.backtracking==0 ) { typeConstraint = new TypeConstraint(TYPE_CONSTRAINT150); 
                    typeConstraint.getCompilerAnnotations().addAll(compilerAnnotations151); }

            pushFollow(FOLLOW_typeNameDeclaration_in_typeConstraint6542);
            typeNameDeclaration152=typeNameDeclaration();

            state._fsp--;
            if (state.failed) return typeConstraint;

            if ( state.backtracking==0 ) { typeConstraint.setIdentifier(typeNameDeclaration152); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1010:7: ( parameters )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==LPAREN) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1011:9: parameters
                    {
                    pushFollow(FOLLOW_parameters_in_typeConstraint6576);
                    parameters153=parameters();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setParameterList(parameters153); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1014:7: ( caseTypes )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==CASE_TYPES) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1015:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_typeConstraint6613);
                    caseTypes154=caseTypes();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setCaseTypes(caseTypes154); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1019:7: ( satisfiedTypes )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==SATISFIES) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1020:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_typeConstraint6657);
                    satisfiedTypes155=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setSatisfiedTypes(satisfiedTypes155); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1023:7: ( abstractedType )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==ABSTRACTED_TYPE) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1024:9: abstractedType
                    {
                    pushFollow(FOLLOW_abstractedType_in_typeConstraint6695);
                    abstractedType156=abstractedType();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setAbstractedType(abstractedType156); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeConstraint;
    }
    // $ANTLR end "typeConstraint"



    // $ANTLR start "typeConstraints"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1029:1: typeConstraints returns [TypeConstraintList typeConstraintList] : ( typeConstraint )+ ;
    public TypeConstraintList typeConstraints() throws RecognitionException {
        TypeConstraintList typeConstraintList = null;


        TypeConstraint typeConstraint157 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1030:5: ( ( typeConstraint )+ )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1030:7: ( typeConstraint )+
            {
            if ( state.backtracking==0 ) { typeConstraintList =new TypeConstraintList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1031:7: ( typeConstraint )+
            int cnt91=0;
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==COMPILER_ANNOTATION||LA91_0==TYPE_CONSTRAINT) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1032:9: typeConstraint
            	    {
            	    pushFollow(FOLLOW_typeConstraint_in_typeConstraints6753);
            	    typeConstraint157=typeConstraint();

            	    state._fsp--;
            	    if (state.failed) return typeConstraintList;

            	    if ( state.backtracking==0 ) { if (typeConstraint157!=null)
            	                typeConstraintList.addTypeConstraint(typeConstraint157); }

            	    }
            	    break;

            	default :
            	    if ( cnt91 >= 1 ) break loop91;
            	    if (state.backtracking>0) {state.failed=true; return typeConstraintList;}
                        EarlyExitException eee =
                            new EarlyExitException(91, input);
                        throw eee;
                }
                cnt91++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeConstraintList;
    }
    // $ANTLR end "typeConstraints"



    // $ANTLR start "annotationListStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1038:1: annotationListStart : ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VOID_MODIFIER ) ;
    public void annotationListStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1039:5: ( ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VOID_MODIFIER ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1039:7: ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VOID_MODIFIER )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1039:7: ( stringLiteral | annotation )
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==STRING_LITERAL||LA92_0==VERBATIM_STRING) ) {
                alt92=1;
            }
            else if ( (LA92_0==LIDENTIFIER) ) {
                alt92=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;

            }
            switch (alt92) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1039:8: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotationListStart6790);
                    stringLiteral();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1039:22: annotation
                    {
                    pushFollow(FOLLOW_annotation_in_annotationListStart6792);
                    annotation();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            if ( input.LA(1)==FUNCTION_MODIFIER||input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER||input.LA(1)==VOID_MODIFIER ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotationListStart"



    // $ANTLR start "declarationOrStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1043:1: declarationOrStatement returns [Statement statement] options {memoize=true; } : compilerAnnotations ( ( annotatedDeclarationStart )=>d= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d1= declaration |s= statement ) ;
    public Statement declarationOrStatement() throws RecognitionException {
        Statement statement = null;

        int declarationOrStatement_StartIndex = input.index();

        Declaration d =null;

        Declaration d1 =null;

        Statement s =null;

        Assertion assertion158 =null;

        List<CompilerAnnotation> compilerAnnotations159 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return statement; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1045:5: ( compilerAnnotations ( ( annotatedDeclarationStart )=>d= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d1= declaration |s= statement ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1045:7: compilerAnnotations ( ( annotatedDeclarationStart )=>d= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d1= declaration |s= statement )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_declarationOrStatement6842);
            compilerAnnotations159=compilerAnnotations();

            state._fsp--;
            if (state.failed) return statement;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1046:7: ( ( annotatedDeclarationStart )=>d= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d1= declaration |s= statement )
            int alt93=4;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==STRING_LITERAL) ) {
                int LA93_1 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt93=1;
                }
                else if ( (synpred4_Ceylon()) ) {
                    alt93=2;
                }
                else if ( (synpred5_Ceylon()) ) {
                    alt93=3;
                }
                else if ( (true) ) {
                    alt93=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA93_0==VERBATIM_STRING) ) {
                int LA93_2 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt93=1;
                }
                else if ( (synpred4_Ceylon()) ) {
                    alt93=2;
                }
                else if ( (synpred5_Ceylon()) ) {
                    alt93=3;
                }
                else if ( (true) ) {
                    alt93=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA93_0==LIDENTIFIER) ) {
                int LA93_3 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt93=1;
                }
                else if ( (synpred4_Ceylon()) ) {
                    alt93=2;
                }
                else if ( (synpred5_Ceylon()) ) {
                    alt93=3;
                }
                else if ( (true) ) {
                    alt93=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA93_0==CLASS_DEFINITION) ) {
                int LA93_4 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt93=1;
                }
                else if ( (synpred5_Ceylon()) ) {
                    alt93=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA93_0==INTERFACE_DEFINITION) ) {
                int LA93_5 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt93=1;
                }
                else if ( (synpred5_Ceylon()) ) {
                    alt93=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA93_0==DYNAMIC) ) {
                int LA93_6 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt93=1;
                }
                else if ( (synpred5_Ceylon()) ) {
                    alt93=3;
                }
                else if ( (true) ) {
                    alt93=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA93_0==ALIAS) ) {
                int LA93_7 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt93=1;
                }
                else if ( (synpred5_Ceylon()) ) {
                    alt93=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 7, input);

                    throw nvae;

                }
            }
            else if ( (LA93_0==OBJECT_DEFINITION) ) {
                int LA93_8 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt93=1;
                }
                else if ( (synpred5_Ceylon()) ) {
                    alt93=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 8, input);

                    throw nvae;

                }
            }
            else if ( (LA93_0==ASSIGN) ) {
                int LA93_9 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt93=1;
                }
                else if ( (synpred5_Ceylon()) ) {
                    alt93=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 9, input);

                    throw nvae;

                }
            }
            else if ( (LA93_0==VOID_MODIFIER) ) {
                int LA93_10 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt93=1;
                }
                else if ( (synpred5_Ceylon()) ) {
                    alt93=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA93_0==FUNCTION_MODIFIER) ) {
                int LA93_11 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt93=1;
                }
                else if ( (synpred5_Ceylon()) ) {
                    alt93=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 11, input);

                    throw nvae;

                }
            }
            else if ( (LA93_0==VALUE_MODIFIER) ) {
                int LA93_12 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt93=1;
                }
                else if ( (synpred5_Ceylon()) ) {
                    alt93=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 12, input);

                    throw nvae;

                }
            }
            else if ( (LA93_0==UIDENTIFIER) ) {
                int LA93_13 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt93=1;
                }
                else if ( (synpred5_Ceylon()) ) {
                    alt93=3;
                }
                else if ( (true) ) {
                    alt93=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 13, input);

                    throw nvae;

                }
            }
            else if ( (LA93_0==SMALLER_OP) ) {
                int LA93_14 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt93=1;
                }
                else if ( (synpred5_Ceylon()) ) {
                    alt93=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 14, input);

                    throw nvae;

                }
            }
            else if ( (LA93_0==LBRACKET) ) {
                int LA93_15 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt93=1;
                }
                else if ( (synpred5_Ceylon()) ) {
                    alt93=3;
                }
                else if ( (true) ) {
                    alt93=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 15, input);

                    throw nvae;

                }
            }
            else if ( (LA93_0==LBRACE) ) {
                int LA93_16 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt93=1;
                }
                else if ( (synpred5_Ceylon()) ) {
                    alt93=3;
                }
                else if ( (true) ) {
                    alt93=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 16, input);

                    throw nvae;

                }
            }
            else if ( (LA93_0==ASSERT) && (synpred4_Ceylon())) {
                alt93=2;
            }
            else if ( ((LA93_0 >= BACKTICK && LA93_0 <= BREAK)||LA93_0==CHAR_LITERAL||LA93_0==CONTINUE||(LA93_0 >= DECREMENT_OP && LA93_0 <= DIFFERENCE_OP)||(LA93_0 >= FLOAT_LITERAL && LA93_0 <= FOR_CLAUSE)||LA93_0==IF_CLAUSE||LA93_0==INCREMENT_OP||LA93_0==LPAREN||LA93_0==NATURAL_LITERAL||LA93_0==NOT_OP||(LA93_0 >= OUTER && LA93_0 <= PACKAGE)||LA93_0==RETURN||LA93_0==STRING_START||(LA93_0 >= SUM_OP && LA93_0 <= SWITCH_CLAUSE)||(LA93_0 >= THIS && LA93_0 <= TRY_CLAUSE)||LA93_0==WHILE_CLAUSE) ) {
                alt93=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;

            }
            switch (alt93) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1047:9: ( annotatedDeclarationStart )=>d= declaration
                    {
                    pushFollow(FOLLOW_declaration_in_declarationOrStatement6869);
                    d=declaration();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =d; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1049:9: ( annotatedAssertionStart )=> assertion
                    {
                    pushFollow(FOLLOW_assertion_in_declarationOrStatement6895);
                    assertion158=assertion();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = assertion158; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1051:9: ( annotationListStart )=>d1= declaration
                    {
                    pushFollow(FOLLOW_declaration_in_declarationOrStatement6923);
                    d1=declaration();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =d1; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1053:9: s= statement
                    {
                    pushFollow(FOLLOW_statement_in_declarationOrStatement6945);
                    s=statement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =s; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { if (statement!=null)
                        statement.getCompilerAnnotations().addAll(compilerAnnotations159); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 48, declarationOrStatement_StartIndex); }

        }
        return statement;
    }
    // $ANTLR end "declarationOrStatement"



    // $ANTLR start "declaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1060:1: declaration returns [Declaration declaration] : annotations ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration ) ;
    public Declaration declaration() throws RecognitionException {
        Declaration declaration = null;


        AnnotationList annotations160 =null;

        AnyClass classDeclaration161 =null;

        AnyInterface interfaceDeclaration162 =null;

        TypeAliasDeclaration aliasDeclaration163 =null;

        ObjectDefinition objectDeclaration164 =null;

        AttributeSetterDefinition setterDeclaration165 =null;

        AnyMethod voidOrInferredMethodDeclaration166 =null;

        AnyAttribute inferredAttributeDeclaration167 =null;

        TypedDeclaration typedMethodOrAttributeDeclaration168 =null;


         declaration = new MissingDeclaration(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1062:5: ( annotations ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1062:7: annotations ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration )
            {
            pushFollow(FOLLOW_annotations_in_declaration7001);
            annotations160=annotations();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setAnnotationList(annotations160); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1064:5: ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration )
            int alt94=8;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==CLASS_DEFINITION) ) {
                alt94=1;
            }
            else if ( (LA94_0==INTERFACE_DEFINITION) && (synpred6_Ceylon())) {
                alt94=2;
            }
            else if ( (LA94_0==DYNAMIC) ) {
                int LA94_3 = input.LA(2);

                if ( (synpred6_Ceylon()) ) {
                    alt94=2;
                }
                else if ( (true) ) {
                    alt94=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 94, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA94_0==ALIAS) ) {
                alt94=3;
            }
            else if ( (LA94_0==OBJECT_DEFINITION) ) {
                alt94=4;
            }
            else if ( (LA94_0==ASSIGN) ) {
                alt94=5;
            }
            else if ( (LA94_0==FUNCTION_MODIFIER||LA94_0==VOID_MODIFIER) ) {
                alt94=6;
            }
            else if ( (LA94_0==VALUE_MODIFIER) ) {
                alt94=7;
            }
            else if ( ((LA94_0 >= LBRACE && LA94_0 <= LBRACKET)||LA94_0==SMALLER_OP||LA94_0==UIDENTIFIER) ) {
                alt94=8;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;

            }
            switch (alt94) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1065:7: classDeclaration
                    {
                    pushFollow(FOLLOW_classDeclaration_in_declaration7024);
                    classDeclaration161=classDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =classDeclaration161; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1067:7: ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration
                    {
                    pushFollow(FOLLOW_interfaceDeclaration_in_declaration7050);
                    interfaceDeclaration162=interfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =interfaceDeclaration162; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1069:7: aliasDeclaration
                    {
                    pushFollow(FOLLOW_aliasDeclaration_in_declaration7066);
                    aliasDeclaration163=aliasDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =aliasDeclaration163; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1071:7: objectDeclaration
                    {
                    pushFollow(FOLLOW_objectDeclaration_in_declaration7082);
                    objectDeclaration164=objectDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =objectDeclaration164; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1073:7: setterDeclaration
                    {
                    pushFollow(FOLLOW_setterDeclaration_in_declaration7098);
                    setterDeclaration165=setterDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =setterDeclaration165; }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1075:7: voidOrInferredMethodDeclaration
                    {
                    pushFollow(FOLLOW_voidOrInferredMethodDeclaration_in_declaration7114);
                    voidOrInferredMethodDeclaration166=voidOrInferredMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =voidOrInferredMethodDeclaration166; }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1077:7: inferredAttributeDeclaration
                    {
                    pushFollow(FOLLOW_inferredAttributeDeclaration_in_declaration7130);
                    inferredAttributeDeclaration167=inferredAttributeDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =inferredAttributeDeclaration167; }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1079:7: typedMethodOrAttributeDeclaration
                    {
                    pushFollow(FOLLOW_typedMethodOrAttributeDeclaration_in_declaration7146);
                    typedMethodOrAttributeDeclaration168=typedMethodOrAttributeDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =typedMethodOrAttributeDeclaration168; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { declaration.setAnnotationList(annotations160);  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "declaration"



    // $ANTLR start "annotatedDeclarationStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1089:1: annotatedDeclarationStart : ( stringLiteral )? ( annotation )* ( ( unambiguousType )=> unambiguousType | declarationStart ) ;
    public void annotatedDeclarationStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1090:5: ( ( stringLiteral )? ( annotation )* ( ( unambiguousType )=> unambiguousType | declarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1090:7: ( stringLiteral )? ( annotation )* ( ( unambiguousType )=> unambiguousType | declarationStart )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1090:7: ( stringLiteral )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==STRING_LITERAL||LA95_0==VERBATIM_STRING) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1090:7: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotatedDeclarationStart7189);
                    stringLiteral();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1090:22: ( annotation )*
            loop96:
            do {
                int alt96=2;
                int LA96_0 = input.LA(1);

                if ( (LA96_0==LIDENTIFIER) ) {
                    alt96=1;
                }


                switch (alt96) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1090:22: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotatedDeclarationStart7192);
            	    annotation();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1091:7: ( ( unambiguousType )=> unambiguousType | declarationStart )
            int alt97=2;
            switch ( input.LA(1) ) {
            case UIDENTIFIER:
                {
                int LA97_1 = input.LA(2);

                if ( (synpred7_Ceylon()) ) {
                    alt97=1;
                }
                else if ( (true) ) {
                    alt97=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 97, 1, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA97_2 = input.LA(2);

                if ( (synpred7_Ceylon()) ) {
                    alt97=1;
                }
                else if ( (true) ) {
                    alt97=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 97, 2, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA97_3 = input.LA(2);

                if ( (synpred7_Ceylon()) ) {
                    alt97=1;
                }
                else if ( (true) ) {
                    alt97=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 97, 3, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA97_4 = input.LA(2);

                if ( (synpred7_Ceylon()) ) {
                    alt97=1;
                }
                else if ( (true) ) {
                    alt97=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 97, 4, input);

                    throw nvae;

                }
                }
                break;
            case ALIAS:
            case ASSIGN:
            case CLASS_DEFINITION:
            case DYNAMIC:
            case FUNCTION_MODIFIER:
            case INTERFACE_DEFINITION:
            case OBJECT_DEFINITION:
            case VALUE_MODIFIER:
            case VOID_MODIFIER:
                {
                alt97=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 97, 0, input);

                throw nvae;

            }

            switch (alt97) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1091:8: ( unambiguousType )=> unambiguousType
                    {
                    pushFollow(FOLLOW_unambiguousType_in_annotatedDeclarationStart7209);
                    unambiguousType();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1091:47: declarationStart
                    {
                    pushFollow(FOLLOW_declarationStart_in_annotatedDeclarationStart7213);
                    declarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedDeclarationStart"



    // $ANTLR start "annotatedAssertionStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1094:1: annotatedAssertionStart : ( stringLiteral )? ( annotation )* ASSERT ;
    public void annotatedAssertionStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1095:5: ( ( stringLiteral )? ( annotation )* ASSERT )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1095:7: ( stringLiteral )? ( annotation )* ASSERT
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1095:7: ( stringLiteral )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==STRING_LITERAL||LA98_0==VERBATIM_STRING) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1095:7: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotatedAssertionStart7231);
                    stringLiteral();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1095:22: ( annotation )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==LIDENTIFIER) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1095:22: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotatedAssertionStart7234);
            	    annotation();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);


            match(input,ASSERT,FOLLOW_ASSERT_in_annotatedAssertionStart7237); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedAssertionStart"



    // $ANTLR start "declarationStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1101:1: declarationStart : ( VALUE_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | ASSIGN | INTERFACE_DEFINITION | CLASS_DEFINITION | OBJECT_DEFINITION | ALIAS | variadicType LIDENTIFIER | DYNAMIC ( LIDENTIFIER | UIDENTIFIER ) );
    public void declarationStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1102:5: ( VALUE_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | ASSIGN | INTERFACE_DEFINITION | CLASS_DEFINITION | OBJECT_DEFINITION | ALIAS | variadicType LIDENTIFIER | DYNAMIC ( LIDENTIFIER | UIDENTIFIER ) )
            int alt100=10;
            switch ( input.LA(1) ) {
            case VALUE_MODIFIER:
                {
                alt100=1;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt100=2;
                }
                break;
            case VOID_MODIFIER:
                {
                alt100=3;
                }
                break;
            case ASSIGN:
                {
                alt100=4;
                }
                break;
            case INTERFACE_DEFINITION:
                {
                alt100=5;
                }
                break;
            case CLASS_DEFINITION:
                {
                alt100=6;
                }
                break;
            case OBJECT_DEFINITION:
                {
                alt100=7;
                }
                break;
            case ALIAS:
                {
                alt100=8;
                }
                break;
            case LBRACE:
            case LBRACKET:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt100=9;
                }
                break;
            case DYNAMIC:
                {
                alt100=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;

            }

            switch (alt100) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1102:7: VALUE_MODIFIER ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_declarationStart7257); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1103:7: FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_declarationStart7272); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1104:7: VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_declarationStart7287); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1105:7: ASSIGN
                    {
                    match(input,ASSIGN,FOLLOW_ASSIGN_in_declarationStart7302); if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1106:7: INTERFACE_DEFINITION
                    {
                    match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_declarationStart7310); if (state.failed) return ;

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1107:7: CLASS_DEFINITION
                    {
                    match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_declarationStart7318); if (state.failed) return ;

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1108:7: OBJECT_DEFINITION
                    {
                    match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_declarationStart7326); if (state.failed) return ;

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1109:7: ALIAS
                    {
                    match(input,ALIAS,FOLLOW_ALIAS_in_declarationStart7334); if (state.failed) return ;

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1110:7: variadicType LIDENTIFIER
                    {
                    pushFollow(FOLLOW_variadicType_in_declarationStart7343);
                    variadicType();

                    state._fsp--;
                    if (state.failed) return ;

                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_declarationStart7345); if (state.failed) return ;

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1111:7: DYNAMIC ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,DYNAMIC,FOLLOW_DYNAMIC_in_declarationStart7353); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "declarationStart"



    // $ANTLR start "unambiguousType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1117:1: unambiguousType : ( qualifiedType ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )? ( OPTIONAL | LBRACKET RBRACKET ) | LBRACE qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( PRODUCT_OP | SUM_OP ) RBRACE | LBRACKET qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )* ( PRODUCT_OP | SUM_OP ) RBRACKET );
    public void unambiguousType() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1118:5: ( qualifiedType ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )? ( OPTIONAL | LBRACKET RBRACKET ) | LBRACE qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( PRODUCT_OP | SUM_OP ) RBRACE | LBRACKET qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )* ( PRODUCT_OP | SUM_OP ) RBRACKET )
            int alt114=3;
            switch ( input.LA(1) ) {
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt114=1;
                }
                break;
            case LBRACE:
                {
                alt114=2;
                }
                break;
            case LBRACKET:
                {
                alt114=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;

            }

            switch (alt114) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1118:7: qualifiedType ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )? ( OPTIONAL | LBRACKET RBRACKET )
                    {
                    pushFollow(FOLLOW_qualifiedType_in_unambiguousType7383);
                    qualifiedType();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1119:7: ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )?
                    int alt102=2;
                    switch ( input.LA(1) ) {
                        case OPTIONAL:
                            {
                            int LA102_1 = input.LA(2);

                            if ( (LA102_1==ENTRY_OP) ) {
                                alt102=1;
                            }
                            }
                            break;
                        case LBRACKET:
                            {
                            int LA102_2 = input.LA(2);

                            if ( (LA102_2==RBRACKET) ) {
                                int LA102_5 = input.LA(3);

                                if ( (LA102_5==ENTRY_OP) ) {
                                    alt102=1;
                                }
                            }
                            }
                            break;
                        case ENTRY_OP:
                            {
                            alt102=1;
                            }
                            break;
                    }

                    switch (alt102) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1120:9: ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1120:9: ( OPTIONAL | LBRACKET RBRACKET )?
                            int alt101=3;
                            int LA101_0 = input.LA(1);

                            if ( (LA101_0==OPTIONAL) ) {
                                alt101=1;
                            }
                            else if ( (LA101_0==LBRACKET) ) {
                                alt101=2;
                            }
                            switch (alt101) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1120:10: OPTIONAL
                                    {
                                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType7403); if (state.failed) return ;

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1120:21: LBRACKET RBRACKET
                                    {
                                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType7407); if (state.failed) return ;

                                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType7409); if (state.failed) return ;

                                    }
                                    break;

                            }


                            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType7422); if (state.failed) return ;

                            pushFollow(FOLLOW_qualifiedType_in_unambiguousType7424);
                            qualifiedType();

                            state._fsp--;
                            if (state.failed) return ;

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1123:7: ( OPTIONAL | LBRACKET RBRACKET )
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( (LA103_0==OPTIONAL) ) {
                        alt103=1;
                    }
                    else if ( (LA103_0==LBRACKET) ) {
                        alt103=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 103, 0, input);

                        throw nvae;

                    }
                    switch (alt103) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1123:8: OPTIONAL
                            {
                            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType7442); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1123:19: LBRACKET RBRACKET
                            {
                            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType7446); if (state.failed) return ;

                            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType7448); if (state.failed) return ;

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1124:7: LBRACE qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( PRODUCT_OP | SUM_OP ) RBRACE
                    {
                    match(input,LBRACE,FOLLOW_LBRACE_in_unambiguousType7457); if (state.failed) return ;

                    pushFollow(FOLLOW_qualifiedType_in_unambiguousType7466);
                    qualifiedType();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1125:21: ( OPTIONAL | LBRACKET RBRACKET )?
                    int alt104=3;
                    int LA104_0 = input.LA(1);

                    if ( (LA104_0==OPTIONAL) ) {
                        alt104=1;
                    }
                    else if ( (LA104_0==LBRACKET) ) {
                        alt104=2;
                    }
                    switch (alt104) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1125:22: OPTIONAL
                            {
                            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType7469); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1125:33: LBRACKET RBRACKET
                            {
                            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType7473); if (state.failed) return ;

                            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType7475); if (state.failed) return ;

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1126:7: ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    int alt106=2;
                    int LA106_0 = input.LA(1);

                    if ( (LA106_0==ENTRY_OP) ) {
                        alt106=1;
                    }
                    switch (alt106) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1127:9: ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )?
                            {
                            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType7495); if (state.failed) return ;

                            pushFollow(FOLLOW_qualifiedType_in_unambiguousType7497);
                            qualifiedType();

                            state._fsp--;
                            if (state.failed) return ;

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1128:9: ( OPTIONAL | LBRACKET RBRACKET )?
                            int alt105=3;
                            int LA105_0 = input.LA(1);

                            if ( (LA105_0==OPTIONAL) ) {
                                alt105=1;
                            }
                            else if ( (LA105_0==LBRACKET) ) {
                                alt105=2;
                            }
                            switch (alt105) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1128:10: OPTIONAL
                                    {
                                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType7509); if (state.failed) return ;

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1128:21: LBRACKET RBRACKET
                                    {
                                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType7513); if (state.failed) return ;

                                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType7515); if (state.failed) return ;

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    if ( input.LA(1)==PRODUCT_OP||input.LA(1)==SUM_OP ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    match(input,RBRACE,FOLLOW_RBRACE_in_unambiguousType7548); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1132:7: LBRACKET qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )* ( PRODUCT_OP | SUM_OP ) RBRACKET
                    {
                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType7556); if (state.failed) return ;

                    pushFollow(FOLLOW_qualifiedType_in_unambiguousType7565);
                    qualifiedType();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1133:21: ( OPTIONAL | LBRACKET RBRACKET )?
                    int alt107=3;
                    int LA107_0 = input.LA(1);

                    if ( (LA107_0==OPTIONAL) ) {
                        alt107=1;
                    }
                    else if ( (LA107_0==LBRACKET) ) {
                        alt107=2;
                    }
                    switch (alt107) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1133:22: OPTIONAL
                            {
                            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType7568); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1133:33: LBRACKET RBRACKET
                            {
                            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType7572); if (state.failed) return ;

                            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType7574); if (state.failed) return ;

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1134:7: ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==ENTRY_OP) ) {
                        alt109=1;
                    }
                    switch (alt109) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1135:9: ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )?
                            {
                            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType7595); if (state.failed) return ;

                            pushFollow(FOLLOW_qualifiedType_in_unambiguousType7597);
                            qualifiedType();

                            state._fsp--;
                            if (state.failed) return ;

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1136:9: ( OPTIONAL | LBRACKET RBRACKET )?
                            int alt108=3;
                            int LA108_0 = input.LA(1);

                            if ( (LA108_0==OPTIONAL) ) {
                                alt108=1;
                            }
                            else if ( (LA108_0==LBRACKET) ) {
                                alt108=2;
                            }
                            switch (alt108) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1136:10: OPTIONAL
                                    {
                                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType7608); if (state.failed) return ;

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1136:21: LBRACKET RBRACKET
                                    {
                                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType7612); if (state.failed) return ;

                                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType7614); if (state.failed) return ;

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1138:7: ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )*
                    loop113:
                    do {
                        int alt113=2;
                        int LA113_0 = input.LA(1);

                        if ( (LA113_0==COMMA) ) {
                            alt113=1;
                        }


                        switch (alt113) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1139:9: COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_unambiguousType7644); if (state.failed) return ;

                    	    pushFollow(FOLLOW_qualifiedType_in_unambiguousType7655);
                    	    qualifiedType();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1140:23: ( OPTIONAL | LBRACKET RBRACKET )?
                    	    int alt110=3;
                    	    int LA110_0 = input.LA(1);

                    	    if ( (LA110_0==OPTIONAL) ) {
                    	        alt110=1;
                    	    }
                    	    else if ( (LA110_0==LBRACKET) ) {
                    	        alt110=2;
                    	    }
                    	    switch (alt110) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1140:24: OPTIONAL
                    	            {
                    	            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType7658); if (state.failed) return ;

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1140:35: LBRACKET RBRACKET
                    	            {
                    	            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType7662); if (state.failed) return ;

                    	            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType7664); if (state.failed) return ;

                    	            }
                    	            break;

                    	    }


                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1141:9: ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    	    int alt112=2;
                    	    int LA112_0 = input.LA(1);

                    	    if ( (LA112_0==ENTRY_OP) ) {
                    	        alt112=1;
                    	    }
                    	    switch (alt112) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1142:11: ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )?
                    	            {
                    	            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType7689); if (state.failed) return ;

                    	            pushFollow(FOLLOW_qualifiedType_in_unambiguousType7691);
                    	            qualifiedType();

                    	            state._fsp--;
                    	            if (state.failed) return ;

                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1143:11: ( OPTIONAL | LBRACKET RBRACKET )?
                    	            int alt111=3;
                    	            int LA111_0 = input.LA(1);

                    	            if ( (LA111_0==OPTIONAL) ) {
                    	                alt111=1;
                    	            }
                    	            else if ( (LA111_0==LBRACKET) ) {
                    	                alt111=2;
                    	            }
                    	            switch (alt111) {
                    	                case 1 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1143:12: OPTIONAL
                    	                    {
                    	                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType7705); if (state.failed) return ;

                    	                    }
                    	                    break;
                    	                case 2 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1143:23: LBRACKET RBRACKET
                    	                    {
                    	                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType7709); if (state.failed) return ;

                    	                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType7711); if (state.failed) return ;

                    	                    }
                    	                    break;

                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop113;
                        }
                    } while (true);


                    if ( input.LA(1)==PRODUCT_OP||input.LA(1)==SUM_OP ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType7755); if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "unambiguousType"



    // $ANTLR start "statement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1150:1: statement returns [Statement statement] : ( directiveStatement | controlStatement | expressionOrSpecificationStatement );
    public Statement statement() throws RecognitionException {
        Statement statement = null;


        Directive directiveStatement169 =null;

        ControlStatement controlStatement170 =null;

        Statement expressionOrSpecificationStatement171 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1151:5: ( directiveStatement | controlStatement | expressionOrSpecificationStatement )
            int alt115=3;
            switch ( input.LA(1) ) {
            case BREAK:
            case CONTINUE:
            case RETURN:
            case THROW:
                {
                alt115=1;
                }
                break;
            case FOR_CLAUSE:
            case IF_CLAUSE:
            case SWITCH_CLAUSE:
            case TRY_CLAUSE:
            case WHILE_CLAUSE:
                {
                alt115=2;
                }
                break;
            case DYNAMIC:
                {
                int LA115_3 = input.LA(2);

                if ( (LA115_3==LBRACKET) ) {
                    alt115=3;
                }
                else if ( (LA115_3==LBRACE) ) {
                    alt115=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 115, 3, input);

                    throw nvae;

                }
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case FLOAT_LITERAL:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case NOT_OP:
            case OUTER:
            case PACKAGE:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
                {
                alt115=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;

            }

            switch (alt115) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1151:7: directiveStatement
                    {
                    pushFollow(FOLLOW_directiveStatement_in_statement7776);
                    directiveStatement169=directiveStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = directiveStatement169; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1153:7: controlStatement
                    {
                    pushFollow(FOLLOW_controlStatement_in_statement7792);
                    controlStatement170=controlStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = controlStatement170; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1155:7: expressionOrSpecificationStatement
                    {
                    pushFollow(FOLLOW_expressionOrSpecificationStatement_in_statement7808);
                    expressionOrSpecificationStatement171=expressionOrSpecificationStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = expressionOrSpecificationStatement171; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "statement"



    // $ANTLR start "expressionOrSpecificationStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1159:1: expressionOrSpecificationStatement returns [Statement statement] : expression ( lazySpecifier )? ( SEMICOLON | COMMA ) ;
    public Statement expressionOrSpecificationStatement() throws RecognitionException {
        Statement statement = null;


        Token SEMICOLON174=null;
        Token COMMA175=null;
        Expression expression172 =null;

        SpecifierExpression lazySpecifier173 =null;


         SpecifierStatement ss=new SpecifierStatement(null); 
                    ExpressionStatement es=new ExpressionStatement(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1162:5: ( expression ( lazySpecifier )? ( SEMICOLON | COMMA ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1162:7: expression ( lazySpecifier )? ( SEMICOLON | COMMA )
            {
            pushFollow(FOLLOW_expression_in_expressionOrSpecificationStatement7846);
            expression172=expression();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement = es;
                    if (expression172!=null)
                        es.setExpression(expression172);
                    if (expression172.getTerm() instanceof AssignOp) {
                        AssignOp a = (AssignOp) expression172.getTerm();
                        if (a.getLeftTerm() instanceof BaseMemberExpression ||
                            a.getLeftTerm() instanceof ParameterizedExpression) {
                            Expression e = new Expression(null);
                            e.setTerm(a.getRightTerm());
                            SpecifierExpression se = new SpecifierExpression(null);
                            se.setExpression(e);
                            ss.setSpecifierExpression(se);
                            ss.setBaseMemberExpression(a.getLeftTerm());
                            statement = ss;
                        }
                    }
                  }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1180:7: ( lazySpecifier )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==COMPUTE) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1186:9: lazySpecifier
                    {
                    pushFollow(FOLLOW_lazySpecifier_in_expressionOrSpecificationStatement7882);
                    lazySpecifier173=lazySpecifier();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { ss.setSpecifierExpression(lazySpecifier173);
                              ss.setBaseMemberExpression(expression172.getTerm()); 
                              statement = ss; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1192:7: ( SEMICOLON | COMMA )
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==SEMICOLON) ) {
                alt117=1;
            }
            else if ( (LA117_0==COMMA) ) {
                alt117=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 117, 0, input);

                throw nvae;

            }
            switch (alt117) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1193:9: SEMICOLON
                    {
                    SEMICOLON174=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_expressionOrSpecificationStatement7927); if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setEndToken(SEMICOLON174); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1195:9: COMMA
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(SEMICOLON, input)); }

                    COMMA175=(Token)match(input,COMMA,FOLLOW_COMMA_in_expressionOrSpecificationStatement7957); if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setEndToken(COMMA175); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "expressionOrSpecificationStatement"



    // $ANTLR start "directiveStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1203:1: directiveStatement returns [Directive directive] : d= directive SEMICOLON ;
    public Directive directiveStatement() throws RecognitionException {
        Directive directive = null;


        Token SEMICOLON176=null;
        Directive d =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1204:5: (d= directive SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1204:7: d= directive SEMICOLON
            {
            pushFollow(FOLLOW_directive_in_directiveStatement8006);
            d=directive();

            state._fsp--;
            if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive =d; }

            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON176=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_directiveStatement8032); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive.setEndToken(SEMICOLON176); }

            if ( state.backtracking==0 ) { expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "directiveStatement"



    // $ANTLR start "directive"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1212:1: directive returns [Directive directive] : ( returnDirective | throwDirective | breakDirective | continueDirective );
    public Directive directive() throws RecognitionException {
        Directive directive = null;


        Return returnDirective177 =null;

        Throw throwDirective178 =null;

        Break breakDirective179 =null;

        Continue continueDirective180 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1213:5: ( returnDirective | throwDirective | breakDirective | continueDirective )
            int alt118=4;
            switch ( input.LA(1) ) {
            case RETURN:
                {
                alt118=1;
                }
                break;
            case THROW:
                {
                alt118=2;
                }
                break;
            case BREAK:
                {
                alt118=3;
                }
                break;
            case CONTINUE:
                {
                alt118=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return directive;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;

            }

            switch (alt118) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1213:7: returnDirective
                    {
                    pushFollow(FOLLOW_returnDirective_in_directive8069);
                    returnDirective177=returnDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = returnDirective177; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1215:7: throwDirective
                    {
                    pushFollow(FOLLOW_throwDirective_in_directive8085);
                    throwDirective178=throwDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = throwDirective178; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1217:7: breakDirective
                    {
                    pushFollow(FOLLOW_breakDirective_in_directive8101);
                    breakDirective179=breakDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = breakDirective179; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1219:7: continueDirective
                    {
                    pushFollow(FOLLOW_continueDirective_in_directive8117);
                    continueDirective180=continueDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = continueDirective180; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "directive"



    // $ANTLR start "returnDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1223:1: returnDirective returns [Return directive] : RETURN ( functionOrExpression )? ;
    public Return returnDirective() throws RecognitionException {
        Return directive = null;


        Token RETURN181=null;
        Expression functionOrExpression182 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1224:5: ( RETURN ( functionOrExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1224:7: RETURN ( functionOrExpression )?
            {
            RETURN181=(Token)match(input,RETURN,FOLLOW_RETURN_in_returnDirective8146); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Return(RETURN181); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1226:7: ( functionOrExpression )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==BACKTICK||LA119_0==CHAR_LITERAL||(LA119_0 >= DECREMENT_OP && LA119_0 <= DIFFERENCE_OP)||LA119_0==DYNAMIC||LA119_0==FLOAT_LITERAL||LA119_0==FUNCTION_MODIFIER||LA119_0==INCREMENT_OP||(LA119_0 >= LBRACE && LA119_0 <= LBRACKET)||LA119_0==LIDENTIFIER||LA119_0==LPAREN||LA119_0==NATURAL_LITERAL||LA119_0==NOT_OP||(LA119_0 >= OUTER && LA119_0 <= PACKAGE)||LA119_0==STRING_LITERAL||LA119_0==STRING_START||(LA119_0 >= SUM_OP && LA119_0 <= SUPER)||LA119_0==THIS||LA119_0==UIDENTIFIER||(LA119_0 >= VERBATIM_STRING && LA119_0 <= VOID_MODIFIER)) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1227:9: functionOrExpression
                    {
                    pushFollow(FOLLOW_functionOrExpression_in_returnDirective8173);
                    functionOrExpression182=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive.setExpression(functionOrExpression182); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "returnDirective"



    // $ANTLR start "throwDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1232:1: throwDirective returns [Throw directive] : THROW ( expression )? ;
    public Throw throwDirective() throws RecognitionException {
        Throw directive = null;


        Token THROW183=null;
        Expression expression184 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1233:5: ( THROW ( expression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1233:7: THROW ( expression )?
            {
            THROW183=(Token)match(input,THROW,FOLLOW_THROW_in_throwDirective8213); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Throw(THROW183); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1235:7: ( expression )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==BACKTICK||LA120_0==CHAR_LITERAL||(LA120_0 >= DECREMENT_OP && LA120_0 <= DIFFERENCE_OP)||LA120_0==DYNAMIC||LA120_0==FLOAT_LITERAL||LA120_0==INCREMENT_OP||(LA120_0 >= LBRACE && LA120_0 <= LBRACKET)||LA120_0==LIDENTIFIER||LA120_0==LPAREN||LA120_0==NATURAL_LITERAL||LA120_0==NOT_OP||(LA120_0 >= OUTER && LA120_0 <= PACKAGE)||LA120_0==STRING_LITERAL||LA120_0==STRING_START||(LA120_0 >= SUM_OP && LA120_0 <= SUPER)||LA120_0==THIS||LA120_0==UIDENTIFIER||LA120_0==VERBATIM_STRING) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1236:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_throwDirective8240);
                    expression184=expression();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive.setExpression(expression184); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "throwDirective"



    // $ANTLR start "breakDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1241:1: breakDirective returns [Break directive] : BREAK ;
    public Break breakDirective() throws RecognitionException {
        Break directive = null;


        Token BREAK185=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1242:5: ( BREAK )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1242:7: BREAK
            {
            BREAK185=(Token)match(input,BREAK,FOLLOW_BREAK_in_breakDirective8280); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Break(BREAK185); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "breakDirective"



    // $ANTLR start "continueDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1246:1: continueDirective returns [Continue directive] : CONTINUE ;
    public Continue continueDirective() throws RecognitionException {
        Continue directive = null;


        Token CONTINUE186=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1247:5: ( CONTINUE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1247:7: CONTINUE
            {
            CONTINUE186=(Token)match(input,CONTINUE,FOLLOW_CONTINUE_in_continueDirective8309); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Continue(CONTINUE186); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "continueDirective"



    // $ANTLR start "typeSpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1251:1: typeSpecifier returns [TypeSpecifier typeSpecifier] : ( COMPUTE | SPECIFY ) ( type )? ;
    public TypeSpecifier typeSpecifier() throws RecognitionException {
        TypeSpecifier typeSpecifier = null;


        Token COMPUTE187=null;
        Token SPECIFY188=null;
        StaticType type189 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1252:5: ( ( COMPUTE | SPECIFY ) ( type )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1252:7: ( COMPUTE | SPECIFY ) ( type )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1252:7: ( COMPUTE | SPECIFY )
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==COMPUTE) ) {
                alt121=1;
            }
            else if ( (LA121_0==SPECIFY) ) {
                alt121=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return typeSpecifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;

            }
            switch (alt121) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1253:9: COMPUTE
                    {
                    COMPUTE187=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_typeSpecifier8348); if (state.failed) return typeSpecifier;

                    if ( state.backtracking==0 ) { typeSpecifier = new TypeSpecifier(COMPUTE187); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1256:9: SPECIFY
                    {
                    SPECIFY188=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_typeSpecifier8377); if (state.failed) return typeSpecifier;

                    if ( state.backtracking==0 ) { typeSpecifier = new TypeSpecifier(SPECIFY188); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1259:7: ( type )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( ((LA122_0 >= LBRACE && LA122_0 <= LBRACKET)||LA122_0==SMALLER_OP||LA122_0==UIDENTIFIER) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1260:9: type
                    {
                    pushFollow(FOLLOW_type_in_typeSpecifier8414);
                    type189=type();

                    state._fsp--;
                    if (state.failed) return typeSpecifier;

                    if ( state.backtracking==0 ) { typeSpecifier.setType(type189); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeSpecifier;
    }
    // $ANTLR end "typeSpecifier"



    // $ANTLR start "typeDefault"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1265:1: typeDefault returns [TypeSpecifier typeSpecifier] : SPECIFY type ;
    public TypeSpecifier typeDefault() throws RecognitionException {
        TypeSpecifier typeSpecifier = null;


        Token SPECIFY190=null;
        StaticType type191 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1266:5: ( SPECIFY type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1266:7: SPECIFY type
            {
            SPECIFY190=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_typeDefault8454); if (state.failed) return typeSpecifier;

            if ( state.backtracking==0 ) { typeSpecifier = new DefaultTypeArgument(SPECIFY190); }

            pushFollow(FOLLOW_type_in_typeDefault8471);
            type191=type();

            state._fsp--;
            if (state.failed) return typeSpecifier;

            if ( state.backtracking==0 ) { typeSpecifier.setType(type191); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeSpecifier;
    }
    // $ANTLR end "typeDefault"



    // $ANTLR start "specifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1272:1: specifier returns [SpecifierExpression specifierExpression] : SPECIFY functionOrExpression ;
    public SpecifierExpression specifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token SPECIFY192=null;
        Expression functionOrExpression193 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1273:5: ( SPECIFY functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1273:7: SPECIFY functionOrExpression
            {
            SPECIFY192=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_specifier8500); if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression = new SpecifierExpression(SPECIFY192); }

            pushFollow(FOLLOW_functionOrExpression_in_specifier8516);
            functionOrExpression193=functionOrExpression();

            state._fsp--;
            if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression193); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "specifier"



    // $ANTLR start "lazySpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1279:1: lazySpecifier returns [SpecifierExpression specifierExpression] : COMPUTE functionOrExpression ;
    public SpecifierExpression lazySpecifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token COMPUTE194=null;
        Expression functionOrExpression195 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1280:5: ( COMPUTE functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1280:7: COMPUTE functionOrExpression
            {
            COMPUTE194=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_lazySpecifier8545); if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(COMPUTE194); }

            pushFollow(FOLLOW_functionOrExpression_in_lazySpecifier8561);
            functionOrExpression195=functionOrExpression();

            state._fsp--;
            if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression195); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "lazySpecifier"



    // $ANTLR start "functionSpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1286:1: functionSpecifier returns [SpecifierExpression specifierExpression] : ( COMPUTE | SPECIFY ) functionOrExpression ;
    public SpecifierExpression functionSpecifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token COMPUTE196=null;
        Token SPECIFY197=null;
        Expression functionOrExpression198 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1287:5: ( ( COMPUTE | SPECIFY ) functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1287:7: ( COMPUTE | SPECIFY ) functionOrExpression
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1287:7: ( COMPUTE | SPECIFY )
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==COMPUTE) ) {
                alt123=1;
            }
            else if ( (LA123_0==SPECIFY) ) {
                alt123=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return specifierExpression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 123, 0, input);

                throw nvae;

            }
            switch (alt123) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1288:9: COMPUTE
                    {
                    COMPUTE196=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_functionSpecifier8600); if (state.failed) return specifierExpression;

                    if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(COMPUTE196); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1291:9: SPECIFY
                    {
                    SPECIFY197=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_functionSpecifier8628); if (state.failed) return specifierExpression;

                    if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(SPECIFY197); }

                    }
                    break;

            }


            pushFollow(FOLLOW_functionOrExpression_in_functionSpecifier8654);
            functionOrExpression198=functionOrExpression();

            state._fsp--;
            if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression198); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "functionSpecifier"



    // $ANTLR start "expression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1298:1: expression returns [Expression expression] : assignmentExpression ;
    public Expression expression() throws RecognitionException {
        Expression expression = null;


        Term assignmentExpression199 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1299:5: ( assignmentExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1299:7: assignmentExpression
            {
            if ( state.backtracking==0 ) { expression = new Expression(null); }

            pushFollow(FOLLOW_assignmentExpression_in_expression8691);
            assignmentExpression199=assignmentExpression();

            state._fsp--;
            if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression.setTerm(assignmentExpression199); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "expression"



    // $ANTLR start "base"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1304:1: base returns [Primary primary] : ( nonstringLiteral | stringExpression | metaLiteral | enumeration | tuple | dynamicObject | selfReference | parExpression | baseReference );
    public Primary base() throws RecognitionException {
        Primary primary = null;


        Literal nonstringLiteral200 =null;

        Atom stringExpression201 =null;

        MetaLiteral metaLiteral202 =null;

        SequenceEnumeration enumeration203 =null;

        Tuple tuple204 =null;

        Dynamic dynamicObject205 =null;

        Atom selfReference206 =null;

        Expression parExpression207 =null;

        CeylonParser.baseReference_return baseReference208 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1305:5: ( nonstringLiteral | stringExpression | metaLiteral | enumeration | tuple | dynamicObject | selfReference | parExpression | baseReference )
            int alt124=9;
            switch ( input.LA(1) ) {
            case CHAR_LITERAL:
            case FLOAT_LITERAL:
            case NATURAL_LITERAL:
                {
                alt124=1;
                }
                break;
            case STRING_LITERAL:
            case STRING_START:
            case VERBATIM_STRING:
                {
                alt124=2;
                }
                break;
            case BACKTICK:
                {
                alt124=3;
                }
                break;
            case LBRACE:
                {
                alt124=4;
                }
                break;
            case LBRACKET:
                {
                alt124=5;
                }
                break;
            case DYNAMIC:
                {
                alt124=6;
                }
                break;
            case OUTER:
            case PACKAGE:
            case SUPER:
            case THIS:
                {
                alt124=7;
                }
                break;
            case LPAREN:
                {
                alt124=8;
                }
                break;
            case LIDENTIFIER:
            case UIDENTIFIER:
                {
                alt124=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return primary;}
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;

            }

            switch (alt124) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1305:7: nonstringLiteral
                    {
                    pushFollow(FOLLOW_nonstringLiteral_in_base8720);
                    nonstringLiteral200=nonstringLiteral();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =nonstringLiteral200; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1307:7: stringExpression
                    {
                    pushFollow(FOLLOW_stringExpression_in_base8736);
                    stringExpression201=stringExpression();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =stringExpression201; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1309:7: metaLiteral
                    {
                    pushFollow(FOLLOW_metaLiteral_in_base8752);
                    metaLiteral202=metaLiteral();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =metaLiteral202; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1311:7: enumeration
                    {
                    pushFollow(FOLLOW_enumeration_in_base8768);
                    enumeration203=enumeration();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =enumeration203; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1313:7: tuple
                    {
                    pushFollow(FOLLOW_tuple_in_base8784);
                    tuple204=tuple();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =tuple204; }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1315:7: dynamicObject
                    {
                    pushFollow(FOLLOW_dynamicObject_in_base8800);
                    dynamicObject205=dynamicObject();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =dynamicObject205; }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1317:7: selfReference
                    {
                    pushFollow(FOLLOW_selfReference_in_base8816);
                    selfReference206=selfReference();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =selfReference206; }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1319:7: parExpression
                    {
                    pushFollow(FOLLOW_parExpression_in_base8832);
                    parExpression207=parExpression();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =parExpression207; }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1321:7: baseReference
                    {
                    pushFollow(FOLLOW_baseReference_in_base8848);
                    baseReference208=baseReference();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { BaseMemberOrTypeExpression be;
                            if ((baseReference208!=null?baseReference208.isMember:false))
                                be = new BaseMemberExpression(null);
                            else
                                be = new BaseTypeExpression(null);
                            be.setIdentifier((baseReference208!=null?baseReference208.identifier:null));
                            be.setTypeArguments( new InferredTypeArguments(null) );
                            if ((baseReference208!=null?baseReference208.typeArgumentList:null)!=null)
                                be.setTypeArguments((baseReference208!=null?baseReference208.typeArgumentList:null));
                            primary =be; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return primary;
    }
    // $ANTLR end "base"


    public static class baseReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
        public boolean isMember;
    };


    // $ANTLR start "baseReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1334:1: baseReference returns [Identifier identifier, TypeArgumentList typeArgumentList, \n boolean isMember] : ( memberReference | typeReference ) ;
    public CeylonParser.baseReference_return baseReference() throws RecognitionException {
        CeylonParser.baseReference_return retval = new CeylonParser.baseReference_return();
        retval.start = input.LT(1);


        CeylonParser.memberReference_return memberReference209 =null;

        CeylonParser.typeReference_return typeReference210 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1336:5: ( ( memberReference | typeReference ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1337:5: ( memberReference | typeReference )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1337:5: ( memberReference | typeReference )
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==LIDENTIFIER) ) {
                alt125=1;
            }
            else if ( (LA125_0==UIDENTIFIER) ) {
                alt125=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 125, 0, input);

                throw nvae;

            }
            switch (alt125) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1338:7: memberReference
                    {
                    pushFollow(FOLLOW_memberReference_in_baseReference8890);
                    memberReference209=memberReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (memberReference209!=null?memberReference209.identifier:null);
                            retval.typeArgumentList = (memberReference209!=null?memberReference209.typeArgumentList:null);
                            retval.isMember = true; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1342:7: typeReference
                    {
                    pushFollow(FOLLOW_typeReference_in_baseReference8906);
                    typeReference210=typeReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (typeReference210!=null?typeReference210.identifier:null);
                            retval.typeArgumentList = (typeReference210!=null?typeReference210.typeArgumentList:null);
                            retval.isMember = false; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "baseReference"



    // $ANTLR start "primary"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1349:1: primary returns [Primary primary] : base ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )* ;
    public Primary primary() throws RecognitionException {
        Primary primary = null;


        Primary base211 =null;

        CeylonParser.qualifiedReference_return qualifiedReference212 =null;

        IndexExpression indexOrIndexRange213 =null;

        ParameterList parameters214 =null;

        PositionalArgumentList positionalArguments215 =null;

        NamedArgumentList namedArguments216 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1350:5: ( base ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1350:7: base ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )*
            {
            pushFollow(FOLLOW_base_in_primary8941);
            base211=base();

            state._fsp--;
            if (state.failed) return primary;

            if ( state.backtracking==0 ) { primary =base211; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1352:5: ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )*
            loop126:
            do {
                int alt126=6;
                alt126 = dfa126.predict(input);
                switch (alt126) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1355:11: qualifiedReference
            	    {
            	    pushFollow(FOLLOW_qualifiedReference_in_primary8974);
            	    qualifiedReference212=qualifiedReference();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { QualifiedMemberOrTypeExpression qe;
            	            if ((qualifiedReference212!=null?qualifiedReference212.isMember:false))
            	                qe = new QualifiedMemberExpression(null);
            	            else
            	                qe = new QualifiedTypeExpression(null);
            	            qe.setPrimary(primary);
            	            qe.setMemberOperator((qualifiedReference212!=null?qualifiedReference212.operator:null));
            	            qe.setIdentifier((qualifiedReference212!=null?qualifiedReference212.identifier:null));
            	            qe.setTypeArguments( new InferredTypeArguments(null) );
            	            if ((qualifiedReference212!=null?qualifiedReference212.typeArgumentList:null)!=null)
            	                qe.setTypeArguments((qualifiedReference212!=null?qualifiedReference212.typeArgumentList:null));
            	            primary =qe; }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1368:9: indexOrIndexRange
            	    {
            	    pushFollow(FOLLOW_indexOrIndexRange_in_primary8992);
            	    indexOrIndexRange213=indexOrIndexRange();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { indexOrIndexRange213.setPrimary(primary);
            	              primary = indexOrIndexRange213; }

            	    }
            	    break;
            	case 3 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1371:9: ( specifierParametersStart )=> parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_primary9018);
            	    parameters214=parameters();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { ParameterizedExpression pe;
            	              if (primary instanceof ParameterizedExpression) {
            	                  pe = (ParameterizedExpression) primary;
            	              } else {
            	                  pe = new ParameterizedExpression(null);
            	                  pe.setPrimary(primary);
            	              }
            	              pe.addParameterList(parameters214);
            	              primary = pe; }

            	    }
            	    break;
            	case 4 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1381:9: positionalArguments
            	    {
            	    pushFollow(FOLLOW_positionalArguments_in_primary9038);
            	    positionalArguments215=positionalArguments();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { InvocationExpression ie = new InvocationExpression(null);
            	              ie.setPrimary(primary);
            	              ie.setPositionalArgumentList(positionalArguments215); 
            	              primary =ie; }

            	    }
            	    break;
            	case 5 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1386:9: namedArguments
            	    {
            	    pushFollow(FOLLOW_namedArguments_in_primary9059);
            	    namedArguments216=namedArguments();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { InvocationExpression ie = new InvocationExpression(null);
            	              ie.setPrimary(primary);
            	              ie.setNamedArgumentList(namedArguments216);
            	              primary =ie; }

            	    }
            	    break;

            	default :
            	    break loop126;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return primary;
    }
    // $ANTLR end "primary"



    // $ANTLR start "specifierParametersStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1394:1: specifierParametersStart : LPAREN ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart ) ;
    public void specifierParametersStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1395:5: ( LPAREN ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1395:7: LPAREN ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart )
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_specifierParametersStart9093); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1396:5: ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart )
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==RPAREN) ) {
                alt128=1;
            }
            else if ( (LA128_0==ALIAS||LA128_0==ASSIGN||LA128_0==CLASS_DEFINITION||LA128_0==COMPILER_ANNOTATION||LA128_0==DYNAMIC||LA128_0==FUNCTION_MODIFIER||LA128_0==INTERFACE_DEFINITION||(LA128_0 >= LBRACE && LA128_0 <= LBRACKET)||LA128_0==LIDENTIFIER||LA128_0==OBJECT_DEFINITION||LA128_0==SMALLER_OP||LA128_0==STRING_LITERAL||LA128_0==UIDENTIFIER||(LA128_0 >= VALUE_MODIFIER && LA128_0 <= VOID_MODIFIER)) ) {
                alt128=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;

            }
            switch (alt128) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1397:7: RPAREN ( SPECIFY | COMPUTE | specifierParametersStart )
                    {
                    match(input,RPAREN,FOLLOW_RPAREN_in_specifierParametersStart9109); if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1397:14: ( SPECIFY | COMPUTE | specifierParametersStart )
                    int alt127=3;
                    switch ( input.LA(1) ) {
                    case SPECIFY:
                        {
                        alt127=1;
                        }
                        break;
                    case COMPUTE:
                        {
                        alt127=2;
                        }
                        break;
                    case LPAREN:
                        {
                        alt127=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 127, 0, input);

                        throw nvae;

                    }

                    switch (alt127) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1397:15: SPECIFY
                            {
                            match(input,SPECIFY,FOLLOW_SPECIFY_in_specifierParametersStart9112); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1397:23: COMPUTE
                            {
                            match(input,COMPUTE,FOLLOW_COMPUTE_in_specifierParametersStart9114); if (state.failed) return ;

                            }
                            break;
                        case 3 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1397:31: specifierParametersStart
                            {
                            pushFollow(FOLLOW_specifierParametersStart_in_specifierParametersStart9116);
                            specifierParametersStart();

                            state._fsp--;
                            if (state.failed) return ;

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1399:7: compilerAnnotations annotatedDeclarationStart
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_specifierParametersStart9132);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    pushFollow(FOLLOW_annotatedDeclarationStart_in_specifierParametersStart9134);
                    annotatedDeclarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "specifierParametersStart"


    public static class qualifiedReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public MemberOperator operator;
        public TypeArgumentList typeArgumentList;
        public boolean isMember;
    };


    // $ANTLR start "qualifiedReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1403:1: qualifiedReference returns [Identifier identifier, MemberOperator operator, \n TypeArgumentList typeArgumentList, boolean isMember] : memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>) ;
    public CeylonParser.qualifiedReference_return qualifiedReference() throws RecognitionException {
        CeylonParser.qualifiedReference_return retval = new CeylonParser.qualifiedReference_return();
        retval.start = input.LT(1);


        MemberOperator memberSelectionOperator217 =null;

        CeylonParser.memberReference_return memberReference218 =null;

        CeylonParser.typeReference_return typeReference219 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1405:5: ( memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1405:7: memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)
            {
            pushFollow(FOLLOW_memberSelectionOperator_in_qualifiedReference9161);
            memberSelectionOperator217=memberSelectionOperator();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.operator = memberSelectionOperator217;
                    retval.identifier = new Identifier(retval.operator.getToken());
                    retval.identifier.setText("");
                    retval.isMember =true; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1410:7: ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)
            int alt129=3;
            alt129 = dfa129.predict(input);
            switch (alt129) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1411:9: memberReference
                    {
                    pushFollow(FOLLOW_memberReference_in_qualifiedReference9189);
                    memberReference218=memberReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (memberReference218!=null?memberReference218.identifier:null);
                              retval.typeArgumentList = (memberReference218!=null?memberReference218.typeArgumentList:null); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1414:9: typeReference
                    {
                    pushFollow(FOLLOW_typeReference_in_qualifiedReference9209);
                    typeReference219=typeReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (typeReference219!=null?typeReference219.identifier:null);
                              retval.typeArgumentList = (typeReference219!=null?typeReference219.typeArgumentList:null);  
                              retval.isMember =false; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1418:9: (~ ( LIDENTIFIER | UIDENTIFIER ) )=>
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "qualifiedReference"



    // $ANTLR start "memberSelectionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1424:1: memberSelectionOperator returns [MemberOperator operator] : ( MEMBER_OP | SAFE_MEMBER_OP | SPREAD_OP );
    public MemberOperator memberSelectionOperator() throws RecognitionException {
        MemberOperator operator = null;


        Token MEMBER_OP220=null;
        Token SAFE_MEMBER_OP221=null;
        Token SPREAD_OP222=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1425:5: ( MEMBER_OP | SAFE_MEMBER_OP | SPREAD_OP )
            int alt130=3;
            switch ( input.LA(1) ) {
            case MEMBER_OP:
                {
                alt130=1;
                }
                break;
            case SAFE_MEMBER_OP:
                {
                alt130=2;
                }
                break;
            case SPREAD_OP:
                {
                alt130=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;

            }

            switch (alt130) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1425:7: MEMBER_OP
                    {
                    MEMBER_OP220=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_memberSelectionOperator9276); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new MemberOp(MEMBER_OP220); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1427:7: SAFE_MEMBER_OP
                    {
                    SAFE_MEMBER_OP221=(Token)match(input,SAFE_MEMBER_OP,FOLLOW_SAFE_MEMBER_OP_in_memberSelectionOperator9292); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new SafeMemberOp(SAFE_MEMBER_OP221); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1429:7: SPREAD_OP
                    {
                    SPREAD_OP222=(Token)match(input,SPREAD_OP,FOLLOW_SPREAD_OP_in_memberSelectionOperator9308); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new SpreadOp(SPREAD_OP222); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "memberSelectionOperator"



    // $ANTLR start "enumeration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1433:1: enumeration returns [SequenceEnumeration sequenceEnumeration] : LBRACE ( sequencedArgument )? RBRACE ;
    public SequenceEnumeration enumeration() throws RecognitionException {
        SequenceEnumeration sequenceEnumeration = null;


        Token LBRACE223=null;
        Token RBRACE225=null;
        SequencedArgument sequencedArgument224 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1434:5: ( LBRACE ( sequencedArgument )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1434:7: LBRACE ( sequencedArgument )? RBRACE
            {
            LBRACE223=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_enumeration9337); if (state.failed) return sequenceEnumeration;

            if ( state.backtracking==0 ) { sequenceEnumeration = new SequenceEnumeration(LBRACE223); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1436:7: ( sequencedArgument )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==ALIAS||(LA131_0 >= ASSERT && LA131_0 <= ASSIGN)||(LA131_0 >= BACKTICK && LA131_0 <= BREAK)||(LA131_0 >= CHAR_LITERAL && LA131_0 <= CLASS_DEFINITION)||LA131_0==COMPILER_ANNOTATION||LA131_0==CONTINUE||(LA131_0 >= DECREMENT_OP && LA131_0 <= DIFFERENCE_OP)||LA131_0==DYNAMIC||(LA131_0 >= FLOAT_LITERAL && LA131_0 <= FUNCTION_MODIFIER)||(LA131_0 >= IF_CLAUSE && LA131_0 <= INTERFACE_DEFINITION)||LA131_0==IN_OP||(LA131_0 >= LBRACE && LA131_0 <= LBRACKET)||LA131_0==LIDENTIFIER||LA131_0==LPAREN||LA131_0==MODULE||LA131_0==NATURAL_LITERAL||(LA131_0 >= NOT_OP && LA131_0 <= OBJECT_DEFINITION)||(LA131_0 >= OUT && LA131_0 <= PACKAGE)||LA131_0==PRODUCT_OP||(LA131_0 >= RETURN && LA131_0 <= RPAREN)||(LA131_0 >= SEMICOLON && LA131_0 <= SMALLER_OP)||LA131_0==STRING_LITERAL||LA131_0==STRING_START||(LA131_0 >= SUM_OP && LA131_0 <= SWITCH_CLAUSE)||(LA131_0 >= THIS && LA131_0 <= UIDENTIFIER)||(LA131_0 >= VALUE_MODIFIER && LA131_0 <= WHILE_CLAUSE)) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1437:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_enumeration9365);
                    sequencedArgument224=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return sequenceEnumeration;

                    if ( state.backtracking==0 ) { sequenceEnumeration.setSequencedArgument(sequencedArgument224); }

                    }
                    break;

            }


            RBRACE225=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_enumeration9392); if (state.failed) return sequenceEnumeration;

            if ( state.backtracking==0 ) { sequenceEnumeration.setEndToken(RBRACE225); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return sequenceEnumeration;
    }
    // $ANTLR end "enumeration"



    // $ANTLR start "tuple"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1444:1: tuple returns [Tuple tuple] : LBRACKET ( sequencedArgument )? RBRACKET ;
    public Tuple tuple() throws RecognitionException {
        Tuple tuple = null;


        Token LBRACKET226=null;
        Token RBRACKET228=null;
        SequencedArgument sequencedArgument227 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1445:5: ( LBRACKET ( sequencedArgument )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1445:7: LBRACKET ( sequencedArgument )? RBRACKET
            {
            LBRACKET226=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_tuple9421); if (state.failed) return tuple;

            if ( state.backtracking==0 ) { tuple = new Tuple(LBRACKET226); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1447:7: ( sequencedArgument )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==ALIAS||(LA132_0 >= ASSERT && LA132_0 <= ASSIGN)||(LA132_0 >= BACKTICK && LA132_0 <= BREAK)||(LA132_0 >= CHAR_LITERAL && LA132_0 <= CLASS_DEFINITION)||LA132_0==COMPILER_ANNOTATION||LA132_0==CONTINUE||(LA132_0 >= DECREMENT_OP && LA132_0 <= DIFFERENCE_OP)||LA132_0==DYNAMIC||(LA132_0 >= FLOAT_LITERAL && LA132_0 <= FUNCTION_MODIFIER)||(LA132_0 >= IF_CLAUSE && LA132_0 <= INTERFACE_DEFINITION)||LA132_0==IN_OP||(LA132_0 >= LBRACE && LA132_0 <= LBRACKET)||LA132_0==LIDENTIFIER||LA132_0==LPAREN||LA132_0==MODULE||LA132_0==NATURAL_LITERAL||(LA132_0 >= NOT_OP && LA132_0 <= OBJECT_DEFINITION)||(LA132_0 >= OUT && LA132_0 <= PACKAGE)||LA132_0==PRODUCT_OP||(LA132_0 >= RETURN && LA132_0 <= RPAREN)||(LA132_0 >= SEMICOLON && LA132_0 <= SMALLER_OP)||LA132_0==STRING_LITERAL||LA132_0==STRING_START||(LA132_0 >= SUM_OP && LA132_0 <= SWITCH_CLAUSE)||(LA132_0 >= THIS && LA132_0 <= UIDENTIFIER)||(LA132_0 >= VALUE_MODIFIER && LA132_0 <= WHILE_CLAUSE)) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1448:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_tuple9448);
                    sequencedArgument227=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return tuple;

                    if ( state.backtracking==0 ) { tuple.setSequencedArgument(sequencedArgument227); }

                    }
                    break;

            }


            RBRACKET228=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_tuple9475); if (state.failed) return tuple;

            if ( state.backtracking==0 ) { tuple.setEndToken(RBRACKET228); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return tuple;
    }
    // $ANTLR end "tuple"



    // $ANTLR start "dynamicObject"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1455:1: dynamicObject returns [Dynamic dynamic] : DYNAMIC LBRACKET ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACKET ;
    public Dynamic dynamicObject() throws RecognitionException {
        Dynamic dynamic = null;


        Token DYNAMIC229=null;
        Token LBRACKET230=null;
        Token RBRACKET234=null;
        NamedArgument namedArgument231 =null;

        SpecifiedArgument anonymousArgument232 =null;

        SequencedArgument sequencedArgument233 =null;


         NamedArgumentList nal=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1457:5: ( DYNAMIC LBRACKET ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1457:7: DYNAMIC LBRACKET ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACKET
            {
            DYNAMIC229=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_dynamicObject9517); if (state.failed) return dynamic;

            LBRACKET230=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_dynamicObject9519); if (state.failed) return dynamic;

            if ( state.backtracking==0 ) { dynamic = new Dynamic(DYNAMIC229);
                    nal = new NamedArgumentList(LBRACKET230); 
                    dynamic.setNamedArgumentList(nal); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1461:7: ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )*
            loop133:
            do {
                int alt133=3;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==COMPILER_ANNOTATION) ) {
                    int LA133_1 = input.LA(2);

                    if ( (synpred10_Ceylon()) ) {
                        alt133=1;
                    }


                }
                else if ( (LA133_0==FUNCTION_MODIFIER) ) {
                    int LA133_2 = input.LA(2);

                    if ( (synpred10_Ceylon()) ) {
                        alt133=1;
                    }
                    else if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==VOID_MODIFIER) ) {
                    int LA133_3 = input.LA(2);

                    if ( (synpred10_Ceylon()) ) {
                        alt133=1;
                    }
                    else if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==LPAREN) ) {
                    int LA133_4 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==NOT_OP) ) {
                    int LA133_5 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==DIFFERENCE_OP) ) {
                    int LA133_6 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==SUM_OP) ) {
                    int LA133_7 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==DECREMENT_OP) ) {
                    int LA133_8 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==INCREMENT_OP) ) {
                    int LA133_9 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==NATURAL_LITERAL) ) {
                    int LA133_10 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==FLOAT_LITERAL) ) {
                    int LA133_11 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==CHAR_LITERAL) ) {
                    int LA133_12 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==STRING_LITERAL) ) {
                    int LA133_13 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==VERBATIM_STRING) ) {
                    int LA133_14 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==STRING_START) ) {
                    int LA133_15 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==BACKTICK) ) {
                    int LA133_16 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==LBRACE) ) {
                    int LA133_17 = input.LA(2);

                    if ( (synpred10_Ceylon()) ) {
                        alt133=1;
                    }
                    else if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==LBRACKET) ) {
                    int LA133_18 = input.LA(2);

                    if ( (synpred10_Ceylon()) ) {
                        alt133=1;
                    }
                    else if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==DYNAMIC) ) {
                    int LA133_19 = input.LA(2);

                    if ( (synpred10_Ceylon()) ) {
                        alt133=1;
                    }
                    else if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==THIS) ) {
                    int LA133_20 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==SUPER) ) {
                    int LA133_21 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==OUTER) ) {
                    int LA133_22 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==PACKAGE) ) {
                    int LA133_23 = input.LA(2);

                    if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==LIDENTIFIER) ) {
                    int LA133_24 = input.LA(2);

                    if ( (synpred10_Ceylon()) ) {
                        alt133=1;
                    }
                    else if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==UIDENTIFIER) ) {
                    int LA133_25 = input.LA(2);

                    if ( (synpred10_Ceylon()) ) {
                        alt133=1;
                    }
                    else if ( (synpred11_Ceylon()) ) {
                        alt133=2;
                    }


                }
                else if ( (LA133_0==OBJECT_DEFINITION) && (synpred10_Ceylon())) {
                    alt133=1;
                }
                else if ( (LA133_0==SMALLER_OP) && (synpred10_Ceylon())) {
                    alt133=1;
                }
                else if ( (LA133_0==VALUE_MODIFIER) && (synpred10_Ceylon())) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1463:9: ( namedArgumentStart )=> namedArgument
            	    {
            	    pushFollow(FOLLOW_namedArgument_in_dynamicObject9570);
            	    namedArgument231=namedArgument();

            	    state._fsp--;
            	    if (state.failed) return dynamic;

            	    if ( state.backtracking==0 ) { if (namedArgument231!=null) 
            	                  nal.addNamedArgument(namedArgument231); }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1467:9: ( anonymousArgument )=> anonymousArgument
            	    {
            	    pushFollow(FOLLOW_anonymousArgument_in_dynamicObject9604);
            	    anonymousArgument232=anonymousArgument();

            	    state._fsp--;
            	    if (state.failed) return dynamic;

            	    if ( state.backtracking==0 ) { if (anonymousArgument232!=null) 
            	                  nal.addNamedArgument(anonymousArgument232); }

            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1472:7: ( sequencedArgument )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==ALIAS||(LA134_0 >= ASSERT && LA134_0 <= ASSIGN)||(LA134_0 >= BACKTICK && LA134_0 <= BREAK)||(LA134_0 >= CHAR_LITERAL && LA134_0 <= CLASS_DEFINITION)||LA134_0==COMPILER_ANNOTATION||LA134_0==CONTINUE||(LA134_0 >= DECREMENT_OP && LA134_0 <= DIFFERENCE_OP)||LA134_0==DYNAMIC||(LA134_0 >= FLOAT_LITERAL && LA134_0 <= FUNCTION_MODIFIER)||(LA134_0 >= IF_CLAUSE && LA134_0 <= INTERFACE_DEFINITION)||LA134_0==IN_OP||(LA134_0 >= LBRACE && LA134_0 <= LBRACKET)||LA134_0==LIDENTIFIER||LA134_0==LPAREN||LA134_0==MODULE||LA134_0==NATURAL_LITERAL||(LA134_0 >= NOT_OP && LA134_0 <= OBJECT_DEFINITION)||(LA134_0 >= OUT && LA134_0 <= PACKAGE)||LA134_0==PRODUCT_OP||(LA134_0 >= RETURN && LA134_0 <= RPAREN)||(LA134_0 >= SEMICOLON && LA134_0 <= SMALLER_OP)||LA134_0==STRING_LITERAL||LA134_0==STRING_START||(LA134_0 >= SUM_OP && LA134_0 <= SWITCH_CLAUSE)||(LA134_0 >= THIS && LA134_0 <= UIDENTIFIER)||(LA134_0 >= VALUE_MODIFIER && LA134_0 <= WHILE_CLAUSE)) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1473:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_dynamicObject9642);
                    sequencedArgument233=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return dynamic;

                    if ( state.backtracking==0 ) { nal.setSequencedArgument(sequencedArgument233); }

                    }
                    break;

            }


            RBRACKET234=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_dynamicObject9669); if (state.failed) return dynamic;

            if ( state.backtracking==0 ) { nal.setEndToken(RBRACKET234); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return dynamic;
    }
    // $ANTLR end "dynamicObject"



    // $ANTLR start "valueCaseList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1480:1: valueCaseList returns [ExpressionList expressionList] :ie1= intersectionExpression ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )* ;
    public ExpressionList valueCaseList() throws RecognitionException {
        ExpressionList expressionList = null;


        Token c=null;
        Token u=null;
        Term ie1 =null;

        Term ie2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1481:5: (ie1= intersectionExpression ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1481:7: ie1= intersectionExpression ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )*
            {
            if ( state.backtracking==0 ) { expressionList = new ExpressionList(null); }

            pushFollow(FOLLOW_intersectionExpression_in_valueCaseList9712);
            ie1=intersectionExpression();

            state._fsp--;
            if (state.failed) return expressionList;

            if ( state.backtracking==0 ) { Expression e = new Expression(null);
                    e.setTerm(ie1);
                    expressionList.addExpression(e); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1486:7: ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )*
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==COMMA||LA137_0==UNION_OP) ) {
                    alt137=1;
                }


                switch (alt137) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1487:9: (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |)
            	    {
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1487:9: (c= COMMA |u= UNION_OP )
            	    int alt135=2;
            	    int LA135_0 = input.LA(1);

            	    if ( (LA135_0==COMMA) ) {
            	        alt135=1;
            	    }
            	    else if ( (LA135_0==UNION_OP) ) {
            	        alt135=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return expressionList;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 135, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt135) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1488:11: c= COMMA
            	            {
            	            c=(Token)match(input,COMMA,FOLLOW_COMMA_in_valueCaseList9754); if (state.failed) return expressionList;

            	            if ( state.backtracking==0 ) { expressionList.setEndToken(c); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1490:11: u= UNION_OP
            	            {
            	            u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_valueCaseList9781); if (state.failed) return expressionList;

            	            if ( state.backtracking==0 ) { expressionList.setEndToken(u); }

            	            }
            	            break;

            	    }


            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1493:9: (ie2= intersectionExpression |)
            	    int alt136=2;
            	    int LA136_0 = input.LA(1);

            	    if ( (LA136_0==BACKTICK||LA136_0==CHAR_LITERAL||(LA136_0 >= DECREMENT_OP && LA136_0 <= DIFFERENCE_OP)||LA136_0==DYNAMIC||LA136_0==FLOAT_LITERAL||LA136_0==INCREMENT_OP||(LA136_0 >= LBRACE && LA136_0 <= LBRACKET)||LA136_0==LIDENTIFIER||LA136_0==LPAREN||LA136_0==NATURAL_LITERAL||(LA136_0 >= OUTER && LA136_0 <= PACKAGE)||LA136_0==STRING_LITERAL||LA136_0==STRING_START||(LA136_0 >= SUM_OP && LA136_0 <= SUPER)||LA136_0==THIS||LA136_0==UIDENTIFIER||LA136_0==VERBATIM_STRING) ) {
            	        alt136=1;
            	    }
            	    else if ( (LA136_0==COMMA||LA136_0==RPAREN||LA136_0==UNION_OP) ) {
            	        alt136=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return expressionList;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 136, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt136) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1494:11: ie2= intersectionExpression
            	            {
            	            pushFollow(FOLLOW_intersectionExpression_in_valueCaseList9827);
            	            ie2=intersectionExpression();

            	            state._fsp--;
            	            if (state.failed) return expressionList;

            	            if ( state.backtracking==0 ) { if (ie2!=null) {
            	                            Expression e = new Expression(null);
            	                            e.setTerm(ie2);
            	                            expressionList.addExpression(e);
            	                            expressionList.setEndToken(null); } }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1500:11: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                          new MismatchedTokenException(LIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expressionList;
    }
    // $ANTLR end "valueCaseList"


    public static class memberReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "memberReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1506:1: memberReference returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : memberName ( ( typeArgumentsStart )=> typeArguments )? ;
    public CeylonParser.memberReference_return memberReference() throws RecognitionException {
        CeylonParser.memberReference_return retval = new CeylonParser.memberReference_return();
        retval.start = input.LT(1);


        Identifier memberName235 =null;

        TypeArgumentList typeArguments236 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1508:5: ( memberName ( ( typeArgumentsStart )=> typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1508:7: memberName ( ( typeArgumentsStart )=> typeArguments )?
            {
            pushFollow(FOLLOW_memberName_in_memberReference9892);
            memberName235=memberName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier = memberName235; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1510:7: ( ( typeArgumentsStart )=> typeArguments )?
            int alt138=2;
            alt138 = dfa138.predict(input);
            switch (alt138) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1511:9: ( typeArgumentsStart )=> typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_memberReference9932);
                    typeArguments236=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments236; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "memberReference"


    public static class typeReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "typeReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1517:1: typeReference returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : typeName ( ( typeArgumentsStart )=> typeArguments )? ;
    public CeylonParser.typeReference_return typeReference() throws RecognitionException {
        CeylonParser.typeReference_return retval = new CeylonParser.typeReference_return();
        retval.start = input.LT(1);


        Identifier typeName237 =null;

        TypeArgumentList typeArguments238 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1519:5: ( typeName ( ( typeArgumentsStart )=> typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1519:7: typeName ( ( typeArgumentsStart )=> typeArguments )?
            {
            pushFollow(FOLLOW_typeName_in_typeReference9972);
            typeName237=typeName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier = typeName237; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1521:7: ( ( typeArgumentsStart )=> typeArguments )?
            int alt139=2;
            alt139 = dfa139.predict(input);
            switch (alt139) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1522:9: ( typeArgumentsStart )=> typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_typeReference10013);
                    typeArguments238=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments238; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "typeReference"



    // $ANTLR start "typeArgumentsStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1531:1: typeArgumentsStart : SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP ) ;
    public void typeArgumentsStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1532:5: ( SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1532:7: SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP )
            {
            match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArgumentsStart10052); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1533:5: ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP )
            int alt140=3;
            switch ( input.LA(1) ) {
            case LBRACE:
            case LBRACKET:
            case UIDENTIFIER:
                {
                alt140=1;
                }
                break;
            case SMALLER_OP:
                {
                int LA140_2 = input.LA(2);

                if ( ((LA140_2 >= LBRACE && LA140_2 <= LBRACKET)||LA140_2==SMALLER_OP||LA140_2==UIDENTIFIER) ) {
                    alt140=1;
                }
                else if ( (LA140_2==EOF) ) {
                    alt140=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 140, 2, input);

                    throw nvae;

                }
                }
                break;
            case LARGER_OP:
                {
                alt140=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 140, 0, input);

                throw nvae;

            }

            switch (alt140) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1534:7: type ( LARGER_OP | SMALLER_OP | COMMA )
                    {
                    pushFollow(FOLLOW_type_in_typeArgumentsStart10066);
                    type();

                    state._fsp--;
                    if (state.failed) return ;

                    if ( input.LA(1)==COMMA||input.LA(1)==LARGER_OP||input.LA(1)==SMALLER_OP ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1537:7: SMALLER_OP
                    {
                    match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArgumentsStart10094); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1539:7: LARGER_OP
                    {
                    match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeArgumentsStart10109); if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "typeArgumentsStart"



    // $ANTLR start "indexOrIndexRange"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1543:1: indexOrIndexRange returns [IndexExpression indexExpression] : LBRACKET (e1= ELLIPSIS i= index |l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? ) RBRACKET ;
    public IndexExpression indexOrIndexRange() throws RecognitionException {
        IndexExpression indexExpression = null;


        Token e1=null;
        Token e2=null;
        Token LBRACKET239=null;
        Token RANGE_OP240=null;
        Token SEGMENT_OP241=null;
        Token RBRACKET242=null;
        Expression i =null;

        Expression l =null;

        Expression u =null;

        Expression s =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1548:5: ( LBRACKET (e1= ELLIPSIS i= index |l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? ) RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1548:7: LBRACKET (e1= ELLIPSIS i= index |l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? ) RBRACKET
            {
            LBRACKET239=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_indexOrIndexRange10157); if (state.failed) return indexExpression;

            if ( state.backtracking==0 ) { indexExpression = new IndexExpression(LBRACKET239); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1550:7: (e1= ELLIPSIS i= index |l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? )
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==ELLIPSIS) ) {
                alt142=1;
            }
            else if ( (LA142_0==BACKTICK||LA142_0==CHAR_LITERAL||(LA142_0 >= DECREMENT_OP && LA142_0 <= DIFFERENCE_OP)||LA142_0==DYNAMIC||LA142_0==FLOAT_LITERAL||LA142_0==INCREMENT_OP||(LA142_0 >= LBRACE && LA142_0 <= LBRACKET)||LA142_0==LIDENTIFIER||LA142_0==LPAREN||LA142_0==NATURAL_LITERAL||(LA142_0 >= OUTER && LA142_0 <= PACKAGE)||LA142_0==STRING_LITERAL||LA142_0==STRING_START||(LA142_0 >= SUM_OP && LA142_0 <= SUPER)||LA142_0==THIS||LA142_0==UIDENTIFIER||LA142_0==VERBATIM_STRING) ) {
                alt142=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return indexExpression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 142, 0, input);

                throw nvae;

            }
            switch (alt142) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1551:9: e1= ELLIPSIS i= index
                    {
                    e1=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_indexOrIndexRange10185); if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { indexExpression.setEndToken(e1); }

                    pushFollow(FOLLOW_index_in_indexOrIndexRange10205);
                    i=index();

                    state._fsp--;
                    if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { ElementRange er0 = new ElementRange(null);
                            indexExpression.setElementOrRange(er0);
                            er0.setUpperBound(i); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1558:7: l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )?
                    {
                    pushFollow(FOLLOW_index_in_indexOrIndexRange10231);
                    l=index();

                    state._fsp--;
                    if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { Element e = new Element(null);
                            indexExpression.setElementOrRange(e);
                            e.setExpression(l); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1562:7: (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )?
                    int alt141=4;
                    switch ( input.LA(1) ) {
                        case ELLIPSIS:
                            {
                            alt141=1;
                            }
                            break;
                        case RANGE_OP:
                            {
                            alt141=2;
                            }
                            break;
                        case SEGMENT_OP:
                            {
                            alt141=3;
                            }
                            break;
                    }

                    switch (alt141) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1563:9: e2= ELLIPSIS
                            {
                            e2=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_indexOrIndexRange10259); if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { indexExpression.setEndToken(e2); }

                            if ( state.backtracking==0 ) { ElementRange er1 = new ElementRange(null);
                                    indexExpression.setElementOrRange(er1);
                                    er1.setLowerBound(l); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1568:9: RANGE_OP u= index
                            {
                            RANGE_OP240=(Token)match(input,RANGE_OP,FOLLOW_RANGE_OP_in_indexOrIndexRange10287); if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { indexExpression.setEndToken(RANGE_OP240); }

                            pushFollow(FOLLOW_index_in_indexOrIndexRange10310);
                            u=index();

                            state._fsp--;
                            if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { ElementRange er2 = new ElementRange(null);
                                    indexExpression.setElementOrRange(er2);
                                    er2.setLowerBound(l); 
                                    er2.setUpperBound(u); }

                            }
                            break;
                        case 3 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1575:9: SEGMENT_OP s= index
                            {
                            SEGMENT_OP241=(Token)match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_indexOrIndexRange10329); if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { indexExpression.setEndToken(SEGMENT_OP241); }

                            pushFollow(FOLLOW_index_in_indexOrIndexRange10351);
                            s=index();

                            state._fsp--;
                            if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { ElementRange er3 = new ElementRange(null);
                                    indexExpression.setElementOrRange(er3);
                                    er3.setLowerBound(l); 
                                    er3.setLength(s); }

                            }
                            break;

                    }


                    }
                    break;

            }


            RBRACKET242=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_indexOrIndexRange10385); if (state.failed) return indexExpression;

            if ( state.backtracking==0 ) { indexExpression.setEndToken(RBRACKET242); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return indexExpression;
    }
    // $ANTLR end "indexOrIndexRange"



    // $ANTLR start "index"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1588:1: index returns [Expression expression] : additiveExpression ;
    public Expression index() throws RecognitionException {
        Expression expression = null;


        Term additiveExpression243 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1589:5: ( additiveExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1589:7: additiveExpression
            {
            pushFollow(FOLLOW_additiveExpression_in_index10414);
            additiveExpression243=additiveExpression();

            state._fsp--;
            if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression = new Expression(null);
                    expression.setTerm(additiveExpression243); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "index"



    // $ANTLR start "namedArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1594:1: namedArguments returns [NamedArgumentList namedArgumentList] : LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE ;
    public NamedArgumentList namedArguments() throws RecognitionException {
        NamedArgumentList namedArgumentList = null;


        Token LBRACE244=null;
        Token RBRACE248=null;
        NamedArgument namedArgument245 =null;

        SpecifiedArgument anonymousArgument246 =null;

        SequencedArgument sequencedArgument247 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1595:5: ( LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1595:7: LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE
            {
            LBRACE244=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_namedArguments10444); if (state.failed) return namedArgumentList;

            if ( state.backtracking==0 ) { namedArgumentList = new NamedArgumentList(LBRACE244); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1597:7: ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )*
            loop143:
            do {
                int alt143=3;
                int LA143_0 = input.LA(1);

                if ( (LA143_0==COMPILER_ANNOTATION) ) {
                    int LA143_1 = input.LA(2);

                    if ( (synpred14_Ceylon()) ) {
                        alt143=1;
                    }


                }
                else if ( (LA143_0==FUNCTION_MODIFIER) ) {
                    int LA143_2 = input.LA(2);

                    if ( (synpred14_Ceylon()) ) {
                        alt143=1;
                    }
                    else if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==VOID_MODIFIER) ) {
                    int LA143_3 = input.LA(2);

                    if ( (synpred14_Ceylon()) ) {
                        alt143=1;
                    }
                    else if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==LPAREN) ) {
                    int LA143_4 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==NOT_OP) ) {
                    int LA143_5 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==DIFFERENCE_OP) ) {
                    int LA143_6 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==SUM_OP) ) {
                    int LA143_7 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==DECREMENT_OP) ) {
                    int LA143_8 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==INCREMENT_OP) ) {
                    int LA143_9 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==NATURAL_LITERAL) ) {
                    int LA143_10 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==FLOAT_LITERAL) ) {
                    int LA143_11 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==CHAR_LITERAL) ) {
                    int LA143_12 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==STRING_LITERAL) ) {
                    int LA143_13 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==VERBATIM_STRING) ) {
                    int LA143_14 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==STRING_START) ) {
                    int LA143_15 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==BACKTICK) ) {
                    int LA143_16 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==LBRACE) ) {
                    int LA143_17 = input.LA(2);

                    if ( (synpred14_Ceylon()) ) {
                        alt143=1;
                    }
                    else if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==LBRACKET) ) {
                    int LA143_18 = input.LA(2);

                    if ( (synpred14_Ceylon()) ) {
                        alt143=1;
                    }
                    else if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==DYNAMIC) ) {
                    int LA143_19 = input.LA(2);

                    if ( (synpred14_Ceylon()) ) {
                        alt143=1;
                    }
                    else if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==THIS) ) {
                    int LA143_20 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==SUPER) ) {
                    int LA143_21 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==OUTER) ) {
                    int LA143_22 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==PACKAGE) ) {
                    int LA143_23 = input.LA(2);

                    if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==LIDENTIFIER) ) {
                    int LA143_24 = input.LA(2);

                    if ( (synpred14_Ceylon()) ) {
                        alt143=1;
                    }
                    else if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==UIDENTIFIER) ) {
                    int LA143_25 = input.LA(2);

                    if ( (synpred14_Ceylon()) ) {
                        alt143=1;
                    }
                    else if ( (synpred15_Ceylon()) ) {
                        alt143=2;
                    }


                }
                else if ( (LA143_0==OBJECT_DEFINITION) && (synpred14_Ceylon())) {
                    alt143=1;
                }
                else if ( (LA143_0==SMALLER_OP) && (synpred14_Ceylon())) {
                    alt143=1;
                }
                else if ( (LA143_0==VALUE_MODIFIER) && (synpred14_Ceylon())) {
                    alt143=1;
                }


                switch (alt143) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1599:9: ( namedArgumentStart )=> namedArgument
            	    {
            	    pushFollow(FOLLOW_namedArgument_in_namedArguments10496);
            	    namedArgument245=namedArgument();

            	    state._fsp--;
            	    if (state.failed) return namedArgumentList;

            	    if ( state.backtracking==0 ) { if (namedArgument245!=null) 
            	                  namedArgumentList.addNamedArgument(namedArgument245); }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1603:9: ( anonymousArgument )=> anonymousArgument
            	    {
            	    pushFollow(FOLLOW_anonymousArgument_in_namedArguments10530);
            	    anonymousArgument246=anonymousArgument();

            	    state._fsp--;
            	    if (state.failed) return namedArgumentList;

            	    if ( state.backtracking==0 ) { if (anonymousArgument246!=null) 
            	                  namedArgumentList.addNamedArgument(anonymousArgument246); }

            	    }
            	    break;

            	default :
            	    break loop143;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1608:7: ( sequencedArgument )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==ALIAS||(LA144_0 >= ASSERT && LA144_0 <= ASSIGN)||(LA144_0 >= BACKTICK && LA144_0 <= BREAK)||(LA144_0 >= CHAR_LITERAL && LA144_0 <= CLASS_DEFINITION)||LA144_0==COMPILER_ANNOTATION||LA144_0==CONTINUE||(LA144_0 >= DECREMENT_OP && LA144_0 <= DIFFERENCE_OP)||LA144_0==DYNAMIC||(LA144_0 >= FLOAT_LITERAL && LA144_0 <= FUNCTION_MODIFIER)||(LA144_0 >= IF_CLAUSE && LA144_0 <= INTERFACE_DEFINITION)||LA144_0==IN_OP||(LA144_0 >= LBRACE && LA144_0 <= LBRACKET)||LA144_0==LIDENTIFIER||LA144_0==LPAREN||LA144_0==MODULE||LA144_0==NATURAL_LITERAL||(LA144_0 >= NOT_OP && LA144_0 <= OBJECT_DEFINITION)||(LA144_0 >= OUT && LA144_0 <= PACKAGE)||LA144_0==PRODUCT_OP||(LA144_0 >= RETURN && LA144_0 <= RPAREN)||(LA144_0 >= SEMICOLON && LA144_0 <= SMALLER_OP)||LA144_0==STRING_LITERAL||LA144_0==STRING_START||(LA144_0 >= SUM_OP && LA144_0 <= SWITCH_CLAUSE)||(LA144_0 >= THIS && LA144_0 <= UIDENTIFIER)||(LA144_0 >= VALUE_MODIFIER && LA144_0 <= WHILE_CLAUSE)) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1609:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_namedArguments10568);
                    sequencedArgument247=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return namedArgumentList;

                    if ( state.backtracking==0 ) { namedArgumentList.setSequencedArgument(sequencedArgument247); }

                    }
                    break;

            }


            RBRACE248=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_namedArguments10595); if (state.failed) return namedArgumentList;

            if ( state.backtracking==0 ) { namedArgumentList.setEndToken(RBRACE248); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return namedArgumentList;
    }
    // $ANTLR end "namedArguments"



    // $ANTLR start "sequencedArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1616:1: sequencedArgument returns [SequencedArgument sequencedArgument] : compilerAnnotations (pa1= positionalArgument |sa1= spreadArgument |c1= comprehension ) (c= COMMA (pa2= positionalArgument |sa2= spreadArgument |c2= comprehension |) )* ;
    public SequencedArgument sequencedArgument() throws RecognitionException {
        SequencedArgument sequencedArgument = null;


        Token c=null;
        ListedArgument pa1 =null;

        SpreadArgument sa1 =null;

        Comprehension c1 =null;

        ListedArgument pa2 =null;

        SpreadArgument sa2 =null;

        Comprehension c2 =null;

        List<CompilerAnnotation> compilerAnnotations249 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1617:5: ( compilerAnnotations (pa1= positionalArgument |sa1= spreadArgument |c1= comprehension ) (c= COMMA (pa2= positionalArgument |sa2= spreadArgument |c2= comprehension |) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1617:7: compilerAnnotations (pa1= positionalArgument |sa1= spreadArgument |c1= comprehension ) (c= COMMA (pa2= positionalArgument |sa2= spreadArgument |c2= comprehension |) )*
            {
            pushFollow(FOLLOW_compilerAnnotations_in_sequencedArgument10624);
            compilerAnnotations249=compilerAnnotations();

            state._fsp--;
            if (state.failed) return sequencedArgument;

            if ( state.backtracking==0 ) { sequencedArgument = new SequencedArgument(null);
                    sequencedArgument.getCompilerAnnotations().addAll(compilerAnnotations249); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1620:9: (pa1= positionalArgument |sa1= spreadArgument |c1= comprehension )
            int alt145=3;
            switch ( input.LA(1) ) {
            case BACKTICK:
            case CHAR_LITERAL:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case DYNAMIC:
            case FLOAT_LITERAL:
            case FUNCTION_MODIFIER:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case NOT_OP:
            case OUTER:
            case PACKAGE:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
            case VOID_MODIFIER:
                {
                alt145=1;
                }
                break;
            case PRODUCT_OP:
                {
                alt145=2;
                }
                break;
            case FOR_CLAUSE:
            case IF_CLAUSE:
                {
                alt145=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
                NoViableAltException nvae =
                    new NoViableAltException("", 145, 0, input);

                throw nvae;

            }

            switch (alt145) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1621:11: pa1= positionalArgument
                    {
                    pushFollow(FOLLOW_positionalArgument_in_sequencedArgument10656);
                    pa1=positionalArgument();

                    state._fsp--;
                    if (state.failed) return sequencedArgument;

                    if ( state.backtracking==0 ) { if (pa1!=null)
                                    sequencedArgument.addPositionalArgument(pa1); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1625:11: sa1= spreadArgument
                    {
                    pushFollow(FOLLOW_spreadArgument_in_sequencedArgument10692);
                    sa1=spreadArgument();

                    state._fsp--;
                    if (state.failed) return sequencedArgument;

                    if ( state.backtracking==0 ) { if (sa1!=null)
                                    sequencedArgument.addPositionalArgument(sa1); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1629:11: c1= comprehension
                    {
                    pushFollow(FOLLOW_comprehension_in_sequencedArgument10728);
                    c1=comprehension();

                    state._fsp--;
                    if (state.failed) return sequencedArgument;

                    if ( state.backtracking==0 ) { if (c1!=null)
                                    sequencedArgument.addPositionalArgument(c1); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1633:9: (c= COMMA (pa2= positionalArgument |sa2= spreadArgument |c2= comprehension |) )*
            loop147:
            do {
                int alt147=2;
                int LA147_0 = input.LA(1);

                if ( (LA147_0==COMMA) ) {
                    alt147=1;
                }


                switch (alt147) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1634:11: c= COMMA (pa2= positionalArgument |sa2= spreadArgument |c2= comprehension |)
            	    {
            	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_sequencedArgument10774); if (state.failed) return sequencedArgument;

            	    if ( state.backtracking==0 ) { sequencedArgument.setEndToken(c); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1636:11: (pa2= positionalArgument |sa2= spreadArgument |c2= comprehension |)
            	    int alt146=4;
            	    switch ( input.LA(1) ) {
            	    case BACKTICK:
            	    case CHAR_LITERAL:
            	    case DECREMENT_OP:
            	    case DIFFERENCE_OP:
            	    case DYNAMIC:
            	    case FLOAT_LITERAL:
            	    case FUNCTION_MODIFIER:
            	    case INCREMENT_OP:
            	    case LBRACE:
            	    case LBRACKET:
            	    case LIDENTIFIER:
            	    case LPAREN:
            	    case NATURAL_LITERAL:
            	    case NOT_OP:
            	    case OUTER:
            	    case PACKAGE:
            	    case STRING_LITERAL:
            	    case STRING_START:
            	    case SUM_OP:
            	    case SUPER:
            	    case THIS:
            	    case UIDENTIFIER:
            	    case VERBATIM_STRING:
            	    case VOID_MODIFIER:
            	        {
            	        alt146=1;
            	        }
            	        break;
            	    case PRODUCT_OP:
            	        {
            	        alt146=2;
            	        }
            	        break;
            	    case FOR_CLAUSE:
            	    case IF_CLAUSE:
            	        {
            	        alt146=3;
            	        }
            	        break;
            	    case COMMA:
            	    case RBRACE:
            	    case RBRACKET:
            	    case RPAREN:
            	        {
            	        alt146=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 146, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt146) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1637:13: pa2= positionalArgument
            	            {
            	            pushFollow(FOLLOW_positionalArgument_in_sequencedArgument10814);
            	            pa2=positionalArgument();

            	            state._fsp--;
            	            if (state.failed) return sequencedArgument;

            	            if ( state.backtracking==0 ) { if (pa2!=null) {
            	                              sequencedArgument.addPositionalArgument(pa2); 
            	                              sequencedArgument.setEndToken(null); } }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1642:13: sa2= spreadArgument
            	            {
            	            pushFollow(FOLLOW_spreadArgument_in_sequencedArgument10856);
            	            sa2=spreadArgument();

            	            state._fsp--;
            	            if (state.failed) return sequencedArgument;

            	            if ( state.backtracking==0 ) { if (sa2!=null) {
            	                              sequencedArgument.addPositionalArgument(sa2); 
            	                              sequencedArgument.setEndToken(null); } }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1647:13: c2= comprehension
            	            {
            	            pushFollow(FOLLOW_comprehension_in_sequencedArgument10898);
            	            c2=comprehension();

            	            state._fsp--;
            	            if (state.failed) return sequencedArgument;

            	            if ( state.backtracking==0 ) { if (c2!=null) {
            	                              sequencedArgument.addPositionalArgument(c2);
            	                              sequencedArgument.setEndToken(null); } }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1652:13: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                            new MismatchedTokenException(LIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop147;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return sequencedArgument;
    }
    // $ANTLR end "sequencedArgument"



    // $ANTLR start "namedArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1658:1: namedArgument returns [NamedArgument namedArgument] : compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration ) ;
    public NamedArgument namedArgument() throws RecognitionException {
        NamedArgument namedArgument = null;


        SpecifiedArgument namedSpecifiedArgument250 =null;

        NamedArgument namedArgumentDeclaration251 =null;

        List<CompilerAnnotation> compilerAnnotations252 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1659:5: ( compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1659:7: compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_namedArgument10983);
            compilerAnnotations252=compilerAnnotations();

            state._fsp--;
            if (state.failed) return namedArgument;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1660:5: ( namedSpecifiedArgument | namedArgumentDeclaration )
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==LIDENTIFIER) ) {
                int LA148_1 = input.LA(2);

                if ( (LA148_1==SEMICOLON||LA148_1==SPECIFY) ) {
                    alt148=1;
                }
                else if ( (LA148_1==COMPUTE||LA148_1==LPAREN) ) {
                    alt148=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return namedArgument;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 148, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA148_0==DYNAMIC||LA148_0==FUNCTION_MODIFIER||(LA148_0 >= LBRACE && LA148_0 <= LBRACKET)||LA148_0==OBJECT_DEFINITION||LA148_0==SMALLER_OP||LA148_0==UIDENTIFIER||LA148_0==VALUE_MODIFIER||LA148_0==VOID_MODIFIER) ) {
                alt148=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return namedArgument;}
                NoViableAltException nvae =
                    new NoViableAltException("", 148, 0, input);

                throw nvae;

            }
            switch (alt148) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1661:7: namedSpecifiedArgument
                    {
                    pushFollow(FOLLOW_namedSpecifiedArgument_in_namedArgument11000);
                    namedSpecifiedArgument250=namedSpecifiedArgument();

                    state._fsp--;
                    if (state.failed) return namedArgument;

                    if ( state.backtracking==0 ) { namedArgument = namedSpecifiedArgument250; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1664:7: namedArgumentDeclaration
                    {
                    pushFollow(FOLLOW_namedArgumentDeclaration_in_namedArgument11022);
                    namedArgumentDeclaration251=namedArgumentDeclaration();

                    state._fsp--;
                    if (state.failed) return namedArgument;

                    if ( state.backtracking==0 ) { namedArgument = namedArgumentDeclaration251; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { if (namedArgument!=null)
                      namedArgument.getCompilerAnnotations().addAll(compilerAnnotations252); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return namedArgument;
    }
    // $ANTLR end "namedArgument"



    // $ANTLR start "namedSpecifiedArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1671:1: namedSpecifiedArgument returns [SpecifiedArgument specifiedArgument] : memberName ( specifier )? SEMICOLON ;
    public SpecifiedArgument namedSpecifiedArgument() throws RecognitionException {
        SpecifiedArgument specifiedArgument = null;


        Token SEMICOLON255=null;
        Identifier memberName253 =null;

        SpecifierExpression specifier254 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1672:5: ( memberName ( specifier )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1672:7: memberName ( specifier )? SEMICOLON
            {
            pushFollow(FOLLOW_memberName_in_namedSpecifiedArgument11063);
            memberName253=memberName();

            state._fsp--;
            if (state.failed) return specifiedArgument;

            if ( state.backtracking==0 ) { specifiedArgument = new SpecifiedArgument(null); 
                    specifiedArgument.setIdentifier(memberName253); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1675:7: ( specifier )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==SPECIFY) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1676:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_namedSpecifiedArgument11089);
                    specifier254=specifier();

                    state._fsp--;
                    if (state.failed) return specifiedArgument;

                    if ( state.backtracking==0 ) { specifiedArgument.setSpecifierExpression(specifier254); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON255=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_namedSpecifiedArgument11125); if (state.failed) return specifiedArgument;

            if ( state.backtracking==0 ) { specifiedArgument.setEndToken(SEMICOLON255); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifiedArgument;
    }
    // $ANTLR end "namedSpecifiedArgument"



    // $ANTLR start "anonymousArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1684:1: anonymousArgument returns [SpecifiedArgument namedArgument] : functionOrExpression SEMICOLON ;
    public SpecifiedArgument anonymousArgument() throws RecognitionException {
        SpecifiedArgument namedArgument = null;


        Token SEMICOLON257=null;
        Expression functionOrExpression256 =null;


         namedArgument = new SpecifiedArgument(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1686:5: ( functionOrExpression SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1686:7: functionOrExpression SEMICOLON
            {
            pushFollow(FOLLOW_functionOrExpression_in_anonymousArgument11163);
            functionOrExpression256=functionOrExpression();

            state._fsp--;
            if (state.failed) return namedArgument;

            if ( state.backtracking==0 ) { SpecifierExpression se = new SpecifierExpression(null);
                   se.setExpression(functionOrExpression256);
                   namedArgument.setSpecifierExpression(se); }

            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON257=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_anonymousArgument11189); if (state.failed) return namedArgument;

            if ( state.backtracking==0 ) { namedArgument.setEndToken(SEMICOLON257); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return namedArgument;
    }
    // $ANTLR end "anonymousArgument"



    // $ANTLR start "objectArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1695:1: objectArgument returns [ObjectArgument declaration] : OBJECT_DEFINITION memberNameDeclaration ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) ;
    public ObjectArgument objectArgument() throws RecognitionException {
        ObjectArgument declaration = null;


        Token OBJECT_DEFINITION258=null;
        Token SEMICOLON263=null;
        Identifier memberNameDeclaration259 =null;

        ExtendedType extendedType260 =null;

        SatisfiedTypes satisfiedTypes261 =null;

        ClassBody classBody262 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1696:5: ( OBJECT_DEFINITION memberNameDeclaration ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1696:7: OBJECT_DEFINITION memberNameDeclaration ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON )
            {
            OBJECT_DEFINITION258=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_objectArgument11218); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new ObjectArgument(OBJECT_DEFINITION258); 
                    declaration.setType(new ValueModifier(null)); }

            pushFollow(FOLLOW_memberNameDeclaration_in_objectArgument11235);
            memberNameDeclaration259=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration259); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1701:7: ( extendedType )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==EXTENDS) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1702:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_objectArgument11262);
                    extendedType260=extendedType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setExtendedType(extendedType260); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1705:7: ( satisfiedTypes )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==SATISFIES) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1706:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_objectArgument11301);
                    satisfiedTypes261=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setSatisfiedTypes(satisfiedTypes261); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1709:7: ( classBody | SEMICOLON )
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==LBRACE) ) {
                alt152=1;
            }
            else if ( (LA152_0==SEMICOLON) ) {
                alt152=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;

            }
            switch (alt152) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1710:9: classBody
                    {
                    pushFollow(FOLLOW_classBody_in_objectArgument11339);
                    classBody262=classBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setClassBody(classBody262); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1712:9: SEMICOLON
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LBRACE, input)); }

                    SEMICOLON263=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_objectArgument11369); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON263); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "objectArgument"



    // $ANTLR start "voidOrInferredMethodArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1719:1: voidOrInferredMethodArgument returns [MethodArgument declaration] : ( VOID_MODIFIER | FUNCTION_MODIFIER ) memberNameDeclaration ( parameters )* ( block | ( functionSpecifier )? SEMICOLON ) ;
    public MethodArgument voidOrInferredMethodArgument() throws RecognitionException {
        MethodArgument declaration = null;


        Token VOID_MODIFIER264=null;
        Token FUNCTION_MODIFIER265=null;
        Token SEMICOLON270=null;
        Identifier memberNameDeclaration266 =null;

        ParameterList parameters267 =null;

        Block block268 =null;

        SpecifierExpression functionSpecifier269 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1720:5: ( ( VOID_MODIFIER | FUNCTION_MODIFIER ) memberNameDeclaration ( parameters )* ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1720:7: ( VOID_MODIFIER | FUNCTION_MODIFIER ) memberNameDeclaration ( parameters )* ( block | ( functionSpecifier )? SEMICOLON )
            {
            if ( state.backtracking==0 ) { declaration =new MethodArgument(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1721:7: ( VOID_MODIFIER | FUNCTION_MODIFIER )
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==VOID_MODIFIER) ) {
                alt153=1;
            }
            else if ( (LA153_0==FUNCTION_MODIFIER) ) {
                alt153=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;

            }
            switch (alt153) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1722:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER264=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodArgument11426); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setType(new VoidModifier(VOID_MODIFIER264)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1725:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER265=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodArgument11454); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setType(new FunctionModifier(FUNCTION_MODIFIER265)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberNameDeclaration_in_voidOrInferredMethodArgument11481);
            memberNameDeclaration266=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration266); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1730:7: ( parameters )*
            loop154:
            do {
                int alt154=2;
                int LA154_0 = input.LA(1);

                if ( (LA154_0==LPAREN) ) {
                    alt154=1;
                }


                switch (alt154) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1731:9: parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_voidOrInferredMethodArgument11508);
            	    parameters267=parameters();

            	    state._fsp--;
            	    if (state.failed) return declaration;

            	    if ( state.backtracking==0 ) { declaration.addParameterList(parameters267); }

            	    }
            	    break;

            	default :
            	    break loop154;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1734:7: ( block | ( functionSpecifier )? SEMICOLON )
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==LBRACE) ) {
                alt156=1;
            }
            else if ( (LA156_0==COMPUTE||LA156_0==SEMICOLON||LA156_0==SPECIFY) ) {
                alt156=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 156, 0, input);

                throw nvae;

            }
            switch (alt156) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1735:9: block
                    {
                    pushFollow(FOLLOW_block_in_voidOrInferredMethodArgument11545);
                    block268=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block268); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1738:9: ( functionSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1738:9: ( functionSpecifier )?
                    int alt155=2;
                    int LA155_0 = input.LA(1);

                    if ( (LA155_0==COMPUTE||LA155_0==SPECIFY) ) {
                        alt155=1;
                    }
                    switch (alt155) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1739:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_voidOrInferredMethodArgument11586);
                            functionSpecifier269=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(functionSpecifier269); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON270=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_voidOrInferredMethodArgument11629); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { expecting=-1; }

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON270); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "voidOrInferredMethodArgument"



    // $ANTLR start "inferredGetterArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1749:1: inferredGetterArgument returns [AttributeArgument declaration] : VALUE_MODIFIER memberNameDeclaration ( block | ( specifier | lazySpecifier )? SEMICOLON ) ;
    public AttributeArgument inferredGetterArgument() throws RecognitionException {
        AttributeArgument declaration = null;


        Token VALUE_MODIFIER271=null;
        Token SEMICOLON276=null;
        Identifier memberNameDeclaration272 =null;

        Block block273 =null;

        SpecifierExpression specifier274 =null;

        SpecifierExpression lazySpecifier275 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1750:5: ( VALUE_MODIFIER memberNameDeclaration ( block | ( specifier | lazySpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1750:7: VALUE_MODIFIER memberNameDeclaration ( block | ( specifier | lazySpecifier )? SEMICOLON )
            {
            if ( state.backtracking==0 ) { declaration =new AttributeArgument(null); }

            VALUE_MODIFIER271=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_inferredGetterArgument11686); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setType(new ValueModifier(VALUE_MODIFIER271)); }

            pushFollow(FOLLOW_memberNameDeclaration_in_inferredGetterArgument11703);
            memberNameDeclaration272=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration272); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1755:7: ( block | ( specifier | lazySpecifier )? SEMICOLON )
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==LBRACE) ) {
                alt158=1;
            }
            else if ( (LA158_0==COMPUTE||LA158_0==SEMICOLON||LA158_0==SPECIFY) ) {
                alt158=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;

            }
            switch (alt158) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1756:9: block
                    {
                    pushFollow(FOLLOW_block_in_inferredGetterArgument11730);
                    block273=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block273); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1759:9: ( specifier | lazySpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1759:9: ( specifier | lazySpecifier )?
                    int alt157=3;
                    int LA157_0 = input.LA(1);

                    if ( (LA157_0==SPECIFY) ) {
                        alt157=1;
                    }
                    else if ( (LA157_0==COMPUTE) ) {
                        alt157=2;
                    }
                    switch (alt157) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1760:11: specifier
                            {
                            pushFollow(FOLLOW_specifier_in_inferredGetterArgument11771);
                            specifier274=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(specifier274); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1763:11: lazySpecifier
                            {
                            pushFollow(FOLLOW_lazySpecifier_in_inferredGetterArgument11807);
                            lazySpecifier275=lazySpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(lazySpecifier275); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON276=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_inferredGetterArgument11851); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { expecting=-1; }

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON276); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "inferredGetterArgument"



    // $ANTLR start "typedMethodOrGetterArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1773:1: typedMethodOrGetterArgument returns [TypedArgument declaration] : ( type | DYNAMIC ) memberNameDeclaration ( ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) ) ;
    public TypedArgument typedMethodOrGetterArgument() throws RecognitionException {
        TypedArgument declaration = null;


        Token s1=null;
        Token s2=null;
        Token DYNAMIC278=null;
        Block b1 =null;

        Block b2 =null;

        StaticType type277 =null;

        Identifier memberNameDeclaration279 =null;

        ParameterList parameters280 =null;

        SpecifierExpression functionSpecifier281 =null;

        SpecifierExpression specifier282 =null;

        SpecifierExpression lazySpecifier283 =null;


         MethodArgument marg = new MethodArgument(null);
                    AttributeArgument aarg = new AttributeArgument(null); 
                    declaration =aarg; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1777:5: ( ( type | DYNAMIC ) memberNameDeclaration ( ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1777:7: ( type | DYNAMIC ) memberNameDeclaration ( ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1777:7: ( type | DYNAMIC )
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( ((LA159_0 >= LBRACE && LA159_0 <= LBRACKET)||LA159_0==SMALLER_OP||LA159_0==UIDENTIFIER) ) {
                alt159=1;
            }
            else if ( (LA159_0==DYNAMIC) ) {
                alt159=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 159, 0, input);

                throw nvae;

            }
            switch (alt159) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1778:9: type
                    {
                    pushFollow(FOLLOW_type_in_typedMethodOrGetterArgument11919);
                    type277=type();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { marg.setType(type277);
                              aarg.setType(type277); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1782:9: DYNAMIC
                    {
                    DYNAMIC278=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_typedMethodOrGetterArgument11948); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { DynamicModifier dm = new DynamicModifier(DYNAMIC278);
                              marg.setType(dm);
                              aarg.setType(dm); }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberNameDeclaration_in_typedMethodOrGetterArgument11974);
            memberNameDeclaration279=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { marg.setIdentifier(memberNameDeclaration279);
                    aarg.setIdentifier(memberNameDeclaration279); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1790:7: ( ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) )
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==LPAREN) ) {
                alt165=1;
            }
            else if ( (LA165_0==COMPUTE||LA165_0==LBRACE||LA165_0==SEMICOLON||LA165_0==SPECIFY) ) {
                alt165=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 165, 0, input);

                throw nvae;

            }
            switch (alt165) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1791:9: ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON )
                    {
                    if ( state.backtracking==0 ) { declaration = marg; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1792:9: ( parameters )+
                    int cnt160=0;
                    loop160:
                    do {
                        int alt160=2;
                        int LA160_0 = input.LA(1);

                        if ( (LA160_0==LPAREN) ) {
                            alt160=1;
                        }


                        switch (alt160) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1793:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_typedMethodOrGetterArgument12022);
                    	    parameters280=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { marg.addParameterList(parameters280); }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt160 >= 1 ) break loop160;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(160, input);
                                throw eee;
                        }
                        cnt160++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1796:9: (b1= block | ( functionSpecifier )? s1= SEMICOLON )
                    int alt162=2;
                    int LA162_0 = input.LA(1);

                    if ( (LA162_0==LBRACE) ) {
                        alt162=1;
                    }
                    else if ( (LA162_0==COMPUTE||LA162_0==SEMICOLON||LA162_0==SPECIFY) ) {
                        alt162=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 162, 0, input);

                        throw nvae;

                    }
                    switch (alt162) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1797:11: b1= block
                            {
                            pushFollow(FOLLOW_block_in_typedMethodOrGetterArgument12069);
                            b1=block();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { marg.setBlock(b1); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1800:11: ( functionSpecifier )? s1= SEMICOLON
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1800:11: ( functionSpecifier )?
                            int alt161=2;
                            int LA161_0 = input.LA(1);

                            if ( (LA161_0==COMPUTE||LA161_0==SPECIFY) ) {
                                alt161=1;
                            }
                            switch (alt161) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1801:13: functionSpecifier
                                    {
                                    pushFollow(FOLLOW_functionSpecifier_in_typedMethodOrGetterArgument12118);
                                    functionSpecifier281=functionSpecifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { marg.setSpecifierExpression(functionSpecifier281); }

                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                            s1=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument12171); if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { expecting=-1; }

                            if ( state.backtracking==0 ) { declaration.setEndToken(s1); }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1810:9: (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON )
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1810:9: (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON )
                    int alt164=2;
                    int LA164_0 = input.LA(1);

                    if ( (LA164_0==LBRACE) ) {
                        alt164=1;
                    }
                    else if ( (LA164_0==COMPUTE||LA164_0==SEMICOLON||LA164_0==SPECIFY) ) {
                        alt164=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 164, 0, input);

                        throw nvae;

                    }
                    switch (alt164) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1811:11: b2= block
                            {
                            pushFollow(FOLLOW_block_in_typedMethodOrGetterArgument12237);
                            b2=block();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { aarg.setBlock(b2); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1814:11: ( specifier | lazySpecifier )? s2= SEMICOLON
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1814:11: ( specifier | lazySpecifier )?
                            int alt163=3;
                            int LA163_0 = input.LA(1);

                            if ( (LA163_0==SPECIFY) ) {
                                alt163=1;
                            }
                            else if ( (LA163_0==COMPUTE) ) {
                                alt163=2;
                            }
                            switch (alt163) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1815:13: specifier
                                    {
                                    pushFollow(FOLLOW_specifier_in_typedMethodOrGetterArgument12286);
                                    specifier282=specifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { aarg.setSpecifierExpression(specifier282); }

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1818:13: lazySpecifier
                                    {
                                    pushFollow(FOLLOW_lazySpecifier_in_typedMethodOrGetterArgument12328);
                                    lazySpecifier283=lazySpecifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { aarg.setSpecifierExpression(lazySpecifier283); }

                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                            s2=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument12382); if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { expecting=-1; }

                            if ( state.backtracking==0 ) { declaration.setEndToken(s2); }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "typedMethodOrGetterArgument"



    // $ANTLR start "untypedMethodOrGetterArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1829:1: untypedMethodOrGetterArgument returns [TypedArgument declaration] : memberName ( ( parameters )+ ( functionSpecifier ) | lazySpecifier ) SEMICOLON ;
    public TypedArgument untypedMethodOrGetterArgument() throws RecognitionException {
        TypedArgument declaration = null;


        Token SEMICOLON288=null;
        Identifier memberName284 =null;

        ParameterList parameters285 =null;

        SpecifierExpression functionSpecifier286 =null;

        SpecifierExpression lazySpecifier287 =null;


         MethodArgument marg = new MethodArgument(null);
                    marg.setType(new FunctionModifier(null));
                    AttributeArgument aarg = new AttributeArgument(null);
                    aarg.setType(new ValueModifier(null));
                    declaration =aarg; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1835:5: ( memberName ( ( parameters )+ ( functionSpecifier ) | lazySpecifier ) SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1835:7: memberName ( ( parameters )+ ( functionSpecifier ) | lazySpecifier ) SEMICOLON
            {
            pushFollow(FOLLOW_memberName_in_untypedMethodOrGetterArgument12454);
            memberName284=memberName();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { marg.setIdentifier(memberName284);
                    aarg.setIdentifier(memberName284); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1838:7: ( ( parameters )+ ( functionSpecifier ) | lazySpecifier )
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==LPAREN) ) {
                alt167=1;
            }
            else if ( (LA167_0==COMPUTE) ) {
                alt167=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 167, 0, input);

                throw nvae;

            }
            switch (alt167) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1839:9: ( parameters )+ ( functionSpecifier )
                    {
                    if ( state.backtracking==0 ) { declaration = marg; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1840:9: ( parameters )+
                    int cnt166=0;
                    loop166:
                    do {
                        int alt166=2;
                        int LA166_0 = input.LA(1);

                        if ( (LA166_0==LPAREN) ) {
                            alt166=1;
                        }


                        switch (alt166) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1841:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_untypedMethodOrGetterArgument12503);
                    	    parameters285=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { marg.addParameterList(parameters285); }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt166 >= 1 ) break loop166;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(166, input);
                                throw eee;
                        }
                        cnt166++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1844:9: ( functionSpecifier )
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1845:11: functionSpecifier
                    {
                    pushFollow(FOLLOW_functionSpecifier_in_untypedMethodOrGetterArgument12548);
                    functionSpecifier286=functionSpecifier();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { marg.setSpecifierExpression(functionSpecifier286); }

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1853:11: lazySpecifier
                    {
                    pushFollow(FOLLOW_lazySpecifier_in_untypedMethodOrGetterArgument12626);
                    lazySpecifier287=lazySpecifier();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { aarg.setSpecifierExpression(lazySpecifier287); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON288=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_untypedMethodOrGetterArgument12672); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { expecting=-1; }

            if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON288); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "untypedMethodOrGetterArgument"



    // $ANTLR start "namedArgumentDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1863:1: namedArgumentDeclaration returns [NamedArgument declaration] : ( objectArgument | typedMethodOrGetterArgument | voidOrInferredMethodArgument | inferredGetterArgument | untypedMethodOrGetterArgument );
    public NamedArgument namedArgumentDeclaration() throws RecognitionException {
        NamedArgument declaration = null;


        ObjectArgument objectArgument289 =null;

        TypedArgument typedMethodOrGetterArgument290 =null;

        MethodArgument voidOrInferredMethodArgument291 =null;

        AttributeArgument inferredGetterArgument292 =null;

        TypedArgument untypedMethodOrGetterArgument293 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1864:5: ( objectArgument | typedMethodOrGetterArgument | voidOrInferredMethodArgument | inferredGetterArgument | untypedMethodOrGetterArgument )
            int alt168=5;
            switch ( input.LA(1) ) {
            case OBJECT_DEFINITION:
                {
                alt168=1;
                }
                break;
            case DYNAMIC:
            case LBRACE:
            case LBRACKET:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt168=2;
                }
                break;
            case FUNCTION_MODIFIER:
            case VOID_MODIFIER:
                {
                alt168=3;
                }
                break;
            case VALUE_MODIFIER:
                {
                alt168=4;
                }
                break;
            case LIDENTIFIER:
                {
                alt168=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 168, 0, input);

                throw nvae;

            }

            switch (alt168) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1864:7: objectArgument
                    {
                    pushFollow(FOLLOW_objectArgument_in_namedArgumentDeclaration12709);
                    objectArgument289=objectArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =objectArgument289; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1866:7: typedMethodOrGetterArgument
                    {
                    pushFollow(FOLLOW_typedMethodOrGetterArgument_in_namedArgumentDeclaration12725);
                    typedMethodOrGetterArgument290=typedMethodOrGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =typedMethodOrGetterArgument290; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1868:7: voidOrInferredMethodArgument
                    {
                    pushFollow(FOLLOW_voidOrInferredMethodArgument_in_namedArgumentDeclaration12741);
                    voidOrInferredMethodArgument291=voidOrInferredMethodArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =voidOrInferredMethodArgument291; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1870:7: inferredGetterArgument
                    {
                    pushFollow(FOLLOW_inferredGetterArgument_in_namedArgumentDeclaration12757);
                    inferredGetterArgument292=inferredGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =inferredGetterArgument292; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1872:7: untypedMethodOrGetterArgument
                    {
                    pushFollow(FOLLOW_untypedMethodOrGetterArgument_in_namedArgumentDeclaration12773);
                    untypedMethodOrGetterArgument293=untypedMethodOrGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =untypedMethodOrGetterArgument293; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "namedArgumentDeclaration"



    // $ANTLR start "namedArgumentStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1879:1: namedArgumentStart : compilerAnnotations ( specificationStart | declarationStart ) ;
    public void namedArgumentStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1880:5: ( compilerAnnotations ( specificationStart | declarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1880:7: compilerAnnotations ( specificationStart | declarationStart )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_namedArgumentStart12801);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1881:7: ( specificationStart | declarationStart )
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==LIDENTIFIER) ) {
                alt169=1;
            }
            else if ( (LA169_0==ALIAS||LA169_0==ASSIGN||LA169_0==CLASS_DEFINITION||LA169_0==DYNAMIC||LA169_0==FUNCTION_MODIFIER||LA169_0==INTERFACE_DEFINITION||(LA169_0 >= LBRACE && LA169_0 <= LBRACKET)||LA169_0==OBJECT_DEFINITION||LA169_0==SMALLER_OP||LA169_0==UIDENTIFIER||LA169_0==VALUE_MODIFIER||LA169_0==VOID_MODIFIER) ) {
                alt169=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 169, 0, input);

                throw nvae;

            }
            switch (alt169) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1881:8: specificationStart
                    {
                    pushFollow(FOLLOW_specificationStart_in_namedArgumentStart12811);
                    specificationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1881:29: declarationStart
                    {
                    pushFollow(FOLLOW_declarationStart_in_namedArgumentStart12815);
                    declarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "namedArgumentStart"



    // $ANTLR start "namedAnnotationArgumentsStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1884:1: namedAnnotationArgumentsStart : LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE ) ;
    public void namedAnnotationArgumentsStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1885:5: ( LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1885:7: LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE )
            {
            match(input,LBRACE,FOLLOW_LBRACE_in_namedAnnotationArgumentsStart12833); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1885:14: ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE )
            int alt170=3;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==COMPILER_ANNOTATION) ) {
                int LA170_1 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt170=1;
                }
                else if ( (true) ) {
                    alt170=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 170, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA170_0==LIDENTIFIER) ) {
                int LA170_2 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt170=1;
                }
                else if ( (true) ) {
                    alt170=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 170, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA170_0==VALUE_MODIFIER) && (synpred16_Ceylon())) {
                alt170=1;
            }
            else if ( (LA170_0==FUNCTION_MODIFIER) && (synpred16_Ceylon())) {
                alt170=1;
            }
            else if ( (LA170_0==VOID_MODIFIER) && (synpred16_Ceylon())) {
                alt170=1;
            }
            else if ( (LA170_0==ASSIGN) && (synpred16_Ceylon())) {
                alt170=1;
            }
            else if ( (LA170_0==INTERFACE_DEFINITION) && (synpred16_Ceylon())) {
                alt170=1;
            }
            else if ( (LA170_0==CLASS_DEFINITION) && (synpred16_Ceylon())) {
                alt170=1;
            }
            else if ( (LA170_0==OBJECT_DEFINITION) && (synpred16_Ceylon())) {
                alt170=1;
            }
            else if ( (LA170_0==ALIAS) && (synpred16_Ceylon())) {
                alt170=1;
            }
            else if ( (LA170_0==UIDENTIFIER) ) {
                int LA170_11 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt170=1;
                }
                else if ( (true) ) {
                    alt170=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 170, 11, input);

                    throw nvae;

                }
            }
            else if ( (LA170_0==SMALLER_OP) && (synpred16_Ceylon())) {
                alt170=1;
            }
            else if ( (LA170_0==LBRACKET) ) {
                int LA170_13 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt170=1;
                }
                else if ( (true) ) {
                    alt170=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 170, 13, input);

                    throw nvae;

                }
            }
            else if ( (LA170_0==LBRACE) ) {
                int LA170_14 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt170=1;
                }
                else if ( (true) ) {
                    alt170=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 170, 14, input);

                    throw nvae;

                }
            }
            else if ( (LA170_0==DYNAMIC) ) {
                int LA170_15 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt170=1;
                }
                else if ( (true) ) {
                    alt170=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 170, 15, input);

                    throw nvae;

                }
            }
            else if ( (LA170_0==BACKTICK||LA170_0==CHAR_LITERAL||(LA170_0 >= DECREMENT_OP && LA170_0 <= DIFFERENCE_OP)||LA170_0==FLOAT_LITERAL||LA170_0==INCREMENT_OP||LA170_0==LPAREN||LA170_0==NATURAL_LITERAL||LA170_0==NOT_OP||(LA170_0 >= OUTER && LA170_0 <= PACKAGE)||LA170_0==STRING_LITERAL||LA170_0==STRING_START||(LA170_0 >= SUM_OP && LA170_0 <= SUPER)||LA170_0==THIS||LA170_0==VERBATIM_STRING) ) {
                alt170=2;
            }
            else if ( (LA170_0==RBRACE) ) {
                alt170=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 170, 0, input);

                throw nvae;

            }
            switch (alt170) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1885:15: ( namedArgumentStart )=> namedArgumentStart
                    {
                    pushFollow(FOLLOW_namedArgumentStart_in_namedAnnotationArgumentsStart12840);
                    namedArgumentStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1885:58: iterableArgumentStart
                    {
                    pushFollow(FOLLOW_iterableArgumentStart_in_namedAnnotationArgumentsStart12844);
                    iterableArgumentStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1885:82: RBRACE
                    {
                    match(input,RBRACE,FOLLOW_RBRACE_in_namedAnnotationArgumentsStart12848); if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "namedAnnotationArgumentsStart"



    // $ANTLR start "iterableArgumentStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1888:1: iterableArgumentStart : compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE ) ;
    public void iterableArgumentStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1889:5: ( compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1889:7: compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_iterableArgumentStart12866);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_expression_in_iterableArgumentStart12868);
            expression();

            state._fsp--;
            if (state.failed) return ;

            if ( input.LA(1)==COMMA||input.LA(1)==RBRACE||input.LA(1)==SEMICOLON ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "iterableArgumentStart"



    // $ANTLR start "specificationStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1893:1: specificationStart : LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE ) ;
    public void specificationStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1894:5: ( LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1894:7: LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE )
            {
            match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_specificationStart12894); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1894:19: ( parameters )*
            loop171:
            do {
                int alt171=2;
                int LA171_0 = input.LA(1);

                if ( (LA171_0==LPAREN) ) {
                    alt171=1;
                }


                switch (alt171) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1894:19: parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_specificationStart12896);
            	    parameters();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop171;
                }
            } while (true);


            if ( input.LA(1)==COMPUTE||input.LA(1)==SPECIFY ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "specificationStart"



    // $ANTLR start "parExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1897:1: parExpression returns [Expression expression] : LPAREN functionOrExpression RPAREN ;
    public Expression parExpression() throws RecognitionException {
        Expression expression = null;


        Token LPAREN294=null;
        Token RPAREN296=null;
        Expression functionOrExpression295 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1898:5: ( LPAREN functionOrExpression RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1898:7: LPAREN functionOrExpression RPAREN
            {
            LPAREN294=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parExpression12925); if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression = new Expression(LPAREN294); }

            pushFollow(FOLLOW_functionOrExpression_in_parExpression12942);
            functionOrExpression295=functionOrExpression();

            state._fsp--;
            if (state.failed) return expression;

            if ( state.backtracking==0 ) { if (functionOrExpression295!=null)
                        expression.setTerm(functionOrExpression295.getTerm()); }

            RPAREN296=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parExpression12958); if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression.setEndToken(RPAREN296); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "parExpression"



    // $ANTLR start "positionalArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1907:1: positionalArguments returns [PositionalArgumentList positionalArgumentList] : LPAREN (sa= sequencedArgument )? RPAREN ;
    public PositionalArgumentList positionalArguments() throws RecognitionException {
        PositionalArgumentList positionalArgumentList = null;


        Token LPAREN297=null;
        Token RPAREN298=null;
        SequencedArgument sa =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1908:5: ( LPAREN (sa= sequencedArgument )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1908:7: LPAREN (sa= sequencedArgument )? RPAREN
            {
            LPAREN297=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_positionalArguments12995); if (state.failed) return positionalArgumentList;

            if ( state.backtracking==0 ) { positionalArgumentList = new PositionalArgumentList(LPAREN297); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1910:7: (sa= sequencedArgument )?
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==BACKTICK||LA172_0==CHAR_LITERAL||LA172_0==COMPILER_ANNOTATION||(LA172_0 >= DECREMENT_OP && LA172_0 <= DIFFERENCE_OP)||LA172_0==DYNAMIC||(LA172_0 >= FLOAT_LITERAL && LA172_0 <= FUNCTION_MODIFIER)||LA172_0==IF_CLAUSE||LA172_0==INCREMENT_OP||(LA172_0 >= LBRACE && LA172_0 <= LBRACKET)||LA172_0==LIDENTIFIER||LA172_0==LPAREN||LA172_0==NATURAL_LITERAL||LA172_0==NOT_OP||(LA172_0 >= OUTER && LA172_0 <= PACKAGE)||LA172_0==PRODUCT_OP||LA172_0==STRING_LITERAL||LA172_0==STRING_START||(LA172_0 >= SUM_OP && LA172_0 <= SUPER)||LA172_0==THIS||LA172_0==UIDENTIFIER||(LA172_0 >= VERBATIM_STRING && LA172_0 <= VOID_MODIFIER)) ) {
                alt172=1;
            }
            switch (alt172) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1911:9: sa= sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_positionalArguments13024);
                    sa=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return positionalArgumentList;

                    if ( state.backtracking==0 ) { if (sa!=null) {
                                  for (PositionalArgument pa: sa.getPositionalArguments())
                                      positionalArgumentList.addPositionalArgument(pa);
                                  //TODO: this is really nasty, PositionalArgumentList should have
                                  //      or be a SequencedArgument, not copy its PositionalArguments!
                                  positionalArgumentList.setEndToken(sa.getMainEndToken()); } }

                    }
                    break;

            }


            RPAREN298=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_positionalArguments13051); if (state.failed) return positionalArgumentList;

            if ( state.backtracking==0 ) { positionalArgumentList.setEndToken(RPAREN298); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return positionalArgumentList;
    }
    // $ANTLR end "positionalArguments"



    // $ANTLR start "positionalArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1923:1: positionalArgument returns [ListedArgument positionalArgument] : functionOrExpression ;
    public ListedArgument positionalArgument() throws RecognitionException {
        ListedArgument positionalArgument = null;


        Expression functionOrExpression299 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1924:5: ( functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1924:7: functionOrExpression
            {
            if ( state.backtracking==0 ) { positionalArgument = new ListedArgument(null); }

            pushFollow(FOLLOW_functionOrExpression_in_positionalArgument13088);
            functionOrExpression299=functionOrExpression();

            state._fsp--;
            if (state.failed) return positionalArgument;

            if ( state.backtracking==0 ) { positionalArgument.setExpression(functionOrExpression299); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return positionalArgument;
    }
    // $ANTLR end "positionalArgument"



    // $ANTLR start "spreadArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1929:1: spreadArgument returns [SpreadArgument positionalArgument] : PRODUCT_OP unionExpression ;
    public SpreadArgument spreadArgument() throws RecognitionException {
        SpreadArgument positionalArgument = null;


        Token PRODUCT_OP300=null;
        Term unionExpression301 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1930:5: ( PRODUCT_OP unionExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1930:7: PRODUCT_OP unionExpression
            {
            PRODUCT_OP300=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_spreadArgument13117); if (state.failed) return positionalArgument;

            if ( state.backtracking==0 ) { positionalArgument = new SpreadArgument(PRODUCT_OP300); }

            pushFollow(FOLLOW_unionExpression_in_spreadArgument13133);
            unionExpression301=unionExpression();

            state._fsp--;
            if (state.failed) return positionalArgument;

            if ( state.backtracking==0 ) { Expression e = new Expression(null);
                    e.setTerm(unionExpression301);
                    positionalArgument.setExpression(e); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return positionalArgument;
    }
    // $ANTLR end "spreadArgument"



    // $ANTLR start "anonParametersStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1938:1: anonParametersStart : LPAREN ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE ) ) | compilerAnnotations annotatedDeclarationStart ) ;
    public void anonParametersStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1939:5: ( LPAREN ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE ) ) | compilerAnnotations annotatedDeclarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1939:7: LPAREN ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE ) ) | compilerAnnotations annotatedDeclarationStart )
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_anonParametersStart13158); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1940:5: ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE ) ) | compilerAnnotations annotatedDeclarationStart )
            int alt174=3;
            switch ( input.LA(1) ) {
            case RPAREN:
                {
                alt174=1;
                }
                break;
            case LIDENTIFIER:
                {
                int LA174_2 = input.LA(2);

                if ( (LA174_2==COMMA||LA174_2==RPAREN) ) {
                    alt174=2;
                }
                else if ( (LA174_2==ALIAS||LA174_2==ASSIGN||LA174_2==CLASS_DEFINITION||LA174_2==DYNAMIC||LA174_2==FUNCTION_MODIFIER||LA174_2==INTERFACE_DEFINITION||(LA174_2 >= LBRACE && LA174_2 <= LBRACKET)||LA174_2==LIDENTIFIER||LA174_2==LPAREN||LA174_2==OBJECT_DEFINITION||LA174_2==SMALLER_OP||LA174_2==UIDENTIFIER||LA174_2==VALUE_MODIFIER||LA174_2==VOID_MODIFIER) ) {
                    alt174=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 174, 2, input);

                    throw nvae;

                }
                }
                break;
            case ALIAS:
            case ASSIGN:
            case CLASS_DEFINITION:
            case COMPILER_ANNOTATION:
            case DYNAMIC:
            case FUNCTION_MODIFIER:
            case INTERFACE_DEFINITION:
            case LBRACE:
            case LBRACKET:
            case OBJECT_DEFINITION:
            case SMALLER_OP:
            case STRING_LITERAL:
            case UIDENTIFIER:
            case VALUE_MODIFIER:
            case VERBATIM_STRING:
            case VOID_MODIFIER:
                {
                alt174=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 174, 0, input);

                throw nvae;

            }

            switch (alt174) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1941:7: RPAREN
                    {
                    match(input,RPAREN,FOLLOW_RPAREN_in_anonParametersStart13174); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1942:7: LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE ) )
                    {
                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_anonParametersStart13182); if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1942:19: ( COMMA | RPAREN ( COMPUTE | LBRACE ) )
                    int alt173=2;
                    int LA173_0 = input.LA(1);

                    if ( (LA173_0==COMMA) ) {
                        alt173=1;
                    }
                    else if ( (LA173_0==RPAREN) ) {
                        alt173=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 173, 0, input);

                        throw nvae;

                    }
                    switch (alt173) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1942:20: COMMA
                            {
                            match(input,COMMA,FOLLOW_COMMA_in_anonParametersStart13185); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1942:28: RPAREN ( COMPUTE | LBRACE )
                            {
                            match(input,RPAREN,FOLLOW_RPAREN_in_anonParametersStart13189); if (state.failed) return ;

                            if ( input.LA(1)==COMPUTE||input.LA(1)==LBRACE ) {
                                input.consume();
                                state.errorRecovery=false;
                                state.failed=false;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return ;}
                                MismatchedSetException mse = new MismatchedSetException(null,input);
                                throw mse;
                            }


                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1943:7: compilerAnnotations annotatedDeclarationStart
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_anonParametersStart13205);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    pushFollow(FOLLOW_annotatedDeclarationStart_in_anonParametersStart13207);
                    annotatedDeclarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "anonParametersStart"



    // $ANTLR start "nonemptyParametersStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1947:1: nonemptyParametersStart : LPAREN compilerAnnotations annotatedDeclarationStart ;
    public void nonemptyParametersStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1948:5: ( LPAREN compilerAnnotations annotatedDeclarationStart )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1948:7: LPAREN compilerAnnotations annotatedDeclarationStart
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_nonemptyParametersStart13231); if (state.failed) return ;

            pushFollow(FOLLOW_compilerAnnotations_in_nonemptyParametersStart13233);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_annotatedDeclarationStart_in_nonemptyParametersStart13235);
            annotatedDeclarationStart();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "nonemptyParametersStart"



    // $ANTLR start "functionOrExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1951:1: functionOrExpression returns [Expression expression] : ( ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=>f= anonymousFunction |e= expression );
    public Expression functionOrExpression() throws RecognitionException {
        Expression expression = null;


        FunctionArgument f =null;

        Expression e =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1952:5: ( ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=>f= anonymousFunction |e= expression )
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==FUNCTION_MODIFIER) && (synpred17_Ceylon())) {
                alt175=1;
            }
            else if ( (LA175_0==VOID_MODIFIER) && (synpred17_Ceylon())) {
                alt175=1;
            }
            else if ( (LA175_0==LPAREN) ) {
                int LA175_3 = input.LA(2);

                if ( (synpred17_Ceylon()) ) {
                    alt175=1;
                }
                else if ( (true) ) {
                    alt175=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return expression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA175_0==BACKTICK||LA175_0==CHAR_LITERAL||(LA175_0 >= DECREMENT_OP && LA175_0 <= DIFFERENCE_OP)||LA175_0==DYNAMIC||LA175_0==FLOAT_LITERAL||LA175_0==INCREMENT_OP||(LA175_0 >= LBRACE && LA175_0 <= LBRACKET)||LA175_0==LIDENTIFIER||LA175_0==NATURAL_LITERAL||LA175_0==NOT_OP||(LA175_0 >= OUTER && LA175_0 <= PACKAGE)||LA175_0==STRING_LITERAL||LA175_0==STRING_START||(LA175_0 >= SUM_OP && LA175_0 <= SUPER)||LA175_0==THIS||LA175_0==UIDENTIFIER||LA175_0==VERBATIM_STRING) ) {
                alt175=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return expression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 175, 0, input);

                throw nvae;

            }
            switch (alt175) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1952:7: ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=>f= anonymousFunction
                    {
                    pushFollow(FOLLOW_anonymousFunction_in_functionOrExpression13274);
                    f=anonymousFunction();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(f); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1956:7: e= expression
                    {
                    pushFollow(FOLLOW_expression_in_functionOrExpression13292);
                    e=expression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = e; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "functionOrExpression"



    // $ANTLR start "anonymousFunction"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1960:1: anonymousFunction returns [FunctionArgument function] : ( FUNCTION_MODIFIER | VOID_MODIFIER )? p1= parameters (p2= parameters )* ( COMPUTE fe= functionOrExpression | block ) ;
    public FunctionArgument anonymousFunction() throws RecognitionException {
        FunctionArgument function = null;


        Token FUNCTION_MODIFIER302=null;
        Token VOID_MODIFIER303=null;
        ParameterList p1 =null;

        ParameterList p2 =null;

        Expression fe =null;

        Block block304 =null;


         function = new FunctionArgument(null);
                    function.setType(new FunctionModifier(null)); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1963:5: ( ( FUNCTION_MODIFIER | VOID_MODIFIER )? p1= parameters (p2= parameters )* ( COMPUTE fe= functionOrExpression | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1963:7: ( FUNCTION_MODIFIER | VOID_MODIFIER )? p1= parameters (p2= parameters )* ( COMPUTE fe= functionOrExpression | block )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1963:7: ( FUNCTION_MODIFIER | VOID_MODIFIER )?
            int alt176=3;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==FUNCTION_MODIFIER) ) {
                alt176=1;
            }
            else if ( (LA176_0==VOID_MODIFIER) ) {
                alt176=2;
            }
            switch (alt176) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1964:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER302=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_anonymousFunction13340); if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setType(new FunctionModifier(FUNCTION_MODIFIER302)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1967:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER303=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_anonymousFunction13368); if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setType(new VoidModifier(VOID_MODIFIER303)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_parameters_in_anonymousFunction13397);
            p1=parameters();

            state._fsp--;
            if (state.failed) return function;

            if ( state.backtracking==0 ) { function.addParameterList(p1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1972:7: (p2= parameters )*
            loop177:
            do {
                int alt177=2;
                int LA177_0 = input.LA(1);

                if ( (LA177_0==LPAREN) ) {
                    alt177=1;
                }


                switch (alt177) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1974:9: p2= parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_anonymousFunction13435);
            	    p2=parameters();

            	    state._fsp--;
            	    if (state.failed) return function;

            	    if ( state.backtracking==0 ) { function.addParameterList(p2); }

            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1977:7: ( COMPUTE fe= functionOrExpression | block )
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==COMPUTE) ) {
                alt178=1;
            }
            else if ( (LA178_0==LBRACE) ) {
                alt178=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return function;}
                NoViableAltException nvae =
                    new NoViableAltException("", 178, 0, input);

                throw nvae;

            }
            switch (alt178) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1978:9: COMPUTE fe= functionOrExpression
                    {
                    match(input,COMPUTE,FOLLOW_COMPUTE_in_anonymousFunction13473); if (state.failed) return function;

                    pushFollow(FOLLOW_functionOrExpression_in_anonymousFunction13494);
                    fe=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setExpression(fe); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1983:9: block
                    {
                    pushFollow(FOLLOW_block_in_anonymousFunction13522);
                    block304=block();

                    state._fsp--;
                    if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setBlock(block304); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return function;
    }
    // $ANTLR end "anonymousFunction"



    // $ANTLR start "comprehension"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1988:1: comprehension returns [Comprehension comprehension] : ( forComprehensionClause | ifComprehensionClause );
    public Comprehension comprehension() throws RecognitionException {
        Comprehension comprehension = null;


        ForComprehensionClause forComprehensionClause305 =null;

        IfComprehensionClause ifComprehensionClause306 =null;


         comprehension = new Comprehension(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1990:5: ( forComprehensionClause | ifComprehensionClause )
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==FOR_CLAUSE) ) {
                alt179=1;
            }
            else if ( (LA179_0==IF_CLAUSE) ) {
                alt179=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return comprehension;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;

            }
            switch (alt179) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1990:7: forComprehensionClause
                    {
                    pushFollow(FOLLOW_forComprehensionClause_in_comprehension13570);
                    forComprehensionClause305=forComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehension;

                    if ( state.backtracking==0 ) { comprehension.setInitialComprehensionClause(forComprehensionClause305); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1992:7: ifComprehensionClause
                    {
                    pushFollow(FOLLOW_ifComprehensionClause_in_comprehension13586);
                    ifComprehensionClause306=ifComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehension;

                    if ( state.backtracking==0 ) { comprehension.setInitialComprehensionClause(ifComprehensionClause306); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehension;
    }
    // $ANTLR end "comprehension"



    // $ANTLR start "comprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1996:1: comprehensionClause returns [ComprehensionClause comprehensionClause] : ( forComprehensionClause | ifComprehensionClause | expressionComprehensionClause );
    public ComprehensionClause comprehensionClause() throws RecognitionException {
        ComprehensionClause comprehensionClause = null;


        ForComprehensionClause forComprehensionClause307 =null;

        IfComprehensionClause ifComprehensionClause308 =null;

        ExpressionComprehensionClause expressionComprehensionClause309 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1997:5: ( forComprehensionClause | ifComprehensionClause | expressionComprehensionClause )
            int alt180=3;
            switch ( input.LA(1) ) {
            case FOR_CLAUSE:
                {
                alt180=1;
                }
                break;
            case IF_CLAUSE:
                {
                alt180=2;
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case COMMA:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case DYNAMIC:
            case FLOAT_LITERAL:
            case FUNCTION_MODIFIER:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case NOT_OP:
            case OUTER:
            case PACKAGE:
            case RBRACE:
            case RBRACKET:
            case RPAREN:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
            case VOID_MODIFIER:
                {
                alt180=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return comprehensionClause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 180, 0, input);

                throw nvae;

            }

            switch (alt180) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1997:7: forComprehensionClause
                    {
                    pushFollow(FOLLOW_forComprehensionClause_in_comprehensionClause13615);
                    forComprehensionClause307=forComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = forComprehensionClause307; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1999:7: ifComprehensionClause
                    {
                    pushFollow(FOLLOW_ifComprehensionClause_in_comprehensionClause13632);
                    ifComprehensionClause308=ifComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = ifComprehensionClause308; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2001:7: expressionComprehensionClause
                    {
                    pushFollow(FOLLOW_expressionComprehensionClause_in_comprehensionClause13649);
                    expressionComprehensionClause309=expressionComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = expressionComprehensionClause309; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "comprehensionClause"



    // $ANTLR start "expressionComprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2005:1: expressionComprehensionClause returns [ExpressionComprehensionClause comprehensionClause] : ( functionOrExpression |);
    public ExpressionComprehensionClause expressionComprehensionClause() throws RecognitionException {
        ExpressionComprehensionClause comprehensionClause = null;


        Expression functionOrExpression310 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2006:5: ( functionOrExpression |)
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==BACKTICK||LA181_0==CHAR_LITERAL||(LA181_0 >= DECREMENT_OP && LA181_0 <= DIFFERENCE_OP)||LA181_0==DYNAMIC||LA181_0==FLOAT_LITERAL||LA181_0==FUNCTION_MODIFIER||LA181_0==INCREMENT_OP||(LA181_0 >= LBRACE && LA181_0 <= LBRACKET)||LA181_0==LIDENTIFIER||LA181_0==LPAREN||LA181_0==NATURAL_LITERAL||LA181_0==NOT_OP||(LA181_0 >= OUTER && LA181_0 <= PACKAGE)||LA181_0==STRING_LITERAL||LA181_0==STRING_START||(LA181_0 >= SUM_OP && LA181_0 <= SUPER)||LA181_0==THIS||LA181_0==UIDENTIFIER||(LA181_0 >= VERBATIM_STRING && LA181_0 <= VOID_MODIFIER)) ) {
                alt181=1;
            }
            else if ( (LA181_0==COMMA||(LA181_0 >= RBRACE && LA181_0 <= RBRACKET)||LA181_0==RPAREN) ) {
                alt181=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return comprehensionClause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 181, 0, input);

                throw nvae;

            }
            switch (alt181) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2006:7: functionOrExpression
                    {
                    pushFollow(FOLLOW_functionOrExpression_in_expressionComprehensionClause13679);
                    functionOrExpression310=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = new ExpressionComprehensionClause(null);
                            comprehensionClause.setExpression(functionOrExpression310); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2009:7: 
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                              new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "expressionComprehensionClause"



    // $ANTLR start "forComprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2013:1: forComprehensionClause returns [ForComprehensionClause comprehensionClause] : FOR_CLAUSE forIterator comprehensionClause ;
    public ForComprehensionClause forComprehensionClause() throws RecognitionException {
        ForComprehensionClause comprehensionClause = null;


        Token FOR_CLAUSE311=null;
        ForIterator forIterator312 =null;

        ComprehensionClause comprehensionClause313 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2014:5: ( FOR_CLAUSE forIterator comprehensionClause )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2014:7: FOR_CLAUSE forIterator comprehensionClause
            {
            FOR_CLAUSE311=(Token)match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_forComprehensionClause13716); if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause = new ForComprehensionClause(FOR_CLAUSE311); }

            pushFollow(FOLLOW_forIterator_in_forComprehensionClause13732);
            forIterator312=forIterator();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setForIterator(forIterator312); }

            pushFollow(FOLLOW_comprehensionClause_in_forComprehensionClause13748);
            comprehensionClause313=comprehensionClause();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setComprehensionClause(comprehensionClause313); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "forComprehensionClause"



    // $ANTLR start "ifComprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2022:1: ifComprehensionClause returns [IfComprehensionClause comprehensionClause] : IF_CLAUSE conditions comprehensionClause ;
    public IfComprehensionClause ifComprehensionClause() throws RecognitionException {
        IfComprehensionClause comprehensionClause = null;


        Token IF_CLAUSE314=null;
        ConditionList conditions315 =null;

        ComprehensionClause comprehensionClause316 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2023:5: ( IF_CLAUSE conditions comprehensionClause )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2023:7: IF_CLAUSE conditions comprehensionClause
            {
            IF_CLAUSE314=(Token)match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_ifComprehensionClause13781); if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause = new IfComprehensionClause(IF_CLAUSE314); }

            pushFollow(FOLLOW_conditions_in_ifComprehensionClause13797);
            conditions315=conditions();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setConditionList(conditions315); }

            pushFollow(FOLLOW_comprehensionClause_in_ifComprehensionClause13813);
            comprehensionClause316=comprehensionClause();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setComprehensionClause(comprehensionClause316); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "ifComprehensionClause"



    // $ANTLR start "assignmentExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2031:1: assignmentExpression returns [Term term] : ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression )? ;
    public Term assignmentExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        Expression ee2 =null;

        AssignmentOp assignmentOperator317 =null;


         QualifiedMemberOrTypeExpression qe=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2033:5: (ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2033:7: ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression )?
            {
            pushFollow(FOLLOW_thenElseExpression_in_assignmentExpression13857);
            ee1=thenElseExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ee1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2035:7: ( assignmentOperator ee2= functionOrExpression )?
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==ADD_SPECIFY||LA182_0==AND_SPECIFY||LA182_0==COMPLEMENT_SPECIFY||LA182_0==DIVIDE_SPECIFY||LA182_0==INTERSECT_SPECIFY||LA182_0==MULTIPLY_SPECIFY||LA182_0==OR_SPECIFY||LA182_0==REMAINDER_SPECIFY||LA182_0==SPECIFY||LA182_0==SUBTRACT_SPECIFY||LA182_0==UNION_SPECIFY) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2036:9: assignmentOperator ee2= functionOrExpression
                    {
                    pushFollow(FOLLOW_assignmentOperator_in_assignmentExpression13883);
                    assignmentOperator317=assignmentOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { assignmentOperator317.setLeftTerm(term);
                              term = assignmentOperator317; }

                    pushFollow(FOLLOW_functionOrExpression_in_assignmentExpression13906);
                    ee2=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { if (ee2!=null)
                                  assignmentOperator317.setRightTerm(ee2.getTerm()); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "assignmentExpression"



    // $ANTLR start "assignmentOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2045:1: assignmentOperator returns [AssignmentOp operator] : ( SPECIFY | ADD_SPECIFY | SUBTRACT_SPECIFY | MULTIPLY_SPECIFY | DIVIDE_SPECIFY | REMAINDER_SPECIFY | INTERSECT_SPECIFY | UNION_SPECIFY | COMPLEMENT_SPECIFY | AND_SPECIFY | OR_SPECIFY );
    public AssignmentOp assignmentOperator() throws RecognitionException {
        AssignmentOp operator = null;


        Token SPECIFY318=null;
        Token ADD_SPECIFY319=null;
        Token SUBTRACT_SPECIFY320=null;
        Token MULTIPLY_SPECIFY321=null;
        Token DIVIDE_SPECIFY322=null;
        Token REMAINDER_SPECIFY323=null;
        Token INTERSECT_SPECIFY324=null;
        Token UNION_SPECIFY325=null;
        Token COMPLEMENT_SPECIFY326=null;
        Token AND_SPECIFY327=null;
        Token OR_SPECIFY328=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2046:5: ( SPECIFY | ADD_SPECIFY | SUBTRACT_SPECIFY | MULTIPLY_SPECIFY | DIVIDE_SPECIFY | REMAINDER_SPECIFY | INTERSECT_SPECIFY | UNION_SPECIFY | COMPLEMENT_SPECIFY | AND_SPECIFY | OR_SPECIFY )
            int alt183=11;
            switch ( input.LA(1) ) {
            case SPECIFY:
                {
                alt183=1;
                }
                break;
            case ADD_SPECIFY:
                {
                alt183=2;
                }
                break;
            case SUBTRACT_SPECIFY:
                {
                alt183=3;
                }
                break;
            case MULTIPLY_SPECIFY:
                {
                alt183=4;
                }
                break;
            case DIVIDE_SPECIFY:
                {
                alt183=5;
                }
                break;
            case REMAINDER_SPECIFY:
                {
                alt183=6;
                }
                break;
            case INTERSECT_SPECIFY:
                {
                alt183=7;
                }
                break;
            case UNION_SPECIFY:
                {
                alt183=8;
                }
                break;
            case COMPLEMENT_SPECIFY:
                {
                alt183=9;
                }
                break;
            case AND_SPECIFY:
                {
                alt183=10;
                }
                break;
            case OR_SPECIFY:
                {
                alt183=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 183, 0, input);

                throw nvae;

            }

            switch (alt183) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2046:7: SPECIFY
                    {
                    SPECIFY318=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_assignmentOperator13946); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AssignOp(SPECIFY318); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2048:7: ADD_SPECIFY
                    {
                    ADD_SPECIFY319=(Token)match(input,ADD_SPECIFY,FOLLOW_ADD_SPECIFY_in_assignmentOperator13961); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AddAssignOp(ADD_SPECIFY319); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2049:7: SUBTRACT_SPECIFY
                    {
                    SUBTRACT_SPECIFY320=(Token)match(input,SUBTRACT_SPECIFY,FOLLOW_SUBTRACT_SPECIFY_in_assignmentOperator13971); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SubtractAssignOp(SUBTRACT_SPECIFY320); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2050:7: MULTIPLY_SPECIFY
                    {
                    MULTIPLY_SPECIFY321=(Token)match(input,MULTIPLY_SPECIFY,FOLLOW_MULTIPLY_SPECIFY_in_assignmentOperator13981); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new MultiplyAssignOp(MULTIPLY_SPECIFY321); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2051:7: DIVIDE_SPECIFY
                    {
                    DIVIDE_SPECIFY322=(Token)match(input,DIVIDE_SPECIFY,FOLLOW_DIVIDE_SPECIFY_in_assignmentOperator13991); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DivideAssignOp(DIVIDE_SPECIFY322); }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2052:7: REMAINDER_SPECIFY
                    {
                    REMAINDER_SPECIFY323=(Token)match(input,REMAINDER_SPECIFY,FOLLOW_REMAINDER_SPECIFY_in_assignmentOperator14001); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RemainderAssignOp(REMAINDER_SPECIFY323); }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2053:7: INTERSECT_SPECIFY
                    {
                    INTERSECT_SPECIFY324=(Token)match(input,INTERSECT_SPECIFY,FOLLOW_INTERSECT_SPECIFY_in_assignmentOperator14011); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IntersectAssignOp(INTERSECT_SPECIFY324); }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2054:7: UNION_SPECIFY
                    {
                    UNION_SPECIFY325=(Token)match(input,UNION_SPECIFY,FOLLOW_UNION_SPECIFY_in_assignmentOperator14021); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new UnionAssignOp(UNION_SPECIFY325); }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2055:7: COMPLEMENT_SPECIFY
                    {
                    COMPLEMENT_SPECIFY326=(Token)match(input,COMPLEMENT_SPECIFY,FOLLOW_COMPLEMENT_SPECIFY_in_assignmentOperator14031); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ComplementAssignOp(COMPLEMENT_SPECIFY326); }

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2056:7: AND_SPECIFY
                    {
                    AND_SPECIFY327=(Token)match(input,AND_SPECIFY,FOLLOW_AND_SPECIFY_in_assignmentOperator14041); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AndAssignOp(AND_SPECIFY327); }

                    }
                    break;
                case 11 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2057:7: OR_SPECIFY
                    {
                    OR_SPECIFY328=(Token)match(input,OR_SPECIFY,FOLLOW_OR_SPECIFY_in_assignmentOperator14051); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new OrAssignOp(OR_SPECIFY328); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "assignmentOperator"



    // $ANTLR start "thenElseExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2061:1: thenElseExpression returns [Term term] : de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )* ;
    public Term thenElseExpression() throws RecognitionException {
        Term term = null;


        Term de1 =null;

        Term de2 =null;

        BinaryOperatorExpression thenElseOperator329 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2062:5: (de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2062:7: de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )*
            {
            pushFollow(FOLLOW_disjunctionExpression_in_thenElseExpression14081);
            de1=disjunctionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = de1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2064:7: ( thenElseOperator de2= disjunctionExpression )*
            loop184:
            do {
                int alt184=2;
                int LA184_0 = input.LA(1);

                if ( (LA184_0==ELSE_CLAUSE||LA184_0==THEN_CLAUSE) ) {
                    alt184=1;
                }


                switch (alt184) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2065:9: thenElseOperator de2= disjunctionExpression
            	    {
            	    pushFollow(FOLLOW_thenElseOperator_in_thenElseExpression14107);
            	    thenElseOperator329=thenElseOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { thenElseOperator329.setLeftTerm(term);
            	              term = thenElseOperator329; }

            	    pushFollow(FOLLOW_disjunctionExpression_in_thenElseExpression14129);
            	    de2=disjunctionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { thenElseOperator329.setRightTerm(de2); }

            	    }
            	    break;

            	default :
            	    break loop184;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "thenElseExpression"



    // $ANTLR start "thenElseOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2086:1: thenElseOperator returns [BinaryOperatorExpression operator] : ( ELSE_CLAUSE | THEN_CLAUSE );
    public BinaryOperatorExpression thenElseOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token ELSE_CLAUSE330=null;
        Token THEN_CLAUSE331=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2087:5: ( ELSE_CLAUSE | THEN_CLAUSE )
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==ELSE_CLAUSE) ) {
                alt185=1;
            }
            else if ( (LA185_0==THEN_CLAUSE) ) {
                alt185=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 185, 0, input);

                throw nvae;

            }
            switch (alt185) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2087:7: ELSE_CLAUSE
                    {
                    ELSE_CLAUSE330=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_thenElseOperator14200); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DefaultOp(ELSE_CLAUSE330); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2089:7: THEN_CLAUSE
                    {
                    THEN_CLAUSE331=(Token)match(input,THEN_CLAUSE,FOLLOW_THEN_CLAUSE_in_thenElseOperator14217); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ThenOp(THEN_CLAUSE331); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "thenElseOperator"



    // $ANTLR start "disjunctionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2093:1: disjunctionExpression returns [Term term] : me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )* ;
    public Term disjunctionExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        OrOp disjunctionOperator332 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2094:5: (me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2094:7: me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )*
            {
            pushFollow(FOLLOW_conjunctionExpression_in_disjunctionExpression14248);
            me1=conjunctionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = me1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2096:7: ( disjunctionOperator me2= conjunctionExpression )*
            loop186:
            do {
                int alt186=2;
                int LA186_0 = input.LA(1);

                if ( (LA186_0==OR_OP) ) {
                    alt186=1;
                }


                switch (alt186) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2097:9: disjunctionOperator me2= conjunctionExpression
            	    {
            	    pushFollow(FOLLOW_disjunctionOperator_in_disjunctionExpression14274);
            	    disjunctionOperator332=disjunctionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { disjunctionOperator332.setLeftTerm(term);
            	              term = disjunctionOperator332; }

            	    pushFollow(FOLLOW_conjunctionExpression_in_disjunctionExpression14297);
            	    me2=conjunctionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { disjunctionOperator332.setRightTerm(me2); }

            	    }
            	    break;

            	default :
            	    break loop186;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "disjunctionExpression"



    // $ANTLR start "disjunctionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2105:1: disjunctionOperator returns [OrOp operator] : OR_OP ;
    public OrOp disjunctionOperator() throws RecognitionException {
        OrOp operator = null;


        Token OR_OP333=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2106:5: ( OR_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2106:7: OR_OP
            {
            OR_OP333=(Token)match(input,OR_OP,FOLLOW_OR_OP_in_disjunctionOperator14337); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new OrOp(OR_OP333); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "disjunctionOperator"



    // $ANTLR start "conjunctionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2110:1: conjunctionExpression returns [Term term] : me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )* ;
    public Term conjunctionExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        AndOp conjunctionOperator334 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2111:5: (me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2111:7: me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )*
            {
            pushFollow(FOLLOW_logicalNegationExpression_in_conjunctionExpression14369);
            me1=logicalNegationExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = me1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2113:7: ( conjunctionOperator me2= logicalNegationExpression )*
            loop187:
            do {
                int alt187=2;
                int LA187_0 = input.LA(1);

                if ( (LA187_0==AND_OP) ) {
                    alt187=1;
                }


                switch (alt187) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2114:9: conjunctionOperator me2= logicalNegationExpression
            	    {
            	    pushFollow(FOLLOW_conjunctionOperator_in_conjunctionExpression14395);
            	    conjunctionOperator334=conjunctionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { conjunctionOperator334.setLeftTerm(term);
            	              term = conjunctionOperator334; }

            	    pushFollow(FOLLOW_logicalNegationExpression_in_conjunctionExpression14418);
            	    me2=logicalNegationExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { conjunctionOperator334.setRightTerm(me2); }

            	    }
            	    break;

            	default :
            	    break loop187;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "conjunctionExpression"



    // $ANTLR start "conjunctionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2122:1: conjunctionOperator returns [AndOp operator] : AND_OP ;
    public AndOp conjunctionOperator() throws RecognitionException {
        AndOp operator = null;


        Token AND_OP335=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2123:5: ( AND_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2123:7: AND_OP
            {
            AND_OP335=(Token)match(input,AND_OP,FOLLOW_AND_OP_in_conjunctionOperator14458); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new AndOp(AND_OP335); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "conjunctionOperator"



    // $ANTLR start "logicalNegationExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2127:1: logicalNegationExpression returns [Term term] : ( notOperator le= logicalNegationExpression | equalityExpression );
    public Term logicalNegationExpression() throws RecognitionException {
        Term term = null;


        Term le =null;

        NotOp notOperator336 =null;

        Term equalityExpression337 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2128:5: ( notOperator le= logicalNegationExpression | equalityExpression )
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==NOT_OP) ) {
                alt188=1;
            }
            else if ( (LA188_0==BACKTICK||LA188_0==CHAR_LITERAL||(LA188_0 >= DECREMENT_OP && LA188_0 <= DIFFERENCE_OP)||LA188_0==DYNAMIC||LA188_0==FLOAT_LITERAL||LA188_0==INCREMENT_OP||(LA188_0 >= LBRACE && LA188_0 <= LBRACKET)||LA188_0==LIDENTIFIER||LA188_0==LPAREN||LA188_0==NATURAL_LITERAL||(LA188_0 >= OUTER && LA188_0 <= PACKAGE)||LA188_0==STRING_LITERAL||LA188_0==STRING_START||(LA188_0 >= SUM_OP && LA188_0 <= SUPER)||LA188_0==THIS||LA188_0==UIDENTIFIER||LA188_0==VERBATIM_STRING) ) {
                alt188=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                    new NoViableAltException("", 188, 0, input);

                throw nvae;

            }
            switch (alt188) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2128:7: notOperator le= logicalNegationExpression
                    {
                    pushFollow(FOLLOW_notOperator_in_logicalNegationExpression14488);
                    notOperator336=notOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = notOperator336; }

                    pushFollow(FOLLOW_logicalNegationExpression_in_logicalNegationExpression14507);
                    le=logicalNegationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { notOperator336.setTerm(le); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2132:7: equalityExpression
                    {
                    pushFollow(FOLLOW_equalityExpression_in_logicalNegationExpression14523);
                    equalityExpression337=equalityExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = equalityExpression337; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "logicalNegationExpression"



    // $ANTLR start "notOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2136:1: notOperator returns [NotOp operator] : NOT_OP ;
    public NotOp notOperator() throws RecognitionException {
        NotOp operator = null;


        Token NOT_OP338=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2137:5: ( NOT_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2137:7: NOT_OP
            {
            NOT_OP338=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_notOperator14552); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new NotOp(NOT_OP338); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "notOperator"



    // $ANTLR start "equalityExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2141:1: equalityExpression returns [Term term] : ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )? ;
    public Term equalityExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        Term ee2 =null;

        BinaryOperatorExpression equalityOperator339 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2142:5: (ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2142:7: ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )?
            {
            pushFollow(FOLLOW_comparisonExpression_in_equalityExpression14584);
            ee1=comparisonExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ee1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2144:7: ( equalityOperator ee2= comparisonExpression )?
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==EQUAL_OP||LA189_0==IDENTICAL_OP||LA189_0==NOT_EQUAL_OP) ) {
                alt189=1;
            }
            switch (alt189) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2145:9: equalityOperator ee2= comparisonExpression
                    {
                    pushFollow(FOLLOW_equalityOperator_in_equalityExpression14610);
                    equalityOperator339=equalityOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { equalityOperator339.setLeftTerm(term);
                              term = equalityOperator339; }

                    pushFollow(FOLLOW_comparisonExpression_in_equalityExpression14633);
                    ee2=comparisonExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { equalityOperator339.setRightTerm(ee2); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "equalityExpression"



    // $ANTLR start "equalityOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2153:1: equalityOperator returns [BinaryOperatorExpression operator] : ( EQUAL_OP | NOT_EQUAL_OP | IDENTICAL_OP );
    public BinaryOperatorExpression equalityOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token EQUAL_OP340=null;
        Token NOT_EQUAL_OP341=null;
        Token IDENTICAL_OP342=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2154:5: ( EQUAL_OP | NOT_EQUAL_OP | IDENTICAL_OP )
            int alt190=3;
            switch ( input.LA(1) ) {
            case EQUAL_OP:
                {
                alt190=1;
                }
                break;
            case NOT_EQUAL_OP:
                {
                alt190=2;
                }
                break;
            case IDENTICAL_OP:
                {
                alt190=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 190, 0, input);

                throw nvae;

            }

            switch (alt190) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2154:7: EQUAL_OP
                    {
                    EQUAL_OP340=(Token)match(input,EQUAL_OP,FOLLOW_EQUAL_OP_in_equalityOperator14673); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new EqualOp(EQUAL_OP340); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2156:7: NOT_EQUAL_OP
                    {
                    NOT_EQUAL_OP341=(Token)match(input,NOT_EQUAL_OP,FOLLOW_NOT_EQUAL_OP_in_equalityOperator14690); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new NotEqualOp(NOT_EQUAL_OP341); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2158:7: IDENTICAL_OP
                    {
                    IDENTICAL_OP342=(Token)match(input,IDENTICAL_OP,FOLLOW_IDENTICAL_OP_in_equalityOperator14706); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IdenticalOp(IDENTICAL_OP342); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "equalityOperator"



    // $ANTLR start "comparisonExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2162:1: comparisonExpression returns [Term term] : ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )? ;
    public Term comparisonExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        BinaryOperatorExpression co1 =null;

        Term ee2 =null;

        ComparisonOp lo1 =null;

        Term ee3 =null;

        ComparisonOp so1 =null;

        Term ee4 =null;

        ComparisonOp so2 =null;

        Term ee5 =null;

        TypeOperatorExpression to1 =null;

        StaticType t1 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2163:5: (ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2163:7: ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )?
            {
            pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression14737);
            ee1=existenceEmptinessExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ee1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2165:7: (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )?
            int alt192=5;
            switch ( input.LA(1) ) {
                case COMPARE_OP:
                case IN_OP:
                    {
                    alt192=1;
                    }
                    break;
                case LARGER_OP:
                case LARGE_AS_OP:
                    {
                    alt192=2;
                    }
                    break;
                case SMALLER_OP:
                case SMALL_AS_OP:
                    {
                    alt192=3;
                    }
                    break;
                case CASE_TYPES:
                case EXTENDS:
                case IS_OP:
                case SATISFIES:
                    {
                    alt192=4;
                    }
                    break;
            }

            switch (alt192) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2166:9: co1= comparisonOperator ee2= existenceEmptinessExpression
                    {
                    pushFollow(FOLLOW_comparisonOperator_in_comparisonExpression14765);
                    co1=comparisonOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { co1.setLeftTerm(term);
                              term = co1; }

                    pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression14788);
                    ee2=existenceEmptinessExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { co1.setRightTerm(ee2); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2171:9: lo1= largerOperator ee3= existenceEmptinessExpression
                    {
                    pushFollow(FOLLOW_largerOperator_in_comparisonExpression14810);
                    lo1=largerOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { lo1.setLeftTerm(term);
                              term = lo1; }

                    pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression14833);
                    ee3=existenceEmptinessExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { lo1.setRightTerm(ee3); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2176:9: so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )?
                    {
                    pushFollow(FOLLOW_smallerOperator_in_comparisonExpression14855);
                    so1=smallerOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { so1.setLeftTerm(term);
                              term = so1; }

                    pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression14878);
                    ee4=existenceEmptinessExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { so1.setRightTerm(ee4); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2181:9: (so2= smallerOperator ee5= existenceEmptinessExpression )?
                    int alt191=2;
                    int LA191_0 = input.LA(1);

                    if ( ((LA191_0 >= SMALLER_OP && LA191_0 <= SMALL_AS_OP)) ) {
                        alt191=1;
                    }
                    switch (alt191) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2182:11: so2= smallerOperator ee5= existenceEmptinessExpression
                            {
                            pushFollow(FOLLOW_smallerOperator_in_comparisonExpression14913);
                            so2=smallerOperator();

                            state._fsp--;
                            if (state.failed) return term;

                            pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression14927);
                            ee5=existenceEmptinessExpression();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { WithinOp w = new WithinOp(null); 
                                        Bound lb = so1 instanceof SmallerOp ?
                                            new OpenBound(null) : new ClosedBound(null);
                                        lb.setTerm(ee1);
                                        Bound ub = so2 instanceof SmallerOp ?
                                            new OpenBound(null) : new ClosedBound(null);
                                        ub.setTerm(ee5);
                                        w.setLowerBound(lb);
                                        w.setUpperBound(ub);
                                        w.setTerm(ee4);
                                        term = w; }

                            }
                            break;

                    }


                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2196:9: to1= typeOperator t1= type
                    {
                    pushFollow(FOLLOW_typeOperator_in_comparisonExpression14962);
                    to1=typeOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { to1.setTerm(ee1); 
                              term = to1; }

                    pushFollow(FOLLOW_type_in_comparisonExpression14984);
                    t1=type();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { to1.setType(t1); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "comparisonExpression"



    // $ANTLR start "smallerOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2210:1: smallerOperator returns [ComparisonOp operator] : ( SMALL_AS_OP | SMALLER_OP );
    public ComparisonOp smallerOperator() throws RecognitionException {
        ComparisonOp operator = null;


        Token SMALL_AS_OP343=null;
        Token SMALLER_OP344=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2211:5: ( SMALL_AS_OP | SMALLER_OP )
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( (LA193_0==SMALL_AS_OP) ) {
                alt193=1;
            }
            else if ( (LA193_0==SMALLER_OP) ) {
                alt193=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 193, 0, input);

                throw nvae;

            }
            switch (alt193) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2211:7: SMALL_AS_OP
                    {
                    SMALL_AS_OP343=(Token)match(input,SMALL_AS_OP,FOLLOW_SMALL_AS_OP_in_smallerOperator15030); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SmallAsOp(SMALL_AS_OP343); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2213:7: SMALLER_OP
                    {
                    SMALLER_OP344=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_smallerOperator15046); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SmallerOp(SMALLER_OP344); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "smallerOperator"



    // $ANTLR start "largerOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2217:1: largerOperator returns [ComparisonOp operator] : ( LARGE_AS_OP | LARGER_OP );
    public ComparisonOp largerOperator() throws RecognitionException {
        ComparisonOp operator = null;


        Token LARGE_AS_OP345=null;
        Token LARGER_OP346=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2218:5: ( LARGE_AS_OP | LARGER_OP )
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==LARGE_AS_OP) ) {
                alt194=1;
            }
            else if ( (LA194_0==LARGER_OP) ) {
                alt194=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 194, 0, input);

                throw nvae;

            }
            switch (alt194) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2218:7: LARGE_AS_OP
                    {
                    LARGE_AS_OP345=(Token)match(input,LARGE_AS_OP,FOLLOW_LARGE_AS_OP_in_largerOperator15075); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new LargeAsOp(LARGE_AS_OP345); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2220:7: LARGER_OP
                    {
                    LARGER_OP346=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_largerOperator15091); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new LargerOp(LARGER_OP346); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "largerOperator"



    // $ANTLR start "comparisonOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2224:1: comparisonOperator returns [BinaryOperatorExpression operator] : ( COMPARE_OP | IN_OP );
    public BinaryOperatorExpression comparisonOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token COMPARE_OP347=null;
        Token IN_OP348=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2225:5: ( COMPARE_OP | IN_OP )
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( (LA195_0==COMPARE_OP) ) {
                alt195=1;
            }
            else if ( (LA195_0==IN_OP) ) {
                alt195=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 195, 0, input);

                throw nvae;

            }
            switch (alt195) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2225:7: COMPARE_OP
                    {
                    COMPARE_OP347=(Token)match(input,COMPARE_OP,FOLLOW_COMPARE_OP_in_comparisonOperator15120); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new CompareOp(COMPARE_OP347); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2227:7: IN_OP
                    {
                    IN_OP348=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_comparisonOperator15137); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new InOp(IN_OP348); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "comparisonOperator"



    // $ANTLR start "typeOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2231:1: typeOperator returns [TypeOperatorExpression operator] : ( IS_OP | EXTENDS | SATISFIES | CASE_TYPES );
    public TypeOperatorExpression typeOperator() throws RecognitionException {
        TypeOperatorExpression operator = null;


        Token IS_OP349=null;
        Token EXTENDS350=null;
        Token SATISFIES351=null;
        Token CASE_TYPES352=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2232:5: ( IS_OP | EXTENDS | SATISFIES | CASE_TYPES )
            int alt196=4;
            switch ( input.LA(1) ) {
            case IS_OP:
                {
                alt196=1;
                }
                break;
            case EXTENDS:
                {
                alt196=2;
                }
                break;
            case SATISFIES:
                {
                alt196=3;
                }
                break;
            case CASE_TYPES:
                {
                alt196=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 196, 0, input);

                throw nvae;

            }

            switch (alt196) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2232:7: IS_OP
                    {
                    IS_OP349=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_typeOperator15166); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IsOp(IS_OP349); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2234:7: EXTENDS
                    {
                    EXTENDS350=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_typeOperator15182); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Extends(EXTENDS350); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2236:7: SATISFIES
                    {
                    SATISFIES351=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_typeOperator15198); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Satisfies(SATISFIES351); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2238:7: CASE_TYPES
                    {
                    CASE_TYPES352=(Token)match(input,CASE_TYPES,FOLLOW_CASE_TYPES_in_typeOperator15214); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new OfOp(CASE_TYPES352); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "typeOperator"



    // $ANTLR start "existenceEmptinessExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2242:1: existenceEmptinessExpression returns [Term term] : de1= entryRangeExpression (eno1= existsNonemptyOperator )? ;
    public Term existenceEmptinessExpression() throws RecognitionException {
        Term term = null;


        Term de1 =null;

        UnaryOperatorExpression eno1 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2243:5: (de1= entryRangeExpression (eno1= existsNonemptyOperator )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2243:7: de1= entryRangeExpression (eno1= existsNonemptyOperator )?
            {
            pushFollow(FOLLOW_entryRangeExpression_in_existenceEmptinessExpression15245);
            de1=entryRangeExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = de1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2245:7: (eno1= existsNonemptyOperator )?
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==EXISTS||LA197_0==NONEMPTY) ) {
                alt197=1;
            }
            switch (alt197) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2246:9: eno1= existsNonemptyOperator
                    {
                    pushFollow(FOLLOW_existsNonemptyOperator_in_existenceEmptinessExpression15273);
                    eno1=existsNonemptyOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = eno1;
                              eno1.setTerm(de1); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "existenceEmptinessExpression"



    // $ANTLR start "existsNonemptyOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2256:1: existsNonemptyOperator returns [UnaryOperatorExpression operator] : ( EXISTS | NONEMPTY );
    public UnaryOperatorExpression existsNonemptyOperator() throws RecognitionException {
        UnaryOperatorExpression operator = null;


        Token EXISTS353=null;
        Token NONEMPTY354=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2257:5: ( EXISTS | NONEMPTY )
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==EXISTS) ) {
                alt198=1;
            }
            else if ( (LA198_0==NONEMPTY) ) {
                alt198=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 198, 0, input);

                throw nvae;

            }
            switch (alt198) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2257:7: EXISTS
                    {
                    EXISTS353=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_existsNonemptyOperator15319); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Exists(EXISTS353); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2259:7: NONEMPTY
                    {
                    NONEMPTY354=(Token)match(input,NONEMPTY,FOLLOW_NONEMPTY_in_existsNonemptyOperator15336); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Nonempty(NONEMPTY354); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "existsNonemptyOperator"



    // $ANTLR start "entryRangeExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2263:1: entryRangeExpression returns [Term term] : ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )? ;
    public Term entryRangeExpression() throws RecognitionException {
        Term term = null;


        Term ae1 =null;

        Term ae2 =null;

        BinaryOperatorExpression rangeIntervalEntryOperator355 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2264:5: (ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2264:7: ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )?
            {
            pushFollow(FOLLOW_additiveExpression_in_entryRangeExpression15367);
            ae1=additiveExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ae1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2266:7: ( rangeIntervalEntryOperator ae2= additiveExpression )?
            int alt199=2;
            int LA199_0 = input.LA(1);

            if ( (LA199_0==ENTRY_OP||LA199_0==RANGE_OP||LA199_0==SEGMENT_OP) ) {
                alt199=1;
            }
            switch (alt199) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2267:9: rangeIntervalEntryOperator ae2= additiveExpression
                    {
                    pushFollow(FOLLOW_rangeIntervalEntryOperator_in_entryRangeExpression15393);
                    rangeIntervalEntryOperator355=rangeIntervalEntryOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { rangeIntervalEntryOperator355.setLeftTerm(term);
                              term = rangeIntervalEntryOperator355; }

                    pushFollow(FOLLOW_additiveExpression_in_entryRangeExpression15416);
                    ae2=additiveExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { rangeIntervalEntryOperator355.setRightTerm(ae2); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "entryRangeExpression"



    // $ANTLR start "rangeIntervalEntryOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2275:1: rangeIntervalEntryOperator returns [BinaryOperatorExpression operator] : ( RANGE_OP | SEGMENT_OP | ENTRY_OP );
    public BinaryOperatorExpression rangeIntervalEntryOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token RANGE_OP356=null;
        Token SEGMENT_OP357=null;
        Token ENTRY_OP358=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2276:5: ( RANGE_OP | SEGMENT_OP | ENTRY_OP )
            int alt200=3;
            switch ( input.LA(1) ) {
            case RANGE_OP:
                {
                alt200=1;
                }
                break;
            case SEGMENT_OP:
                {
                alt200=2;
                }
                break;
            case ENTRY_OP:
                {
                alt200=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 200, 0, input);

                throw nvae;

            }

            switch (alt200) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2276:7: RANGE_OP
                    {
                    RANGE_OP356=(Token)match(input,RANGE_OP,FOLLOW_RANGE_OP_in_rangeIntervalEntryOperator15456); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RangeOp(RANGE_OP356); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2278:7: SEGMENT_OP
                    {
                    SEGMENT_OP357=(Token)match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_rangeIntervalEntryOperator15473); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SegmentOp(SEGMENT_OP357); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2280:7: ENTRY_OP
                    {
                    ENTRY_OP358=(Token)match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_rangeIntervalEntryOperator15489); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new EntryOp(ENTRY_OP358); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "rangeIntervalEntryOperator"



    // $ANTLR start "additiveExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2284:1: additiveExpression returns [Term term] : me1= scaleExpression ( additiveOperator me2= scaleExpression )* ;
    public Term additiveExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        BinaryOperatorExpression additiveOperator359 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2285:5: (me1= scaleExpression ( additiveOperator me2= scaleExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2285:7: me1= scaleExpression ( additiveOperator me2= scaleExpression )*
            {
            pushFollow(FOLLOW_scaleExpression_in_additiveExpression15520);
            me1=scaleExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = me1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2287:7: ( additiveOperator me2= scaleExpression )*
            loop201:
            do {
                int alt201=2;
                int LA201_0 = input.LA(1);

                if ( (LA201_0==DIFFERENCE_OP||LA201_0==SUM_OP) ) {
                    alt201=1;
                }


                switch (alt201) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2288:9: additiveOperator me2= scaleExpression
            	    {
            	    pushFollow(FOLLOW_additiveOperator_in_additiveExpression15546);
            	    additiveOperator359=additiveOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { additiveOperator359.setLeftTerm(term);
            	              term = additiveOperator359; }

            	    pushFollow(FOLLOW_scaleExpression_in_additiveExpression15569);
            	    me2=scaleExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { additiveOperator359.setRightTerm(me2); }

            	    }
            	    break;

            	default :
            	    break loop201;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "additiveExpression"



    // $ANTLR start "additiveOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2296:1: additiveOperator returns [BinaryOperatorExpression operator] : ( SUM_OP | DIFFERENCE_OP );
    public BinaryOperatorExpression additiveOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token SUM_OP360=null;
        Token DIFFERENCE_OP361=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2297:5: ( SUM_OP | DIFFERENCE_OP )
            int alt202=2;
            int LA202_0 = input.LA(1);

            if ( (LA202_0==SUM_OP) ) {
                alt202=1;
            }
            else if ( (LA202_0==DIFFERENCE_OP) ) {
                alt202=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 202, 0, input);

                throw nvae;

            }
            switch (alt202) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2297:7: SUM_OP
                    {
                    SUM_OP360=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_additiveOperator15609); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SumOp(SUM_OP360); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2299:7: DIFFERENCE_OP
                    {
                    DIFFERENCE_OP361=(Token)match(input,DIFFERENCE_OP,FOLLOW_DIFFERENCE_OP_in_additiveOperator15626); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DifferenceOp(DIFFERENCE_OP361); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "additiveOperator"



    // $ANTLR start "scaleExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2303:1: scaleExpression returns [Term term] : multiplicativeExpression ( scaleOperator se= scaleExpression )? ;
    public Term scaleExpression() throws RecognitionException {
        Term term = null;


        Term se =null;

        Term multiplicativeExpression362 =null;

        ScaleOp scaleOperator363 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2304:5: ( multiplicativeExpression ( scaleOperator se= scaleExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2304:7: multiplicativeExpression ( scaleOperator se= scaleExpression )?
            {
            pushFollow(FOLLOW_multiplicativeExpression_in_scaleExpression15655);
            multiplicativeExpression362=multiplicativeExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = multiplicativeExpression362; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2306:7: ( scaleOperator se= scaleExpression )?
            int alt203=2;
            int LA203_0 = input.LA(1);

            if ( (LA203_0==SCALE_OP) ) {
                alt203=1;
            }
            switch (alt203) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2307:9: scaleOperator se= scaleExpression
                    {
                    pushFollow(FOLLOW_scaleOperator_in_scaleExpression15681);
                    scaleOperator363=scaleOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { scaleOperator363.setLeftTerm(term);
                              term = scaleOperator363; }

                    pushFollow(FOLLOW_scaleExpression_in_scaleExpression15703);
                    se=scaleExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { scaleOperator363.setRightTerm(se); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "scaleExpression"



    // $ANTLR start "multiplicativeExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2315:1: multiplicativeExpression returns [Term term] : ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )* ;
    public Term multiplicativeExpression() throws RecognitionException {
        Term term = null;


        Term ue1 =null;

        Term ue2 =null;

        BinaryOperatorExpression multiplicativeOperator364 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2316:5: (ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2316:7: ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )*
            {
            pushFollow(FOLLOW_unionExpression_in_multiplicativeExpression15745);
            ue1=unionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ue1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2318:7: ( multiplicativeOperator ue2= unionExpression )*
            loop204:
            do {
                int alt204=2;
                int LA204_0 = input.LA(1);

                if ( ((LA204_0 >= PRODUCT_OP && LA204_0 <= QUOTIENT_OP)||LA204_0==REMAINDER_OP) ) {
                    alt204=1;
                }


                switch (alt204) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2319:9: multiplicativeOperator ue2= unionExpression
            	    {
            	    pushFollow(FOLLOW_multiplicativeOperator_in_multiplicativeExpression15771);
            	    multiplicativeOperator364=multiplicativeOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { multiplicativeOperator364.setLeftTerm(term);
            	              term = multiplicativeOperator364; }

            	    pushFollow(FOLLOW_unionExpression_in_multiplicativeExpression15794);
            	    ue2=unionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { multiplicativeOperator364.setRightTerm(ue2); }

            	    }
            	    break;

            	default :
            	    break loop204;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "multiplicativeExpression"



    // $ANTLR start "multiplicativeOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2327:1: multiplicativeOperator returns [BinaryOperatorExpression operator] : ( PRODUCT_OP | QUOTIENT_OP | REMAINDER_OP );
    public BinaryOperatorExpression multiplicativeOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token PRODUCT_OP365=null;
        Token QUOTIENT_OP366=null;
        Token REMAINDER_OP367=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2328:5: ( PRODUCT_OP | QUOTIENT_OP | REMAINDER_OP )
            int alt205=3;
            switch ( input.LA(1) ) {
            case PRODUCT_OP:
                {
                alt205=1;
                }
                break;
            case QUOTIENT_OP:
                {
                alt205=2;
                }
                break;
            case REMAINDER_OP:
                {
                alt205=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 205, 0, input);

                throw nvae;

            }

            switch (alt205) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2328:7: PRODUCT_OP
                    {
                    PRODUCT_OP365=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_multiplicativeOperator15834); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ProductOp(PRODUCT_OP365); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2330:7: QUOTIENT_OP
                    {
                    QUOTIENT_OP366=(Token)match(input,QUOTIENT_OP,FOLLOW_QUOTIENT_OP_in_multiplicativeOperator15851); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new QuotientOp(QUOTIENT_OP366); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2332:7: REMAINDER_OP
                    {
                    REMAINDER_OP367=(Token)match(input,REMAINDER_OP,FOLLOW_REMAINDER_OP_in_multiplicativeOperator15867); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RemainderOp(REMAINDER_OP367); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "multiplicativeOperator"



    // $ANTLR start "unionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2336:1: unionExpression returns [Term term] : ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )* ;
    public Term unionExpression() throws RecognitionException {
        Term term = null;


        Term ie1 =null;

        Term ie2 =null;

        BinaryOperatorExpression unionOperator368 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2337:5: (ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2337:7: ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )*
            {
            pushFollow(FOLLOW_intersectionExpression_in_unionExpression15898);
            ie1=intersectionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ie1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2339:7: ( unionOperator ie2= intersectionExpression )*
            loop206:
            do {
                int alt206=2;
                int LA206_0 = input.LA(1);

                if ( (LA206_0==COMPLEMENT_OP||LA206_0==UNION_OP) ) {
                    alt206=1;
                }


                switch (alt206) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2340:9: unionOperator ie2= intersectionExpression
            	    {
            	    pushFollow(FOLLOW_unionOperator_in_unionExpression15924);
            	    unionOperator368=unionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { unionOperator368.setLeftTerm(term);
            	              term = unionOperator368; }

            	    pushFollow(FOLLOW_intersectionExpression_in_unionExpression15947);
            	    ie2=intersectionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { unionOperator368.setRightTerm(ie2); }

            	    }
            	    break;

            	default :
            	    break loop206;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "unionExpression"



    // $ANTLR start "unionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2348:1: unionOperator returns [BinaryOperatorExpression operator] : ( UNION_OP | COMPLEMENT_OP );
    public BinaryOperatorExpression unionOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token UNION_OP369=null;
        Token COMPLEMENT_OP370=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2349:5: ( UNION_OP | COMPLEMENT_OP )
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==UNION_OP) ) {
                alt207=1;
            }
            else if ( (LA207_0==COMPLEMENT_OP) ) {
                alt207=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 207, 0, input);

                throw nvae;

            }
            switch (alt207) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2349:7: UNION_OP
                    {
                    UNION_OP369=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_unionOperator15991); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new UnionOp(UNION_OP369); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2351:7: COMPLEMENT_OP
                    {
                    COMPLEMENT_OP370=(Token)match(input,COMPLEMENT_OP,FOLLOW_COMPLEMENT_OP_in_unionOperator16007); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ComplementOp(COMPLEMENT_OP370); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "unionOperator"



    // $ANTLR start "intersectionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2355:1: intersectionExpression returns [Term term] : ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )* ;
    public Term intersectionExpression() throws RecognitionException {
        Term term = null;


        Term ne1 =null;

        Term ne2 =null;

        BinaryOperatorExpression intersectionOperator371 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2356:5: (ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2356:7: ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )*
            {
            pushFollow(FOLLOW_negationComplementExpression_in_intersectionExpression16038);
            ne1=negationComplementExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ne1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2358:7: ( intersectionOperator ne2= negationComplementExpression )*
            loop208:
            do {
                int alt208=2;
                int LA208_0 = input.LA(1);

                if ( (LA208_0==INTERSECTION_OP) ) {
                    alt208=1;
                }


                switch (alt208) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2359:9: intersectionOperator ne2= negationComplementExpression
            	    {
            	    pushFollow(FOLLOW_intersectionOperator_in_intersectionExpression16064);
            	    intersectionOperator371=intersectionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { intersectionOperator371.setLeftTerm(term);
            	              term = intersectionOperator371; }

            	    pushFollow(FOLLOW_negationComplementExpression_in_intersectionExpression16087);
            	    ne2=negationComplementExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { intersectionOperator371.setRightTerm(ne2); }

            	    }
            	    break;

            	default :
            	    break loop208;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "intersectionExpression"



    // $ANTLR start "intersectionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2367:1: intersectionOperator returns [BinaryOperatorExpression operator] : INTERSECTION_OP ;
    public BinaryOperatorExpression intersectionOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token INTERSECTION_OP372=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2368:5: ( INTERSECTION_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2368:7: INTERSECTION_OP
            {
            INTERSECTION_OP372=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_intersectionOperator16131); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new IntersectionOp(INTERSECTION_OP372); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "intersectionOperator"



    // $ANTLR start "negationComplementExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2372:1: negationComplementExpression returns [Term term] : ( unaryMinusOrComplementOperator ne= negationComplementExpression | exponentiationExpression );
    public Term negationComplementExpression() throws RecognitionException {
        Term term = null;


        Term ne =null;

        UnaryOperatorExpression unaryMinusOrComplementOperator373 =null;

        Term exponentiationExpression374 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2373:5: ( unaryMinusOrComplementOperator ne= negationComplementExpression | exponentiationExpression )
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==DIFFERENCE_OP||LA209_0==SUM_OP) ) {
                alt209=1;
            }
            else if ( (LA209_0==BACKTICK||LA209_0==CHAR_LITERAL||LA209_0==DECREMENT_OP||LA209_0==DYNAMIC||LA209_0==FLOAT_LITERAL||LA209_0==INCREMENT_OP||(LA209_0 >= LBRACE && LA209_0 <= LBRACKET)||LA209_0==LIDENTIFIER||LA209_0==LPAREN||LA209_0==NATURAL_LITERAL||(LA209_0 >= OUTER && LA209_0 <= PACKAGE)||LA209_0==STRING_LITERAL||LA209_0==STRING_START||LA209_0==SUPER||LA209_0==THIS||LA209_0==UIDENTIFIER||LA209_0==VERBATIM_STRING) ) {
                alt209=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                    new NoViableAltException("", 209, 0, input);

                throw nvae;

            }
            switch (alt209) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2373:7: unaryMinusOrComplementOperator ne= negationComplementExpression
                    {
                    pushFollow(FOLLOW_unaryMinusOrComplementOperator_in_negationComplementExpression16160);
                    unaryMinusOrComplementOperator373=unaryMinusOrComplementOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = unaryMinusOrComplementOperator373; }

                    pushFollow(FOLLOW_negationComplementExpression_in_negationComplementExpression16179);
                    ne=negationComplementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { unaryMinusOrComplementOperator373.setTerm(ne); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2377:7: exponentiationExpression
                    {
                    pushFollow(FOLLOW_exponentiationExpression_in_negationComplementExpression16195);
                    exponentiationExpression374=exponentiationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = exponentiationExpression374; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "negationComplementExpression"



    // $ANTLR start "unaryMinusOrComplementOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2381:1: unaryMinusOrComplementOperator returns [UnaryOperatorExpression operator] : ( DIFFERENCE_OP | SUM_OP );
    public UnaryOperatorExpression unaryMinusOrComplementOperator() throws RecognitionException {
        UnaryOperatorExpression operator = null;


        Token DIFFERENCE_OP375=null;
        Token SUM_OP376=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2382:5: ( DIFFERENCE_OP | SUM_OP )
            int alt210=2;
            int LA210_0 = input.LA(1);

            if ( (LA210_0==DIFFERENCE_OP) ) {
                alt210=1;
            }
            else if ( (LA210_0==SUM_OP) ) {
                alt210=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 210, 0, input);

                throw nvae;

            }
            switch (alt210) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2382:7: DIFFERENCE_OP
                    {
                    DIFFERENCE_OP375=(Token)match(input,DIFFERENCE_OP,FOLLOW_DIFFERENCE_OP_in_unaryMinusOrComplementOperator16224); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new NegativeOp(DIFFERENCE_OP375); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2384:7: SUM_OP
                    {
                    SUM_OP376=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_unaryMinusOrComplementOperator16241); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PositiveOp(SUM_OP376); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "unaryMinusOrComplementOperator"



    // $ANTLR start "exponentiationExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2388:1: exponentiationExpression returns [Term term] : incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )? ;
    public Term exponentiationExpression() throws RecognitionException {
        Term term = null;


        Term ee =null;

        Term incrementDecrementExpression377 =null;

        PowerOp exponentiationOperator378 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2389:5: ( incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2389:7: incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )?
            {
            pushFollow(FOLLOW_incrementDecrementExpression_in_exponentiationExpression16270);
            incrementDecrementExpression377=incrementDecrementExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = incrementDecrementExpression377; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2391:7: ( exponentiationOperator ee= exponentiationExpression )?
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==POWER_OP) ) {
                alt211=1;
            }
            switch (alt211) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2392:9: exponentiationOperator ee= exponentiationExpression
                    {
                    pushFollow(FOLLOW_exponentiationOperator_in_exponentiationExpression16296);
                    exponentiationOperator378=exponentiationOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { exponentiationOperator378.setLeftTerm(term);
                              term = exponentiationOperator378; }

                    pushFollow(FOLLOW_exponentiationExpression_in_exponentiationExpression16318);
                    ee=exponentiationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { exponentiationOperator378.setRightTerm(ee); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "exponentiationExpression"



    // $ANTLR start "exponentiationOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2400:1: exponentiationOperator returns [PowerOp operator] : POWER_OP ;
    public PowerOp exponentiationOperator() throws RecognitionException {
        PowerOp operator = null;


        Token POWER_OP379=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2401:5: ( POWER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2401:7: POWER_OP
            {
            POWER_OP379=(Token)match(input,POWER_OP,FOLLOW_POWER_OP_in_exponentiationOperator16358); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new PowerOp(POWER_OP379); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "exponentiationOperator"



    // $ANTLR start "scaleOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2405:1: scaleOperator returns [ScaleOp operator] : SCALE_OP ;
    public ScaleOp scaleOperator() throws RecognitionException {
        ScaleOp operator = null;


        Token SCALE_OP380=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2406:5: ( SCALE_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2406:7: SCALE_OP
            {
            SCALE_OP380=(Token)match(input,SCALE_OP,FOLLOW_SCALE_OP_in_scaleOperator16388); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new ScaleOp(SCALE_OP380); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "scaleOperator"



    // $ANTLR start "incrementDecrementExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2410:1: incrementDecrementExpression returns [Term term] : ( prefixOperator ie= incrementDecrementExpression | postfixIncrementDecrementExpression );
    public Term incrementDecrementExpression() throws RecognitionException {
        Term term = null;


        Term ie =null;

        PrefixOperatorExpression prefixOperator381 =null;

        Term postfixIncrementDecrementExpression382 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2411:5: ( prefixOperator ie= incrementDecrementExpression | postfixIncrementDecrementExpression )
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( (LA212_0==DECREMENT_OP||LA212_0==INCREMENT_OP) ) {
                alt212=1;
            }
            else if ( (LA212_0==BACKTICK||LA212_0==CHAR_LITERAL||LA212_0==DYNAMIC||LA212_0==FLOAT_LITERAL||(LA212_0 >= LBRACE && LA212_0 <= LBRACKET)||LA212_0==LIDENTIFIER||LA212_0==LPAREN||LA212_0==NATURAL_LITERAL||(LA212_0 >= OUTER && LA212_0 <= PACKAGE)||LA212_0==STRING_LITERAL||LA212_0==STRING_START||LA212_0==SUPER||LA212_0==THIS||LA212_0==UIDENTIFIER||LA212_0==VERBATIM_STRING) ) {
                alt212=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                    new NoViableAltException("", 212, 0, input);

                throw nvae;

            }
            switch (alt212) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2411:7: prefixOperator ie= incrementDecrementExpression
                    {
                    pushFollow(FOLLOW_prefixOperator_in_incrementDecrementExpression16418);
                    prefixOperator381=prefixOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = prefixOperator381; }

                    pushFollow(FOLLOW_incrementDecrementExpression_in_incrementDecrementExpression16436);
                    ie=incrementDecrementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { prefixOperator381.setTerm(ie); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2415:7: postfixIncrementDecrementExpression
                    {
                    pushFollow(FOLLOW_postfixIncrementDecrementExpression_in_incrementDecrementExpression16452);
                    postfixIncrementDecrementExpression382=postfixIncrementDecrementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = postfixIncrementDecrementExpression382; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "incrementDecrementExpression"



    // $ANTLR start "prefixOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2419:1: prefixOperator returns [PrefixOperatorExpression operator] : ( DECREMENT_OP | INCREMENT_OP );
    public PrefixOperatorExpression prefixOperator() throws RecognitionException {
        PrefixOperatorExpression operator = null;


        Token DECREMENT_OP383=null;
        Token INCREMENT_OP384=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2420:5: ( DECREMENT_OP | INCREMENT_OP )
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==DECREMENT_OP) ) {
                alt213=1;
            }
            else if ( (LA213_0==INCREMENT_OP) ) {
                alt213=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 213, 0, input);

                throw nvae;

            }
            switch (alt213) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2420:7: DECREMENT_OP
                    {
                    DECREMENT_OP383=(Token)match(input,DECREMENT_OP,FOLLOW_DECREMENT_OP_in_prefixOperator16481); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DecrementOp(DECREMENT_OP383); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2422:7: INCREMENT_OP
                    {
                    INCREMENT_OP384=(Token)match(input,INCREMENT_OP,FOLLOW_INCREMENT_OP_in_prefixOperator16498); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IncrementOp(INCREMENT_OP384); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "prefixOperator"



    // $ANTLR start "postfixIncrementDecrementExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2426:1: postfixIncrementDecrementExpression returns [Term term] : primary ( postfixOperator )* ;
    public Term postfixIncrementDecrementExpression() throws RecognitionException {
        Term term = null;


        Primary primary385 =null;

        PostfixOperatorExpression postfixOperator386 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2427:5: ( primary ( postfixOperator )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2427:7: primary ( postfixOperator )*
            {
            pushFollow(FOLLOW_primary_in_postfixIncrementDecrementExpression16528);
            primary385=primary();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = primary385; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2429:7: ( postfixOperator )*
            loop214:
            do {
                int alt214=2;
                int LA214_0 = input.LA(1);

                if ( (LA214_0==DECREMENT_OP||LA214_0==INCREMENT_OP) ) {
                    alt214=1;
                }


                switch (alt214) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2430:9: postfixOperator
            	    {
            	    pushFollow(FOLLOW_postfixOperator_in_postfixIncrementDecrementExpression16556);
            	    postfixOperator386=postfixOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { postfixOperator386.setTerm(term);
            	              term = postfixOperator386; }

            	    }
            	    break;

            	default :
            	    break loop214;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "postfixIncrementDecrementExpression"



    // $ANTLR start "postfixOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2436:1: postfixOperator returns [PostfixOperatorExpression operator] : ( DECREMENT_OP | INCREMENT_OP );
    public PostfixOperatorExpression postfixOperator() throws RecognitionException {
        PostfixOperatorExpression operator = null;


        Token DECREMENT_OP387=null;
        Token INCREMENT_OP388=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2437:5: ( DECREMENT_OP | INCREMENT_OP )
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( (LA215_0==DECREMENT_OP) ) {
                alt215=1;
            }
            else if ( (LA215_0==INCREMENT_OP) ) {
                alt215=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 215, 0, input);

                throw nvae;

            }
            switch (alt215) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2437:7: DECREMENT_OP
                    {
                    DECREMENT_OP387=(Token)match(input,DECREMENT_OP,FOLLOW_DECREMENT_OP_in_postfixOperator16596); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PostfixDecrementOp(DECREMENT_OP387); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2439:7: INCREMENT_OP
                    {
                    INCREMENT_OP388=(Token)match(input,INCREMENT_OP,FOLLOW_INCREMENT_OP_in_postfixOperator16613); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PostfixIncrementOp(INCREMENT_OP388); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "postfixOperator"



    // $ANTLR start "selfReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2443:1: selfReference returns [Atom atom] : ( THIS | SUPER | OUTER | PACKAGE );
    public Atom selfReference() throws RecognitionException {
        Atom atom = null;


        Token THIS389=null;
        Token SUPER390=null;
        Token OUTER391=null;
        Token PACKAGE392=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2444:5: ( THIS | SUPER | OUTER | PACKAGE )
            int alt216=4;
            switch ( input.LA(1) ) {
            case THIS:
                {
                alt216=1;
                }
                break;
            case SUPER:
                {
                alt216=2;
                }
                break;
            case OUTER:
                {
                alt216=3;
                }
                break;
            case PACKAGE:
                {
                alt216=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return atom;}
                NoViableAltException nvae =
                    new NoViableAltException("", 216, 0, input);

                throw nvae;

            }

            switch (alt216) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2444:7: THIS
                    {
                    THIS389=(Token)match(input,THIS,FOLLOW_THIS_in_selfReference16643); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new This(THIS389); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2446:7: SUPER
                    {
                    SUPER390=(Token)match(input,SUPER,FOLLOW_SUPER_in_selfReference16659); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Super(SUPER390); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2448:7: OUTER
                    {
                    OUTER391=(Token)match(input,OUTER,FOLLOW_OUTER_in_selfReference16676); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Outer(OUTER391); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2450:7: PACKAGE
                    {
                    PACKAGE392=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_selfReference16692); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Package(PACKAGE392); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return atom;
    }
    // $ANTLR end "selfReference"



    // $ANTLR start "nonstringLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2454:1: nonstringLiteral returns [Literal literal] : ( NATURAL_LITERAL | FLOAT_LITERAL | CHAR_LITERAL );
    public Literal nonstringLiteral() throws RecognitionException {
        Literal literal = null;


        Token NATURAL_LITERAL393=null;
        Token FLOAT_LITERAL394=null;
        Token CHAR_LITERAL395=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2455:5: ( NATURAL_LITERAL | FLOAT_LITERAL | CHAR_LITERAL )
            int alt217=3;
            switch ( input.LA(1) ) {
            case NATURAL_LITERAL:
                {
                alt217=1;
                }
                break;
            case FLOAT_LITERAL:
                {
                alt217=2;
                }
                break;
            case CHAR_LITERAL:
                {
                alt217=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return literal;}
                NoViableAltException nvae =
                    new NoViableAltException("", 217, 0, input);

                throw nvae;

            }

            switch (alt217) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2455:7: NATURAL_LITERAL
                    {
                    NATURAL_LITERAL393=(Token)match(input,NATURAL_LITERAL,FOLLOW_NATURAL_LITERAL_in_nonstringLiteral16725); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new NaturalLiteral(NATURAL_LITERAL393); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2457:7: FLOAT_LITERAL
                    {
                    FLOAT_LITERAL394=(Token)match(input,FLOAT_LITERAL,FOLLOW_FLOAT_LITERAL_in_nonstringLiteral16742); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new FloatLiteral(FLOAT_LITERAL394); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2459:7: CHAR_LITERAL
                    {
                    CHAR_LITERAL395=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_nonstringLiteral16759); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new CharLiteral(CHAR_LITERAL395); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "nonstringLiteral"



    // $ANTLR start "stringLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2463:1: stringLiteral returns [StringLiteral stringLiteral] : ( STRING_LITERAL | VERBATIM_STRING );
    public StringLiteral stringLiteral() throws RecognitionException {
        StringLiteral stringLiteral = null;


        Token STRING_LITERAL396=null;
        Token VERBATIM_STRING397=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2464:5: ( STRING_LITERAL | VERBATIM_STRING )
            int alt218=2;
            int LA218_0 = input.LA(1);

            if ( (LA218_0==STRING_LITERAL) ) {
                alt218=1;
            }
            else if ( (LA218_0==VERBATIM_STRING) ) {
                alt218=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return stringLiteral;}
                NoViableAltException nvae =
                    new NoViableAltException("", 218, 0, input);

                throw nvae;

            }
            switch (alt218) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2464:7: STRING_LITERAL
                    {
                    STRING_LITERAL396=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_stringLiteral16789); if (state.failed) return stringLiteral;

                    if ( state.backtracking==0 ) { stringLiteral = new StringLiteral(STRING_LITERAL396); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2466:7: VERBATIM_STRING
                    {
                    VERBATIM_STRING397=(Token)match(input,VERBATIM_STRING,FOLLOW_VERBATIM_STRING_in_stringLiteral16806); if (state.failed) return stringLiteral;

                    if ( state.backtracking==0 ) { stringLiteral = new StringLiteral(VERBATIM_STRING397); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return stringLiteral;
    }
    // $ANTLR end "stringLiteral"



    // $ANTLR start "stringExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2470:1: stringExpression returns [Atom atom] : (sl1= stringLiteral | STRING_START e1= expression ( STRING_MID e2= expression )* STRING_END );
    public Atom stringExpression() throws RecognitionException {
        Atom atom = null;


        Token STRING_START398=null;
        Token STRING_MID399=null;
        Token STRING_END400=null;
        StringLiteral sl1 =null;

        Expression e1 =null;

        Expression e2 =null;


         StringTemplate st=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2472:5: (sl1= stringLiteral | STRING_START e1= expression ( STRING_MID e2= expression )* STRING_END )
            int alt220=2;
            int LA220_0 = input.LA(1);

            if ( (LA220_0==STRING_LITERAL||LA220_0==VERBATIM_STRING) ) {
                alt220=1;
            }
            else if ( (LA220_0==STRING_START) ) {
                alt220=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return atom;}
                NoViableAltException nvae =
                    new NoViableAltException("", 220, 0, input);

                throw nvae;

            }
            switch (alt220) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2472:7: sl1= stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_stringExpression16846);
                    sl1=stringLiteral();

                    state._fsp--;
                    if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom =sl1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2474:7: STRING_START e1= expression ( STRING_MID e2= expression )* STRING_END
                    {
                    STRING_START398=(Token)match(input,STRING_START,FOLLOW_STRING_START_in_stringExpression16862); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { st = new StringTemplate(null);
                            st.addStringLiteral(new StringLiteral(STRING_START398));
                            atom =st; }

                    pushFollow(FOLLOW_expression_in_stringExpression16880);
                    e1=expression();

                    state._fsp--;
                    if (state.failed) return atom;

                    if ( state.backtracking==0 ) { if (e1!=null) 
                                st.addExpression(e1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2481:7: ( STRING_MID e2= expression )*
                    loop219:
                    do {
                        int alt219=2;
                        int LA219_0 = input.LA(1);

                        if ( (LA219_0==STRING_MID) ) {
                            alt219=1;
                        }


                        switch (alt219) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2482:9: STRING_MID e2= expression
                    	    {
                    	    STRING_MID399=(Token)match(input,STRING_MID,FOLLOW_STRING_MID_in_stringExpression16906); if (state.failed) return atom;

                    	    if ( state.backtracking==0 ) { st.addStringLiteral(new StringLiteral(STRING_MID399)); }

                    	    pushFollow(FOLLOW_expression_in_stringExpression16928);
                    	    e2=expression();

                    	    state._fsp--;
                    	    if (state.failed) return atom;

                    	    if ( state.backtracking==0 ) { if (e2!=null) 
                    	                  st.addExpression(e2); }

                    	    }
                    	    break;

                    	default :
                    	    break loop219;
                        }
                    } while (true);


                    STRING_END400=(Token)match(input,STRING_END,FOLLOW_STRING_END_in_stringExpression16955); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { st.addStringLiteral(new StringLiteral(STRING_END400)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return atom;
    }
    // $ANTLR end "stringExpression"



    // $ANTLR start "typeArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2492:1: typeArguments returns [TypeArgumentList typeArgumentList] : SMALLER_OP ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )? LARGER_OP ;
    public TypeArgumentList typeArguments() throws RecognitionException {
        TypeArgumentList typeArgumentList = null;


        Token c=null;
        Token SMALLER_OP401=null;
        Token LARGER_OP402=null;
        TypeVariance v1 =null;

        StaticType ta1 =null;

        StaticType ta0 =null;

        TypeVariance v2 =null;

        StaticType ta2 =null;

        StaticType ta3 =null;


         TypeVariance v=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2494:5: ( SMALLER_OP ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )? LARGER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2494:7: SMALLER_OP ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )? LARGER_OP
            {
            SMALLER_OP401=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArguments16993); if (state.failed) return typeArgumentList;

            if ( state.backtracking==0 ) { typeArgumentList = new TypeArgumentList(SMALLER_OP401); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2496:7: ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==IN_OP||(LA227_0 >= LBRACE && LA227_0 <= LBRACKET)||LA227_0==OUT||LA227_0==SMALLER_OP||LA227_0==UIDENTIFIER) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2497:9: (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )*
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2497:9: (v1= variance (ta1= type )? |ta0= type )
                    int alt222=2;
                    int LA222_0 = input.LA(1);

                    if ( (LA222_0==IN_OP||LA222_0==OUT) ) {
                        alt222=1;
                    }
                    else if ( ((LA222_0 >= LBRACE && LA222_0 <= LBRACKET)||LA222_0==SMALLER_OP||LA222_0==UIDENTIFIER) ) {
                        alt222=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 222, 0, input);

                        throw nvae;

                    }
                    switch (alt222) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2498:11: v1= variance (ta1= type )?
                            {
                            pushFollow(FOLLOW_variance_in_typeArguments17033);
                            v1=variance();

                            state._fsp--;
                            if (state.failed) return typeArgumentList;

                            if ( state.backtracking==0 ) { v = v1; }

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2500:11: (ta1= type )?
                            int alt221=2;
                            int LA221_0 = input.LA(1);

                            if ( ((LA221_0 >= LBRACE && LA221_0 <= LBRACKET)||LA221_0==SMALLER_OP||LA221_0==UIDENTIFIER) ) {
                                alt221=1;
                            }
                            switch (alt221) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2501:13: ta1= type
                                    {
                                    pushFollow(FOLLOW_type_in_typeArguments17073);
                                    ta1=type();

                                    state._fsp--;
                                    if (state.failed) return typeArgumentList;

                                    if ( state.backtracking==0 ) { if (ta1!=null)
                                                      typeArgumentList.addType(ta1);
                                                  if (v!=null && ta1!=null) 
                                                      ta1.setTypeVariance(v); }

                                    }
                                    break;

                            }


                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2508:11: ta0= type
                            {
                            pushFollow(FOLLOW_type_in_typeArguments17124);
                            ta0=type();

                            state._fsp--;
                            if (state.failed) return typeArgumentList;

                            if ( state.backtracking==0 ) { if (ta0!=null)
                                            typeArgumentList.addType(ta0); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2512:9: (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )*
                    loop226:
                    do {
                        int alt226=2;
                        int LA226_0 = input.LA(1);

                        if ( (LA226_0==COMMA) ) {
                            alt226=1;
                        }


                        switch (alt226) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2513:11: c= COMMA (v2= variance (ta2= type |) | (ta3= type |) )
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_typeArguments17170); if (state.failed) return typeArgumentList;

                    	    if ( state.backtracking==0 ) { typeArgumentList.setEndToken(c); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2515:11: (v2= variance (ta2= type |) | (ta3= type |) )
                    	    int alt225=2;
                    	    int LA225_0 = input.LA(1);

                    	    if ( (LA225_0==IN_OP||LA225_0==OUT) ) {
                    	        alt225=1;
                    	    }
                    	    else if ( (LA225_0==COMMA||LA225_0==LARGER_OP||(LA225_0 >= LBRACE && LA225_0 <= LBRACKET)||LA225_0==SMALLER_OP||LA225_0==UIDENTIFIER) ) {
                    	        alt225=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 225, 0, input);

                    	        throw nvae;

                    	    }
                    	    switch (alt225) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2516:13: v2= variance (ta2= type |)
                    	            {
                    	            pushFollow(FOLLOW_variance_in_typeArguments17210);
                    	            v2=variance();

                    	            state._fsp--;
                    	            if (state.failed) return typeArgumentList;

                    	            if ( state.backtracking==0 ) { v = v2; }

                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2518:13: (ta2= type |)
                    	            int alt223=2;
                    	            int LA223_0 = input.LA(1);

                    	            if ( ((LA223_0 >= LBRACE && LA223_0 <= LBRACKET)||LA223_0==SMALLER_OP||LA223_0==UIDENTIFIER) ) {
                    	                alt223=1;
                    	            }
                    	            else if ( (LA223_0==COMMA||LA223_0==LARGER_OP) ) {
                    	                alt223=2;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 223, 0, input);

                    	                throw nvae;

                    	            }
                    	            switch (alt223) {
                    	                case 1 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2519:15: ta2= type
                    	                    {
                    	                    pushFollow(FOLLOW_type_in_typeArguments17256);
                    	                    ta2=type();

                    	                    state._fsp--;
                    	                    if (state.failed) return typeArgumentList;

                    	                    if ( state.backtracking==0 ) { if (ta2!=null) {
                    	                                        typeArgumentList.addType(ta2);
                    	                                        if (v!=null && ta2!=null) 
                    	                                            ta2.setTypeVariance(v);
                    	                                        typeArgumentList.setEndToken(null); } }

                    	                    }
                    	                    break;
                    	                case 2 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2525:15: 
                    	                    {
                    	                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                                          new MismatchedTokenException(UIDENTIFIER, input)); }

                    	                    }
                    	                    break;

                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2529:13: (ta3= type |)
                    	            {
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2529:13: (ta3= type |)
                    	            int alt224=2;
                    	            int LA224_0 = input.LA(1);

                    	            if ( ((LA224_0 >= LBRACE && LA224_0 <= LBRACKET)||LA224_0==SMALLER_OP||LA224_0==UIDENTIFIER) ) {
                    	                alt224=1;
                    	            }
                    	            else if ( (LA224_0==COMMA||LA224_0==LARGER_OP) ) {
                    	                alt224=2;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 224, 0, input);

                    	                throw nvae;

                    	            }
                    	            switch (alt224) {
                    	                case 1 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2530:15: ta3= type
                    	                    {
                    	                    pushFollow(FOLLOW_type_in_typeArguments17347);
                    	                    ta3=type();

                    	                    state._fsp--;
                    	                    if (state.failed) return typeArgumentList;

                    	                    if ( state.backtracking==0 ) { if (ta3!=null) {
                    	                                        typeArgumentList.addType(ta3);
                    	                                        typeArgumentList.setEndToken(null); } }

                    	                    }
                    	                    break;
                    	                case 2 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2534:15: 
                    	                    {
                    	                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                                      new MismatchedTokenException(UIDENTIFIER, input)); }

                    	                    }
                    	                    break;

                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop226;
                        }
                    } while (true);


                    }
                    break;

            }


            LARGER_OP402=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeArguments17433); if (state.failed) return typeArgumentList;

            if ( state.backtracking==0 ) { typeArgumentList.setEndToken(LARGER_OP402); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeArgumentList;
    }
    // $ANTLR end "typeArguments"



    // $ANTLR start "variadicType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2544:1: variadicType returns [Type type] : ( ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )? |t= type );
    public Type variadicType() throws RecognitionException {
        Type type = null;


        Token PRODUCT_OP403=null;
        Token SUM_OP404=null;
        StaticType at =null;

        StaticType t =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2545:5: ( ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )? |t= type )
            int alt229=2;
            switch ( input.LA(1) ) {
            case UIDENTIFIER:
                {
                int LA229_1 = input.LA(2);

                if ( (synpred18_Ceylon()) ) {
                    alt229=1;
                }
                else if ( (true) ) {
                    alt229=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 229, 1, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA229_2 = input.LA(2);

                if ( (synpred18_Ceylon()) ) {
                    alt229=1;
                }
                else if ( (true) ) {
                    alt229=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 229, 2, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA229_3 = input.LA(2);

                if ( (synpred18_Ceylon()) ) {
                    alt229=1;
                }
                else if ( (true) ) {
                    alt229=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 229, 3, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA229_4 = input.LA(2);

                if ( (synpred18_Ceylon()) ) {
                    alt229=1;
                }
                else if ( (true) ) {
                    alt229=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 229, 4, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 229, 0, input);

                throw nvae;

            }

            switch (alt229) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2545:7: ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )?
                    {
                    pushFollow(FOLLOW_unionType_in_variadicType17481);
                    at=unionType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = at; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2548:7: ( PRODUCT_OP | SUM_OP )?
                    int alt228=3;
                    int LA228_0 = input.LA(1);

                    if ( (LA228_0==PRODUCT_OP) ) {
                        alt228=1;
                    }
                    else if ( (LA228_0==SUM_OP) ) {
                        alt228=2;
                    }
                    switch (alt228) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2549:9: PRODUCT_OP
                            {
                            PRODUCT_OP403=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_variadicType17507); if (state.failed) return type;

                            if ( state.backtracking==0 ) { SequencedType st = new SequencedType(null);
                                      st.setType(at); 
                                      st.setEndToken(PRODUCT_OP403);
                                      type = st; }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2555:9: SUM_OP
                            {
                            SUM_OP404=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_variadicType17535); if (state.failed) return type;

                            if ( state.backtracking==0 ) { SequencedType st = new SequencedType(null);
                                      st.setType(at); 
                                      st.setEndToken(SUM_OP404);
                                      st.setAtLeastOne(true);
                                      type = st; }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2562:7: t= type
                    {
                    pushFollow(FOLLOW_type_in_variadicType17564);
                    t=type();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = t; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "variadicType"



    // $ANTLR start "defaultedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2566:1: defaultedType returns [Type type] : ( ( type ( SPECIFY ) )=>t= type ( SPECIFY )? | variadicType );
    public Type defaultedType() throws RecognitionException {
        Type type = null;


        Token SPECIFY405=null;
        StaticType t =null;

        Type variadicType406 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2567:5: ( ( type ( SPECIFY ) )=>t= type ( SPECIFY )? | variadicType )
            int alt231=2;
            switch ( input.LA(1) ) {
            case UIDENTIFIER:
                {
                int LA231_1 = input.LA(2);

                if ( (synpred19_Ceylon()) ) {
                    alt231=1;
                }
                else if ( (true) ) {
                    alt231=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 231, 1, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA231_2 = input.LA(2);

                if ( (synpred19_Ceylon()) ) {
                    alt231=1;
                }
                else if ( (true) ) {
                    alt231=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 231, 2, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA231_3 = input.LA(2);

                if ( (synpred19_Ceylon()) ) {
                    alt231=1;
                }
                else if ( (true) ) {
                    alt231=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 231, 3, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA231_4 = input.LA(2);

                if ( (synpred19_Ceylon()) ) {
                    alt231=1;
                }
                else if ( (true) ) {
                    alt231=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 231, 4, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 231, 0, input);

                throw nvae;

            }

            switch (alt231) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2567:7: ( type ( SPECIFY ) )=>t= type ( SPECIFY )?
                    {
                    pushFollow(FOLLOW_type_in_defaultedType17610);
                    t=type();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = t; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2570:7: ( SPECIFY )?
                    int alt230=2;
                    int LA230_0 = input.LA(1);

                    if ( (LA230_0==SPECIFY) ) {
                        alt230=1;
                    }
                    switch (alt230) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2571:9: SPECIFY
                            {
                            SPECIFY405=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_defaultedType17636); if (state.failed) return type;

                            if ( state.backtracking==0 ) { DefaultedType st = new DefaultedType(null);
                                      st.setType(t); 
                                      st.setEndToken(SPECIFY405);
                                      type = st; }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2577:7: variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_defaultedType17663);
                    variadicType406=variadicType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =variadicType406; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "defaultedType"



    // $ANTLR start "tupleType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2581:1: tupleType returns [TupleType type] : LBRACKET (t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET ;
    public TupleType tupleType() throws RecognitionException {
        TupleType type = null;


        Token c=null;
        Token LBRACKET407=null;
        Token RBRACKET408=null;
        Type t1 =null;

        Type t2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2582:5: ( LBRACKET (t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2582:7: LBRACKET (t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET
            {
            LBRACKET407=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_tupleType17692); if (state.failed) return type;

            if ( state.backtracking==0 ) { type = new TupleType(LBRACKET407); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2584:7: (t1= defaultedType (c= COMMA t2= defaultedType )* )?
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( ((LA233_0 >= LBRACE && LA233_0 <= LBRACKET)||LA233_0==SMALLER_OP||LA233_0==UIDENTIFIER) ) {
                alt233=1;
            }
            switch (alt233) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2585:9: t1= defaultedType (c= COMMA t2= defaultedType )*
                    {
                    pushFollow(FOLLOW_defaultedType_in_tupleType17720);
                    t1=defaultedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.addElementType(t1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2587:9: (c= COMMA t2= defaultedType )*
                    loop232:
                    do {
                        int alt232=2;
                        int LA232_0 = input.LA(1);

                        if ( (LA232_0==COMMA) ) {
                            alt232=1;
                        }


                        switch (alt232) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2588:11: c= COMMA t2= defaultedType
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_tupleType17754); if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { type.setEndToken(c); }

                    	    pushFollow(FOLLOW_defaultedType_in_tupleType17780);
                    	    t2=defaultedType();

                    	    state._fsp--;
                    	    if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { type.addElementType(t2);
                    	                type.setEndToken(null); }

                    	    }
                    	    break;

                    	default :
                    	    break loop232;
                        }
                    } while (true);


                    }
                    break;

            }


            RBRACKET408=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_tupleType17820); if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setEndToken(RBRACKET408); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "tupleType"



    // $ANTLR start "groupedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2599:1: groupedType returns [GroupedType type] : SMALLER_OP t= type LARGER_OP ;
    public GroupedType groupedType() throws RecognitionException {
        GroupedType type = null;


        Token SMALLER_OP409=null;
        Token LARGER_OP410=null;
        StaticType t =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2600:5: ( SMALLER_OP t= type LARGER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2600:7: SMALLER_OP t= type LARGER_OP
            {
            SMALLER_OP409=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_groupedType17849); if (state.failed) return type;

            if ( state.backtracking==0 ) { type = new GroupedType(SMALLER_OP409); }

            pushFollow(FOLLOW_type_in_groupedType17867);
            t=type();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setType(t); }

            LARGER_OP410=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_groupedType17883); if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setEndToken(LARGER_OP410); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "groupedType"



    // $ANTLR start "iterableType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2608:1: iterableType returns [IterableType type] : LBRACE (t= variadicType )? RBRACE ;
    public IterableType iterableType() throws RecognitionException {
        IterableType type = null;


        Token LBRACE411=null;
        Token RBRACE412=null;
        Type t =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2609:4: ( LBRACE (t= variadicType )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2609:6: LBRACE (t= variadicType )? RBRACE
            {
            LBRACE411=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_iterableType17911); if (state.failed) return type;

            if ( state.backtracking==0 ) { type = new IterableType(LBRACE411); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2611:6: (t= variadicType )?
            int alt234=2;
            int LA234_0 = input.LA(1);

            if ( ((LA234_0 >= LBRACE && LA234_0 <= LBRACKET)||LA234_0==SMALLER_OP||LA234_0==UIDENTIFIER) ) {
                alt234=1;
            }
            switch (alt234) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2612:8: t= variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_iterableType17936);
                    t=variadicType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.setElementType(t); }

                    }
                    break;

            }


            RBRACE412=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_iterableType17960); if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setEndToken(RBRACE412); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "iterableType"



    // $ANTLR start "type"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2619:1: type returns [StaticType type] : t1= unionType ( ENTRY_OP (t2= unionType ) )? ;
    public StaticType type() throws RecognitionException {
        StaticType type = null;


        Token ENTRY_OP413=null;
        StaticType t1 =null;

        StaticType t2 =null;


         EntryType bt=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2621:5: (t1= unionType ( ENTRY_OP (t2= unionType ) )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2621:7: t1= unionType ( ENTRY_OP (t2= unionType ) )?
            {
            pushFollow(FOLLOW_unionType_in_type17998);
            t1=unionType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type =t1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2623:7: ( ENTRY_OP (t2= unionType ) )?
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==ENTRY_OP) ) {
                alt235=1;
            }
            switch (alt235) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2624:9: ENTRY_OP (t2= unionType )
                    {
                    ENTRY_OP413=(Token)match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_type18024); if (state.failed) return type;

                    if ( state.backtracking==0 ) { bt=new EntryType(null);
                              bt.setKeyType(type);
                              bt.setEndToken(ENTRY_OP413); 
                              type =bt; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2629:9: (t2= unionType )
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2630:11: t2= unionType
                    {
                    pushFollow(FOLLOW_unionType_in_type18058);
                    t2=unionType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { bt.setValueType(t2);
                                bt.setEndToken(null); }

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "type"



    // $ANTLR start "unionType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2639:1: unionType returns [StaticType type] : it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )? ;
    public StaticType unionType() throws RecognitionException {
        StaticType type = null;


        Token u=null;
        StaticType it1 =null;

        StaticType it2 =null;


         UnionType ut=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2641:5: (it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2641:7: it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )?
            {
            pushFollow(FOLLOW_intersectionType_in_unionType18123);
            it1=intersectionType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type = it1;
                    ut = new UnionType(null);
                    ut.addStaticType(type); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2645:7: ( (u= UNION_OP (it2= intersectionType ) )+ )?
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==UNION_OP) ) {
                alt237=1;
            }
            switch (alt237) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2646:9: (u= UNION_OP (it2= intersectionType ) )+
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2646:9: (u= UNION_OP (it2= intersectionType ) )+
                    int cnt236=0;
                    loop236:
                    do {
                        int alt236=2;
                        int LA236_0 = input.LA(1);

                        if ( (LA236_0==UNION_OP) ) {
                            alt236=1;
                        }


                        switch (alt236) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2647:11: u= UNION_OP (it2= intersectionType )
                    	    {
                    	    u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_unionType18164); if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { ut.setEndToken(u); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2649:11: (it2= intersectionType )
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2650:13: it2= intersectionType
                    	    {
                    	    pushFollow(FOLLOW_intersectionType_in_unionType18204);
                    	    it2=intersectionType();

                    	    state._fsp--;
                    	    if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { if (it2!=null) {
                    	                      ut.addStaticType(it2);
                    	                      ut.setEndToken(null); 
                    	                  } }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt236 >= 1 ) break loop236;
                    	    if (state.backtracking>0) {state.failed=true; return type;}
                                EarlyExitException eee =
                                    new EarlyExitException(236, input);
                                throw eee;
                        }
                        cnt236++;
                    } while (true);


                    if ( state.backtracking==0 ) { type = ut; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "unionType"



    // $ANTLR start "intersectionType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2663:1: intersectionType returns [StaticType type] : at1= abbreviatedType ( (i= INTERSECTION_OP (at2= abbreviatedType ) )+ )? ;
    public StaticType intersectionType() throws RecognitionException {
        StaticType type = null;


        Token i=null;
        StaticType at1 =null;

        StaticType at2 =null;


         IntersectionType it=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2665:5: (at1= abbreviatedType ( (i= INTERSECTION_OP (at2= abbreviatedType ) )+ )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2665:7: at1= abbreviatedType ( (i= INTERSECTION_OP (at2= abbreviatedType ) )+ )?
            {
            pushFollow(FOLLOW_abbreviatedType_in_intersectionType18294);
            at1=abbreviatedType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type = at1;
                    it = new IntersectionType(null);
                    it.addStaticType(type); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2669:7: ( (i= INTERSECTION_OP (at2= abbreviatedType ) )+ )?
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==INTERSECTION_OP) ) {
                alt239=1;
            }
            switch (alt239) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2670:9: (i= INTERSECTION_OP (at2= abbreviatedType ) )+
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2670:9: (i= INTERSECTION_OP (at2= abbreviatedType ) )+
                    int cnt238=0;
                    loop238:
                    do {
                        int alt238=2;
                        int LA238_0 = input.LA(1);

                        if ( (LA238_0==INTERSECTION_OP) ) {
                            alt238=1;
                        }


                        switch (alt238) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2671:11: i= INTERSECTION_OP (at2= abbreviatedType )
                    	    {
                    	    i=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_intersectionType18335); if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { it.setEndToken(i); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2673:11: (at2= abbreviatedType )
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2674:13: at2= abbreviatedType
                    	    {
                    	    pushFollow(FOLLOW_abbreviatedType_in_intersectionType18375);
                    	    at2=abbreviatedType();

                    	    state._fsp--;
                    	    if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { if (at2!=null) {
                    	                      it.addStaticType(at2);
                    	                      it.setEndToken(null); 
                    	                  } }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt238 >= 1 ) break loop238;
                    	    if (state.backtracking>0) {state.failed=true; return type;}
                                EarlyExitException eee =
                                    new EarlyExitException(238, input);
                                throw eee;
                        }
                        cnt238++;
                    } while (true);


                    if ( state.backtracking==0 ) { type = it; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "intersectionType"



    // $ANTLR start "qualifiedOrTupleType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2687:1: qualifiedOrTupleType returns [StaticType type] : ( qualifiedType | tupleType | iterableType );
    public StaticType qualifiedOrTupleType() throws RecognitionException {
        StaticType type = null;


        StaticType qualifiedType414 =null;

        TupleType tupleType415 =null;

        IterableType iterableType416 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2688:5: ( qualifiedType | tupleType | iterableType )
            int alt240=3;
            switch ( input.LA(1) ) {
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt240=1;
                }
                break;
            case LBRACKET:
                {
                alt240=2;
                }
                break;
            case LBRACE:
                {
                alt240=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 240, 0, input);

                throw nvae;

            }

            switch (alt240) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2688:7: qualifiedType
                    {
                    pushFollow(FOLLOW_qualifiedType_in_qualifiedOrTupleType18454);
                    qualifiedType414=qualifiedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =qualifiedType414; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2690:7: tupleType
                    {
                    pushFollow(FOLLOW_tupleType_in_qualifiedOrTupleType18471);
                    tupleType415=tupleType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =tupleType415; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2692:7: iterableType
                    {
                    pushFollow(FOLLOW_iterableType_in_qualifiedOrTupleType18488);
                    iterableType416=iterableType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =iterableType416; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "qualifiedOrTupleType"



    // $ANTLR start "abbreviatedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2702:1: abbreviatedType returns [StaticType type] : qualifiedOrTupleType ( ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN ) )* ;
    public StaticType abbreviatedType() throws RecognitionException {
        StaticType type = null;


        Token OPTIONAL418=null;
        Token LBRACKET419=null;
        Token NATURAL_LITERAL420=null;
        Token RBRACKET421=null;
        Token LPAREN422=null;
        Token COMMA423=null;
        Token RPAREN424=null;
        Type t1 =null;

        Type t2 =null;

        StaticType qualifiedOrTupleType417 =null;


         FunctionType bt=null; SequenceType st=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2704:5: ( qualifiedOrTupleType ( ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN ) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2704:7: qualifiedOrTupleType ( ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN ) )*
            {
            pushFollow(FOLLOW_qualifiedOrTupleType_in_abbreviatedType18529);
            qualifiedOrTupleType417=qualifiedOrTupleType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type =qualifiedOrTupleType417; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2706:7: ( ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN ) )*
            loop245:
            do {
                int alt245=2;
                int LA245_0 = input.LA(1);

                if ( (LA245_0==LBRACKET||LA245_0==LPAREN||LA245_0==OPTIONAL) ) {
                    alt245=1;
                }


                switch (alt245) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2711:7: ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )
            	    {
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2711:7: ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )
            	    int alt244=3;
            	    switch ( input.LA(1) ) {
            	    case OPTIONAL:
            	        {
            	        alt244=1;
            	        }
            	        break;
            	    case LBRACKET:
            	        {
            	        alt244=2;
            	        }
            	        break;
            	    case LPAREN:
            	        {
            	        alt244=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return type;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 244, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt244) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2712:9: OPTIONAL
            	            {
            	            OPTIONAL418=(Token)match(input,OPTIONAL,FOLLOW_OPTIONAL_in_abbreviatedType18591); if (state.failed) return type;

            	            if ( state.backtracking==0 ) { OptionalType ot = new OptionalType(null);
            	                      ot.setDefiniteType(type);
            	                      ot.setEndToken(OPTIONAL418);
            	                      type =ot; }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2717:9: LBRACKET ( NATURAL_LITERAL )? RBRACKET
            	            {
            	            LBRACKET419=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_abbreviatedType18612); if (state.failed) return type;

            	            if ( state.backtracking==0 ) { st = new SequenceType(null);
            	                      st.setElementType(type);
            	                      st.setEndToken(LBRACKET419); }

            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2721:9: ( NATURAL_LITERAL )?
            	            int alt241=2;
            	            int LA241_0 = input.LA(1);

            	            if ( (LA241_0==NATURAL_LITERAL) ) {
            	                alt241=1;
            	            }
            	            switch (alt241) {
            	                case 1 :
            	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2722:11: NATURAL_LITERAL
            	                    {
            	                    NATURAL_LITERAL420=(Token)match(input,NATURAL_LITERAL,FOLLOW_NATURAL_LITERAL_in_abbreviatedType18644); if (state.failed) return type;

            	                    if ( state.backtracking==0 ) { st.setLength(new NaturalLiteral(NATURAL_LITERAL420)); 
            	                                st.setEndToken(NATURAL_LITERAL420); }

            	                    }
            	                    break;

            	            }


            	            RBRACKET421=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_abbreviatedType18678); if (state.failed) return type;

            	            if ( state.backtracking==0 ) { st.setEndToken(RBRACKET421);
            	                      type =st; }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2729:9: LPAREN (t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN
            	            {
            	            LPAREN422=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_abbreviatedType18699); if (state.failed) return type;

            	            if ( state.backtracking==0 ) { bt = new FunctionType(null);
            	                      bt.setEndToken(LPAREN422);
            	                      bt.setReturnType(type);
            	                      type =bt; }

            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2734:11: (t1= defaultedType ( COMMA t2= defaultedType )* )?
            	            int alt243=2;
            	            int LA243_0 = input.LA(1);

            	            if ( ((LA243_0 >= LBRACE && LA243_0 <= LBRACKET)||LA243_0==SMALLER_OP||LA243_0==UIDENTIFIER) ) {
            	                alt243=1;
            	            }
            	            switch (alt243) {
            	                case 1 :
            	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2735:13: t1= defaultedType ( COMMA t2= defaultedType )*
            	                    {
            	                    pushFollow(FOLLOW_defaultedType_in_abbreviatedType18737);
            	                    t1=defaultedType();

            	                    state._fsp--;
            	                    if (state.failed) return type;

            	                    if ( state.backtracking==0 ) { if (t1!=null)
            	                                      bt.addArgumentType(t1); }

            	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2738:13: ( COMMA t2= defaultedType )*
            	                    loop242:
            	                    do {
            	                        int alt242=2;
            	                        int LA242_0 = input.LA(1);

            	                        if ( (LA242_0==COMMA) ) {
            	                            alt242=1;
            	                        }


            	                        switch (alt242) {
            	                    	case 1 :
            	                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2739:15: COMMA t2= defaultedType
            	                    	    {
            	                    	    COMMA423=(Token)match(input,COMMA,FOLLOW_COMMA_in_abbreviatedType18781); if (state.failed) return type;

            	                    	    if ( state.backtracking==0 ) { bt.setEndToken(COMMA423); }

            	                    	    pushFollow(FOLLOW_defaultedType_in_abbreviatedType18815);
            	                    	    t2=defaultedType();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return type;

            	                    	    if ( state.backtracking==0 ) { if (t2!=null)
            	                    	                        bt.addArgumentType(t2); }

            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop242;
            	                        }
            	                    } while (true);


            	                    }
            	                    break;

            	            }


            	            RPAREN424=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_abbreviatedType18869); if (state.failed) return type;

            	            if ( state.backtracking==0 ) { bt.setEndToken(RPAREN424); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop245;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "abbreviatedType"



    // $ANTLR start "baseType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2752:1: baseType returns [StaticType type] : (ot= typeNameWithArguments | groupedType );
    public StaticType baseType() throws RecognitionException {
        StaticType type = null;


        CeylonParser.typeNameWithArguments_return ot =null;

        GroupedType groupedType425 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2753:5: (ot= typeNameWithArguments | groupedType )
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==UIDENTIFIER) ) {
                alt246=1;
            }
            else if ( (LA246_0==SMALLER_OP) ) {
                alt246=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 246, 0, input);

                throw nvae;

            }
            switch (alt246) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2754:7: ot= typeNameWithArguments
                    {
                    pushFollow(FOLLOW_typeNameWithArguments_in_baseType18926);
                    ot=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { BaseType bt = new BaseType(null);
                            bt.setIdentifier((ot!=null?ot.identifier:null));
                            if ((ot!=null?ot.typeArgumentList:null)!=null)
                                bt.setTypeArgumentList((ot!=null?ot.typeArgumentList:null));
                            type =bt; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2761:7: groupedType
                    {
                    pushFollow(FOLLOW_groupedType_in_baseType18948);
                    groupedType425=groupedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =groupedType425; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "baseType"



    // $ANTLR start "qualifiedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2765:1: qualifiedType returns [StaticType type] : baseType ( MEMBER_OP it= typeNameWithArguments )* ;
    public StaticType qualifiedType() throws RecognitionException {
        StaticType type = null;


        Token MEMBER_OP427=null;
        CeylonParser.typeNameWithArguments_return it =null;

        StaticType baseType426 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2766:5: ( baseType ( MEMBER_OP it= typeNameWithArguments )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2766:7: baseType ( MEMBER_OP it= typeNameWithArguments )*
            {
            pushFollow(FOLLOW_baseType_in_qualifiedType18977);
            baseType426=baseType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type =baseType426; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2768:7: ( MEMBER_OP it= typeNameWithArguments )*
            loop247:
            do {
                int alt247=2;
                int LA247_0 = input.LA(1);

                if ( (LA247_0==MEMBER_OP) ) {
                    int LA247_2 = input.LA(2);

                    if ( (LA247_2==UIDENTIFIER) ) {
                        alt247=1;
                    }


                }


                switch (alt247) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2769:9: MEMBER_OP it= typeNameWithArguments
            	    {
            	    MEMBER_OP427=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_qualifiedType19003); if (state.failed) return type;

            	    pushFollow(FOLLOW_typeNameWithArguments_in_qualifiedType19016);
            	    it=typeNameWithArguments();

            	    state._fsp--;
            	    if (state.failed) return type;

            	    if ( state.backtracking==0 ) { QualifiedType qt = new QualifiedType(MEMBER_OP427);
            	              qt.setIdentifier((it!=null?it.identifier:null));
            	              if ((it!=null?it.typeArgumentList:null)!=null)
            	                  qt.setTypeArgumentList((it!=null?it.typeArgumentList:null));
            	              qt.setOuterType(type);
            	              type =qt; }

            	    }
            	    break;

            	default :
            	    break loop247;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "qualifiedType"


    public static class typeNameWithArguments_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "typeNameWithArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2780:1: typeNameWithArguments returns [Identifier identifier, TypeArgumentList typeArgumentList] : typeName ( typeArguments )? ;
    public CeylonParser.typeNameWithArguments_return typeNameWithArguments() throws RecognitionException {
        CeylonParser.typeNameWithArguments_return retval = new CeylonParser.typeNameWithArguments_return();
        retval.start = input.LT(1);


        Identifier typeName428 =null;

        TypeArgumentList typeArguments429 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2781:5: ( typeName ( typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2781:7: typeName ( typeArguments )?
            {
            pushFollow(FOLLOW_typeName_in_typeNameWithArguments19056);
            typeName428=typeName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier = typeName428; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2783:7: ( typeArguments )?
            int alt248=2;
            int LA248_0 = input.LA(1);

            if ( (LA248_0==SMALLER_OP) ) {
                int LA248_1 = input.LA(2);

                if ( (LA248_1==IN_OP||LA248_1==LARGER_OP||(LA248_1 >= LBRACE && LA248_1 <= LBRACKET)||LA248_1==OUT||LA248_1==SMALLER_OP||LA248_1==UIDENTIFIER) ) {
                    alt248=1;
                }
            }
            switch (alt248) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2784:9: typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_typeNameWithArguments19083);
                    typeArguments429=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments429; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "typeNameWithArguments"



    // $ANTLR start "annotations"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2789:1: annotations returns [AnnotationList annotationList] : ( stringLiteral )? ( annotation )* ;
    public AnnotationList annotations() throws RecognitionException {
        AnnotationList annotationList = null;


        StringLiteral stringLiteral430 =null;

        Annotation annotation431 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2790:5: ( ( stringLiteral )? ( annotation )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2790:7: ( stringLiteral )? ( annotation )*
            {
            if ( state.backtracking==0 ) { annotationList = new AnnotationList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2791:7: ( stringLiteral )?
            int alt249=2;
            int LA249_0 = input.LA(1);

            if ( (LA249_0==STRING_LITERAL||LA249_0==VERBATIM_STRING) ) {
                alt249=1;
            }
            switch (alt249) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2792:11: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotations19147);
                    stringLiteral430=stringLiteral();

                    state._fsp--;
                    if (state.failed) return annotationList;

                    if ( state.backtracking==0 ) { if (stringLiteral430.getToken().getType()==VERBATIM_STRING)
                                    stringLiteral430.getToken().setType(AVERBATIM_STRING);
                                else
                                    stringLiteral430.getToken().setType(ASTRING_LITERAL);
                                AnonymousAnnotation aa = new AnonymousAnnotation(null);
                                aa.setStringLiteral(stringLiteral430);
                                annotationList.setAnonymousAnnotation(aa); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2801:7: ( annotation )*
            loop250:
            do {
                int alt250=2;
                int LA250_0 = input.LA(1);

                if ( (LA250_0==LIDENTIFIER) ) {
                    alt250=1;
                }


                switch (alt250) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2802:9: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotations19186);
            	    annotation431=annotation();

            	    state._fsp--;
            	    if (state.failed) return annotationList;

            	    if ( state.backtracking==0 ) { annotationList.addAnnotation(annotation431); 
            	              new com.redhat.ceylon.compiler.typechecker.tree.Visitor() { 
            	                  public void visit(StringLiteral that) {
            	                      if (that.getToken().getType()==VERBATIM_STRING)
            	                          that.getToken().setType(AVERBATIM_STRING);
            	                      else
            	                          that.getToken().setType(ASTRING_LITERAL);
            	                  }
            	              }.visit(annotation431); }

            	    }
            	    break;

            	default :
            	    break loop250;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotationList;
    }
    // $ANTLR end "annotations"



    // $ANTLR start "annotation"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2815:1: annotation returns [Annotation annotation] : annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |) ;
    public Annotation annotation() throws RecognitionException {
        Annotation annotation = null;


        Identifier annotationName432 =null;

        PositionalArgumentList positionalArguments433 =null;

        NamedArgumentList namedArguments434 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2816:5: ( annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2816:7: annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |)
            {
            pushFollow(FOLLOW_annotationName_in_annotation19227);
            annotationName432=annotationName();

            state._fsp--;
            if (state.failed) return annotation;

            if ( state.backtracking==0 ) { annotation = new Annotation(null);
                    BaseMemberExpression bme = new BaseMemberExpression(null);
                    bme.setIdentifier(annotationName432);
                    bme.setTypeArguments( new InferredTypeArguments(null) );
                    annotation.setPrimary(bme); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2822:5: ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |)
            int alt251=3;
            switch ( input.LA(1) ) {
            case LPAREN:
                {
                alt251=1;
                }
                break;
            case LBRACE:
                {
                int LA251_2 = input.LA(2);

                if ( (synpred20_Ceylon()) ) {
                    alt251=2;
                }
                else if ( (true) ) {
                    alt251=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return annotation;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 251, 2, input);

                    throw nvae;

                }
                }
                break;
            case ALIAS:
            case ASSERT:
            case ASSIGN:
            case CLASS_DEFINITION:
            case DYNAMIC:
            case FUNCTION_MODIFIER:
            case IMPORT:
            case INTERFACE_DEFINITION:
            case LBRACKET:
            case LIDENTIFIER:
            case MODULE:
            case OBJECT_DEFINITION:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
            case VALUE_MODIFIER:
            case VOID_MODIFIER:
                {
                alt251=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return annotation;}
                NoViableAltException nvae =
                    new NoViableAltException("", 251, 0, input);

                throw nvae;

            }

            switch (alt251) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2823:7: positionalArguments
                    {
                    pushFollow(FOLLOW_positionalArguments_in_annotation19250);
                    positionalArguments433=positionalArguments();

                    state._fsp--;
                    if (state.failed) return annotation;

                    if ( state.backtracking==0 ) { annotation.setPositionalArgumentList(positionalArguments433); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2825:7: ( namedAnnotationArgumentsStart )=> namedArguments
                    {
                    pushFollow(FOLLOW_namedArguments_in_annotation19279);
                    namedArguments434=namedArguments();

                    state._fsp--;
                    if (state.failed) return annotation;

                    if ( state.backtracking==0 ) { annotation.setNamedArgumentList(namedArguments434); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2828:7: 
                    {
                    if ( state.backtracking==0 ) { annotation.setPositionalArgumentList(new PositionalArgumentList(null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotation;
    }
    // $ANTLR end "annotation"



    // $ANTLR start "prefixOperatorStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2832:1: prefixOperatorStart : ( DIFFERENCE_OP | INCREMENT_OP | DECREMENT_OP | COMPLEMENT_OP );
    public void prefixOperatorStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2833:5: ( DIFFERENCE_OP | INCREMENT_OP | DECREMENT_OP | COMPLEMENT_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:
            {
            if ( input.LA(1)==COMPLEMENT_OP||(input.LA(1) >= DECREMENT_OP && input.LA(1) <= DIFFERENCE_OP)||input.LA(1)==INCREMENT_OP ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "prefixOperatorStart"



    // $ANTLR start "compilerAnnotations"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2839:1: compilerAnnotations returns [List<CompilerAnnotation> annotations] : ( compilerAnnotation )* ;
    public List<CompilerAnnotation> compilerAnnotations() throws RecognitionException {
        List<CompilerAnnotation> annotations = null;


        CompilerAnnotation compilerAnnotation435 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2840:5: ( ( compilerAnnotation )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2840:7: ( compilerAnnotation )*
            {
            if ( state.backtracking==0 ) { annotations = new ArrayList<CompilerAnnotation>(); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2841:5: ( compilerAnnotation )*
            loop252:
            do {
                int alt252=2;
                int LA252_0 = input.LA(1);

                if ( (LA252_0==COMPILER_ANNOTATION) ) {
                    alt252=1;
                }


                switch (alt252) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2842:7: compilerAnnotation
            	    {
            	    pushFollow(FOLLOW_compilerAnnotation_in_compilerAnnotations19383);
            	    compilerAnnotation435=compilerAnnotation();

            	    state._fsp--;
            	    if (state.failed) return annotations;

            	    if ( state.backtracking==0 ) { annotations.add(compilerAnnotation435); }

            	    }
            	    break;

            	default :
            	    break loop252;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotations;
    }
    // $ANTLR end "compilerAnnotations"



    // $ANTLR start "compilerAnnotation"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2847:1: compilerAnnotation returns [CompilerAnnotation annotation] : COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )? ;
    public CompilerAnnotation compilerAnnotation() throws RecognitionException {
        CompilerAnnotation annotation = null;


        Token COMPILER_ANNOTATION436=null;
        Identifier annotationName437 =null;

        StringLiteral stringLiteral438 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2848:5: ( COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2848:7: COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )?
            {
            COMPILER_ANNOTATION436=(Token)match(input,COMPILER_ANNOTATION,FOLLOW_COMPILER_ANNOTATION_in_compilerAnnotation19423); if (state.failed) return annotation;

            if ( state.backtracking==0 ) { annotation =new CompilerAnnotation(COMPILER_ANNOTATION436); }

            pushFollow(FOLLOW_annotationName_in_compilerAnnotation19440);
            annotationName437=annotationName();

            state._fsp--;
            if (state.failed) return annotation;

            if ( state.backtracking==0 ) { annotation.setIdentifier(annotationName437); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2852:7: ( SEGMENT_OP stringLiteral )?
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==SEGMENT_OP) ) {
                alt253=1;
            }
            switch (alt253) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2853:11: SEGMENT_OP stringLiteral
                    {
                    match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_compilerAnnotation19470); if (state.failed) return annotation;

                    pushFollow(FOLLOW_stringLiteral_in_compilerAnnotation19482);
                    stringLiteral438=stringLiteral();

                    state._fsp--;
                    if (state.failed) return annotation;

                    if ( state.backtracking==0 ) { annotation.setStringLiteral(stringLiteral438); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotation;
    }
    // $ANTLR end "compilerAnnotation"



    // $ANTLR start "conditions"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2859:1: conditions returns [ConditionList conditionList] : LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN ;
    public ConditionList conditions() throws RecognitionException {
        ConditionList conditionList = null;


        Token c=null;
        Token LPAREN439=null;
        Token RPAREN440=null;
        Condition c1 =null;

        Condition c2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2860:5: ( LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2860:7: LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN
            {
            LPAREN439=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_conditions19524); if (state.failed) return conditionList;

            if ( state.backtracking==0 ) { conditionList = new ConditionList(LPAREN439); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2862:7: (c1= condition (c= COMMA (c2= condition |) )* )?
            int alt256=2;
            int LA256_0 = input.LA(1);

            if ( (LA256_0==BACKTICK||LA256_0==CHAR_LITERAL||(LA256_0 >= DECREMENT_OP && LA256_0 <= DIFFERENCE_OP)||LA256_0==DYNAMIC||LA256_0==EXISTS||LA256_0==FLOAT_LITERAL||LA256_0==INCREMENT_OP||LA256_0==IS_OP||(LA256_0 >= LBRACE && LA256_0 <= LBRACKET)||LA256_0==LIDENTIFIER||LA256_0==LPAREN||LA256_0==NATURAL_LITERAL||LA256_0==NONEMPTY||LA256_0==NOT_OP||(LA256_0 >= OUTER && LA256_0 <= PACKAGE)||LA256_0==SATISFIES||LA256_0==STRING_LITERAL||LA256_0==STRING_START||(LA256_0 >= SUM_OP && LA256_0 <= SUPER)||LA256_0==THIS||LA256_0==UIDENTIFIER||LA256_0==VERBATIM_STRING) ) {
                alt256=1;
            }
            switch (alt256) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2863:7: c1= condition (c= COMMA (c2= condition |) )*
                    {
                    pushFollow(FOLLOW_condition_in_conditions19550);
                    c1=condition();

                    state._fsp--;
                    if (state.failed) return conditionList;

                    if ( state.backtracking==0 ) { if (c1!=null) 
                                conditionList.addCondition(c1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2866:7: (c= COMMA (c2= condition |) )*
                    loop255:
                    do {
                        int alt255=2;
                        int LA255_0 = input.LA(1);

                        if ( (LA255_0==COMMA) ) {
                            alt255=1;
                        }


                        switch (alt255) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2866:9: c= COMMA (c2= condition |)
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_conditions19570); if (state.failed) return conditionList;

                    	    if ( state.backtracking==0 ) { conditionList.setEndToken(c); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2868:9: (c2= condition |)
                    	    int alt254=2;
                    	    int LA254_0 = input.LA(1);

                    	    if ( (LA254_0==BACKTICK||LA254_0==CHAR_LITERAL||(LA254_0 >= DECREMENT_OP && LA254_0 <= DIFFERENCE_OP)||LA254_0==DYNAMIC||LA254_0==EXISTS||LA254_0==FLOAT_LITERAL||LA254_0==INCREMENT_OP||LA254_0==IS_OP||(LA254_0 >= LBRACE && LA254_0 <= LBRACKET)||LA254_0==LIDENTIFIER||LA254_0==LPAREN||LA254_0==NATURAL_LITERAL||LA254_0==NONEMPTY||LA254_0==NOT_OP||(LA254_0 >= OUTER && LA254_0 <= PACKAGE)||LA254_0==SATISFIES||LA254_0==STRING_LITERAL||LA254_0==STRING_START||(LA254_0 >= SUM_OP && LA254_0 <= SUPER)||LA254_0==THIS||LA254_0==UIDENTIFIER||LA254_0==VERBATIM_STRING) ) {
                    	        alt254=1;
                    	    }
                    	    else if ( (LA254_0==COMMA||LA254_0==RPAREN) ) {
                    	        alt254=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return conditionList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 254, 0, input);

                    	        throw nvae;

                    	    }
                    	    switch (alt254) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2869:11: c2= condition
                    	            {
                    	            pushFollow(FOLLOW_condition_in_conditions19605);
                    	            c2=condition();

                    	            state._fsp--;
                    	            if (state.failed) return conditionList;

                    	            if ( state.backtracking==0 ) { if (c2!=null) 
                    	                            conditionList.addCondition(c2);
                    	                        conditionList.setEndToken(null); }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2873:11: 
                    	            {
                    	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                          new MismatchedTokenException(LIDENTIFIER, input)); }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop255;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN440=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_conditions19667); if (state.failed) return conditionList;

            if ( state.backtracking==0 ) { conditionList.setEndToken(RPAREN440); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return conditionList;
    }
    // $ANTLR end "conditions"



    // $ANTLR start "condition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2882:1: condition returns [Condition condition] : ( existsCondition | nonemptyCondition | isCondition | satisfiesCondition | booleanCondition );
    public Condition condition() throws RecognitionException {
        Condition condition = null;


        ExistsCondition existsCondition441 =null;

        NonemptyCondition nonemptyCondition442 =null;

        IsCondition isCondition443 =null;

        SatisfiesCondition satisfiesCondition444 =null;

        BooleanCondition booleanCondition445 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2883:5: ( existsCondition | nonemptyCondition | isCondition | satisfiesCondition | booleanCondition )
            int alt257=5;
            switch ( input.LA(1) ) {
            case EXISTS:
                {
                alt257=1;
                }
                break;
            case NONEMPTY:
                {
                alt257=2;
                }
                break;
            case NOT_OP:
                {
                int LA257_3 = input.LA(2);

                if ( (LA257_3==IS_OP) ) {
                    alt257=3;
                }
                else if ( (LA257_3==BACKTICK||LA257_3==CHAR_LITERAL||(LA257_3 >= DECREMENT_OP && LA257_3 <= DIFFERENCE_OP)||LA257_3==DYNAMIC||LA257_3==FLOAT_LITERAL||LA257_3==INCREMENT_OP||(LA257_3 >= LBRACE && LA257_3 <= LBRACKET)||LA257_3==LIDENTIFIER||LA257_3==LPAREN||LA257_3==NATURAL_LITERAL||LA257_3==NOT_OP||(LA257_3 >= OUTER && LA257_3 <= PACKAGE)||LA257_3==STRING_LITERAL||LA257_3==STRING_START||(LA257_3 >= SUM_OP && LA257_3 <= SUPER)||LA257_3==THIS||LA257_3==UIDENTIFIER||LA257_3==VERBATIM_STRING) ) {
                    alt257=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 257, 3, input);

                    throw nvae;

                }
                }
                break;
            case IS_OP:
                {
                alt257=3;
                }
                break;
            case SATISFIES:
                {
                alt257=4;
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case DYNAMIC:
            case FLOAT_LITERAL:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case OUTER:
            case PACKAGE:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
                {
                alt257=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 257, 0, input);

                throw nvae;

            }

            switch (alt257) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2883:7: existsCondition
                    {
                    pushFollow(FOLLOW_existsCondition_in_condition19696);
                    existsCondition441=existsCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =existsCondition441; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2885:7: nonemptyCondition
                    {
                    pushFollow(FOLLOW_nonemptyCondition_in_condition19712);
                    nonemptyCondition442=nonemptyCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =nonemptyCondition442; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2887:7: isCondition
                    {
                    pushFollow(FOLLOW_isCondition_in_condition19728);
                    isCondition443=isCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =isCondition443; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2889:7: satisfiesCondition
                    {
                    pushFollow(FOLLOW_satisfiesCondition_in_condition19745);
                    satisfiesCondition444=satisfiesCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =satisfiesCondition444; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2891:7: booleanCondition
                    {
                    pushFollow(FOLLOW_booleanCondition_in_condition19761);
                    booleanCondition445=booleanCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =booleanCondition445; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "condition"



    // $ANTLR start "booleanCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2895:1: booleanCondition returns [BooleanCondition condition] : expression ;
    public BooleanCondition booleanCondition() throws RecognitionException {
        BooleanCondition condition = null;


        Expression expression446 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2896:5: ( expression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2896:7: expression
            {
            if ( state.backtracking==0 ) { condition = new BooleanCondition(null); }

            pushFollow(FOLLOW_expression_in_booleanCondition19802);
            expression446=expression();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setExpression(expression446); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "booleanCondition"



    // $ANTLR start "existsCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2901:1: existsCondition returns [ExistsCondition condition] : EXISTS ( ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable | ( LIDENTIFIER )=> impliedVariable | expression ) ;
    public ExistsCondition existsCondition() throws RecognitionException {
        ExistsCondition condition = null;


        Token EXISTS447=null;
        Variable specifiedVariable448 =null;

        Variable impliedVariable449 =null;

        Expression expression450 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2902:5: ( EXISTS ( ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable | ( LIDENTIFIER )=> impliedVariable | expression ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2902:7: EXISTS ( ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable | ( LIDENTIFIER )=> impliedVariable | expression )
            {
            EXISTS447=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_existsCondition19835); if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition = new ExistsCondition(EXISTS447); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2904:5: ( ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable | ( LIDENTIFIER )=> impliedVariable | expression )
            int alt258=3;
            int LA258_0 = input.LA(1);

            if ( (LA258_0==COMPILER_ANNOTATION) && (synpred21_Ceylon())) {
                alt258=1;
            }
            else if ( (LA258_0==UIDENTIFIER) ) {
                int LA258_2 = input.LA(2);

                if ( (synpred21_Ceylon()) ) {
                    alt258=1;
                }
                else if ( (true) ) {
                    alt258=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 258, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA258_0==SMALLER_OP) && (synpred21_Ceylon())) {
                alt258=1;
            }
            else if ( (LA258_0==LBRACKET) ) {
                int LA258_4 = input.LA(2);

                if ( (synpred21_Ceylon()) ) {
                    alt258=1;
                }
                else if ( (true) ) {
                    alt258=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 258, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA258_0==LBRACE) ) {
                int LA258_5 = input.LA(2);

                if ( (synpred21_Ceylon()) ) {
                    alt258=1;
                }
                else if ( (true) ) {
                    alt258=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 258, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA258_0==VOID_MODIFIER) && (synpred21_Ceylon())) {
                alt258=1;
            }
            else if ( (LA258_0==FUNCTION_MODIFIER) && (synpred21_Ceylon())) {
                alt258=1;
            }
            else if ( (LA258_0==VALUE_MODIFIER) && (synpred21_Ceylon())) {
                alt258=1;
            }
            else if ( (LA258_0==LIDENTIFIER) ) {
                int LA258_9 = input.LA(2);

                if ( (synpred21_Ceylon()) ) {
                    alt258=1;
                }
                else if ( (synpred22_Ceylon()) ) {
                    alt258=2;
                }
                else if ( (true) ) {
                    alt258=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 258, 9, input);

                    throw nvae;

                }
            }
            else if ( (LA258_0==BACKTICK||LA258_0==CHAR_LITERAL||(LA258_0 >= DECREMENT_OP && LA258_0 <= DIFFERENCE_OP)||LA258_0==DYNAMIC||LA258_0==FLOAT_LITERAL||LA258_0==INCREMENT_OP||LA258_0==LPAREN||LA258_0==NATURAL_LITERAL||LA258_0==NOT_OP||(LA258_0 >= OUTER && LA258_0 <= PACKAGE)||LA258_0==STRING_LITERAL||LA258_0==STRING_START||(LA258_0 >= SUM_OP && LA258_0 <= SUPER)||LA258_0==THIS||LA258_0==VERBATIM_STRING) ) {
                alt258=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 258, 0, input);

                throw nvae;

            }
            switch (alt258) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2904:7: ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable
                    {
                    pushFollow(FOLLOW_specifiedVariable_in_existsCondition19872);
                    specifiedVariable448=specifiedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(specifiedVariable448); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2908:9: ( LIDENTIFIER )=> impliedVariable
                    {
                    pushFollow(FOLLOW_impliedVariable_in_existsCondition19907);
                    impliedVariable449=impliedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(impliedVariable449); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2910:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_existsCondition19927);
                    expression450=expression();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setBrokenExpression(expression450); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "existsCondition"



    // $ANTLR start "nonemptyCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2915:1: nonemptyCondition returns [NonemptyCondition condition] : NONEMPTY ( ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable | ( LIDENTIFIER )=> impliedVariable | expression ) ;
    public NonemptyCondition nonemptyCondition() throws RecognitionException {
        NonemptyCondition condition = null;


        Token NONEMPTY451=null;
        Variable specifiedVariable452 =null;

        Variable impliedVariable453 =null;

        Expression expression454 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2916:5: ( NONEMPTY ( ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable | ( LIDENTIFIER )=> impliedVariable | expression ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2916:7: NONEMPTY ( ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable | ( LIDENTIFIER )=> impliedVariable | expression )
            {
            NONEMPTY451=(Token)match(input,NONEMPTY,FOLLOW_NONEMPTY_in_nonemptyCondition19968); if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition = new NonemptyCondition(NONEMPTY451); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2918:5: ( ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable | ( LIDENTIFIER )=> impliedVariable | expression )
            int alt259=3;
            int LA259_0 = input.LA(1);

            if ( (LA259_0==COMPILER_ANNOTATION) && (synpred23_Ceylon())) {
                alt259=1;
            }
            else if ( (LA259_0==UIDENTIFIER) ) {
                int LA259_2 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt259=1;
                }
                else if ( (true) ) {
                    alt259=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 259, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA259_0==SMALLER_OP) && (synpred23_Ceylon())) {
                alt259=1;
            }
            else if ( (LA259_0==LBRACKET) ) {
                int LA259_4 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt259=1;
                }
                else if ( (true) ) {
                    alt259=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 259, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA259_0==LBRACE) ) {
                int LA259_5 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt259=1;
                }
                else if ( (true) ) {
                    alt259=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 259, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA259_0==VOID_MODIFIER) && (synpred23_Ceylon())) {
                alt259=1;
            }
            else if ( (LA259_0==FUNCTION_MODIFIER) && (synpred23_Ceylon())) {
                alt259=1;
            }
            else if ( (LA259_0==VALUE_MODIFIER) && (synpred23_Ceylon())) {
                alt259=1;
            }
            else if ( (LA259_0==LIDENTIFIER) ) {
                int LA259_9 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt259=1;
                }
                else if ( (synpred24_Ceylon()) ) {
                    alt259=2;
                }
                else if ( (true) ) {
                    alt259=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 259, 9, input);

                    throw nvae;

                }
            }
            else if ( (LA259_0==BACKTICK||LA259_0==CHAR_LITERAL||(LA259_0 >= DECREMENT_OP && LA259_0 <= DIFFERENCE_OP)||LA259_0==DYNAMIC||LA259_0==FLOAT_LITERAL||LA259_0==INCREMENT_OP||LA259_0==LPAREN||LA259_0==NATURAL_LITERAL||LA259_0==NOT_OP||(LA259_0 >= OUTER && LA259_0 <= PACKAGE)||LA259_0==STRING_LITERAL||LA259_0==STRING_START||(LA259_0 >= SUM_OP && LA259_0 <= SUPER)||LA259_0==THIS||LA259_0==VERBATIM_STRING) ) {
                alt259=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 259, 0, input);

                throw nvae;

            }
            switch (alt259) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2918:7: ( compilerAnnotations ( declarationStart | specificationStart ) )=> specifiedVariable
                    {
                    pushFollow(FOLLOW_specifiedVariable_in_nonemptyCondition20003);
                    specifiedVariable452=specifiedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(specifiedVariable452); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2922:7: ( LIDENTIFIER )=> impliedVariable
                    {
                    pushFollow(FOLLOW_impliedVariable_in_nonemptyCondition20032);
                    impliedVariable453=impliedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(impliedVariable453); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2924:7: expression
                    {
                    pushFollow(FOLLOW_expression_in_nonemptyCondition20049);
                    expression454=expression();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setBrokenExpression(expression454); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "nonemptyCondition"



    // $ANTLR start "isCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2929:1: isCondition returns [IsCondition condition] : ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable ) ;
    public IsCondition isCondition() throws RecognitionException {
        IsCondition condition = null;


        Token NOT_OP455=null;
        Token IS_OP456=null;
        Variable v =null;

        StaticType type457 =null;

        Variable impliedVariable458 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2930:5: ( ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2930:7: ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2930:7: ( NOT_OP )?
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( (LA260_0==NOT_OP) ) {
                alt260=1;
            }
            switch (alt260) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2931:9: NOT_OP
                    {
                    NOT_OP455=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_isCondition20094); if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition = new IsCondition(NOT_OP455);
                              condition.setNot(true); }

                    }
                    break;

            }


            IS_OP456=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_isCondition20121); if (state.failed) return condition;

            if ( state.backtracking==0 ) { if (condition==null)
                        condition = new IsCondition(IS_OP456); }

            pushFollow(FOLLOW_type_in_isCondition20138);
            type457=type();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setType(type457); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2940:5: ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable )
            int alt261=2;
            int LA261_0 = input.LA(1);

            if ( (LA261_0==LIDENTIFIER) ) {
                int LA261_1 = input.LA(2);

                if ( (LA261_1==SPECIFY) && (synpred25_Ceylon())) {
                    alt261=1;
                }
                else if ( (LA261_1==COMMA||LA261_1==RPAREN) ) {
                    alt261=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 261, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 261, 0, input);

                throw nvae;

            }
            switch (alt261) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2940:7: ( LIDENTIFIER SPECIFY )=>v= isConditionVariable
                    {
                    pushFollow(FOLLOW_isConditionVariable_in_isCondition20170);
                    v=isConditionVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(v); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2944:7: impliedVariable
                    {
                    pushFollow(FOLLOW_impliedVariable_in_isCondition20193);
                    impliedVariable458=impliedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(impliedVariable458); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "isCondition"



    // $ANTLR start "isConditionVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2949:1: isConditionVariable returns [Variable variable] : memberName specifier ;
    public Variable isConditionVariable() throws RecognitionException {
        Variable variable = null;


        Identifier memberName459 =null;

        SpecifierExpression specifier460 =null;


         variable = new Variable(null);
                    variable.setType(new ValueModifier(null));  
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2952:5: ( memberName specifier )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2952:7: memberName specifier
            {
            pushFollow(FOLLOW_memberName_in_isConditionVariable20238);
            memberName459=memberName();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable.setIdentifier(memberName459); }

            pushFollow(FOLLOW_specifier_in_isConditionVariable20254);
            specifier460=specifier();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable.setSpecifierExpression(specifier460); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "isConditionVariable"



    // $ANTLR start "satisfiesCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2958:1: satisfiesCondition returns [SatisfiesCondition condition] : SATISFIES type typeName ;
    public SatisfiesCondition satisfiesCondition() throws RecognitionException {
        SatisfiesCondition condition = null;


        Token SATISFIES461=null;
        StaticType type462 =null;

        Identifier typeName463 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2959:5: ( SATISFIES type typeName )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2959:7: SATISFIES type typeName
            {
            SATISFIES461=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiesCondition20283); if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition = new SatisfiesCondition(SATISFIES461); }

            pushFollow(FOLLOW_type_in_satisfiesCondition20300);
            type462=type();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setType(type462); }

            pushFollow(FOLLOW_typeName_in_satisfiesCondition20317);
            typeName463=typeName();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setIdentifier(typeName463); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "satisfiesCondition"



    // $ANTLR start "controlStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2967:1: controlStatement returns [ControlStatement controlStatement] : ( ifElse | switchCaseElse | whileLoop | forElse | tryCatchFinally | dynamic );
    public ControlStatement controlStatement() throws RecognitionException {
        ControlStatement controlStatement = null;


        IfStatement ifElse464 =null;

        SwitchStatement switchCaseElse465 =null;

        WhileStatement whileLoop466 =null;

        ForStatement forElse467 =null;

        TryCatchStatement tryCatchFinally468 =null;

        DynamicStatement dynamic469 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2968:5: ( ifElse | switchCaseElse | whileLoop | forElse | tryCatchFinally | dynamic )
            int alt262=6;
            switch ( input.LA(1) ) {
            case IF_CLAUSE:
                {
                alt262=1;
                }
                break;
            case SWITCH_CLAUSE:
                {
                alt262=2;
                }
                break;
            case WHILE_CLAUSE:
                {
                alt262=3;
                }
                break;
            case FOR_CLAUSE:
                {
                alt262=4;
                }
                break;
            case TRY_CLAUSE:
                {
                alt262=5;
                }
                break;
            case DYNAMIC:
                {
                alt262=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return controlStatement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 262, 0, input);

                throw nvae;

            }

            switch (alt262) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2968:7: ifElse
                    {
                    pushFollow(FOLLOW_ifElse_in_controlStatement20346);
                    ifElse464=ifElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =ifElse464; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2970:7: switchCaseElse
                    {
                    pushFollow(FOLLOW_switchCaseElse_in_controlStatement20363);
                    switchCaseElse465=switchCaseElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =switchCaseElse465; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2972:7: whileLoop
                    {
                    pushFollow(FOLLOW_whileLoop_in_controlStatement20380);
                    whileLoop466=whileLoop();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =whileLoop466; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2974:7: forElse
                    {
                    pushFollow(FOLLOW_forElse_in_controlStatement20397);
                    forElse467=forElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =forElse467; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2976:7: tryCatchFinally
                    {
                    pushFollow(FOLLOW_tryCatchFinally_in_controlStatement20414);
                    tryCatchFinally468=tryCatchFinally();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =tryCatchFinally468; }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2978:7: dynamic
                    {
                    pushFollow(FOLLOW_dynamic_in_controlStatement20430);
                    dynamic469=dynamic();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =dynamic469; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return controlStatement;
    }
    // $ANTLR end "controlStatement"



    // $ANTLR start "controlBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2982:1: controlBlock returns [Block block] : ( ( LBRACE )=>b= block |) ;
    public Block controlBlock() throws RecognitionException {
        Block block = null;


        Block b =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2983:5: ( ( ( LBRACE )=>b= block |) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2983:7: ( ( LBRACE )=>b= block |)
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2983:7: ( ( LBRACE )=>b= block |)
            int alt263=2;
            int LA263_0 = input.LA(1);

            if ( (LA263_0==LBRACE) ) {
                int LA263_1 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt263=1;
                }
                else if ( (true) ) {
                    alt263=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return block;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 263, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA263_0==ALIAS||(LA263_0 >= ASSERT && LA263_0 <= ASSIGN)||(LA263_0 >= BACKTICK && LA263_0 <= BREAK)||(LA263_0 >= CATCH_CLAUSE && LA263_0 <= CLASS_DEFINITION)||LA263_0==COMPILER_ANNOTATION||LA263_0==CONTINUE||(LA263_0 >= DECREMENT_OP && LA263_0 <= DIFFERENCE_OP)||LA263_0==DYNAMIC||LA263_0==ELSE_CLAUSE||(LA263_0 >= FINALLY_CLAUSE && LA263_0 <= FUNCTION_MODIFIER)||LA263_0==IF_CLAUSE||(LA263_0 >= INCREMENT_OP && LA263_0 <= INTERFACE_DEFINITION)||LA263_0==LBRACKET||LA263_0==LIDENTIFIER||LA263_0==LPAREN||LA263_0==NATURAL_LITERAL||(LA263_0 >= NOT_OP && LA263_0 <= OBJECT_DEFINITION)||(LA263_0 >= OUTER && LA263_0 <= PACKAGE)||LA263_0==RBRACE||LA263_0==RETURN||LA263_0==SMALLER_OP||LA263_0==STRING_LITERAL||LA263_0==STRING_START||(LA263_0 >= SUM_OP && LA263_0 <= SWITCH_CLAUSE)||(LA263_0 >= THIS && LA263_0 <= TRY_CLAUSE)||LA263_0==UIDENTIFIER||(LA263_0 >= VALUE_MODIFIER && LA263_0 <= WHILE_CLAUSE)) ) {
                alt263=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return block;}
                NoViableAltException nvae =
                    new NoViableAltException("", 263, 0, input);

                throw nvae;

            }
            switch (alt263) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2983:9: ( LBRACE )=>b= block
                    {
                    pushFollow(FOLLOW_block_in_controlBlock20468);
                    b=block();

                    state._fsp--;
                    if (state.failed) return block;

                    if ( state.backtracking==0 ) { block =b; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2985:9: 
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                    new MismatchedTokenException(LBRACE, input)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "controlBlock"



    // $ANTLR start "dynamic"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2990:1: dynamic returns [DynamicStatement statement] : DYNAMIC block ;
    public DynamicStatement dynamic() throws RecognitionException {
        DynamicStatement statement = null;


        Token DYNAMIC470=null;
        Block block471 =null;


         DynamicClause dc = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2992:5: ( DYNAMIC block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2992:7: DYNAMIC block
            {
            if ( state.backtracking==0 ) { statement =new DynamicStatement(null); }

            DYNAMIC470=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_dynamic20534); if (state.failed) return statement;

            if ( state.backtracking==0 ) { dc = new DynamicClause(DYNAMIC470);
                    statement.setDynamicClause(dc); }

            pushFollow(FOLLOW_block_in_dynamic20551);
            block471=block();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { dc.setBlock(block471); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "dynamic"



    // $ANTLR start "ifElse"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3000:1: ifElse returns [IfStatement statement] : ifBlock ( elseBlock )? ;
    public IfStatement ifElse() throws RecognitionException {
        IfStatement statement = null;


        IfClause ifBlock472 =null;

        ElseClause elseBlock473 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3001:5: ( ifBlock ( elseBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3001:7: ifBlock ( elseBlock )?
            {
            if ( state.backtracking==0 ) { statement =new IfStatement(null); }

            pushFollow(FOLLOW_ifBlock_in_ifElse20588);
            ifBlock472=ifBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setIfClause(ifBlock472); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3004:7: ( elseBlock )?
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( (LA264_0==ELSE_CLAUSE) ) {
                alt264=1;
            }
            switch (alt264) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3005:9: elseBlock
                    {
                    pushFollow(FOLLOW_elseBlock_in_ifElse20616);
                    elseBlock473=elseBlock();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setElseClause(elseBlock473); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "ifElse"



    // $ANTLR start "ifBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3010:1: ifBlock returns [IfClause clause] : IF_CLAUSE conditions controlBlock ;
    public IfClause ifBlock() throws RecognitionException {
        IfClause clause = null;


        Token IF_CLAUSE474=null;
        ConditionList conditions475 =null;

        Block controlBlock476 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3011:5: ( IF_CLAUSE conditions controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3011:7: IF_CLAUSE conditions controlBlock
            {
            IF_CLAUSE474=(Token)match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_ifBlock20656); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new IfClause(IF_CLAUSE474); }

            pushFollow(FOLLOW_conditions_in_ifBlock20673);
            conditions475=conditions();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setConditionList(conditions475); }

            pushFollow(FOLLOW_controlBlock_in_ifBlock20689);
            controlBlock476=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock476); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "ifBlock"



    // $ANTLR start "elseBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3019:1: elseBlock returns [ElseClause clause] : ELSE_CLAUSE ( elseIf | block ) ;
    public ElseClause elseBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE477=null;
        Block elseIf478 =null;

        Block block479 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3020:5: ( ELSE_CLAUSE ( elseIf | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3020:7: ELSE_CLAUSE ( elseIf | block )
            {
            ELSE_CLAUSE477=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_elseBlock20718); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE477); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3022:7: ( elseIf | block )
            int alt265=2;
            int LA265_0 = input.LA(1);

            if ( (LA265_0==IF_CLAUSE) ) {
                alt265=1;
            }
            else if ( (LA265_0==LBRACE) ) {
                alt265=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return clause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 265, 0, input);

                throw nvae;

            }
            switch (alt265) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3023:9: elseIf
                    {
                    pushFollow(FOLLOW_elseIf_in_elseBlock20745);
                    elseIf478=elseIf();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(elseIf478); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3026:9: block
                    {
                    pushFollow(FOLLOW_block_in_elseBlock20775);
                    block479=block();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(block479); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "elseBlock"



    // $ANTLR start "elseIf"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3031:1: elseIf returns [Block block] : ifElse ;
    public Block elseIf() throws RecognitionException {
        Block block = null;


        IfStatement ifElse480 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3032:5: ( ifElse )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3032:7: ifElse
            {
            pushFollow(FOLLOW_ifElse_in_elseIf20814);
            ifElse480=ifElse();

            state._fsp--;
            if (state.failed) return block;

            if ( state.backtracking==0 ) { block = new Block(null);
                    block.addStatement(ifElse480); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "elseIf"



    // $ANTLR start "switchCaseElse"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3037:1: switchCaseElse returns [SwitchStatement statement] : switchHeader cases ;
    public SwitchStatement switchCaseElse() throws RecognitionException {
        SwitchStatement statement = null;


        SwitchClause switchHeader481 =null;

        SwitchCaseList cases482 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3038:5: ( switchHeader cases )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3038:7: switchHeader cases
            {
            if ( state.backtracking==0 ) { statement = new SwitchStatement(null); }

            pushFollow(FOLLOW_switchHeader_in_switchCaseElse20851);
            switchHeader481=switchHeader();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setSwitchClause(switchHeader481); }

            pushFollow(FOLLOW_cases_in_switchCaseElse20868);
            cases482=cases();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setSwitchCaseList(cases482);
                    Expression ex = switchHeader481.getExpression();
                    if (ex!=null && ex.getTerm() instanceof BaseMemberExpression) {
                      Identifier id = ((BaseMemberExpression) ex.getTerm()).getIdentifier();
                      for (CaseClause cc: cases482.getCaseClauses()) {
                        CaseItem item = cc.getCaseItem();
                        if (item instanceof IsCase) {
                          IsCase ic = (IsCase) item;
                          Variable v = new Variable(null);
                          v.setType(new SyntheticVariable(null));
                          v.setIdentifier(id);
                          SpecifierExpression se = new SpecifierExpression(null);
                          Expression e = new Expression(null);
                          BaseMemberExpression bme = new BaseMemberExpression(null);
                          bme.setIdentifier(id);
                          bme.setTypeArguments( new InferredTypeArguments(null) );
                          e.setTerm(bme);
                          se.setExpression(e);
                          v.setSpecifierExpression(se);
                          ic.setVariable(v);
                        }
                      } 
                    } 
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "switchCaseElse"



    // $ANTLR start "switchHeader"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3068:1: switchHeader returns [SwitchClause clause] : SWITCH_CLAUSE LPAREN ( expression )? RPAREN ;
    public SwitchClause switchHeader() throws RecognitionException {
        SwitchClause clause = null;


        Token SWITCH_CLAUSE483=null;
        Expression expression484 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3069:5: ( SWITCH_CLAUSE LPAREN ( expression )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3069:7: SWITCH_CLAUSE LPAREN ( expression )? RPAREN
            {
            SWITCH_CLAUSE483=(Token)match(input,SWITCH_CLAUSE,FOLLOW_SWITCH_CLAUSE_in_switchHeader20897); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new SwitchClause(SWITCH_CLAUSE483); }

            match(input,LPAREN,FOLLOW_LPAREN_in_switchHeader20914); if (state.failed) return clause;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3072:7: ( expression )?
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( (LA266_0==BACKTICK||LA266_0==CHAR_LITERAL||(LA266_0 >= DECREMENT_OP && LA266_0 <= DIFFERENCE_OP)||LA266_0==DYNAMIC||LA266_0==FLOAT_LITERAL||LA266_0==INCREMENT_OP||(LA266_0 >= LBRACE && LA266_0 <= LBRACKET)||LA266_0==LIDENTIFIER||LA266_0==LPAREN||LA266_0==NATURAL_LITERAL||LA266_0==NOT_OP||(LA266_0 >= OUTER && LA266_0 <= PACKAGE)||LA266_0==STRING_LITERAL||LA266_0==STRING_START||(LA266_0 >= SUM_OP && LA266_0 <= SUPER)||LA266_0==THIS||LA266_0==UIDENTIFIER||LA266_0==VERBATIM_STRING) ) {
                alt266=1;
            }
            switch (alt266) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3073:7: expression
                    {
                    pushFollow(FOLLOW_expression_in_switchHeader20931);
                    expression484=expression();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setExpression(expression484); }

                    }
                    break;

            }


            match(input,RPAREN,FOLLOW_RPAREN_in_switchHeader20957); if (state.failed) return clause;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "switchHeader"



    // $ANTLR start "cases"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3079:1: cases returns [SwitchCaseList switchCaseList] : ( caseBlock )+ ( defaultCaseBlock )? ;
    public SwitchCaseList cases() throws RecognitionException {
        SwitchCaseList switchCaseList = null;


        CaseClause caseBlock485 =null;

        ElseClause defaultCaseBlock486 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3080:5: ( ( caseBlock )+ ( defaultCaseBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3080:7: ( caseBlock )+ ( defaultCaseBlock )?
            {
            if ( state.backtracking==0 ) { switchCaseList = new SwitchCaseList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3081:7: ( caseBlock )+
            int cnt267=0;
            loop267:
            do {
                int alt267=2;
                int LA267_0 = input.LA(1);

                if ( (LA267_0==CASE_CLAUSE) ) {
                    alt267=1;
                }


                switch (alt267) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3082:9: caseBlock
            	    {
            	    pushFollow(FOLLOW_caseBlock_in_cases20996);
            	    caseBlock485=caseBlock();

            	    state._fsp--;
            	    if (state.failed) return switchCaseList;

            	    if ( state.backtracking==0 ) { switchCaseList.addCaseClause(caseBlock485); }

            	    }
            	    break;

            	default :
            	    if ( cnt267 >= 1 ) break loop267;
            	    if (state.backtracking>0) {state.failed=true; return switchCaseList;}
                        EarlyExitException eee =
                            new EarlyExitException(267, input);
                        throw eee;
                }
                cnt267++;
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3085:7: ( defaultCaseBlock )?
            int alt268=2;
            int LA268_0 = input.LA(1);

            if ( (LA268_0==ELSE_CLAUSE) ) {
                alt268=1;
            }
            switch (alt268) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3086:9: defaultCaseBlock
                    {
                    pushFollow(FOLLOW_defaultCaseBlock_in_cases21033);
                    defaultCaseBlock486=defaultCaseBlock();

                    state._fsp--;
                    if (state.failed) return switchCaseList;

                    if ( state.backtracking==0 ) { switchCaseList.setElseClause(defaultCaseBlock486); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return switchCaseList;
    }
    // $ANTLR end "cases"



    // $ANTLR start "caseBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3091:1: caseBlock returns [CaseClause clause] : CASE_CLAUSE caseItemList block ;
    public CaseClause caseBlock() throws RecognitionException {
        CaseClause clause = null;


        Token CASE_CLAUSE487=null;
        CaseItem caseItemList488 =null;

        Block block489 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3092:5: ( CASE_CLAUSE caseItemList block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3092:7: CASE_CLAUSE caseItemList block
            {
            CASE_CLAUSE487=(Token)match(input,CASE_CLAUSE,FOLLOW_CASE_CLAUSE_in_caseBlock21077); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new CaseClause(CASE_CLAUSE487); }

            pushFollow(FOLLOW_caseItemList_in_caseBlock21094);
            caseItemList488=caseItemList();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setCaseItem(caseItemList488); }

            pushFollow(FOLLOW_block_in_caseBlock21110);
            block489=block();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(block489); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "caseBlock"



    // $ANTLR start "caseItemList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3100:1: caseItemList returns [CaseItem item] : LPAREN (ci= caseItem )? RPAREN ;
    public CaseItem caseItemList() throws RecognitionException {
        CaseItem item = null;


        Token RPAREN490=null;
        CaseItem ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3101:5: ( LPAREN (ci= caseItem )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3101:7: LPAREN (ci= caseItem )? RPAREN
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_caseItemList21139); if (state.failed) return item;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3102:7: (ci= caseItem )?
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==BACKTICK||LA269_0==CHAR_LITERAL||(LA269_0 >= DECREMENT_OP && LA269_0 <= DIFFERENCE_OP)||LA269_0==DYNAMIC||LA269_0==FLOAT_LITERAL||LA269_0==INCREMENT_OP||LA269_0==IS_OP||(LA269_0 >= LBRACE && LA269_0 <= LBRACKET)||LA269_0==LIDENTIFIER||LA269_0==LPAREN||LA269_0==NATURAL_LITERAL||(LA269_0 >= OUTER && LA269_0 <= PACKAGE)||LA269_0==SATISFIES||LA269_0==STRING_LITERAL||LA269_0==STRING_START||(LA269_0 >= SUM_OP && LA269_0 <= SUPER)||LA269_0==THIS||LA269_0==UIDENTIFIER||LA269_0==VERBATIM_STRING) ) {
                alt269=1;
            }
            switch (alt269) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3103:9: ci= caseItem
                    {
                    pushFollow(FOLLOW_caseItem_in_caseItemList21160);
                    ci=caseItem();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item = ci; }

                    }
                    break;

            }


            RPAREN490=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_caseItemList21187); if (state.failed) return item;

            if ( state.backtracking==0 ) { if (item!=null) 
                        item.setEndToken(RPAREN490); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "caseItemList"



    // $ANTLR start "defaultCaseBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3111:1: defaultCaseBlock returns [ElseClause clause] : ELSE_CLAUSE block ;
    public ElseClause defaultCaseBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE491=null;
        Block block492 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3112:5: ( ELSE_CLAUSE block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3112:7: ELSE_CLAUSE block
            {
            ELSE_CLAUSE491=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_defaultCaseBlock21217); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE491); }

            pushFollow(FOLLOW_block_in_defaultCaseBlock21234);
            block492=block();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(block492); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "defaultCaseBlock"



    // $ANTLR start "caseItem"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3118:1: caseItem returns [CaseItem item] : ( ( IS_OP )=> isCaseCondition | ( SATISFIES )=> satisfiesCaseCondition | matchCaseCondition );
    public CaseItem caseItem() throws RecognitionException {
        CaseItem item = null;


        IsCase isCaseCondition493 =null;

        SatisfiesCase satisfiesCaseCondition494 =null;

        MatchCase matchCaseCondition495 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3119:5: ( ( IS_OP )=> isCaseCondition | ( SATISFIES )=> satisfiesCaseCondition | matchCaseCondition )
            int alt270=3;
            int LA270_0 = input.LA(1);

            if ( (LA270_0==IS_OP) && (synpred27_Ceylon())) {
                alt270=1;
            }
            else if ( (LA270_0==SATISFIES) && (synpred28_Ceylon())) {
                alt270=2;
            }
            else if ( (LA270_0==BACKTICK||LA270_0==CHAR_LITERAL||(LA270_0 >= DECREMENT_OP && LA270_0 <= DIFFERENCE_OP)||LA270_0==DYNAMIC||LA270_0==FLOAT_LITERAL||LA270_0==INCREMENT_OP||(LA270_0 >= LBRACE && LA270_0 <= LBRACKET)||LA270_0==LIDENTIFIER||LA270_0==LPAREN||LA270_0==NATURAL_LITERAL||(LA270_0 >= OUTER && LA270_0 <= PACKAGE)||LA270_0==STRING_LITERAL||LA270_0==STRING_START||(LA270_0 >= SUM_OP && LA270_0 <= SUPER)||LA270_0==THIS||LA270_0==UIDENTIFIER||LA270_0==VERBATIM_STRING) ) {
                alt270=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return item;}
                NoViableAltException nvae =
                    new NoViableAltException("", 270, 0, input);

                throw nvae;

            }
            switch (alt270) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3119:7: ( IS_OP )=> isCaseCondition
                    {
                    pushFollow(FOLLOW_isCaseCondition_in_caseItem21267);
                    isCaseCondition493=isCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =isCaseCondition493; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3121:7: ( SATISFIES )=> satisfiesCaseCondition
                    {
                    pushFollow(FOLLOW_satisfiesCaseCondition_in_caseItem21288);
                    satisfiesCaseCondition494=satisfiesCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =satisfiesCaseCondition494; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3123:7: matchCaseCondition
                    {
                    pushFollow(FOLLOW_matchCaseCondition_in_caseItem21304);
                    matchCaseCondition495=matchCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =matchCaseCondition495; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "caseItem"



    // $ANTLR start "matchCaseCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3127:1: matchCaseCondition returns [MatchCase item] : valueCaseList ;
    public MatchCase matchCaseCondition() throws RecognitionException {
        MatchCase item = null;


        ExpressionList valueCaseList496 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3128:5: ( valueCaseList )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3128:7: valueCaseList
            {
            pushFollow(FOLLOW_valueCaseList_in_matchCaseCondition21333);
            valueCaseList496=valueCaseList();

            state._fsp--;
            if (state.failed) return item;

            if ( state.backtracking==0 ) { item = new MatchCase(null);
                    item.setExpressionList(valueCaseList496); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "matchCaseCondition"



    // $ANTLR start "isCaseCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3133:1: isCaseCondition returns [IsCase item] : IS_OP type ;
    public IsCase isCaseCondition() throws RecognitionException {
        IsCase item = null;


        Token IS_OP497=null;
        StaticType type498 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3134:5: ( IS_OP type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3134:7: IS_OP type
            {
            IS_OP497=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_isCaseCondition21362); if (state.failed) return item;

            if ( state.backtracking==0 ) { item = new IsCase(IS_OP497); }

            pushFollow(FOLLOW_type_in_isCaseCondition21379);
            type498=type();

            state._fsp--;
            if (state.failed) return item;

            if ( state.backtracking==0 ) { item.setType(type498); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "isCaseCondition"



    // $ANTLR start "satisfiesCaseCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3140:1: satisfiesCaseCondition returns [SatisfiesCase item] : SATISFIES type ;
    public SatisfiesCase satisfiesCaseCondition() throws RecognitionException {
        SatisfiesCase item = null;


        Token SATISFIES499=null;
        StaticType type500 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3141:5: ( SATISFIES type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3141:7: SATISFIES type
            {
            SATISFIES499=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiesCaseCondition21408); if (state.failed) return item;

            if ( state.backtracking==0 ) { item = new SatisfiesCase(SATISFIES499); }

            pushFollow(FOLLOW_type_in_satisfiesCaseCondition21425);
            type500=type();

            state._fsp--;
            if (state.failed) return item;

            if ( state.backtracking==0 ) { item.setType(type500); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "satisfiesCaseCondition"



    // $ANTLR start "forElse"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3147:1: forElse returns [ForStatement statement] : forBlock ( failBlock )? ;
    public ForStatement forElse() throws RecognitionException {
        ForStatement statement = null;


        ForClause forBlock501 =null;

        ElseClause failBlock502 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3148:5: ( forBlock ( failBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3148:7: forBlock ( failBlock )?
            {
            if ( state.backtracking==0 ) { statement =new ForStatement(null); }

            pushFollow(FOLLOW_forBlock_in_forElse21462);
            forBlock501=forBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setForClause(forBlock501); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3151:7: ( failBlock )?
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==ELSE_CLAUSE) ) {
                alt271=1;
            }
            switch (alt271) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3152:9: failBlock
                    {
                    pushFollow(FOLLOW_failBlock_in_forElse21489);
                    failBlock502=failBlock();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setElseClause(failBlock502); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "forElse"



    // $ANTLR start "forBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3157:1: forBlock returns [ForClause clause] : FOR_CLAUSE forIterator controlBlock ;
    public ForClause forBlock() throws RecognitionException {
        ForClause clause = null;


        Token FOR_CLAUSE503=null;
        ForIterator forIterator504 =null;

        Block controlBlock505 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3158:5: ( FOR_CLAUSE forIterator controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3158:7: FOR_CLAUSE forIterator controlBlock
            {
            FOR_CLAUSE503=(Token)match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_forBlock21529); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ForClause(FOR_CLAUSE503); }

            pushFollow(FOLLOW_forIterator_in_forBlock21546);
            forIterator504=forIterator();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setForIterator(forIterator504); }

            pushFollow(FOLLOW_controlBlock_in_forBlock21563);
            controlBlock505=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock505); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "forBlock"



    // $ANTLR start "failBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3166:1: failBlock returns [ElseClause clause] : ELSE_CLAUSE controlBlock ;
    public ElseClause failBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE506=null;
        Block controlBlock507 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3167:5: ( ELSE_CLAUSE controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3167:7: ELSE_CLAUSE controlBlock
            {
            ELSE_CLAUSE506=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_failBlock21592); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE506); }

            pushFollow(FOLLOW_controlBlock_in_failBlock21609);
            controlBlock507=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock507); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "failBlock"



    // $ANTLR start "forIterator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3173:1: forIterator returns [ForIterator iterator] : LPAREN compilerAnnotations (v1= var (c1= containment | ENTRY_OP v2= var c2= containment )? )? RPAREN ;
    public ForIterator forIterator() throws RecognitionException {
        ForIterator iterator = null;


        Token LPAREN508=null;
        Token RPAREN510=null;
        Variable v1 =null;

        SpecifierExpression c1 =null;

        Variable v2 =null;

        SpecifierExpression c2 =null;

        List<CompilerAnnotation> compilerAnnotations509 =null;


         ValueIterator vi = null;
                    KeyValueIterator kvi = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3176:5: ( LPAREN compilerAnnotations (v1= var (c1= containment | ENTRY_OP v2= var c2= containment )? )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3176:7: LPAREN compilerAnnotations (v1= var (c1= containment | ENTRY_OP v2= var c2= containment )? )? RPAREN
            {
            LPAREN508=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_forIterator21647); if (state.failed) return iterator;

            if ( state.backtracking==0 ) { vi = new ValueIterator(LPAREN508); 
                  kvi = new KeyValueIterator(LPAREN508); 
                  iterator = vi; }

            pushFollow(FOLLOW_compilerAnnotations_in_forIterator21659);
            compilerAnnotations509=compilerAnnotations();

            state._fsp--;
            if (state.failed) return iterator;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3181:5: (v1= var (c1= containment | ENTRY_OP v2= var c2= containment )? )?
            int alt273=2;
            int LA273_0 = input.LA(1);

            if ( (LA273_0==FUNCTION_MODIFIER||(LA273_0 >= LBRACE && LA273_0 <= LBRACKET)||LA273_0==LIDENTIFIER||LA273_0==SMALLER_OP||LA273_0==UIDENTIFIER||LA273_0==VALUE_MODIFIER||LA273_0==VOID_MODIFIER) ) {
                alt273=1;
            }
            switch (alt273) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3182:7: v1= var (c1= containment | ENTRY_OP v2= var c2= containment )?
                    {
                    pushFollow(FOLLOW_var_in_forIterator21676);
                    v1=var();

                    state._fsp--;
                    if (state.failed) return iterator;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3183:7: (c1= containment | ENTRY_OP v2= var c2= containment )?
                    int alt272=3;
                    int LA272_0 = input.LA(1);

                    if ( (LA272_0==IN_OP) ) {
                        alt272=1;
                    }
                    else if ( (LA272_0==ENTRY_OP) ) {
                        alt272=2;
                    }
                    switch (alt272) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3184:9: c1= containment
                            {
                            if ( state.backtracking==0 ) { vi.setVariable(v1); }

                            pushFollow(FOLLOW_containment_in_forIterator21706);
                            c1=containment();

                            state._fsp--;
                            if (state.failed) return iterator;

                            if ( state.backtracking==0 ) { vi.setSpecifierExpression(c1); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3188:9: ENTRY_OP v2= var c2= containment
                            {
                            if ( state.backtracking==0 ) { iterator = kvi; }

                            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_forIterator21745); if (state.failed) return iterator;

                            if ( state.backtracking==0 ) { kvi.setKeyVariable(v1); }

                            pushFollow(FOLLOW_var_in_forIterator21767);
                            v2=var();

                            state._fsp--;
                            if (state.failed) return iterator;

                            if ( state.backtracking==0 ) { kvi.setValueVariable(v2); }

                            pushFollow(FOLLOW_containment_in_forIterator21789);
                            c2=containment();

                            state._fsp--;
                            if (state.failed) return iterator;

                            if ( state.backtracking==0 ) {  kvi.setSpecifierExpression(c2); }

                            }
                            break;

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) { if (iterator!=null)
                      iterator.getCompilerAnnotations().addAll(compilerAnnotations509); }

            RPAREN510=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_forIterator21827); if (state.failed) return iterator;

            if ( state.backtracking==0 ) { iterator.setEndToken(RPAREN510); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return iterator;
    }
    // $ANTLR end "forIterator"



    // $ANTLR start "containment"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3203:1: containment returns [SpecifierExpression specifierExpression] : IN_OP ( expression )? ;
    public SpecifierExpression containment() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token IN_OP511=null;
        Expression expression512 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3204:5: ( IN_OP ( expression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3204:7: IN_OP ( expression )?
            {
            IN_OP511=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_containment21858); if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression = new SpecifierExpression(IN_OP511); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3206:7: ( expression )?
            int alt274=2;
            int LA274_0 = input.LA(1);

            if ( (LA274_0==BACKTICK||LA274_0==CHAR_LITERAL||(LA274_0 >= DECREMENT_OP && LA274_0 <= DIFFERENCE_OP)||LA274_0==DYNAMIC||LA274_0==FLOAT_LITERAL||LA274_0==INCREMENT_OP||(LA274_0 >= LBRACE && LA274_0 <= LBRACKET)||LA274_0==LIDENTIFIER||LA274_0==LPAREN||LA274_0==NATURAL_LITERAL||LA274_0==NOT_OP||(LA274_0 >= OUTER && LA274_0 <= PACKAGE)||LA274_0==STRING_LITERAL||LA274_0==STRING_START||(LA274_0 >= SUM_OP && LA274_0 <= SUPER)||LA274_0==THIS||LA274_0==UIDENTIFIER||LA274_0==VERBATIM_STRING) ) {
                alt274=1;
            }
            switch (alt274) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3206:8: expression
                    {
                    pushFollow(FOLLOW_expression_in_containment21876);
                    expression512=expression();

                    state._fsp--;
                    if (state.failed) return specifierExpression;

                    if ( state.backtracking==0 ) { specifierExpression.setExpression(expression512); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "containment"



    // $ANTLR start "whileLoop"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3210:1: whileLoop returns [WhileStatement statement] : whileBlock ;
    public WhileStatement whileLoop() throws RecognitionException {
        WhileStatement statement = null;


        WhileClause whileBlock513 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3211:5: ( whileBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3211:7: whileBlock
            {
            if ( state.backtracking==0 ) { statement = new WhileStatement(null); }

            pushFollow(FOLLOW_whileBlock_in_whileLoop21919);
            whileBlock513=whileBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setWhileClause(whileBlock513); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "whileLoop"



    // $ANTLR start "whileBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3216:1: whileBlock returns [WhileClause clause] : WHILE_CLAUSE conditions controlBlock ;
    public WhileClause whileBlock() throws RecognitionException {
        WhileClause clause = null;


        Token WHILE_CLAUSE514=null;
        ConditionList conditions515 =null;

        Block controlBlock516 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3217:5: ( WHILE_CLAUSE conditions controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3217:7: WHILE_CLAUSE conditions controlBlock
            {
            WHILE_CLAUSE514=(Token)match(input,WHILE_CLAUSE,FOLLOW_WHILE_CLAUSE_in_whileBlock21948); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new WhileClause(WHILE_CLAUSE514); }

            pushFollow(FOLLOW_conditions_in_whileBlock21964);
            conditions515=conditions();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setConditionList(conditions515); }

            pushFollow(FOLLOW_controlBlock_in_whileBlock21980);
            controlBlock516=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock516); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "whileBlock"



    // $ANTLR start "tryCatchFinally"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3225:1: tryCatchFinally returns [TryCatchStatement statement] : tryBlock ( catchBlock )* ( finallyBlock )? ;
    public TryCatchStatement tryCatchFinally() throws RecognitionException {
        TryCatchStatement statement = null;


        TryClause tryBlock517 =null;

        CatchClause catchBlock518 =null;

        FinallyClause finallyBlock519 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3226:5: ( tryBlock ( catchBlock )* ( finallyBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3226:7: tryBlock ( catchBlock )* ( finallyBlock )?
            {
            if ( state.backtracking==0 ) { statement = new TryCatchStatement(null); }

            pushFollow(FOLLOW_tryBlock_in_tryCatchFinally22017);
            tryBlock517=tryBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setTryClause(tryBlock517); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3229:7: ( catchBlock )*
            loop275:
            do {
                int alt275=2;
                int LA275_0 = input.LA(1);

                if ( (LA275_0==CATCH_CLAUSE) ) {
                    alt275=1;
                }


                switch (alt275) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3230:9: catchBlock
            	    {
            	    pushFollow(FOLLOW_catchBlock_in_tryCatchFinally22044);
            	    catchBlock518=catchBlock();

            	    state._fsp--;
            	    if (state.failed) return statement;

            	    if ( state.backtracking==0 ) { statement.addCatchClause(catchBlock518); }

            	    }
            	    break;

            	default :
            	    break loop275;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3233:7: ( finallyBlock )?
            int alt276=2;
            int LA276_0 = input.LA(1);

            if ( (LA276_0==FINALLY_CLAUSE) ) {
                alt276=1;
            }
            switch (alt276) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3234:9: finallyBlock
                    {
                    pushFollow(FOLLOW_finallyBlock_in_tryCatchFinally22081);
                    finallyBlock519=finallyBlock();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setFinallyClause(finallyBlock519); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "tryCatchFinally"



    // $ANTLR start "tryBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3239:1: tryBlock returns [TryClause clause] : TRY_CLAUSE ( resources controlBlock | block ) ;
    public TryClause tryBlock() throws RecognitionException {
        TryClause clause = null;


        Token TRY_CLAUSE520=null;
        ResourceList resources521 =null;

        Block controlBlock522 =null;

        Block block523 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3240:5: ( TRY_CLAUSE ( resources controlBlock | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3240:7: TRY_CLAUSE ( resources controlBlock | block )
            {
            TRY_CLAUSE520=(Token)match(input,TRY_CLAUSE,FOLLOW_TRY_CLAUSE_in_tryBlock22119); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new TryClause(TRY_CLAUSE520); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3242:7: ( resources controlBlock | block )
            int alt277=2;
            int LA277_0 = input.LA(1);

            if ( (LA277_0==LPAREN) ) {
                alt277=1;
            }
            else if ( (LA277_0==LBRACE) ) {
                alt277=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return clause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 277, 0, input);

                throw nvae;

            }
            switch (alt277) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3243:9: resources controlBlock
                    {
                    pushFollow(FOLLOW_resources_in_tryBlock22146);
                    resources521=resources();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setResourceList(resources521); }

                    pushFollow(FOLLOW_controlBlock_in_tryBlock22166);
                    controlBlock522=controlBlock();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(controlBlock522); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3248:9: block
                    {
                    pushFollow(FOLLOW_block_in_tryBlock22194);
                    block523=block();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(block523); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "tryBlock"



    // $ANTLR start "catchBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3253:1: catchBlock returns [CatchClause clause] : CATCH_CLAUSE catchVariable controlBlock ;
    public CatchClause catchBlock() throws RecognitionException {
        CatchClause clause = null;


        Token CATCH_CLAUSE524=null;
        CatchVariable catchVariable525 =null;

        Block controlBlock526 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3254:5: ( CATCH_CLAUSE catchVariable controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3254:7: CATCH_CLAUSE catchVariable controlBlock
            {
            CATCH_CLAUSE524=(Token)match(input,CATCH_CLAUSE,FOLLOW_CATCH_CLAUSE_in_catchBlock22233); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new CatchClause(CATCH_CLAUSE524); }

            pushFollow(FOLLOW_catchVariable_in_catchBlock22250);
            catchVariable525=catchVariable();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setCatchVariable(catchVariable525); }

            pushFollow(FOLLOW_controlBlock_in_catchBlock22266);
            controlBlock526=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock526); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "catchBlock"



    // $ANTLR start "catchVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3262:1: catchVariable returns [CatchVariable catchVariable] : LPAREN ( variable )? RPAREN ;
    public CatchVariable catchVariable() throws RecognitionException {
        CatchVariable catchVariable = null;


        Token LPAREN527=null;
        Token RPAREN529=null;
        Variable variable528 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3263:5: ( LPAREN ( variable )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3263:7: LPAREN ( variable )? RPAREN
            {
            LPAREN527=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_catchVariable22295); if (state.failed) return catchVariable;

            if ( state.backtracking==0 ) { catchVariable =new CatchVariable(LPAREN527); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3265:7: ( variable )?
            int alt278=2;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==COMPILER_ANNOTATION||LA278_0==FUNCTION_MODIFIER||(LA278_0 >= LBRACE && LA278_0 <= LBRACKET)||LA278_0==LIDENTIFIER||LA278_0==SMALLER_OP||LA278_0==UIDENTIFIER||LA278_0==VALUE_MODIFIER||LA278_0==VOID_MODIFIER) ) {
                alt278=1;
            }
            switch (alt278) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3266:7: variable
                    {
                    pushFollow(FOLLOW_variable_in_catchVariable22320);
                    variable528=variable();

                    state._fsp--;
                    if (state.failed) return catchVariable;

                    if ( state.backtracking==0 ) { catchVariable.setVariable(variable528); }

                    }
                    break;

            }


            RPAREN529=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_catchVariable22346); if (state.failed) return catchVariable;

            if ( state.backtracking==0 ) { catchVariable.setEndToken(RPAREN529); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return catchVariable;
    }
    // $ANTLR end "catchVariable"



    // $ANTLR start "finallyBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3274:1: finallyBlock returns [FinallyClause clause] : FINALLY_CLAUSE controlBlock ;
    public FinallyClause finallyBlock() throws RecognitionException {
        FinallyClause clause = null;


        Token FINALLY_CLAUSE530=null;
        Block controlBlock531 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3275:5: ( FINALLY_CLAUSE controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3275:7: FINALLY_CLAUSE controlBlock
            {
            FINALLY_CLAUSE530=(Token)match(input,FINALLY_CLAUSE,FOLLOW_FINALLY_CLAUSE_in_finallyBlock22377); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new FinallyClause(FINALLY_CLAUSE530); }

            pushFollow(FOLLOW_controlBlock_in_finallyBlock22394);
            controlBlock531=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock531); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "finallyBlock"



    // $ANTLR start "resources"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3281:1: resources returns [ResourceList resources] : LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN ;
    public ResourceList resources() throws RecognitionException {
        ResourceList resources = null;


        Token c=null;
        Token LPAREN532=null;
        Token RPAREN533=null;
        Resource r1 =null;

        Resource r2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3282:5: ( LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3282:7: LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN
            {
            LPAREN532=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_resources22423); if (state.failed) return resources;

            if ( state.backtracking==0 ) { resources = new ResourceList(LPAREN532); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3284:5: (r1= resource (c= COMMA r2= resource )* )?
            int alt280=2;
            int LA280_0 = input.LA(1);

            if ( (LA280_0==BACKTICK||LA280_0==CHAR_LITERAL||LA280_0==COMPILER_ANNOTATION||(LA280_0 >= DECREMENT_OP && LA280_0 <= DIFFERENCE_OP)||LA280_0==DYNAMIC||LA280_0==FLOAT_LITERAL||LA280_0==FUNCTION_MODIFIER||LA280_0==INCREMENT_OP||(LA280_0 >= LBRACE && LA280_0 <= LBRACKET)||LA280_0==LIDENTIFIER||LA280_0==LPAREN||LA280_0==NATURAL_LITERAL||LA280_0==NOT_OP||(LA280_0 >= OUTER && LA280_0 <= PACKAGE)||LA280_0==SMALLER_OP||LA280_0==STRING_LITERAL||LA280_0==STRING_START||(LA280_0 >= SUM_OP && LA280_0 <= SUPER)||LA280_0==THIS||LA280_0==UIDENTIFIER||(LA280_0 >= VALUE_MODIFIER && LA280_0 <= VOID_MODIFIER)) ) {
                alt280=1;
            }
            switch (alt280) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3285:5: r1= resource (c= COMMA r2= resource )*
                    {
                    pushFollow(FOLLOW_resource_in_resources22444);
                    r1=resource();

                    state._fsp--;
                    if (state.failed) return resources;

                    if ( state.backtracking==0 ) { resources.addResource(r1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3287:5: (c= COMMA r2= resource )*
                    loop279:
                    do {
                        int alt279=2;
                        int LA279_0 = input.LA(1);

                        if ( (LA279_0==COMMA) ) {
                            alt279=1;
                        }


                        switch (alt279) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3288:7: c= COMMA r2= resource
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_resources22466); if (state.failed) return resources;

                    	    if ( state.backtracking==0 ) { resources.setEndToken(c); }

                    	    pushFollow(FOLLOW_resource_in_resources22485);
                    	    r2=resource();

                    	    state._fsp--;
                    	    if (state.failed) return resources;

                    	    if ( state.backtracking==0 ) { resources.addResource(r2);
                    	            resources.setEndToken(null); }

                    	    }
                    	    break;

                    	default :
                    	    break loop279;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN533=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_resources22513); if (state.failed) return resources;

            if ( state.backtracking==0 ) { resources.setEndToken(RPAREN533); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return resources;
    }
    // $ANTLR end "resources"



    // $ANTLR start "resource"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3299:1: resource returns [Resource resource] : ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression ) ;
    public Resource resource() throws RecognitionException {
        Resource resource = null;


        Variable specifiedVariable534 =null;

        Expression expression535 =null;


         resource = new Resource(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3301:5: ( ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3301:7: ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3301:7: ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression )
            int alt281=2;
            int LA281_0 = input.LA(1);

            if ( (LA281_0==COMPILER_ANNOTATION) && (synpred29_Ceylon())) {
                alt281=1;
            }
            else if ( (LA281_0==UIDENTIFIER) ) {
                int LA281_2 = input.LA(2);

                if ( (synpred29_Ceylon()) ) {
                    alt281=1;
                }
                else if ( (true) ) {
                    alt281=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 281, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA281_0==SMALLER_OP) && (synpred29_Ceylon())) {
                alt281=1;
            }
            else if ( (LA281_0==LBRACKET) ) {
                int LA281_4 = input.LA(2);

                if ( (synpred29_Ceylon()) ) {
                    alt281=1;
                }
                else if ( (true) ) {
                    alt281=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 281, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA281_0==LBRACE) ) {
                int LA281_5 = input.LA(2);

                if ( (synpred29_Ceylon()) ) {
                    alt281=1;
                }
                else if ( (true) ) {
                    alt281=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 281, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA281_0==VOID_MODIFIER) && (synpred29_Ceylon())) {
                alt281=1;
            }
            else if ( (LA281_0==FUNCTION_MODIFIER) && (synpred29_Ceylon())) {
                alt281=1;
            }
            else if ( (LA281_0==VALUE_MODIFIER) && (synpred29_Ceylon())) {
                alt281=1;
            }
            else if ( (LA281_0==LIDENTIFIER) ) {
                int LA281_9 = input.LA(2);

                if ( (synpred29_Ceylon()) ) {
                    alt281=1;
                }
                else if ( (true) ) {
                    alt281=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 281, 9, input);

                    throw nvae;

                }
            }
            else if ( (LA281_0==BACKTICK||LA281_0==CHAR_LITERAL||(LA281_0 >= DECREMENT_OP && LA281_0 <= DIFFERENCE_OP)||LA281_0==DYNAMIC||LA281_0==FLOAT_LITERAL||LA281_0==INCREMENT_OP||LA281_0==LPAREN||LA281_0==NATURAL_LITERAL||LA281_0==NOT_OP||(LA281_0 >= OUTER && LA281_0 <= PACKAGE)||LA281_0==STRING_LITERAL||LA281_0==STRING_START||(LA281_0 >= SUM_OP && LA281_0 <= SUPER)||LA281_0==THIS||LA281_0==VERBATIM_STRING) ) {
                alt281=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return resource;}
                NoViableAltException nvae =
                    new NoViableAltException("", 281, 0, input);

                throw nvae;

            }
            switch (alt281) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3301:9: ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable
                    {
                    pushFollow(FOLLOW_specifiedVariable_in_resource22570);
                    specifiedVariable534=specifiedVariable();

                    state._fsp--;
                    if (state.failed) return resource;

                    if ( state.backtracking==0 ) { resource.setVariable(specifiedVariable534); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3304:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_resource22590);
                    expression535=expression();

                    state._fsp--;
                    if (state.failed) return resource;

                    if ( state.backtracking==0 ) { resource.setExpression(expression535); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return resource;
    }
    // $ANTLR end "resource"



    // $ANTLR start "specifiedVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3309:1: specifiedVariable returns [Variable variable] : v= variable ( specifier )? ;
    public Variable specifiedVariable() throws RecognitionException {
        Variable variable = null;


        Variable v =null;

        SpecifierExpression specifier536 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3310:5: (v= variable ( specifier )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3310:7: v= variable ( specifier )?
            {
            pushFollow(FOLLOW_variable_in_specifiedVariable22631);
            v=variable();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable = v; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3312:7: ( specifier )?
            int alt282=2;
            int LA282_0 = input.LA(1);

            if ( (LA282_0==SPECIFY) ) {
                alt282=1;
            }
            switch (alt282) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3313:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_specifiedVariable22658);
                    specifier536=specifier();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setSpecifierExpression(specifier536); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "specifiedVariable"



    // $ANTLR start "variable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3318:1: variable returns [Variable variable] : compilerAnnotations var ;
    public Variable variable() throws RecognitionException {
        Variable variable = null;


        Variable var537 =null;

        List<CompilerAnnotation> compilerAnnotations538 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3319:5: ( compilerAnnotations var )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3319:7: compilerAnnotations var
            {
            pushFollow(FOLLOW_compilerAnnotations_in_variable22698);
            compilerAnnotations538=compilerAnnotations();

            state._fsp--;
            if (state.failed) return variable;

            pushFollow(FOLLOW_var_in_variable22706);
            var537=var();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable =var537;
                    variable.getCompilerAnnotations().addAll(compilerAnnotations538); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "variable"



    // $ANTLR start "var"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3325:1: var returns [Variable variable] : ( ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )* |mn2= memberName |mn3= memberName (p3= parameters )+ ) ;
    public Variable var() throws RecognitionException {
        Variable variable = null;


        Token VOID_MODIFIER540=null;
        Token FUNCTION_MODIFIER541=null;
        Token VALUE_MODIFIER542=null;
        Identifier mn1 =null;

        ParameterList p1 =null;

        Identifier mn2 =null;

        Identifier mn3 =null;

        ParameterList p3 =null;

        StaticType type539 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3326:5: ( ( ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )* |mn2= memberName |mn3= memberName (p3= parameters )+ ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3326:7: ( ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )* |mn2= memberName |mn3= memberName (p3= parameters )+ )
            {
            if ( state.backtracking==0 ) { variable = new Variable(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3327:5: ( ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )* |mn2= memberName |mn3= memberName (p3= parameters )+ )
            int alt286=3;
            int LA286_0 = input.LA(1);

            if ( (LA286_0==FUNCTION_MODIFIER||(LA286_0 >= LBRACE && LA286_0 <= LBRACKET)||LA286_0==SMALLER_OP||LA286_0==UIDENTIFIER||LA286_0==VALUE_MODIFIER||LA286_0==VOID_MODIFIER) ) {
                alt286=1;
            }
            else if ( (LA286_0==LIDENTIFIER) ) {
                int LA286_2 = input.LA(2);

                if ( (LA286_2==COMMA||LA286_2==ENTRY_OP||LA286_2==IN_OP||LA286_2==RPAREN||LA286_2==SPECIFY) ) {
                    alt286=2;
                }
                else if ( (LA286_2==LPAREN) ) {
                    alt286=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return variable;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 286, 2, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return variable;}
                NoViableAltException nvae =
                    new NoViableAltException("", 286, 0, input);

                throw nvae;

            }
            switch (alt286) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3328:7: ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )*
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3328:7: ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER )
                    int alt283=4;
                    switch ( input.LA(1) ) {
                    case LBRACE:
                    case LBRACKET:
                    case SMALLER_OP:
                    case UIDENTIFIER:
                        {
                        alt283=1;
                        }
                        break;
                    case VOID_MODIFIER:
                        {
                        alt283=2;
                        }
                        break;
                    case FUNCTION_MODIFIER:
                        {
                        alt283=3;
                        }
                        break;
                    case VALUE_MODIFIER:
                        {
                        alt283=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return variable;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 283, 0, input);

                        throw nvae;

                    }

                    switch (alt283) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3328:9: type
                            {
                            pushFollow(FOLLOW_type_in_var22755);
                            type539=type();

                            state._fsp--;
                            if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(type539); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3330:9: VOID_MODIFIER
                            {
                            VOID_MODIFIER540=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_var22776); if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(new VoidModifier(VOID_MODIFIER540)); }

                            }
                            break;
                        case 3 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3332:9: FUNCTION_MODIFIER
                            {
                            FUNCTION_MODIFIER541=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_var22796); if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(new FunctionModifier(FUNCTION_MODIFIER541)); }

                            }
                            break;
                        case 4 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3334:9: VALUE_MODIFIER
                            {
                            VALUE_MODIFIER542=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_var22816); if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(new ValueModifier(VALUE_MODIFIER542)); }

                            }
                            break;

                    }


                    pushFollow(FOLLOW_memberName_in_var22844);
                    mn1=memberName();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setIdentifier(mn1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3339:7: (p1= parameters )*
                    loop284:
                    do {
                        int alt284=2;
                        int LA284_0 = input.LA(1);

                        if ( (LA284_0==LPAREN) ) {
                            alt284=1;
                        }


                        switch (alt284) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3340:9: p1= parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_var22874);
                    	    p1=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return variable;

                    	    if ( state.backtracking==0 ) { variable.addParameterList(p1); }

                    	    }
                    	    break;

                    	default :
                    	    break loop284;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3344:7: mn2= memberName
                    {
                    if ( state.backtracking==0 ) { variable.setType( new ValueModifier(null) ); }

                    pushFollow(FOLLOW_memberName_in_var22918);
                    mn2=memberName();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setIdentifier(mn2); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3348:7: mn3= memberName (p3= parameters )+
                    {
                    if ( state.backtracking==0 ) { variable.setType( new FunctionModifier(null) ); }

                    pushFollow(FOLLOW_memberName_in_var22951);
                    mn3=memberName();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setIdentifier(mn3); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3351:7: (p3= parameters )+
                    int cnt285=0;
                    loop285:
                    do {
                        int alt285=2;
                        int LA285_0 = input.LA(1);

                        if ( (LA285_0==LPAREN) ) {
                            alt285=1;
                        }


                        switch (alt285) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3352:9: p3= parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_var22980);
                    	    p3=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return variable;

                    	    if ( state.backtracking==0 ) { variable.addParameterList(p3); }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt285 >= 1 ) break loop285;
                    	    if (state.backtracking>0) {state.failed=true; return variable;}
                                EarlyExitException eee =
                                    new EarlyExitException(285, input);
                                throw eee;
                        }
                        cnt285++;
                    } while (true);


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "var"



    // $ANTLR start "impliedVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3358:1: impliedVariable returns [Variable variable] : memberName ;
    public Variable impliedVariable() throws RecognitionException {
        Variable variable = null;


        Identifier memberName543 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3359:5: ( memberName )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3359:7: memberName
            {
            pushFollow(FOLLOW_memberName_in_impliedVariable23026);
            memberName543=memberName();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { Variable v = new Variable(null);
                    v.setType(new SyntheticVariable(null));
                    v.setIdentifier(memberName543);
                    SpecifierExpression se = new SpecifierExpression(null);
                    Expression e = new Expression(null);
                    BaseMemberExpression bme = new BaseMemberExpression(null);
                    bme.setIdentifier(memberName543);
                    bme.setTypeArguments( new InferredTypeArguments(null) );
                    e.setTerm(bme);
                    se.setExpression(e);
                    v.setSpecifierExpression(se); 
                    variable = v; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "impliedVariable"



    // $ANTLR start "metaLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3375:1: metaLiteral returns [MetaLiteral meta] : d1= BACKTICK ( MODULE p1= packagePath | PACKAGE p2= packagePath | CLASS_DEFINITION (ct= type |ot= memberName ) | INTERFACE_DEFINITION it= type | ALIAS at= type | TYPE_CONSTRAINT tt= type | ( VALUE_MODIFIER | OBJECT_DEFINITION ) ( (vt= type |vom= memberName ) vo= MEMBER_OP )? vm= memberName (ta6= typeArguments )? | FUNCTION_MODIFIER ( (ft= type |fom= memberName ) fo= MEMBER_OP )? fm= memberName (ta5= typeArguments )? | ( abbreviatedType MEMBER_OP )=>at= abbreviatedType o1= MEMBER_OP m1= memberName (ta1= typeArguments )? | ( groupedType MEMBER_OP )=>gt= groupedType o2= MEMBER_OP m2= memberName (ta2= typeArguments )? | ( memberName MEMBER_OP )=>mn= memberName o1= MEMBER_OP m4= memberName (ta1= typeArguments )? |t= type |m3= memberName (ta3= typeArguments )? ) d2= BACKTICK ;
    public MetaLiteral metaLiteral() throws RecognitionException {
        MetaLiteral meta = null;


        Token d1=null;
        Token vo=null;
        Token fo=null;
        Token o1=null;
        Token o2=null;
        Token d2=null;
        Token MODULE544=null;
        Token PACKAGE545=null;
        Token CLASS_DEFINITION546=null;
        Token INTERFACE_DEFINITION547=null;
        Token ALIAS548=null;
        Token TYPE_CONSTRAINT549=null;
        Token VALUE_MODIFIER550=null;
        Token OBJECT_DEFINITION551=null;
        Token FUNCTION_MODIFIER552=null;
        ImportPath p1 =null;

        ImportPath p2 =null;

        StaticType ct =null;

        Identifier ot =null;

        StaticType it =null;

        StaticType at =null;

        StaticType tt =null;

        StaticType vt =null;

        Identifier vom =null;

        Identifier vm =null;

        TypeArgumentList ta6 =null;

        StaticType ft =null;

        Identifier fom =null;

        Identifier fm =null;

        TypeArgumentList ta5 =null;

        Identifier m1 =null;

        TypeArgumentList ta1 =null;

        GroupedType gt =null;

        Identifier m2 =null;

        TypeArgumentList ta2 =null;

        Identifier mn =null;

        Identifier m4 =null;

        StaticType t =null;

        Identifier m3 =null;

        TypeArgumentList ta3 =null;


         TypeLiteral tl=null; 
                    MemberLiteral ml=null; 
                    PackageLiteral p=null;
                    ModuleLiteral m=null; 
                    ClassLiteral c=null;
                    InterfaceLiteral i=null;
                    AliasLiteral a=null;
                    TypeParameterLiteral tp=null;
                    ValueLiteral v=null;
                    FunctionLiteral f=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3386:5: (d1= BACKTICK ( MODULE p1= packagePath | PACKAGE p2= packagePath | CLASS_DEFINITION (ct= type |ot= memberName ) | INTERFACE_DEFINITION it= type | ALIAS at= type | TYPE_CONSTRAINT tt= type | ( VALUE_MODIFIER | OBJECT_DEFINITION ) ( (vt= type |vom= memberName ) vo= MEMBER_OP )? vm= memberName (ta6= typeArguments )? | FUNCTION_MODIFIER ( (ft= type |fom= memberName ) fo= MEMBER_OP )? fm= memberName (ta5= typeArguments )? | ( abbreviatedType MEMBER_OP )=>at= abbreviatedType o1= MEMBER_OP m1= memberName (ta1= typeArguments )? | ( groupedType MEMBER_OP )=>gt= groupedType o2= MEMBER_OP m2= memberName (ta2= typeArguments )? | ( memberName MEMBER_OP )=>mn= memberName o1= MEMBER_OP m4= memberName (ta1= typeArguments )? |t= type |m3= memberName (ta3= typeArguments )? ) d2= BACKTICK )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3386:7: d1= BACKTICK ( MODULE p1= packagePath | PACKAGE p2= packagePath | CLASS_DEFINITION (ct= type |ot= memberName ) | INTERFACE_DEFINITION it= type | ALIAS at= type | TYPE_CONSTRAINT tt= type | ( VALUE_MODIFIER | OBJECT_DEFINITION ) ( (vt= type |vom= memberName ) vo= MEMBER_OP )? vm= memberName (ta6= typeArguments )? | FUNCTION_MODIFIER ( (ft= type |fom= memberName ) fo= MEMBER_OP )? fm= memberName (ta5= typeArguments )? | ( abbreviatedType MEMBER_OP )=>at= abbreviatedType o1= MEMBER_OP m1= memberName (ta1= typeArguments )? | ( groupedType MEMBER_OP )=>gt= groupedType o2= MEMBER_OP m2= memberName (ta2= typeArguments )? | ( memberName MEMBER_OP )=>mn= memberName o1= MEMBER_OP m4= memberName (ta1= typeArguments )? |t= type |m3= memberName (ta3= typeArguments )? ) d2= BACKTICK
            {
            d1=(Token)match(input,BACKTICK,FOLLOW_BACKTICK_in_metaLiteral23068); if (state.failed) return meta;

            if ( state.backtracking==0 ) { tl = new TypeLiteral(d1);
                    meta = tl; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3389:5: ( MODULE p1= packagePath | PACKAGE p2= packagePath | CLASS_DEFINITION (ct= type |ot= memberName ) | INTERFACE_DEFINITION it= type | ALIAS at= type | TYPE_CONSTRAINT tt= type | ( VALUE_MODIFIER | OBJECT_DEFINITION ) ( (vt= type |vom= memberName ) vo= MEMBER_OP )? vm= memberName (ta6= typeArguments )? | FUNCTION_MODIFIER ( (ft= type |fom= memberName ) fo= MEMBER_OP )? fm= memberName (ta5= typeArguments )? | ( abbreviatedType MEMBER_OP )=>at= abbreviatedType o1= MEMBER_OP m1= memberName (ta1= typeArguments )? | ( groupedType MEMBER_OP )=>gt= groupedType o2= MEMBER_OP m2= memberName (ta2= typeArguments )? | ( memberName MEMBER_OP )=>mn= memberName o1= MEMBER_OP m4= memberName (ta1= typeArguments )? |t= type |m3= memberName (ta3= typeArguments )? )
            int alt299=13;
            switch ( input.LA(1) ) {
            case MODULE:
                {
                alt299=1;
                }
                break;
            case PACKAGE:
                {
                alt299=2;
                }
                break;
            case CLASS_DEFINITION:
                {
                alt299=3;
                }
                break;
            case INTERFACE_DEFINITION:
                {
                alt299=4;
                }
                break;
            case ALIAS:
                {
                alt299=5;
                }
                break;
            case TYPE_CONSTRAINT:
                {
                alt299=6;
                }
                break;
            case OBJECT_DEFINITION:
            case VALUE_MODIFIER:
                {
                alt299=7;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt299=8;
                }
                break;
            case UIDENTIFIER:
                {
                int LA299_10 = input.LA(2);

                if ( (synpred30_Ceylon()) ) {
                    alt299=9;
                }
                else if ( (true) ) {
                    alt299=12;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 299, 10, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA299_11 = input.LA(2);

                if ( (synpred30_Ceylon()) ) {
                    alt299=9;
                }
                else if ( (synpred31_Ceylon()) ) {
                    alt299=10;
                }
                else if ( (true) ) {
                    alt299=12;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 299, 11, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA299_12 = input.LA(2);

                if ( (synpred30_Ceylon()) ) {
                    alt299=9;
                }
                else if ( (true) ) {
                    alt299=12;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 299, 12, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA299_13 = input.LA(2);

                if ( (synpred30_Ceylon()) ) {
                    alt299=9;
                }
                else if ( (true) ) {
                    alt299=12;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 299, 13, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA299_14 = input.LA(2);

                if ( (synpred32_Ceylon()) ) {
                    alt299=11;
                }
                else if ( (true) ) {
                    alt299=13;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 299, 14, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return meta;}
                NoViableAltException nvae =
                    new NoViableAltException("", 299, 0, input);

                throw nvae;

            }

            switch (alt299) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3390:7: MODULE p1= packagePath
                    {
                    MODULE544=(Token)match(input,MODULE,FOLLOW_MODULE_in_metaLiteral23090); if (state.failed) return meta;

                    if ( state.backtracking==0 ) { m = new ModuleLiteral(d1);
                            m.setEndToken(MODULE544); 
                            meta =m; }

                    pushFollow(FOLLOW_packagePath_in_metaLiteral23108);
                    p1=packagePath();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { m.setImportPath(p1); 
                            m.setEndToken(null); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3398:7: PACKAGE p2= packagePath
                    {
                    PACKAGE545=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_metaLiteral23130); if (state.failed) return meta;

                    if ( state.backtracking==0 ) { p = new PackageLiteral(d1);
                            p.setEndToken(PACKAGE545); 
                            meta =p; }

                    pushFollow(FOLLOW_packagePath_in_metaLiteral23148);
                    p2=packagePath();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { p.setImportPath(p2); 
                            p.setEndToken(null); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3406:7: CLASS_DEFINITION (ct= type |ot= memberName )
                    {
                    CLASS_DEFINITION546=(Token)match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_metaLiteral23170); if (state.failed) return meta;

                    if ( state.backtracking==0 ) { c = new ClassLiteral(d1);
                            c.setEndToken(CLASS_DEFINITION546); 
                            meta =c; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3410:7: (ct= type |ot= memberName )
                    int alt287=2;
                    int LA287_0 = input.LA(1);

                    if ( ((LA287_0 >= LBRACE && LA287_0 <= LBRACKET)||LA287_0==SMALLER_OP||LA287_0==UIDENTIFIER) ) {
                        alt287=1;
                    }
                    else if ( (LA287_0==LIDENTIFIER) ) {
                        alt287=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return meta;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 287, 0, input);

                        throw nvae;

                    }
                    switch (alt287) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3411:9: ct= type
                            {
                            pushFollow(FOLLOW_type_in_metaLiteral23198);
                            ct=type();

                            state._fsp--;
                            if (state.failed) return meta;

                            if ( state.backtracking==0 ) { c.setType(ct); 
                                      c.setEndToken(null); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3415:9: ot= memberName
                            {
                            pushFollow(FOLLOW_memberName_in_metaLiteral23228);
                            ot=memberName();

                            state._fsp--;
                            if (state.failed) return meta;

                            if ( state.backtracking==0 ) { BaseMemberExpression bme = new BaseMemberExpression(null);
                                      bme.setIdentifier(ot);
                                      bme.setTypeArguments(new InferredTypeArguments(null));
                                      c.setObjectExpression(bme); }

                            }
                            break;

                    }


                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3422:7: INTERFACE_DEFINITION it= type
                    {
                    INTERFACE_DEFINITION547=(Token)match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_metaLiteral23260); if (state.failed) return meta;

                    if ( state.backtracking==0 ) { i = new InterfaceLiteral(d1);
                            i.setEndToken(INTERFACE_DEFINITION547); 
                            meta =i; }

                    pushFollow(FOLLOW_type_in_metaLiteral23278);
                    it=type();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { i.setType(it); 
                            i.setEndToken(null); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3430:7: ALIAS at= type
                    {
                    ALIAS548=(Token)match(input,ALIAS,FOLLOW_ALIAS_in_metaLiteral23300); if (state.failed) return meta;

                    if ( state.backtracking==0 ) { a = new AliasLiteral(d1);
                            a.setEndToken(ALIAS548); 
                            meta =a; }

                    pushFollow(FOLLOW_type_in_metaLiteral23318);
                    at=type();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { a.setType(at); 
                            a.setEndToken(null); }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3438:7: TYPE_CONSTRAINT tt= type
                    {
                    TYPE_CONSTRAINT549=(Token)match(input,TYPE_CONSTRAINT,FOLLOW_TYPE_CONSTRAINT_in_metaLiteral23340); if (state.failed) return meta;

                    if ( state.backtracking==0 ) { tp = new TypeParameterLiteral(d1);
                            tp.setEndToken(TYPE_CONSTRAINT549); 
                            meta =tp; }

                    pushFollow(FOLLOW_type_in_metaLiteral23358);
                    tt=type();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { tp.setType(tt); 
                            tp.setEndToken(null); }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3446:7: ( VALUE_MODIFIER | OBJECT_DEFINITION ) ( (vt= type |vom= memberName ) vo= MEMBER_OP )? vm= memberName (ta6= typeArguments )?
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3446:7: ( VALUE_MODIFIER | OBJECT_DEFINITION )
                    int alt288=2;
                    int LA288_0 = input.LA(1);

                    if ( (LA288_0==VALUE_MODIFIER) ) {
                        alt288=1;
                    }
                    else if ( (LA288_0==OBJECT_DEFINITION) ) {
                        alt288=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return meta;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 288, 0, input);

                        throw nvae;

                    }
                    switch (alt288) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3447:9: VALUE_MODIFIER
                            {
                            VALUE_MODIFIER550=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_metaLiteral23390); if (state.failed) return meta;

                            if ( state.backtracking==0 ) { v = new ValueLiteral(d1);
                                      v.setEndToken(VALUE_MODIFIER550); 
                                      meta =v; }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3452:9: OBJECT_DEFINITION
                            {
                            OBJECT_DEFINITION551=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_metaLiteral23418); if (state.failed) return meta;

                            if ( state.backtracking==0 ) { v = new ValueLiteral(d1);
                                      v.setEndToken(OBJECT_DEFINITION551);
                                      v.setBroken(true); 
                                      meta =v; }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3458:7: ( (vt= type |vom= memberName ) vo= MEMBER_OP )?
                    int alt290=2;
                    int LA290_0 = input.LA(1);

                    if ( ((LA290_0 >= LBRACE && LA290_0 <= LBRACKET)||LA290_0==SMALLER_OP||LA290_0==UIDENTIFIER) ) {
                        alt290=1;
                    }
                    else if ( (LA290_0==LIDENTIFIER) ) {
                        int LA290_2 = input.LA(2);

                        if ( (LA290_2==MEMBER_OP) ) {
                            alt290=1;
                        }
                    }
                    switch (alt290) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3459:9: (vt= type |vom= memberName ) vo= MEMBER_OP
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3459:9: (vt= type |vom= memberName )
                            int alt289=2;
                            int LA289_0 = input.LA(1);

                            if ( ((LA289_0 >= LBRACE && LA289_0 <= LBRACKET)||LA289_0==SMALLER_OP||LA289_0==UIDENTIFIER) ) {
                                alt289=1;
                            }
                            else if ( (LA289_0==LIDENTIFIER) ) {
                                alt289=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return meta;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 289, 0, input);

                                throw nvae;

                            }
                            switch (alt289) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3460:11: vt= type
                                    {
                                    pushFollow(FOLLOW_type_in_metaLiteral23468);
                                    vt=type();

                                    state._fsp--;
                                    if (state.failed) return meta;

                                    if ( state.backtracking==0 ) { v.setType(vt); 
                                                v.setEndToken(null); }

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3464:11: vom= memberName
                                    {
                                    pushFollow(FOLLOW_memberName_in_metaLiteral23504);
                                    vom=memberName();

                                    state._fsp--;
                                    if (state.failed) return meta;

                                    if ( state.backtracking==0 ) { BaseMemberExpression bme = new BaseMemberExpression(null);
                                                bme.setIdentifier(vom);
                                                bme.setTypeArguments(new InferredTypeArguments(null));
                                                v.setObjectExpression(bme);
                                                v.setEndToken(null); }

                                    }
                                    break;

                            }


                            vo=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_metaLiteral23538); if (state.failed) return meta;

                            if ( state.backtracking==0 ) { v.setEndToken(vo); }

                            }
                            break;

                    }


                    pushFollow(FOLLOW_memberName_in_metaLiteral23567);
                    vm=memberName();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { v.setIdentifier(vm); 
                            v.setEndToken(null); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3477:7: (ta6= typeArguments )?
                    int alt291=2;
                    int LA291_0 = input.LA(1);

                    if ( (LA291_0==SMALLER_OP) ) {
                        alt291=1;
                    }
                    switch (alt291) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3479:9: ta6= typeArguments
                            {
                            pushFollow(FOLLOW_typeArguments_in_metaLiteral23604);
                            ta6=typeArguments();

                            state._fsp--;
                            if (state.failed) return meta;

                            if ( state.backtracking==0 ) { v.setTypeArgumentList(ta6); }

                            }
                            break;

                    }


                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3483:7: FUNCTION_MODIFIER ( (ft= type |fom= memberName ) fo= MEMBER_OP )? fm= memberName (ta5= typeArguments )?
                    {
                    FUNCTION_MODIFIER552=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_metaLiteral23637); if (state.failed) return meta;

                    if ( state.backtracking==0 ) { f = new FunctionLiteral(d1);
                            f.setEndToken(FUNCTION_MODIFIER552); 
                            meta =f; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3487:7: ( (ft= type |fom= memberName ) fo= MEMBER_OP )?
                    int alt293=2;
                    int LA293_0 = input.LA(1);

                    if ( ((LA293_0 >= LBRACE && LA293_0 <= LBRACKET)||LA293_0==SMALLER_OP||LA293_0==UIDENTIFIER) ) {
                        alt293=1;
                    }
                    else if ( (LA293_0==LIDENTIFIER) ) {
                        int LA293_2 = input.LA(2);

                        if ( (LA293_2==MEMBER_OP) ) {
                            alt293=1;
                        }
                    }
                    switch (alt293) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3488:9: (ft= type |fom= memberName ) fo= MEMBER_OP
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3488:9: (ft= type |fom= memberName )
                            int alt292=2;
                            int LA292_0 = input.LA(1);

                            if ( ((LA292_0 >= LBRACE && LA292_0 <= LBRACKET)||LA292_0==SMALLER_OP||LA292_0==UIDENTIFIER) ) {
                                alt292=1;
                            }
                            else if ( (LA292_0==LIDENTIFIER) ) {
                                alt292=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return meta;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 292, 0, input);

                                throw nvae;

                            }
                            switch (alt292) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3489:11: ft= type
                                    {
                                    pushFollow(FOLLOW_type_in_metaLiteral23677);
                                    ft=type();

                                    state._fsp--;
                                    if (state.failed) return meta;

                                    if ( state.backtracking==0 ) { f.setType(ft); 
                                                f.setEndToken(null); }

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3493:11: fom= memberName
                                    {
                                    pushFollow(FOLLOW_memberName_in_metaLiteral23713);
                                    fom=memberName();

                                    state._fsp--;
                                    if (state.failed) return meta;

                                    if ( state.backtracking==0 ) { BaseMemberExpression bme = new BaseMemberExpression(null);
                                                bme.setIdentifier(fom);
                                                bme.setTypeArguments(new InferredTypeArguments(null));
                                                f.setObjectExpression(bme);
                                                f.setEndToken(null); }

                                    }
                                    break;

                            }


                            fo=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_metaLiteral23747); if (state.failed) return meta;

                            if ( state.backtracking==0 ) { f.setEndToken(fo); }

                            }
                            break;

                    }


                    pushFollow(FOLLOW_memberName_in_metaLiteral23776);
                    fm=memberName();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { f.setIdentifier(fm); 
                            f.setEndToken(null); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3506:7: (ta5= typeArguments )?
                    int alt294=2;
                    int LA294_0 = input.LA(1);

                    if ( (LA294_0==SMALLER_OP) ) {
                        alt294=1;
                    }
                    switch (alt294) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3508:9: ta5= typeArguments
                            {
                            pushFollow(FOLLOW_typeArguments_in_metaLiteral23813);
                            ta5=typeArguments();

                            state._fsp--;
                            if (state.failed) return meta;

                            if ( state.backtracking==0 ) { f.setTypeArgumentList(ta5); }

                            }
                            break;

                    }


                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3512:7: ( abbreviatedType MEMBER_OP )=>at= abbreviatedType o1= MEMBER_OP m1= memberName (ta1= typeArguments )?
                    {
                    if ( state.backtracking==0 ) { ml = new MemberLiteral(d1);
                            meta = ml; }

                    pushFollow(FOLLOW_abbreviatedType_in_metaLiteral23870);
                    at=abbreviatedType();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { ml.setType(at); }

                    o1=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_metaLiteral23888); if (state.failed) return meta;

                    if ( state.backtracking==0 ) { ml.setEndToken(o1); }

                    pushFollow(FOLLOW_memberName_in_metaLiteral23906);
                    m1=memberName();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { ml.setIdentifier(m1); 
                            ml.setEndToken(null); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3522:7: (ta1= typeArguments )?
                    int alt295=2;
                    int LA295_0 = input.LA(1);

                    if ( (LA295_0==SMALLER_OP) ) {
                        alt295=1;
                    }
                    switch (alt295) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3523:9: ta1= typeArguments
                            {
                            pushFollow(FOLLOW_typeArguments_in_metaLiteral23934);
                            ta1=typeArguments();

                            state._fsp--;
                            if (state.failed) return meta;

                            if ( state.backtracking==0 ) { ml.setTypeArgumentList(ta1); }

                            }
                            break;

                    }


                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3527:7: ( groupedType MEMBER_OP )=>gt= groupedType o2= MEMBER_OP m2= memberName (ta2= typeArguments )?
                    {
                    if ( state.backtracking==0 ) { ml = new MemberLiteral(d1);
                            meta = ml; }

                    pushFollow(FOLLOW_groupedType_in_metaLiteral23992);
                    gt=groupedType();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { ml.setType(gt); }

                    o2=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_metaLiteral24010); if (state.failed) return meta;

                    if ( state.backtracking==0 ) { ml.setEndToken(o2); }

                    pushFollow(FOLLOW_memberName_in_metaLiteral24028);
                    m2=memberName();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { ml.setIdentifier(m2); 
                            ml.setEndToken(null); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3537:7: (ta2= typeArguments )?
                    int alt296=2;
                    int LA296_0 = input.LA(1);

                    if ( (LA296_0==SMALLER_OP) ) {
                        alt296=1;
                    }
                    switch (alt296) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3538:9: ta2= typeArguments
                            {
                            pushFollow(FOLLOW_typeArguments_in_metaLiteral24056);
                            ta2=typeArguments();

                            state._fsp--;
                            if (state.failed) return meta;

                            if ( state.backtracking==0 ) { ml.setTypeArgumentList(ta2); }

                            }
                            break;

                    }


                    }
                    break;
                case 11 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3542:7: ( memberName MEMBER_OP )=>mn= memberName o1= MEMBER_OP m4= memberName (ta1= typeArguments )?
                    {
                    if ( state.backtracking==0 ) { ml = new MemberLiteral(d1);
                            meta = ml; }

                    pushFollow(FOLLOW_memberName_in_metaLiteral24113);
                    mn=memberName();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { BaseMemberExpression bme = new BaseMemberExpression(null);
                            bme.setIdentifier(mn);
                            bme.setTypeArguments(new InferredTypeArguments(null));
                            ml.setObjectExpression(bme); }

                    o1=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_metaLiteral24131); if (state.failed) return meta;

                    if ( state.backtracking==0 ) { ml.setEndToken(o1); }

                    pushFollow(FOLLOW_memberName_in_metaLiteral24149);
                    m4=memberName();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { ml.setIdentifier(m4); 
                            ml.setEndToken(null); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3555:7: (ta1= typeArguments )?
                    int alt297=2;
                    int LA297_0 = input.LA(1);

                    if ( (LA297_0==SMALLER_OP) ) {
                        alt297=1;
                    }
                    switch (alt297) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3556:9: ta1= typeArguments
                            {
                            pushFollow(FOLLOW_typeArguments_in_metaLiteral24177);
                            ta1=typeArguments();

                            state._fsp--;
                            if (state.failed) return meta;

                            if ( state.backtracking==0 ) { ml.setTypeArgumentList(ta1); }

                            }
                            break;

                    }


                    }
                    break;
                case 12 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3560:7: t= type
                    {
                    pushFollow(FOLLOW_type_in_metaLiteral24213);
                    t=type();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { tl = new TypeLiteral(d1);
                            meta = tl;
                            tl.setType(t); }

                    }
                    break;
                case 13 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3565:7: m3= memberName (ta3= typeArguments )?
                    {
                    pushFollow(FOLLOW_memberName_in_metaLiteral24238);
                    m3=memberName();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { ml = new MemberLiteral(d1);
                            meta = ml;
                            ml.setIdentifier(m3); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3569:7: (ta3= typeArguments )?
                    int alt298=2;
                    int LA298_0 = input.LA(1);

                    if ( (LA298_0==SMALLER_OP) ) {
                        alt298=1;
                    }
                    switch (alt298) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3570:9: ta3= typeArguments
                            {
                            pushFollow(FOLLOW_typeArguments_in_metaLiteral24266);
                            ta3=typeArguments();

                            state._fsp--;
                            if (state.failed) return meta;

                            if ( state.backtracking==0 ) { ml.setTypeArgumentList(ta3); }

                            }
                            break;

                    }


                    }
                    break;

            }


            d2=(Token)match(input,BACKTICK,FOLLOW_BACKTICK_in_metaLiteral24301); if (state.failed) return meta;

            if ( state.backtracking==0 ) { meta.setEndToken(d2); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return meta;
    }
    // $ANTLR end "metaLiteral"

    // $ANTLR start synpred1_Ceylon
    public void synpred1_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:76:9: ( compilerAnnotations annotations MODULE )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:76:10: compilerAnnotations annotations MODULE
        {
        pushFollow(FOLLOW_compilerAnnotations_in_synpred1_Ceylon164);
        compilerAnnotations();

        state._fsp--;
        if (state.failed) return ;

        pushFollow(FOLLOW_annotations_in_synpred1_Ceylon166);
        annotations();

        state._fsp--;
        if (state.failed) return ;

        match(input,MODULE,FOLLOW_MODULE_in_synpred1_Ceylon168); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred1_Ceylon

    // $ANTLR start synpred2_Ceylon
    public void synpred2_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:80:9: ( compilerAnnotations annotations PACKAGE )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:80:10: compilerAnnotations annotations PACKAGE
        {
        pushFollow(FOLLOW_compilerAnnotations_in_synpred2_Ceylon210);
        compilerAnnotations();

        state._fsp--;
        if (state.failed) return ;

        pushFollow(FOLLOW_annotations_in_synpred2_Ceylon212);
        annotations();

        state._fsp--;
        if (state.failed) return ;

        match(input,PACKAGE,FOLLOW_PACKAGE_in_synpred2_Ceylon214); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred2_Ceylon

    // $ANTLR start synpred3_Ceylon
    public void synpred3_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1047:9: ( annotatedDeclarationStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1047:10: annotatedDeclarationStart
        {
        pushFollow(FOLLOW_annotatedDeclarationStart_in_synpred3_Ceylon6862);
        annotatedDeclarationStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred3_Ceylon

    // $ANTLR start synpred4_Ceylon
    public void synpred4_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1049:9: ( annotatedAssertionStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1049:10: annotatedAssertionStart
        {
        pushFollow(FOLLOW_annotatedAssertionStart_in_synpred4_Ceylon6890);
        annotatedAssertionStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred4_Ceylon

    // $ANTLR start synpred5_Ceylon
    public void synpred5_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1051:9: ( annotationListStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1051:10: annotationListStart
        {
        pushFollow(FOLLOW_annotationListStart_in_synpred5_Ceylon6916);
        annotationListStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred5_Ceylon

    // $ANTLR start synpred6_Ceylon
    public void synpred6_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1067:7: ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )
        int alt300=2;
        int LA300_0 = input.LA(1);

        if ( (LA300_0==INTERFACE_DEFINITION) ) {
            alt300=1;
        }
        else if ( (LA300_0==DYNAMIC) ) {
            alt300=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 300, 0, input);

            throw nvae;

        }
        switch (alt300) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1067:8: INTERFACE_DEFINITION
                {
                match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_synpred6_Ceylon7041); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1067:29: DYNAMIC UIDENTIFIER
                {
                match(input,DYNAMIC,FOLLOW_DYNAMIC_in_synpred6_Ceylon7043); if (state.failed) return ;

                match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_synpred6_Ceylon7045); if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred6_Ceylon

    // $ANTLR start synpred7_Ceylon
    public void synpred7_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1091:8: ( unambiguousType )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1091:9: unambiguousType
        {
        pushFollow(FOLLOW_unambiguousType_in_synpred7_Ceylon7204);
        unambiguousType();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred7_Ceylon

    // $ANTLR start synpred8_Ceylon
    public void synpred8_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1371:9: ( specifierParametersStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1371:10: specifierParametersStart
        {
        pushFollow(FOLLOW_specifierParametersStart_in_synpred8_Ceylon9014);
        specifierParametersStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred8_Ceylon

    // $ANTLR start synpred9_Ceylon
    public void synpred9_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1418:9: (~ ( LIDENTIFIER | UIDENTIFIER ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:
        {
        if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= LET)||(input.LA(1) >= LINE_COMMENT && input.LA(1) <= TYPE_CONSTRAINT)||(input.LA(1) >= UIdentifierPrefix && input.LA(1) <= WS) ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred9_Ceylon

    // $ANTLR start synpred10_Ceylon
    public void synpred10_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1463:9: ( namedArgumentStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1463:10: namedArgumentStart
        {
        pushFollow(FOLLOW_namedArgumentStart_in_synpred10_Ceylon9556);
        namedArgumentStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred10_Ceylon

    // $ANTLR start synpred11_Ceylon
    public void synpred11_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1467:9: ( anonymousArgument )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1467:10: anonymousArgument
        {
        pushFollow(FOLLOW_anonymousArgument_in_synpred11_Ceylon9591);
        anonymousArgument();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred11_Ceylon

    // $ANTLR start synpred12_Ceylon
    public void synpred12_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1511:9: ( typeArgumentsStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1511:10: typeArgumentsStart
        {
        pushFollow(FOLLOW_typeArgumentsStart_in_synpred12_Ceylon9919);
        typeArgumentsStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred12_Ceylon

    // $ANTLR start synpred13_Ceylon
    public void synpred13_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1522:9: ( typeArgumentsStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1522:10: typeArgumentsStart
        {
        pushFollow(FOLLOW_typeArgumentsStart_in_synpred13_Ceylon10000);
        typeArgumentsStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred13_Ceylon

    // $ANTLR start synpred14_Ceylon
    public void synpred14_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1599:9: ( namedArgumentStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1599:10: namedArgumentStart
        {
        pushFollow(FOLLOW_namedArgumentStart_in_synpred14_Ceylon10482);
        namedArgumentStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred14_Ceylon

    // $ANTLR start synpred15_Ceylon
    public void synpred15_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1603:9: ( anonymousArgument )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1603:10: anonymousArgument
        {
        pushFollow(FOLLOW_anonymousArgument_in_synpred15_Ceylon10517);
        anonymousArgument();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred15_Ceylon

    // $ANTLR start synpred16_Ceylon
    public void synpred16_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1885:15: ( namedArgumentStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1885:16: namedArgumentStart
        {
        pushFollow(FOLLOW_namedArgumentStart_in_synpred16_Ceylon12837);
        namedArgumentStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred16_Ceylon

    // $ANTLR start synpred17_Ceylon
    public void synpred17_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1952:7: ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )
        int alt301=3;
        switch ( input.LA(1) ) {
        case FUNCTION_MODIFIER:
            {
            alt301=1;
            }
            break;
        case VOID_MODIFIER:
            {
            alt301=2;
            }
            break;
        case LPAREN:
            {
            alt301=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 301, 0, input);

            throw nvae;

        }

        switch (alt301) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1952:8: FUNCTION_MODIFIER
                {
                match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_synpred17_Ceylon13257); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1952:26: VOID_MODIFIER
                {
                match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_synpred17_Ceylon13259); if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1952:40: anonParametersStart
                {
                pushFollow(FOLLOW_anonParametersStart_in_synpred17_Ceylon13261);
                anonParametersStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred17_Ceylon

    // $ANTLR start synpred18_Ceylon
    public void synpred18_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2545:7: ( unionType ( PRODUCT_OP | SUM_OP ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2545:8: unionType ( PRODUCT_OP | SUM_OP )
        {
        pushFollow(FOLLOW_unionType_in_synpred18_Ceylon17463);
        unionType();

        state._fsp--;
        if (state.failed) return ;

        if ( input.LA(1)==PRODUCT_OP||input.LA(1)==SUM_OP ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred18_Ceylon

    // $ANTLR start synpred19_Ceylon
    public void synpred19_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2567:7: ( type ( SPECIFY ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2567:8: type ( SPECIFY )
        {
        pushFollow(FOLLOW_type_in_synpred19_Ceylon17594);
        type();

        state._fsp--;
        if (state.failed) return ;

        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2567:13: ( SPECIFY )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2567:14: SPECIFY
        {
        match(input,SPECIFY,FOLLOW_SPECIFY_in_synpred19_Ceylon17597); if (state.failed) return ;

        }


        }

    }
    // $ANTLR end synpred19_Ceylon

    // $ANTLR start synpred20_Ceylon
    public void synpred20_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2825:7: ( namedAnnotationArgumentsStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2825:8: namedAnnotationArgumentsStart
        {
        pushFollow(FOLLOW_namedAnnotationArgumentsStart_in_synpred20_Ceylon19267);
        namedAnnotationArgumentsStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred20_Ceylon

    // $ANTLR start synpred21_Ceylon
    public void synpred21_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2904:7: ( compilerAnnotations ( declarationStart | specificationStart ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2904:8: compilerAnnotations ( declarationStart | specificationStart )
        {
        pushFollow(FOLLOW_compilerAnnotations_in_synpred21_Ceylon19853);
        compilerAnnotations();

        state._fsp--;
        if (state.failed) return ;

        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2904:28: ( declarationStart | specificationStart )
        int alt302=2;
        int LA302_0 = input.LA(1);

        if ( (LA302_0==ALIAS||LA302_0==ASSIGN||LA302_0==CLASS_DEFINITION||LA302_0==DYNAMIC||LA302_0==FUNCTION_MODIFIER||LA302_0==INTERFACE_DEFINITION||(LA302_0 >= LBRACE && LA302_0 <= LBRACKET)||LA302_0==OBJECT_DEFINITION||LA302_0==SMALLER_OP||LA302_0==UIDENTIFIER||LA302_0==VALUE_MODIFIER||LA302_0==VOID_MODIFIER) ) {
            alt302=1;
        }
        else if ( (LA302_0==LIDENTIFIER) ) {
            alt302=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 302, 0, input);

            throw nvae;

        }
        switch (alt302) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2904:29: declarationStart
                {
                pushFollow(FOLLOW_declarationStart_in_synpred21_Ceylon19856);
                declarationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2904:46: specificationStart
                {
                pushFollow(FOLLOW_specificationStart_in_synpred21_Ceylon19858);
                specificationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }

    }
    // $ANTLR end synpred21_Ceylon

    // $ANTLR start synpred22_Ceylon
    public void synpred22_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2908:9: ( LIDENTIFIER )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2908:10: LIDENTIFIER
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred22_Ceylon19903); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred22_Ceylon

    // $ANTLR start synpred23_Ceylon
    public void synpred23_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2918:7: ( compilerAnnotations ( declarationStart | specificationStart ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2918:8: compilerAnnotations ( declarationStart | specificationStart )
        {
        pushFollow(FOLLOW_compilerAnnotations_in_synpred23_Ceylon19986);
        compilerAnnotations();

        state._fsp--;
        if (state.failed) return ;

        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2918:28: ( declarationStart | specificationStart )
        int alt303=2;
        int LA303_0 = input.LA(1);

        if ( (LA303_0==ALIAS||LA303_0==ASSIGN||LA303_0==CLASS_DEFINITION||LA303_0==DYNAMIC||LA303_0==FUNCTION_MODIFIER||LA303_0==INTERFACE_DEFINITION||(LA303_0 >= LBRACE && LA303_0 <= LBRACKET)||LA303_0==OBJECT_DEFINITION||LA303_0==SMALLER_OP||LA303_0==UIDENTIFIER||LA303_0==VALUE_MODIFIER||LA303_0==VOID_MODIFIER) ) {
            alt303=1;
        }
        else if ( (LA303_0==LIDENTIFIER) ) {
            alt303=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 303, 0, input);

            throw nvae;

        }
        switch (alt303) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2918:29: declarationStart
                {
                pushFollow(FOLLOW_declarationStart_in_synpred23_Ceylon19989);
                declarationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2918:46: specificationStart
                {
                pushFollow(FOLLOW_specificationStart_in_synpred23_Ceylon19991);
                specificationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }

    }
    // $ANTLR end synpred23_Ceylon

    // $ANTLR start synpred24_Ceylon
    public void synpred24_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2922:7: ( LIDENTIFIER )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2922:8: LIDENTIFIER
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred24_Ceylon20028); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred24_Ceylon

    // $ANTLR start synpred25_Ceylon
    public void synpred25_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2940:7: ( LIDENTIFIER SPECIFY )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2940:8: LIDENTIFIER SPECIFY
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred25_Ceylon20155); if (state.failed) return ;

        match(input,SPECIFY,FOLLOW_SPECIFY_in_synpred25_Ceylon20157); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred25_Ceylon

    // $ANTLR start synpred26_Ceylon
    public void synpred26_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2983:9: ( LBRACE )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2983:10: LBRACE
        {
        match(input,LBRACE,FOLLOW_LBRACE_in_synpred26_Ceylon20462); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred26_Ceylon

    // $ANTLR start synpred27_Ceylon
    public void synpred27_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3119:7: ( IS_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3119:8: IS_OP
        {
        match(input,IS_OP,FOLLOW_IS_OP_in_synpred27_Ceylon21264); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred27_Ceylon

    // $ANTLR start synpred28_Ceylon
    public void synpred28_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3121:7: ( SATISFIES )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3121:8: SATISFIES
        {
        match(input,SATISFIES,FOLLOW_SATISFIES_in_synpred28_Ceylon21285); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred28_Ceylon

    // $ANTLR start synpred29_Ceylon
    public void synpred29_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3301:9: ( COMPILER_ANNOTATION | declarationStart | specificationStart )
        int alt304=3;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            alt304=1;
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case FUNCTION_MODIFIER:
        case INTERFACE_DEFINITION:
        case LBRACE:
        case LBRACKET:
        case OBJECT_DEFINITION:
        case SMALLER_OP:
        case UIDENTIFIER:
        case VALUE_MODIFIER:
        case VOID_MODIFIER:
            {
            alt304=2;
            }
            break;
        case LIDENTIFIER:
            {
            alt304=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 304, 0, input);

            throw nvae;

        }

        switch (alt304) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3301:10: COMPILER_ANNOTATION
                {
                match(input,COMPILER_ANNOTATION,FOLLOW_COMPILER_ANNOTATION_in_synpred29_Ceylon22552); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3301:30: declarationStart
                {
                pushFollow(FOLLOW_declarationStart_in_synpred29_Ceylon22554);
                declarationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3301:47: specificationStart
                {
                pushFollow(FOLLOW_specificationStart_in_synpred29_Ceylon22556);
                specificationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred29_Ceylon

    // $ANTLR start synpred30_Ceylon
    public void synpred30_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3512:7: ( abbreviatedType MEMBER_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3512:8: abbreviatedType MEMBER_OP
        {
        pushFollow(FOLLOW_abbreviatedType_in_synpred30_Ceylon23847);
        abbreviatedType();

        state._fsp--;
        if (state.failed) return ;

        match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_synpred30_Ceylon23849); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred30_Ceylon

    // $ANTLR start synpred31_Ceylon
    public void synpred31_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3527:7: ( groupedType MEMBER_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3527:8: groupedType MEMBER_OP
        {
        pushFollow(FOLLOW_groupedType_in_synpred31_Ceylon23969);
        groupedType();

        state._fsp--;
        if (state.failed) return ;

        match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_synpred31_Ceylon23971); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred31_Ceylon

    // $ANTLR start synpred32_Ceylon
    public void synpred32_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3542:7: ( memberName MEMBER_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3542:8: memberName MEMBER_OP
        {
        pushFollow(FOLLOW_memberName_in_synpred32_Ceylon24090);
        memberName();

        state._fsp--;
        if (state.failed) return ;

        match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_synpred32_Ceylon24092); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred32_Ceylon

    // Delegated rules

    public boolean synpred24_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred25_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred13_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred9_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred10_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred15_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred7_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred1_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred16_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred12_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred2_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred20_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred6_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred23_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred11_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred14_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred8_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred18_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred31_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred29_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred28_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred30_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred32_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred27_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred4_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred21_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred22_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred26_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred3_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred17_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred5_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred19_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA126 dfa126 = new DFA126(this);
    protected DFA129 dfa129 = new DFA129(this);
    protected DFA138 dfa138 = new DFA138(this);
    protected DFA139 dfa139 = new DFA139(this);
    static final String DFA1_eotS =
        "\10\uffff";
    static final String DFA1_eofS =
        "\1\3\7\uffff";
    static final String DFA1_minS =
        "\1\7\1\105\2\uffff\1\7\1\160\2\7";
    static final String DFA1_maxS =
        "\1\u0083\1\105\2\uffff\1\u0083\1\u0082\2\u0083";
    static final String DFA1_acceptS =
        "\2\uffff\1\1\1\2\4\uffff";
    static final String DFA1_specialS =
        "\10\uffff}>";
    static final String[] DFA1_transitionS = {
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\5\uffff\1\3\1\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff"+
            "\1\3\10\uffff\1\3\5\uffff\1\3\5\uffff\1\3\11\uffff\1\2\1\3\4"+
            "\uffff\1\3\14\uffff\1\3\3\uffff\3\3",
            "\1\4",
            "",
            "",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\10\uffff"+
            "\1\3\5\uffff\1\3\16\uffff\1\5\1\2\1\3\4\uffff\1\3\14\uffff\1"+
            "\3\3\uffff\3\3",
            "\1\6\21\uffff\1\7",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\10\uffff"+
            "\1\3\5\uffff\1\3\17\uffff\1\2\1\3\4\uffff\1\3\14\uffff\1\3\3"+
            "\uffff\3\3",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\10\uffff"+
            "\1\3\5\uffff\1\3\17\uffff\1\2\1\3\4\uffff\1\3\14\uffff\1\3\3"+
            "\uffff\3\3"
    };

    static final short[] DFA1_eot = DFA.unpackEncodedString(DFA1_eotS);
    static final short[] DFA1_eof = DFA.unpackEncodedString(DFA1_eofS);
    static final char[] DFA1_min = DFA.unpackEncodedStringToUnsignedChars(DFA1_minS);
    static final char[] DFA1_max = DFA.unpackEncodedStringToUnsignedChars(DFA1_maxS);
    static final short[] DFA1_accept = DFA.unpackEncodedString(DFA1_acceptS);
    static final short[] DFA1_special = DFA.unpackEncodedString(DFA1_specialS);
    static final short[][] DFA1_transition;

    static {
        int numStates = DFA1_transitionS.length;
        DFA1_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA1_transition[i] = DFA.unpackEncodedString(DFA1_transitionS[i]);
        }
    }

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "66:7: (ca1= compilerAnnotations SEMICOLON )?";
        }
    }
    static final String DFA126_eotS =
        "\77\uffff";
    static final String DFA126_eofS =
        "\77\uffff";
    static final String DFA126_minS =
        "\1\5\72\uffff\1\0\3\uffff";
    static final String DFA126_maxS =
        "\1\u0080\72\uffff\1\0\3\uffff";
    static final String DFA126_acceptS =
        "\1\uffff\1\6\65\uffff\1\1\2\uffff\1\2\1\uffff\1\5\1\3\1\4";
    static final String DFA126_specialS =
        "\73\uffff\1\0\3\uffff}>";
    static final String[] DFA126_transitionS = {
            "\1\1\2\uffff\2\1\12\uffff\1\1\3\uffff\2\1\1\uffff\3\1\2\uffff"+
            "\3\1\3\uffff\6\1\11\uffff\1\1\2\uffff\1\1\1\uffff\4\1\2\uffff"+
            "\2\1\1\74\1\72\4\uffff\1\73\1\uffff\1\67\1\uffff\1\1\4\uffff"+
            "\2\1\3\uffff\2\1\4\uffff\10\1\1\uffff\1\1\1\67\7\1\1\67\1\1"+
            "\1\uffff\1\1\1\uffff\2\1\3\uffff\1\1\6\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] DFA126_eot = DFA.unpackEncodedString(DFA126_eotS);
    static final short[] DFA126_eof = DFA.unpackEncodedString(DFA126_eofS);
    static final char[] DFA126_min = DFA.unpackEncodedStringToUnsignedChars(DFA126_minS);
    static final char[] DFA126_max = DFA.unpackEncodedStringToUnsignedChars(DFA126_maxS);
    static final short[] DFA126_accept = DFA.unpackEncodedString(DFA126_acceptS);
    static final short[] DFA126_special = DFA.unpackEncodedString(DFA126_specialS);
    static final short[][] DFA126_transition;

    static {
        int numStates = DFA126_transitionS.length;
        DFA126_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA126_transition[i] = DFA.unpackEncodedString(DFA126_transitionS[i]);
        }
    }

    class DFA126 extends DFA {

        public DFA126(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 126;
            this.eot = DFA126_eot;
            this.eof = DFA126_eof;
            this.min = DFA126_min;
            this.max = DFA126_max;
            this.accept = DFA126_accept;
            this.special = DFA126_special;
            this.transition = DFA126_transition;
        }
        public String getDescription() {
            return "()* loopback of 1352:5: ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA126_59 = input.LA(1);

                         
                        int index126_59 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred8_Ceylon()) ) {s = 61;}

                        else if ( (true) ) {s = 62;}

                         
                        input.seek(index126_59);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 126, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA129_eotS =
        "\77\uffff";
    static final String DFA129_eofS =
        "\77\uffff";
    static final String DFA129_minS =
        "\1\5\76\uffff";
    static final String DFA129_maxS =
        "\1\u0080\76\uffff";
    static final String DFA129_acceptS =
        "\1\uffff\1\1\1\2\74\3";
    static final String DFA129_specialS =
        "\1\0\76\uffff}>";
    static final String[] DFA129_transitionS = {
            "\1\53\2\uffff\1\46\1\63\12\uffff\1\42\3\uffff\1\7\1\31\1\uffff"+
            "\1\12\1\62\1\65\2\uffff\1\3\1\22\1\56\3\uffff\1\23\1\50\1\26"+
            "\1\43\1\27\1\40\11\uffff\1\45\2\uffff\1\4\1\uffff\1\6\1\60\1"+
            "\32\1\37\2\uffff\1\34\1\33\1\76\1\74\1\uffff\1\1\2\uffff\1\75"+
            "\1\uffff\1\71\1\uffff\1\55\4\uffff\1\30\1\44\3\uffff\1\47\1"+
            "\64\4\uffff\1\5\1\15\1\16\1\24\1\13\1\14\1\17\1\57\1\uffff\1"+
            "\11\1\72\1\41\1\20\1\25\1\66\1\36\1\35\1\52\1\73\1\70\1\uffff"+
            "\1\67\1\uffff\1\54\1\21\3\uffff\1\51\4\uffff\1\2\1\uffff\1\10"+
            "\1\61",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA129_eot = DFA.unpackEncodedString(DFA129_eotS);
    static final short[] DFA129_eof = DFA.unpackEncodedString(DFA129_eofS);
    static final char[] DFA129_min = DFA.unpackEncodedStringToUnsignedChars(DFA129_minS);
    static final char[] DFA129_max = DFA.unpackEncodedStringToUnsignedChars(DFA129_maxS);
    static final short[] DFA129_accept = DFA.unpackEncodedString(DFA129_acceptS);
    static final short[] DFA129_special = DFA.unpackEncodedString(DFA129_specialS);
    static final short[][] DFA129_transition;

    static {
        int numStates = DFA129_transitionS.length;
        DFA129_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA129_transition[i] = DFA.unpackEncodedString(DFA129_transitionS[i]);
        }
    }

    class DFA129 extends DFA {

        public DFA129(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 129;
            this.eot = DFA129_eot;
            this.eof = DFA129_eof;
            this.min = DFA129_min;
            this.max = DFA129_max;
            this.accept = DFA129_accept;
            this.special = DFA129_special;
            this.transition = DFA129_transition;
        }
        public String getDescription() {
            return "1410:7: ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA129_0 = input.LA(1);

                         
                        int index129_0 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (LA129_0==LIDENTIFIER) ) {s = 1;}

                        else if ( (LA129_0==UIDENTIFIER) ) {s = 2;}

                        else if ( (LA129_0==DECREMENT_OP) && (synpred9_Ceylon())) {s = 3;}

                        else if ( (LA129_0==INCREMENT_OP) && (synpred9_Ceylon())) {s = 4;}

                        else if ( (LA129_0==POWER_OP) && (synpred9_Ceylon())) {s = 5;}

                        else if ( (LA129_0==INTERSECTION_OP) && (synpred9_Ceylon())) {s = 6;}

                        else if ( (LA129_0==COMMA) && (synpred9_Ceylon())) {s = 7;}

                        else if ( (LA129_0==UNION_OP) && (synpred9_Ceylon())) {s = 8;}

                        else if ( (LA129_0==RPAREN) && (synpred9_Ceylon())) {s = 9;}

                        else if ( (LA129_0==COMPLEMENT_OP) && (synpred9_Ceylon())) {s = 10;}

                        else if ( (LA129_0==RBRACE) && (synpred9_Ceylon())) {s = 11;}

                        else if ( (LA129_0==RBRACKET) && (synpred9_Ceylon())) {s = 12;}

                        else if ( (LA129_0==PRODUCT_OP) && (synpred9_Ceylon())) {s = 13;}

                        else if ( (LA129_0==QUOTIENT_OP) && (synpred9_Ceylon())) {s = 14;}

                        else if ( (LA129_0==REMAINDER_OP) && (synpred9_Ceylon())) {s = 15;}

                        else if ( (LA129_0==SCALE_OP) && (synpred9_Ceylon())) {s = 16;}

                        else if ( (LA129_0==SUM_OP) && (synpred9_Ceylon())) {s = 17;}

                        else if ( (LA129_0==DIFFERENCE_OP) && (synpred9_Ceylon())) {s = 18;}

                        else if ( (LA129_0==ELLIPSIS) && (synpred9_Ceylon())) {s = 19;}

                        else if ( (LA129_0==RANGE_OP) && (synpred9_Ceylon())) {s = 20;}

                        else if ( (LA129_0==SEGMENT_OP) && (synpred9_Ceylon())) {s = 21;}

                        else if ( (LA129_0==ENTRY_OP) && (synpred9_Ceylon())) {s = 22;}

                        else if ( (LA129_0==EXISTS) && (synpred9_Ceylon())) {s = 23;}

                        else if ( (LA129_0==NONEMPTY) && (synpred9_Ceylon())) {s = 24;}

                        else if ( (LA129_0==COMPARE_OP) && (synpred9_Ceylon())) {s = 25;}

                        else if ( (LA129_0==IN_OP) && (synpred9_Ceylon())) {s = 26;}

                        else if ( (LA129_0==LARGE_AS_OP) && (synpred9_Ceylon())) {s = 27;}

                        else if ( (LA129_0==LARGER_OP) && (synpred9_Ceylon())) {s = 28;}

                        else if ( (LA129_0==SMALL_AS_OP) && (synpred9_Ceylon())) {s = 29;}

                        else if ( (LA129_0==SMALLER_OP) && (synpred9_Ceylon())) {s = 30;}

                        else if ( (LA129_0==IS_OP) && (synpred9_Ceylon())) {s = 31;}

                        else if ( (LA129_0==EXTENDS) && (synpred9_Ceylon())) {s = 32;}

                        else if ( (LA129_0==SATISFIES) && (synpred9_Ceylon())) {s = 33;}

                        else if ( (LA129_0==CASE_TYPES) && (synpred9_Ceylon())) {s = 34;}

                        else if ( (LA129_0==EQUAL_OP) && (synpred9_Ceylon())) {s = 35;}

                        else if ( (LA129_0==NOT_EQUAL_OP) && (synpred9_Ceylon())) {s = 36;}

                        else if ( (LA129_0==IDENTICAL_OP) && (synpred9_Ceylon())) {s = 37;}

                        else if ( (LA129_0==AND_OP) && (synpred9_Ceylon())) {s = 38;}

                        else if ( (LA129_0==OR_OP) && (synpred9_Ceylon())) {s = 39;}

                        else if ( (LA129_0==ELSE_CLAUSE) && (synpred9_Ceylon())) {s = 40;}

                        else if ( (LA129_0==THEN_CLAUSE) && (synpred9_Ceylon())) {s = 41;}

                        else if ( (LA129_0==SPECIFY) && (synpred9_Ceylon())) {s = 42;}

                        else if ( (LA129_0==ADD_SPECIFY) && (synpred9_Ceylon())) {s = 43;}

                        else if ( (LA129_0==SUBTRACT_SPECIFY) && (synpred9_Ceylon())) {s = 44;}

                        else if ( (LA129_0==MULTIPLY_SPECIFY) && (synpred9_Ceylon())) {s = 45;}

                        else if ( (LA129_0==DIVIDE_SPECIFY) && (synpred9_Ceylon())) {s = 46;}

                        else if ( (LA129_0==REMAINDER_SPECIFY) && (synpred9_Ceylon())) {s = 47;}

                        else if ( (LA129_0==INTERSECT_SPECIFY) && (synpred9_Ceylon())) {s = 48;}

                        else if ( (LA129_0==UNION_SPECIFY) && (synpred9_Ceylon())) {s = 49;}

                        else if ( (LA129_0==COMPLEMENT_SPECIFY) && (synpred9_Ceylon())) {s = 50;}

                        else if ( (LA129_0==AND_SPECIFY) && (synpred9_Ceylon())) {s = 51;}

                        else if ( (LA129_0==OR_SPECIFY) && (synpred9_Ceylon())) {s = 52;}

                        else if ( (LA129_0==COMPUTE) && (synpred9_Ceylon())) {s = 53;}

                        else if ( (LA129_0==SEMICOLON) && (synpred9_Ceylon())) {s = 54;}

                        else if ( (LA129_0==STRING_MID) && (synpred9_Ceylon())) {s = 55;}

                        else if ( (LA129_0==STRING_END) && (synpred9_Ceylon())) {s = 56;}

                        else if ( (LA129_0==MEMBER_OP) && (synpred9_Ceylon())) {s = 57;}

                        else if ( (LA129_0==SAFE_MEMBER_OP) && (synpred9_Ceylon())) {s = 58;}

                        else if ( (LA129_0==SPREAD_OP) && (synpred9_Ceylon())) {s = 59;}

                        else if ( (LA129_0==LBRACKET) && (synpred9_Ceylon())) {s = 60;}

                        else if ( (LA129_0==LPAREN) && (synpred9_Ceylon())) {s = 61;}

                        else if ( (LA129_0==LBRACE) && (synpred9_Ceylon())) {s = 62;}

                         
                        input.seek(index129_0);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 129, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA138_eotS =
        "\76\uffff";
    static final String DFA138_eofS =
        "\76\uffff";
    static final String DFA138_minS =
        "\1\5\1\0\74\uffff";
    static final String DFA138_maxS =
        "\1\u0080\1\0\74\uffff";
    static final String DFA138_acceptS =
        "\2\uffff\1\2\72\uffff\1\1";
    static final String DFA138_specialS =
        "\1\uffff\1\0\74\uffff}>";
    static final String[] DFA138_transitionS = {
            "\1\2\2\uffff\2\2\12\uffff\1\2\3\uffff\2\2\1\uffff\3\2\2\uffff"+
            "\3\2\3\uffff\6\2\11\uffff\1\2\2\uffff\1\2\1\uffff\4\2\2\uffff"+
            "\4\2\4\uffff\1\2\1\uffff\1\2\1\uffff\1\2\4\uffff\2\2\3\uffff"+
            "\2\2\4\uffff\10\2\1\uffff\6\2\1\1\4\2\1\uffff\1\2\1\uffff\2"+
            "\2\3\uffff\1\2\6\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA138_eot = DFA.unpackEncodedString(DFA138_eotS);
    static final short[] DFA138_eof = DFA.unpackEncodedString(DFA138_eofS);
    static final char[] DFA138_min = DFA.unpackEncodedStringToUnsignedChars(DFA138_minS);
    static final char[] DFA138_max = DFA.unpackEncodedStringToUnsignedChars(DFA138_maxS);
    static final short[] DFA138_accept = DFA.unpackEncodedString(DFA138_acceptS);
    static final short[] DFA138_special = DFA.unpackEncodedString(DFA138_specialS);
    static final short[][] DFA138_transition;

    static {
        int numStates = DFA138_transitionS.length;
        DFA138_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA138_transition[i] = DFA.unpackEncodedString(DFA138_transitionS[i]);
        }
    }

    class DFA138 extends DFA {

        public DFA138(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 138;
            this.eot = DFA138_eot;
            this.eof = DFA138_eof;
            this.min = DFA138_min;
            this.max = DFA138_max;
            this.accept = DFA138_accept;
            this.special = DFA138_special;
            this.transition = DFA138_transition;
        }
        public String getDescription() {
            return "1510:7: ( ( typeArgumentsStart )=> typeArguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA138_1 = input.LA(1);

                         
                        int index138_1 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred12_Ceylon()) ) {s = 61;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index138_1);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 138, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA139_eotS =
        "\76\uffff";
    static final String DFA139_eofS =
        "\76\uffff";
    static final String DFA139_minS =
        "\1\5\1\0\74\uffff";
    static final String DFA139_maxS =
        "\1\u0080\1\0\74\uffff";
    static final String DFA139_acceptS =
        "\2\uffff\1\2\72\uffff\1\1";
    static final String DFA139_specialS =
        "\1\uffff\1\0\74\uffff}>";
    static final String[] DFA139_transitionS = {
            "\1\2\2\uffff\2\2\12\uffff\1\2\3\uffff\2\2\1\uffff\3\2\2\uffff"+
            "\3\2\3\uffff\6\2\11\uffff\1\2\2\uffff\1\2\1\uffff\4\2\2\uffff"+
            "\4\2\4\uffff\1\2\1\uffff\1\2\1\uffff\1\2\4\uffff\2\2\3\uffff"+
            "\2\2\4\uffff\10\2\1\uffff\6\2\1\1\4\2\1\uffff\1\2\1\uffff\2"+
            "\2\3\uffff\1\2\6\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA139_eot = DFA.unpackEncodedString(DFA139_eotS);
    static final short[] DFA139_eof = DFA.unpackEncodedString(DFA139_eofS);
    static final char[] DFA139_min = DFA.unpackEncodedStringToUnsignedChars(DFA139_minS);
    static final char[] DFA139_max = DFA.unpackEncodedStringToUnsignedChars(DFA139_maxS);
    static final short[] DFA139_accept = DFA.unpackEncodedString(DFA139_acceptS);
    static final short[] DFA139_special = DFA.unpackEncodedString(DFA139_specialS);
    static final short[][] DFA139_transition;

    static {
        int numStates = DFA139_transitionS.length;
        DFA139_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA139_transition[i] = DFA.unpackEncodedString(DFA139_transitionS[i]);
        }
    }

    class DFA139 extends DFA {

        public DFA139(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 139;
            this.eot = DFA139_eot;
            this.eof = DFA139_eof;
            this.min = DFA139_min;
            this.max = DFA139_max;
            this.accept = DFA139_accept;
            this.special = DFA139_special;
            this.transition = DFA139_transition;
        }
        public String getDescription() {
            return "1521:7: ( ( typeArgumentsStart )=> typeArguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA139_1 = input.LA(1);

                         
                        int index139_1 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred13_Ceylon()) ) {s = 61;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index139_1);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 139, _s, input);
            error(nvae);
            throw nvae;
        }

    }
 

    public static final BitSet FOLLOW_compilerAnnotations_in_compilationUnit86 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_compilationUnit96 = new BitSet(new long[]{0x0282000804801080L,0x200108010410082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_importDeclaration_in_compilationUnit134 = new BitSet(new long[]{0x0282000804801080L,0x200108010410082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_moduleDescriptor_in_compilationUnit180 = new BitSet(new long[]{0x0282000804801080L,0x200108010410082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_packageDescriptor_in_compilationUnit226 = new BitSet(new long[]{0x0282000804801080L,0x200108010410082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_compilerAnnotations_in_compilationUnit256 = new BitSet(new long[]{0x0202000800801080L,0x200108000010002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_declaration_in_compilationUnit258 = new BitSet(new long[]{0x0282000804801080L,0x200108010410082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_RBRACE_in_compilationUnit278 = new BitSet(new long[]{0x0282000804801080L,0x200108010410082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_EOF_in_compilationUnit305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_moduleDescriptor326 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000820L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_moduleDescriptor328 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_MODULE_in_moduleDescriptor336 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_moduleDescriptor353 = new BitSet(new long[]{0x0000000000400000L,0x0001000000000000L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_moduleDescriptor379 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_moduleDescriptor407 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_importModuleList_in_moduleDescriptor433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_importModuleList462 = new BitSet(new long[]{0x0080000004000000L,0x0001000100000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_compilerAnnotations_in_importModuleList488 = new BitSet(new long[]{0x0080000000000000L,0x0001000000000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_importModuleList490 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_importModule_in_importModuleList500 = new BitSet(new long[]{0x0080000004000000L,0x0001000100000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_RBRACE_in_importModuleList527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_packageDescriptor556 = new BitSet(new long[]{0x0000000000000000L,0x0001000004000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_packageDescriptor558 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_PACKAGE_in_packageDescriptor566 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_packageDescriptor583 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_packageDescriptor599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPORT_in_importModule628 = new BitSet(new long[]{0x0000000000400000L,0x2001000000000020L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_importModule657 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_importModule687 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_packagePath_in_importModule715 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_importModule753 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_importModule783 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_importModule810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPORT_in_importDeclaration839 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000024L});
    public static final BitSet FOLLOW_packagePath_in_importDeclaration867 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_importElementList_in_importDeclaration903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_importElementList945 = new BitSet(new long[]{0x0000004004000000L,0x2000000100000020L});
    public static final BitSet FOLLOW_importElement_in_importElementList968 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_COMMA_in_importElementList999 = new BitSet(new long[]{0x0000004005000000L,0x2000000100000020L});
    public static final BitSet FOLLOW_importElement_in_importElementList1034 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_importWildcard_in_importElementList1062 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_importWildcard_in_importElementList1116 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_importElementList1131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_importElement1167 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_importName_in_importElement1177 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000004L});
    public static final BitSet FOLLOW_SPECIFY_in_importElement1196 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000024L});
    public static final BitSet FOLLOW_importName_in_importElement1230 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_importElementList_in_importElement1294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELLIPSIS_in_importWildcard1346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_importName1375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_importName1385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_packageName_in_packagePath1419 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_packagePath1450 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000420L});
    public static final BitSet FOLLOW_packageName_in_packagePath1485 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_packageName1550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_packageName1574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_typeName1603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_annotationName1632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_memberName1661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_memberNameDeclaration1694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_memberNameDeclaration1712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_typeNameDeclaration1742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_typeNameDeclaration1760 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_objectDeclaration1790 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_objectDeclaration1806 = new BitSet(new long[]{0x0000080000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_extendedType_in_objectDeclaration1833 = new BitSet(new long[]{0x0000000000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_objectDeclaration1872 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_classBody_in_objectDeclaration1910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_objectDeclaration1940 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodDeclaration1998 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodDeclaration2018 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_voidOrInferredMethodDeclaration2044 = new BitSet(new long[]{0x0000000024000000L,0x10002C0000000104L});
    public static final BitSet FOLLOW_typeParameters_in_voidOrInferredMethodDeclaration2070 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_parameters_in_voidOrInferredMethodDeclaration2115 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_typeConstraints_in_voidOrInferredMethodDeclaration2159 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_voidOrInferredMethodDeclaration2207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_voidOrInferredMethodDeclaration2249 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_voidOrInferredMethodDeclaration2292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSIGN_in_setterDeclaration2341 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_setterDeclaration2358 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_setterDeclaration2386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_setterDeclaration2418 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_setterDeclaration2461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_inferredAttributeDeclaration2509 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_inferredAttributeDeclaration2526 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_specifier_in_inferredAttributeDeclaration2565 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_inferredAttributeDeclaration2600 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_inferredAttributeDeclaration2643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_inferredAttributeDeclaration2682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_typedMethodOrAttributeDeclaration2732 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_typedMethodOrAttributeDeclaration2752 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_typedMethodOrAttributeDeclaration2778 = new BitSet(new long[]{0x0000000020000000L,0x00002C0000000104L});
    public static final BitSet FOLLOW_typeParameters_in_typedMethodOrAttributeDeclaration2827 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_typedMethodOrAttributeDeclaration2872 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_typeConstraints_in_typedMethodOrAttributeDeclaration2927 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_typedMethodOrAttributeDeclaration2987 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_typedMethodOrAttributeDeclaration3037 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration3089 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_in_typedMethodOrAttributeDeclaration3144 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_typedMethodOrAttributeDeclaration3182 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration3228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_typedMethodOrAttributeDeclaration3269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_interfaceDeclaration3328 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_interfaceDeclaration3357 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_interfaceDeclaration3383 = new BitSet(new long[]{0x0000000024100000L,0x10002C8000000004L});
    public static final BitSet FOLLOW_typeParameters_in_interfaceDeclaration3410 = new BitSet(new long[]{0x0000000024100000L,0x1000248000000004L});
    public static final BitSet FOLLOW_caseTypes_in_interfaceDeclaration3448 = new BitSet(new long[]{0x0000000024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_interfaceDeclaration3502 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000004L});
    public static final BitSet FOLLOW_typeConstraints_in_interfaceDeclaration3539 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_interfaceBody_in_interfaceDeclaration3586 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeSpecifier_in_interfaceDeclaration3627 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interfaceDeclaration3671 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_classDeclaration3719 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_classDeclaration3736 = new BitSet(new long[]{0x0000080024100000L,0x10002C8000000104L});
    public static final BitSet FOLLOW_typeParameters_in_classDeclaration3762 = new BitSet(new long[]{0x0000080024100000L,0x1000248000000104L});
    public static final BitSet FOLLOW_parameters_in_classDeclaration3799 = new BitSet(new long[]{0x0000080024100000L,0x1000248000000004L});
    public static final BitSet FOLLOW_caseTypes_in_classDeclaration3836 = new BitSet(new long[]{0x0000080024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_extendedType_in_classDeclaration3882 = new BitSet(new long[]{0x0000000024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_classDeclaration3920 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000004L});
    public static final BitSet FOLLOW_typeConstraints_in_classDeclaration3957 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_classBody_in_classDeclaration4004 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classSpecifier_in_classDeclaration4045 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_classDeclaration4088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALIAS_in_aliasDeclaration4127 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_aliasDeclaration4143 = new BitSet(new long[]{0x0000000024000000L,0x10002C0000000000L});
    public static final BitSet FOLLOW_typeParameters_in_aliasDeclaration4170 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000000L});
    public static final BitSet FOLLOW_typeConstraints_in_aliasDeclaration4208 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000000L});
    public static final BitSet FOLLOW_typeSpecifier_in_aliasDeclaration4245 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_aliasDeclaration4280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotations_in_assertion4309 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_ASSERT_in_assertion4317 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_assertion4333 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_assertion4357 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_block4386 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110618812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_block4413 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110618812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_block4440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_interfaceBody4473 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110618812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_interfaceBody4500 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110618812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_interfaceBody4527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_classBody4556 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110618812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_classBody4582 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110618812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_classBody4609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_extendedType4638 = new BitSet(new long[]{0x0000000000000002L,0x2020000000000000L});
    public static final BitSet FOLLOW_classInstantiation_in_extendedType4662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_classSpecifier4712 = new BitSet(new long[]{0x0000000000000002L,0x2020000000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_classSpecifier4741 = new BitSet(new long[]{0x0000000000000002L,0x2020000000000000L});
    public static final BitSet FOLLOW_classInstantiation_in_classSpecifier4780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_classInstantiation4841 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_SUPER_in_classInstantiation4861 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_classInstantiation4863 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_classInstantiation4876 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_positionalArguments_in_classInstantiation4913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiedTypes4963 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_abbreviatedType_in_satisfiedTypes4993 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_satisfiedTypes5045 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_COMMA_in_satisfiedTypes5080 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_UNION_OP_in_satisfiedTypes5082 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_abbreviatedType_in_satisfiedTypes5128 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_CASE_TYPES_in_caseTypes5180 = new BitSet(new long[]{0x0000000000000000L,0x200008000000002CL});
    public static final BitSet FOLLOW_caseType_in_caseTypes5198 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_caseTypes5240 = new BitSet(new long[]{0x0000000000000000L,0x200008000000002CL});
    public static final BitSet FOLLOW_COMMA_in_caseTypes5276 = new BitSet(new long[]{0x0000000000000000L,0x200008000000002CL});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_caseTypes5278 = new BitSet(new long[]{0x0000000000000000L,0x200008000000002CL});
    public static final BitSet FOLLOW_caseType_in_caseTypes5324 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_abbreviatedType_in_caseType5378 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_caseType5395 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ABSTRACTED_TYPE_in_abstractedType5430 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_abbreviatedType_in_abstractedType5446 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_parameters5475 = new BitSet(new long[]{0x0002000804000000L,0x200108200000002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_parameterDeclarationOrRef_in_parameters5503 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_parameters5538 = new BitSet(new long[]{0x0002000805000000L,0x200108200000002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_parameterDeclarationOrRef_in_parameters5578 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_parameters5658 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_parameter5687 = new BitSet(new long[]{0x0002000800000000L,0x200108000000002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotations_in_parameter5695 = new BitSet(new long[]{0x0002000800000000L,0x200008000000000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_parameterDeclaration_in_parameter5703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_parameterDeclaration5756 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_parameterDeclaration5776 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_parameterDeclaration5796 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_parameterDeclaration5816 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_parameterDeclaration5836 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_parameterDeclaration5862 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000100L});
    public static final BitSet FOLLOW_specifier_in_parameterDeclaration5900 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameters_in_parameterDeclaration5953 = new BitSet(new long[]{0x0000000020000002L,0x0000200000000100L});
    public static final BitSet FOLLOW_functionSpecifier_in_parameterDeclaration5998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_parameterRef6050 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_parameterRef6076 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameterRef_in_parameterDeclarationOrRef6124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameter_in_parameterDeclarationOrRef6149 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeParameters6178 = new BitSet(new long[]{0x1000000004000000L,0x2000000001000020L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters6196 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_COMMA_in_typeParameters6224 = new BitSet(new long[]{0x1000000005000000L,0x2000000001000021L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters6258 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeParameters6309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_typeParameter6346 = new BitSet(new long[]{0x1000000000000000L,0x2000000001000020L});
    public static final BitSet FOLLOW_variance_in_typeParameter6365 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_typeParameter6395 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_typeDefault_in_typeParameter6421 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_variance6469 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OUT_in_variance6485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_typeConstraint6518 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_TYPE_CONSTRAINT_in_typeConstraint6526 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_typeConstraint6542 = new BitSet(new long[]{0x0000000000100012L,0x0000008000000100L});
    public static final BitSet FOLLOW_parameters_in_typeConstraint6576 = new BitSet(new long[]{0x0000000000100012L,0x0000008000000000L});
    public static final BitSet FOLLOW_caseTypes_in_typeConstraint6613 = new BitSet(new long[]{0x0000000000000012L,0x0000008000000000L});
    public static final BitSet FOLLOW_satisfiedTypes_in_typeConstraint6657 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_abstractedType_in_typeConstraint6695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeConstraint_in_typeConstraints6753 = new BitSet(new long[]{0x0000000004000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_stringLiteral_in_annotationListStart6790 = new BitSet(new long[]{0x0002000000000000L,0x2000000000000020L,0x0000000000000008L});
    public static final BitSet FOLLOW_annotation_in_annotationListStart6792 = new BitSet(new long[]{0x0002000000000000L,0x2000000000000020L,0x0000000000000008L});
    public static final BitSet FOLLOW_set_in_annotationListStart6802 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_declarationOrStatement6842 = new BitSet(new long[]{0x0343800B40C19880L,0x2E7508100618812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declaration_in_declarationOrStatement6869 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assertion_in_declarationOrStatement6895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_declarationOrStatement6923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_declarationOrStatement6945 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotations_in_declaration7001 = new BitSet(new long[]{0x0202000800801080L,0x200008000010000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_classDeclaration_in_declaration7024 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceDeclaration_in_declaration7050 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_aliasDeclaration_in_declaration7066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectDeclaration_in_declaration7082 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_setterDeclaration_in_declaration7098 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_voidOrInferredMethodDeclaration_in_declaration7114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_inferredAttributeDeclaration_in_declaration7130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typedMethodOrAttributeDeclaration_in_declaration7146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotatedDeclarationStart7189 = new BitSet(new long[]{0x0202000800801080L,0x200008000010002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_annotation_in_annotatedDeclarationStart7192 = new BitSet(new long[]{0x0202000800801080L,0x200008000010002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_unambiguousType_in_annotatedDeclarationStart7209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_annotatedDeclarationStart7213 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotatedAssertionStart7231 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotation_in_annotatedAssertionStart7234 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000020L});
    public static final BitSet FOLLOW_ASSERT_in_annotatedAssertionStart7237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_declarationStart7257 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart7259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_declarationStart7272 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart7274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_declarationStart7287 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart7289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSIGN_in_declarationStart7302 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_declarationStart7310 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_declarationStart7318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_declarationStart7326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALIAS_in_declarationStart7334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_declarationStart7343 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_declarationStart7345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_declarationStart7353 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart7355 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType7383 = new BitSet(new long[]{0x0000010000000000L,0x0000000000200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType7403 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType7407 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType7409 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType7422 = new BitSet(new long[]{0x0000000000000000L,0x2000080000000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType7424 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType7442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType7446 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType7448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_unambiguousType7457 = new BitSet(new long[]{0x0000000000000000L,0x2000080000000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType7466 = new BitSet(new long[]{0x0000010000000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType7469 = new BitSet(new long[]{0x0000010000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType7473 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType7475 = new BitSet(new long[]{0x0000010000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType7495 = new BitSet(new long[]{0x0000000000000000L,0x2000080000000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType7497 = new BitSet(new long[]{0x0000000000000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType7509 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType7513 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType7515 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_set_in_unambiguousType7535 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_unambiguousType7548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType7556 = new BitSet(new long[]{0x0000000000000000L,0x2000080000000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType7565 = new BitSet(new long[]{0x0000010001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType7568 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType7572 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType7574 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType7595 = new BitSet(new long[]{0x0000000000000000L,0x2000080000000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType7597 = new BitSet(new long[]{0x0000000001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType7608 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType7612 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType7614 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_COMMA_in_unambiguousType7644 = new BitSet(new long[]{0x0000000000000000L,0x2000080000000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType7655 = new BitSet(new long[]{0x0000010001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType7658 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType7662 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType7664 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType7689 = new BitSet(new long[]{0x0000000000000000L,0x2000080000000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType7691 = new BitSet(new long[]{0x0000000001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType7705 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType7709 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType7711 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_set_in_unambiguousType7742 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType7755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_directiveStatement_in_statement7776 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_controlStatement_in_statement7792 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionOrSpecificationStatement_in_statement7808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_expressionOrSpecificationStatement7846 = new BitSet(new long[]{0x0000000021000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_expressionOrSpecificationStatement7882 = new BitSet(new long[]{0x0000000001000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_expressionOrSpecificationStatement7927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMMA_in_expressionOrSpecificationStatement7957 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_directive_in_directiveStatement8006 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_directiveStatement8032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_returnDirective_in_directive8069 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_throwDirective_in_directive8085 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_breakDirective_in_directive8101 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_continueDirective_in_directive8117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RETURN_in_returnDirective8146 = new BitSet(new long[]{0x0102800B00408002L,0x223500000608812CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_returnDirective8173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THROW_in_throwDirective8213 = new BitSet(new long[]{0x0100800B00408002L,0x223500000608812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_throwDirective8240 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BREAK_in_breakDirective8280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CONTINUE_in_continueDirective8309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_typeSpecifier8348 = new BitSet(new long[]{0x0000000000000002L,0x200008000000000CL});
    public static final BitSet FOLLOW_SPECIFY_in_typeSpecifier8377 = new BitSet(new long[]{0x0000000000000002L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_typeSpecifier8414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_typeDefault8454 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_typeDefault8471 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_specifier8500 = new BitSet(new long[]{0x0102800B00408000L,0x223500000608812CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_specifier8516 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_lazySpecifier8545 = new BitSet(new long[]{0x0102800B00408000L,0x223500000608812CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_lazySpecifier8561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_functionSpecifier8600 = new BitSet(new long[]{0x0102800B00408000L,0x223500000608812CL,0x000000000000000CL});
    public static final BitSet FOLLOW_SPECIFY_in_functionSpecifier8628 = new BitSet(new long[]{0x0102800B00408000L,0x223500000608812CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_functionSpecifier8654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assignmentExpression_in_expression8691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonstringLiteral_in_base8720 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringExpression_in_base8736 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaLiteral_in_base8752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumeration_in_base8768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuple_in_base8784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dynamicObject_in_base8800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selfReference_in_base8816 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parExpression_in_base8832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_baseReference_in_base8848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberReference_in_baseReference8890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeReference_in_baseReference8906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_base_in_primary8941 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_qualifiedReference_in_primary8974 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_indexOrIndexRange_in_primary8992 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_parameters_in_primary9018 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_positionalArguments_in_primary9038 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_namedArguments_in_primary9059 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_LPAREN_in_specifierParametersStart9093 = new BitSet(new long[]{0x0202000804801080L,0x200108200010002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_RPAREN_in_specifierParametersStart9109 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_SPECIFY_in_specifierParametersStart9112 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_specifierParametersStart9114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifierParametersStart_in_specifierParametersStart9116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_specifierParametersStart9132 = new BitSet(new long[]{0x0202000800801080L,0x200108000010002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_specifierParametersStart9134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberSelectionOperator_in_qualifiedReference9161 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberReference_in_qualifiedReference9189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeReference_in_qualifiedReference9209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MEMBER_OP_in_memberSelectionOperator9276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SAFE_MEMBER_OP_in_memberSelectionOperator9292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPREAD_OP_in_memberSelectionOperator9308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_enumeration9337 = new BitSet(new long[]{0x0143800B04408000L,0x223500012608812CL,0x000000000000000CL});
    public static final BitSet FOLLOW_sequencedArgument_in_enumeration9365 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_enumeration9392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tuple9421 = new BitSet(new long[]{0x0143800B04408000L,0x223500022608812CL,0x000000000000000CL});
    public static final BitSet FOLLOW_sequencedArgument_in_tuple9448 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_tuple9475 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_dynamicObject9517 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_LBRACKET_in_dynamicObject9519 = new BitSet(new long[]{0x0143800B04408000L,0x223508022618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgument_in_dynamicObject9570 = new BitSet(new long[]{0x0143800B04408000L,0x223508022618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_anonymousArgument_in_dynamicObject9604 = new BitSet(new long[]{0x0143800B04408000L,0x223508022618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_sequencedArgument_in_dynamicObject9642 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_dynamicObject9669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionExpression_in_valueCaseList9712 = new BitSet(new long[]{0x0000000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_COMMA_in_valueCaseList9754 = new BitSet(new long[]{0x0100800B01408002L,0xA23500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_UNION_OP_in_valueCaseList9781 = new BitSet(new long[]{0x0100800B01408002L,0xA23500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_intersectionExpression_in_valueCaseList9827 = new BitSet(new long[]{0x0000000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_memberName_in_memberReference9892 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_memberReference9932 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_typeReference9972 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_typeReference10013 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArgumentsStart10052 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000DL});
    public static final BitSet FOLLOW_type_in_typeArgumentsStart10066 = new BitSet(new long[]{0x0000000001000000L,0x0000080000000001L});
    public static final BitSet FOLLOW_set_in_typeArgumentsStart10074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArgumentsStart10094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeArgumentsStart10109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_indexOrIndexRange10157 = new BitSet(new long[]{0x0100804B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_ELLIPSIS_in_indexOrIndexRange10185 = new BitSet(new long[]{0x0100800B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange10205 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange10231 = new BitSet(new long[]{0x0000004000000000L,0x0000020280000000L});
    public static final BitSet FOLLOW_ELLIPSIS_in_indexOrIndexRange10259 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RANGE_OP_in_indexOrIndexRange10287 = new BitSet(new long[]{0x0100800B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange10310 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_indexOrIndexRange10329 = new BitSet(new long[]{0x0100800B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange10351 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_indexOrIndexRange10385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_additiveExpression_in_index10414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_namedArguments10444 = new BitSet(new long[]{0x0143800B04408000L,0x223508012618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgument_in_namedArguments10496 = new BitSet(new long[]{0x0143800B04408000L,0x223508012618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_anonymousArgument_in_namedArguments10530 = new BitSet(new long[]{0x0143800B04408000L,0x223508012618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_sequencedArgument_in_namedArguments10568 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_namedArguments10595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_sequencedArgument10624 = new BitSet(new long[]{0x0143800B00408000L,0x223500002608812CL,0x000000000000000CL});
    public static final BitSet FOLLOW_positionalArgument_in_sequencedArgument10656 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_spreadArgument_in_sequencedArgument10692 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_comprehension_in_sequencedArgument10728 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_COMMA_in_sequencedArgument10774 = new BitSet(new long[]{0x0143800B01408002L,0x223500002608812CL,0x000000000000000CL});
    public static final BitSet FOLLOW_positionalArgument_in_sequencedArgument10814 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_spreadArgument_in_sequencedArgument10856 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_comprehension_in_sequencedArgument10898 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_namedArgument10983 = new BitSet(new long[]{0x0002000800000000L,0x200008000010002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_namedSpecifiedArgument_in_namedArgument11000 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentDeclaration_in_namedArgument11022 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_namedSpecifiedArgument11063 = new BitSet(new long[]{0x0000000000000000L,0x0000240000000000L});
    public static final BitSet FOLLOW_specifier_in_namedSpecifiedArgument11089 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_namedSpecifiedArgument11125 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_anonymousArgument11163 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_anonymousArgument11189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_objectArgument11218 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_objectArgument11235 = new BitSet(new long[]{0x0000080000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_extendedType_in_objectArgument11262 = new BitSet(new long[]{0x0000000000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_objectArgument11301 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_classBody_in_objectArgument11339 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_objectArgument11369 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodArgument11426 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodArgument11454 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_voidOrInferredMethodArgument11481 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_parameters_in_voidOrInferredMethodArgument11508 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_block_in_voidOrInferredMethodArgument11545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_voidOrInferredMethodArgument11586 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_voidOrInferredMethodArgument11629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_inferredGetterArgument11686 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_inferredGetterArgument11703 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_inferredGetterArgument11730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_in_inferredGetterArgument11771 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_inferredGetterArgument11807 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_inferredGetterArgument11851 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typedMethodOrGetterArgument11919 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_typedMethodOrGetterArgument11948 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_typedMethodOrGetterArgument11974 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_parameters_in_typedMethodOrGetterArgument12022 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_block_in_typedMethodOrGetterArgument12069 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_typedMethodOrGetterArgument12118 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument12171 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_typedMethodOrGetterArgument12237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_in_typedMethodOrGetterArgument12286 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_typedMethodOrGetterArgument12328 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument12382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_untypedMethodOrGetterArgument12454 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_untypedMethodOrGetterArgument12503 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_functionSpecifier_in_untypedMethodOrGetterArgument12548 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_untypedMethodOrGetterArgument12626 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_untypedMethodOrGetterArgument12672 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectArgument_in_namedArgumentDeclaration12709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typedMethodOrGetterArgument_in_namedArgumentDeclaration12725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_voidOrInferredMethodArgument_in_namedArgumentDeclaration12741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_inferredGetterArgument_in_namedArgumentDeclaration12757 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_untypedMethodOrGetterArgument_in_namedArgumentDeclaration12773 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_namedArgumentStart12801 = new BitSet(new long[]{0x0202000800801080L,0x200008000010002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_specificationStart_in_namedArgumentStart12811 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_namedArgumentStart12815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_namedAnnotationArgumentsStart12833 = new BitSet(new long[]{0x0302800B04C09080L,0x223508010618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgumentStart_in_namedAnnotationArgumentsStart12840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_iterableArgumentStart_in_namedAnnotationArgumentsStart12844 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RBRACE_in_namedAnnotationArgumentsStart12848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_iterableArgumentStart12866 = new BitSet(new long[]{0x0100800B00408000L,0x223500000608812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_iterableArgumentStart12868 = new BitSet(new long[]{0x0000000001000000L,0x0000040100000000L});
    public static final BitSet FOLLOW_set_in_iterableArgumentStart12870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_specificationStart12894 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_parameters_in_specificationStart12896 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_set_in_specificationStart12899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_parExpression12925 = new BitSet(new long[]{0x0102800B00408000L,0x223500000608812CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_parExpression12942 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_parExpression12958 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_positionalArguments12995 = new BitSet(new long[]{0x0143800B04408000L,0x223500202608812CL,0x000000000000000CL});
    public static final BitSet FOLLOW_sequencedArgument_in_positionalArguments13024 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_positionalArguments13051 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_positionalArgument13088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_spreadArgument13117 = new BitSet(new long[]{0x0100800B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_unionExpression_in_spreadArgument13133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_anonParametersStart13158 = new BitSet(new long[]{0x0202000804801080L,0x200108200010002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_RPAREN_in_anonParametersStart13174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_anonParametersStart13182 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_anonParametersStart13185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RPAREN_in_anonParametersStart13189 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_set_in_anonParametersStart13191 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_anonParametersStart13205 = new BitSet(new long[]{0x0202000800801080L,0x200108000010002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_anonParametersStart13207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_nonemptyParametersStart13231 = new BitSet(new long[]{0x0202000804801080L,0x200108000010002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_compilerAnnotations_in_nonemptyParametersStart13233 = new BitSet(new long[]{0x0202000800801080L,0x200108000010002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_nonemptyParametersStart13235 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousFunction_in_functionOrExpression13274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_functionOrExpression13292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_anonymousFunction13340 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_anonymousFunction13368 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_anonymousFunction13397 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000104L});
    public static final BitSet FOLLOW_parameters_in_anonymousFunction13435 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000104L});
    public static final BitSet FOLLOW_COMPUTE_in_anonymousFunction13473 = new BitSet(new long[]{0x0102800B00408000L,0x223500000608812CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_anonymousFunction13494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_anonymousFunction13522 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forComprehensionClause_in_comprehension13570 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifComprehensionClause_in_comprehension13586 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forComprehensionClause_in_comprehensionClause13615 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifComprehensionClause_in_comprehensionClause13632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionComprehensionClause_in_comprehensionClause13649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_expressionComprehensionClause13679 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_forComprehensionClause13716 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_forIterator_in_forComprehensionClause13732 = new BitSet(new long[]{0x0143800B00408000L,0x223500000608812CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehensionClause_in_forComprehensionClause13748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_ifComprehensionClause13781 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_ifComprehensionClause13797 = new BitSet(new long[]{0x0143800B00408000L,0x223500000608812CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehensionClause_in_ifComprehensionClause13813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_thenElseExpression_in_assignmentExpression13857 = new BitSet(new long[]{0x0800000410000222L,0x0008200800801000L,0x0000000000000001L});
    public static final BitSet FOLLOW_assignmentOperator_in_assignmentExpression13883 = new BitSet(new long[]{0x0102800B00408000L,0x223500000608812CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_assignmentExpression13906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_assignmentOperator13946 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ADD_SPECIFY_in_assignmentOperator13961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUBTRACT_SPECIFY_in_assignmentOperator13971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MULTIPLY_SPECIFY_in_assignmentOperator13981 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIVIDE_SPECIFY_in_assignmentOperator13991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REMAINDER_SPECIFY_in_assignmentOperator14001 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERSECT_SPECIFY_in_assignmentOperator14011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNION_SPECIFY_in_assignmentOperator14021 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPLEMENT_SPECIFY_in_assignmentOperator14031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AND_SPECIFY_in_assignmentOperator14041 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OR_SPECIFY_in_assignmentOperator14051 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_disjunctionExpression_in_thenElseExpression14081 = new BitSet(new long[]{0x0000008000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_thenElseOperator_in_thenElseExpression14107 = new BitSet(new long[]{0x0100800B00408000L,0x223500000608812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_disjunctionExpression_in_thenElseExpression14129 = new BitSet(new long[]{0x0000008000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_thenElseOperator14200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THEN_CLAUSE_in_thenElseOperator14217 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conjunctionExpression_in_disjunctionExpression14248 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_disjunctionOperator_in_disjunctionExpression14274 = new BitSet(new long[]{0x0100800B00408000L,0x223500000608812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conjunctionExpression_in_disjunctionExpression14297 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_OR_OP_in_disjunctionOperator14337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_conjunctionExpression14369 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_conjunctionOperator_in_conjunctionExpression14395 = new BitSet(new long[]{0x0100800B00408000L,0x223500000608812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_conjunctionExpression14418 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_AND_OP_in_conjunctionOperator14458 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_notOperator_in_logicalNegationExpression14488 = new BitSet(new long[]{0x0100800B00408000L,0x223500000608812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_logicalNegationExpression14507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_equalityExpression_in_logicalNegationExpression14523 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_notOperator14552 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_comparisonExpression_in_equalityExpression14584 = new BitSet(new long[]{0x0020020000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_equalityOperator_in_equalityExpression14610 = new BitSet(new long[]{0x0100800B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_comparisonExpression_in_equalityExpression14633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EQUAL_OP_in_equalityOperator14673 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_EQUAL_OP_in_equalityOperator14690 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTICAL_OP_in_equalityOperator14706 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression14737 = new BitSet(new long[]{0x3000080002100002L,0x0000188000000003L});
    public static final BitSet FOLLOW_comparisonOperator_in_comparisonExpression14765 = new BitSet(new long[]{0x0100800B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression14788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_largerOperator_in_comparisonExpression14810 = new BitSet(new long[]{0x0100800B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression14833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_smallerOperator_in_comparisonExpression14855 = new BitSet(new long[]{0x0100800B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression14878 = new BitSet(new long[]{0x0000000000000002L,0x0000180000000000L});
    public static final BitSet FOLLOW_smallerOperator_in_comparisonExpression14913 = new BitSet(new long[]{0x0100800B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression14927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeOperator_in_comparisonExpression14962 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_comparisonExpression14984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALL_AS_OP_in_smallerOperator15030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_smallerOperator15046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGE_AS_OP_in_largerOperator15075 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGER_OP_in_largerOperator15091 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPARE_OP_in_comparisonOperator15120 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_comparisonOperator15137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_typeOperator15166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_typeOperator15182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_typeOperator15198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_TYPES_in_typeOperator15214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_entryRangeExpression_in_existenceEmptinessExpression15245 = new BitSet(new long[]{0x0000040000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_existsNonemptyOperator_in_existenceEmptinessExpression15273 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXISTS_in_existsNonemptyOperator15319 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NONEMPTY_in_existsNonemptyOperator15336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_additiveExpression_in_entryRangeExpression15367 = new BitSet(new long[]{0x0000010000000002L,0x0000020080000000L});
    public static final BitSet FOLLOW_rangeIntervalEntryOperator_in_entryRangeExpression15393 = new BitSet(new long[]{0x0100800B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_additiveExpression_in_entryRangeExpression15416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RANGE_OP_in_rangeIntervalEntryOperator15456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_rangeIntervalEntryOperator15473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ENTRY_OP_in_rangeIntervalEntryOperator15489 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_scaleExpression_in_additiveExpression15520 = new BitSet(new long[]{0x0000000200000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_additiveOperator_in_additiveExpression15546 = new BitSet(new long[]{0x0100800B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_scaleExpression_in_additiveExpression15569 = new BitSet(new long[]{0x0000000200000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_SUM_OP_in_additiveOperator15609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIFFERENCE_OP_in_additiveOperator15626 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_multiplicativeExpression_in_scaleExpression15655 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_scaleOperator_in_scaleExpression15681 = new BitSet(new long[]{0x0100800B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_scaleExpression_in_scaleExpression15703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionExpression_in_multiplicativeExpression15745 = new BitSet(new long[]{0x0000000000000002L,0x0000000460000000L});
    public static final BitSet FOLLOW_multiplicativeOperator_in_multiplicativeExpression15771 = new BitSet(new long[]{0x0100800B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_unionExpression_in_multiplicativeExpression15794 = new BitSet(new long[]{0x0000000000000002L,0x0000000460000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_multiplicativeOperator15834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QUOTIENT_OP_in_multiplicativeOperator15851 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REMAINDER_OP_in_multiplicativeOperator15867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionExpression_in_unionExpression15898 = new BitSet(new long[]{0x0000000008000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_unionOperator_in_unionExpression15924 = new BitSet(new long[]{0x0100800B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_intersectionExpression_in_unionExpression15947 = new BitSet(new long[]{0x0000000008000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_unionOperator15991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPLEMENT_OP_in_unionOperator16007 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_negationComplementExpression_in_intersectionExpression16038 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_intersectionOperator_in_intersectionExpression16064 = new BitSet(new long[]{0x0100800B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_negationComplementExpression_in_intersectionExpression16087 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_intersectionOperator16131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unaryMinusOrComplementOperator_in_negationComplementExpression16160 = new BitSet(new long[]{0x0100800B00408000L,0x223500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_negationComplementExpression_in_negationComplementExpression16179 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exponentiationExpression_in_negationComplementExpression16195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIFFERENCE_OP_in_unaryMinusOrComplementOperator16224 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUM_OP_in_unaryMinusOrComplementOperator16241 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_incrementDecrementExpression_in_exponentiationExpression16270 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_exponentiationOperator_in_exponentiationExpression16296 = new BitSet(new long[]{0x0100800900408000L,0x222500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_exponentiationExpression_in_exponentiationExpression16318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_POWER_OP_in_exponentiationOperator16358 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SCALE_OP_in_scaleOperator16388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_prefixOperator_in_incrementDecrementExpression16418 = new BitSet(new long[]{0x0100800900408000L,0x222500000600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_incrementDecrementExpression_in_incrementDecrementExpression16436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_postfixIncrementDecrementExpression_in_incrementDecrementExpression16452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DECREMENT_OP_in_prefixOperator16481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INCREMENT_OP_in_prefixOperator16498 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_in_postfixIncrementDecrementExpression16528 = new BitSet(new long[]{0x0100000100000002L});
    public static final BitSet FOLLOW_postfixOperator_in_postfixIncrementDecrementExpression16556 = new BitSet(new long[]{0x0100000100000002L});
    public static final BitSet FOLLOW_DECREMENT_OP_in_postfixOperator16596 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INCREMENT_OP_in_postfixOperator16613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THIS_in_selfReference16643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUPER_in_selfReference16659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OUTER_in_selfReference16676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_selfReference16692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NATURAL_LITERAL_in_nonstringLiteral16725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FLOAT_LITERAL_in_nonstringLiteral16742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_nonstringLiteral16759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_stringLiteral16789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VERBATIM_STRING_in_stringLiteral16806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_stringExpression16846 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_START_in_stringExpression16862 = new BitSet(new long[]{0x0100800B00408000L,0x223500000608812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_stringExpression16880 = new BitSet(new long[]{0x0000000000000000L,0x0002800000000000L});
    public static final BitSet FOLLOW_STRING_MID_in_stringExpression16906 = new BitSet(new long[]{0x0100800B00408000L,0x223500000608812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_stringExpression16928 = new BitSet(new long[]{0x0000000000000000L,0x0002800000000000L});
    public static final BitSet FOLLOW_STRING_END_in_stringExpression16955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArguments16993 = new BitSet(new long[]{0x1000000000000000L,0x200008000100000DL});
    public static final BitSet FOLLOW_variance_in_typeArguments17033 = new BitSet(new long[]{0x0000000001000000L,0x200008000000000DL});
    public static final BitSet FOLLOW_type_in_typeArguments17073 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_typeArguments17124 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_COMMA_in_typeArguments17170 = new BitSet(new long[]{0x1000000001000000L,0x200008000100000DL});
    public static final BitSet FOLLOW_variance_in_typeArguments17210 = new BitSet(new long[]{0x0000000001000000L,0x200008000000000DL});
    public static final BitSet FOLLOW_type_in_typeArguments17256 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_typeArguments17347 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeArguments17433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_variadicType17481 = new BitSet(new long[]{0x0000000000000002L,0x0010000020000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_variadicType17507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUM_OP_in_variadicType17535 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_variadicType17564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_defaultedType17610 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_defaultedType17636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_defaultedType17663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tupleType17692 = new BitSet(new long[]{0x0000000000000000L,0x200008020000000CL});
    public static final BitSet FOLLOW_defaultedType_in_tupleType17720 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_COMMA_in_tupleType17754 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_defaultedType_in_tupleType17780 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_tupleType17820 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_groupedType17849 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_groupedType17867 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_groupedType17883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_iterableType17911 = new BitSet(new long[]{0x0000000000000000L,0x200008010000000CL});
    public static final BitSet FOLLOW_variadicType_in_iterableType17936 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_iterableType17960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_type17998 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_ENTRY_OP_in_type18024 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_unionType_in_type18058 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionType_in_unionType18123 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_unionType18164 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_intersectionType_in_unionType18204 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_abbreviatedType_in_intersectionType18294 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_intersectionType18335 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_abbreviatedType_in_intersectionType18375 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_qualifiedType_in_qualifiedOrTupleType18454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tupleType_in_qualifiedOrTupleType18471 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_iterableType_in_qualifiedOrTupleType18488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualifiedOrTupleType_in_abbreviatedType18529 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_OPTIONAL_in_abbreviatedType18591 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_LBRACKET_in_abbreviatedType18612 = new BitSet(new long[]{0x0000000000000000L,0x0000000200008000L});
    public static final BitSet FOLLOW_NATURAL_LITERAL_in_abbreviatedType18644 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_abbreviatedType18678 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_LPAREN_in_abbreviatedType18699 = new BitSet(new long[]{0x0000000000000000L,0x200008200000000CL});
    public static final BitSet FOLLOW_defaultedType_in_abbreviatedType18737 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_abbreviatedType18781 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_defaultedType_in_abbreviatedType18815 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_abbreviatedType18869 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_baseType18926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_groupedType_in_baseType18948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_baseType_in_qualifiedType18977 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_qualifiedType19003 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_qualifiedType19016 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_typeName_in_typeNameWithArguments19056 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_typeNameWithArguments19083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotations19147 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotation_in_annotations19186 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotationName_in_annotation19227 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000104L});
    public static final BitSet FOLLOW_positionalArguments_in_annotation19250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArguments_in_annotation19279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotation_in_compilerAnnotations19383 = new BitSet(new long[]{0x0000000004000002L});
    public static final BitSet FOLLOW_COMPILER_ANNOTATION_in_compilerAnnotation19423 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotationName_in_compilerAnnotation19440 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_compilerAnnotation19470 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_stringLiteral_in_compilerAnnotation19482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_conditions19524 = new BitSet(new long[]{0x2100840B00408000L,0x223500A0060A812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_condition_in_conditions19550 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_conditions19570 = new BitSet(new long[]{0x2100840B01408000L,0x223500A0060A812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_condition_in_conditions19605 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_conditions19667 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_existsCondition_in_condition19696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonemptyCondition_in_condition19712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_isCondition_in_condition19728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_satisfiesCondition_in_condition19745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_booleanCondition_in_condition19761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_booleanCondition19802 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXISTS_in_existsCondition19835 = new BitSet(new long[]{0x0102800B04408000L,0x223508000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_specifiedVariable_in_existsCondition19872 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_existsCondition19907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_existsCondition19927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NONEMPTY_in_nonemptyCondition19968 = new BitSet(new long[]{0x0102800B04408000L,0x223508000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_specifiedVariable_in_nonemptyCondition20003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_nonemptyCondition20032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_nonemptyCondition20049 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_isCondition20094 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_IS_OP_in_isCondition20121 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_isCondition20138 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_isConditionVariable_in_isCondition20170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_isCondition20193 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_isConditionVariable20238 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_isConditionVariable20254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiesCondition20283 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_satisfiesCondition20300 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeName_in_satisfiesCondition20317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifElse_in_controlStatement20346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchCaseElse_in_controlStatement20363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_whileLoop_in_controlStatement20380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forElse_in_controlStatement20397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tryCatchFinally_in_controlStatement20414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dynamic_in_controlStatement20430 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_controlBlock20468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_dynamic20534 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_dynamic20551 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifBlock_in_ifElse20588 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_elseBlock_in_ifElse20616 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_ifBlock20656 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_ifBlock20673 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_ifBlock20689 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_elseBlock20718 = new BitSet(new long[]{0x0040000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_elseIf_in_elseBlock20745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_elseBlock20775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifElse_in_elseIf20814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchHeader_in_switchCaseElse20851 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_cases_in_switchCaseElse20868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SWITCH_CLAUSE_in_switchHeader20897 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_LPAREN_in_switchHeader20914 = new BitSet(new long[]{0x0100800B00408000L,0x223500200608812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_switchHeader20931 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_switchHeader20957 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_caseBlock_in_cases20996 = new BitSet(new long[]{0x0000008000080002L});
    public static final BitSet FOLLOW_defaultCaseBlock_in_cases21033 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_CLAUSE_in_caseBlock21077 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_caseItemList_in_caseBlock21094 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_caseBlock21110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_caseItemList21139 = new BitSet(new long[]{0x2100800B00408000L,0x223500A00600812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_caseItem_in_caseItemList21160 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_caseItemList21187 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_defaultCaseBlock21217 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_defaultCaseBlock21234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_isCaseCondition_in_caseItem21267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_satisfiesCaseCondition_in_caseItem21288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_matchCaseCondition_in_caseItem21304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_valueCaseList_in_matchCaseCondition21333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_isCaseCondition21362 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_isCaseCondition21379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiesCaseCondition21408 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_satisfiesCaseCondition21425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forBlock_in_forElse21462 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_failBlock_in_forElse21489 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_forBlock21529 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_forIterator_in_forBlock21546 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_forBlock21563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_failBlock21592 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_failBlock21609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_forIterator21647 = new BitSet(new long[]{0x0002000004000000L,0x200008200000002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_compilerAnnotations_in_forIterator21659 = new BitSet(new long[]{0x0002000000000000L,0x200008200000002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_var_in_forIterator21676 = new BitSet(new long[]{0x1000010000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_containment_in_forIterator21706 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_forIterator21745 = new BitSet(new long[]{0x0002000000000000L,0x200008000000002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_var_in_forIterator21767 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_containment_in_forIterator21789 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_forIterator21827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_containment21858 = new BitSet(new long[]{0x0100800B00408002L,0x223500000608812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_containment21876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_whileBlock_in_whileLoop21919 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_WHILE_CLAUSE_in_whileBlock21948 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_whileBlock21964 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_whileBlock21980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tryBlock_in_tryCatchFinally22017 = new BitSet(new long[]{0x0000400000200002L});
    public static final BitSet FOLLOW_catchBlock_in_tryCatchFinally22044 = new BitSet(new long[]{0x0000400000200002L});
    public static final BitSet FOLLOW_finallyBlock_in_tryCatchFinally22081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TRY_CLAUSE_in_tryBlock22119 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000104L});
    public static final BitSet FOLLOW_resources_in_tryBlock22146 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_tryBlock22166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_tryBlock22194 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CATCH_CLAUSE_in_catchBlock22233 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_catchVariable_in_catchBlock22250 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_catchBlock22266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_catchVariable22295 = new BitSet(new long[]{0x0002000004000000L,0x200008200000002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variable_in_catchVariable22320 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_catchVariable22346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FINALLY_CLAUSE_in_finallyBlock22377 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_finallyBlock22394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_resources22423 = new BitSet(new long[]{0x0102800B04408000L,0x223508200608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_resource_in_resources22444 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_resources22466 = new BitSet(new long[]{0x0102800B04408000L,0x223508000608812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_resource_in_resources22485 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_resources22513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifiedVariable_in_resource22570 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_resource22590 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_specifiedVariable22631 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_specifiedVariable22658 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_variable22698 = new BitSet(new long[]{0x0002000000000000L,0x200008000000002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_var_in_variable22706 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_var22755 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_var22776 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_var22796 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_var22816 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_var22844 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_var22874 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_memberName_in_var22918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_var22951 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_var22980 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_memberName_in_impliedVariable23026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BACKTICK_in_metaLiteral23068 = new BitSet(new long[]{0x0202000000800080L,0x300008000410082CL,0x0000000000000002L});
    public static final BitSet FOLLOW_MODULE_in_metaLiteral23090 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_metaLiteral23108 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_PACKAGE_in_metaLiteral23130 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_metaLiteral23148 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_metaLiteral23170 = new BitSet(new long[]{0x0000000000000000L,0x200008000000002CL});
    public static final BitSet FOLLOW_type_in_metaLiteral23198 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral23228 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_metaLiteral23260 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_metaLiteral23278 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_ALIAS_in_metaLiteral23300 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_metaLiteral23318 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_TYPE_CONSTRAINT_in_metaLiteral23340 = new BitSet(new long[]{0x0000000000000000L,0x200008000000000CL});
    public static final BitSet FOLLOW_type_in_metaLiteral23358 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_metaLiteral23390 = new BitSet(new long[]{0x0000000000000000L,0x200008000000002CL});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_metaLiteral23418 = new BitSet(new long[]{0x0000000000000000L,0x200008000000002CL});
    public static final BitSet FOLLOW_type_in_metaLiteral23468 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral23504 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_metaLiteral23538 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral23567 = new BitSet(new long[]{0x0000000000008000L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_metaLiteral23604 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_metaLiteral23637 = new BitSet(new long[]{0x0000000000000000L,0x200008000000002CL});
    public static final BitSet FOLLOW_type_in_metaLiteral23677 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral23713 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_metaLiteral23747 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral23776 = new BitSet(new long[]{0x0000000000008000L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_metaLiteral23813 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_abbreviatedType_in_metaLiteral23870 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_metaLiteral23888 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral23906 = new BitSet(new long[]{0x0000000000008000L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_metaLiteral23934 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_groupedType_in_metaLiteral23992 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_metaLiteral24010 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral24028 = new BitSet(new long[]{0x0000000000008000L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_metaLiteral24056 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral24113 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_metaLiteral24131 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral24149 = new BitSet(new long[]{0x0000000000008000L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_metaLiteral24177 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_type_in_metaLiteral24213 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_memberName_in_metaLiteral24238 = new BitSet(new long[]{0x0000000000008000L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_metaLiteral24266 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_BACKTICK_in_metaLiteral24301 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred1_Ceylon164 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000820L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_synpred1_Ceylon166 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_MODULE_in_synpred1_Ceylon168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred2_Ceylon210 = new BitSet(new long[]{0x0000000000000000L,0x0001000004000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_synpred2_Ceylon212 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_PACKAGE_in_synpred2_Ceylon214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_synpred3_Ceylon6862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedAssertionStart_in_synpred4_Ceylon6890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationListStart_in_synpred5_Ceylon6916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_synpred6_Ceylon7041 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_synpred6_Ceylon7043 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_synpred6_Ceylon7045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unambiguousType_in_synpred7_Ceylon7204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifierParametersStart_in_synpred8_Ceylon9014 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred10_Ceylon9556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousArgument_in_synpred11_Ceylon9591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeArgumentsStart_in_synpred12_Ceylon9919 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeArgumentsStart_in_synpred13_Ceylon10000 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred14_Ceylon10482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousArgument_in_synpred15_Ceylon10517 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred16_Ceylon12837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_synpred17_Ceylon13257 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_synpred17_Ceylon13259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonParametersStart_in_synpred17_Ceylon13261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_synpred18_Ceylon17463 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_set_in_synpred18_Ceylon17465 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_synpred19_Ceylon17594 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_synpred19_Ceylon17597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedAnnotationArgumentsStart_in_synpred20_Ceylon19267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred21_Ceylon19853 = new BitSet(new long[]{0x0202000800801080L,0x200008000010002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_synpred21_Ceylon19856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred21_Ceylon19858 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred22_Ceylon19903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred23_Ceylon19986 = new BitSet(new long[]{0x0202000800801080L,0x200008000010002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_synpred23_Ceylon19989 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred23_Ceylon19991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred24_Ceylon20028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred25_Ceylon20155 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_synpred25_Ceylon20157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_synpred26_Ceylon20462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_synpred27_Ceylon21264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_synpred28_Ceylon21285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPILER_ANNOTATION_in_synpred29_Ceylon22552 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_synpred29_Ceylon22554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred29_Ceylon22556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_abbreviatedType_in_synpred30_Ceylon23847 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_synpred30_Ceylon23849 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_groupedType_in_synpred31_Ceylon23969 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_synpred31_Ceylon23971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_synpred32_Ceylon24090 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_synpred32_Ceylon24092 = new BitSet(new long[]{0x0000000000000002L});

}