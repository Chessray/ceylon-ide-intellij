<project name="ceylon-ide-intellij (Ceylon code)" basedir="." default="build">

    <property file="user-build.properties" />
    <property file="build.properties" />
    <property name="ceylon.verbosity" value="false" />
    <property name="ceylon.executable" value="${dist.bin.dir}/ceylon" />
    <property name="out.repo" location="modules" />

    <property name="ceylon.repo.dir" location="${user.home}/.ceylon/repo" />

    <!-- ANTLR -->
    <property name="base.path" location="../../ceylon/lib"/>
    <property file="../../ceylon/lib/build.properties"/>
    <property file="../../ceylon/common-build.properties"/>
    <property name="gensrc" location="gensrc"/>
    <property name="gen" location="gen"/>
    <property name="antlr.src" location="Ceylon.g"/>
    <property name="antlr.dst" location="${gensrc}"/>

    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${ceylon.root.dir}/lib/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <path id="ant-tasks">
        <pathelement location="${ceylon.ant.lib}" />
    </path>

    <target name="ceylondefs">
        <typedef resource="com/redhat/ceylon/ant/antlib.xml" classpathref="ant-tasks" />

        <moduleset id="modules.source">
            <module name="org.intellij.plugins.ceylon.ide.ceylonCode" />
        </moduleset>

        <reposet id="reposet.compile">
            <repo url="${out.repo}" />
            <repo url="flat:${intellij.repo.dir}"/>
            <repo url="${basedir}/../../ceylon-ide-common/repo"/>
            <repo url="${ceylon.repo.dir}" />
        </reposet>
    </target>

    <condition property="ideaRootDefined">
		<isset property="ideaRoot"/>
	</condition>
	
    <!-- Local repository -->
    <property name="intellij.repo.dir" location="${basedir}/intellij-repository" />
    
	<loadproperties srcfile="${basedir}/../resources/IdeaModuleToImport.properties" prefix="moduleToImport."/>
	<propertyselector property="modulesToImport"
	                         delimiter=","
	                         match="moduleToImport\.(.*)"
	                         select="\1"
	                         casesensitive="true" />

    <target name="help">
        <echo>Options for building the Ceylon IDE plugins:
    ant copy-intellij-dependencies   - Copies dependencies from the IntelliJ installation to a local repository
    ant clean                        - Cleans the build environment
    ant build                        - Builds the Ceylon part of the IDE
        </echo>
    </target>

    <target name="importModule">
		<propertycopy name="moduleName" from="moduleToImport.${moduleToImport}" />
		<echo>${moduleName}</echo>
        <if>
            <available file="${ideaRoot}/lib/${moduleToImport}"/>
            <then>
                <copy file="${ideaRoot}/lib/${moduleToImport}"
                      tofile="${intellij.repo.dir}/${moduleName}-current.jar"/>
            </then>
            <elseif>
                <available file="${ideaRoot}/plugins/gradle/lib/${moduleToImport}"/>
                <then>
                    <copy file="${ideaRoot}/plugins/gradle/lib/${moduleToImport}"
                          tofile="${intellij.repo.dir}/${moduleName}-current.jar"/>
                </then>
            </elseif>
            <elseif>
                <available file="${ideaRoot}/plugins/Groovy/lib/${moduleToImport}"/>
                <then>
                    <copy file="${ideaRoot}/plugins/Groovy/lib/${moduleToImport}"
                          tofile="${intellij.repo.dir}/${moduleName}-current.jar"/>
                </then>
            </elseif>
            <else>
                <fail message="Failed to find required dependency '${moduleToImport}' in IntelliJ installation"/>
            </else>
        </if>
	</target>
	
	<target name="copy-intellij-dependencies">
        <delete dir="${intellij.repo.dir}" failonerror="false"/>
		<mkdir dir="${intellij.repo.dir}"/>
        <fail unless="ideaRootDefined"
        	message="Please set the 'ideaRoot' property to the root of the IntelliJ IDEA installation (which must contain a 'lib' sub-folder)"/>
        <copy file="${java.home}/../lib/tools.jar" tofile="${intellij.repo.dir}/jdk.tools-current.jar"/>
		<foreach list="${modulesToImport}" param="moduleToImport" target="importModule">
		</foreach>
        <!-- Merge several jars -->
        <delete file="${intellij.repo.dir}/com.intellij.idea-current.jar"/>
        <delete file="${intellij.repo.dir}/com.intellij.openapi-current.jar"/>
        <delete file="${intellij.repo.dir}/com.intellij.util-current.jar"/>
        <zip destfile="${intellij.repo.dir}/com.intellij.idea-current.jar">
            <zipgroupfileset dir="${ideaRoot}/lib/">
                <include name="idea.jar"/>
                <include name="openapi.jar"/>
                <include name="util.jar"/>
            </zipgroupfileset>
        </zip>
        <zip destfile="${intellij.repo.dir}/com.intellij.openapi-current.jar" whenempty="create" basedir="." excludes="**"/>
        <zip destfile="${intellij.repo.dir}/com.intellij.util-current.jar" whenempty="create" basedir="." excludes="**"/>
	</target>

    <target name="antlr.tree"
            description="Generate code from ANTLR grammar">
        <mkdir dir="${antlr.dst}/com/redhat/ceylon/compiler/typechecker/treegen"/>
        <java classname="org.antlr.Tool" dir="${basedir}" fork="yes">
            <arg value="-fo"/>
            <arg value="${antlr.dst}/com/redhat/ceylon/compiler/typechecker/treegen"/>
            <arg value="grammar/IdeaAstTypesGen.g"/>
            <arg value="grammar/PsiIntfGen.g"/>
            <arg value="grammar/PsiImplGen.g"/>
            <arg value="grammar/PsiFactoryGen.g"/>
            <arg value="grammar/NodeToIElementTypeMapGen.g"/>
            <classpath>
                <pathelement location="${antlr.lib}"/>
            </classpath>
        </java>
        <delete>
            <fileset dir="${antlr.dst}/com/redhat/ceylon/compiler/typechecker/treegen"
                     includes="*.tokens"/>
        </delete>
    </target>

    <path id="grammar-common-classpath">
        <pathelement location="${antlr.lib}"/>
        <pathelement location="${dist.repo.dir}/${ceylon.typechecker.jar}"/>
        <pathelement location="${dist.repo.dir}/${ceylon.model.jar}"/>
    </path>

    <target name="treegen" depends="antlr.tree">
        <mkdir dir="${build.classes}"/>
        <javac
                srcdir="grammar:${gensrc}"
                destdir="${build.classes}"
                debug="true"
                encoding="UTF-8">
            <classpath refid="grammar-common-classpath"/>
            <include name="com/redhat/ceylon/compiler/typechecker/treegen/*.java"/>
        </javac>
    </target>

    <target name="tree" depends="treegen"
            description="Generate the tree builder code">
        <fail message="The 'openapi.jar' archive of the IDEA installation could not be found. Please check that the 'ideaRoot' property is set or that the ant process is started with the IDEA-bundle Ant tool.">
            <condition>
                <not>
                    <available file="${ideaRoot}/lib/openapi.jar" />
                </not>
            </condition>
        </fail>

        <mkdir dir="${basedir}/gen"/>

        <property name="NodesFile" location="../../ceylon/typechecker/antlr/Ceylon.nodes"/>
        <java classname="com.redhat.ceylon.compiler.typechecker.treegen.GenerateIdeaElements" dir="${basedir}" fork="yes">
            <arg value="${NodesFile}"/>
            <arg path="${gen}"/>
            <classpath>
                <path refid="grammar-common-classpath"/>
                <pathelement location="${build.classes}"/>
            </classpath>
        </java>
        <javac
                srcdir="source:${gen}:grammar"
                destdir="${build.classes}"
                debug="true"
                encoding="UTF-8">
            <classpath>
                <path refid="grammar-common-classpath"/>
                <pathelement location="${ideaRoot}/lib/openapi.jar"/>
                <pathelement location="${ideaRoot}/lib/util.jar"/>
                <pathelement location="${ideaRoot}/lib/annotations.jar"/>
            </classpath>

            <include name="*.java"/>
            <include name="org/intellij/plugins/ceylon/ide/ceylonCode/psi/CeylonPsi.java"/>
        </javac>
        <java classname="TokenTypesGenerator" dir="${basedir}" fork="yes">
            <arg path="gen"/>
            <classpath>
                <path refid="grammar-common-classpath"/>
                <pathelement location="${build.classes}"/>
            </classpath>
        </java>
        <java classname="CeylonPsiVisitorGenerator" dir="${basedir}" fork="yes">
            <arg path="gen"/>
            <classpath>
                <path refid="grammar-common-classpath"/>
                <pathelement location="${build.classes}"/>
                <pathelement location="${ideaRoot}/lib/openapi.jar"/>
                <pathelement location="${ideaRoot}/lib/util.jar"/>
            </classpath>
        </java>
    </target>

    <target name="build" depends="tree,ceylondefs,copy-intellij-dependencies">
        <ceylon-compile executable="${ceylon.executable}"
                        verbose="${ceylon.verbosity}"
                        encoding="UTF-8"
                        pack200="true"
                        fork="true"
                        mavenoverrides="${basedir}/overrides.xml"
                        out="${out.repo}">
            <source value="${basedir}/source"/>
            <source value="${gen}"/>
            <reposet refid="reposet.compile"/>
            <moduleset refid="modules.source"/>
        </ceylon-compile>
    </target>

    <target name="clean" description="Deletes the test-modules and modules directories">
        <delete dir="${out.repo}" />
        <delete dir="${gen}" />
        <delete dir="${gensrc}" />
        <delete dir="${build.classes}" />
    </target>
</project>
