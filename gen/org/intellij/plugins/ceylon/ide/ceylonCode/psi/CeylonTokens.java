// Automatically generated by TokenTypesGenerator.java, do not edit!
package org.intellij.plugins.ceylon.ide.ceylonCode.psi;

import com.intellij.psi.TokenType;
import com.intellij.psi.tree.IElementType;
public interface CeylonTokens {
    IElementType EOF = new CeylonTokenType("EOF");
    IElementType ABSTRACTED_TYPE = new CeylonTokenType("ABSTRACTED_TYPE");
    IElementType ADD_SPECIFY = new CeylonTokenType("ADD_SPECIFY");
    IElementType AIDENTIFIER = new CeylonTokenType("AIDENTIFIER");
    IElementType ALIAS = new CeylonTokenType("ALIAS");
    IElementType AND_OP = new CeylonTokenType("AND_OP");
    IElementType AND_SPECIFY = new CeylonTokenType("AND_SPECIFY");
    IElementType ASSEMBLY = new CeylonTokenType("ASSEMBLY");
    IElementType ASSERT = new CeylonTokenType("ASSERT");
    IElementType ASSIGN = new CeylonTokenType("ASSIGN");
    IElementType ASTRING_LITERAL = new CeylonTokenType("ASTRING_LITERAL");
    IElementType AVERBATIM_STRING = new CeylonTokenType("AVERBATIM_STRING");
    IElementType BACKTICK = new CeylonTokenType("BACKTICK");
    IElementType BREAK = new CeylonTokenType("BREAK");
    IElementType BinaryDigit = new CeylonTokenType("BinaryDigit");
    IElementType BinaryDigits = new CeylonTokenType("BinaryDigits");
    IElementType CASE_CLAUSE = new CeylonTokenType("CASE_CLAUSE");
    IElementType CASE_TYPES = new CeylonTokenType("CASE_TYPES");
    IElementType CATCH_CLAUSE = new CeylonTokenType("CATCH_CLAUSE");
    IElementType CHAR_LITERAL = new CeylonTokenType("CHAR_LITERAL");
    IElementType CLASS_DEFINITION = new CeylonTokenType("CLASS_DEFINITION");
    IElementType COMMA = new CeylonTokenType("COMMA");
    IElementType COMPARE_OP = new CeylonTokenType("COMPARE_OP");
    IElementType COMPILER_ANNOTATION = new CeylonTokenType("COMPILER_ANNOTATION");
    IElementType COMPLEMENT_OP = new CeylonTokenType("COMPLEMENT_OP");
    IElementType COMPLEMENT_SPECIFY = new CeylonTokenType("COMPLEMENT_SPECIFY");
    IElementType COMPUTE = new CeylonTokenType("COMPUTE");
    IElementType CONTINUE = new CeylonTokenType("CONTINUE");
    IElementType CharPart = new CeylonTokenType("CharPart");
    IElementType DECREMENT_OP = new CeylonTokenType("DECREMENT_OP");
    IElementType DIFFERENCE_OP = new CeylonTokenType("DIFFERENCE_OP");
    IElementType DIVIDE_SPECIFY = new CeylonTokenType("DIVIDE_SPECIFY");
    IElementType DYNAMIC = new CeylonTokenType("DYNAMIC");
    IElementType Digit = new CeylonTokenType("Digit");
    IElementType Digits = new CeylonTokenType("Digits");
    IElementType ELLIPSIS = new CeylonTokenType("ELLIPSIS");
    IElementType ELSE_CLAUSE = new CeylonTokenType("ELSE_CLAUSE");
    IElementType ENTRY_OP = new CeylonTokenType("ENTRY_OP");
    IElementType EQUAL_OP = new CeylonTokenType("EQUAL_OP");
    IElementType EXISTS = new CeylonTokenType("EXISTS");
    IElementType EXTENDS = new CeylonTokenType("EXTENDS");
    IElementType EscapeSequence = new CeylonTokenType("EscapeSequence");
    IElementType Exponent = new CeylonTokenType("Exponent");
    IElementType FINALLY_CLAUSE = new CeylonTokenType("FINALLY_CLAUSE");
    IElementType FLOAT_LITERAL = new CeylonTokenType("FLOAT_LITERAL");
    IElementType FOR_CLAUSE = new CeylonTokenType("FOR_CLAUSE");
    IElementType FUNCTION_MODIFIER = new CeylonTokenType("FUNCTION_MODIFIER");
    IElementType FractionalMagnitude = new CeylonTokenType("FractionalMagnitude");
    IElementType HexDigit = new CeylonTokenType("HexDigit");
    IElementType HexDigits = new CeylonTokenType("HexDigits");
    IElementType IDENTICAL_OP = new CeylonTokenType("IDENTICAL_OP");
    IElementType IF_CLAUSE = new CeylonTokenType("IF_CLAUSE");
    IElementType IMPORT = new CeylonTokenType("IMPORT");
    IElementType INCREMENT_OP = new CeylonTokenType("INCREMENT_OP");
    IElementType INTERFACE_DEFINITION = new CeylonTokenType("INTERFACE_DEFINITION");
    IElementType INTERSECTION_OP = new CeylonTokenType("INTERSECTION_OP");
    IElementType INTERSECT_SPECIFY = new CeylonTokenType("INTERSECT_SPECIFY");
    IElementType IN_OP = new CeylonTokenType("IN_OP");
    IElementType IS_OP = new CeylonTokenType("IS_OP");
    IElementType IdentifierPart = new CeylonTokenType("IdentifierPart");
    IElementType IdentifierStart = new CeylonTokenType("IdentifierStart");
    IElementType LARGER_OP = new CeylonTokenType("LARGER_OP");
    IElementType LARGE_AS_OP = new CeylonTokenType("LARGE_AS_OP");
    IElementType LBRACE = new CeylonTokenType("LBRACE");
    IElementType LBRACKET = new CeylonTokenType("LBRACKET");
    IElementType LET = new CeylonTokenType("LET");
    IElementType LIDENTIFIER = new CeylonTokenType("LIDENTIFIER");
    IElementType LINE_COMMENT = new CeylonTokenType("LINE_COMMENT");
    IElementType LIdentifierPrefix = new CeylonTokenType("LIdentifierPrefix");
    IElementType LPAREN = new CeylonTokenType("LPAREN");
    IElementType Letter = new CeylonTokenType("Letter");
    IElementType MEMBER_OP = new CeylonTokenType("MEMBER_OP");
    IElementType MODULE = new CeylonTokenType("MODULE");
    IElementType MULTIPLY_SPECIFY = new CeylonTokenType("MULTIPLY_SPECIFY");
    IElementType MULTI_COMMENT = new CeylonTokenType("MULTI_COMMENT");
    IElementType Magnitude = new CeylonTokenType("Magnitude");
    IElementType NATURAL_LITERAL = new CeylonTokenType("NATURAL_LITERAL");
    IElementType NEW = new CeylonTokenType("NEW");
    IElementType NONEMPTY = new CeylonTokenType("NONEMPTY");
    IElementType NOT_EQUAL_OP = new CeylonTokenType("NOT_EQUAL_OP");
    IElementType NOT_OP = new CeylonTokenType("NOT_OP");
    IElementType OBJECT_DEFINITION = new CeylonTokenType("OBJECT_DEFINITION");
    IElementType OPTIONAL = new CeylonTokenType("OPTIONAL");
    IElementType OR_OP = new CeylonTokenType("OR_OP");
    IElementType OR_SPECIFY = new CeylonTokenType("OR_SPECIFY");
    IElementType OUT = new CeylonTokenType("OUT");
    IElementType OUTER = new CeylonTokenType("OUTER");
    IElementType PACKAGE = new CeylonTokenType("PACKAGE");
    IElementType PIDENTIFIER = new CeylonTokenType("PIDENTIFIER");
    IElementType POWER_OP = new CeylonTokenType("POWER_OP");
    IElementType PRODUCT_OP = new CeylonTokenType("PRODUCT_OP");
    IElementType QUOTIENT_OP = new CeylonTokenType("QUOTIENT_OP");
    IElementType RANGE_OP = new CeylonTokenType("RANGE_OP");
    IElementType RBRACE = new CeylonTokenType("RBRACE");
    IElementType RBRACKET = new CeylonTokenType("RBRACKET");
    IElementType REMAINDER_OP = new CeylonTokenType("REMAINDER_OP");
    IElementType REMAINDER_SPECIFY = new CeylonTokenType("REMAINDER_SPECIFY");
    IElementType RETURN = new CeylonTokenType("RETURN");
    IElementType RPAREN = new CeylonTokenType("RPAREN");
    IElementType SAFE_MEMBER_OP = new CeylonTokenType("SAFE_MEMBER_OP");
    IElementType SATISFIES = new CeylonTokenType("SATISFIES");
    IElementType SCALE_OP = new CeylonTokenType("SCALE_OP");
    IElementType SEGMENT_OP = new CeylonTokenType("SEGMENT_OP");
    IElementType SEMICOLON = new CeylonTokenType("SEMICOLON");
    IElementType SMALLER_OP = new CeylonTokenType("SMALLER_OP");
    IElementType SMALL_AS_OP = new CeylonTokenType("SMALL_AS_OP");
    IElementType SPECIFY = new CeylonTokenType("SPECIFY");
    IElementType SPREAD_OP = new CeylonTokenType("SPREAD_OP");
    IElementType STRING_END = new CeylonTokenType("STRING_END");
    IElementType STRING_LITERAL = new CeylonTokenType("STRING_LITERAL");
    IElementType STRING_MID = new CeylonTokenType("STRING_MID");
    IElementType STRING_START = new CeylonTokenType("STRING_START");
    IElementType SUBTRACT_SPECIFY = new CeylonTokenType("SUBTRACT_SPECIFY");
    IElementType SUM_OP = new CeylonTokenType("SUM_OP");
    IElementType SUPER = new CeylonTokenType("SUPER");
    IElementType SWITCH_CLAUSE = new CeylonTokenType("SWITCH_CLAUSE");
    IElementType StringPart = new CeylonTokenType("StringPart");
    IElementType THEN_CLAUSE = new CeylonTokenType("THEN_CLAUSE");
    IElementType THIS = new CeylonTokenType("THIS");
    IElementType THROW = new CeylonTokenType("THROW");
    IElementType TRY_CLAUSE = new CeylonTokenType("TRY_CLAUSE");
    IElementType TYPE_CONSTRAINT = new CeylonTokenType("TYPE_CONSTRAINT");
    IElementType UIDENTIFIER = new CeylonTokenType("UIDENTIFIER");
    IElementType UIdentifierPrefix = new CeylonTokenType("UIdentifierPrefix");
    IElementType UNION_OP = new CeylonTokenType("UNION_OP");
    IElementType UNION_SPECIFY = new CeylonTokenType("UNION_SPECIFY");
    IElementType VALUE_MODIFIER = new CeylonTokenType("VALUE_MODIFIER");
    IElementType VERBATIM_STRING = new CeylonTokenType("VERBATIM_STRING");
    IElementType VOID_MODIFIER = new CeylonTokenType("VOID_MODIFIER");
    IElementType WHILE_CLAUSE = new CeylonTokenType("WHILE_CLAUSE");
    IElementType STRING_TEMPLATE = new CeylonTokenType("STRING_TEMPLATE");
    IElementType STRING_INTERP = new CeylonTokenType("STRING_INTERP");
    IElementType WS = TokenType.WHITE_SPACE;
}
