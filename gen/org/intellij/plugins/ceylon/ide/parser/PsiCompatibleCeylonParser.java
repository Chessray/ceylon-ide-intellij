// $ANTLR 3.4 /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g 2015-05-07 11:42:11
 package org.intellij.plugins.ceylon.ide.parser;
                  import com.redhat.ceylon.compiler.typechecker.tree.MissingToken;
                  import com.redhat.ceylon.compiler.typechecker.tree.Node;
                  import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.MethodDeclaration;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.MethodDefinition;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.FunctionArgument;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.AttributeDeclaration;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.Variable;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.ClassDefinition;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.IsCase;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.ExtendedTypeExpression;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.*;

import com.redhat.ceylon.compiler.typechecker.parser.ParseError;
                
                  import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.Package; 

import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class PsiCompatibleCeylonParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "ABSTRACTED_TYPE", "ADD_SPECIFY", "AIDENTIFIER", "ALIAS", "AND_OP", "AND_SPECIFY", "ASSEMBLY", "ASSERT", "ASSIGN", "ASTRING_LITERAL", "AVERBATIM_STRING", "BACKTICK", "BREAK", "BinaryDigit", "BinaryDigits", "CASE_CLAUSE", "CASE_TYPES", "CATCH_CLAUSE", "CHAR_LITERAL", "CLASS_DEFINITION", "COMMA", "COMPARE_OP", "COMPILER_ANNOTATION", "COMPLEMENT_OP", "COMPLEMENT_SPECIFY", "COMPUTE", "CONTINUE", "CharPart", "DECREMENT_OP", "DIFFERENCE_OP", "DIVIDE_SPECIFY", "DYNAMIC", "Digit", "Digits", "ELLIPSIS", "ELSE_CLAUSE", "ENTRY_OP", "EQUAL_OP", "EXISTS", "EXTENDS", "EscapeSequence", "Exponent", "FINALLY_CLAUSE", "FLOAT_LITERAL", "FOR_CLAUSE", "FUNCTION_MODIFIER", "FractionalMagnitude", "HexDigit", "HexDigits", "IDENTICAL_OP", "IF_CLAUSE", "IMPORT", "INCREMENT_OP", "INTERFACE_DEFINITION", "INTERSECTION_OP", "INTERSECT_SPECIFY", "IN_OP", "IS_OP", "IdentifierPart", "IdentifierStart", "LARGER_OP", "LARGE_AS_OP", "LBRACE", "LBRACKET", "LET", "LIDENTIFIER", "LINE_COMMENT", "LIdentifierPrefix", "LPAREN", "Letter", "MEMBER_OP", "MODULE", "MULTIPLY_SPECIFY", "MULTI_COMMENT", "Magnitude", "NATURAL_LITERAL", "NEW", "NONEMPTY", "NOT_EQUAL_OP", "NOT_OP", "OBJECT_DEFINITION", "OPTIONAL", "OR_OP", "OR_SPECIFY", "OUT", "OUTER", "PACKAGE", "PIDENTIFIER", "POWER_OP", "PRODUCT_OP", "QUOTIENT_OP", "RANGE_OP", "RBRACE", "RBRACKET", "REMAINDER_OP", "REMAINDER_SPECIFY", "RETURN", "RPAREN", "SAFE_MEMBER_OP", "SATISFIES", "SCALE_OP", "SEGMENT_OP", "SEMICOLON", "SMALLER_OP", "SMALL_AS_OP", "SPECIFY", "SPREAD_OP", "STRING_END", "STRING_LITERAL", "STRING_MID", "STRING_START", "SUBTRACT_SPECIFY", "SUM_OP", "SUPER", "SWITCH_CLAUSE", "StringPart", "THEN_CLAUSE", "THIS", "THROW", "TRY_CLAUSE", "TYPE_CONSTRAINT", "UIDENTIFIER", "UIdentifierPrefix", "UNION_OP", "UNION_SPECIFY", "VALUE_MODIFIER", "VERBATIM_STRING", "VOID_MODIFIER", "WHILE_CLAUSE", "WS"
    };

    public static final int EOF=-1;
    public static final int ABSTRACTED_TYPE=4;
    public static final int ADD_SPECIFY=5;
    public static final int AIDENTIFIER=6;
    public static final int ALIAS=7;
    public static final int AND_OP=8;
    public static final int AND_SPECIFY=9;
    public static final int ASSEMBLY=10;
    public static final int ASSERT=11;
    public static final int ASSIGN=12;
    public static final int ASTRING_LITERAL=13;
    public static final int AVERBATIM_STRING=14;
    public static final int BACKTICK=15;
    public static final int BREAK=16;
    public static final int BinaryDigit=17;
    public static final int BinaryDigits=18;
    public static final int CASE_CLAUSE=19;
    public static final int CASE_TYPES=20;
    public static final int CATCH_CLAUSE=21;
    public static final int CHAR_LITERAL=22;
    public static final int CLASS_DEFINITION=23;
    public static final int COMMA=24;
    public static final int COMPARE_OP=25;
    public static final int COMPILER_ANNOTATION=26;
    public static final int COMPLEMENT_OP=27;
    public static final int COMPLEMENT_SPECIFY=28;
    public static final int COMPUTE=29;
    public static final int CONTINUE=30;
    public static final int CharPart=31;
    public static final int DECREMENT_OP=32;
    public static final int DIFFERENCE_OP=33;
    public static final int DIVIDE_SPECIFY=34;
    public static final int DYNAMIC=35;
    public static final int Digit=36;
    public static final int Digits=37;
    public static final int ELLIPSIS=38;
    public static final int ELSE_CLAUSE=39;
    public static final int ENTRY_OP=40;
    public static final int EQUAL_OP=41;
    public static final int EXISTS=42;
    public static final int EXTENDS=43;
    public static final int EscapeSequence=44;
    public static final int Exponent=45;
    public static final int FINALLY_CLAUSE=46;
    public static final int FLOAT_LITERAL=47;
    public static final int FOR_CLAUSE=48;
    public static final int FUNCTION_MODIFIER=49;
    public static final int FractionalMagnitude=50;
    public static final int HexDigit=51;
    public static final int HexDigits=52;
    public static final int IDENTICAL_OP=53;
    public static final int IF_CLAUSE=54;
    public static final int IMPORT=55;
    public static final int INCREMENT_OP=56;
    public static final int INTERFACE_DEFINITION=57;
    public static final int INTERSECTION_OP=58;
    public static final int INTERSECT_SPECIFY=59;
    public static final int IN_OP=60;
    public static final int IS_OP=61;
    public static final int IdentifierPart=62;
    public static final int IdentifierStart=63;
    public static final int LARGER_OP=64;
    public static final int LARGE_AS_OP=65;
    public static final int LBRACE=66;
    public static final int LBRACKET=67;
    public static final int LET=68;
    public static final int LIDENTIFIER=69;
    public static final int LINE_COMMENT=70;
    public static final int LIdentifierPrefix=71;
    public static final int LPAREN=72;
    public static final int Letter=73;
    public static final int MEMBER_OP=74;
    public static final int MODULE=75;
    public static final int MULTIPLY_SPECIFY=76;
    public static final int MULTI_COMMENT=77;
    public static final int Magnitude=78;
    public static final int NATURAL_LITERAL=79;
    public static final int NEW=80;
    public static final int NONEMPTY=81;
    public static final int NOT_EQUAL_OP=82;
    public static final int NOT_OP=83;
    public static final int OBJECT_DEFINITION=84;
    public static final int OPTIONAL=85;
    public static final int OR_OP=86;
    public static final int OR_SPECIFY=87;
    public static final int OUT=88;
    public static final int OUTER=89;
    public static final int PACKAGE=90;
    public static final int PIDENTIFIER=91;
    public static final int POWER_OP=92;
    public static final int PRODUCT_OP=93;
    public static final int QUOTIENT_OP=94;
    public static final int RANGE_OP=95;
    public static final int RBRACE=96;
    public static final int RBRACKET=97;
    public static final int REMAINDER_OP=98;
    public static final int REMAINDER_SPECIFY=99;
    public static final int RETURN=100;
    public static final int RPAREN=101;
    public static final int SAFE_MEMBER_OP=102;
    public static final int SATISFIES=103;
    public static final int SCALE_OP=104;
    public static final int SEGMENT_OP=105;
    public static final int SEMICOLON=106;
    public static final int SMALLER_OP=107;
    public static final int SMALL_AS_OP=108;
    public static final int SPECIFY=109;
    public static final int SPREAD_OP=110;
    public static final int STRING_END=111;
    public static final int STRING_LITERAL=112;
    public static final int STRING_MID=113;
    public static final int STRING_START=114;
    public static final int SUBTRACT_SPECIFY=115;
    public static final int SUM_OP=116;
    public static final int SUPER=117;
    public static final int SWITCH_CLAUSE=118;
    public static final int StringPart=119;
    public static final int THEN_CLAUSE=120;
    public static final int THIS=121;
    public static final int THROW=122;
    public static final int TRY_CLAUSE=123;
    public static final int TYPE_CONSTRAINT=124;
    public static final int UIDENTIFIER=125;
    public static final int UIdentifierPrefix=126;
    public static final int UNION_OP=127;
    public static final int UNION_SPECIFY=128;
    public static final int VALUE_MODIFIER=129;
    public static final int VERBATIM_STRING=130;
    public static final int VOID_MODIFIER=131;
    public static final int WHILE_CLAUSE=132;
    public static final int WS=133;

    // delegates
    public Parser[] getDelegates() {
        return new Parser[] {};
    }

    // delegators


    public PsiCompatibleCeylonParser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public PsiCompatibleCeylonParser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
        this.state.ruleMemo = new HashMap[314+1];
         

    }

    public String[] getTokenNames() { return PsiCompatibleCeylonParser.tokenNames; }
    public String getGrammarFileName() { return "/Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g"; }


        private java.util.List<ParseError> errors 
                = new java.util.ArrayList<ParseError>();

        public ParseError newParseError(String[] tn,
                RecognitionException re) {
            ParseError parseError = new ParseError(this, re, expecting, tn);
            expecting = -1;
            return parseError;
        }
        
        public ParseError newParseError(String[] tn, 
                RecognitionException re,
                int code) {
            ParseError parseError = new ParseError(this, re, tn, code);
            return parseError;
        }

        @Override public void displayRecognitionError(String[] tn,
                RecognitionException re) {
            errors.add(newParseError(tn, re));
        }
        public void displayRecognitionError(String[] tn,
                RecognitionException re, 
                int code) {
            errors.add(newParseError(tn, re, code));
        }
        public java.util.List<ParseError> getErrors() {
            return errors;
        }
        int expecting=-1;
      @Override
      protected Object getMissingSymbol(IntStream input,
                        RecognitionException e,
                        int expectedTokenType,
                        BitSet follow)
      {
        String tokenText;
        if ( expectedTokenType==Token.EOF ) tokenText = "<missing EOF>";
        else tokenText = "<missing "+getTokenNames()[expectedTokenType]+">";
        MissingToken t = new MissingToken(expectedTokenType, tokenText);
        Token current = ((TokenStream)input).LT(1);
        if ( current.getType() == Token.EOF ) {
          current = ((TokenStream)input).LT(-1);
        }
        t.setLine(current.getLine());
        t.setCharPositionInLine(current.getCharPositionInLine());
        t.setChannel(DEFAULT_TOKEN_CHANNEL);
        t.setInputStream(current.getInputStream());
        return t;
      }



    // $ANTLR start "compilationUnit"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:80:1: compilationUnit returns [CompilationUnit compilationUnit] : (ca= compilerAnnotations SEMICOLON )? ( importDeclaration | ( annotatedModuleDescriptorStart )=> moduleDescriptor | ( annotatedPackageDescriptorStart )=> packageDescriptor | toplevelDeclaration | RBRACE )* EOF ;
    public CompilationUnit compilationUnit() throws RecognitionException {
        CompilationUnit compilationUnit = null;


        List<CompilerAnnotation> ca =null;

        Import importDeclaration1 =null;

        ModuleDescriptor moduleDescriptor2 =null;

        PackageDescriptor packageDescriptor3 =null;

        Declaration toplevelDeclaration4 =null;


         compilationUnit = new CompilationUnit(null);
                    ImportList importList = new ImportList(null); 
                    compilationUnit.setImportList(importList); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:84:5: ( (ca= compilerAnnotations SEMICOLON )? ( importDeclaration | ( annotatedModuleDescriptorStart )=> moduleDescriptor | ( annotatedPackageDescriptorStart )=> packageDescriptor | toplevelDeclaration | RBRACE )* EOF )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:84:7: (ca= compilerAnnotations SEMICOLON )? ( importDeclaration | ( annotatedModuleDescriptorStart )=> moduleDescriptor | ( annotatedPackageDescriptorStart )=> packageDescriptor | toplevelDeclaration | RBRACE )* EOF
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:84:7: (ca= compilerAnnotations SEMICOLON )?
            int alt1=2;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:85:9: ca= compilerAnnotations SEMICOLON
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_compilationUnit86);
                    ca=compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return compilationUnit;

                    match(input,SEMICOLON,FOLLOW_SEMICOLON_in_compilationUnit96); if (state.failed) return compilationUnit;

                    if ( state.backtracking==0 ) { compilationUnit.getCompilerAnnotations().addAll(ca); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:89:7: ( importDeclaration | ( annotatedModuleDescriptorStart )=> moduleDescriptor | ( annotatedPackageDescriptorStart )=> packageDescriptor | toplevelDeclaration | RBRACE )*
            loop2:
            do {
                int alt2=6;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==IMPORT) ) {
                    alt2=1;
                }
                else if ( (LA2_0==COMPILER_ANNOTATION) ) {
                    int LA2_3 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==STRING_LITERAL) ) {
                    int LA2_4 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==VERBATIM_STRING) ) {
                    int LA2_5 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==LIDENTIFIER) ) {
                    int LA2_6 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==MODULE) && (synpred1_Ceylon())) {
                    alt2=2;
                }
                else if ( (LA2_0==PACKAGE) ) {
                    int LA2_8 = input.LA(2);

                    if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==ALIAS||LA2_0==ASSIGN||LA2_0==CLASS_DEFINITION||LA2_0==DYNAMIC||LA2_0==FUNCTION_MODIFIER||LA2_0==INTERFACE_DEFINITION||(LA2_0 >= LBRACE && LA2_0 <= LBRACKET)||LA2_0==NEW||LA2_0==OBJECT_DEFINITION||LA2_0==SMALLER_OP||LA2_0==UIDENTIFIER||LA2_0==VALUE_MODIFIER||LA2_0==VOID_MODIFIER) ) {
                    alt2=4;
                }
                else if ( (LA2_0==RBRACE) ) {
                    alt2=5;
                }


                switch (alt2) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:90:9: importDeclaration
            	    {
            	    pushFollow(FOLLOW_importDeclaration_in_compilationUnit134);
            	    importDeclaration1=importDeclaration();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { importList.addImport(importDeclaration1); 
            	              compilationUnit.connect(importList); }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:94:9: ( annotatedModuleDescriptorStart )=> moduleDescriptor
            	    {
            	    pushFollow(FOLLOW_moduleDescriptor_in_compilationUnit177);
            	    moduleDescriptor2=moduleDescriptor();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { compilationUnit.addModuleDescriptor(moduleDescriptor2); }

            	    }
            	    break;
            	case 3 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:98:9: ( annotatedPackageDescriptorStart )=> packageDescriptor
            	    {
            	    pushFollow(FOLLOW_packageDescriptor_in_compilationUnit220);
            	    packageDescriptor3=packageDescriptor();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { compilationUnit.addPackageDescriptor(packageDescriptor3); }

            	    }
            	    break;
            	case 4 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:102:9: toplevelDeclaration
            	    {
            	    pushFollow(FOLLOW_toplevelDeclaration_in_compilationUnit248);
            	    toplevelDeclaration4=toplevelDeclaration();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { if (toplevelDeclaration4!=null)
            	                  compilationUnit.addDeclaration(toplevelDeclaration4); }

            	    }
            	    break;
            	case 5 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:105:9: RBRACE
            	    {
            	    match(input,RBRACE,FOLLOW_RBRACE_in_compilationUnit268); if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
            	                  new MismatchedTokenException(EOF, input)); }

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            match(input,EOF,FOLLOW_EOF_in_compilationUnit295); if (state.failed) return compilationUnit;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return compilationUnit;
    }
    // $ANTLR end "compilationUnit"



    // $ANTLR start "toplevelDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:112:1: toplevelDeclaration returns [Declaration declaration] : ca= compilerAnnotations d= declaration ;
    public Declaration toplevelDeclaration() throws RecognitionException {
        Declaration declaration = null;


        List<CompilerAnnotation> ca =null;

        Declaration d =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:113:5: (ca= compilerAnnotations d= declaration )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:113:7: ca= compilerAnnotations d= declaration
            {
            pushFollow(FOLLOW_compilerAnnotations_in_toplevelDeclaration318);
            ca=compilerAnnotations();

            state._fsp--;
            if (state.failed) return declaration;

            pushFollow(FOLLOW_declaration_in_toplevelDeclaration329);
            d=declaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = d;
                    if (declaration!=null)
                        declaration.getCompilerAnnotations().addAll(ca); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "toplevelDeclaration"



    // $ANTLR start "annotatedModuleDescriptorStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:120:1: annotatedModuleDescriptorStart : compilerAnnotations annotations MODULE ;
    public void annotatedModuleDescriptorStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:121:5: ( compilerAnnotations annotations MODULE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:121:7: compilerAnnotations annotations MODULE
            {
            pushFollow(FOLLOW_compilerAnnotations_in_annotatedModuleDescriptorStart354);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_annotations_in_annotatedModuleDescriptorStart356);
            annotations();

            state._fsp--;
            if (state.failed) return ;

            match(input,MODULE,FOLLOW_MODULE_in_annotatedModuleDescriptorStart358); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedModuleDescriptorStart"



    // $ANTLR start "annotatedPackageDescriptorStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:124:1: annotatedPackageDescriptorStart : compilerAnnotations annotations PACKAGE ~ MEMBER_OP ;
    public void annotatedPackageDescriptorStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:125:5: ( compilerAnnotations annotations PACKAGE ~ MEMBER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:125:7: compilerAnnotations annotations PACKAGE ~ MEMBER_OP
            {
            pushFollow(FOLLOW_compilerAnnotations_in_annotatedPackageDescriptorStart375);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_annotations_in_annotatedPackageDescriptorStart377);
            annotations();

            state._fsp--;
            if (state.failed) return ;

            match(input,PACKAGE,FOLLOW_PACKAGE_in_annotatedPackageDescriptorStart379); if (state.failed) return ;

            if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= Letter)||(input.LA(1) >= MODULE && input.LA(1) <= WS) ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedPackageDescriptorStart"



    // $ANTLR start "moduleDescriptor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:128:1: moduleDescriptor returns [ModuleDescriptor moduleDescriptor] : compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList ;
    public ModuleDescriptor moduleDescriptor() throws RecognitionException {
        ModuleDescriptor moduleDescriptor = null;


        Token MODULE5=null;
        Token CHAR_LITERAL9=null;
        Token STRING_LITERAL10=null;
        AnnotationList annotations6 =null;

        List<CompilerAnnotation> compilerAnnotations7 =null;

        ImportPath packagePath8 =null;

        ImportModuleList importModuleList11 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:129:5: ( compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:129:7: compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList
            {
            pushFollow(FOLLOW_compilerAnnotations_in_moduleDescriptor403);
            compilerAnnotations7=compilerAnnotations();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            pushFollow(FOLLOW_annotations_in_moduleDescriptor405);
            annotations6=annotations();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            MODULE5=(Token)match(input,MODULE,FOLLOW_MODULE_in_moduleDescriptor413); if (state.failed) return moduleDescriptor;

            if ( state.backtracking==0 ) { moduleDescriptor = new ModuleDescriptor(MODULE5); 
                    moduleDescriptor.setAnnotationList(annotations6);
                    moduleDescriptor.getCompilerAnnotations().addAll(compilerAnnotations7); }

            pushFollow(FOLLOW_packagePath_in_moduleDescriptor430);
            packagePath8=packagePath();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            if ( state.backtracking==0 ) { moduleDescriptor.setImportPath(packagePath8); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:136:7: ( CHAR_LITERAL | STRING_LITERAL )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==CHAR_LITERAL) ) {
                alt3=1;
            }
            else if ( (LA3_0==STRING_LITERAL) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return moduleDescriptor;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;

            }
            switch (alt3) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:137:9: CHAR_LITERAL
                    {
                    CHAR_LITERAL9=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_moduleDescriptor456); if (state.failed) return moduleDescriptor;

                    if ( state.backtracking==0 ) { moduleDescriptor.setVersion(new QuotedLiteral(CHAR_LITERAL9)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:140:9: STRING_LITERAL
                    {
                    STRING_LITERAL10=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_moduleDescriptor484); if (state.failed) return moduleDescriptor;

                    if ( state.backtracking==0 ) { moduleDescriptor.setVersion(new QuotedLiteral(STRING_LITERAL10)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_importModuleList_in_moduleDescriptor510);
            importModuleList11=importModuleList();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            if ( state.backtracking==0 ) { moduleDescriptor.setImportModuleList(importModuleList11); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return moduleDescriptor;
    }
    // $ANTLR end "moduleDescriptor"



    // $ANTLR start "importModuleList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:147:1: importModuleList returns [ImportModuleList importModuleList] : LBRACE ( compilerAnnotations annotations importModule )* RBRACE ;
    public ImportModuleList importModuleList() throws RecognitionException {
        ImportModuleList importModuleList = null;


        Token LBRACE12=null;
        Token RBRACE16=null;
        ImportModule importModule13 =null;

        AnnotationList annotations14 =null;

        List<CompilerAnnotation> compilerAnnotations15 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:148:5: ( LBRACE ( compilerAnnotations annotations importModule )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:148:7: LBRACE ( compilerAnnotations annotations importModule )* RBRACE
            {
            LBRACE12=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_importModuleList539); if (state.failed) return importModuleList;

            if ( state.backtracking==0 ) { importModuleList = new ImportModuleList(LBRACE12); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:150:7: ( compilerAnnotations annotations importModule )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==ALIAS||(LA4_0 >= ASSERT && LA4_0 <= ASSIGN)||(LA4_0 >= BACKTICK && LA4_0 <= BREAK)||(LA4_0 >= CHAR_LITERAL && LA4_0 <= CLASS_DEFINITION)||LA4_0==COMPILER_ANNOTATION||LA4_0==CONTINUE||(LA4_0 >= DECREMENT_OP && LA4_0 <= DIFFERENCE_OP)||LA4_0==DYNAMIC||(LA4_0 >= FLOAT_LITERAL && LA4_0 <= FUNCTION_MODIFIER)||(LA4_0 >= IF_CLAUSE && LA4_0 <= INTERFACE_DEFINITION)||LA4_0==IN_OP||(LA4_0 >= LBRACE && LA4_0 <= LIDENTIFIER)||LA4_0==LPAREN||LA4_0==MODULE||(LA4_0 >= NATURAL_LITERAL && LA4_0 <= NEW)||(LA4_0 >= NOT_OP && LA4_0 <= OBJECT_DEFINITION)||(LA4_0 >= OUT && LA4_0 <= PACKAGE)||LA4_0==PRODUCT_OP||LA4_0==RETURN||(LA4_0 >= SEMICOLON && LA4_0 <= SMALLER_OP)||LA4_0==STRING_LITERAL||LA4_0==STRING_START||(LA4_0 >= SUM_OP && LA4_0 <= SWITCH_CLAUSE)||(LA4_0 >= THIS && LA4_0 <= UIDENTIFIER)||(LA4_0 >= VALUE_MODIFIER && LA4_0 <= WHILE_CLAUSE)) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:151:9: compilerAnnotations annotations importModule
            	    {
            	    pushFollow(FOLLOW_compilerAnnotations_in_importModuleList565);
            	    compilerAnnotations15=compilerAnnotations();

            	    state._fsp--;
            	    if (state.failed) return importModuleList;

            	    pushFollow(FOLLOW_annotations_in_importModuleList567);
            	    annotations14=annotations();

            	    state._fsp--;
            	    if (state.failed) return importModuleList;

            	    pushFollow(FOLLOW_importModule_in_importModuleList577);
            	    importModule13=importModule();

            	    state._fsp--;
            	    if (state.failed) return importModuleList;

            	    if ( state.backtracking==0 ) { if (importModule13!=null)
            	                  importModuleList.addImportModule(importModule13); 
            	              if (importModule13!=null)
            	                  importModule13.setAnnotationList(annotations14);
            	              if (importModule13!=null)
            	                  importModule13.getCompilerAnnotations().addAll(compilerAnnotations15); }

            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            RBRACE16=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_importModuleList604); if (state.failed) return importModuleList;

            if ( state.backtracking==0 ) { importModuleList.setEndToken(RBRACE16); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importModuleList;
    }
    // $ANTLR end "importModuleList"



    // $ANTLR start "packageDescriptor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:164:1: packageDescriptor returns [PackageDescriptor packageDescriptor] : compilerAnnotations annotations PACKAGE packagePath SEMICOLON ;
    public PackageDescriptor packageDescriptor() throws RecognitionException {
        PackageDescriptor packageDescriptor = null;


        Token PACKAGE17=null;
        Token SEMICOLON21=null;
        AnnotationList annotations18 =null;

        List<CompilerAnnotation> compilerAnnotations19 =null;

        ImportPath packagePath20 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:165:5: ( compilerAnnotations annotations PACKAGE packagePath SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:165:7: compilerAnnotations annotations PACKAGE packagePath SEMICOLON
            {
            pushFollow(FOLLOW_compilerAnnotations_in_packageDescriptor633);
            compilerAnnotations19=compilerAnnotations();

            state._fsp--;
            if (state.failed) return packageDescriptor;

            pushFollow(FOLLOW_annotations_in_packageDescriptor635);
            annotations18=annotations();

            state._fsp--;
            if (state.failed) return packageDescriptor;

            PACKAGE17=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_packageDescriptor643); if (state.failed) return packageDescriptor;

            if ( state.backtracking==0 ) { packageDescriptor = new PackageDescriptor(PACKAGE17); 
                    packageDescriptor.setAnnotationList(annotations18); 
                    packageDescriptor.getCompilerAnnotations().addAll(compilerAnnotations19); }

            pushFollow(FOLLOW_packagePath_in_packageDescriptor660);
            packagePath20=packagePath();

            state._fsp--;
            if (state.failed) return packageDescriptor;

            if ( state.backtracking==0 ) { packageDescriptor.setImportPath(packagePath20); 
                    expecting=SEMICOLON; }

            SEMICOLON21=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_packageDescriptor676); if (state.failed) return packageDescriptor;

            if ( state.backtracking==0 ) { packageDescriptor.setEndToken(SEMICOLON21); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return packageDescriptor;
    }
    // $ANTLR end "packageDescriptor"



    // $ANTLR start "importModule"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:178:1: importModule returns [ImportModule importModule] : IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON ;
    public ImportModule importModule() throws RecognitionException {
        ImportModule importModule = null;


        Token c1=null;
        Token s1=null;
        Token c2=null;
        Token s2=null;
        Token IMPORT22=null;
        Token SEMICOLON24=null;
        ImportPath packagePath23 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:179:5: ( IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:179:7: IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON
            {
            IMPORT22=(Token)match(input,IMPORT,FOLLOW_IMPORT_in_importModule705); if (state.failed) return importModule;

            if ( state.backtracking==0 ) { importModule = new ImportModule(IMPORT22); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:181:7: (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath )
            int alt5=3;
            switch ( input.LA(1) ) {
            case CHAR_LITERAL:
                {
                alt5=1;
                }
                break;
            case STRING_LITERAL:
                {
                alt5=2;
                }
                break;
            case LIDENTIFIER:
            case UIDENTIFIER:
                {
                alt5=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return importModule;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;

            }

            switch (alt5) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:182:9: c1= CHAR_LITERAL
                    {
                    c1=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_importModule734); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setQuotedLiteral(new QuotedLiteral(c1)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:185:9: s1= STRING_LITERAL
                    {
                    s1=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_importModule764); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setQuotedLiteral(new QuotedLiteral(s1)); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:188:9: packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_importModule792);
                    packagePath23=packagePath();

                    state._fsp--;
                    if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setImportPath(packagePath23); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:191:7: (c2= CHAR_LITERAL |s2= STRING_LITERAL )?
            int alt6=3;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==CHAR_LITERAL) ) {
                alt6=1;
            }
            else if ( (LA6_0==STRING_LITERAL) ) {
                alt6=2;
            }
            switch (alt6) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:192:9: c2= CHAR_LITERAL
                    {
                    c2=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_importModule830); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setVersion(new QuotedLiteral(c2)); 
                              expecting=SEMICOLON; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:196:9: s2= STRING_LITERAL
                    {
                    s2=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_importModule860); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setVersion(new QuotedLiteral(s2)); 
                              expecting=SEMICOLON; }

                    }
                    break;

            }


            SEMICOLON24=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_importModule887); if (state.failed) return importModule;

            if ( state.backtracking==0 ) { importModule.setEndToken(SEMICOLON24); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importModule;
    }
    // $ANTLR end "importModule"



    // $ANTLR start "importDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:205:1: importDeclaration returns [Import importDeclaration] : IMPORT ( packagePath |) importElementList ;
    public Import importDeclaration() throws RecognitionException {
        Import importDeclaration = null;


        Token IMPORT25=null;
        ImportPath packagePath26 =null;

        ImportMemberOrTypeList importElementList27 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:206:5: ( IMPORT ( packagePath |) importElementList )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:206:7: IMPORT ( packagePath |) importElementList
            {
            IMPORT25=(Token)match(input,IMPORT,FOLLOW_IMPORT_in_importDeclaration916); if (state.failed) return importDeclaration;

            if ( state.backtracking==0 ) { importDeclaration = new Import(IMPORT25); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:208:7: ( packagePath |)
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==LIDENTIFIER||LA7_0==UIDENTIFIER) ) {
                alt7=1;
            }
            else if ( (LA7_0==LBRACE) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return importDeclaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;

            }
            switch (alt7) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:209:9: packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_importDeclaration944);
                    packagePath26=packagePath();

                    state._fsp--;
                    if (state.failed) return importDeclaration;

                    if ( state.backtracking==0 ) { importDeclaration.setImportPath(packagePath26); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:211:9: 
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_importElementList_in_importDeclaration980);
            importElementList27=importElementList();

            state._fsp--;
            if (state.failed) return importDeclaration;

            if ( state.backtracking==0 ) { importDeclaration.setImportMemberOrTypeList(importElementList27); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importDeclaration;
    }
    // $ANTLR end "importDeclaration"



    // $ANTLR start "importElementList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:218:1: importElementList returns [ImportMemberOrTypeList importMemberOrTypeList] : LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE ;
    public ImportMemberOrTypeList importElementList() throws RecognitionException {
        ImportMemberOrTypeList importMemberOrTypeList = null;


        Token c1=null;
        Token LBRACE28=null;
        Token RBRACE29=null;
        ImportMemberOrType ie1 =null;

        ImportMemberOrType ie2 =null;

        ImportWildcard iw =null;


         ImportMemberOrTypeList il=null; 
                    boolean wildcarded = false; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:221:5: ( LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:222:5: LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE
            {
            LBRACE28=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_importElementList1022); if (state.failed) return importMemberOrTypeList;

            if ( state.backtracking==0 ) { il = new ImportMemberOrTypeList(LBRACE28);
                  importMemberOrTypeList = il; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:225:5: (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )?
            int alt10=3;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==ALIAS||(LA10_0 >= ASSERT && LA10_0 <= ASSIGN)||(LA10_0 >= BACKTICK && LA10_0 <= BREAK)||(LA10_0 >= CHAR_LITERAL && LA10_0 <= CLASS_DEFINITION)||LA10_0==COMPILER_ANNOTATION||LA10_0==CONTINUE||(LA10_0 >= DECREMENT_OP && LA10_0 <= DIFFERENCE_OP)||LA10_0==DYNAMIC||(LA10_0 >= FLOAT_LITERAL && LA10_0 <= FUNCTION_MODIFIER)||(LA10_0 >= IF_CLAUSE && LA10_0 <= INTERFACE_DEFINITION)||LA10_0==IN_OP||(LA10_0 >= LBRACE && LA10_0 <= LIDENTIFIER)||LA10_0==LPAREN||LA10_0==MODULE||(LA10_0 >= NATURAL_LITERAL && LA10_0 <= NEW)||(LA10_0 >= NOT_OP && LA10_0 <= OBJECT_DEFINITION)||(LA10_0 >= OUT && LA10_0 <= PACKAGE)||LA10_0==PRODUCT_OP||LA10_0==RETURN||(LA10_0 >= SEMICOLON && LA10_0 <= SMALLER_OP)||LA10_0==STRING_LITERAL||LA10_0==STRING_START||(LA10_0 >= SUM_OP && LA10_0 <= SWITCH_CLAUSE)||(LA10_0 >= THIS && LA10_0 <= UIDENTIFIER)||(LA10_0 >= VALUE_MODIFIER && LA10_0 <= WHILE_CLAUSE)) ) {
                alt10=1;
            }
            else if ( (LA10_0==ELLIPSIS) ) {
                alt10=2;
            }
            switch (alt10) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:226:7: ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )*
                    {
                    pushFollow(FOLLOW_importElement_in_importElementList1045);
                    ie1=importElement();

                    state._fsp--;
                    if (state.failed) return importMemberOrTypeList;

                    if ( state.backtracking==0 ) { if (ie1!=null)
                                il.addImportMemberOrType(ie1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:229:7: (c1= COMMA (ie2= importElement |iw= importWildcard |) )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==COMMA) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:230:9: c1= COMMA (ie2= importElement |iw= importWildcard |)
                    	    {
                    	    c1=(Token)match(input,COMMA,FOLLOW_COMMA_in_importElementList1076); if (state.failed) return importMemberOrTypeList;

                    	    if ( state.backtracking==0 ) { il.setEndToken(c1); 
                    	              if (wildcarded) 
                    	                  displayRecognitionError(getTokenNames(), 
                    	                      new MismatchedTokenException(RBRACE, input)); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:235:9: (ie2= importElement |iw= importWildcard |)
                    	    int alt8=3;
                    	    switch ( input.LA(1) ) {
                    	    case ALIAS:
                    	    case ASSERT:
                    	    case ASSIGN:
                    	    case BACKTICK:
                    	    case BREAK:
                    	    case CHAR_LITERAL:
                    	    case CLASS_DEFINITION:
                    	    case COMPILER_ANNOTATION:
                    	    case CONTINUE:
                    	    case DECREMENT_OP:
                    	    case DIFFERENCE_OP:
                    	    case DYNAMIC:
                    	    case FLOAT_LITERAL:
                    	    case FOR_CLAUSE:
                    	    case FUNCTION_MODIFIER:
                    	    case IF_CLAUSE:
                    	    case IMPORT:
                    	    case INCREMENT_OP:
                    	    case INTERFACE_DEFINITION:
                    	    case IN_OP:
                    	    case LBRACE:
                    	    case LBRACKET:
                    	    case LET:
                    	    case LIDENTIFIER:
                    	    case LPAREN:
                    	    case MODULE:
                    	    case NATURAL_LITERAL:
                    	    case NEW:
                    	    case NOT_OP:
                    	    case OBJECT_DEFINITION:
                    	    case OUT:
                    	    case OUTER:
                    	    case PACKAGE:
                    	    case PRODUCT_OP:
                    	    case RETURN:
                    	    case SEMICOLON:
                    	    case SMALLER_OP:
                    	    case STRING_LITERAL:
                    	    case STRING_START:
                    	    case SUM_OP:
                    	    case SUPER:
                    	    case SWITCH_CLAUSE:
                    	    case THIS:
                    	    case THROW:
                    	    case TRY_CLAUSE:
                    	    case TYPE_CONSTRAINT:
                    	    case UIDENTIFIER:
                    	    case VALUE_MODIFIER:
                    	    case VERBATIM_STRING:
                    	    case VOID_MODIFIER:
                    	    case WHILE_CLAUSE:
                    	        {
                    	        alt8=1;
                    	        }
                    	        break;
                    	    case ELLIPSIS:
                    	        {
                    	        alt8=2;
                    	        }
                    	        break;
                    	    case COMMA:
                    	    case RBRACE:
                    	        {
                    	        alt8=3;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return importMemberOrTypeList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 8, 0, input);

                    	        throw nvae;

                    	    }

                    	    switch (alt8) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:236:11: ie2= importElement
                    	            {
                    	            pushFollow(FOLLOW_importElement_in_importElementList1111);
                    	            ie2=importElement();

                    	            state._fsp--;
                    	            if (state.failed) return importMemberOrTypeList;

                    	            if ( state.backtracking==0 ) { if (ie2!=null)
                    	                            il.addImportMemberOrType(ie2);
                    	                        if (ie2!=null)
                    	                            il.setEndToken(null); }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:241:11: iw= importWildcard
                    	            {
                    	            pushFollow(FOLLOW_importWildcard_in_importElementList1139);
                    	            iw=importWildcard();

                    	            state._fsp--;
                    	            if (state.failed) return importMemberOrTypeList;

                    	            if ( state.backtracking==0 ) { wildcarded = true;
                    	                        if (iw!=null) 
                    	                            il.setImportWildcard(iw); 
                    	                        if (iw!=null) 
                    	                            il.setEndToken(null); }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:247:11: 
                    	            {
                    	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                            new MismatchedTokenException(ELLIPSIS, input)); }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:251:7: iw= importWildcard
                    {
                    pushFollow(FOLLOW_importWildcard_in_importElementList1193);
                    iw=importWildcard();

                    state._fsp--;
                    if (state.failed) return importMemberOrTypeList;

                    if ( state.backtracking==0 ) { il.setImportWildcard(iw); }

                    }
                    break;

            }


            RBRACE29=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_importElementList1208); if (state.failed) return importMemberOrTypeList;

            if ( state.backtracking==0 ) { il.setEndToken(RBRACE29); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importMemberOrTypeList;
    }
    // $ANTLR end "importElementList"



    // $ANTLR start "importElement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:257:1: importElement returns [ImportMemberOrType importMemberOrType] : compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? ) ;
    public ImportMemberOrType importElement() throws RecognitionException {
        ImportMemberOrType importMemberOrType = null;


        Token SPECIFY30=null;
        Identifier in1 =null;

        Identifier in2 =null;

        ImportMemberOrTypeList iel2 =null;

        List<CompilerAnnotation> compilerAnnotations31 =null;


         Alias alias = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:259:5: ( compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:259:7: compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_importElement1244);
            compilerAnnotations31=compilerAnnotations();

            state._fsp--;
            if (state.failed) return importMemberOrType;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:260:5: (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:260:7: in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )?
            {
            pushFollow(FOLLOW_importName_in_importElement1254);
            in1=importName();

            state._fsp--;
            if (state.failed) return importMemberOrType;

            if ( state.backtracking==0 ) { importMemberOrType = new ImportMember(null);
                    importMemberOrType.setIdentifier(in1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:263:7: ( SPECIFY (in2= importName |) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==SPECIFY) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:263:9: SPECIFY (in2= importName |)
                    {
                    SPECIFY30=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_importElement1273); if (state.failed) return importMemberOrType;

                    if ( state.backtracking==0 ) { alias = new Alias(SPECIFY30);
                              alias.setIdentifier(in1);
                              importMemberOrType.setAlias(alias); 
                              importMemberOrType.setIdentifier(null); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:268:9: (in2= importName |)
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==LIDENTIFIER||LA11_0==UIDENTIFIER) ) {
                        alt11=1;
                    }
                    else if ( (LA11_0==COMMA||LA11_0==LBRACE||LA11_0==RBRACE) ) {
                        alt11=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return importMemberOrType;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 11, 0, input);

                        throw nvae;

                    }
                    switch (alt11) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:269:11: in2= importName
                            {
                            pushFollow(FOLLOW_importName_in_importElement1307);
                            in2=importName();

                            state._fsp--;
                            if (state.failed) return importMemberOrType;

                            if ( state.backtracking==0 ) { importMemberOrType.setIdentifier(in2); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:271:11: 
                            {
                            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                              new MismatchedTokenException(in1.getToken().getType(), input)); }

                            }
                            break;

                    }


                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:275:7: (iel2= importElementList )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==LBRACE) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:276:9: iel2= importElementList
                    {
                    pushFollow(FOLLOW_importElementList_in_importElement1371);
                    iel2=importElementList();

                    state._fsp--;
                    if (state.failed) return importMemberOrType;

                    if ( state.backtracking==0 ) { importMemberOrType.setImportMemberOrTypeList(iel2); }

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) { if (importMemberOrType!=null)
                    importMemberOrType.getCompilerAnnotations().addAll(compilerAnnotations31); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importMemberOrType;
    }
    // $ANTLR end "importElement"



    // $ANTLR start "importWildcard"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:284:1: importWildcard returns [ImportWildcard importWildcard] : ELLIPSIS ;
    public ImportWildcard importWildcard() throws RecognitionException {
        ImportWildcard importWildcard = null;


        Token ELLIPSIS32=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:285:5: ( ELLIPSIS )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:285:7: ELLIPSIS
            {
            ELLIPSIS32=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_importWildcard1423); if (state.failed) return importWildcard;

            if ( state.backtracking==0 ) { importWildcard = new ImportWildcard(ELLIPSIS32); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importWildcard;
    }
    // $ANTLR end "importWildcard"



    // $ANTLR start "importName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:289:1: importName returns [Identifier identifier] : ( memberName | typeName );
    public Identifier importName() throws RecognitionException {
        Identifier identifier = null;


        Identifier memberName33 =null;

        Identifier typeName34 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:290:5: ( memberName | typeName )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==LIDENTIFIER) ) {
                alt14=1;
            }
            else if ( (LA14_0==UIDENTIFIER) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;

            }
            switch (alt14) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:290:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_importName1452);
                    memberName33=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =memberName33; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:291:7: typeName
                    {
                    pushFollow(FOLLOW_typeName_in_importName1462);
                    typeName34=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =typeName34; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "importName"



    // $ANTLR start "packagePath"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:294:1: packagePath returns [ImportPath importPath] : pn1= packageName (m= MEMBER_OP (pn2= packageName |) )* ;
    public ImportPath packagePath() throws RecognitionException {
        ImportPath importPath = null;


        Token m=null;
        Identifier pn1 =null;

        Identifier pn2 =null;


         importPath = new ImportPath(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:296:5: (pn1= packageName (m= MEMBER_OP (pn2= packageName |) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:296:7: pn1= packageName (m= MEMBER_OP (pn2= packageName |) )*
            {
            pushFollow(FOLLOW_packageName_in_packagePath1496);
            pn1=packageName();

            state._fsp--;
            if (state.failed) return importPath;

            if ( state.backtracking==0 ) { if (pn1!=null) 
                        importPath.addIdentifier(pn1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:299:7: (m= MEMBER_OP (pn2= packageName |) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==MEMBER_OP) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:300:9: m= MEMBER_OP (pn2= packageName |)
            	    {
            	    m=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_packagePath1527); if (state.failed) return importPath;

            	    if ( state.backtracking==0 ) { importPath.setEndToken(m); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:302:9: (pn2= packageName |)
            	    int alt15=2;
            	    int LA15_0 = input.LA(1);

            	    if ( (LA15_0==LIDENTIFIER||LA15_0==UIDENTIFIER) ) {
            	        alt15=1;
            	    }
            	    else if ( (LA15_0==BACKTICK||LA15_0==CHAR_LITERAL||LA15_0==LBRACE||LA15_0==MEMBER_OP||LA15_0==SEMICOLON||LA15_0==STRING_LITERAL) ) {
            	        alt15=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return importPath;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 15, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt15) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:303:11: pn2= packageName
            	            {
            	            pushFollow(FOLLOW_packageName_in_packagePath1562);
            	            pn2=packageName();

            	            state._fsp--;
            	            if (state.failed) return importPath;

            	            if ( state.backtracking==0 ) { importPath.addIdentifier(pn2); 
            	                        importPath.setEndToken(null); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:306:11: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                            new MismatchedTokenException(LIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importPath;
    }
    // $ANTLR end "packagePath"



    // $ANTLR start "packageName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:312:1: packageName returns [Identifier identifier] : ( LIDENTIFIER | UIDENTIFIER );
    public Identifier packageName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER35=null;
        Token UIDENTIFIER36=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:313:5: ( LIDENTIFIER | UIDENTIFIER )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==LIDENTIFIER) ) {
                alt17=1;
            }
            else if ( (LA17_0==UIDENTIFIER) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;

            }
            switch (alt17) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:313:7: LIDENTIFIER
                    {
                    LIDENTIFIER35=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_packageName1627); if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER35);
                            LIDENTIFIER35.setType(PIDENTIFIER);}

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:316:7: UIDENTIFIER
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                  new MismatchedTokenException(LIDENTIFIER, input), 5001); }

                    UIDENTIFIER36=(Token)match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_packageName1651); if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = new Identifier(UIDENTIFIER36);
                            UIDENTIFIER36.setType(PIDENTIFIER);}

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "packageName"



    // $ANTLR start "typeName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:323:1: typeName returns [Identifier identifier] : UIDENTIFIER ;
    public Identifier typeName() throws RecognitionException {
        Identifier identifier = null;


        Token UIDENTIFIER37=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:324:5: ( UIDENTIFIER )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:324:7: UIDENTIFIER
            {
            UIDENTIFIER37=(Token)match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_typeName1680); if (state.failed) return identifier;

            if ( state.backtracking==0 ) { identifier = new Identifier(UIDENTIFIER37); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "typeName"



    // $ANTLR start "annotationName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:328:1: annotationName returns [Identifier identifier] : LIDENTIFIER ;
    public Identifier annotationName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER38=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:329:5: ( LIDENTIFIER )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:329:7: LIDENTIFIER
            {
            LIDENTIFIER38=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_annotationName1709); if (state.failed) return identifier;

            if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER38); 
                    LIDENTIFIER38.setType(AIDENTIFIER); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "annotationName"



    // $ANTLR start "memberName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:334:1: memberName returns [Identifier identifier] : LIDENTIFIER ;
    public Identifier memberName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER39=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:335:5: ( LIDENTIFIER )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:335:7: LIDENTIFIER
            {
            LIDENTIFIER39=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_memberName1738); if (state.failed) return identifier;

            if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER39); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "memberName"



    // $ANTLR start "memberNameDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:339:1: memberNameDeclaration returns [Identifier identifier] : ( memberName | typeName );
    public Identifier memberNameDeclaration() throws RecognitionException {
        Identifier identifier = null;


        Identifier memberName40 =null;

        Identifier typeName41 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:340:5: ( memberName | typeName )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==LIDENTIFIER) ) {
                alt18=1;
            }
            else if ( (LA18_0==UIDENTIFIER) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;

            }
            switch (alt18) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:340:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_memberNameDeclaration1771);
                    memberName40=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = memberName40; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:341:7: typeName
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LIDENTIFIER, input), 5001); }

                    pushFollow(FOLLOW_typeName_in_memberNameDeclaration1789);
                    typeName41=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = typeName41; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "memberNameDeclaration"



    // $ANTLR start "typeNameDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:347:1: typeNameDeclaration returns [Identifier identifier] : ( typeName | memberName );
    public Identifier typeNameDeclaration() throws RecognitionException {
        Identifier identifier = null;


        Identifier typeName42 =null;

        Identifier memberName43 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:348:5: ( typeName | memberName )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==UIDENTIFIER) ) {
                alt19=1;
            }
            else if ( (LA19_0==LIDENTIFIER) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;

            }
            switch (alt19) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:348:7: typeName
                    {
                    pushFollow(FOLLOW_typeName_in_typeNameDeclaration1819);
                    typeName42=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = typeName42; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:349:7: memberName
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(UIDENTIFIER, input), 5002); }

                    pushFollow(FOLLOW_memberName_in_typeNameDeclaration1837);
                    memberName43=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = memberName43; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "typeNameDeclaration"



    // $ANTLR start "objectDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:355:1: objectDeclaration returns [ObjectDefinition declaration] : OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) ;
    public ObjectDefinition objectDeclaration() throws RecognitionException {
        ObjectDefinition declaration = null;


        Token OBJECT_DEFINITION44=null;
        Token SEMICOLON49=null;
        Identifier memberNameDeclaration45 =null;

        ExtendedType extendedType46 =null;

        SatisfiedTypes satisfiedTypes47 =null;

        ClassBody classBody48 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:356:5: ( OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:356:7: OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON )
            {
            OBJECT_DEFINITION44=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_objectDeclaration1867); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new ObjectDefinition(OBJECT_DEFINITION44); 
                    declaration.setType(new ValueModifier(null)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:359:7: ( memberNameDeclaration )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==LIDENTIFIER||LA20_0==UIDENTIFIER) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:360:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_objectDeclaration1893);
                    memberNameDeclaration45=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration45); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:363:7: ( extendedType )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==EXTENDS) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:364:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_objectDeclaration1931);
                    extendedType46=extendedType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setExtendedType(extendedType46); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:367:7: ( satisfiedTypes )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==SATISFIES) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:368:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_objectDeclaration1970);
                    satisfiedTypes47=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setSatisfiedTypes(satisfiedTypes47); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:371:7: ( classBody | SEMICOLON )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==LBRACE) ) {
                alt23=1;
            }
            else if ( (LA23_0==SEMICOLON) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;

            }
            switch (alt23) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:372:9: classBody
                    {
                    pushFollow(FOLLOW_classBody_in_objectDeclaration2008);
                    classBody48=classBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setClassBody(classBody48); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:374:9: SEMICOLON
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LBRACE, input)); }

                    SEMICOLON49=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_objectDeclaration2038); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON49); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "objectDeclaration"



    // $ANTLR start "objectExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:381:1: objectExpression returns [ObjectExpression objectExpression] : OBJECT_DEFINITION ( extendedType )? ( satisfiedTypes )? classBody ;
    public ObjectExpression objectExpression() throws RecognitionException {
        ObjectExpression objectExpression = null;


        Token OBJECT_DEFINITION50=null;
        ExtendedType extendedType51 =null;

        SatisfiedTypes satisfiedTypes52 =null;

        ClassBody classBody53 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:382:5: ( OBJECT_DEFINITION ( extendedType )? ( satisfiedTypes )? classBody )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:382:7: OBJECT_DEFINITION ( extendedType )? ( satisfiedTypes )? classBody
            {
            OBJECT_DEFINITION50=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_objectExpression2077); if (state.failed) return objectExpression;

            if ( state.backtracking==0 ) { objectExpression = new ObjectExpression(OBJECT_DEFINITION50); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:384:7: ( extendedType )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==EXTENDS) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:385:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_objectExpression2104);
                    extendedType51=extendedType();

                    state._fsp--;
                    if (state.failed) return objectExpression;

                    if ( state.backtracking==0 ) { objectExpression.setExtendedType(extendedType51); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:388:7: ( satisfiedTypes )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==SATISFIES) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:389:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_objectExpression2143);
                    satisfiedTypes52=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return objectExpression;

                    if ( state.backtracking==0 ) { objectExpression.setSatisfiedTypes(satisfiedTypes52); }

                    }
                    break;

            }


            pushFollow(FOLLOW_classBody_in_objectExpression2171);
            classBody53=classBody();

            state._fsp--;
            if (state.failed) return objectExpression;

            if ( state.backtracking==0 ) { objectExpression.setClassBody(classBody53); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return objectExpression;
    }
    // $ANTLR end "objectExpression"



    // $ANTLR start "voidOrInferredMethodDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:396:1: voidOrInferredMethodDeclaration returns [AnyMethod declaration] : ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON ) ;
    public AnyMethod voidOrInferredMethodDeclaration() throws RecognitionException {
        AnyMethod declaration = null;


        Token VOID_MODIFIER54=null;
        Token FUNCTION_MODIFIER55=null;
        Token SEMICOLON62=null;
        Identifier memberNameDeclaration56 =null;

        TypeParameterList typeParameters57 =null;

        ParameterList parameters58 =null;

        TypeConstraintList typeConstraints59 =null;

        Block block60 =null;

        SpecifierExpression functionSpecifier61 =null;


         MethodDefinition def=null;
                    MethodDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:399:5: ( ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:399:7: ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:399:7: ( VOID_MODIFIER | FUNCTION_MODIFIER )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==VOID_MODIFIER) ) {
                alt26=1;
            }
            else if ( (LA26_0==FUNCTION_MODIFIER) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;

            }
            switch (alt26) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:400:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER54=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodDeclaration2219); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { VoidModifier vm = new VoidModifier(VOID_MODIFIER54);
                              def = new MethodDefinition(VOID_MODIFIER54);
                              dec = new MethodDeclaration(VOID_MODIFIER54);
                              def.setType(vm);
                              dec.setType(vm);
                              declaration = dec; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:407:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER55=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodDeclaration2239); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { FunctionModifier fm = new FunctionModifier(FUNCTION_MODIFIER55);
                              def = new MethodDefinition(FUNCTION_MODIFIER55);
                              dec = new MethodDeclaration(FUNCTION_MODIFIER55);
                              def.setType(fm);
                              dec.setType(fm);
                              declaration = dec; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:415:7: ( memberNameDeclaration )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==LIDENTIFIER||LA27_0==UIDENTIFIER) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:416:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_voidOrInferredMethodDeclaration2275);
                    memberNameDeclaration56=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { dec.setIdentifier(memberNameDeclaration56); 
                              def.setIdentifier(memberNameDeclaration56); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:420:7: ( typeParameters )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==SMALLER_OP) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:421:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_voidOrInferredMethodDeclaration2312);
                    typeParameters57=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters57); 
                              dec.setTypeParameterList(typeParameters57); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:425:7: ( parameters )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==LPAREN) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:426:9: parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_voidOrInferredMethodDeclaration2357);
            	    parameters58=parameters();

            	    state._fsp--;
            	    if (state.failed) return declaration;

            	    if ( state.backtracking==0 ) { def.addParameterList(parameters58); 
            	              dec.addParameterList(parameters58); }

            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:431:7: ( typeConstraints )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==COMPILER_ANNOTATION||LA30_0==TYPE_CONSTRAINT) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:432:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_voidOrInferredMethodDeclaration2401);
                    typeConstraints59=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints59); 
                              dec.setTypeConstraintList(typeConstraints59); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:436:7: ( block | ( functionSpecifier )? SEMICOLON )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==LBRACE) ) {
                alt32=1;
            }
            else if ( (LA32_0==COMPUTE||LA32_0==SEMICOLON||LA32_0==SPECIFY) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;

            }
            switch (alt32) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:437:9: block
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_block_in_voidOrInferredMethodDeclaration2449);
                    block60=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setBlock(block60); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:441:9: ( functionSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:441:9: ( functionSpecifier )?
                    int alt31=2;
                    int LA31_0 = input.LA(1);

                    if ( (LA31_0==COMPUTE||LA31_0==SPECIFY) ) {
                        alt31=1;
                    }
                    switch (alt31) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:442:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_voidOrInferredMethodDeclaration2491);
                            functionSpecifier61=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setSpecifierExpression(functionSpecifier61); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON62=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_voidOrInferredMethodDeclaration2534); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { expecting=-1; }

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON62); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "voidOrInferredMethodDeclaration"



    // $ANTLR start "setterDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:452:1: setterDeclaration returns [AttributeSetterDefinition declaration] : ASSIGN ( memberNameDeclaration )? ( block | ( functionSpecifier )? SEMICOLON ) ;
    public AttributeSetterDefinition setterDeclaration() throws RecognitionException {
        AttributeSetterDefinition declaration = null;


        Token ASSIGN63=null;
        Token SEMICOLON67=null;
        Identifier memberNameDeclaration64 =null;

        Block block65 =null;

        SpecifierExpression functionSpecifier66 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:453:5: ( ASSIGN ( memberNameDeclaration )? ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:453:7: ASSIGN ( memberNameDeclaration )? ( block | ( functionSpecifier )? SEMICOLON )
            {
            ASSIGN63=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_setterDeclaration2583); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new AttributeSetterDefinition(ASSIGN63); 
                    declaration.setType( new VoidModifier(null) ); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:456:7: ( memberNameDeclaration )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==LIDENTIFIER||LA33_0==UIDENTIFIER) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:457:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_setterDeclaration2610);
                    memberNameDeclaration64=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration64); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:460:7: ( block | ( functionSpecifier )? SEMICOLON )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==LBRACE) ) {
                alt35=1;
            }
            else if ( (LA35_0==COMPUTE||LA35_0==SEMICOLON||LA35_0==SPECIFY) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;

            }
            switch (alt35) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:461:9: block
                    {
                    pushFollow(FOLLOW_block_in_setterDeclaration2649);
                    block65=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block65); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:464:9: ( functionSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:464:9: ( functionSpecifier )?
                    int alt34=2;
                    int LA34_0 = input.LA(1);

                    if ( (LA34_0==COMPUTE||LA34_0==SPECIFY) ) {
                        alt34=1;
                    }
                    switch (alt34) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:465:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_setterDeclaration2690);
                            functionSpecifier66=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(functionSpecifier66); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON67=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_setterDeclaration2733); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON67); 
                              expecting=-1; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "setterDeclaration"



    // $ANTLR start "tuplePatternStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:475:1: tuplePatternStart : LBRACKET ( compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER | ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart ) | tuplePatternStart ) ;
    public void tuplePatternStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:476:5: ( LBRACKET ( compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER | ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart ) | tuplePatternStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:476:7: LBRACKET ( compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER | ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart ) | tuplePatternStart )
            {
            match(input,LBRACKET,FOLLOW_LBRACKET_in_tuplePatternStart2768); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:477:7: ( compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER | ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart ) | tuplePatternStart )
            int alt37=3;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==COMPILER_ANNOTATION) ) {
                int LA37_1 = input.LA(2);

                if ( (true) ) {
                    alt37=1;
                }
                else if ( (synpred3_Ceylon()) ) {
                    alt37=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA37_0==LIDENTIFIER||LA37_0==PRODUCT_OP) ) {
                alt37=1;
            }
            else if ( (LA37_0==VALUE_MODIFIER) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==FUNCTION_MODIFIER) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==VOID_MODIFIER) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==ASSIGN) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==INTERFACE_DEFINITION) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==CLASS_DEFINITION) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==OBJECT_DEFINITION) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==NEW) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==ALIAS) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==UIDENTIFIER) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==SMALLER_OP) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==PACKAGE) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==LBRACKET) ) {
                int LA37_16 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt37=2;
                }
                else if ( (true) ) {
                    alt37=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 16, input);

                    throw nvae;

                }
            }
            else if ( (LA37_0==LBRACE) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==DYNAMIC) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;

            }
            switch (alt37) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:478:9: compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_tuplePatternStart2786);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:478:29: ( PRODUCT_OP )?
                    int alt36=2;
                    int LA36_0 = input.LA(1);

                    if ( (LA36_0==PRODUCT_OP) ) {
                        alt36=1;
                    }
                    switch (alt36) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:478:29: PRODUCT_OP
                            {
                            match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_tuplePatternStart2788); if (state.failed) return ;

                            }
                            break;

                    }


                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_tuplePatternStart2791); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:480:9: ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart )
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:481:9: ( compilerAnnotations declarationStart )
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:481:10: compilerAnnotations declarationStart
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_tuplePatternStart2827);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    pushFollow(FOLLOW_declarationStart_in_tuplePatternStart2829);
                    declarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:483:9: tuplePatternStart
                    {
                    pushFollow(FOLLOW_tuplePatternStart_in_tuplePatternStart2848);
                    tuplePatternStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "tuplePatternStart"



    // $ANTLR start "variableOrTuplePattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:487:1: variableOrTuplePattern returns [Pattern pattern] : ( ( tuplePatternStart )=> tuplePattern | variablePattern );
    public Pattern variableOrTuplePattern() throws RecognitionException {
        Pattern pattern = null;


        TuplePattern tuplePattern68 =null;

        VariablePattern variablePattern69 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:488:5: ( ( tuplePatternStart )=> tuplePattern | variablePattern )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==LBRACKET) ) {
                int LA38_1 = input.LA(2);

                if ( (synpred4_Ceylon()) ) {
                    alt38=1;
                }
                else if ( (true) ) {
                    alt38=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA38_0==COMPILER_ANNOTATION||LA38_0==FUNCTION_MODIFIER||LA38_0==LBRACE||LA38_0==LIDENTIFIER||LA38_0==PACKAGE||LA38_0==SMALLER_OP||LA38_0==UIDENTIFIER||LA38_0==VALUE_MODIFIER||LA38_0==VOID_MODIFIER) ) {
                alt38=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return pattern;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;

            }
            switch (alt38) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:489:7: ( tuplePatternStart )=> tuplePattern
                    {
                    pushFollow(FOLLOW_tuplePattern_in_variableOrTuplePattern2890);
                    tuplePattern68=tuplePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = tuplePattern68; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:492:7: variablePattern
                    {
                    pushFollow(FOLLOW_variablePattern_in_variableOrTuplePattern2913);
                    variablePattern69=variablePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = variablePattern69; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "variableOrTuplePattern"



    // $ANTLR start "pattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:496:1: pattern returns [Pattern pattern] : ( ( variable ENTRY_OP )=>ki1= keyItemPattern | ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern | ( tuplePatternStart )=> tuplePattern | variablePattern );
    public Pattern pattern() throws RecognitionException {
        Pattern pattern = null;


        KeyValuePattern ki1 =null;

        KeyValuePattern ki2 =null;

        TuplePattern tuplePattern70 =null;

        VariablePattern variablePattern71 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:497:5: ( ( variable ENTRY_OP )=>ki1= keyItemPattern | ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern | ( tuplePatternStart )=> tuplePattern | variablePattern )
            int alt39=4;
            switch ( input.LA(1) ) {
            case LBRACKET:
                {
                int LA39_1 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (synpred7_Ceylon()) ) {
                    alt39=3;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 1, input);

                    throw nvae;

                }
                }
                break;
            case COMPILER_ANNOTATION:
                {
                int LA39_2 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 2, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA39_3 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 3, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA39_4 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 4, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA39_5 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 5, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA39_6 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 6, input);

                    throw nvae;

                }
                }
                break;
            case VOID_MODIFIER:
                {
                int LA39_7 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 7, input);

                    throw nvae;

                }
                }
                break;
            case FUNCTION_MODIFIER:
                {
                int LA39_8 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 8, input);

                    throw nvae;

                }
                }
                break;
            case VALUE_MODIFIER:
                {
                int LA39_9 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 9, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA39_10 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 10, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return pattern;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;

            }

            switch (alt39) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:498:7: ( variable ENTRY_OP )=>ki1= keyItemPattern
                    {
                    pushFollow(FOLLOW_keyItemPattern_in_pattern2965);
                    ki1=keyItemPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = ki1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:502:7: ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern
                    {
                    pushFollow(FOLLOW_keyItemPattern_in_pattern3003);
                    ki2=keyItemPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = ki2; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:506:7: ( tuplePatternStart )=> tuplePattern
                    {
                    pushFollow(FOLLOW_tuplePattern_in_pattern3038);
                    tuplePattern70=tuplePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = tuplePattern70; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:510:7: variablePattern
                    {
                    pushFollow(FOLLOW_variablePattern_in_pattern3061);
                    variablePattern71=variablePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = variablePattern71; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "pattern"



    // $ANTLR start "tupleOrEntryPattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:514:1: tupleOrEntryPattern returns [Pattern pattern] : ( ( variable ENTRY_OP )=>ki1= keyItemPattern | ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern | tuplePattern );
    public Pattern tupleOrEntryPattern() throws RecognitionException {
        Pattern pattern = null;


        KeyValuePattern ki1 =null;

        KeyValuePattern ki2 =null;

        TuplePattern tuplePattern72 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:515:5: ( ( variable ENTRY_OP )=>ki1= keyItemPattern | ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern | tuplePattern )
            int alt40=3;
            switch ( input.LA(1) ) {
            case LBRACKET:
                {
                int LA40_1 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else if ( (true) ) {
                    alt40=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 1, input);

                    throw nvae;

                }
                }
                break;
            case COMPILER_ANNOTATION:
                {
                int LA40_2 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 2, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA40_3 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 3, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA40_4 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 4, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA40_5 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 5, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA40_6 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 6, input);

                    throw nvae;

                }
                }
                break;
            case VOID_MODIFIER:
                {
                int LA40_7 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 7, input);

                    throw nvae;

                }
                }
                break;
            case FUNCTION_MODIFIER:
                {
                int LA40_8 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 8, input);

                    throw nvae;

                }
                }
                break;
            case VALUE_MODIFIER:
                {
                int LA40_9 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 9, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA40_10 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 10, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return pattern;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;

            }

            switch (alt40) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:516:7: ( variable ENTRY_OP )=>ki1= keyItemPattern
                    {
                    pushFollow(FOLLOW_keyItemPattern_in_tupleOrEntryPattern3113);
                    ki1=keyItemPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = ki1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:520:7: ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern
                    {
                    pushFollow(FOLLOW_keyItemPattern_in_tupleOrEntryPattern3151);
                    ki2=keyItemPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = ki2; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:524:7: tuplePattern
                    {
                    pushFollow(FOLLOW_tuplePattern_in_tupleOrEntryPattern3173);
                    tuplePattern72=tuplePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = tuplePattern72; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "tupleOrEntryPattern"



    // $ANTLR start "variablePattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:528:1: variablePattern returns [VariablePattern pattern] : variable ;
    public VariablePattern variablePattern() throws RecognitionException {
        VariablePattern pattern = null;


        Variable variable73 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:529:5: ( variable )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:529:7: variable
            {
            pushFollow(FOLLOW_variable_in_variablePattern3202);
            variable73=variable();

            state._fsp--;
            if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern = new VariablePattern(null);
                    pattern.setVariable(variable73); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "variablePattern"



    // $ANTLR start "tuplePattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:534:1: tuplePattern returns [TuplePattern pattern] : LBRACKET (v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )* )? RBRACKET ;
    public TuplePattern tuplePattern() throws RecognitionException {
        TuplePattern pattern = null;


        Token c1=null;
        Token LBRACKET74=null;
        Token RBRACKET75=null;
        Pattern v1 =null;

        Pattern v2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:535:5: ( LBRACKET (v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )* )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:535:7: LBRACKET (v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )* )? RBRACKET
            {
            LBRACKET74=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_tuplePattern3231); if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern = new TuplePattern(LBRACKET74); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:537:7: (v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )* )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==COMPILER_ANNOTATION||LA42_0==FUNCTION_MODIFIER||(LA42_0 >= LBRACE && LA42_0 <= LBRACKET)||LA42_0==LIDENTIFIER||LA42_0==PACKAGE||LA42_0==PRODUCT_OP||LA42_0==SMALLER_OP||LA42_0==UIDENTIFIER||LA42_0==VALUE_MODIFIER||LA42_0==VOID_MODIFIER) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:538:9: v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )*
                    {
                    pushFollow(FOLLOW_variadicPattern_in_tuplePattern3259);
                    v1=variadicPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern.addPattern(v1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:540:9: (c1= COMMA (v2= variadicPattern ) )*
                    loop41:
                    do {
                        int alt41=2;
                        int LA41_0 = input.LA(1);

                        if ( (LA41_0==COMMA) ) {
                            alt41=1;
                        }


                        switch (alt41) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:541:11: c1= COMMA (v2= variadicPattern )
                    	    {
                    	    c1=(Token)match(input,COMMA,FOLLOW_COMMA_in_tuplePattern3293); if (state.failed) return pattern;

                    	    if ( state.backtracking==0 ) { pattern.setEndToken(c1); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:543:11: (v2= variadicPattern )
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:544:13: v2= variadicPattern
                    	    {
                    	    pushFollow(FOLLOW_variadicPattern_in_tuplePattern3333);
                    	    v2=variadicPattern();

                    	    state._fsp--;
                    	    if (state.failed) return pattern;

                    	    if ( state.backtracking==0 ) { pattern.addPattern(v2);
                    	                  pattern.setEndToken(null); }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop41;
                        }
                    } while (true);


                    }
                    break;

            }


            RBRACKET75=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_tuplePattern3387); if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern.setEndToken(RBRACKET75); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "tuplePattern"



    // $ANTLR start "variadicPattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:554:1: variadicPattern returns [Pattern pattern] : ( ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable |p= pattern ) ;
    public Pattern variadicPattern() throws RecognitionException {
        Pattern pattern = null;


        Pattern p =null;

        Variable variadicVariable76 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:555:5: ( ( ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable |p= pattern ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:555:7: ( ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable |p= pattern )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:555:7: ( ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable |p= pattern )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==COMPILER_ANNOTATION) ) {
                int LA43_1 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (true) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA43_0==UIDENTIFIER) ) {
                int LA43_2 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (true) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA43_0==SMALLER_OP) ) {
                int LA43_3 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (true) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA43_0==PACKAGE) ) {
                int LA43_4 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (true) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA43_0==LBRACKET) ) {
                int LA43_5 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (true) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA43_0==LBRACE) ) {
                int LA43_6 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (true) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA43_0==PRODUCT_OP) && (synpred10_Ceylon())) {
                alt43=1;
            }
            else if ( (LA43_0==FUNCTION_MODIFIER||LA43_0==LIDENTIFIER||LA43_0==VALUE_MODIFIER||LA43_0==VOID_MODIFIER) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return pattern;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;

            }
            switch (alt43) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:556:9: ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable
                    {
                    pushFollow(FOLLOW_variadicVariable_in_variadicPattern3445);
                    variadicVariable76=variadicVariable();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { VariablePattern vp = new VariablePattern(null);
                              vp.setVariable(variadicVariable76); 
                              pattern = vp; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:562:9: p= pattern
                    {
                    pushFollow(FOLLOW_pattern_in_variadicPattern3474);
                    p=pattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = p; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "variadicPattern"



    // $ANTLR start "variadicVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:567:1: variadicVariable returns [Variable variable] : compilerAnnotations ( unionType )? ( PRODUCT_OP ) ( memberName )? ;
    public Variable variadicVariable() throws RecognitionException {
        Variable variable = null;


        Token PRODUCT_OP79=null;
        List<CompilerAnnotation> compilerAnnotations77 =null;

        StaticType unionType78 =null;

        Identifier memberName80 =null;


         variable = new Variable(null); 
                    Type t = new ValueModifier(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:570:5: ( compilerAnnotations ( unionType )? ( PRODUCT_OP ) ( memberName )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:570:7: compilerAnnotations ( unionType )? ( PRODUCT_OP ) ( memberName )?
            {
            pushFollow(FOLLOW_compilerAnnotations_in_variadicVariable3521);
            compilerAnnotations77=compilerAnnotations();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable.getCompilerAnnotations().addAll(compilerAnnotations77); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:572:7: ( unionType )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( ((LA44_0 >= LBRACE && LA44_0 <= LBRACKET)||LA44_0==PACKAGE||LA44_0==SMALLER_OP||LA44_0==UIDENTIFIER) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:573:9: unionType
                    {
                    pushFollow(FOLLOW_unionType_in_variadicVariable3547);
                    unionType78=unionType();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { t = unionType78; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:576:7: ( PRODUCT_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:577:9: PRODUCT_OP
            {
            PRODUCT_OP79=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_variadicVariable3584); if (state.failed) return variable;

            if ( state.backtracking==0 ) { SequencedType st = new SequencedType(PRODUCT_OP79);
                      st.setType(t);
                      st.setAtLeastOne(false);
                      variable.setType(st); }

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:589:7: ( memberName )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==LIDENTIFIER) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:590:9: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_variadicVariable3628);
                    memberName80=memberName();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setIdentifier(memberName80); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "variadicVariable"



    // $ANTLR start "keyItemPattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:595:1: keyItemPattern returns [KeyValuePattern pattern] : v1= variableOrTuplePattern ENTRY_OP (v2= variableOrTuplePattern )? ;
    public KeyValuePattern keyItemPattern() throws RecognitionException {
        KeyValuePattern pattern = null;


        Token ENTRY_OP81=null;
        Pattern v1 =null;

        Pattern v2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:596:5: (v1= variableOrTuplePattern ENTRY_OP (v2= variableOrTuplePattern )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:596:7: v1= variableOrTuplePattern ENTRY_OP (v2= variableOrTuplePattern )?
            {
            pushFollow(FOLLOW_variableOrTuplePattern_in_keyItemPattern3670);
            v1=variableOrTuplePattern();

            state._fsp--;
            if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern = new KeyValuePattern(null);
                    pattern.setKey(v1); }

            ENTRY_OP81=(Token)match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_keyItemPattern3686); if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern.setEndToken(ENTRY_OP81); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:601:7: (v2= variableOrTuplePattern )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==COMPILER_ANNOTATION||LA46_0==FUNCTION_MODIFIER||(LA46_0 >= LBRACE && LA46_0 <= LBRACKET)||LA46_0==LIDENTIFIER||LA46_0==PACKAGE||LA46_0==SMALLER_OP||LA46_0==UIDENTIFIER||LA46_0==VALUE_MODIFIER||LA46_0==VOID_MODIFIER) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:602:9: v2= variableOrTuplePattern
                    {
                    pushFollow(FOLLOW_variableOrTuplePattern_in_keyItemPattern3714);
                    v2=variableOrTuplePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern.setValue(v2); 
                              pattern.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "keyItemPattern"



    // $ANTLR start "destructure"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:608:1: destructure returns [Destructure destructure] : VALUE_MODIFIER tupleOrEntryPattern ( specifier )? SEMICOLON ;
    public Destructure destructure() throws RecognitionException {
        Destructure destructure = null;


        Token VALUE_MODIFIER82=null;
        Token SEMICOLON85=null;
        Pattern tupleOrEntryPattern83 =null;

        SpecifierExpression specifier84 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:609:5: ( VALUE_MODIFIER tupleOrEntryPattern ( specifier )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:609:7: VALUE_MODIFIER tupleOrEntryPattern ( specifier )? SEMICOLON
            {
            VALUE_MODIFIER82=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_destructure3754); if (state.failed) return destructure;

            if ( state.backtracking==0 ) { ValueModifier vm = new ValueModifier(VALUE_MODIFIER82);
                    destructure = new Destructure(null);
                    destructure.setType(vm); }

            pushFollow(FOLLOW_tupleOrEntryPattern_in_destructure3770);
            tupleOrEntryPattern83=tupleOrEntryPattern();

            state._fsp--;
            if (state.failed) return destructure;

            if ( state.backtracking==0 ) { destructure.setPattern(tupleOrEntryPattern83); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:615:7: ( specifier )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==SPECIFY) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:616:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_destructure3796);
                    specifier84=specifier();

                    state._fsp--;
                    if (state.failed) return destructure;

                    if ( state.backtracking==0 ) { destructure.setSpecifierExpression(specifier84); }

                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    }
                    break;

            }


            SEMICOLON85=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_destructure3833); if (state.failed) return destructure;

            if ( state.backtracking==0 ) { destructure.setEndToken(SEMICOLON85); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return destructure;
    }
    // $ANTLR end "destructure"



    // $ANTLR start "inferredAttributeDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:625:1: inferredAttributeDeclaration returns [AnyAttribute declaration] : VALUE_MODIFIER ( memberNameDeclaration )? ( ( specifier | lazySpecifier )? SEMICOLON | block ) ;
    public AnyAttribute inferredAttributeDeclaration() throws RecognitionException {
        AnyAttribute declaration = null;


        Token VALUE_MODIFIER86=null;
        Token SEMICOLON90=null;
        Identifier memberNameDeclaration87 =null;

        SpecifierExpression specifier88 =null;

        SpecifierExpression lazySpecifier89 =null;

        Block block91 =null;


         AttributeGetterDefinition def=null;
                    AttributeDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:628:5: ( VALUE_MODIFIER ( memberNameDeclaration )? ( ( specifier | lazySpecifier )? SEMICOLON | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:628:7: VALUE_MODIFIER ( memberNameDeclaration )? ( ( specifier | lazySpecifier )? SEMICOLON | block )
            {
            VALUE_MODIFIER86=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_inferredAttributeDeclaration3871); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { ValueModifier fm = new ValueModifier(VALUE_MODIFIER86);
                    def = new AttributeGetterDefinition(VALUE_MODIFIER86);
                    dec = new AttributeDeclaration(VALUE_MODIFIER86);
                    def.setType(fm);
                    dec.setType(fm);
                    declaration = dec; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:635:7: ( memberNameDeclaration )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==LIDENTIFIER||LA48_0==UIDENTIFIER) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:636:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_inferredAttributeDeclaration3898);
                    memberNameDeclaration87=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { dec.setIdentifier(memberNameDeclaration87); 
                              def.setIdentifier(memberNameDeclaration87); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:640:7: ( ( specifier | lazySpecifier )? SEMICOLON | block )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==COMPUTE||LA50_0==SEMICOLON||LA50_0==SPECIFY) ) {
                alt50=1;
            }
            else if ( (LA50_0==LBRACE) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;

            }
            switch (alt50) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:641:9: ( specifier | lazySpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:641:9: ( specifier | lazySpecifier )?
                    int alt49=3;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==SPECIFY) ) {
                        alt49=1;
                    }
                    else if ( (LA49_0==COMPUTE) ) {
                        alt49=2;
                    }
                    switch (alt49) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:642:11: specifier
                            {
                            pushFollow(FOLLOW_specifier_in_inferredAttributeDeclaration3948);
                            specifier88=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setSpecifierOrInitializerExpression(specifier88); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:645:11: lazySpecifier
                            {
                            pushFollow(FOLLOW_lazySpecifier_in_inferredAttributeDeclaration3983);
                            lazySpecifier89=lazySpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setSpecifierOrInitializerExpression(lazySpecifier89); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON90=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_inferredAttributeDeclaration4026); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON90); 
                              expecting=-1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:653:9: block
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_block_in_inferredAttributeDeclaration4065);
                    block91=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setBlock(block91); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "inferredAttributeDeclaration"



    // $ANTLR start "typedMethodOrAttributeDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:659:1: typedMethodOrAttributeDeclaration returns [TypedDeclaration declaration] : ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block ) ;
    public TypedDeclaration typedMethodOrAttributeDeclaration() throws RecognitionException {
        TypedDeclaration declaration = null;


        Token s1=null;
        Token s2=null;
        Token DYNAMIC93=null;
        Block b1 =null;

        SpecifierExpression ms =null;

        SpecifierExpression as =null;

        SpecifierExpression ac =null;

        Block b2 =null;

        Type variadicType92 =null;

        Identifier memberNameDeclaration94 =null;

        TypeParameterList typeParameters95 =null;

        ParameterList parameters96 =null;

        TypeConstraintList typeConstraints97 =null;


         AttributeGetterDefinition adef=new AttributeGetterDefinition(null);
                    AttributeDeclaration adec=new AttributeDeclaration(null);
                    MethodDefinition mdef=new MethodDefinition(null);
                    MethodDeclaration mdec=new MethodDeclaration(null); 
                    declaration = adec; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:665:5: ( ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:665:7: ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:665:7: ( variadicType | DYNAMIC )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( ((LA51_0 >= LBRACE && LA51_0 <= LBRACKET)||LA51_0==PACKAGE||LA51_0==SMALLER_OP||LA51_0==UIDENTIFIER) ) {
                alt51=1;
            }
            else if ( (LA51_0==DYNAMIC) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;

            }
            switch (alt51) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:665:9: variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_typedMethodOrAttributeDeclaration4115);
                    variadicType92=variadicType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { adef.setType(variadicType92);
                              adec.setType(variadicType92); 
                              mdef.setType(variadicType92);
                              mdec.setType(variadicType92); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:670:9: DYNAMIC
                    {
                    DYNAMIC93=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_typedMethodOrAttributeDeclaration4135); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { DynamicModifier dm = new DynamicModifier(DYNAMIC93);
                              adef.setType(dm);
                              adec.setType(dm); 
                              mdef.setType(dm);
                              mdec.setType(dm); }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberNameDeclaration_in_typedMethodOrAttributeDeclaration4161);
            memberNameDeclaration94=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { adef.setIdentifier(memberNameDeclaration94);
                    adec.setIdentifier(memberNameDeclaration94); 
                    mdef.setIdentifier(memberNameDeclaration94);
                    mdec.setIdentifier(memberNameDeclaration94); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:682:7: ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block )
            int alt58=3;
            switch ( input.LA(1) ) {
            case LPAREN:
            case SMALLER_OP:
                {
                alt58=1;
                }
                break;
            case COMPUTE:
            case SEMICOLON:
            case SPECIFY:
                {
                alt58=2;
                }
                break;
            case LBRACE:
                {
                alt58=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;

            }

            switch (alt58) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:683:9: ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON )
                    {
                    if ( state.backtracking==0 ) { declaration = mdec; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:684:9: ( typeParameters )?
                    int alt52=2;
                    int LA52_0 = input.LA(1);

                    if ( (LA52_0==SMALLER_OP) ) {
                        alt52=1;
                    }
                    switch (alt52) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:685:11: typeParameters
                            {
                            pushFollow(FOLLOW_typeParameters_in_typedMethodOrAttributeDeclaration4210);
                            typeParameters95=typeParameters();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { mdef.setTypeParameterList(typeParameters95);
                                        mdec.setTypeParameterList(typeParameters95); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:689:9: ( parameters )+
                    int cnt53=0;
                    loop53:
                    do {
                        int alt53=2;
                        int LA53_0 = input.LA(1);

                        if ( (LA53_0==LPAREN) ) {
                            alt53=1;
                        }


                        switch (alt53) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:690:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_typedMethodOrAttributeDeclaration4255);
                    	    parameters96=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { mdef.addParameterList(parameters96);
                    	                mdec.addParameterList(parameters96); }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt53 >= 1 ) break loop53;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(53, input);
                                throw eee;
                        }
                        cnt53++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:695:9: ( typeConstraints )?
                    int alt54=2;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==COMPILER_ANNOTATION||LA54_0==TYPE_CONSTRAINT) ) {
                        alt54=1;
                    }
                    switch (alt54) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:696:11: typeConstraints
                            {
                            pushFollow(FOLLOW_typeConstraints_in_typedMethodOrAttributeDeclaration4310);
                            typeConstraints97=typeConstraints();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { mdef.setTypeConstraintList(typeConstraints97);
                                        mdec.setTypeConstraintList(typeConstraints97); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:700:9: (b1= block | (ms= functionSpecifier )? s1= SEMICOLON )
                    int alt56=2;
                    int LA56_0 = input.LA(1);

                    if ( (LA56_0==LBRACE) ) {
                        alt56=1;
                    }
                    else if ( (LA56_0==COMPUTE||LA56_0==SEMICOLON||LA56_0==SPECIFY) ) {
                        alt56=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 56, 0, input);

                        throw nvae;

                    }
                    switch (alt56) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:701:11: b1= block
                            {
                            if ( state.backtracking==0 ) { declaration = mdef; }

                            pushFollow(FOLLOW_block_in_typedMethodOrAttributeDeclaration4370);
                            b1=block();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { mdef.setBlock(b1); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:705:11: (ms= functionSpecifier )? s1= SEMICOLON
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:705:11: (ms= functionSpecifier )?
                            int alt55=2;
                            int LA55_0 = input.LA(1);

                            if ( (LA55_0==COMPUTE||LA55_0==SPECIFY) ) {
                                alt55=1;
                            }
                            switch (alt55) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:706:13: ms= functionSpecifier
                                    {
                                    pushFollow(FOLLOW_functionSpecifier_in_typedMethodOrAttributeDeclaration4420);
                                    ms=functionSpecifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { mdec.setSpecifierExpression(ms); }

                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                            s1=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration4472); if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setEndToken(s1);
                                        expecting=-1; }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:715:9: (as= specifier |ac= lazySpecifier )? s2= SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:715:9: (as= specifier |ac= lazySpecifier )?
                    int alt57=3;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==SPECIFY) ) {
                        alt57=1;
                    }
                    else if ( (LA57_0==COMPUTE) ) {
                        alt57=2;
                    }
                    switch (alt57) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:716:11: as= specifier
                            {
                            pushFollow(FOLLOW_specifier_in_typedMethodOrAttributeDeclaration4527);
                            as=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { adec.setSpecifierOrInitializerExpression(as); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:719:11: ac= lazySpecifier
                            {
                            pushFollow(FOLLOW_lazySpecifier_in_typedMethodOrAttributeDeclaration4565);
                            ac=lazySpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { adec.setSpecifierOrInitializerExpression(ac); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    s2=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration4611); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(s2); 
                            expecting=-1; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:727:9: b2= block
                    {
                    if ( state.backtracking==0 ) { declaration = adef; }

                    pushFollow(FOLLOW_block_in_typedMethodOrAttributeDeclaration4652);
                    b2=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { adef.setBlock(b2); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "typedMethodOrAttributeDeclaration"



    // $ANTLR start "interfaceDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:733:1: interfaceDeclaration returns [AnyInterface declaration] : ( INTERFACE_DEFINITION | DYNAMIC ) ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON ) ;
    public AnyInterface interfaceDeclaration() throws RecognitionException {
        AnyInterface declaration = null;


        Token INTERFACE_DEFINITION98=null;
        Token DYNAMIC99=null;
        Token SEMICOLON107=null;
        Identifier typeNameDeclaration100 =null;

        TypeParameterList typeParameters101 =null;

        CaseTypes caseTypes102 =null;

        SatisfiedTypes satisfiedTypes103 =null;

        TypeConstraintList typeConstraints104 =null;

        InterfaceBody interfaceBody105 =null;

        TypeSpecifier typeSpecifier106 =null;


         InterfaceDefinition def=null; 
                    InterfaceDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:736:5: ( ( INTERFACE_DEFINITION | DYNAMIC ) ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:736:7: ( INTERFACE_DEFINITION | DYNAMIC ) ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:736:7: ( INTERFACE_DEFINITION | DYNAMIC )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==INTERFACE_DEFINITION) ) {
                alt59=1;
            }
            else if ( (LA59_0==DYNAMIC) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;

            }
            switch (alt59) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:737:9: INTERFACE_DEFINITION
                    {
                    INTERFACE_DEFINITION98=(Token)match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_interfaceDeclaration4711); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def = new InterfaceDefinition(INTERFACE_DEFINITION98); 
                              dec = new InterfaceDeclaration(INTERFACE_DEFINITION98);
                              declaration = dec; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:742:9: DYNAMIC
                    {
                    DYNAMIC99=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_interfaceDeclaration4740); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def = new InterfaceDefinition(DYNAMIC99);
                              dec = new InterfaceDeclaration(DYNAMIC99);
                              def.setDynamic(true);
                              declaration = def; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:748:7: ( typeNameDeclaration )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==LIDENTIFIER||LA60_0==UIDENTIFIER) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:749:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_interfaceDeclaration4776);
                    typeNameDeclaration100=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { dec.setIdentifier(typeNameDeclaration100); 
                              def.setIdentifier(typeNameDeclaration100); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:753:7: ( typeParameters )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==SMALLER_OP) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:754:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_interfaceDeclaration4814);
                    typeParameters101=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters101); 
                              dec.setTypeParameterList(typeParameters101); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:758:7: ( caseTypes )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==CASE_TYPES) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:759:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_interfaceDeclaration4852);
                    caseTypes102=caseTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setCaseTypes(caseTypes102); 
                              dec.setCaseTypes(caseTypes102); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:768:7: ( satisfiedTypes )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==SATISFIES) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:769:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_interfaceDeclaration4906);
                    satisfiedTypes103=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setSatisfiedTypes(satisfiedTypes103); 
                              dec.setSatisfiedTypes(satisfiedTypes103); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:773:7: ( typeConstraints )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==COMPILER_ANNOTATION||LA64_0==TYPE_CONSTRAINT) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:774:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_interfaceDeclaration4943);
                    typeConstraints104=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints104); 
                              dec.setTypeConstraintList(typeConstraints104); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:778:7: ( interfaceBody | ( typeSpecifier )? SEMICOLON )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==LBRACE) ) {
                alt66=1;
            }
            else if ( (LA66_0==COMPUTE||LA66_0==SEMICOLON||LA66_0==SPECIFY) ) {
                alt66=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;

            }
            switch (alt66) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:779:9: interfaceBody
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_interfaceBody_in_interfaceDeclaration4990);
                    interfaceBody105=interfaceBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setInterfaceBody(interfaceBody105); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:783:9: ( typeSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:783:9: ( typeSpecifier )?
                    int alt65=2;
                    int LA65_0 = input.LA(1);

                    if ( (LA65_0==COMPUTE||LA65_0==SPECIFY) ) {
                        alt65=1;
                    }
                    switch (alt65) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:784:11: typeSpecifier
                            {
                            pushFollow(FOLLOW_typeSpecifier_in_interfaceDeclaration5031);
                            typeSpecifier106=typeSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setTypeSpecifier(typeSpecifier106); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON107=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interfaceDeclaration5075); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON107); 
                              expecting=-1; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "interfaceDeclaration"



    // $ANTLR start "classDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:794:1: classDeclaration returns [AnyClass declaration] : CLASS_DEFINITION ( typeNameDeclaration )? ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON ) ;
    public AnyClass classDeclaration() throws RecognitionException {
        AnyClass declaration = null;


        Token CLASS_DEFINITION108=null;
        Token SEMICOLON118=null;
        Identifier typeNameDeclaration109 =null;

        TypeParameterList typeParameters110 =null;

        ParameterList parameters111 =null;

        CaseTypes caseTypes112 =null;

        ExtendedType extendedType113 =null;

        SatisfiedTypes satisfiedTypes114 =null;

        TypeConstraintList typeConstraints115 =null;

        ClassBody classBody116 =null;

        ClassSpecifier classSpecifier117 =null;


         ClassDefinition def=null; 
                    ClassDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:797:5: ( CLASS_DEFINITION ( typeNameDeclaration )? ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:797:7: CLASS_DEFINITION ( typeNameDeclaration )? ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON )
            {
            CLASS_DEFINITION108=(Token)match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_classDeclaration5123); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { def = new ClassDefinition(CLASS_DEFINITION108); 
                    dec = new ClassDeclaration(CLASS_DEFINITION108);
                    declaration = dec; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:801:7: ( typeNameDeclaration )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==LIDENTIFIER||LA67_0==UIDENTIFIER) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:802:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_classDeclaration5150);
                    typeNameDeclaration109=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { dec.setIdentifier(typeNameDeclaration109); 
                              def.setIdentifier(typeNameDeclaration109); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:806:7: ( typeParameters )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==SMALLER_OP) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:807:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_classDeclaration5187);
                    typeParameters110=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters110); 
                              dec.setTypeParameterList(typeParameters110); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:811:7: ( parameters )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==LPAREN) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:812:9: parameters
                    {
                    pushFollow(FOLLOW_parameters_in_classDeclaration5224);
                    parameters111=parameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setParameterList(parameters111); 
                              dec.setParameterList(parameters111); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:816:7: ( caseTypes )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==CASE_TYPES) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:817:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_classDeclaration5261);
                    caseTypes112=caseTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setCaseTypes(caseTypes112); 
                              dec.setCaseTypes(caseTypes112); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:822:7: ( extendedType )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==EXTENDS) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:823:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_classDeclaration5307);
                    extendedType113=extendedType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setExtendedType(extendedType113); 
                              dec.setExtendedType(extendedType113); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:827:7: ( satisfiedTypes )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==SATISFIES) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:828:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_classDeclaration5345);
                    satisfiedTypes114=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setSatisfiedTypes(satisfiedTypes114); 
                              dec.setSatisfiedTypes(satisfiedTypes114); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:832:7: ( typeConstraints )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==COMPILER_ANNOTATION||LA73_0==TYPE_CONSTRAINT) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:833:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_classDeclaration5382);
                    typeConstraints115=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints115); 
                              dec.setTypeConstraintList(typeConstraints115); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:837:7: ( classBody | ( classSpecifier )? SEMICOLON )
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==LBRACE) ) {
                alt75=1;
            }
            else if ( (LA75_0==COMPUTE||LA75_0==SEMICOLON||LA75_0==SPECIFY) ) {
                alt75=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;

            }
            switch (alt75) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:838:9: classBody
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_classBody_in_classDeclaration5429);
                    classBody116=classBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setClassBody(classBody116); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:842:9: ( classSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:842:9: ( classSpecifier )?
                    int alt74=2;
                    int LA74_0 = input.LA(1);

                    if ( (LA74_0==COMPUTE||LA74_0==SPECIFY) ) {
                        alt74=1;
                    }
                    switch (alt74) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:843:11: classSpecifier
                            {
                            pushFollow(FOLLOW_classSpecifier_in_classDeclaration5470);
                            classSpecifier117=classSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setClassSpecifier(classSpecifier117); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON118=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_classDeclaration5513); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON118); 
                              expecting=-1; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "classDeclaration"



    // $ANTLR start "constructor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:853:1: constructor returns [Constructor declaration] : NEW ( typeNameDeclaration )? ( parameters )? (dc= delegatedConstructor )? block ;
    public Constructor constructor() throws RecognitionException {
        Constructor declaration = null;


        Token NEW119=null;
        DelegatedConstructor dc =null;

        Identifier typeNameDeclaration120 =null;

        ParameterList parameters121 =null;

        Block block122 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:854:5: ( NEW ( typeNameDeclaration )? ( parameters )? (dc= delegatedConstructor )? block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:854:7: NEW ( typeNameDeclaration )? ( parameters )? (dc= delegatedConstructor )? block
            {
            NEW119=(Token)match(input,NEW,FOLLOW_NEW_in_constructor5552); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new Constructor(NEW119); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:856:7: ( typeNameDeclaration )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==LIDENTIFIER||LA76_0==UIDENTIFIER) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:857:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_constructor5578);
                    typeNameDeclaration120=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(typeNameDeclaration120); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:860:7: ( parameters )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==LPAREN) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:861:9: parameters
                    {
                    pushFollow(FOLLOW_parameters_in_constructor5615);
                    parameters121=parameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setParameterList(parameters121); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:864:7: (dc= delegatedConstructor )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==EXTENDS) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:865:9: dc= delegatedConstructor
                    {
                    pushFollow(FOLLOW_delegatedConstructor_in_constructor5656);
                    dc=delegatedConstructor();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setDelegatedConstructor(dc); }

                    }
                    break;

            }


            pushFollow(FOLLOW_block_in_constructor5683);
            block122=block();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setBlock(block122); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "constructor"



    // $ANTLR start "delegatedConstructor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:872:1: delegatedConstructor returns [DelegatedConstructor delegatedConstructor] : EXTENDS (ci= classInstantiation )? ;
    public DelegatedConstructor delegatedConstructor() throws RecognitionException {
        DelegatedConstructor delegatedConstructor = null;


        Token EXTENDS123=null;
        PsiCompatibleCeylonParser.classInstantiation_return ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:873:5: ( EXTENDS (ci= classInstantiation )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:873:7: EXTENDS (ci= classInstantiation )?
            {
            EXTENDS123=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_delegatedConstructor5712); if (state.failed) return delegatedConstructor;

            if ( state.backtracking==0 ) { delegatedConstructor = new DelegatedConstructor(EXTENDS123); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:875:7: (ci= classInstantiation )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==PACKAGE||LA79_0==SUPER||LA79_0==UIDENTIFIER) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:876:9: ci= classInstantiation
                    {
                    pushFollow(FOLLOW_classInstantiation_in_delegatedConstructor5740);
                    ci=classInstantiation();

                    state._fsp--;
                    if (state.failed) return delegatedConstructor;

                    if ( state.backtracking==0 ) { delegatedConstructor.setType((ci!=null?ci.type:null));
                              delegatedConstructor.setInvocationExpression((ci!=null?ci.invocationExpression:null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return delegatedConstructor;
    }
    // $ANTLR end "delegatedConstructor"



    // $ANTLR start "aliasDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:882:1: aliasDeclaration returns [TypeAliasDeclaration declaration] : ALIAS ( typeNameDeclaration )? ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON ;
    public TypeAliasDeclaration aliasDeclaration() throws RecognitionException {
        TypeAliasDeclaration declaration = null;


        Token ALIAS124=null;
        Token SEMICOLON129=null;
        Identifier typeNameDeclaration125 =null;

        TypeParameterList typeParameters126 =null;

        TypeConstraintList typeConstraints127 =null;

        TypeSpecifier typeSpecifier128 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:883:5: ( ALIAS ( typeNameDeclaration )? ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:883:7: ALIAS ( typeNameDeclaration )? ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON
            {
            ALIAS124=(Token)match(input,ALIAS,FOLLOW_ALIAS_in_aliasDeclaration5780); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new TypeAliasDeclaration(ALIAS124);}

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:885:7: ( typeNameDeclaration )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==LIDENTIFIER||LA80_0==UIDENTIFIER) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:886:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_aliasDeclaration5806);
                    typeNameDeclaration125=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(typeNameDeclaration125); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:889:7: ( typeParameters )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==SMALLER_OP) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:890:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_aliasDeclaration5844);
                    typeParameters126=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeParameterList(typeParameters126); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:893:7: ( typeConstraints )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==COMPILER_ANNOTATION||LA82_0==TYPE_CONSTRAINT) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:894:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_aliasDeclaration5882);
                    typeConstraints127=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeConstraintList(typeConstraints127); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:897:7: ( typeSpecifier )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==COMPUTE||LA83_0==SPECIFY) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:898:9: typeSpecifier
                    {
                    pushFollow(FOLLOW_typeSpecifier_in_aliasDeclaration5919);
                    typeSpecifier128=typeSpecifier();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeSpecifier(typeSpecifier128); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON129=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_aliasDeclaration5954); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON129); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "aliasDeclaration"



    // $ANTLR start "assertion"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:907:1: assertion returns [Assertion assertion] : annotations ASSERT conditions SEMICOLON ;
    public Assertion assertion() throws RecognitionException {
        Assertion assertion = null;


        Token ASSERT130=null;
        Token SEMICOLON133=null;
        AnnotationList annotations131 =null;

        ConditionList conditions132 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:908:5: ( annotations ASSERT conditions SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:908:7: annotations ASSERT conditions SEMICOLON
            {
            pushFollow(FOLLOW_annotations_in_assertion5983);
            annotations131=annotations();

            state._fsp--;
            if (state.failed) return assertion;

            ASSERT130=(Token)match(input,ASSERT,FOLLOW_ASSERT_in_assertion5991); if (state.failed) return assertion;

            if ( state.backtracking==0 ) { assertion = new Assertion(ASSERT130); 
                    assertion.setAnnotationList(annotations131); }

            pushFollow(FOLLOW_conditions_in_assertion6007);
            conditions132=conditions();

            state._fsp--;
            if (state.failed) return assertion;

            if ( state.backtracking==0 ) { assertion.setConditionList(conditions132); }

            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON133=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_assertion6031); if (state.failed) return assertion;

            if ( state.backtracking==0 ) { assertion.setEndToken(SEMICOLON133); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return assertion;
    }
    // $ANTLR end "assertion"



    // $ANTLR start "block"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:920:1: block returns [Block block] : LBRACE ( declarationOrStatement )* RBRACE ;
    public Block block() throws RecognitionException {
        Block block = null;


        Token LBRACE134=null;
        Token RBRACE136=null;
        Statement declarationOrStatement135 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:921:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:921:7: LBRACE ( declarationOrStatement )* RBRACE
            {
            LBRACE134=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_block6060); if (state.failed) return block;

            if ( state.backtracking==0 ) { block = new Block(LBRACE134); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:923:7: ( declarationOrStatement )*
            loop84:
            do {
                int alt84=2;
                int LA84_0 = input.LA(1);

                if ( (LA84_0==ALIAS||(LA84_0 >= ASSERT && LA84_0 <= ASSIGN)||(LA84_0 >= BACKTICK && LA84_0 <= BREAK)||(LA84_0 >= CHAR_LITERAL && LA84_0 <= CLASS_DEFINITION)||LA84_0==COMPILER_ANNOTATION||LA84_0==CONTINUE||(LA84_0 >= DECREMENT_OP && LA84_0 <= DIFFERENCE_OP)||LA84_0==DYNAMIC||(LA84_0 >= FLOAT_LITERAL && LA84_0 <= FUNCTION_MODIFIER)||(LA84_0 >= IF_CLAUSE && LA84_0 <= INTERFACE_DEFINITION)||LA84_0==IN_OP||(LA84_0 >= LBRACE && LA84_0 <= LIDENTIFIER)||LA84_0==LPAREN||LA84_0==MODULE||(LA84_0 >= NATURAL_LITERAL && LA84_0 <= NEW)||(LA84_0 >= NOT_OP && LA84_0 <= OBJECT_DEFINITION)||(LA84_0 >= OUT && LA84_0 <= PACKAGE)||LA84_0==PRODUCT_OP||LA84_0==RETURN||(LA84_0 >= SEMICOLON && LA84_0 <= SMALLER_OP)||LA84_0==STRING_LITERAL||LA84_0==STRING_START||(LA84_0 >= SUM_OP && LA84_0 <= SWITCH_CLAUSE)||(LA84_0 >= THIS && LA84_0 <= UIDENTIFIER)||(LA84_0 >= VALUE_MODIFIER && LA84_0 <= WHILE_CLAUSE)) ) {
                    alt84=1;
                }


                switch (alt84) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:924:9: declarationOrStatement
            	    {
            	    pushFollow(FOLLOW_declarationOrStatement_in_block6087);
            	    declarationOrStatement135=declarationOrStatement();

            	    state._fsp--;
            	    if (state.failed) return block;

            	    if ( state.backtracking==0 ) { if (declarationOrStatement135!=null)
            	                  block.addStatement(declarationOrStatement135); }

            	    }
            	    break;

            	default :
            	    break loop84;
                }
            } while (true);


            RBRACE136=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_block6114); if (state.failed) return block;

            if ( state.backtracking==0 ) { block.setEndToken(RBRACE136); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "block"



    // $ANTLR start "interfaceBody"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:936:1: interfaceBody returns [InterfaceBody interfaceBody] : LBRACE ( declarationOrStatement )* RBRACE ;
    public InterfaceBody interfaceBody() throws RecognitionException {
        InterfaceBody interfaceBody = null;


        Token LBRACE137=null;
        Token RBRACE139=null;
        Statement declarationOrStatement138 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:937:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:937:7: LBRACE ( declarationOrStatement )* RBRACE
            {
            LBRACE137=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_interfaceBody6147); if (state.failed) return interfaceBody;

            if ( state.backtracking==0 ) { interfaceBody = new InterfaceBody(LBRACE137); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:939:7: ( declarationOrStatement )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==ALIAS||(LA85_0 >= ASSERT && LA85_0 <= ASSIGN)||(LA85_0 >= BACKTICK && LA85_0 <= BREAK)||(LA85_0 >= CHAR_LITERAL && LA85_0 <= CLASS_DEFINITION)||LA85_0==COMPILER_ANNOTATION||LA85_0==CONTINUE||(LA85_0 >= DECREMENT_OP && LA85_0 <= DIFFERENCE_OP)||LA85_0==DYNAMIC||(LA85_0 >= FLOAT_LITERAL && LA85_0 <= FUNCTION_MODIFIER)||(LA85_0 >= IF_CLAUSE && LA85_0 <= INTERFACE_DEFINITION)||LA85_0==IN_OP||(LA85_0 >= LBRACE && LA85_0 <= LIDENTIFIER)||LA85_0==LPAREN||LA85_0==MODULE||(LA85_0 >= NATURAL_LITERAL && LA85_0 <= NEW)||(LA85_0 >= NOT_OP && LA85_0 <= OBJECT_DEFINITION)||(LA85_0 >= OUT && LA85_0 <= PACKAGE)||LA85_0==PRODUCT_OP||LA85_0==RETURN||(LA85_0 >= SEMICOLON && LA85_0 <= SMALLER_OP)||LA85_0==STRING_LITERAL||LA85_0==STRING_START||(LA85_0 >= SUM_OP && LA85_0 <= SWITCH_CLAUSE)||(LA85_0 >= THIS && LA85_0 <= UIDENTIFIER)||(LA85_0 >= VALUE_MODIFIER && LA85_0 <= WHILE_CLAUSE)) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:940:9: declarationOrStatement
            	    {
            	    pushFollow(FOLLOW_declarationOrStatement_in_interfaceBody6174);
            	    declarationOrStatement138=declarationOrStatement();

            	    state._fsp--;
            	    if (state.failed) return interfaceBody;

            	    if ( state.backtracking==0 ) { if (declarationOrStatement138!=null)
            	                  interfaceBody.addStatement(declarationOrStatement138); }

            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);


            RBRACE139=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_interfaceBody6201); if (state.failed) return interfaceBody;

            if ( state.backtracking==0 ) { interfaceBody.setEndToken(RBRACE139); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return interfaceBody;
    }
    // $ANTLR end "interfaceBody"



    // $ANTLR start "classBody"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:948:1: classBody returns [ClassBody classBody] : LBRACE ( declarationOrStatement )* RBRACE ;
    public ClassBody classBody() throws RecognitionException {
        ClassBody classBody = null;


        Token LBRACE140=null;
        Token RBRACE142=null;
        Statement declarationOrStatement141 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:949:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:949:7: LBRACE ( declarationOrStatement )* RBRACE
            {
            LBRACE140=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_classBody6230); if (state.failed) return classBody;

            if ( state.backtracking==0 ) { classBody = new ClassBody(LBRACE140); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:951:7: ( declarationOrStatement )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==ALIAS||(LA86_0 >= ASSERT && LA86_0 <= ASSIGN)||(LA86_0 >= BACKTICK && LA86_0 <= BREAK)||(LA86_0 >= CHAR_LITERAL && LA86_0 <= CLASS_DEFINITION)||LA86_0==COMPILER_ANNOTATION||LA86_0==CONTINUE||(LA86_0 >= DECREMENT_OP && LA86_0 <= DIFFERENCE_OP)||LA86_0==DYNAMIC||(LA86_0 >= FLOAT_LITERAL && LA86_0 <= FUNCTION_MODIFIER)||(LA86_0 >= IF_CLAUSE && LA86_0 <= INTERFACE_DEFINITION)||LA86_0==IN_OP||(LA86_0 >= LBRACE && LA86_0 <= LIDENTIFIER)||LA86_0==LPAREN||LA86_0==MODULE||(LA86_0 >= NATURAL_LITERAL && LA86_0 <= NEW)||(LA86_0 >= NOT_OP && LA86_0 <= OBJECT_DEFINITION)||(LA86_0 >= OUT && LA86_0 <= PACKAGE)||LA86_0==PRODUCT_OP||LA86_0==RETURN||(LA86_0 >= SEMICOLON && LA86_0 <= SMALLER_OP)||LA86_0==STRING_LITERAL||LA86_0==STRING_START||(LA86_0 >= SUM_OP && LA86_0 <= SWITCH_CLAUSE)||(LA86_0 >= THIS && LA86_0 <= UIDENTIFIER)||(LA86_0 >= VALUE_MODIFIER && LA86_0 <= WHILE_CLAUSE)) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:952:9: declarationOrStatement
            	    {
            	    pushFollow(FOLLOW_declarationOrStatement_in_classBody6256);
            	    declarationOrStatement141=declarationOrStatement();

            	    state._fsp--;
            	    if (state.failed) return classBody;

            	    if ( state.backtracking==0 ) { if (declarationOrStatement141!=null)
            	                  classBody.addStatement(declarationOrStatement141); }

            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);


            RBRACE142=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_classBody6283); if (state.failed) return classBody;

            if ( state.backtracking==0 ) { classBody.setEndToken(RBRACE142); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return classBody;
    }
    // $ANTLR end "classBody"



    // $ANTLR start "extendedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:960:1: extendedType returns [ExtendedType extendedType] : EXTENDS (ci= classInstantiation )? ;
    public ExtendedType extendedType() throws RecognitionException {
        ExtendedType extendedType = null;


        Token EXTENDS143=null;
        PsiCompatibleCeylonParser.classInstantiation_return ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:961:5: ( EXTENDS (ci= classInstantiation )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:961:7: EXTENDS (ci= classInstantiation )?
            {
            EXTENDS143=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_extendedType6312); if (state.failed) return extendedType;

            if ( state.backtracking==0 ) { extendedType = new ExtendedType(EXTENDS143); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:963:7: (ci= classInstantiation )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==PACKAGE||LA87_0==SUPER||LA87_0==UIDENTIFIER) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:964:9: ci= classInstantiation
                    {
                    pushFollow(FOLLOW_classInstantiation_in_extendedType6342);
                    ci=classInstantiation();

                    state._fsp--;
                    if (state.failed) return extendedType;

                    if ( state.backtracking==0 ) { extendedType.setType((ci!=null?ci.type:null));
                              extendedType.setInvocationExpression((ci!=null?ci.invocationExpression:null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return extendedType;
    }
    // $ANTLR end "extendedType"



    // $ANTLR start "classSpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:970:1: classSpecifier returns [ClassSpecifier classSpecifier] : ( COMPUTE | SPECIFY ) (ci= classInstantiation )? ;
    public ClassSpecifier classSpecifier() throws RecognitionException {
        ClassSpecifier classSpecifier = null;


        Token COMPUTE144=null;
        Token SPECIFY145=null;
        PsiCompatibleCeylonParser.classInstantiation_return ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:971:5: ( ( COMPUTE | SPECIFY ) (ci= classInstantiation )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:971:7: ( COMPUTE | SPECIFY ) (ci= classInstantiation )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:971:7: ( COMPUTE | SPECIFY )
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==COMPUTE) ) {
                alt88=1;
            }
            else if ( (LA88_0==SPECIFY) ) {
                alt88=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return classSpecifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;

            }
            switch (alt88) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:972:9: COMPUTE
                    {
                    COMPUTE144=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_classSpecifier6392); if (state.failed) return classSpecifier;

                    if ( state.backtracking==0 ) { classSpecifier = new ClassSpecifier(COMPUTE144); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:975:9: SPECIFY
                    {
                    SPECIFY145=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_classSpecifier6421); if (state.failed) return classSpecifier;

                    if ( state.backtracking==0 ) { classSpecifier = new ClassSpecifier(SPECIFY145); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:978:7: (ci= classInstantiation )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==PACKAGE||LA89_0==SUPER||LA89_0==UIDENTIFIER) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:979:9: ci= classInstantiation
                    {
                    pushFollow(FOLLOW_classInstantiation_in_classSpecifier6460);
                    ci=classInstantiation();

                    state._fsp--;
                    if (state.failed) return classSpecifier;

                    if ( state.backtracking==0 ) { classSpecifier.setType((ci!=null?ci.type:null));
                              classSpecifier.setInvocationExpression((ci!=null?ci.invocationExpression:null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return classSpecifier;
    }
    // $ANTLR end "classSpecifier"


    public static class packageQualifiedClass_return extends ParserRuleReturnScope {
        public SimpleType type;
        public ExtendedTypeExpression expression;
    };


    // $ANTLR start "packageQualifiedClass"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:985:1: packageQualifiedClass returns [SimpleType type, ExtendedTypeExpression expression] : PACKAGE (m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )? )? ;
    public PsiCompatibleCeylonParser.packageQualifiedClass_return packageQualifiedClass() throws RecognitionException {
        PsiCompatibleCeylonParser.packageQualifiedClass_return retval = new PsiCompatibleCeylonParser.packageQualifiedClass_return();
        retval.start = input.LT(1);


        Token m1=null;
        Token m2=null;
        Token PACKAGE146=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return t1 =null;

        PsiCompatibleCeylonParser.typeNameWithArguments_return t2 =null;


         BaseType bt = null;
                    QualifiedType qt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:988:5: ( PACKAGE (m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )? )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:988:7: PACKAGE (m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )? )?
            {
            PACKAGE146=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_packageQualifiedClass6509); if (state.failed) return retval;

            if ( state.backtracking==0 ) { bt = new BaseType(PACKAGE146);
                    bt.setPackageQualified(true);
                    retval.type =bt; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:992:7: (m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )? )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==MEMBER_OP) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:993:9: m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )?
                    {
                    m1=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_packageQualifiedClass6537); if (state.failed) return retval;

                    if ( state.backtracking==0 ) { bt.setEndToken(m1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:995:9: (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )?
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( (LA91_0==UIDENTIFIER) ) {
                        alt91=1;
                    }
                    switch (alt91) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:996:11: t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )?
                            {
                            pushFollow(FOLLOW_typeNameWithArguments_in_packageQualifiedClass6571);
                            t1=typeNameWithArguments();

                            state._fsp--;
                            if (state.failed) return retval;

                            if ( state.backtracking==0 ) { if ((t1!=null?t1.identifier:null)!=null) {
                                          bt.setEndToken(null);
                                          bt.setIdentifier((t1!=null?t1.identifier:null));
                                        }
                                        if ((t1!=null?t1.typeArgumentList:null)!=null)
                                            bt.setTypeArgumentList((t1!=null?t1.typeArgumentList:null));
                                        retval.expression = new ExtendedTypeExpression(null);
                                        retval.expression.setExtendedType(retval.type); }

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1005:11: (m2= MEMBER_OP t2= typeNameWithArguments )?
                            int alt90=2;
                            int LA90_0 = input.LA(1);

                            if ( (LA90_0==MEMBER_OP) ) {
                                alt90=1;
                            }
                            switch (alt90) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1006:13: m2= MEMBER_OP t2= typeNameWithArguments
                                    {
                                    m2=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_packageQualifiedClass6612); if (state.failed) return retval;

                                    if ( state.backtracking==0 ) { qt = new QualifiedType(null);
                                                  qt.setOuterType(retval.type);
                                                  qt.setEndToken(m2); 
                                                  retval.type =qt; }

                                    pushFollow(FOLLOW_typeNameWithArguments_in_packageQualifiedClass6642);
                                    t2=typeNameWithArguments();

                                    state._fsp--;
                                    if (state.failed) return retval;

                                    if ( state.backtracking==0 ) { if ((t2!=null?t2.identifier:null)!=null) {
                                                    qt.setEndToken(null);
                                                    qt.setIdentifier((t2!=null?t2.identifier:null));
                                                  }
                                                  if ((t2!=null?t2.typeArgumentList:null)!=null)
                                                    qt.setTypeArgumentList((t2!=null?t2.typeArgumentList:null));
                                                  retval.expression = new ExtendedTypeExpression(null);
                                                  retval.expression.setExtendedType(retval.type); }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "packageQualifiedClass"


    public static class unqualifiedClass_return extends ParserRuleReturnScope {
        public SimpleType type;
        public ExtendedTypeExpression expression;
    };


    // $ANTLR start "unqualifiedClass"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1025:1: unqualifiedClass returns [SimpleType type, ExtendedTypeExpression expression] : t0= typeNameWithArguments (m3= MEMBER_OP (t3= typeNameWithArguments )? )? ;
    public PsiCompatibleCeylonParser.unqualifiedClass_return unqualifiedClass() throws RecognitionException {
        PsiCompatibleCeylonParser.unqualifiedClass_return retval = new PsiCompatibleCeylonParser.unqualifiedClass_return();
        retval.start = input.LT(1);


        Token m3=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return t0 =null;

        PsiCompatibleCeylonParser.typeNameWithArguments_return t3 =null;


         BaseType bt = null;
                    QualifiedType qt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1028:5: (t0= typeNameWithArguments (m3= MEMBER_OP (t3= typeNameWithArguments )? )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1028:7: t0= typeNameWithArguments (m3= MEMBER_OP (t3= typeNameWithArguments )? )?
            {
            pushFollow(FOLLOW_typeNameWithArguments_in_unqualifiedClass6720);
            t0=typeNameWithArguments();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { bt = new BaseType(null);
                    bt.setIdentifier((t0!=null?t0.identifier:null));
                    if ((t0!=null?t0.typeArgumentList:null)!=null)
                        bt.setTypeArgumentList((t0!=null?t0.typeArgumentList:null));
                    retval.type =bt; 
                    retval.expression = new ExtendedTypeExpression(null);
                    retval.expression.setExtendedType(retval.type); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1036:7: (m3= MEMBER_OP (t3= typeNameWithArguments )? )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==MEMBER_OP) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1037:9: m3= MEMBER_OP (t3= typeNameWithArguments )?
                    {
                    m3=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_unqualifiedClass6749); if (state.failed) return retval;

                    if ( state.backtracking==0 ) { qt = new QualifiedType(null);
                              qt.setOuterType(retval.type);
                              qt.setEndToken(m3); 
                              retval.type =qt; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1042:9: (t3= typeNameWithArguments )?
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( (LA93_0==UIDENTIFIER) ) {
                        alt93=1;
                    }
                    switch (alt93) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1043:11: t3= typeNameWithArguments
                            {
                            pushFollow(FOLLOW_typeNameWithArguments_in_unqualifiedClass6783);
                            t3=typeNameWithArguments();

                            state._fsp--;
                            if (state.failed) return retval;

                            if ( state.backtracking==0 ) { if ((t3!=null?t3.identifier:null)!=null) {
                                          qt.setEndToken(null);
                                          qt.setIdentifier((t3!=null?t3.identifier:null));
                                        }
                                        if ((t3!=null?t3.typeArgumentList:null)!=null)
                                            qt.setTypeArgumentList((t3!=null?t3.typeArgumentList:null));
                                        retval.expression = new ExtendedTypeExpression(null);
                                        retval.expression.setExtendedType(retval.type); }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "unqualifiedClass"


    public static class superQualifiedClass_return extends ParserRuleReturnScope {
        public SimpleType type;
        public ExtendedTypeExpression expression;
    };


    // $ANTLR start "superQualifiedClass"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1056:1: superQualifiedClass returns [SimpleType type, ExtendedTypeExpression expression] : SUPER m4= MEMBER_OP (t4= typeNameWithArguments )? ;
    public PsiCompatibleCeylonParser.superQualifiedClass_return superQualifiedClass() throws RecognitionException {
        PsiCompatibleCeylonParser.superQualifiedClass_return retval = new PsiCompatibleCeylonParser.superQualifiedClass_return();
        retval.start = input.LT(1);


        Token m4=null;
        Token SUPER147=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return t4 =null;


         QualifiedType qt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1058:5: ( SUPER m4= MEMBER_OP (t4= typeNameWithArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1058:7: SUPER m4= MEMBER_OP (t4= typeNameWithArguments )?
            {
            SUPER147=(Token)match(input,SUPER,FOLLOW_SUPER_in_superQualifiedClass6845); if (state.failed) return retval;

            if ( state.backtracking==0 ) { SuperType st = new SuperType(SUPER147); 
                    qt = new QualifiedType(null); 
                    qt.setOuterType(st); 
                    retval.type =qt; }

            m4=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_superQualifiedClass6864); if (state.failed) return retval;

            if ( state.backtracking==0 ) { qt.setEndToken(m4); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1065:7: (t4= typeNameWithArguments )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==UIDENTIFIER) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1066:9: t4= typeNameWithArguments
                    {
                    pushFollow(FOLLOW_typeNameWithArguments_in_superQualifiedClass6892);
                    t4=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { if ((t4!=null?t4.identifier:null)!=null) {
                                qt.setEndToken(null);
                                qt.setIdentifier((t4!=null?t4.identifier:null));
                              }
                              if ((t4!=null?t4.typeArgumentList:null)!=null)
                                qt.setTypeArgumentList((t4!=null?t4.typeArgumentList:null));
                              retval.expression = new ExtendedTypeExpression(null);
                              retval.expression.setExtendedType(retval.type); }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "superQualifiedClass"


    public static class classInstantiation_return extends ParserRuleReturnScope {
        public SimpleType type;
        public InvocationExpression invocationExpression;
    };


    // $ANTLR start "classInstantiation"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1078:1: classInstantiation returns [SimpleType type, InvocationExpression invocationExpression] : (pq= packageQualifiedClass |uq= unqualifiedClass |sq= superQualifiedClass ) (pa= positionalArguments )? ;
    public PsiCompatibleCeylonParser.classInstantiation_return classInstantiation() throws RecognitionException {
        PsiCompatibleCeylonParser.classInstantiation_return retval = new PsiCompatibleCeylonParser.classInstantiation_return();
        retval.start = input.LT(1);


        PsiCompatibleCeylonParser.packageQualifiedClass_return pq =null;

        PsiCompatibleCeylonParser.unqualifiedClass_return uq =null;

        PsiCompatibleCeylonParser.superQualifiedClass_return sq =null;

        PositionalArgumentList pa =null;


         ExtendedTypeExpression ete = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1080:5: ( (pq= packageQualifiedClass |uq= unqualifiedClass |sq= superQualifiedClass ) (pa= positionalArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1080:7: (pq= packageQualifiedClass |uq= unqualifiedClass |sq= superQualifiedClass ) (pa= positionalArguments )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1080:7: (pq= packageQualifiedClass |uq= unqualifiedClass |sq= superQualifiedClass )
            int alt96=3;
            switch ( input.LA(1) ) {
            case PACKAGE:
                {
                alt96=1;
                }
                break;
            case UIDENTIFIER:
                {
                alt96=2;
                }
                break;
            case SUPER:
                {
                alt96=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;

            }

            switch (alt96) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1081:8: pq= packageQualifiedClass
                    {
                    pushFollow(FOLLOW_packageQualifiedClass_in_classInstantiation6952);
                    pq=packageQualifiedClass();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =(pq!=null?pq.type:null); ete=(pq!=null?pq.expression:null); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1084:8: uq= unqualifiedClass
                    {
                    pushFollow(FOLLOW_unqualifiedClass_in_classInstantiation6980);
                    uq=unqualifiedClass();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =(uq!=null?uq.type:null); ete=(uq!=null?uq.expression:null); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1087:8: sq= superQualifiedClass
                    {
                    pushFollow(FOLLOW_superQualifiedClass_in_classInstantiation7008);
                    sq=superQualifiedClass();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =(sq!=null?sq.type:null); ete=(sq!=null?sq.expression:null); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1090:7: (pa= positionalArguments )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==LPAREN) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1091:9: pa= positionalArguments
                    {
                    pushFollow(FOLLOW_positionalArguments_in_classInstantiation7044);
                    pa=positionalArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.invocationExpression = new InvocationExpression(null);
                              retval.invocationExpression.setPrimary(ete);
                              retval.invocationExpression.setPositionalArgumentList(pa); }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "classInstantiation"



    // $ANTLR start "satisfiedTypes"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1103:1: satisfiedTypes returns [SatisfiedTypes satisfiedTypes] : SATISFIES (t1= primaryType ) ( (i= INTERSECTION_OP | COMMA | UNION_OP ) (t2= primaryType ) )* ;
    public SatisfiedTypes satisfiedTypes() throws RecognitionException {
        SatisfiedTypes satisfiedTypes = null;


        Token i=null;
        Token SATISFIES148=null;
        StaticType t1 =null;

        StaticType t2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1104:5: ( SATISFIES (t1= primaryType ) ( (i= INTERSECTION_OP | COMMA | UNION_OP ) (t2= primaryType ) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1104:7: SATISFIES (t1= primaryType ) ( (i= INTERSECTION_OP | COMMA | UNION_OP ) (t2= primaryType ) )*
            {
            SATISFIES148=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiedTypes7094); if (state.failed) return satisfiedTypes;

            if ( state.backtracking==0 ) { satisfiedTypes = new SatisfiedTypes(SATISFIES148); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1106:7: (t1= primaryType )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1107:9: t1= primaryType
            {
            pushFollow(FOLLOW_primaryType_in_satisfiedTypes7124);
            t1=primaryType();

            state._fsp--;
            if (state.failed) return satisfiedTypes;

            if ( state.backtracking==0 ) { if (t1!=null) satisfiedTypes.addType(t1); }

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1110:7: ( (i= INTERSECTION_OP | COMMA | UNION_OP ) (t2= primaryType ) )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==COMMA||LA99_0==INTERSECTION_OP||LA99_0==UNION_OP) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1111:9: (i= INTERSECTION_OP | COMMA | UNION_OP ) (t2= primaryType )
            	    {
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1111:9: (i= INTERSECTION_OP | COMMA | UNION_OP )
            	    int alt98=3;
            	    switch ( input.LA(1) ) {
            	    case INTERSECTION_OP:
            	        {
            	        alt98=1;
            	        }
            	        break;
            	    case COMMA:
            	        {
            	        alt98=2;
            	        }
            	        break;
            	    case UNION_OP:
            	        {
            	        alt98=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return satisfiedTypes;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 98, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt98) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1112:11: i= INTERSECTION_OP
            	            {
            	            i=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_satisfiedTypes7176); if (state.failed) return satisfiedTypes;

            	            if ( state.backtracking==0 ) { satisfiedTypes.setEndToken(i); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1115:11: COMMA
            	            {
            	            match(input,COMMA,FOLLOW_COMMA_in_satisfiedTypes7211); if (state.failed) return satisfiedTypes;

            	            }
            	            break;
            	        case 3 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1115:17: UNION_OP
            	            {
            	            match(input,UNION_OP,FOLLOW_UNION_OP_in_satisfiedTypes7213); if (state.failed) return satisfiedTypes;

            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                          new MismatchedTokenException(INTERSECTION_OP, input)); }

            	            }
            	            break;

            	    }


            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1119:9: (t2= primaryType )
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1120:11: t2= primaryType
            	    {
            	    pushFollow(FOLLOW_primaryType_in_satisfiedTypes7259);
            	    t2=primaryType();

            	    state._fsp--;
            	    if (state.failed) return satisfiedTypes;

            	    if ( state.backtracking==0 ) { if (t2!=null) {
            	                    satisfiedTypes.addType(t2); 
            	                    satisfiedTypes.setEndToken(null); } }

            	    }


            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return satisfiedTypes;
    }
    // $ANTLR end "satisfiedTypes"



    // $ANTLR start "caseTypes"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1128:1: caseTypes returns [CaseTypes caseTypes] : CASE_TYPES ct1= caseType ( (u= UNION_OP | COMMA | INTERSECTION_OP ) (ct2= caseType ) )* ;
    public CaseTypes caseTypes() throws RecognitionException {
        CaseTypes caseTypes = null;


        Token u=null;
        Token CASE_TYPES149=null;
        PsiCompatibleCeylonParser.caseType_return ct1 =null;

        PsiCompatibleCeylonParser.caseType_return ct2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1129:5: ( CASE_TYPES ct1= caseType ( (u= UNION_OP | COMMA | INTERSECTION_OP ) (ct2= caseType ) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1129:7: CASE_TYPES ct1= caseType ( (u= UNION_OP | COMMA | INTERSECTION_OP ) (ct2= caseType ) )*
            {
            CASE_TYPES149=(Token)match(input,CASE_TYPES,FOLLOW_CASE_TYPES_in_caseTypes7311); if (state.failed) return caseTypes;

            if ( state.backtracking==0 ) { caseTypes = new CaseTypes(CASE_TYPES149); }

            pushFollow(FOLLOW_caseType_in_caseTypes7329);
            ct1=caseType();

            state._fsp--;
            if (state.failed) return caseTypes;

            if ( state.backtracking==0 ) { if ((ct1!=null?ct1.type:null)!=null) caseTypes.addType((ct1!=null?ct1.type:null)); 
                    if ((ct1!=null?ct1.instance:null)!=null) caseTypes.addBaseMemberExpression((ct1!=null?ct1.instance:null)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1134:7: ( (u= UNION_OP | COMMA | INTERSECTION_OP ) (ct2= caseType ) )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==COMMA||LA101_0==INTERSECTION_OP||LA101_0==UNION_OP) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1135:9: (u= UNION_OP | COMMA | INTERSECTION_OP ) (ct2= caseType )
            	    {
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1135:9: (u= UNION_OP | COMMA | INTERSECTION_OP )
            	    int alt100=3;
            	    switch ( input.LA(1) ) {
            	    case UNION_OP:
            	        {
            	        alt100=1;
            	        }
            	        break;
            	    case COMMA:
            	        {
            	        alt100=2;
            	        }
            	        break;
            	    case INTERSECTION_OP:
            	        {
            	        alt100=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return caseTypes;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 100, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt100) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1136:11: u= UNION_OP
            	            {
            	            u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_caseTypes7371); if (state.failed) return caseTypes;

            	            if ( state.backtracking==0 ) { caseTypes.setEndToken(u); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1139:11: COMMA
            	            {
            	            match(input,COMMA,FOLLOW_COMMA_in_caseTypes7407); if (state.failed) return caseTypes;

            	            }
            	            break;
            	        case 3 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1139:17: INTERSECTION_OP
            	            {
            	            match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_caseTypes7409); if (state.failed) return caseTypes;

            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                          new MismatchedTokenException(UNION_OP, input)); }

            	            }
            	            break;

            	    }


            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1143:9: (ct2= caseType )
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1144:11: ct2= caseType
            	    {
            	    pushFollow(FOLLOW_caseType_in_caseTypes7455);
            	    ct2=caseType();

            	    state._fsp--;
            	    if (state.failed) return caseTypes;

            	    if ( state.backtracking==0 ) { if ((ct2!=null?ct2.type:null)!=null) caseTypes.addType((ct2!=null?ct2.type:null)); 
            	                if ((ct2!=null?ct2.instance:null)!=null) caseTypes.addBaseMemberExpression((ct2!=null?ct2.instance:null)); 
            	                if ((ct2!=null?ct2.type:null)!=null||(ct2!=null?ct2.instance:null)!=null) caseTypes.setEndToken(null); }

            	    }


            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return caseTypes;
    }
    // $ANTLR end "caseTypes"


    public static class caseType_return extends ParserRuleReturnScope {
        public StaticType type;
        public BaseMemberExpression instance;
    };


    // $ANTLR start "caseType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1152:1: caseType returns [StaticType type, BaseMemberExpression instance] : (t= primaryType | memberName );
    public PsiCompatibleCeylonParser.caseType_return caseType() throws RecognitionException {
        PsiCompatibleCeylonParser.caseType_return retval = new PsiCompatibleCeylonParser.caseType_return();
        retval.start = input.LT(1);


        StaticType t =null;

        Identifier memberName150 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1153:5: (t= primaryType | memberName )
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( ((LA102_0 >= LBRACE && LA102_0 <= LBRACKET)||LA102_0==PACKAGE||LA102_0==SMALLER_OP||LA102_0==UIDENTIFIER) ) {
                alt102=1;
            }
            else if ( (LA102_0==LIDENTIFIER) ) {
                alt102=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 102, 0, input);

                throw nvae;

            }
            switch (alt102) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1153:7: t= primaryType
                    {
                    pushFollow(FOLLOW_primaryType_in_caseType7509);
                    t=primaryType();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =t;}

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1155:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_caseType7526);
                    memberName150=memberName();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.instance = new BaseMemberExpression(null);
                            retval.instance.setIdentifier(memberName150);
                            retval.instance.setTypeArguments( new InferredTypeArguments(null) ); }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "caseType"



    // $ANTLR start "abstractedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1163:1: abstractedType returns [AbstractedType abstractedType] : ABSTRACTED_TYPE primaryType ;
    public AbstractedType abstractedType() throws RecognitionException {
        AbstractedType abstractedType = null;


        Token ABSTRACTED_TYPE151=null;
        StaticType primaryType152 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1164:5: ( ABSTRACTED_TYPE primaryType )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1164:7: ABSTRACTED_TYPE primaryType
            {
            ABSTRACTED_TYPE151=(Token)match(input,ABSTRACTED_TYPE,FOLLOW_ABSTRACTED_TYPE_in_abstractedType7561); if (state.failed) return abstractedType;

            if ( state.backtracking==0 ) { abstractedType = new AbstractedType(ABSTRACTED_TYPE151); }

            pushFollow(FOLLOW_primaryType_in_abstractedType7577);
            primaryType152=primaryType();

            state._fsp--;
            if (state.failed) return abstractedType;

            if ( state.backtracking==0 ) { abstractedType.setType(primaryType152); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return abstractedType;
    }
    // $ANTLR end "abstractedType"



    // $ANTLR start "parameters"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1170:1: parameters returns [ParameterList parameterList] : LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN ;
    public ParameterList parameters() throws RecognitionException {
        ParameterList parameterList = null;


        Token c=null;
        Token LPAREN153=null;
        Token RPAREN154=null;
        Parameter ap1 =null;

        Parameter ap2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1171:5: ( LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1171:7: LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN
            {
            LPAREN153=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parameters7606); if (state.failed) return parameterList;

            if ( state.backtracking==0 ) { parameterList =new ParameterList(LPAREN153); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1173:7: (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==ALIAS||(LA105_0 >= ASSERT && LA105_0 <= ASSIGN)||(LA105_0 >= BACKTICK && LA105_0 <= BREAK)||(LA105_0 >= CHAR_LITERAL && LA105_0 <= CLASS_DEFINITION)||LA105_0==COMPILER_ANNOTATION||LA105_0==CONTINUE||(LA105_0 >= DECREMENT_OP && LA105_0 <= DIFFERENCE_OP)||LA105_0==DYNAMIC||(LA105_0 >= FLOAT_LITERAL && LA105_0 <= FUNCTION_MODIFIER)||(LA105_0 >= IF_CLAUSE && LA105_0 <= INTERFACE_DEFINITION)||LA105_0==IN_OP||(LA105_0 >= LBRACE && LA105_0 <= LIDENTIFIER)||LA105_0==LPAREN||LA105_0==MODULE||(LA105_0 >= NATURAL_LITERAL && LA105_0 <= NEW)||(LA105_0 >= NOT_OP && LA105_0 <= OBJECT_DEFINITION)||(LA105_0 >= OUT && LA105_0 <= PACKAGE)||LA105_0==PRODUCT_OP||LA105_0==RETURN||(LA105_0 >= SEMICOLON && LA105_0 <= SMALLER_OP)||LA105_0==STRING_LITERAL||LA105_0==STRING_START||(LA105_0 >= SUM_OP && LA105_0 <= SWITCH_CLAUSE)||(LA105_0 >= THIS && LA105_0 <= UIDENTIFIER)||(LA105_0 >= VALUE_MODIFIER && LA105_0 <= WHILE_CLAUSE)) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1174:9: ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )*
                    {
                    pushFollow(FOLLOW_parameterDeclarationOrRef_in_parameters7634);
                    ap1=parameterDeclarationOrRef();

                    state._fsp--;
                    if (state.failed) return parameterList;

                    if ( state.backtracking==0 ) { if (ap1!=null)
                                  parameterList.addParameter(ap1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1177:9: (c= COMMA (ap2= parameterDeclarationOrRef |) )*
                    loop104:
                    do {
                        int alt104=2;
                        int LA104_0 = input.LA(1);

                        if ( (LA104_0==COMMA) ) {
                            alt104=1;
                        }


                        switch (alt104) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1178:11: c= COMMA (ap2= parameterDeclarationOrRef |)
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_parameters7669); if (state.failed) return parameterList;

                    	    if ( state.backtracking==0 ) { parameterList.setEndToken(c); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1180:11: (ap2= parameterDeclarationOrRef |)
                    	    int alt103=2;
                    	    int LA103_0 = input.LA(1);

                    	    if ( (LA103_0==ALIAS||(LA103_0 >= ASSERT && LA103_0 <= ASSIGN)||(LA103_0 >= BACKTICK && LA103_0 <= BREAK)||(LA103_0 >= CHAR_LITERAL && LA103_0 <= CLASS_DEFINITION)||LA103_0==COMPILER_ANNOTATION||LA103_0==CONTINUE||(LA103_0 >= DECREMENT_OP && LA103_0 <= DIFFERENCE_OP)||LA103_0==DYNAMIC||(LA103_0 >= FLOAT_LITERAL && LA103_0 <= FUNCTION_MODIFIER)||(LA103_0 >= IF_CLAUSE && LA103_0 <= INTERFACE_DEFINITION)||LA103_0==IN_OP||(LA103_0 >= LBRACE && LA103_0 <= LIDENTIFIER)||LA103_0==LPAREN||LA103_0==MODULE||(LA103_0 >= NATURAL_LITERAL && LA103_0 <= NEW)||(LA103_0 >= NOT_OP && LA103_0 <= OBJECT_DEFINITION)||(LA103_0 >= OUT && LA103_0 <= PACKAGE)||LA103_0==PRODUCT_OP||LA103_0==RETURN||(LA103_0 >= SEMICOLON && LA103_0 <= SMALLER_OP)||LA103_0==STRING_LITERAL||LA103_0==STRING_START||(LA103_0 >= SUM_OP && LA103_0 <= SWITCH_CLAUSE)||(LA103_0 >= THIS && LA103_0 <= UIDENTIFIER)||(LA103_0 >= VALUE_MODIFIER && LA103_0 <= WHILE_CLAUSE)) ) {
                    	        alt103=1;
                    	    }
                    	    else if ( (LA103_0==COMMA||LA103_0==RPAREN) ) {
                    	        alt103=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return parameterList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 103, 0, input);

                    	        throw nvae;

                    	    }
                    	    switch (alt103) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1181:13: ap2= parameterDeclarationOrRef
                    	            {
                    	            pushFollow(FOLLOW_parameterDeclarationOrRef_in_parameters7709);
                    	            ap2=parameterDeclarationOrRef();

                    	            state._fsp--;
                    	            if (state.failed) return parameterList;

                    	            if ( state.backtracking==0 ) { if (ap2!=null) {
                    	                              parameterList.addParameter(ap2); 
                    	                              parameterList.setEndToken(null); } }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1186:13: 
                    	            {
                    	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                    	                            new MismatchedTokenException(UIDENTIFIER, input)); }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop104;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN154=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parameters7789); if (state.failed) return parameterList;

            if ( state.backtracking==0 ) { parameterList.setEndToken(RPAREN154); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameterList;
    }
    // $ANTLR end "parameters"



    // $ANTLR start "parameter"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1195:1: parameter returns [ParameterDeclaration parameter] : compilerAnnotations annotations parameterDeclaration ;
    public ParameterDeclaration parameter() throws RecognitionException {
        ParameterDeclaration parameter = null;


        TypedDeclaration parameterDeclaration155 =null;

        List<CompilerAnnotation> compilerAnnotations156 =null;

        AnnotationList annotations157 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1196:5: ( compilerAnnotations annotations parameterDeclaration )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1196:7: compilerAnnotations annotations parameterDeclaration
            {
            pushFollow(FOLLOW_compilerAnnotations_in_parameter7818);
            compilerAnnotations156=compilerAnnotations();

            state._fsp--;
            if (state.failed) return parameter;

            pushFollow(FOLLOW_annotations_in_parameter7826);
            annotations157=annotations();

            state._fsp--;
            if (state.failed) return parameter;

            pushFollow(FOLLOW_parameterDeclaration_in_parameter7834);
            parameterDeclaration155=parameterDeclaration();

            state._fsp--;
            if (state.failed) return parameter;

            if ( state.backtracking==0 ) { TypedDeclaration d = parameterDeclaration155;
                    d.getCompilerAnnotations().addAll(compilerAnnotations156);
                    d.setAnnotationList(annotations157);
                    if (d instanceof AttributeDeclaration) {
                        ValueParameterDeclaration vp = new ValueParameterDeclaration(null);
                        vp.setTypedDeclaration(d);
                        parameter = vp;
                    }
                    else if (d instanceof MethodDeclaration) {
                        FunctionalParameterDeclaration fp = new FunctionalParameterDeclaration(null);
                        fp.setTypedDeclaration(d);
                        parameter = fp;
                    }
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameter"



    // $ANTLR start "parameterDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1215:1: parameterDeclaration returns [TypedDeclaration declaration] : ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( parameters )+ ( functionSpecifier )? ) ;
    public TypedDeclaration parameterDeclaration() throws RecognitionException {
        TypedDeclaration declaration = null;


        Token VOID_MODIFIER159=null;
        Token FUNCTION_MODIFIER160=null;
        Token DYNAMIC161=null;
        Token VALUE_MODIFIER162=null;
        Type variadicType158 =null;

        Identifier memberName163 =null;

        SpecifierExpression specifier164 =null;

        ParameterList parameters165 =null;

        SpecifierExpression functionSpecifier166 =null;


         AttributeDeclaration a = new AttributeDeclaration(null); 
                    MethodDeclaration m = new MethodDeclaration(null);
                    declaration = a; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1219:5: ( ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( parameters )+ ( functionSpecifier )? ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1219:7: ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( parameters )+ ( functionSpecifier )? )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1219:7: ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER )
            int alt106=5;
            switch ( input.LA(1) ) {
            case LBRACE:
            case LBRACKET:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt106=1;
                }
                break;
            case VOID_MODIFIER:
                {
                alt106=2;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt106=3;
                }
                break;
            case DYNAMIC:
                {
                alt106=4;
                }
                break;
            case VALUE_MODIFIER:
                {
                alt106=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;

            }

            switch (alt106) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1220:9: variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_parameterDeclaration7887);
                    variadicType158=variadicType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { a.setType(variadicType158);
                              m.setType(variadicType158); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1223:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER159=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_parameterDeclaration7907); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { m.setType(new VoidModifier(VOID_MODIFIER159));
                              declaration =m; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1226:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER160=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_parameterDeclaration7927); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { m.setType(new FunctionModifier(FUNCTION_MODIFIER160));
                              declaration =m; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1229:9: DYNAMIC
                    {
                    DYNAMIC161=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_parameterDeclaration7947); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { a.setType(new DynamicModifier(DYNAMIC161));
                              m.setType(new DynamicModifier(DYNAMIC161)); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1232:9: VALUE_MODIFIER
                    {
                    VALUE_MODIFIER162=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_parameterDeclaration7967); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { a.setType(new ValueModifier(VALUE_MODIFIER162)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberName_in_parameterDeclaration7993);
            memberName163=memberName();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { a.setIdentifier(memberName163);
                    m.setIdentifier(memberName163); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1238:7: ( ( specifier )? | ( parameters )+ ( functionSpecifier )? )
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==COMMA||LA110_0==RPAREN||LA110_0==SPECIFY) ) {
                alt110=1;
            }
            else if ( (LA110_0==LPAREN) ) {
                alt110=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;

            }
            switch (alt110) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1239:9: ( specifier )?
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1239:9: ( specifier )?
                    int alt107=2;
                    int LA107_0 = input.LA(1);

                    if ( (LA107_0==SPECIFY) ) {
                        alt107=1;
                    }
                    switch (alt107) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1240:11: specifier
                            {
                            pushFollow(FOLLOW_specifier_in_parameterDeclaration8031);
                            specifier164=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { a.setSpecifierOrInitializerExpression(specifier164); }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1244:9: ( parameters )+ ( functionSpecifier )?
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1244:9: ( parameters )+
                    int cnt108=0;
                    loop108:
                    do {
                        int alt108=2;
                        int LA108_0 = input.LA(1);

                        if ( (LA108_0==LPAREN) ) {
                            alt108=1;
                        }


                        switch (alt108) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1245:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_parameterDeclaration8084);
                    	    parameters165=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { m.addParameterList(parameters165);
                    	                declaration =m; }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt108 >= 1 ) break loop108;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(108, input);
                                throw eee;
                        }
                        cnt108++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1249:9: ( functionSpecifier )?
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==COMPUTE||LA109_0==SPECIFY) ) {
                        alt109=1;
                    }
                    switch (alt109) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1250:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_parameterDeclaration8129);
                            functionSpecifier166=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { m.setSpecifierExpression(functionSpecifier166); }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "parameterDeclaration"



    // $ANTLR start "parameterRef"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1256:1: parameterRef returns [InitializerParameter parameter] : memberName ( specifier )? ;
    public InitializerParameter parameterRef() throws RecognitionException {
        InitializerParameter parameter = null;


        Identifier memberName167 =null;

        SpecifierExpression specifier168 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1257:5: ( memberName ( specifier )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1257:7: memberName ( specifier )?
            {
            pushFollow(FOLLOW_memberName_in_parameterRef8181);
            memberName167=memberName();

            state._fsp--;
            if (state.failed) return parameter;

            if ( state.backtracking==0 ) { parameter = new InitializerParameter(null);
                    parameter.setIdentifier(memberName167); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1260:7: ( specifier )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==SPECIFY) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1261:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_parameterRef8207);
                    specifier168=specifier();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter.setSpecifierExpression(specifier168); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameterRef"



    // $ANTLR start "parameterDeclarationOrRef"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1266:1: parameterDeclarationOrRef returns [Parameter parameter] : (r= parameterRef |p= parameter );
    public Parameter parameterDeclarationOrRef() throws RecognitionException {
        Parameter parameter = null;


        InitializerParameter r =null;

        ParameterDeclaration p =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1267:5: (r= parameterRef |p= parameter )
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==LIDENTIFIER) ) {
                int LA112_1 = input.LA(2);

                if ( (LA112_1==COMMA||LA112_1==RPAREN||LA112_1==SPECIFY) ) {
                    alt112=1;
                }
                else if ( (LA112_1==DYNAMIC||LA112_1==FUNCTION_MODIFIER||(LA112_1 >= LBRACE && LA112_1 <= LBRACKET)||LA112_1==LIDENTIFIER||LA112_1==LPAREN||LA112_1==PACKAGE||LA112_1==SMALLER_OP||LA112_1==UIDENTIFIER||LA112_1==VALUE_MODIFIER||LA112_1==VOID_MODIFIER) ) {
                    alt112=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return parameter;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 112, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA112_0==COMPILER_ANNOTATION||LA112_0==DYNAMIC||LA112_0==FUNCTION_MODIFIER||(LA112_0 >= LBRACE && LA112_0 <= LBRACKET)||LA112_0==PACKAGE||LA112_0==SMALLER_OP||LA112_0==STRING_LITERAL||LA112_0==UIDENTIFIER||(LA112_0 >= VALUE_MODIFIER && LA112_0 <= VOID_MODIFIER)) ) {
                alt112=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return parameter;}
                NoViableAltException nvae =
                    new NoViableAltException("", 112, 0, input);

                throw nvae;

            }
            switch (alt112) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1268:7: r= parameterRef
                    {
                    pushFollow(FOLLOW_parameterRef_in_parameterDeclarationOrRef8255);
                    r=parameterRef();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter =r; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1271:7: p= parameter
                    {
                    pushFollow(FOLLOW_parameter_in_parameterDeclarationOrRef8280);
                    p=parameter();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter =p; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameterDeclarationOrRef"



    // $ANTLR start "typeParameters"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1275:1: typeParameters returns [TypeParameterList typeParameterList] : SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP ;
    public TypeParameterList typeParameters() throws RecognitionException {
        TypeParameterList typeParameterList = null;


        Token c=null;
        Token SMALLER_OP169=null;
        Token LARGER_OP170=null;
        TypeParameterDeclaration tp1 =null;

        TypeParameterDeclaration tp2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1276:5: ( SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1276:7: SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP
            {
            SMALLER_OP169=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeParameters8309); if (state.failed) return typeParameterList;

            if ( state.backtracking==0 ) { typeParameterList = new TypeParameterList(SMALLER_OP169); }

            pushFollow(FOLLOW_typeParameter_in_typeParameters8327);
            tp1=typeParameter();

            state._fsp--;
            if (state.failed) return typeParameterList;

            if ( state.backtracking==0 ) { if (tp1 instanceof TypeParameterDeclaration)
                        typeParameterList.addTypeParameterDeclaration(tp1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1281:7: (c= COMMA (tp2= typeParameter |) )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==COMMA) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1282:9: c= COMMA (tp2= typeParameter |)
            	    {
            	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_typeParameters8355); if (state.failed) return typeParameterList;

            	    if ( state.backtracking==0 ) { typeParameterList.setEndToken(c); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1284:9: (tp2= typeParameter |)
            	    int alt113=2;
            	    int LA113_0 = input.LA(1);

            	    if ( (LA113_0==ALIAS||(LA113_0 >= ASSERT && LA113_0 <= ASSIGN)||(LA113_0 >= BACKTICK && LA113_0 <= BREAK)||(LA113_0 >= CHAR_LITERAL && LA113_0 <= CLASS_DEFINITION)||LA113_0==COMPILER_ANNOTATION||LA113_0==CONTINUE||(LA113_0 >= DECREMENT_OP && LA113_0 <= DIFFERENCE_OP)||LA113_0==DYNAMIC||(LA113_0 >= FLOAT_LITERAL && LA113_0 <= FUNCTION_MODIFIER)||(LA113_0 >= IF_CLAUSE && LA113_0 <= INTERFACE_DEFINITION)||LA113_0==IN_OP||(LA113_0 >= LBRACE && LA113_0 <= LIDENTIFIER)||LA113_0==LPAREN||LA113_0==MODULE||(LA113_0 >= NATURAL_LITERAL && LA113_0 <= NEW)||(LA113_0 >= NOT_OP && LA113_0 <= OBJECT_DEFINITION)||(LA113_0 >= OUT && LA113_0 <= PACKAGE)||LA113_0==PRODUCT_OP||LA113_0==RETURN||(LA113_0 >= SEMICOLON && LA113_0 <= SMALLER_OP)||LA113_0==STRING_LITERAL||LA113_0==STRING_START||(LA113_0 >= SUM_OP && LA113_0 <= SWITCH_CLAUSE)||(LA113_0 >= THIS && LA113_0 <= UIDENTIFIER)||(LA113_0 >= VALUE_MODIFIER && LA113_0 <= WHILE_CLAUSE)) ) {
            	        alt113=1;
            	    }
            	    else if ( (LA113_0==COMMA||LA113_0==LARGER_OP) ) {
            	        alt113=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return typeParameterList;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 113, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt113) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1285:11: tp2= typeParameter
            	            {
            	            pushFollow(FOLLOW_typeParameter_in_typeParameters8389);
            	            tp2=typeParameter();

            	            state._fsp--;
            	            if (state.failed) return typeParameterList;

            	            if ( state.backtracking==0 ) { if (tp2 instanceof TypeParameterDeclaration)
            	                            typeParameterList.addTypeParameterDeclaration(tp2);
            	                        typeParameterList.setEndToken(null); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1289:11: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                            new MismatchedTokenException(UIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);


            LARGER_OP170=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeParameters8440); if (state.failed) return typeParameterList;

            if ( state.backtracking==0 ) { typeParameterList.setEndToken(LARGER_OP170); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeParameterList;
    }
    // $ANTLR end "typeParameters"



    // $ANTLR start "typeParameter"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1297:1: typeParameter returns [TypeParameterDeclaration typeParameter] : compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )? ;
    public TypeParameterDeclaration typeParameter() throws RecognitionException {
        TypeParameterDeclaration typeParameter = null;


        TypeVariance variance171 =null;

        Identifier typeNameDeclaration172 =null;

        TypeSpecifier typeDefault173 =null;

        List<CompilerAnnotation> compilerAnnotations174 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1298:5: ( compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1298:7: compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )?
            {
            if ( state.backtracking==0 ) { typeParameter = new TypeParameterDeclaration(null); }

            pushFollow(FOLLOW_compilerAnnotations_in_typeParameter8477);
            compilerAnnotations174=compilerAnnotations();

            state._fsp--;
            if (state.failed) return typeParameter;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1300:7: ( variance )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==IN_OP||LA115_0==OUT) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1301:9: variance
                    {
                    pushFollow(FOLLOW_variance_in_typeParameter8496);
                    variance171=variance();

                    state._fsp--;
                    if (state.failed) return typeParameter;

                    if ( state.backtracking==0 ) { typeParameter.setTypeVariance(variance171); }

                    }
                    break;

            }


            pushFollow(FOLLOW_typeNameDeclaration_in_typeParameter8526);
            typeNameDeclaration172=typeNameDeclaration();

            state._fsp--;
            if (state.failed) return typeParameter;

            if ( state.backtracking==0 ) { typeParameter.setIdentifier(typeNameDeclaration172); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1306:7: ( typeDefault )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==SPECIFY) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1307:9: typeDefault
                    {
                    pushFollow(FOLLOW_typeDefault_in_typeParameter8552);
                    typeDefault173=typeDefault();

                    state._fsp--;
                    if (state.failed) return typeParameter;

                    if ( state.backtracking==0 ) { typeParameter.setTypeSpecifier(typeDefault173); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { typeParameter.getCompilerAnnotations().addAll(compilerAnnotations174); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeParameter;
    }
    // $ANTLR end "typeParameter"



    // $ANTLR start "variance"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1313:1: variance returns [TypeVariance typeVariance] : ( IN_OP | OUT );
    public TypeVariance variance() throws RecognitionException {
        TypeVariance typeVariance = null;


        Token IN_OP175=null;
        Token OUT176=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1314:5: ( IN_OP | OUT )
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==IN_OP) ) {
                alt117=1;
            }
            else if ( (LA117_0==OUT) ) {
                alt117=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return typeVariance;}
                NoViableAltException nvae =
                    new NoViableAltException("", 117, 0, input);

                throw nvae;

            }
            switch (alt117) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1314:7: IN_OP
                    {
                    IN_OP175=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_variance8600); if (state.failed) return typeVariance;

                    if ( state.backtracking==0 ) { typeVariance = new TypeVariance(IN_OP175); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1316:7: OUT
                    {
                    OUT176=(Token)match(input,OUT,FOLLOW_OUT_in_variance8616); if (state.failed) return typeVariance;

                    if ( state.backtracking==0 ) { typeVariance = new TypeVariance(OUT176); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeVariance;
    }
    // $ANTLR end "variance"



    // $ANTLR start "typeConstraint"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1320:1: typeConstraint returns [TypeConstraint typeConstraint] : compilerAnnotations TYPE_CONSTRAINT ( typeNameDeclaration )? ( parameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )? ;
    public TypeConstraint typeConstraint() throws RecognitionException {
        TypeConstraint typeConstraint = null;


        Token TYPE_CONSTRAINT177=null;
        List<CompilerAnnotation> compilerAnnotations178 =null;

        Identifier typeNameDeclaration179 =null;

        ParameterList parameters180 =null;

        CaseTypes caseTypes181 =null;

        SatisfiedTypes satisfiedTypes182 =null;

        AbstractedType abstractedType183 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1321:5: ( compilerAnnotations TYPE_CONSTRAINT ( typeNameDeclaration )? ( parameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1321:7: compilerAnnotations TYPE_CONSTRAINT ( typeNameDeclaration )? ( parameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )?
            {
            pushFollow(FOLLOW_compilerAnnotations_in_typeConstraint8649);
            compilerAnnotations178=compilerAnnotations();

            state._fsp--;
            if (state.failed) return typeConstraint;

            TYPE_CONSTRAINT177=(Token)match(input,TYPE_CONSTRAINT,FOLLOW_TYPE_CONSTRAINT_in_typeConstraint8657); if (state.failed) return typeConstraint;

            if ( state.backtracking==0 ) { typeConstraint = new TypeConstraint(TYPE_CONSTRAINT177); 
                    typeConstraint.getCompilerAnnotations().addAll(compilerAnnotations178); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1325:7: ( typeNameDeclaration )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==LIDENTIFIER||LA118_0==UIDENTIFIER) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1326:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_typeConstraint8683);
                    typeNameDeclaration179=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setIdentifier(typeNameDeclaration179); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1329:7: ( parameters )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==LPAREN) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1330:9: parameters
                    {
                    pushFollow(FOLLOW_parameters_in_typeConstraint8721);
                    parameters180=parameters();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setParameterList(parameters180); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1333:7: ( caseTypes )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==CASE_TYPES) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1334:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_typeConstraint8758);
                    caseTypes181=caseTypes();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setCaseTypes(caseTypes181); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1338:7: ( satisfiedTypes )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==SATISFIES) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1339:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_typeConstraint8802);
                    satisfiedTypes182=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setSatisfiedTypes(satisfiedTypes182); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1342:7: ( abstractedType )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==ABSTRACTED_TYPE) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1343:9: abstractedType
                    {
                    pushFollow(FOLLOW_abstractedType_in_typeConstraint8840);
                    abstractedType183=abstractedType();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setAbstractedType(abstractedType183); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeConstraint;
    }
    // $ANTLR end "typeConstraint"



    // $ANTLR start "typeConstraints"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1348:1: typeConstraints returns [TypeConstraintList typeConstraintList] : ( typeConstraint )+ ;
    public TypeConstraintList typeConstraints() throws RecognitionException {
        TypeConstraintList typeConstraintList = null;


        TypeConstraint typeConstraint184 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1349:5: ( ( typeConstraint )+ )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1349:7: ( typeConstraint )+
            {
            if ( state.backtracking==0 ) { typeConstraintList =new TypeConstraintList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1350:7: ( typeConstraint )+
            int cnt123=0;
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==COMPILER_ANNOTATION||LA123_0==TYPE_CONSTRAINT) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1351:9: typeConstraint
            	    {
            	    pushFollow(FOLLOW_typeConstraint_in_typeConstraints8898);
            	    typeConstraint184=typeConstraint();

            	    state._fsp--;
            	    if (state.failed) return typeConstraintList;

            	    if ( state.backtracking==0 ) { if (typeConstraint184!=null)
            	                typeConstraintList.addTypeConstraint(typeConstraint184); }

            	    }
            	    break;

            	default :
            	    if ( cnt123 >= 1 ) break loop123;
            	    if (state.backtracking>0) {state.failed=true; return typeConstraintList;}
                        EarlyExitException eee =
                            new EarlyExitException(123, input);
                        throw eee;
                }
                cnt123++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeConstraintList;
    }
    // $ANTLR end "typeConstraints"



    // $ANTLR start "annotationListStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1357:1: annotationListStart : ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER | VOID_MODIFIER ) ;
    public void annotationListStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1358:5: ( ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER | VOID_MODIFIER ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1358:7: ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER | VOID_MODIFIER )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1358:7: ( stringLiteral | annotation )
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==STRING_LITERAL||LA124_0==VERBATIM_STRING) ) {
                alt124=1;
            }
            else if ( (LA124_0==LIDENTIFIER) ) {
                alt124=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;

            }
            switch (alt124) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1358:8: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotationListStart8935);
                    stringLiteral();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1358:22: annotation
                    {
                    pushFollow(FOLLOW_annotation_in_annotationListStart8937);
                    annotation();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            if ( input.LA(1)==FUNCTION_MODIFIER||input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER||input.LA(1)==VALUE_MODIFIER||input.LA(1)==VOID_MODIFIER ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotationListStart"



    // $ANTLR start "destructureStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1362:1: destructureStart : VALUE_MODIFIER compilerAnnotations ( LBRACKET | UIDENTIFIER | VOID_MODIFIER | VALUE_MODIFIER | FUNCTION_MODIFIER | LIDENTIFIER ENTRY_OP ) ;
    public void destructureStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1363:5: ( VALUE_MODIFIER compilerAnnotations ( LBRACKET | UIDENTIFIER | VOID_MODIFIER | VALUE_MODIFIER | FUNCTION_MODIFIER | LIDENTIFIER ENTRY_OP ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1363:7: VALUE_MODIFIER compilerAnnotations ( LBRACKET | UIDENTIFIER | VOID_MODIFIER | VALUE_MODIFIER | FUNCTION_MODIFIER | LIDENTIFIER ENTRY_OP )
            {
            match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_destructureStart8974); if (state.failed) return ;

            pushFollow(FOLLOW_compilerAnnotations_in_destructureStart8976);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1364:7: ( LBRACKET | UIDENTIFIER | VOID_MODIFIER | VALUE_MODIFIER | FUNCTION_MODIFIER | LIDENTIFIER ENTRY_OP )
            int alt125=6;
            switch ( input.LA(1) ) {
            case LBRACKET:
                {
                alt125=1;
                }
                break;
            case UIDENTIFIER:
                {
                alt125=2;
                }
                break;
            case VOID_MODIFIER:
                {
                alt125=3;
                }
                break;
            case VALUE_MODIFIER:
                {
                alt125=4;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt125=5;
                }
                break;
            case LIDENTIFIER:
                {
                alt125=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 125, 0, input);

                throw nvae;

            }

            switch (alt125) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1364:8: LBRACKET
                    {
                    match(input,LBRACKET,FOLLOW_LBRACKET_in_destructureStart8986); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1364:17: UIDENTIFIER
                    {
                    match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_destructureStart8988); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1364:29: VOID_MODIFIER
                    {
                    match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_destructureStart8990); if (state.failed) return ;

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1364:43: VALUE_MODIFIER
                    {
                    match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_destructureStart8992); if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1364:58: FUNCTION_MODIFIER
                    {
                    match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_destructureStart8994); if (state.failed) return ;

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1364:76: LIDENTIFIER ENTRY_OP
                    {
                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_destructureStart8996); if (state.failed) return ;

                    match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_destructureStart8998); if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "destructureStart"



    // $ANTLR start "declarationOrStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1367:1: declarationOrStatement returns [Statement statement] options {memoize=true; } : compilerAnnotations ( ( destructureStart )=> destructure | ( annotatedDeclarationStart )=>d1= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d2= declaration |s= statement ) ;
    public Statement declarationOrStatement() throws RecognitionException {
        Statement statement = null;

        int declarationOrStatement_StartIndex = input.index();

        Declaration d1 =null;

        Declaration d2 =null;

        Statement s =null;

        Destructure destructure185 =null;

        Assertion assertion186 =null;

        List<CompilerAnnotation> compilerAnnotations187 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return statement; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1369:5: ( compilerAnnotations ( ( destructureStart )=> destructure | ( annotatedDeclarationStart )=>d1= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d2= declaration |s= statement ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1369:7: compilerAnnotations ( ( destructureStart )=> destructure | ( annotatedDeclarationStart )=>d1= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d2= declaration |s= statement )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_declarationOrStatement9031);
            compilerAnnotations187=compilerAnnotations();

            state._fsp--;
            if (state.failed) return statement;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1370:7: ( ( destructureStart )=> destructure | ( annotatedDeclarationStart )=>d1= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d2= declaration |s= statement )
            int alt126=5;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==VALUE_MODIFIER) ) {
                int LA126_1 = input.LA(2);

                if ( (synpred11_Ceylon()) ) {
                    alt126=1;
                }
                else if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==STRING_LITERAL) ) {
                int LA126_2 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred13_Ceylon()) ) {
                    alt126=3;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else if ( (true) ) {
                    alt126=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==VERBATIM_STRING) ) {
                int LA126_3 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred13_Ceylon()) ) {
                    alt126=3;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else if ( (true) ) {
                    alt126=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==LIDENTIFIER) ) {
                int LA126_4 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred13_Ceylon()) ) {
                    alt126=3;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else if ( (true) ) {
                    alt126=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==CLASS_DEFINITION) ) {
                int LA126_5 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==INTERFACE_DEFINITION) ) {
                int LA126_6 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==DYNAMIC) ) {
                int LA126_7 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else if ( (true) ) {
                    alt126=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 7, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==ALIAS) ) {
                int LA126_8 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 8, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==OBJECT_DEFINITION) ) {
                int LA126_9 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else if ( (true) ) {
                    alt126=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 9, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==ASSIGN) ) {
                int LA126_10 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==VOID_MODIFIER) ) {
                int LA126_11 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 11, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==FUNCTION_MODIFIER) ) {
                int LA126_12 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 12, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==UIDENTIFIER) ) {
                int LA126_13 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else if ( (true) ) {
                    alt126=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 13, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==SMALLER_OP) ) {
                int LA126_14 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 14, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==PACKAGE) ) {
                int LA126_15 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else if ( (true) ) {
                    alt126=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 15, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==LBRACKET) ) {
                int LA126_16 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else if ( (true) ) {
                    alt126=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 16, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==LBRACE) ) {
                int LA126_17 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else if ( (true) ) {
                    alt126=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 17, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==NEW) ) {
                int LA126_18 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt126=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt126=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 18, input);

                    throw nvae;

                }
            }
            else if ( (LA126_0==ASSERT) && (synpred13_Ceylon())) {
                alt126=3;
            }
            else if ( ((LA126_0 >= BACKTICK && LA126_0 <= BREAK)||LA126_0==CHAR_LITERAL||LA126_0==CONTINUE||(LA126_0 >= DECREMENT_OP && LA126_0 <= DIFFERENCE_OP)||(LA126_0 >= FLOAT_LITERAL && LA126_0 <= FOR_CLAUSE)||LA126_0==IF_CLAUSE||LA126_0==INCREMENT_OP||LA126_0==LPAREN||LA126_0==NATURAL_LITERAL||LA126_0==NOT_OP||LA126_0==OUTER||LA126_0==RETURN||LA126_0==STRING_START||(LA126_0 >= SUM_OP && LA126_0 <= SWITCH_CLAUSE)||(LA126_0 >= THIS && LA126_0 <= TRY_CLAUSE)||LA126_0==WHILE_CLAUSE) ) {
                alt126=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 126, 0, input);

                throw nvae;

            }
            switch (alt126) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1371:9: ( destructureStart )=> destructure
                    {
                    pushFollow(FOLLOW_destructure_in_declarationOrStatement9055);
                    destructure185=destructure();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =destructure185; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1373:9: ( annotatedDeclarationStart )=>d1= declaration
                    {
                    pushFollow(FOLLOW_declaration_in_declarationOrStatement9083);
                    d1=declaration();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =d1; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1375:9: ( annotatedAssertionStart )=> assertion
                    {
                    pushFollow(FOLLOW_assertion_in_declarationOrStatement9109);
                    assertion186=assertion();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = assertion186; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1377:9: ( annotationListStart )=>d2= declaration
                    {
                    pushFollow(FOLLOW_declaration_in_declarationOrStatement9137);
                    d2=declaration();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =d2; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1379:9: s= statement
                    {
                    pushFollow(FOLLOW_statement_in_declarationOrStatement9159);
                    s=statement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =s; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { if (statement!=null)
                        statement.getCompilerAnnotations().addAll(compilerAnnotations187); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 68, declarationOrStatement_StartIndex); }

        }
        return statement;
    }
    // $ANTLR end "declarationOrStatement"



    // $ANTLR start "declaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1386:1: declaration returns [Declaration declaration] : annotations ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | constructor ) ;
    public Declaration declaration() throws RecognitionException {
        Declaration declaration = null;


        AnnotationList annotations188 =null;

        AnyClass classDeclaration189 =null;

        AnyInterface interfaceDeclaration190 =null;

        TypeAliasDeclaration aliasDeclaration191 =null;

        ObjectDefinition objectDeclaration192 =null;

        AttributeSetterDefinition setterDeclaration193 =null;

        AnyMethod voidOrInferredMethodDeclaration194 =null;

        AnyAttribute inferredAttributeDeclaration195 =null;

        TypedDeclaration typedMethodOrAttributeDeclaration196 =null;

        Constructor constructor197 =null;


         MissingDeclaration md = new MissingDeclaration(null); 
                    declaration = md; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1389:5: ( annotations ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | constructor ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1389:7: annotations ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | constructor )
            {
            pushFollow(FOLLOW_annotations_in_declaration9215);
            annotations188=annotations();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { md.setAnnotationList(annotations188); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1391:5: ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | constructor )
            int alt127=9;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==CLASS_DEFINITION) ) {
                alt127=1;
            }
            else if ( (LA127_0==INTERFACE_DEFINITION) && (synpred15_Ceylon())) {
                alt127=2;
            }
            else if ( (LA127_0==DYNAMIC) ) {
                int LA127_3 = input.LA(2);

                if ( (synpred15_Ceylon()) ) {
                    alt127=2;
                }
                else if ( (true) ) {
                    alt127=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 127, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA127_0==ALIAS) ) {
                alt127=3;
            }
            else if ( (LA127_0==OBJECT_DEFINITION) ) {
                alt127=4;
            }
            else if ( (LA127_0==ASSIGN) ) {
                alt127=5;
            }
            else if ( (LA127_0==FUNCTION_MODIFIER||LA127_0==VOID_MODIFIER) ) {
                alt127=6;
            }
            else if ( (LA127_0==VALUE_MODIFIER) ) {
                alt127=7;
            }
            else if ( ((LA127_0 >= LBRACE && LA127_0 <= LBRACKET)||LA127_0==PACKAGE||LA127_0==SMALLER_OP||LA127_0==UIDENTIFIER) ) {
                alt127=8;
            }
            else if ( (LA127_0==NEW) ) {
                alt127=9;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 127, 0, input);

                throw nvae;

            }
            switch (alt127) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1392:7: classDeclaration
                    {
                    pushFollow(FOLLOW_classDeclaration_in_declaration9238);
                    classDeclaration189=classDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =classDeclaration189; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1394:7: ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration
                    {
                    pushFollow(FOLLOW_interfaceDeclaration_in_declaration9264);
                    interfaceDeclaration190=interfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =interfaceDeclaration190; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1396:7: aliasDeclaration
                    {
                    pushFollow(FOLLOW_aliasDeclaration_in_declaration9280);
                    aliasDeclaration191=aliasDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =aliasDeclaration191; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1398:7: objectDeclaration
                    {
                    pushFollow(FOLLOW_objectDeclaration_in_declaration9296);
                    objectDeclaration192=objectDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =objectDeclaration192; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1400:7: setterDeclaration
                    {
                    pushFollow(FOLLOW_setterDeclaration_in_declaration9312);
                    setterDeclaration193=setterDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =setterDeclaration193; }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1402:7: voidOrInferredMethodDeclaration
                    {
                    pushFollow(FOLLOW_voidOrInferredMethodDeclaration_in_declaration9328);
                    voidOrInferredMethodDeclaration194=voidOrInferredMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =voidOrInferredMethodDeclaration194; }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1404:7: inferredAttributeDeclaration
                    {
                    pushFollow(FOLLOW_inferredAttributeDeclaration_in_declaration9344);
                    inferredAttributeDeclaration195=inferredAttributeDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =inferredAttributeDeclaration195; }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1406:7: typedMethodOrAttributeDeclaration
                    {
                    pushFollow(FOLLOW_typedMethodOrAttributeDeclaration_in_declaration9360);
                    typedMethodOrAttributeDeclaration196=typedMethodOrAttributeDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =typedMethodOrAttributeDeclaration196; }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1408:7: constructor
                    {
                    pushFollow(FOLLOW_constructor_in_declaration9376);
                    constructor197=constructor();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =constructor197; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { if (declaration!=null)
                      declaration.setAnnotationList(annotations188); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "declaration"



    // $ANTLR start "annotatedDeclarationStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1419:1: annotatedDeclarationStart : ( stringLiteral )? ( annotation )* ( ( unambiguousType )=> unambiguousType | declarationStart ) ;
    public void annotatedDeclarationStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1420:5: ( ( stringLiteral )? ( annotation )* ( ( unambiguousType )=> unambiguousType | declarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1420:7: ( stringLiteral )? ( annotation )* ( ( unambiguousType )=> unambiguousType | declarationStart )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1420:7: ( stringLiteral )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==STRING_LITERAL||LA128_0==VERBATIM_STRING) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1420:7: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotatedDeclarationStart9419);
                    stringLiteral();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1420:22: ( annotation )*
            loop129:
            do {
                int alt129=2;
                int LA129_0 = input.LA(1);

                if ( (LA129_0==LIDENTIFIER) ) {
                    alt129=1;
                }


                switch (alt129) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1420:22: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotatedDeclarationStart9422);
            	    annotation();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop129;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1421:7: ( ( unambiguousType )=> unambiguousType | declarationStart )
            int alt130=2;
            switch ( input.LA(1) ) {
            case UIDENTIFIER:
                {
                int LA130_1 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt130=1;
                }
                else if ( (true) ) {
                    alt130=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 1, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA130_2 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt130=1;
                }
                else if ( (true) ) {
                    alt130=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 2, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA130_3 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt130=1;
                }
                else if ( (true) ) {
                    alt130=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 3, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA130_4 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt130=1;
                }
                else if ( (true) ) {
                    alt130=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 4, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA130_5 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt130=1;
                }
                else if ( (true) ) {
                    alt130=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 5, input);

                    throw nvae;

                }
                }
                break;
            case ALIAS:
            case ASSIGN:
            case CLASS_DEFINITION:
            case DYNAMIC:
            case FUNCTION_MODIFIER:
            case INTERFACE_DEFINITION:
            case NEW:
            case OBJECT_DEFINITION:
            case VALUE_MODIFIER:
            case VOID_MODIFIER:
                {
                alt130=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;

            }

            switch (alt130) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1421:8: ( unambiguousType )=> unambiguousType
                    {
                    pushFollow(FOLLOW_unambiguousType_in_annotatedDeclarationStart9439);
                    unambiguousType();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1421:47: declarationStart
                    {
                    pushFollow(FOLLOW_declarationStart_in_annotatedDeclarationStart9443);
                    declarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedDeclarationStart"



    // $ANTLR start "annotatedAssertionStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1424:1: annotatedAssertionStart : ( stringLiteral )? ( annotation )* ASSERT ;
    public void annotatedAssertionStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1425:5: ( ( stringLiteral )? ( annotation )* ASSERT )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1425:7: ( stringLiteral )? ( annotation )* ASSERT
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1425:7: ( stringLiteral )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==STRING_LITERAL||LA131_0==VERBATIM_STRING) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1425:7: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotatedAssertionStart9461);
                    stringLiteral();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1425:22: ( annotation )*
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

                if ( (LA132_0==LIDENTIFIER) ) {
                    alt132=1;
                }


                switch (alt132) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1425:22: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotatedAssertionStart9464);
            	    annotation();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop132;
                }
            } while (true);


            match(input,ASSERT,FOLLOW_ASSERT_in_annotatedAssertionStart9467); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedAssertionStart"



    // $ANTLR start "declarationStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1431:1: declarationStart : ( VALUE_MODIFIER | FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | ASSIGN | INTERFACE_DEFINITION | CLASS_DEFINITION | OBJECT_DEFINITION ( LIDENTIFIER | UIDENTIFIER ) | NEW | ALIAS | variadicType LIDENTIFIER | DYNAMIC ( LIDENTIFIER | UIDENTIFIER ) );
    public void declarationStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1432:5: ( VALUE_MODIFIER | FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | ASSIGN | INTERFACE_DEFINITION | CLASS_DEFINITION | OBJECT_DEFINITION ( LIDENTIFIER | UIDENTIFIER ) | NEW | ALIAS | variadicType LIDENTIFIER | DYNAMIC ( LIDENTIFIER | UIDENTIFIER ) )
            int alt133=11;
            switch ( input.LA(1) ) {
            case VALUE_MODIFIER:
                {
                alt133=1;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt133=2;
                }
                break;
            case VOID_MODIFIER:
                {
                alt133=3;
                }
                break;
            case ASSIGN:
                {
                alt133=4;
                }
                break;
            case INTERFACE_DEFINITION:
                {
                alt133=5;
                }
                break;
            case CLASS_DEFINITION:
                {
                alt133=6;
                }
                break;
            case OBJECT_DEFINITION:
                {
                alt133=7;
                }
                break;
            case NEW:
                {
                alt133=8;
                }
                break;
            case ALIAS:
                {
                alt133=9;
                }
                break;
            case LBRACE:
            case LBRACKET:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt133=10;
                }
                break;
            case DYNAMIC:
                {
                alt133=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 133, 0, input);

                throw nvae;

            }

            switch (alt133) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1432:7: VALUE_MODIFIER
                    {
                    match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_declarationStart9487); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1433:7: FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_declarationStart9495); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1434:7: VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_declarationStart9510); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1435:7: ASSIGN
                    {
                    match(input,ASSIGN,FOLLOW_ASSIGN_in_declarationStart9525); if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1436:7: INTERFACE_DEFINITION
                    {
                    match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_declarationStart9533); if (state.failed) return ;

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1437:7: CLASS_DEFINITION
                    {
                    match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_declarationStart9541); if (state.failed) return ;

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1438:7: OBJECT_DEFINITION ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_declarationStart9549); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1439:7: NEW
                    {
                    match(input,NEW,FOLLOW_NEW_in_declarationStart9564); if (state.failed) return ;

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1440:7: ALIAS
                    {
                    match(input,ALIAS,FOLLOW_ALIAS_in_declarationStart9572); if (state.failed) return ;

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1441:7: variadicType LIDENTIFIER
                    {
                    pushFollow(FOLLOW_variadicType_in_declarationStart9581);
                    variadicType();

                    state._fsp--;
                    if (state.failed) return ;

                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_declarationStart9583); if (state.failed) return ;

                    }
                    break;
                case 11 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1442:7: DYNAMIC ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,DYNAMIC,FOLLOW_DYNAMIC_in_declarationStart9591); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "declarationStart"



    // $ANTLR start "unambiguousType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1448:1: unambiguousType : ( qualifiedType ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )? ( OPTIONAL | LBRACKET RBRACKET ) | LBRACE qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( PRODUCT_OP | SUM_OP ) RBRACE | LBRACKET qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )* ( PRODUCT_OP | SUM_OP ) RBRACKET );
    public void unambiguousType() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1449:5: ( qualifiedType ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )? ( OPTIONAL | LBRACKET RBRACKET ) | LBRACE qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( PRODUCT_OP | SUM_OP ) RBRACE | LBRACKET qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )* ( PRODUCT_OP | SUM_OP ) RBRACKET )
            int alt147=3;
            switch ( input.LA(1) ) {
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt147=1;
                }
                break;
            case LBRACE:
                {
                alt147=2;
                }
                break;
            case LBRACKET:
                {
                alt147=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 147, 0, input);

                throw nvae;

            }

            switch (alt147) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1449:7: qualifiedType ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )? ( OPTIONAL | LBRACKET RBRACKET )
                    {
                    pushFollow(FOLLOW_qualifiedType_in_unambiguousType9621);
                    qualifiedType();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1450:7: ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )?
                    int alt135=2;
                    switch ( input.LA(1) ) {
                        case OPTIONAL:
                            {
                            int LA135_1 = input.LA(2);

                            if ( (LA135_1==ENTRY_OP) ) {
                                alt135=1;
                            }
                            }
                            break;
                        case LBRACKET:
                            {
                            int LA135_2 = input.LA(2);

                            if ( (LA135_2==RBRACKET) ) {
                                int LA135_5 = input.LA(3);

                                if ( (LA135_5==ENTRY_OP) ) {
                                    alt135=1;
                                }
                            }
                            }
                            break;
                        case ENTRY_OP:
                            {
                            alt135=1;
                            }
                            break;
                    }

                    switch (alt135) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1451:9: ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1451:9: ( OPTIONAL | LBRACKET RBRACKET )?
                            int alt134=3;
                            int LA134_0 = input.LA(1);

                            if ( (LA134_0==OPTIONAL) ) {
                                alt134=1;
                            }
                            else if ( (LA134_0==LBRACKET) ) {
                                alt134=2;
                            }
                            switch (alt134) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1451:10: OPTIONAL
                                    {
                                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType9641); if (state.failed) return ;

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1451:21: LBRACKET RBRACKET
                                    {
                                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType9645); if (state.failed) return ;

                                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType9647); if (state.failed) return ;

                                    }
                                    break;

                            }


                            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType9660); if (state.failed) return ;

                            pushFollow(FOLLOW_qualifiedType_in_unambiguousType9662);
                            qualifiedType();

                            state._fsp--;
                            if (state.failed) return ;

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1454:7: ( OPTIONAL | LBRACKET RBRACKET )
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( (LA136_0==OPTIONAL) ) {
                        alt136=1;
                    }
                    else if ( (LA136_0==LBRACKET) ) {
                        alt136=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 136, 0, input);

                        throw nvae;

                    }
                    switch (alt136) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1454:8: OPTIONAL
                            {
                            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType9680); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1454:19: LBRACKET RBRACKET
                            {
                            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType9684); if (state.failed) return ;

                            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType9686); if (state.failed) return ;

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1455:7: LBRACE qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( PRODUCT_OP | SUM_OP ) RBRACE
                    {
                    match(input,LBRACE,FOLLOW_LBRACE_in_unambiguousType9695); if (state.failed) return ;

                    pushFollow(FOLLOW_qualifiedType_in_unambiguousType9704);
                    qualifiedType();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1456:21: ( OPTIONAL | LBRACKET RBRACKET )?
                    int alt137=3;
                    int LA137_0 = input.LA(1);

                    if ( (LA137_0==OPTIONAL) ) {
                        alt137=1;
                    }
                    else if ( (LA137_0==LBRACKET) ) {
                        alt137=2;
                    }
                    switch (alt137) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1456:22: OPTIONAL
                            {
                            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType9707); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1456:33: LBRACKET RBRACKET
                            {
                            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType9711); if (state.failed) return ;

                            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType9713); if (state.failed) return ;

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1457:7: ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    int alt139=2;
                    int LA139_0 = input.LA(1);

                    if ( (LA139_0==ENTRY_OP) ) {
                        alt139=1;
                    }
                    switch (alt139) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1458:9: ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )?
                            {
                            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType9733); if (state.failed) return ;

                            pushFollow(FOLLOW_qualifiedType_in_unambiguousType9735);
                            qualifiedType();

                            state._fsp--;
                            if (state.failed) return ;

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1459:9: ( OPTIONAL | LBRACKET RBRACKET )?
                            int alt138=3;
                            int LA138_0 = input.LA(1);

                            if ( (LA138_0==OPTIONAL) ) {
                                alt138=1;
                            }
                            else if ( (LA138_0==LBRACKET) ) {
                                alt138=2;
                            }
                            switch (alt138) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1459:10: OPTIONAL
                                    {
                                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType9747); if (state.failed) return ;

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1459:21: LBRACKET RBRACKET
                                    {
                                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType9751); if (state.failed) return ;

                                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType9753); if (state.failed) return ;

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    if ( input.LA(1)==PRODUCT_OP||input.LA(1)==SUM_OP ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    match(input,RBRACE,FOLLOW_RBRACE_in_unambiguousType9786); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1463:7: LBRACKET qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )* ( PRODUCT_OP | SUM_OP ) RBRACKET
                    {
                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType9794); if (state.failed) return ;

                    pushFollow(FOLLOW_qualifiedType_in_unambiguousType9803);
                    qualifiedType();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1464:21: ( OPTIONAL | LBRACKET RBRACKET )?
                    int alt140=3;
                    int LA140_0 = input.LA(1);

                    if ( (LA140_0==OPTIONAL) ) {
                        alt140=1;
                    }
                    else if ( (LA140_0==LBRACKET) ) {
                        alt140=2;
                    }
                    switch (alt140) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1464:22: OPTIONAL
                            {
                            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType9806); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1464:33: LBRACKET RBRACKET
                            {
                            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType9810); if (state.failed) return ;

                            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType9812); if (state.failed) return ;

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1465:7: ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    int alt142=2;
                    int LA142_0 = input.LA(1);

                    if ( (LA142_0==ENTRY_OP) ) {
                        alt142=1;
                    }
                    switch (alt142) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1466:9: ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )?
                            {
                            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType9833); if (state.failed) return ;

                            pushFollow(FOLLOW_qualifiedType_in_unambiguousType9835);
                            qualifiedType();

                            state._fsp--;
                            if (state.failed) return ;

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1467:9: ( OPTIONAL | LBRACKET RBRACKET )?
                            int alt141=3;
                            int LA141_0 = input.LA(1);

                            if ( (LA141_0==OPTIONAL) ) {
                                alt141=1;
                            }
                            else if ( (LA141_0==LBRACKET) ) {
                                alt141=2;
                            }
                            switch (alt141) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1467:10: OPTIONAL
                                    {
                                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType9846); if (state.failed) return ;

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1467:21: LBRACKET RBRACKET
                                    {
                                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType9850); if (state.failed) return ;

                                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType9852); if (state.failed) return ;

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1469:7: ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )*
                    loop146:
                    do {
                        int alt146=2;
                        int LA146_0 = input.LA(1);

                        if ( (LA146_0==COMMA) ) {
                            alt146=1;
                        }


                        switch (alt146) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1470:9: COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_unambiguousType9882); if (state.failed) return ;

                    	    pushFollow(FOLLOW_qualifiedType_in_unambiguousType9893);
                    	    qualifiedType();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1471:23: ( OPTIONAL | LBRACKET RBRACKET )?
                    	    int alt143=3;
                    	    int LA143_0 = input.LA(1);

                    	    if ( (LA143_0==OPTIONAL) ) {
                    	        alt143=1;
                    	    }
                    	    else if ( (LA143_0==LBRACKET) ) {
                    	        alt143=2;
                    	    }
                    	    switch (alt143) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1471:24: OPTIONAL
                    	            {
                    	            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType9896); if (state.failed) return ;

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1471:35: LBRACKET RBRACKET
                    	            {
                    	            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType9900); if (state.failed) return ;

                    	            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType9902); if (state.failed) return ;

                    	            }
                    	            break;

                    	    }


                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1472:9: ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    	    int alt145=2;
                    	    int LA145_0 = input.LA(1);

                    	    if ( (LA145_0==ENTRY_OP) ) {
                    	        alt145=1;
                    	    }
                    	    switch (alt145) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1473:11: ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )?
                    	            {
                    	            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType9927); if (state.failed) return ;

                    	            pushFollow(FOLLOW_qualifiedType_in_unambiguousType9929);
                    	            qualifiedType();

                    	            state._fsp--;
                    	            if (state.failed) return ;

                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1474:11: ( OPTIONAL | LBRACKET RBRACKET )?
                    	            int alt144=3;
                    	            int LA144_0 = input.LA(1);

                    	            if ( (LA144_0==OPTIONAL) ) {
                    	                alt144=1;
                    	            }
                    	            else if ( (LA144_0==LBRACKET) ) {
                    	                alt144=2;
                    	            }
                    	            switch (alt144) {
                    	                case 1 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1474:12: OPTIONAL
                    	                    {
                    	                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType9943); if (state.failed) return ;

                    	                    }
                    	                    break;
                    	                case 2 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1474:23: LBRACKET RBRACKET
                    	                    {
                    	                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType9947); if (state.failed) return ;

                    	                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType9949); if (state.failed) return ;

                    	                    }
                    	                    break;

                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop146;
                        }
                    } while (true);


                    if ( input.LA(1)==PRODUCT_OP||input.LA(1)==SUM_OP ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType9993); if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "unambiguousType"



    // $ANTLR start "statement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1481:1: statement returns [Statement statement] : ( directiveStatement | controlStatement | expressionOrSpecificationStatement );
    public Statement statement() throws RecognitionException {
        Statement statement = null;


        Directive directiveStatement198 =null;

        ControlStatement controlStatement199 =null;

        Statement expressionOrSpecificationStatement200 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1482:5: ( directiveStatement | controlStatement | expressionOrSpecificationStatement )
            int alt148=3;
            switch ( input.LA(1) ) {
            case BREAK:
            case CONTINUE:
            case RETURN:
            case THROW:
                {
                alt148=1;
                }
                break;
            case FOR_CLAUSE:
            case IF_CLAUSE:
            case SWITCH_CLAUSE:
            case TRY_CLAUSE:
            case WHILE_CLAUSE:
                {
                alt148=2;
                }
                break;
            case DYNAMIC:
                {
                int LA148_3 = input.LA(2);

                if ( (LA148_3==LBRACKET) ) {
                    alt148=3;
                }
                else if ( (LA148_3==LBRACE) ) {
                    alt148=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 148, 3, input);

                    throw nvae;

                }
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case FLOAT_LITERAL:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case NOT_OP:
            case OBJECT_DEFINITION:
            case OUTER:
            case PACKAGE:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
                {
                alt148=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 148, 0, input);

                throw nvae;

            }

            switch (alt148) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1482:7: directiveStatement
                    {
                    pushFollow(FOLLOW_directiveStatement_in_statement10014);
                    directiveStatement198=directiveStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = directiveStatement198; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1484:7: controlStatement
                    {
                    pushFollow(FOLLOW_controlStatement_in_statement10030);
                    controlStatement199=controlStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = controlStatement199; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1486:7: expressionOrSpecificationStatement
                    {
                    pushFollow(FOLLOW_expressionOrSpecificationStatement_in_statement10046);
                    expressionOrSpecificationStatement200=expressionOrSpecificationStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = expressionOrSpecificationStatement200; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "statement"



    // $ANTLR start "expressionOrSpecificationStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1490:1: expressionOrSpecificationStatement returns [Statement statement] : expression ( lazySpecifier )? ( SEMICOLON | COMMA ) ;
    public Statement expressionOrSpecificationStatement() throws RecognitionException {
        Statement statement = null;


        Token SEMICOLON203=null;
        Token COMMA204=null;
        Expression expression201 =null;

        SpecifierExpression lazySpecifier202 =null;


         SpecifierStatement ss=new SpecifierStatement(null); 
                    ExpressionStatement es=new ExpressionStatement(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1493:5: ( expression ( lazySpecifier )? ( SEMICOLON | COMMA ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1493:7: expression ( lazySpecifier )? ( SEMICOLON | COMMA )
            {
            pushFollow(FOLLOW_expression_in_expressionOrSpecificationStatement10084);
            expression201=expression();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement = es;
                    if (expression201!=null)
                        es.setExpression(expression201);
                    if (expression201.getTerm() instanceof AssignOp) {
                        AssignOp a = (AssignOp) expression201.getTerm();
                        Term lt = a.getLeftTerm();
                        if (lt instanceof BaseMemberExpression ||
                            lt instanceof ParameterizedExpression ||
                            lt instanceof QualifiedMemberExpression &&
                                ((QualifiedMemberExpression) lt).getPrimary() instanceof This &&
                                ((QualifiedMemberExpression) lt).getMemberOperator() instanceof MemberOp) {
                            Expression e = new Expression(null);
                            e.setTerm(a.getRightTerm());
                            SpecifierExpression se = new SpecifierExpression(null);
                            se.setExpression(e);
                            ss.setSpecifierExpression(se);
                            ss.setBaseMemberExpression(a.getLeftTerm());
                            statement = ss;
                        }
                    }
                  }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1515:7: ( lazySpecifier )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==COMPUTE) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1521:9: lazySpecifier
                    {
                    pushFollow(FOLLOW_lazySpecifier_in_expressionOrSpecificationStatement10120);
                    lazySpecifier202=lazySpecifier();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { ss.setSpecifierExpression(lazySpecifier202);
                              ss.setBaseMemberExpression(expression201.getTerm()); 
                              statement = ss; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1527:7: ( SEMICOLON | COMMA )
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==SEMICOLON) ) {
                alt150=1;
            }
            else if ( (LA150_0==COMMA) ) {
                alt150=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;

            }
            switch (alt150) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1528:9: SEMICOLON
                    {
                    SEMICOLON203=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_expressionOrSpecificationStatement10165); if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setEndToken(SEMICOLON203); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1530:9: COMMA
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(SEMICOLON, input)); }

                    COMMA204=(Token)match(input,COMMA,FOLLOW_COMMA_in_expressionOrSpecificationStatement10195); if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setEndToken(COMMA204); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "expressionOrSpecificationStatement"



    // $ANTLR start "directiveStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1538:1: directiveStatement returns [Directive directive] : d= directive SEMICOLON ;
    public Directive directiveStatement() throws RecognitionException {
        Directive directive = null;


        Token SEMICOLON205=null;
        Directive d =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1539:5: (d= directive SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1539:7: d= directive SEMICOLON
            {
            pushFollow(FOLLOW_directive_in_directiveStatement10244);
            d=directive();

            state._fsp--;
            if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive =d;
                    expecting=SEMICOLON; }

            SEMICOLON205=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_directiveStatement10261); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive.setEndToken(SEMICOLON205);
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "directiveStatement"



    // $ANTLR start "directive"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1547:1: directive returns [Directive directive] : ( returnDirective | throwDirective | breakDirective | continueDirective );
    public Directive directive() throws RecognitionException {
        Directive directive = null;


        Return returnDirective206 =null;

        Throw throwDirective207 =null;

        Break breakDirective208 =null;

        Continue continueDirective209 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1548:5: ( returnDirective | throwDirective | breakDirective | continueDirective )
            int alt151=4;
            switch ( input.LA(1) ) {
            case RETURN:
                {
                alt151=1;
                }
                break;
            case THROW:
                {
                alt151=2;
                }
                break;
            case BREAK:
                {
                alt151=3;
                }
                break;
            case CONTINUE:
                {
                alt151=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return directive;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;

            }

            switch (alt151) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1548:7: returnDirective
                    {
                    pushFollow(FOLLOW_returnDirective_in_directive10290);
                    returnDirective206=returnDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = returnDirective206; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1550:7: throwDirective
                    {
                    pushFollow(FOLLOW_throwDirective_in_directive10306);
                    throwDirective207=throwDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = throwDirective207; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1552:7: breakDirective
                    {
                    pushFollow(FOLLOW_breakDirective_in_directive10322);
                    breakDirective208=breakDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = breakDirective208; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1554:7: continueDirective
                    {
                    pushFollow(FOLLOW_continueDirective_in_directive10338);
                    continueDirective209=continueDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = continueDirective209; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "directive"



    // $ANTLR start "returnDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1558:1: returnDirective returns [Return directive] : RETURN ( functionOrExpression )? ;
    public Return returnDirective() throws RecognitionException {
        Return directive = null;


        Token RETURN210=null;
        Expression functionOrExpression211 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1559:5: ( RETURN ( functionOrExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1559:7: RETURN ( functionOrExpression )?
            {
            RETURN210=(Token)match(input,RETURN,FOLLOW_RETURN_in_returnDirective10367); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Return(RETURN210); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1561:7: ( functionOrExpression )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==BACKTICK||LA152_0==CHAR_LITERAL||(LA152_0 >= DECREMENT_OP && LA152_0 <= DIFFERENCE_OP)||LA152_0==DYNAMIC||LA152_0==FLOAT_LITERAL||LA152_0==FUNCTION_MODIFIER||LA152_0==IF_CLAUSE||LA152_0==INCREMENT_OP||(LA152_0 >= LBRACE && LA152_0 <= LIDENTIFIER)||LA152_0==LPAREN||LA152_0==NATURAL_LITERAL||(LA152_0 >= NOT_OP && LA152_0 <= OBJECT_DEFINITION)||(LA152_0 >= OUTER && LA152_0 <= PACKAGE)||LA152_0==STRING_LITERAL||LA152_0==STRING_START||(LA152_0 >= SUM_OP && LA152_0 <= SWITCH_CLAUSE)||LA152_0==THIS||LA152_0==UIDENTIFIER||(LA152_0 >= VERBATIM_STRING && LA152_0 <= VOID_MODIFIER)) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1562:9: functionOrExpression
                    {
                    pushFollow(FOLLOW_functionOrExpression_in_returnDirective10394);
                    functionOrExpression211=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive.setExpression(functionOrExpression211); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "returnDirective"



    // $ANTLR start "throwDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1567:1: throwDirective returns [Throw directive] : THROW ( expression )? ;
    public Throw throwDirective() throws RecognitionException {
        Throw directive = null;


        Token THROW212=null;
        Expression expression213 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1568:5: ( THROW ( expression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1568:7: THROW ( expression )?
            {
            THROW212=(Token)match(input,THROW,FOLLOW_THROW_in_throwDirective10434); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Throw(THROW212); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1570:7: ( expression )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==BACKTICK||LA153_0==CHAR_LITERAL||(LA153_0 >= DECREMENT_OP && LA153_0 <= DIFFERENCE_OP)||LA153_0==DYNAMIC||LA153_0==FLOAT_LITERAL||LA153_0==INCREMENT_OP||(LA153_0 >= LBRACE && LA153_0 <= LBRACKET)||LA153_0==LIDENTIFIER||LA153_0==LPAREN||LA153_0==NATURAL_LITERAL||(LA153_0 >= NOT_OP && LA153_0 <= OBJECT_DEFINITION)||(LA153_0 >= OUTER && LA153_0 <= PACKAGE)||LA153_0==STRING_LITERAL||LA153_0==STRING_START||(LA153_0 >= SUM_OP && LA153_0 <= SUPER)||LA153_0==THIS||LA153_0==UIDENTIFIER||LA153_0==VERBATIM_STRING) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1571:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_throwDirective10461);
                    expression213=expression();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive.setExpression(expression213); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "throwDirective"



    // $ANTLR start "breakDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1576:1: breakDirective returns [Break directive] : BREAK ;
    public Break breakDirective() throws RecognitionException {
        Break directive = null;


        Token BREAK214=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1577:5: ( BREAK )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1577:7: BREAK
            {
            BREAK214=(Token)match(input,BREAK,FOLLOW_BREAK_in_breakDirective10501); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Break(BREAK214); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "breakDirective"



    // $ANTLR start "continueDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1581:1: continueDirective returns [Continue directive] : CONTINUE ;
    public Continue continueDirective() throws RecognitionException {
        Continue directive = null;


        Token CONTINUE215=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1582:5: ( CONTINUE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1582:7: CONTINUE
            {
            CONTINUE215=(Token)match(input,CONTINUE,FOLLOW_CONTINUE_in_continueDirective10530); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Continue(CONTINUE215); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "continueDirective"



    // $ANTLR start "typeSpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1586:1: typeSpecifier returns [TypeSpecifier typeSpecifier] : ( COMPUTE | SPECIFY ) ( type )? ;
    public TypeSpecifier typeSpecifier() throws RecognitionException {
        TypeSpecifier typeSpecifier = null;


        Token COMPUTE216=null;
        Token SPECIFY217=null;
        StaticType type218 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1587:5: ( ( COMPUTE | SPECIFY ) ( type )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1587:7: ( COMPUTE | SPECIFY ) ( type )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1587:7: ( COMPUTE | SPECIFY )
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==COMPUTE) ) {
                alt154=1;
            }
            else if ( (LA154_0==SPECIFY) ) {
                alt154=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return typeSpecifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 154, 0, input);

                throw nvae;

            }
            switch (alt154) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1588:9: COMPUTE
                    {
                    COMPUTE216=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_typeSpecifier10569); if (state.failed) return typeSpecifier;

                    if ( state.backtracking==0 ) { typeSpecifier = new TypeSpecifier(COMPUTE216); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1591:9: SPECIFY
                    {
                    SPECIFY217=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_typeSpecifier10598); if (state.failed) return typeSpecifier;

                    if ( state.backtracking==0 ) { typeSpecifier = new TypeSpecifier(SPECIFY217); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1594:7: ( type )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( ((LA155_0 >= LBRACE && LA155_0 <= LBRACKET)||LA155_0==PACKAGE||LA155_0==SMALLER_OP||LA155_0==UIDENTIFIER) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1595:9: type
                    {
                    pushFollow(FOLLOW_type_in_typeSpecifier10635);
                    type218=type();

                    state._fsp--;
                    if (state.failed) return typeSpecifier;

                    if ( state.backtracking==0 ) { typeSpecifier.setType(type218); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeSpecifier;
    }
    // $ANTLR end "typeSpecifier"



    // $ANTLR start "typeDefault"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1600:1: typeDefault returns [TypeSpecifier typeSpecifier] : SPECIFY type ;
    public TypeSpecifier typeDefault() throws RecognitionException {
        TypeSpecifier typeSpecifier = null;


        Token SPECIFY219=null;
        StaticType type220 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1601:5: ( SPECIFY type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1601:7: SPECIFY type
            {
            SPECIFY219=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_typeDefault10675); if (state.failed) return typeSpecifier;

            if ( state.backtracking==0 ) { typeSpecifier = new DefaultTypeArgument(SPECIFY219); }

            pushFollow(FOLLOW_type_in_typeDefault10692);
            type220=type();

            state._fsp--;
            if (state.failed) return typeSpecifier;

            if ( state.backtracking==0 ) { typeSpecifier.setType(type220); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeSpecifier;
    }
    // $ANTLR end "typeDefault"



    // $ANTLR start "specifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1607:1: specifier returns [SpecifierExpression specifierExpression] : SPECIFY functionOrExpression ;
    public SpecifierExpression specifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token SPECIFY221=null;
        Expression functionOrExpression222 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1608:5: ( SPECIFY functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1608:7: SPECIFY functionOrExpression
            {
            SPECIFY221=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_specifier10721); if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression = new SpecifierExpression(SPECIFY221); }

            pushFollow(FOLLOW_functionOrExpression_in_specifier10737);
            functionOrExpression222=functionOrExpression();

            state._fsp--;
            if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression222); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "specifier"



    // $ANTLR start "lazySpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1614:1: lazySpecifier returns [SpecifierExpression specifierExpression] : COMPUTE functionOrExpression ;
    public SpecifierExpression lazySpecifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token COMPUTE223=null;
        Expression functionOrExpression224 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1615:5: ( COMPUTE functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1615:7: COMPUTE functionOrExpression
            {
            COMPUTE223=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_lazySpecifier10766); if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(COMPUTE223); }

            pushFollow(FOLLOW_functionOrExpression_in_lazySpecifier10782);
            functionOrExpression224=functionOrExpression();

            state._fsp--;
            if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression224); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "lazySpecifier"



    // $ANTLR start "functionSpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1621:1: functionSpecifier returns [SpecifierExpression specifierExpression] : ( COMPUTE | SPECIFY ) functionOrExpression ;
    public SpecifierExpression functionSpecifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token COMPUTE225=null;
        Token SPECIFY226=null;
        Expression functionOrExpression227 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1622:5: ( ( COMPUTE | SPECIFY ) functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1622:7: ( COMPUTE | SPECIFY ) functionOrExpression
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1622:7: ( COMPUTE | SPECIFY )
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==COMPUTE) ) {
                alt156=1;
            }
            else if ( (LA156_0==SPECIFY) ) {
                alt156=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return specifierExpression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 156, 0, input);

                throw nvae;

            }
            switch (alt156) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1623:9: COMPUTE
                    {
                    COMPUTE225=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_functionSpecifier10821); if (state.failed) return specifierExpression;

                    if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(COMPUTE225); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1626:9: SPECIFY
                    {
                    SPECIFY226=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_functionSpecifier10849); if (state.failed) return specifierExpression;

                    if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(SPECIFY226); }

                    }
                    break;

            }


            pushFollow(FOLLOW_functionOrExpression_in_functionSpecifier10875);
            functionOrExpression227=functionOrExpression();

            state._fsp--;
            if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression227); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "functionSpecifier"



    // $ANTLR start "expression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1633:1: expression returns [Expression expression] : assignmentExpression ;
    public Expression expression() throws RecognitionException {
        Expression expression = null;


        Term assignmentExpression228 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1634:5: ( assignmentExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1634:7: assignmentExpression
            {
            if ( state.backtracking==0 ) { expression = new Expression(null); }

            pushFollow(FOLLOW_assignmentExpression_in_expression10912);
            assignmentExpression228=assignmentExpression();

            state._fsp--;
            if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression.setTerm(assignmentExpression228); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "expression"



    // $ANTLR start "base"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1639:1: base returns [Primary primary] : ( nonstringLiteral | stringExpression | metaLiteral | enumeration | tuple | dynamicObject | objectExpression | selfReference | parExpression | baseReference );
    public Primary base() throws RecognitionException {
        Primary primary = null;


        Literal nonstringLiteral229 =null;

        Atom stringExpression230 =null;

        MetaLiteral metaLiteral231 =null;

        SequenceEnumeration enumeration232 =null;

        Tuple tuple233 =null;

        Dynamic dynamicObject234 =null;

        ObjectExpression objectExpression235 =null;

        Atom selfReference236 =null;

        Expression parExpression237 =null;

        PsiCompatibleCeylonParser.baseReference_return baseReference238 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1640:5: ( nonstringLiteral | stringExpression | metaLiteral | enumeration | tuple | dynamicObject | objectExpression | selfReference | parExpression | baseReference )
            int alt157=10;
            switch ( input.LA(1) ) {
            case CHAR_LITERAL:
            case FLOAT_LITERAL:
            case NATURAL_LITERAL:
                {
                alt157=1;
                }
                break;
            case STRING_LITERAL:
            case STRING_START:
            case VERBATIM_STRING:
                {
                alt157=2;
                }
                break;
            case BACKTICK:
                {
                alt157=3;
                }
                break;
            case LBRACE:
                {
                alt157=4;
                }
                break;
            case LBRACKET:
                {
                alt157=5;
                }
                break;
            case DYNAMIC:
                {
                alt157=6;
                }
                break;
            case OBJECT_DEFINITION:
                {
                alt157=7;
                }
                break;
            case OUTER:
            case PACKAGE:
            case SUPER:
            case THIS:
                {
                alt157=8;
                }
                break;
            case LPAREN:
                {
                alt157=9;
                }
                break;
            case LIDENTIFIER:
            case UIDENTIFIER:
                {
                alt157=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return primary;}
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;

            }

            switch (alt157) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1640:7: nonstringLiteral
                    {
                    pushFollow(FOLLOW_nonstringLiteral_in_base10941);
                    nonstringLiteral229=nonstringLiteral();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =nonstringLiteral229; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1642:7: stringExpression
                    {
                    pushFollow(FOLLOW_stringExpression_in_base10957);
                    stringExpression230=stringExpression();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =stringExpression230; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1644:7: metaLiteral
                    {
                    pushFollow(FOLLOW_metaLiteral_in_base10973);
                    metaLiteral231=metaLiteral();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =metaLiteral231; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1646:7: enumeration
                    {
                    pushFollow(FOLLOW_enumeration_in_base10989);
                    enumeration232=enumeration();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =enumeration232; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1648:7: tuple
                    {
                    pushFollow(FOLLOW_tuple_in_base11005);
                    tuple233=tuple();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =tuple233; }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1650:7: dynamicObject
                    {
                    pushFollow(FOLLOW_dynamicObject_in_base11021);
                    dynamicObject234=dynamicObject();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =dynamicObject234; }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1652:7: objectExpression
                    {
                    pushFollow(FOLLOW_objectExpression_in_base11037);
                    objectExpression235=objectExpression();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary = objectExpression235; }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1654:7: selfReference
                    {
                    pushFollow(FOLLOW_selfReference_in_base11053);
                    selfReference236=selfReference();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =selfReference236; }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1656:7: parExpression
                    {
                    pushFollow(FOLLOW_parExpression_in_base11069);
                    parExpression237=parExpression();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =parExpression237; }

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1658:7: baseReference
                    {
                    pushFollow(FOLLOW_baseReference_in_base11085);
                    baseReference238=baseReference();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { BaseMemberOrTypeExpression be;
                            if ((baseReference238!=null?baseReference238.isMember:false))
                                be = new BaseMemberExpression(null);
                            else
                                be = new BaseTypeExpression(null);
                            be.setIdentifier((baseReference238!=null?baseReference238.identifier:null));
                            if ((baseReference238!=null?baseReference238.typeArgumentList:null)!=null)
                                be.setTypeArguments((baseReference238!=null?baseReference238.typeArgumentList:null));
                            else
                                be.setTypeArguments( new InferredTypeArguments(null) );
                            primary =be; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return primary;
    }
    // $ANTLR end "base"


    public static class baseReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
        public boolean isMember;
    };


    // $ANTLR start "baseReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1672:1: baseReference returns [Identifier identifier, \n TypeArgumentList typeArgumentList, \n boolean isMember] : ( memberReference | typeReference ) ;
    public PsiCompatibleCeylonParser.baseReference_return baseReference() throws RecognitionException {
        PsiCompatibleCeylonParser.baseReference_return retval = new PsiCompatibleCeylonParser.baseReference_return();
        retval.start = input.LT(1);


        PsiCompatibleCeylonParser.memberReference_return memberReference239 =null;

        PsiCompatibleCeylonParser.typeReference_return typeReference240 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1675:5: ( ( memberReference | typeReference ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1676:5: ( memberReference | typeReference )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1676:5: ( memberReference | typeReference )
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==LIDENTIFIER) ) {
                alt158=1;
            }
            else if ( (LA158_0==UIDENTIFIER) ) {
                alt158=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;

            }
            switch (alt158) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1677:7: memberReference
                    {
                    pushFollow(FOLLOW_memberReference_in_baseReference11127);
                    memberReference239=memberReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (memberReference239!=null?memberReference239.identifier:null);
                            retval.typeArgumentList = (memberReference239!=null?memberReference239.typeArgumentList:null);
                            retval.isMember = true; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1681:7: typeReference
                    {
                    pushFollow(FOLLOW_typeReference_in_baseReference11143);
                    typeReference240=typeReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (typeReference240!=null?typeReference240.identifier:null);
                            retval.typeArgumentList = (typeReference240!=null?typeReference240.typeArgumentList:null);
                            retval.isMember = false; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "baseReference"



    // $ANTLR start "primary"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1688:1: primary returns [Primary primary] : base ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )* ;
    public Primary primary() throws RecognitionException {
        Primary primary = null;


        Primary base241 =null;

        PsiCompatibleCeylonParser.qualifiedReference_return qualifiedReference242 =null;

        IndexExpression indexOrIndexRange243 =null;

        ParameterList parameters244 =null;

        PositionalArgumentList positionalArguments245 =null;

        NamedArgumentList namedArguments246 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1689:5: ( base ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1689:7: base ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )*
            {
            pushFollow(FOLLOW_base_in_primary11178);
            base241=base();

            state._fsp--;
            if (state.failed) return primary;

            if ( state.backtracking==0 ) { primary =base241; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1691:5: ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )*
            loop159:
            do {
                int alt159=6;
                alt159 = dfa159.predict(input);
                switch (alt159) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1694:11: qualifiedReference
            	    {
            	    pushFollow(FOLLOW_qualifiedReference_in_primary11211);
            	    qualifiedReference242=qualifiedReference();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { QualifiedMemberOrTypeExpression qe;
            	            if ((qualifiedReference242!=null?qualifiedReference242.isMember:false))
            	                qe = new QualifiedMemberExpression(null);
            	            else
            	                qe = new QualifiedTypeExpression(null);
            	            qe.setPrimary(primary);
            	            qe.setMemberOperator((qualifiedReference242!=null?qualifiedReference242.operator:null));
            	            qe.setIdentifier((qualifiedReference242!=null?qualifiedReference242.identifier:null));
            	            if ((qualifiedReference242!=null?qualifiedReference242.typeArgumentList:null)!=null)
            	                qe.setTypeArguments((qualifiedReference242!=null?qualifiedReference242.typeArgumentList:null));
            	            else 
            	                qe.setTypeArguments( new InferredTypeArguments(null) );
            	            primary =qe; }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1708:9: indexOrIndexRange
            	    {
            	    pushFollow(FOLLOW_indexOrIndexRange_in_primary11229);
            	    indexOrIndexRange243=indexOrIndexRange();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { indexOrIndexRange243.setPrimary(primary);
            	              primary = indexOrIndexRange243; }

            	    }
            	    break;
            	case 3 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1711:9: ( specifierParametersStart )=> parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_primary11255);
            	    parameters244=parameters();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { ParameterizedExpression pe;
            	              if (primary instanceof ParameterizedExpression) {
            	                  pe = (ParameterizedExpression) primary;
            	              } else {
            	                  pe = new ParameterizedExpression(null);
            	                  pe.setPrimary(primary);
            	              }
            	              pe.addParameterList(parameters244);
            	              primary = pe; }

            	    }
            	    break;
            	case 4 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1721:9: positionalArguments
            	    {
            	    pushFollow(FOLLOW_positionalArguments_in_primary11275);
            	    positionalArguments245=positionalArguments();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { InvocationExpression ie = new InvocationExpression(null);
            	              ie.setPrimary(primary);
            	              ie.setPositionalArgumentList(positionalArguments245); 
            	              primary =ie; }

            	    }
            	    break;
            	case 5 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1726:9: namedArguments
            	    {
            	    pushFollow(FOLLOW_namedArguments_in_primary11296);
            	    namedArguments246=namedArguments();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { InvocationExpression ie = new InvocationExpression(null);
            	              ie.setPrimary(primary);
            	              ie.setNamedArgumentList(namedArguments246);
            	              primary =ie; }

            	    }
            	    break;

            	default :
            	    break loop159;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return primary;
    }
    // $ANTLR end "primary"



    // $ANTLR start "specifierParametersStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1734:1: specifierParametersStart : LPAREN ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart ) ;
    public void specifierParametersStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1735:5: ( LPAREN ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1735:7: LPAREN ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart )
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_specifierParametersStart11330); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1736:5: ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart )
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==RPAREN) ) {
                alt161=1;
            }
            else if ( (LA161_0==ALIAS||(LA161_0 >= ASSERT && LA161_0 <= ASSIGN)||(LA161_0 >= BACKTICK && LA161_0 <= BREAK)||(LA161_0 >= CHAR_LITERAL && LA161_0 <= CLASS_DEFINITION)||LA161_0==COMPILER_ANNOTATION||LA161_0==CONTINUE||(LA161_0 >= DECREMENT_OP && LA161_0 <= DIFFERENCE_OP)||LA161_0==DYNAMIC||(LA161_0 >= FLOAT_LITERAL && LA161_0 <= FUNCTION_MODIFIER)||(LA161_0 >= IF_CLAUSE && LA161_0 <= INTERFACE_DEFINITION)||LA161_0==IN_OP||(LA161_0 >= LBRACE && LA161_0 <= LIDENTIFIER)||LA161_0==LPAREN||LA161_0==MODULE||(LA161_0 >= NATURAL_LITERAL && LA161_0 <= NEW)||(LA161_0 >= NOT_OP && LA161_0 <= OBJECT_DEFINITION)||(LA161_0 >= OUT && LA161_0 <= PACKAGE)||LA161_0==PRODUCT_OP||LA161_0==RETURN||(LA161_0 >= SEMICOLON && LA161_0 <= SMALLER_OP)||LA161_0==STRING_LITERAL||LA161_0==STRING_START||(LA161_0 >= SUM_OP && LA161_0 <= SWITCH_CLAUSE)||(LA161_0 >= THIS && LA161_0 <= UIDENTIFIER)||(LA161_0 >= VALUE_MODIFIER && LA161_0 <= WHILE_CLAUSE)) ) {
                alt161=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 161, 0, input);

                throw nvae;

            }
            switch (alt161) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1737:7: RPAREN ( SPECIFY | COMPUTE | specifierParametersStart )
                    {
                    match(input,RPAREN,FOLLOW_RPAREN_in_specifierParametersStart11346); if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1737:14: ( SPECIFY | COMPUTE | specifierParametersStart )
                    int alt160=3;
                    switch ( input.LA(1) ) {
                    case SPECIFY:
                        {
                        alt160=1;
                        }
                        break;
                    case COMPUTE:
                        {
                        alt160=2;
                        }
                        break;
                    case LPAREN:
                        {
                        alt160=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 160, 0, input);

                        throw nvae;

                    }

                    switch (alt160) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1737:15: SPECIFY
                            {
                            match(input,SPECIFY,FOLLOW_SPECIFY_in_specifierParametersStart11349); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1737:23: COMPUTE
                            {
                            match(input,COMPUTE,FOLLOW_COMPUTE_in_specifierParametersStart11351); if (state.failed) return ;

                            }
                            break;
                        case 3 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1737:31: specifierParametersStart
                            {
                            pushFollow(FOLLOW_specifierParametersStart_in_specifierParametersStart11353);
                            specifierParametersStart();

                            state._fsp--;
                            if (state.failed) return ;

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1739:7: compilerAnnotations annotatedDeclarationStart
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_specifierParametersStart11369);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    pushFollow(FOLLOW_annotatedDeclarationStart_in_specifierParametersStart11371);
                    annotatedDeclarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "specifierParametersStart"


    public static class qualifiedReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public MemberOperator operator;
        public TypeArgumentList typeArgumentList;
        public boolean isMember;
    };


    // $ANTLR start "qualifiedReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1743:1: qualifiedReference returns [Identifier identifier, MemberOperator operator, \n TypeArgumentList typeArgumentList, boolean isMember] : memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>) ;
    public PsiCompatibleCeylonParser.qualifiedReference_return qualifiedReference() throws RecognitionException {
        PsiCompatibleCeylonParser.qualifiedReference_return retval = new PsiCompatibleCeylonParser.qualifiedReference_return();
        retval.start = input.LT(1);


        MemberOperator memberSelectionOperator247 =null;

        PsiCompatibleCeylonParser.memberReference_return memberReference248 =null;

        PsiCompatibleCeylonParser.typeReference_return typeReference249 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1745:5: ( memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1745:7: memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)
            {
            pushFollow(FOLLOW_memberSelectionOperator_in_qualifiedReference11398);
            memberSelectionOperator247=memberSelectionOperator();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.operator = memberSelectionOperator247;
                    retval.identifier = new Identifier(retval.operator.getToken());
                    retval.identifier.setText("");
                    retval.isMember =true; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1750:7: ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)
            int alt162=3;
            alt162 = dfa162.predict(input);
            switch (alt162) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1751:9: memberReference
                    {
                    pushFollow(FOLLOW_memberReference_in_qualifiedReference11426);
                    memberReference248=memberReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (memberReference248!=null?memberReference248.identifier:null);
                              retval.typeArgumentList = (memberReference248!=null?memberReference248.typeArgumentList:null); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1754:9: typeReference
                    {
                    pushFollow(FOLLOW_typeReference_in_qualifiedReference11446);
                    typeReference249=typeReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (typeReference249!=null?typeReference249.identifier:null);
                              retval.typeArgumentList = (typeReference249!=null?typeReference249.typeArgumentList:null);  
                              retval.isMember =false; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1758:9: (~ ( LIDENTIFIER | UIDENTIFIER ) )=>
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "qualifiedReference"



    // $ANTLR start "memberSelectionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1764:1: memberSelectionOperator returns [MemberOperator operator] : ( MEMBER_OP | SAFE_MEMBER_OP | SPREAD_OP );
    public MemberOperator memberSelectionOperator() throws RecognitionException {
        MemberOperator operator = null;


        Token MEMBER_OP250=null;
        Token SAFE_MEMBER_OP251=null;
        Token SPREAD_OP252=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1765:5: ( MEMBER_OP | SAFE_MEMBER_OP | SPREAD_OP )
            int alt163=3;
            switch ( input.LA(1) ) {
            case MEMBER_OP:
                {
                alt163=1;
                }
                break;
            case SAFE_MEMBER_OP:
                {
                alt163=2;
                }
                break;
            case SPREAD_OP:
                {
                alt163=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 163, 0, input);

                throw nvae;

            }

            switch (alt163) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1765:7: MEMBER_OP
                    {
                    MEMBER_OP250=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_memberSelectionOperator11513); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new MemberOp(MEMBER_OP250); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1767:7: SAFE_MEMBER_OP
                    {
                    SAFE_MEMBER_OP251=(Token)match(input,SAFE_MEMBER_OP,FOLLOW_SAFE_MEMBER_OP_in_memberSelectionOperator11529); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new SafeMemberOp(SAFE_MEMBER_OP251); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1769:7: SPREAD_OP
                    {
                    SPREAD_OP252=(Token)match(input,SPREAD_OP,FOLLOW_SPREAD_OP_in_memberSelectionOperator11545); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new SpreadOp(SPREAD_OP252); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "memberSelectionOperator"



    // $ANTLR start "enumeration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1773:1: enumeration returns [SequenceEnumeration sequenceEnumeration] : LBRACE ( sequencedArgument )? RBRACE ;
    public SequenceEnumeration enumeration() throws RecognitionException {
        SequenceEnumeration sequenceEnumeration = null;


        Token LBRACE253=null;
        Token RBRACE255=null;
        SequencedArgument sequencedArgument254 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1774:5: ( LBRACE ( sequencedArgument )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1774:7: LBRACE ( sequencedArgument )? RBRACE
            {
            LBRACE253=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_enumeration11574); if (state.failed) return sequenceEnumeration;

            if ( state.backtracking==0 ) { sequenceEnumeration = new SequenceEnumeration(LBRACE253); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1776:7: ( sequencedArgument )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==ALIAS||(LA164_0 >= ASSERT && LA164_0 <= ASSIGN)||(LA164_0 >= BACKTICK && LA164_0 <= BREAK)||(LA164_0 >= CHAR_LITERAL && LA164_0 <= CLASS_DEFINITION)||LA164_0==COMPILER_ANNOTATION||LA164_0==CONTINUE||(LA164_0 >= DECREMENT_OP && LA164_0 <= DIFFERENCE_OP)||LA164_0==DYNAMIC||(LA164_0 >= FLOAT_LITERAL && LA164_0 <= FUNCTION_MODIFIER)||(LA164_0 >= IF_CLAUSE && LA164_0 <= INTERFACE_DEFINITION)||LA164_0==IN_OP||(LA164_0 >= LBRACE && LA164_0 <= LIDENTIFIER)||LA164_0==LPAREN||LA164_0==MODULE||(LA164_0 >= NATURAL_LITERAL && LA164_0 <= NEW)||(LA164_0 >= NOT_OP && LA164_0 <= OBJECT_DEFINITION)||(LA164_0 >= OUT && LA164_0 <= PACKAGE)||LA164_0==PRODUCT_OP||LA164_0==RETURN||(LA164_0 >= SEMICOLON && LA164_0 <= SMALLER_OP)||LA164_0==STRING_LITERAL||LA164_0==STRING_START||(LA164_0 >= SUM_OP && LA164_0 <= SWITCH_CLAUSE)||(LA164_0 >= THIS && LA164_0 <= UIDENTIFIER)||(LA164_0 >= VALUE_MODIFIER && LA164_0 <= WHILE_CLAUSE)) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1777:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_enumeration11602);
                    sequencedArgument254=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return sequenceEnumeration;

                    if ( state.backtracking==0 ) { sequenceEnumeration.setSequencedArgument(sequencedArgument254); }

                    }
                    break;

            }


            RBRACE255=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_enumeration11629); if (state.failed) return sequenceEnumeration;

            if ( state.backtracking==0 ) { sequenceEnumeration.setEndToken(RBRACE255); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return sequenceEnumeration;
    }
    // $ANTLR end "enumeration"



    // $ANTLR start "tuple"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1784:1: tuple returns [Tuple tuple] : LBRACKET ( sequencedArgument )? RBRACKET ;
    public Tuple tuple() throws RecognitionException {
        Tuple tuple = null;


        Token LBRACKET256=null;
        Token RBRACKET258=null;
        SequencedArgument sequencedArgument257 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1785:5: ( LBRACKET ( sequencedArgument )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1785:7: LBRACKET ( sequencedArgument )? RBRACKET
            {
            LBRACKET256=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_tuple11658); if (state.failed) return tuple;

            if ( state.backtracking==0 ) { tuple = new Tuple(LBRACKET256); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1787:7: ( sequencedArgument )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==ALIAS||(LA165_0 >= ASSERT && LA165_0 <= ASSIGN)||(LA165_0 >= BACKTICK && LA165_0 <= BREAK)||(LA165_0 >= CHAR_LITERAL && LA165_0 <= CLASS_DEFINITION)||LA165_0==COMPILER_ANNOTATION||LA165_0==CONTINUE||(LA165_0 >= DECREMENT_OP && LA165_0 <= DIFFERENCE_OP)||LA165_0==DYNAMIC||(LA165_0 >= FLOAT_LITERAL && LA165_0 <= FUNCTION_MODIFIER)||(LA165_0 >= IF_CLAUSE && LA165_0 <= INTERFACE_DEFINITION)||LA165_0==IN_OP||(LA165_0 >= LBRACE && LA165_0 <= LIDENTIFIER)||LA165_0==LPAREN||LA165_0==MODULE||(LA165_0 >= NATURAL_LITERAL && LA165_0 <= NEW)||(LA165_0 >= NOT_OP && LA165_0 <= OBJECT_DEFINITION)||(LA165_0 >= OUT && LA165_0 <= PACKAGE)||LA165_0==PRODUCT_OP||LA165_0==RETURN||(LA165_0 >= SEMICOLON && LA165_0 <= SMALLER_OP)||LA165_0==STRING_LITERAL||LA165_0==STRING_START||(LA165_0 >= SUM_OP && LA165_0 <= SWITCH_CLAUSE)||(LA165_0 >= THIS && LA165_0 <= UIDENTIFIER)||(LA165_0 >= VALUE_MODIFIER && LA165_0 <= WHILE_CLAUSE)) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1788:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_tuple11685);
                    sequencedArgument257=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return tuple;

                    if ( state.backtracking==0 ) { tuple.setSequencedArgument(sequencedArgument257); }

                    }
                    break;

            }


            RBRACKET258=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_tuple11712); if (state.failed) return tuple;

            if ( state.backtracking==0 ) { tuple.setEndToken(RBRACKET258); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return tuple;
    }
    // $ANTLR end "tuple"



    // $ANTLR start "dynamicObject"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1795:1: dynamicObject returns [Dynamic dynamic] : DYNAMIC LBRACKET ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACKET ;
    public Dynamic dynamicObject() throws RecognitionException {
        Dynamic dynamic = null;


        Token DYNAMIC259=null;
        Token LBRACKET260=null;
        Token RBRACKET264=null;
        NamedArgument namedArgument261 =null;

        SpecifiedArgument anonymousArgument262 =null;

        SequencedArgument sequencedArgument263 =null;


         NamedArgumentList nal=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1797:5: ( DYNAMIC LBRACKET ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1797:7: DYNAMIC LBRACKET ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACKET
            {
            DYNAMIC259=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_dynamicObject11754); if (state.failed) return dynamic;

            LBRACKET260=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_dynamicObject11756); if (state.failed) return dynamic;

            if ( state.backtracking==0 ) { dynamic = new Dynamic(DYNAMIC259);
                    nal = new NamedArgumentList(LBRACKET260); 
                    dynamic.setNamedArgumentList(nal); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1801:7: ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )*
            loop166:
            do {
                int alt166=3;
                int LA166_0 = input.LA(1);

                if ( (LA166_0==COMPILER_ANNOTATION) ) {
                    int LA166_1 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt166=1;
                    }


                }
                else if ( (LA166_0==IF_CLAUSE) ) {
                    int LA166_3 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==FUNCTION_MODIFIER) ) {
                    int LA166_4 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt166=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==VOID_MODIFIER) ) {
                    int LA166_5 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt166=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==LPAREN) ) {
                    int LA166_6 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==LET) ) {
                    int LA166_7 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==SWITCH_CLAUSE) ) {
                    int LA166_8 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==NOT_OP) ) {
                    int LA166_9 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==DIFFERENCE_OP) ) {
                    int LA166_10 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==SUM_OP) ) {
                    int LA166_11 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==DECREMENT_OP) ) {
                    int LA166_12 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==INCREMENT_OP) ) {
                    int LA166_13 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==NATURAL_LITERAL) ) {
                    int LA166_14 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==FLOAT_LITERAL) ) {
                    int LA166_15 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==CHAR_LITERAL) ) {
                    int LA166_16 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==STRING_LITERAL) ) {
                    int LA166_17 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==VERBATIM_STRING) ) {
                    int LA166_18 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==STRING_START) ) {
                    int LA166_19 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==BACKTICK) ) {
                    int LA166_20 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==LBRACE) ) {
                    int LA166_21 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt166=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==LBRACKET) ) {
                    int LA166_22 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt166=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==DYNAMIC) ) {
                    int LA166_23 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt166=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==OBJECT_DEFINITION) ) {
                    int LA166_24 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt166=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==THIS) ) {
                    int LA166_25 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==SUPER) ) {
                    int LA166_26 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==OUTER) ) {
                    int LA166_27 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==PACKAGE) ) {
                    int LA166_28 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt166=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==LIDENTIFIER) ) {
                    int LA166_29 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt166=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==UIDENTIFIER) ) {
                    int LA166_30 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt166=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt166=2;
                    }


                }
                else if ( (LA166_0==SMALLER_OP) && (synpred19_Ceylon())) {
                    alt166=1;
                }
                else if ( (LA166_0==VALUE_MODIFIER) && (synpred19_Ceylon())) {
                    alt166=1;
                }


                switch (alt166) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1803:9: ( namedArgumentStart )=> namedArgument
            	    {
            	    pushFollow(FOLLOW_namedArgument_in_dynamicObject11807);
            	    namedArgument261=namedArgument();

            	    state._fsp--;
            	    if (state.failed) return dynamic;

            	    if ( state.backtracking==0 ) { if (namedArgument261!=null) 
            	                  nal.addNamedArgument(namedArgument261); }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1807:9: ( anonymousArgument )=> anonymousArgument
            	    {
            	    pushFollow(FOLLOW_anonymousArgument_in_dynamicObject11841);
            	    anonymousArgument262=anonymousArgument();

            	    state._fsp--;
            	    if (state.failed) return dynamic;

            	    if ( state.backtracking==0 ) { if (anonymousArgument262!=null) 
            	                  nal.addNamedArgument(anonymousArgument262); }

            	    }
            	    break;

            	default :
            	    break loop166;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1812:7: ( sequencedArgument )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==ALIAS||(LA167_0 >= ASSERT && LA167_0 <= ASSIGN)||(LA167_0 >= BACKTICK && LA167_0 <= BREAK)||(LA167_0 >= CHAR_LITERAL && LA167_0 <= CLASS_DEFINITION)||LA167_0==COMPILER_ANNOTATION||LA167_0==CONTINUE||(LA167_0 >= DECREMENT_OP && LA167_0 <= DIFFERENCE_OP)||LA167_0==DYNAMIC||(LA167_0 >= FLOAT_LITERAL && LA167_0 <= FUNCTION_MODIFIER)||(LA167_0 >= IF_CLAUSE && LA167_0 <= INTERFACE_DEFINITION)||LA167_0==IN_OP||(LA167_0 >= LBRACE && LA167_0 <= LIDENTIFIER)||LA167_0==LPAREN||LA167_0==MODULE||(LA167_0 >= NATURAL_LITERAL && LA167_0 <= NEW)||(LA167_0 >= NOT_OP && LA167_0 <= OBJECT_DEFINITION)||(LA167_0 >= OUT && LA167_0 <= PACKAGE)||LA167_0==PRODUCT_OP||LA167_0==RETURN||(LA167_0 >= SEMICOLON && LA167_0 <= SMALLER_OP)||LA167_0==STRING_LITERAL||LA167_0==STRING_START||(LA167_0 >= SUM_OP && LA167_0 <= SWITCH_CLAUSE)||(LA167_0 >= THIS && LA167_0 <= UIDENTIFIER)||(LA167_0 >= VALUE_MODIFIER && LA167_0 <= WHILE_CLAUSE)) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1813:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_dynamicObject11879);
                    sequencedArgument263=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return dynamic;

                    if ( state.backtracking==0 ) { nal.setSequencedArgument(sequencedArgument263); }

                    }
                    break;

            }


            RBRACKET264=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_dynamicObject11906); if (state.failed) return dynamic;

            if ( state.backtracking==0 ) { nal.setEndToken(RBRACKET264); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return dynamic;
    }
    // $ANTLR end "dynamicObject"



    // $ANTLR start "valueCaseList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1820:1: valueCaseList returns [ExpressionList expressionList] :ie1= intersectionExpression ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )* ;
    public ExpressionList valueCaseList() throws RecognitionException {
        ExpressionList expressionList = null;


        Token c=null;
        Token u=null;
        Term ie1 =null;

        Term ie2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1821:5: (ie1= intersectionExpression ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1821:7: ie1= intersectionExpression ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )*
            {
            if ( state.backtracking==0 ) { expressionList = new ExpressionList(null); }

            pushFollow(FOLLOW_intersectionExpression_in_valueCaseList11949);
            ie1=intersectionExpression();

            state._fsp--;
            if (state.failed) return expressionList;

            if ( state.backtracking==0 ) { Expression e = new Expression(null);
                    e.setTerm(ie1);
                    expressionList.addExpression(e); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1826:7: ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )*
            loop170:
            do {
                int alt170=2;
                int LA170_0 = input.LA(1);

                if ( (LA170_0==COMMA||LA170_0==UNION_OP) ) {
                    alt170=1;
                }


                switch (alt170) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1827:9: (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |)
            	    {
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1827:9: (c= COMMA |u= UNION_OP )
            	    int alt168=2;
            	    int LA168_0 = input.LA(1);

            	    if ( (LA168_0==COMMA) ) {
            	        alt168=1;
            	    }
            	    else if ( (LA168_0==UNION_OP) ) {
            	        alt168=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return expressionList;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 168, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt168) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1828:11: c= COMMA
            	            {
            	            c=(Token)match(input,COMMA,FOLLOW_COMMA_in_valueCaseList11991); if (state.failed) return expressionList;

            	            if ( state.backtracking==0 ) { expressionList.setEndToken(c); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1830:11: u= UNION_OP
            	            {
            	            u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_valueCaseList12018); if (state.failed) return expressionList;

            	            if ( state.backtracking==0 ) { expressionList.setEndToken(u); }

            	            }
            	            break;

            	    }


            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1833:9: (ie2= intersectionExpression |)
            	    int alt169=2;
            	    int LA169_0 = input.LA(1);

            	    if ( (LA169_0==BACKTICK||LA169_0==CHAR_LITERAL||(LA169_0 >= DECREMENT_OP && LA169_0 <= DIFFERENCE_OP)||LA169_0==DYNAMIC||LA169_0==FLOAT_LITERAL||LA169_0==INCREMENT_OP||(LA169_0 >= LBRACE && LA169_0 <= LBRACKET)||LA169_0==LIDENTIFIER||LA169_0==LPAREN||LA169_0==NATURAL_LITERAL||LA169_0==OBJECT_DEFINITION||(LA169_0 >= OUTER && LA169_0 <= PACKAGE)||LA169_0==STRING_LITERAL||LA169_0==STRING_START||(LA169_0 >= SUM_OP && LA169_0 <= SUPER)||LA169_0==THIS||LA169_0==UIDENTIFIER||LA169_0==VERBATIM_STRING) ) {
            	        alt169=1;
            	    }
            	    else if ( (LA169_0==COMMA||LA169_0==RPAREN||LA169_0==UNION_OP) ) {
            	        alt169=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return expressionList;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 169, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt169) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1834:11: ie2= intersectionExpression
            	            {
            	            pushFollow(FOLLOW_intersectionExpression_in_valueCaseList12064);
            	            ie2=intersectionExpression();

            	            state._fsp--;
            	            if (state.failed) return expressionList;

            	            if ( state.backtracking==0 ) { if (ie2!=null) {
            	                            Expression e = new Expression(null);
            	                            e.setTerm(ie2);
            	                            expressionList.addExpression(e);
            	                            expressionList.setEndToken(null); } }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1840:11: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                          new MismatchedTokenException(LIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop170;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expressionList;
    }
    // $ANTLR end "valueCaseList"


    public static class memberReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "memberReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1846:1: memberReference returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : memberName ( ( typeArgumentsStart )=> typeArguments )? ;
    public PsiCompatibleCeylonParser.memberReference_return memberReference() throws RecognitionException {
        PsiCompatibleCeylonParser.memberReference_return retval = new PsiCompatibleCeylonParser.memberReference_return();
        retval.start = input.LT(1);


        Identifier memberName265 =null;

        TypeArgumentList typeArguments266 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1848:5: ( memberName ( ( typeArgumentsStart )=> typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1848:7: memberName ( ( typeArgumentsStart )=> typeArguments )?
            {
            pushFollow(FOLLOW_memberName_in_memberReference12129);
            memberName265=memberName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier = memberName265; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1850:7: ( ( typeArgumentsStart )=> typeArguments )?
            int alt171=2;
            alt171 = dfa171.predict(input);
            switch (alt171) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1851:9: ( typeArgumentsStart )=> typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_memberReference12169);
                    typeArguments266=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments266; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "memberReference"


    public static class typeReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "typeReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1857:1: typeReference returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : typeName ( ( typeArgumentsStart )=> typeArguments )? ;
    public PsiCompatibleCeylonParser.typeReference_return typeReference() throws RecognitionException {
        PsiCompatibleCeylonParser.typeReference_return retval = new PsiCompatibleCeylonParser.typeReference_return();
        retval.start = input.LT(1);


        Identifier typeName267 =null;

        TypeArgumentList typeArguments268 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1859:5: ( typeName ( ( typeArgumentsStart )=> typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1859:7: typeName ( ( typeArgumentsStart )=> typeArguments )?
            {
            pushFollow(FOLLOW_typeName_in_typeReference12209);
            typeName267=typeName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier = typeName267; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1861:7: ( ( typeArgumentsStart )=> typeArguments )?
            int alt172=2;
            alt172 = dfa172.predict(input);
            switch (alt172) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1862:9: ( typeArgumentsStart )=> typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_typeReference12250);
                    typeArguments268=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments268; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "typeReference"



    // $ANTLR start "typeArgumentsStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1871:1: typeArgumentsStart : SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP ) ;
    public void typeArgumentsStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1872:5: ( SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1872:7: SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP )
            {
            match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArgumentsStart12289); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1873:5: ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP )
            int alt173=3;
            switch ( input.LA(1) ) {
            case LBRACE:
            case LBRACKET:
            case PACKAGE:
            case UIDENTIFIER:
                {
                alt173=1;
                }
                break;
            case SMALLER_OP:
                {
                int LA173_2 = input.LA(2);

                if ( ((LA173_2 >= LBRACE && LA173_2 <= LBRACKET)||LA173_2==PACKAGE||LA173_2==SMALLER_OP||LA173_2==UIDENTIFIER) ) {
                    alt173=1;
                }
                else if ( (LA173_2==EOF) ) {
                    alt173=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 173, 2, input);

                    throw nvae;

                }
                }
                break;
            case LARGER_OP:
                {
                alt173=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 173, 0, input);

                throw nvae;

            }

            switch (alt173) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1874:7: type ( LARGER_OP | SMALLER_OP | COMMA )
                    {
                    pushFollow(FOLLOW_type_in_typeArgumentsStart12303);
                    type();

                    state._fsp--;
                    if (state.failed) return ;

                    if ( input.LA(1)==COMMA||input.LA(1)==LARGER_OP||input.LA(1)==SMALLER_OP ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1877:7: SMALLER_OP
                    {
                    match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArgumentsStart12331); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1879:7: LARGER_OP
                    {
                    match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeArgumentsStart12346); if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "typeArgumentsStart"



    // $ANTLR start "indexOrIndexRange"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1883:1: indexOrIndexRange returns [IndexExpression indexExpression] : LBRACKET (e1= ELLIPSIS i= index | ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? |fe= functionOrExpression ) RBRACKET ;
    public IndexExpression indexOrIndexRange() throws RecognitionException {
        IndexExpression indexExpression = null;


        Token e1=null;
        Token e2=null;
        Token LBRACKET269=null;
        Token RANGE_OP270=null;
        Token SEGMENT_OP271=null;
        Token RBRACKET272=null;
        Expression i =null;

        Expression l =null;

        Expression u =null;

        Expression s =null;

        Expression fe =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1888:5: ( LBRACKET (e1= ELLIPSIS i= index | ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? |fe= functionOrExpression ) RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1888:7: LBRACKET (e1= ELLIPSIS i= index | ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? |fe= functionOrExpression ) RBRACKET
            {
            LBRACKET269=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_indexOrIndexRange12394); if (state.failed) return indexExpression;

            if ( state.backtracking==0 ) { indexExpression = new IndexExpression(LBRACKET269); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1890:7: (e1= ELLIPSIS i= index | ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? |fe= functionOrExpression )
            int alt175=3;
            switch ( input.LA(1) ) {
            case ELLIPSIS:
                {
                alt175=1;
                }
                break;
            case DIFFERENCE_OP:
                {
                int LA175_2 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 2, input);

                    throw nvae;

                }
                }
                break;
            case SUM_OP:
                {
                int LA175_3 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 3, input);

                    throw nvae;

                }
                }
                break;
            case DECREMENT_OP:
                {
                int LA175_4 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 4, input);

                    throw nvae;

                }
                }
                break;
            case INCREMENT_OP:
                {
                int LA175_5 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 5, input);

                    throw nvae;

                }
                }
                break;
            case NATURAL_LITERAL:
                {
                int LA175_6 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 6, input);

                    throw nvae;

                }
                }
                break;
            case FLOAT_LITERAL:
                {
                int LA175_7 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 7, input);

                    throw nvae;

                }
                }
                break;
            case CHAR_LITERAL:
                {
                int LA175_8 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 8, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA175_9 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 9, input);

                    throw nvae;

                }
                }
                break;
            case VERBATIM_STRING:
                {
                int LA175_10 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 10, input);

                    throw nvae;

                }
                }
                break;
            case STRING_START:
                {
                int LA175_11 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 11, input);

                    throw nvae;

                }
                }
                break;
            case BACKTICK:
                {
                int LA175_12 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 12, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA175_13 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 13, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA175_14 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 14, input);

                    throw nvae;

                }
                }
                break;
            case DYNAMIC:
                {
                int LA175_15 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 15, input);

                    throw nvae;

                }
                }
                break;
            case OBJECT_DEFINITION:
                {
                int LA175_16 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 16, input);

                    throw nvae;

                }
                }
                break;
            case THIS:
                {
                int LA175_17 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 17, input);

                    throw nvae;

                }
                }
                break;
            case SUPER:
                {
                int LA175_18 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 18, input);

                    throw nvae;

                }
                }
                break;
            case OUTER:
                {
                int LA175_19 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 19, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA175_20 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 20, input);

                    throw nvae;

                }
                }
                break;
            case LPAREN:
                {
                int LA175_21 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 21, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA175_22 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 22, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA175_23 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt175=2;
                }
                else if ( (true) ) {
                    alt175=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 175, 23, input);

                    throw nvae;

                }
                }
                break;
            case FUNCTION_MODIFIER:
            case IF_CLAUSE:
            case LET:
            case NOT_OP:
            case SWITCH_CLAUSE:
            case VOID_MODIFIER:
                {
                alt175=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return indexExpression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 175, 0, input);

                throw nvae;

            }

            switch (alt175) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1891:9: e1= ELLIPSIS i= index
                    {
                    e1=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_indexOrIndexRange12422); if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { indexExpression.setEndToken(e1); }

                    pushFollow(FOLLOW_index_in_indexOrIndexRange12444);
                    i=index();

                    state._fsp--;
                    if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { ElementRange er0 = new ElementRange(null);
                              er0.setUpperBound(i);
                              indexExpression.setElementOrRange(er0); 
                              indexExpression.setEndToken(null); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1898:9: ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )?
                    {
                    pushFollow(FOLLOW_index_in_indexOrIndexRange12487);
                    l=index();

                    state._fsp--;
                    if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { Element e = new Element(null);
                              e.setExpression(l); 
                              indexExpression.setElementOrRange(e); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1903:9: (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )?
                    int alt174=4;
                    switch ( input.LA(1) ) {
                        case ELLIPSIS:
                            {
                            alt174=1;
                            }
                            break;
                        case RANGE_OP:
                            {
                            alt174=2;
                            }
                            break;
                        case SEGMENT_OP:
                            {
                            alt174=3;
                            }
                            break;
                    }

                    switch (alt174) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1904:11: e2= ELLIPSIS
                            {
                            e2=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_indexOrIndexRange12521); if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { indexExpression.setEndToken(e2);
                                        ElementRange er1 = new ElementRange(null);
                                        er1.setLowerBound(l);
                                        indexExpression.setElementOrRange(er1); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1910:11: RANGE_OP u= index
                            {
                            RANGE_OP270=(Token)match(input,RANGE_OP,FOLLOW_RANGE_OP_in_indexOrIndexRange12556); if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { indexExpression.setEndToken(RANGE_OP270); }

                            pushFollow(FOLLOW_index_in_indexOrIndexRange12583);
                            u=index();

                            state._fsp--;
                            if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { ElementRange er2 = new ElementRange(null);
                                        er2.setLowerBound(l); 
                                        er2.setUpperBound(u); 
                                        indexExpression.setElementOrRange(er2);
                                        indexExpression.setEndToken(null); }

                            }
                            break;
                        case 3 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1918:11: SEGMENT_OP s= index
                            {
                            SEGMENT_OP271=(Token)match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_indexOrIndexRange12608); if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { indexExpression.setEndToken(SEGMENT_OP271); }

                            pushFollow(FOLLOW_index_in_indexOrIndexRange12634);
                            s=index();

                            state._fsp--;
                            if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { ElementRange er3 = new ElementRange(null);
                                        er3.setLowerBound(l); 
                                        er3.setLength(s); 
                                        indexExpression.setElementOrRange(er3);
                                        indexExpression.setEndToken(null); }

                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1927:9: fe= functionOrExpression
                    {
                    pushFollow(FOLLOW_functionOrExpression_in_indexOrIndexRange12670);
                    fe=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { Element e = new Element(null);
                              e.setExpression(fe); 
                              indexExpression.setElementOrRange(e); }

                    }
                    break;

            }


            RBRACKET272=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_indexOrIndexRange12696); if (state.failed) return indexExpression;

            if ( state.backtracking==0 ) { indexExpression.setEndToken(RBRACKET272); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return indexExpression;
    }
    // $ANTLR end "indexOrIndexRange"



    // $ANTLR start "index"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1936:1: index returns [Expression expression] : additiveExpression ;
    public Expression index() throws RecognitionException {
        Expression expression = null;


        Term additiveExpression273 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1937:5: ( additiveExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1937:7: additiveExpression
            {
            pushFollow(FOLLOW_additiveExpression_in_index12725);
            additiveExpression273=additiveExpression();

            state._fsp--;
            if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression = new Expression(null);
                    expression.setTerm(additiveExpression273); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "index"



    // $ANTLR start "namedArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1942:1: namedArguments returns [NamedArgumentList namedArgumentList] : LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE ;
    public NamedArgumentList namedArguments() throws RecognitionException {
        NamedArgumentList namedArgumentList = null;


        Token LBRACE274=null;
        Token RBRACE278=null;
        NamedArgument namedArgument275 =null;

        SpecifiedArgument anonymousArgument276 =null;

        SequencedArgument sequencedArgument277 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1943:5: ( LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1943:7: LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE
            {
            LBRACE274=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_namedArguments12755); if (state.failed) return namedArgumentList;

            if ( state.backtracking==0 ) { namedArgumentList = new NamedArgumentList(LBRACE274); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1945:7: ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )*
            loop176:
            do {
                int alt176=3;
                int LA176_0 = input.LA(1);

                if ( (LA176_0==COMPILER_ANNOTATION) ) {
                    int LA176_1 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt176=1;
                    }


                }
                else if ( (LA176_0==IF_CLAUSE) ) {
                    int LA176_3 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==FUNCTION_MODIFIER) ) {
                    int LA176_4 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt176=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==VOID_MODIFIER) ) {
                    int LA176_5 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt176=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==LPAREN) ) {
                    int LA176_6 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==LET) ) {
                    int LA176_7 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==SWITCH_CLAUSE) ) {
                    int LA176_8 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==NOT_OP) ) {
                    int LA176_9 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==DIFFERENCE_OP) ) {
                    int LA176_10 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==SUM_OP) ) {
                    int LA176_11 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==DECREMENT_OP) ) {
                    int LA176_12 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==INCREMENT_OP) ) {
                    int LA176_13 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==NATURAL_LITERAL) ) {
                    int LA176_14 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==FLOAT_LITERAL) ) {
                    int LA176_15 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==CHAR_LITERAL) ) {
                    int LA176_16 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==STRING_LITERAL) ) {
                    int LA176_17 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==VERBATIM_STRING) ) {
                    int LA176_18 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==STRING_START) ) {
                    int LA176_19 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==BACKTICK) ) {
                    int LA176_20 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==LBRACE) ) {
                    int LA176_21 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt176=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==LBRACKET) ) {
                    int LA176_22 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt176=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==DYNAMIC) ) {
                    int LA176_23 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt176=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==OBJECT_DEFINITION) ) {
                    int LA176_24 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt176=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==THIS) ) {
                    int LA176_25 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==SUPER) ) {
                    int LA176_26 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==OUTER) ) {
                    int LA176_27 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==PACKAGE) ) {
                    int LA176_28 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt176=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==LIDENTIFIER) ) {
                    int LA176_29 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt176=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==UIDENTIFIER) ) {
                    int LA176_30 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt176=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt176=2;
                    }


                }
                else if ( (LA176_0==SMALLER_OP) && (synpred24_Ceylon())) {
                    alt176=1;
                }
                else if ( (LA176_0==VALUE_MODIFIER) && (synpred24_Ceylon())) {
                    alt176=1;
                }


                switch (alt176) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1947:9: ( namedArgumentStart )=> namedArgument
            	    {
            	    pushFollow(FOLLOW_namedArgument_in_namedArguments12807);
            	    namedArgument275=namedArgument();

            	    state._fsp--;
            	    if (state.failed) return namedArgumentList;

            	    if ( state.backtracking==0 ) { if (namedArgument275!=null) 
            	                  namedArgumentList.addNamedArgument(namedArgument275); }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1951:9: ( anonymousArgument )=> anonymousArgument
            	    {
            	    pushFollow(FOLLOW_anonymousArgument_in_namedArguments12841);
            	    anonymousArgument276=anonymousArgument();

            	    state._fsp--;
            	    if (state.failed) return namedArgumentList;

            	    if ( state.backtracking==0 ) { if (anonymousArgument276!=null) 
            	                  namedArgumentList.addNamedArgument(anonymousArgument276); }

            	    }
            	    break;

            	default :
            	    break loop176;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1956:7: ( sequencedArgument )?
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( (LA177_0==ALIAS||(LA177_0 >= ASSERT && LA177_0 <= ASSIGN)||(LA177_0 >= BACKTICK && LA177_0 <= BREAK)||(LA177_0 >= CHAR_LITERAL && LA177_0 <= CLASS_DEFINITION)||LA177_0==COMPILER_ANNOTATION||LA177_0==CONTINUE||(LA177_0 >= DECREMENT_OP && LA177_0 <= DIFFERENCE_OP)||LA177_0==DYNAMIC||(LA177_0 >= FLOAT_LITERAL && LA177_0 <= FUNCTION_MODIFIER)||(LA177_0 >= IF_CLAUSE && LA177_0 <= INTERFACE_DEFINITION)||LA177_0==IN_OP||(LA177_0 >= LBRACE && LA177_0 <= LIDENTIFIER)||LA177_0==LPAREN||LA177_0==MODULE||(LA177_0 >= NATURAL_LITERAL && LA177_0 <= NEW)||(LA177_0 >= NOT_OP && LA177_0 <= OBJECT_DEFINITION)||(LA177_0 >= OUT && LA177_0 <= PACKAGE)||LA177_0==PRODUCT_OP||LA177_0==RETURN||(LA177_0 >= SEMICOLON && LA177_0 <= SMALLER_OP)||LA177_0==STRING_LITERAL||LA177_0==STRING_START||(LA177_0 >= SUM_OP && LA177_0 <= SWITCH_CLAUSE)||(LA177_0 >= THIS && LA177_0 <= UIDENTIFIER)||(LA177_0 >= VALUE_MODIFIER && LA177_0 <= WHILE_CLAUSE)) ) {
                alt177=1;
            }
            switch (alt177) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1957:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_namedArguments12879);
                    sequencedArgument277=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return namedArgumentList;

                    if ( state.backtracking==0 ) { namedArgumentList.setSequencedArgument(sequencedArgument277); }

                    }
                    break;

            }


            RBRACE278=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_namedArguments12906); if (state.failed) return namedArgumentList;

            if ( state.backtracking==0 ) { namedArgumentList.setEndToken(RBRACE278); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return namedArgumentList;
    }
    // $ANTLR end "namedArguments"



    // $ANTLR start "sequencedArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1964:1: sequencedArgument returns [SequencedArgument sequencedArgument] : compilerAnnotations ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension |pa1= positionalArgument |sa1= spreadArgument ) (c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |) )* ;
    public SequencedArgument sequencedArgument() throws RecognitionException {
        SequencedArgument sequencedArgument = null;


        Token c=null;
        Comprehension c1 =null;

        ListedArgument pa1 =null;

        SpreadArgument sa1 =null;

        Comprehension c2 =null;

        ListedArgument pa2 =null;

        SpreadArgument sa2 =null;

        List<CompilerAnnotation> compilerAnnotations279 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1965:5: ( compilerAnnotations ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension |pa1= positionalArgument |sa1= spreadArgument ) (c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1965:7: compilerAnnotations ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension |pa1= positionalArgument |sa1= spreadArgument ) (c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |) )*
            {
            pushFollow(FOLLOW_compilerAnnotations_in_sequencedArgument12935);
            compilerAnnotations279=compilerAnnotations();

            state._fsp--;
            if (state.failed) return sequencedArgument;

            if ( state.backtracking==0 ) { sequencedArgument = new SequencedArgument(null);
                    sequencedArgument.getCompilerAnnotations().addAll(compilerAnnotations279); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1968:9: ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension |pa1= positionalArgument |sa1= spreadArgument )
            int alt178=3;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==FOR_CLAUSE) && (synpred26_Ceylon())) {
                alt178=1;
            }
            else if ( (LA178_0==IF_CLAUSE) ) {
                int LA178_2 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt178=1;
                }
                else if ( (true) ) {
                    alt178=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 178, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA178_0==BACKTICK||LA178_0==CHAR_LITERAL||(LA178_0 >= DECREMENT_OP && LA178_0 <= DIFFERENCE_OP)||LA178_0==DYNAMIC||LA178_0==FLOAT_LITERAL||LA178_0==FUNCTION_MODIFIER||LA178_0==INCREMENT_OP||(LA178_0 >= LBRACE && LA178_0 <= LIDENTIFIER)||LA178_0==LPAREN||LA178_0==NATURAL_LITERAL||(LA178_0 >= NOT_OP && LA178_0 <= OBJECT_DEFINITION)||(LA178_0 >= OUTER && LA178_0 <= PACKAGE)||LA178_0==STRING_LITERAL||LA178_0==STRING_START||(LA178_0 >= SUM_OP && LA178_0 <= SWITCH_CLAUSE)||LA178_0==THIS||LA178_0==UIDENTIFIER||(LA178_0 >= VERBATIM_STRING && LA178_0 <= VOID_MODIFIER)) ) {
                alt178=2;
            }
            else if ( (LA178_0==PRODUCT_OP) ) {
                alt178=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
                NoViableAltException nvae =
                    new NoViableAltException("", 178, 0, input);

                throw nvae;

            }
            switch (alt178) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1969:11: ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension
                    {
                    pushFollow(FOLLOW_comprehension_in_sequencedArgument12991);
                    c1=comprehension();

                    state._fsp--;
                    if (state.failed) return sequencedArgument;

                    if ( state.backtracking==0 ) { if (c1!=null)
                                    sequencedArgument.addPositionalArgument(c1); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1974:11: pa1= positionalArgument
                    {
                    pushFollow(FOLLOW_positionalArgument_in_sequencedArgument13028);
                    pa1=positionalArgument();

                    state._fsp--;
                    if (state.failed) return sequencedArgument;

                    if ( state.backtracking==0 ) { if (pa1!=null)
                                    sequencedArgument.addPositionalArgument(pa1); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1978:11: sa1= spreadArgument
                    {
                    pushFollow(FOLLOW_spreadArgument_in_sequencedArgument13064);
                    sa1=spreadArgument();

                    state._fsp--;
                    if (state.failed) return sequencedArgument;

                    if ( state.backtracking==0 ) { if (sa1!=null)
                                    sequencedArgument.addPositionalArgument(sa1); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1982:9: (c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |) )*
            loop180:
            do {
                int alt180=2;
                int LA180_0 = input.LA(1);

                if ( (LA180_0==COMMA) ) {
                    alt180=1;
                }


                switch (alt180) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1983:11: c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |)
            	    {
            	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_sequencedArgument13110); if (state.failed) return sequencedArgument;

            	    if ( state.backtracking==0 ) { sequencedArgument.setEndToken(c); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1985:11: ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |)
            	    int alt179=4;
            	    int LA179_0 = input.LA(1);

            	    if ( (LA179_0==FOR_CLAUSE) && (synpred27_Ceylon())) {
            	        alt179=1;
            	    }
            	    else if ( (LA179_0==IF_CLAUSE) ) {
            	        int LA179_2 = input.LA(2);

            	        if ( (synpred27_Ceylon()) ) {
            	            alt179=1;
            	        }
            	        else if ( (true) ) {
            	            alt179=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 179, 2, input);

            	            throw nvae;

            	        }
            	    }
            	    else if ( (LA179_0==BACKTICK||LA179_0==CHAR_LITERAL||(LA179_0 >= DECREMENT_OP && LA179_0 <= DIFFERENCE_OP)||LA179_0==DYNAMIC||LA179_0==FLOAT_LITERAL||LA179_0==FUNCTION_MODIFIER||LA179_0==INCREMENT_OP||(LA179_0 >= LBRACE && LA179_0 <= LIDENTIFIER)||LA179_0==LPAREN||LA179_0==NATURAL_LITERAL||(LA179_0 >= NOT_OP && LA179_0 <= OBJECT_DEFINITION)||(LA179_0 >= OUTER && LA179_0 <= PACKAGE)||LA179_0==STRING_LITERAL||LA179_0==STRING_START||(LA179_0 >= SUM_OP && LA179_0 <= SWITCH_CLAUSE)||LA179_0==THIS||LA179_0==UIDENTIFIER||(LA179_0 >= VERBATIM_STRING && LA179_0 <= VOID_MODIFIER)) ) {
            	        alt179=2;
            	    }
            	    else if ( (LA179_0==PRODUCT_OP) ) {
            	        alt179=3;
            	    }
            	    else if ( (LA179_0==COMMA||(LA179_0 >= RBRACE && LA179_0 <= RBRACKET)||LA179_0==RPAREN) ) {
            	        alt179=4;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 179, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt179) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1986:13: ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension
            	            {
            	            pushFollow(FOLLOW_comprehension_in_sequencedArgument13176);
            	            c2=comprehension();

            	            state._fsp--;
            	            if (state.failed) return sequencedArgument;

            	            if ( state.backtracking==0 ) { if (c2!=null) {
            	                              sequencedArgument.addPositionalArgument(c2);
            	                              sequencedArgument.setEndToken(null); } }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1992:13: pa2= positionalArgument
            	            {
            	            pushFollow(FOLLOW_positionalArgument_in_sequencedArgument13219);
            	            pa2=positionalArgument();

            	            state._fsp--;
            	            if (state.failed) return sequencedArgument;

            	            if ( state.backtracking==0 ) { if (pa2!=null) {
            	                              sequencedArgument.addPositionalArgument(pa2); 
            	                              sequencedArgument.setEndToken(null); } }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1997:13: sa2= spreadArgument
            	            {
            	            pushFollow(FOLLOW_spreadArgument_in_sequencedArgument13262);
            	            sa2=spreadArgument();

            	            state._fsp--;
            	            if (state.failed) return sequencedArgument;

            	            if ( state.backtracking==0 ) { if (sa2!=null) {
            	                              sequencedArgument.addPositionalArgument(sa2); 
            	                              sequencedArgument.setEndToken(null); } }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2002:13: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                            new MismatchedTokenException(LIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop180;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return sequencedArgument;
    }
    // $ANTLR end "sequencedArgument"



    // $ANTLR start "namedArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2008:1: namedArgument returns [NamedArgument namedArgument] : compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration ) ;
    public NamedArgument namedArgument() throws RecognitionException {
        NamedArgument namedArgument = null;


        SpecifiedArgument namedSpecifiedArgument280 =null;

        NamedArgument namedArgumentDeclaration281 =null;

        List<CompilerAnnotation> compilerAnnotations282 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2009:5: ( compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2009:7: compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_namedArgument13347);
            compilerAnnotations282=compilerAnnotations();

            state._fsp--;
            if (state.failed) return namedArgument;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2010:5: ( namedSpecifiedArgument | namedArgumentDeclaration )
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==LIDENTIFIER) ) {
                int LA181_1 = input.LA(2);

                if ( (LA181_1==SEMICOLON||LA181_1==SPECIFY) ) {
                    alt181=1;
                }
                else if ( (LA181_1==COMPUTE||LA181_1==LPAREN) ) {
                    alt181=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return namedArgument;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 181, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA181_0==DYNAMIC||LA181_0==FUNCTION_MODIFIER||(LA181_0 >= LBRACE && LA181_0 <= LBRACKET)||LA181_0==OBJECT_DEFINITION||LA181_0==PACKAGE||LA181_0==SMALLER_OP||LA181_0==UIDENTIFIER||LA181_0==VALUE_MODIFIER||LA181_0==VOID_MODIFIER) ) {
                alt181=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return namedArgument;}
                NoViableAltException nvae =
                    new NoViableAltException("", 181, 0, input);

                throw nvae;

            }
            switch (alt181) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2011:7: namedSpecifiedArgument
                    {
                    pushFollow(FOLLOW_namedSpecifiedArgument_in_namedArgument13364);
                    namedSpecifiedArgument280=namedSpecifiedArgument();

                    state._fsp--;
                    if (state.failed) return namedArgument;

                    if ( state.backtracking==0 ) { namedArgument = namedSpecifiedArgument280; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2014:7: namedArgumentDeclaration
                    {
                    pushFollow(FOLLOW_namedArgumentDeclaration_in_namedArgument13386);
                    namedArgumentDeclaration281=namedArgumentDeclaration();

                    state._fsp--;
                    if (state.failed) return namedArgument;

                    if ( state.backtracking==0 ) { namedArgument = namedArgumentDeclaration281; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { if (namedArgument!=null)
                      namedArgument.getCompilerAnnotations().addAll(compilerAnnotations282); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return namedArgument;
    }
    // $ANTLR end "namedArgument"



    // $ANTLR start "namedSpecifiedArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2021:1: namedSpecifiedArgument returns [SpecifiedArgument specifiedArgument] : memberName ( specifier )? SEMICOLON ;
    public SpecifiedArgument namedSpecifiedArgument() throws RecognitionException {
        SpecifiedArgument specifiedArgument = null;


        Token SEMICOLON285=null;
        Identifier memberName283 =null;

        SpecifierExpression specifier284 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2022:5: ( memberName ( specifier )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2022:7: memberName ( specifier )? SEMICOLON
            {
            pushFollow(FOLLOW_memberName_in_namedSpecifiedArgument13427);
            memberName283=memberName();

            state._fsp--;
            if (state.failed) return specifiedArgument;

            if ( state.backtracking==0 ) { specifiedArgument = new SpecifiedArgument(null); 
                    specifiedArgument.setIdentifier(memberName283); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2025:7: ( specifier )?
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==SPECIFY) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2026:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_namedSpecifiedArgument13453);
                    specifier284=specifier();

                    state._fsp--;
                    if (state.failed) return specifiedArgument;

                    if ( state.backtracking==0 ) { specifiedArgument.setSpecifierExpression(specifier284); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON285=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_namedSpecifiedArgument13489); if (state.failed) return specifiedArgument;

            if ( state.backtracking==0 ) { specifiedArgument.setEndToken(SEMICOLON285); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifiedArgument;
    }
    // $ANTLR end "namedSpecifiedArgument"



    // $ANTLR start "anonymousArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2034:1: anonymousArgument returns [SpecifiedArgument namedArgument] : functionOrExpression SEMICOLON ;
    public SpecifiedArgument anonymousArgument() throws RecognitionException {
        SpecifiedArgument namedArgument = null;


        Token SEMICOLON287=null;
        Expression functionOrExpression286 =null;


         namedArgument = new SpecifiedArgument(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2036:5: ( functionOrExpression SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2036:7: functionOrExpression SEMICOLON
            {
            pushFollow(FOLLOW_functionOrExpression_in_anonymousArgument13527);
            functionOrExpression286=functionOrExpression();

            state._fsp--;
            if (state.failed) return namedArgument;

            if ( state.backtracking==0 ) { SpecifierExpression se = new SpecifierExpression(null);
                   se.setExpression(functionOrExpression286);
                   namedArgument.setSpecifierExpression(se); }

            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON287=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_anonymousArgument13553); if (state.failed) return namedArgument;

            if ( state.backtracking==0 ) { namedArgument.setEndToken(SEMICOLON287); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return namedArgument;
    }
    // $ANTLR end "anonymousArgument"



    // $ANTLR start "objectArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2045:1: objectArgument returns [ObjectArgument declaration] : OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) ;
    public ObjectArgument objectArgument() throws RecognitionException {
        ObjectArgument declaration = null;


        Token OBJECT_DEFINITION288=null;
        Token SEMICOLON293=null;
        Identifier memberNameDeclaration289 =null;

        ExtendedType extendedType290 =null;

        SatisfiedTypes satisfiedTypes291 =null;

        ClassBody classBody292 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2046:5: ( OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2046:7: OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON )
            {
            OBJECT_DEFINITION288=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_objectArgument13582); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new ObjectArgument(OBJECT_DEFINITION288); 
                    declaration.setType(new ValueModifier(null)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2049:7: ( memberNameDeclaration )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==LIDENTIFIER||LA183_0==UIDENTIFIER) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2050:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_objectArgument13609);
                    memberNameDeclaration289=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration289); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2053:7: ( extendedType )?
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==EXTENDS) ) {
                alt184=1;
            }
            switch (alt184) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2054:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_objectArgument13647);
                    extendedType290=extendedType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setExtendedType(extendedType290); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2057:7: ( satisfiedTypes )?
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==SATISFIES) ) {
                alt185=1;
            }
            switch (alt185) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2058:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_objectArgument13686);
                    satisfiedTypes291=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setSatisfiedTypes(satisfiedTypes291); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2061:7: ( classBody | SEMICOLON )
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( (LA186_0==LBRACE) ) {
                alt186=1;
            }
            else if ( (LA186_0==SEMICOLON) ) {
                alt186=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 186, 0, input);

                throw nvae;

            }
            switch (alt186) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2062:9: classBody
                    {
                    pushFollow(FOLLOW_classBody_in_objectArgument13724);
                    classBody292=classBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setClassBody(classBody292); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2064:9: SEMICOLON
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LBRACE, input)); }

                    SEMICOLON293=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_objectArgument13754); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON293); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "objectArgument"



    // $ANTLR start "voidOrInferredMethodArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2071:1: voidOrInferredMethodArgument returns [MethodArgument declaration] : ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( parameters )* ( block | ( functionSpecifier )? SEMICOLON ) ;
    public MethodArgument voidOrInferredMethodArgument() throws RecognitionException {
        MethodArgument declaration = null;


        Token VOID_MODIFIER294=null;
        Token FUNCTION_MODIFIER295=null;
        Token SEMICOLON300=null;
        Identifier memberNameDeclaration296 =null;

        ParameterList parameters297 =null;

        Block block298 =null;

        SpecifierExpression functionSpecifier299 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2072:5: ( ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( parameters )* ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2072:7: ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( parameters )* ( block | ( functionSpecifier )? SEMICOLON )
            {
            if ( state.backtracking==0 ) { declaration =new MethodArgument(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2073:7: ( VOID_MODIFIER | FUNCTION_MODIFIER )
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==VOID_MODIFIER) ) {
                alt187=1;
            }
            else if ( (LA187_0==FUNCTION_MODIFIER) ) {
                alt187=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 187, 0, input);

                throw nvae;

            }
            switch (alt187) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2074:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER294=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodArgument13811); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setType(new VoidModifier(VOID_MODIFIER294)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2077:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER295=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodArgument13839); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setType(new FunctionModifier(FUNCTION_MODIFIER295)); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2080:7: ( memberNameDeclaration )?
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==LIDENTIFIER||LA188_0==UIDENTIFIER) ) {
                alt188=1;
            }
            switch (alt188) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2081:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_voidOrInferredMethodArgument13876);
                    memberNameDeclaration296=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration296); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2084:7: ( parameters )*
            loop189:
            do {
                int alt189=2;
                int LA189_0 = input.LA(1);

                if ( (LA189_0==LPAREN) ) {
                    alt189=1;
                }


                switch (alt189) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2085:9: parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_voidOrInferredMethodArgument13914);
            	    parameters297=parameters();

            	    state._fsp--;
            	    if (state.failed) return declaration;

            	    if ( state.backtracking==0 ) { declaration.addParameterList(parameters297); }

            	    }
            	    break;

            	default :
            	    break loop189;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2088:7: ( block | ( functionSpecifier )? SEMICOLON )
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==LBRACE) ) {
                alt191=1;
            }
            else if ( (LA191_0==COMPUTE||LA191_0==SEMICOLON||LA191_0==SPECIFY) ) {
                alt191=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 191, 0, input);

                throw nvae;

            }
            switch (alt191) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2089:9: block
                    {
                    pushFollow(FOLLOW_block_in_voidOrInferredMethodArgument13951);
                    block298=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block298); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2092:9: ( functionSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2092:9: ( functionSpecifier )?
                    int alt190=2;
                    int LA190_0 = input.LA(1);

                    if ( (LA190_0==COMPUTE||LA190_0==SPECIFY) ) {
                        alt190=1;
                    }
                    switch (alt190) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2093:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_voidOrInferredMethodArgument13992);
                            functionSpecifier299=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(functionSpecifier299); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON300=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_voidOrInferredMethodArgument14035); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { expecting=-1; }

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON300); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "voidOrInferredMethodArgument"



    // $ANTLR start "inferredGetterArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2103:1: inferredGetterArgument returns [AttributeArgument declaration] : VALUE_MODIFIER ( memberNameDeclaration )? ( block | ( specifier | lazySpecifier )? SEMICOLON ) ;
    public AttributeArgument inferredGetterArgument() throws RecognitionException {
        AttributeArgument declaration = null;


        Token VALUE_MODIFIER301=null;
        Token SEMICOLON306=null;
        Identifier memberNameDeclaration302 =null;

        Block block303 =null;

        SpecifierExpression specifier304 =null;

        SpecifierExpression lazySpecifier305 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2104:5: ( VALUE_MODIFIER ( memberNameDeclaration )? ( block | ( specifier | lazySpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2104:7: VALUE_MODIFIER ( memberNameDeclaration )? ( block | ( specifier | lazySpecifier )? SEMICOLON )
            {
            if ( state.backtracking==0 ) { declaration =new AttributeArgument(null); }

            VALUE_MODIFIER301=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_inferredGetterArgument14092); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setType(new ValueModifier(VALUE_MODIFIER301)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2107:7: ( memberNameDeclaration )?
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==LIDENTIFIER||LA192_0==UIDENTIFIER) ) {
                alt192=1;
            }
            switch (alt192) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2108:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_inferredGetterArgument14119);
                    memberNameDeclaration302=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration302); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2111:7: ( block | ( specifier | lazySpecifier )? SEMICOLON )
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==LBRACE) ) {
                alt194=1;
            }
            else if ( (LA194_0==COMPUTE||LA194_0==SEMICOLON||LA194_0==SPECIFY) ) {
                alt194=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 194, 0, input);

                throw nvae;

            }
            switch (alt194) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2112:9: block
                    {
                    pushFollow(FOLLOW_block_in_inferredGetterArgument14157);
                    block303=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block303); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2115:9: ( specifier | lazySpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2115:9: ( specifier | lazySpecifier )?
                    int alt193=3;
                    int LA193_0 = input.LA(1);

                    if ( (LA193_0==SPECIFY) ) {
                        alt193=1;
                    }
                    else if ( (LA193_0==COMPUTE) ) {
                        alt193=2;
                    }
                    switch (alt193) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2116:11: specifier
                            {
                            pushFollow(FOLLOW_specifier_in_inferredGetterArgument14198);
                            specifier304=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(specifier304); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2119:11: lazySpecifier
                            {
                            pushFollow(FOLLOW_lazySpecifier_in_inferredGetterArgument14234);
                            lazySpecifier305=lazySpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(lazySpecifier305); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON306=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_inferredGetterArgument14278); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { expecting=-1; }

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON306); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "inferredGetterArgument"



    // $ANTLR start "typedMethodOrGetterArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2129:1: typedMethodOrGetterArgument returns [TypedArgument declaration] : ( type | DYNAMIC ) memberNameDeclaration ( ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) ) ;
    public TypedArgument typedMethodOrGetterArgument() throws RecognitionException {
        TypedArgument declaration = null;


        Token s1=null;
        Token s2=null;
        Token DYNAMIC308=null;
        Block b1 =null;

        Block b2 =null;

        StaticType type307 =null;

        Identifier memberNameDeclaration309 =null;

        ParameterList parameters310 =null;

        SpecifierExpression functionSpecifier311 =null;

        SpecifierExpression specifier312 =null;

        SpecifierExpression lazySpecifier313 =null;


         MethodArgument marg = new MethodArgument(null);
                    AttributeArgument aarg = new AttributeArgument(null); 
                    declaration =aarg; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2133:5: ( ( type | DYNAMIC ) memberNameDeclaration ( ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2133:7: ( type | DYNAMIC ) memberNameDeclaration ( ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2133:7: ( type | DYNAMIC )
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( ((LA195_0 >= LBRACE && LA195_0 <= LBRACKET)||LA195_0==PACKAGE||LA195_0==SMALLER_OP||LA195_0==UIDENTIFIER) ) {
                alt195=1;
            }
            else if ( (LA195_0==DYNAMIC) ) {
                alt195=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 195, 0, input);

                throw nvae;

            }
            switch (alt195) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2134:9: type
                    {
                    pushFollow(FOLLOW_type_in_typedMethodOrGetterArgument14346);
                    type307=type();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { marg.setType(type307);
                              aarg.setType(type307); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2138:9: DYNAMIC
                    {
                    DYNAMIC308=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_typedMethodOrGetterArgument14375); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { DynamicModifier dm = new DynamicModifier(DYNAMIC308);
                              marg.setType(dm);
                              aarg.setType(dm); }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberNameDeclaration_in_typedMethodOrGetterArgument14401);
            memberNameDeclaration309=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { marg.setIdentifier(memberNameDeclaration309);
                    aarg.setIdentifier(memberNameDeclaration309); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2146:7: ( ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) )
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==LPAREN) ) {
                alt201=1;
            }
            else if ( (LA201_0==COMPUTE||LA201_0==LBRACE||LA201_0==SEMICOLON||LA201_0==SPECIFY) ) {
                alt201=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 201, 0, input);

                throw nvae;

            }
            switch (alt201) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2147:9: ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON )
                    {
                    if ( state.backtracking==0 ) { declaration = marg; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2148:9: ( parameters )+
                    int cnt196=0;
                    loop196:
                    do {
                        int alt196=2;
                        int LA196_0 = input.LA(1);

                        if ( (LA196_0==LPAREN) ) {
                            alt196=1;
                        }


                        switch (alt196) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2149:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_typedMethodOrGetterArgument14449);
                    	    parameters310=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { marg.addParameterList(parameters310); }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt196 >= 1 ) break loop196;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(196, input);
                                throw eee;
                        }
                        cnt196++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2152:9: (b1= block | ( functionSpecifier )? s1= SEMICOLON )
                    int alt198=2;
                    int LA198_0 = input.LA(1);

                    if ( (LA198_0==LBRACE) ) {
                        alt198=1;
                    }
                    else if ( (LA198_0==COMPUTE||LA198_0==SEMICOLON||LA198_0==SPECIFY) ) {
                        alt198=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 198, 0, input);

                        throw nvae;

                    }
                    switch (alt198) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2153:11: b1= block
                            {
                            pushFollow(FOLLOW_block_in_typedMethodOrGetterArgument14496);
                            b1=block();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { marg.setBlock(b1); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2156:11: ( functionSpecifier )? s1= SEMICOLON
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2156:11: ( functionSpecifier )?
                            int alt197=2;
                            int LA197_0 = input.LA(1);

                            if ( (LA197_0==COMPUTE||LA197_0==SPECIFY) ) {
                                alt197=1;
                            }
                            switch (alt197) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2157:13: functionSpecifier
                                    {
                                    pushFollow(FOLLOW_functionSpecifier_in_typedMethodOrGetterArgument14545);
                                    functionSpecifier311=functionSpecifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { marg.setSpecifierExpression(functionSpecifier311); }

                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                            s1=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument14598); if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { expecting=-1; }

                            if ( state.backtracking==0 ) { declaration.setEndToken(s1); }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2166:9: (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON )
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2166:9: (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON )
                    int alt200=2;
                    int LA200_0 = input.LA(1);

                    if ( (LA200_0==LBRACE) ) {
                        alt200=1;
                    }
                    else if ( (LA200_0==COMPUTE||LA200_0==SEMICOLON||LA200_0==SPECIFY) ) {
                        alt200=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 200, 0, input);

                        throw nvae;

                    }
                    switch (alt200) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2167:11: b2= block
                            {
                            pushFollow(FOLLOW_block_in_typedMethodOrGetterArgument14664);
                            b2=block();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { aarg.setBlock(b2); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2170:11: ( specifier | lazySpecifier )? s2= SEMICOLON
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2170:11: ( specifier | lazySpecifier )?
                            int alt199=3;
                            int LA199_0 = input.LA(1);

                            if ( (LA199_0==SPECIFY) ) {
                                alt199=1;
                            }
                            else if ( (LA199_0==COMPUTE) ) {
                                alt199=2;
                            }
                            switch (alt199) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2171:13: specifier
                                    {
                                    pushFollow(FOLLOW_specifier_in_typedMethodOrGetterArgument14713);
                                    specifier312=specifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { aarg.setSpecifierExpression(specifier312); }

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2174:13: lazySpecifier
                                    {
                                    pushFollow(FOLLOW_lazySpecifier_in_typedMethodOrGetterArgument14755);
                                    lazySpecifier313=lazySpecifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { aarg.setSpecifierExpression(lazySpecifier313); }

                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                            s2=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument14809); if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { expecting=-1; }

                            if ( state.backtracking==0 ) { declaration.setEndToken(s2); }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "typedMethodOrGetterArgument"



    // $ANTLR start "untypedMethodOrGetterArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2185:1: untypedMethodOrGetterArgument returns [TypedArgument declaration] : memberName ( ( parameters )+ ( functionSpecifier ) | lazySpecifier ) SEMICOLON ;
    public TypedArgument untypedMethodOrGetterArgument() throws RecognitionException {
        TypedArgument declaration = null;


        Token SEMICOLON318=null;
        Identifier memberName314 =null;

        ParameterList parameters315 =null;

        SpecifierExpression functionSpecifier316 =null;

        SpecifierExpression lazySpecifier317 =null;


         MethodArgument marg = new MethodArgument(null);
                    marg.setType(new FunctionModifier(null));
                    AttributeArgument aarg = new AttributeArgument(null);
                    aarg.setType(new ValueModifier(null));
                    declaration =aarg; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2191:5: ( memberName ( ( parameters )+ ( functionSpecifier ) | lazySpecifier ) SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2191:7: memberName ( ( parameters )+ ( functionSpecifier ) | lazySpecifier ) SEMICOLON
            {
            pushFollow(FOLLOW_memberName_in_untypedMethodOrGetterArgument14881);
            memberName314=memberName();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { marg.setIdentifier(memberName314);
                    aarg.setIdentifier(memberName314); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2194:7: ( ( parameters )+ ( functionSpecifier ) | lazySpecifier )
            int alt203=2;
            int LA203_0 = input.LA(1);

            if ( (LA203_0==LPAREN) ) {
                alt203=1;
            }
            else if ( (LA203_0==COMPUTE) ) {
                alt203=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 203, 0, input);

                throw nvae;

            }
            switch (alt203) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2195:9: ( parameters )+ ( functionSpecifier )
                    {
                    if ( state.backtracking==0 ) { declaration = marg; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2196:9: ( parameters )+
                    int cnt202=0;
                    loop202:
                    do {
                        int alt202=2;
                        int LA202_0 = input.LA(1);

                        if ( (LA202_0==LPAREN) ) {
                            alt202=1;
                        }


                        switch (alt202) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2197:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_untypedMethodOrGetterArgument14930);
                    	    parameters315=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { marg.addParameterList(parameters315); }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt202 >= 1 ) break loop202;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(202, input);
                                throw eee;
                        }
                        cnt202++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2200:9: ( functionSpecifier )
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2201:11: functionSpecifier
                    {
                    pushFollow(FOLLOW_functionSpecifier_in_untypedMethodOrGetterArgument14975);
                    functionSpecifier316=functionSpecifier();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { marg.setSpecifierExpression(functionSpecifier316); }

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2209:11: lazySpecifier
                    {
                    pushFollow(FOLLOW_lazySpecifier_in_untypedMethodOrGetterArgument15053);
                    lazySpecifier317=lazySpecifier();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { aarg.setSpecifierExpression(lazySpecifier317); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON318=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_untypedMethodOrGetterArgument15099); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { expecting=-1; }

            if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON318); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "untypedMethodOrGetterArgument"



    // $ANTLR start "namedArgumentDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2219:1: namedArgumentDeclaration returns [NamedArgument declaration] : ( objectArgument | typedMethodOrGetterArgument | voidOrInferredMethodArgument | inferredGetterArgument | untypedMethodOrGetterArgument );
    public NamedArgument namedArgumentDeclaration() throws RecognitionException {
        NamedArgument declaration = null;


        ObjectArgument objectArgument319 =null;

        TypedArgument typedMethodOrGetterArgument320 =null;

        MethodArgument voidOrInferredMethodArgument321 =null;

        AttributeArgument inferredGetterArgument322 =null;

        TypedArgument untypedMethodOrGetterArgument323 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2220:5: ( objectArgument | typedMethodOrGetterArgument | voidOrInferredMethodArgument | inferredGetterArgument | untypedMethodOrGetterArgument )
            int alt204=5;
            switch ( input.LA(1) ) {
            case OBJECT_DEFINITION:
                {
                alt204=1;
                }
                break;
            case DYNAMIC:
            case LBRACE:
            case LBRACKET:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt204=2;
                }
                break;
            case FUNCTION_MODIFIER:
            case VOID_MODIFIER:
                {
                alt204=3;
                }
                break;
            case VALUE_MODIFIER:
                {
                alt204=4;
                }
                break;
            case LIDENTIFIER:
                {
                alt204=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 204, 0, input);

                throw nvae;

            }

            switch (alt204) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2220:7: objectArgument
                    {
                    pushFollow(FOLLOW_objectArgument_in_namedArgumentDeclaration15136);
                    objectArgument319=objectArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =objectArgument319; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2222:7: typedMethodOrGetterArgument
                    {
                    pushFollow(FOLLOW_typedMethodOrGetterArgument_in_namedArgumentDeclaration15152);
                    typedMethodOrGetterArgument320=typedMethodOrGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =typedMethodOrGetterArgument320; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2224:7: voidOrInferredMethodArgument
                    {
                    pushFollow(FOLLOW_voidOrInferredMethodArgument_in_namedArgumentDeclaration15168);
                    voidOrInferredMethodArgument321=voidOrInferredMethodArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =voidOrInferredMethodArgument321; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2226:7: inferredGetterArgument
                    {
                    pushFollow(FOLLOW_inferredGetterArgument_in_namedArgumentDeclaration15184);
                    inferredGetterArgument322=inferredGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =inferredGetterArgument322; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2228:7: untypedMethodOrGetterArgument
                    {
                    pushFollow(FOLLOW_untypedMethodOrGetterArgument_in_namedArgumentDeclaration15200);
                    untypedMethodOrGetterArgument323=untypedMethodOrGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =untypedMethodOrGetterArgument323; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "namedArgumentDeclaration"



    // $ANTLR start "namedArgumentStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2235:1: namedArgumentStart : compilerAnnotations ( specificationStart | declarationStart ) ;
    public void namedArgumentStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2236:5: ( compilerAnnotations ( specificationStart | declarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2236:7: compilerAnnotations ( specificationStart | declarationStart )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_namedArgumentStart15228);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2237:7: ( specificationStart | declarationStart )
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( (LA205_0==LIDENTIFIER) ) {
                alt205=1;
            }
            else if ( (LA205_0==ALIAS||LA205_0==ASSIGN||LA205_0==CLASS_DEFINITION||LA205_0==DYNAMIC||LA205_0==FUNCTION_MODIFIER||LA205_0==INTERFACE_DEFINITION||(LA205_0 >= LBRACE && LA205_0 <= LBRACKET)||LA205_0==NEW||LA205_0==OBJECT_DEFINITION||LA205_0==PACKAGE||LA205_0==SMALLER_OP||LA205_0==UIDENTIFIER||LA205_0==VALUE_MODIFIER||LA205_0==VOID_MODIFIER) ) {
                alt205=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 205, 0, input);

                throw nvae;

            }
            switch (alt205) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2237:8: specificationStart
                    {
                    pushFollow(FOLLOW_specificationStart_in_namedArgumentStart15238);
                    specificationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2237:29: declarationStart
                    {
                    pushFollow(FOLLOW_declarationStart_in_namedArgumentStart15242);
                    declarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "namedArgumentStart"



    // $ANTLR start "namedAnnotationArgumentsStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2240:1: namedAnnotationArgumentsStart : LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE ) ;
    public void namedAnnotationArgumentsStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2241:5: ( LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2241:7: LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE )
            {
            match(input,LBRACE,FOLLOW_LBRACE_in_namedAnnotationArgumentsStart15260); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2241:14: ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE )
            int alt206=3;
            int LA206_0 = input.LA(1);

            if ( (LA206_0==COMPILER_ANNOTATION) ) {
                int LA206_1 = input.LA(2);

                if ( (synpred28_Ceylon()) ) {
                    alt206=1;
                }
                else if ( (true) ) {
                    alt206=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 206, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA206_0==LIDENTIFIER) ) {
                int LA206_2 = input.LA(2);

                if ( (synpred28_Ceylon()) ) {
                    alt206=1;
                }
                else if ( (true) ) {
                    alt206=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 206, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA206_0==VALUE_MODIFIER) && (synpred28_Ceylon())) {
                alt206=1;
            }
            else if ( (LA206_0==FUNCTION_MODIFIER) && (synpred28_Ceylon())) {
                alt206=1;
            }
            else if ( (LA206_0==VOID_MODIFIER) && (synpred28_Ceylon())) {
                alt206=1;
            }
            else if ( (LA206_0==ASSIGN) && (synpred28_Ceylon())) {
                alt206=1;
            }
            else if ( (LA206_0==INTERFACE_DEFINITION) && (synpred28_Ceylon())) {
                alt206=1;
            }
            else if ( (LA206_0==CLASS_DEFINITION) && (synpred28_Ceylon())) {
                alt206=1;
            }
            else if ( (LA206_0==OBJECT_DEFINITION) ) {
                int LA206_9 = input.LA(2);

                if ( (synpred28_Ceylon()) ) {
                    alt206=1;
                }
                else if ( (true) ) {
                    alt206=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 206, 9, input);

                    throw nvae;

                }
            }
            else if ( (LA206_0==NEW) && (synpred28_Ceylon())) {
                alt206=1;
            }
            else if ( (LA206_0==ALIAS) && (synpred28_Ceylon())) {
                alt206=1;
            }
            else if ( (LA206_0==UIDENTIFIER) ) {
                int LA206_12 = input.LA(2);

                if ( (synpred28_Ceylon()) ) {
                    alt206=1;
                }
                else if ( (true) ) {
                    alt206=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 206, 12, input);

                    throw nvae;

                }
            }
            else if ( (LA206_0==SMALLER_OP) && (synpred28_Ceylon())) {
                alt206=1;
            }
            else if ( (LA206_0==PACKAGE) ) {
                int LA206_14 = input.LA(2);

                if ( (synpred28_Ceylon()) ) {
                    alt206=1;
                }
                else if ( (true) ) {
                    alt206=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 206, 14, input);

                    throw nvae;

                }
            }
            else if ( (LA206_0==LBRACKET) ) {
                int LA206_15 = input.LA(2);

                if ( (synpred28_Ceylon()) ) {
                    alt206=1;
                }
                else if ( (true) ) {
                    alt206=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 206, 15, input);

                    throw nvae;

                }
            }
            else if ( (LA206_0==LBRACE) ) {
                int LA206_16 = input.LA(2);

                if ( (synpred28_Ceylon()) ) {
                    alt206=1;
                }
                else if ( (true) ) {
                    alt206=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 206, 16, input);

                    throw nvae;

                }
            }
            else if ( (LA206_0==DYNAMIC) ) {
                int LA206_17 = input.LA(2);

                if ( (synpred28_Ceylon()) ) {
                    alt206=1;
                }
                else if ( (true) ) {
                    alt206=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 206, 17, input);

                    throw nvae;

                }
            }
            else if ( (LA206_0==BACKTICK||LA206_0==CHAR_LITERAL||(LA206_0 >= DECREMENT_OP && LA206_0 <= DIFFERENCE_OP)||LA206_0==FLOAT_LITERAL||LA206_0==INCREMENT_OP||LA206_0==LPAREN||LA206_0==NATURAL_LITERAL||LA206_0==NOT_OP||LA206_0==OUTER||LA206_0==STRING_LITERAL||LA206_0==STRING_START||(LA206_0 >= SUM_OP && LA206_0 <= SUPER)||LA206_0==THIS||LA206_0==VERBATIM_STRING) ) {
                alt206=2;
            }
            else if ( (LA206_0==RBRACE) ) {
                alt206=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 206, 0, input);

                throw nvae;

            }
            switch (alt206) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2241:15: ( namedArgumentStart )=> namedArgumentStart
                    {
                    pushFollow(FOLLOW_namedArgumentStart_in_namedAnnotationArgumentsStart15267);
                    namedArgumentStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2241:58: iterableArgumentStart
                    {
                    pushFollow(FOLLOW_iterableArgumentStart_in_namedAnnotationArgumentsStart15271);
                    iterableArgumentStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2241:82: RBRACE
                    {
                    match(input,RBRACE,FOLLOW_RBRACE_in_namedAnnotationArgumentsStart15275); if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "namedAnnotationArgumentsStart"



    // $ANTLR start "iterableArgumentStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2244:1: iterableArgumentStart : compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE ) ;
    public void iterableArgumentStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2245:5: ( compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2245:7: compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_iterableArgumentStart15293);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_expression_in_iterableArgumentStart15295);
            expression();

            state._fsp--;
            if (state.failed) return ;

            if ( input.LA(1)==COMMA||input.LA(1)==RBRACE||input.LA(1)==SEMICOLON ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "iterableArgumentStart"



    // $ANTLR start "specificationStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2249:1: specificationStart : LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE ) ;
    public void specificationStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2250:5: ( LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2250:7: LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE )
            {
            match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_specificationStart15321); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2250:19: ( parameters )*
            loop207:
            do {
                int alt207=2;
                int LA207_0 = input.LA(1);

                if ( (LA207_0==LPAREN) ) {
                    alt207=1;
                }


                switch (alt207) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2250:19: parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_specificationStart15323);
            	    parameters();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop207;
                }
            } while (true);


            if ( input.LA(1)==COMPUTE||input.LA(1)==SPECIFY ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "specificationStart"



    // $ANTLR start "parExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2253:1: parExpression returns [Expression expression] : LPAREN functionOrExpression RPAREN ;
    public Expression parExpression() throws RecognitionException {
        Expression expression = null;


        Token LPAREN324=null;
        Token RPAREN326=null;
        Expression functionOrExpression325 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2254:5: ( LPAREN functionOrExpression RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2254:7: LPAREN functionOrExpression RPAREN
            {
            LPAREN324=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parExpression15352); if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression = new Expression(LPAREN324); }

            pushFollow(FOLLOW_functionOrExpression_in_parExpression15369);
            functionOrExpression325=functionOrExpression();

            state._fsp--;
            if (state.failed) return expression;

            if ( state.backtracking==0 ) { if (functionOrExpression325!=null)
                        expression.setTerm(functionOrExpression325.getTerm()); }

            RPAREN326=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parExpression15385); if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression.setEndToken(RPAREN326); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "parExpression"



    // $ANTLR start "positionalArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2263:1: positionalArguments returns [PositionalArgumentList positionalArgumentList] : LPAREN (sa= sequencedArgument )? RPAREN ;
    public PositionalArgumentList positionalArguments() throws RecognitionException {
        PositionalArgumentList positionalArgumentList = null;


        Token LPAREN327=null;
        Token RPAREN328=null;
        SequencedArgument sa =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2264:5: ( LPAREN (sa= sequencedArgument )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2264:7: LPAREN (sa= sequencedArgument )? RPAREN
            {
            LPAREN327=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_positionalArguments15422); if (state.failed) return positionalArgumentList;

            if ( state.backtracking==0 ) { positionalArgumentList = new PositionalArgumentList(LPAREN327); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2266:7: (sa= sequencedArgument )?
            int alt208=2;
            int LA208_0 = input.LA(1);

            if ( (LA208_0==ALIAS||(LA208_0 >= ASSERT && LA208_0 <= ASSIGN)||(LA208_0 >= BACKTICK && LA208_0 <= BREAK)||(LA208_0 >= CHAR_LITERAL && LA208_0 <= CLASS_DEFINITION)||LA208_0==COMPILER_ANNOTATION||LA208_0==CONTINUE||(LA208_0 >= DECREMENT_OP && LA208_0 <= DIFFERENCE_OP)||LA208_0==DYNAMIC||(LA208_0 >= FLOAT_LITERAL && LA208_0 <= FUNCTION_MODIFIER)||(LA208_0 >= IF_CLAUSE && LA208_0 <= INTERFACE_DEFINITION)||LA208_0==IN_OP||(LA208_0 >= LBRACE && LA208_0 <= LIDENTIFIER)||LA208_0==LPAREN||LA208_0==MODULE||(LA208_0 >= NATURAL_LITERAL && LA208_0 <= NEW)||(LA208_0 >= NOT_OP && LA208_0 <= OBJECT_DEFINITION)||(LA208_0 >= OUT && LA208_0 <= PACKAGE)||LA208_0==PRODUCT_OP||LA208_0==RETURN||(LA208_0 >= SEMICOLON && LA208_0 <= SMALLER_OP)||LA208_0==STRING_LITERAL||LA208_0==STRING_START||(LA208_0 >= SUM_OP && LA208_0 <= SWITCH_CLAUSE)||(LA208_0 >= THIS && LA208_0 <= UIDENTIFIER)||(LA208_0 >= VALUE_MODIFIER && LA208_0 <= WHILE_CLAUSE)) ) {
                alt208=1;
            }
            switch (alt208) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2267:9: sa= sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_positionalArguments15451);
                    sa=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return positionalArgumentList;

                    if ( state.backtracking==0 ) { if (sa!=null) {
                                  for (PositionalArgument pa: sa.getPositionalArguments())
                                      positionalArgumentList.addPositionalArgument(pa);
                                  //TODO: this is really nasty, PositionalArgumentList should have
                                  //      or be a SequencedArgument, not copy its PositionalArguments!
                                  positionalArgumentList.setEndToken(sa.getMainEndToken()); } }

                    }
                    break;

            }


            RPAREN328=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_positionalArguments15478); if (state.failed) return positionalArgumentList;

            if ( state.backtracking==0 ) { positionalArgumentList.setEndToken(RPAREN328); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return positionalArgumentList;
    }
    // $ANTLR end "positionalArguments"



    // $ANTLR start "positionalArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2279:1: positionalArgument returns [ListedArgument positionalArgument] : functionOrExpression ;
    public ListedArgument positionalArgument() throws RecognitionException {
        ListedArgument positionalArgument = null;


        Expression functionOrExpression329 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2280:5: ( functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2280:7: functionOrExpression
            {
            if ( state.backtracking==0 ) { positionalArgument = new ListedArgument(null); }

            pushFollow(FOLLOW_functionOrExpression_in_positionalArgument15515);
            functionOrExpression329=functionOrExpression();

            state._fsp--;
            if (state.failed) return positionalArgument;

            if ( state.backtracking==0 ) { positionalArgument.setExpression(functionOrExpression329); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return positionalArgument;
    }
    // $ANTLR end "positionalArgument"



    // $ANTLR start "spreadArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2285:1: spreadArgument returns [SpreadArgument positionalArgument] : PRODUCT_OP unionExpression ;
    public SpreadArgument spreadArgument() throws RecognitionException {
        SpreadArgument positionalArgument = null;


        Token PRODUCT_OP330=null;
        Term unionExpression331 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2286:5: ( PRODUCT_OP unionExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2286:7: PRODUCT_OP unionExpression
            {
            PRODUCT_OP330=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_spreadArgument15544); if (state.failed) return positionalArgument;

            if ( state.backtracking==0 ) { positionalArgument = new SpreadArgument(PRODUCT_OP330); }

            pushFollow(FOLLOW_unionExpression_in_spreadArgument15560);
            unionExpression331=unionExpression();

            state._fsp--;
            if (state.failed) return positionalArgument;

            if ( state.backtracking==0 ) { Expression e = new Expression(null);
                    e.setTerm(unionExpression331);
                    positionalArgument.setExpression(e); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return positionalArgument;
    }
    // $ANTLR end "spreadArgument"



    // $ANTLR start "anonParametersStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2294:1: anonParametersStart : LPAREN ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE ) ) | compilerAnnotations annotatedDeclarationStart ) ;
    public void anonParametersStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2295:5: ( LPAREN ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE ) ) | compilerAnnotations annotatedDeclarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2295:7: LPAREN ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE ) ) | compilerAnnotations annotatedDeclarationStart )
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_anonParametersStart15585); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2296:5: ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE ) ) | compilerAnnotations annotatedDeclarationStart )
            int alt210=3;
            switch ( input.LA(1) ) {
            case RPAREN:
                {
                alt210=1;
                }
                break;
            case LIDENTIFIER:
                {
                int LA210_2 = input.LA(2);

                if ( (LA210_2==COMMA||LA210_2==RPAREN) ) {
                    alt210=2;
                }
                else if ( (LA210_2==ALIAS||LA210_2==ASSIGN||LA210_2==CLASS_DEFINITION||LA210_2==DYNAMIC||LA210_2==FUNCTION_MODIFIER||LA210_2==INTERFACE_DEFINITION||(LA210_2 >= LBRACE && LA210_2 <= LBRACKET)||LA210_2==LIDENTIFIER||LA210_2==LPAREN||LA210_2==NEW||LA210_2==OBJECT_DEFINITION||LA210_2==PACKAGE||LA210_2==SMALLER_OP||LA210_2==UIDENTIFIER||LA210_2==VALUE_MODIFIER||LA210_2==VOID_MODIFIER) ) {
                    alt210=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 210, 2, input);

                    throw nvae;

                }
                }
                break;
            case ALIAS:
            case ASSIGN:
            case CLASS_DEFINITION:
            case COMPILER_ANNOTATION:
            case DYNAMIC:
            case FUNCTION_MODIFIER:
            case INTERFACE_DEFINITION:
            case LBRACE:
            case LBRACKET:
            case NEW:
            case OBJECT_DEFINITION:
            case PACKAGE:
            case SMALLER_OP:
            case STRING_LITERAL:
            case UIDENTIFIER:
            case VALUE_MODIFIER:
            case VERBATIM_STRING:
            case VOID_MODIFIER:
                {
                alt210=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 210, 0, input);

                throw nvae;

            }

            switch (alt210) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2297:7: RPAREN
                    {
                    match(input,RPAREN,FOLLOW_RPAREN_in_anonParametersStart15601); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2298:7: LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE ) )
                    {
                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_anonParametersStart15609); if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2298:19: ( COMMA | RPAREN ( COMPUTE | LBRACE ) )
                    int alt209=2;
                    int LA209_0 = input.LA(1);

                    if ( (LA209_0==COMMA) ) {
                        alt209=1;
                    }
                    else if ( (LA209_0==RPAREN) ) {
                        alt209=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 209, 0, input);

                        throw nvae;

                    }
                    switch (alt209) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2298:20: COMMA
                            {
                            match(input,COMMA,FOLLOW_COMMA_in_anonParametersStart15612); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2298:28: RPAREN ( COMPUTE | LBRACE )
                            {
                            match(input,RPAREN,FOLLOW_RPAREN_in_anonParametersStart15616); if (state.failed) return ;

                            if ( input.LA(1)==COMPUTE||input.LA(1)==LBRACE ) {
                                input.consume();
                                state.errorRecovery=false;
                                state.failed=false;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return ;}
                                MismatchedSetException mse = new MismatchedSetException(null,input);
                                throw mse;
                            }


                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2299:7: compilerAnnotations annotatedDeclarationStart
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_anonParametersStart15632);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    pushFollow(FOLLOW_annotatedDeclarationStart_in_anonParametersStart15634);
                    annotatedDeclarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "anonParametersStart"



    // $ANTLR start "nonemptyParametersStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2303:1: nonemptyParametersStart : LPAREN compilerAnnotations annotatedDeclarationStart ;
    public void nonemptyParametersStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2304:5: ( LPAREN compilerAnnotations annotatedDeclarationStart )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2304:7: LPAREN compilerAnnotations annotatedDeclarationStart
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_nonemptyParametersStart15658); if (state.failed) return ;

            pushFollow(FOLLOW_compilerAnnotations_in_nonemptyParametersStart15660);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_annotatedDeclarationStart_in_nonemptyParametersStart15662);
            annotatedDeclarationStart();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "nonemptyParametersStart"



    // $ANTLR start "functionOrExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2307:1: functionOrExpression returns [Expression expression] : ( ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=> anonymousFunction | let | ifExpression | switchExpression |e= expression );
    public Expression functionOrExpression() throws RecognitionException {
        Expression expression = null;


        Expression e =null;

        FunctionArgument anonymousFunction332 =null;

        LetExpression let333 =null;

        IfExpression ifExpression334 =null;

        SwitchExpression switchExpression335 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2308:5: ( ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=> anonymousFunction | let | ifExpression | switchExpression |e= expression )
            int alt211=5;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==FUNCTION_MODIFIER) && (synpred29_Ceylon())) {
                alt211=1;
            }
            else if ( (LA211_0==VOID_MODIFIER) && (synpred29_Ceylon())) {
                alt211=1;
            }
            else if ( (LA211_0==LPAREN) ) {
                int LA211_3 = input.LA(2);

                if ( (synpred29_Ceylon()) ) {
                    alt211=1;
                }
                else if ( (true) ) {
                    alt211=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return expression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 211, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA211_0==LET) ) {
                alt211=2;
            }
            else if ( (LA211_0==IF_CLAUSE) ) {
                alt211=3;
            }
            else if ( (LA211_0==SWITCH_CLAUSE) ) {
                alt211=4;
            }
            else if ( (LA211_0==BACKTICK||LA211_0==CHAR_LITERAL||(LA211_0 >= DECREMENT_OP && LA211_0 <= DIFFERENCE_OP)||LA211_0==DYNAMIC||LA211_0==FLOAT_LITERAL||LA211_0==INCREMENT_OP||(LA211_0 >= LBRACE && LA211_0 <= LBRACKET)||LA211_0==LIDENTIFIER||LA211_0==NATURAL_LITERAL||(LA211_0 >= NOT_OP && LA211_0 <= OBJECT_DEFINITION)||(LA211_0 >= OUTER && LA211_0 <= PACKAGE)||LA211_0==STRING_LITERAL||LA211_0==STRING_START||(LA211_0 >= SUM_OP && LA211_0 <= SUPER)||LA211_0==THIS||LA211_0==UIDENTIFIER||LA211_0==VERBATIM_STRING) ) {
                alt211=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return expression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 211, 0, input);

                throw nvae;

            }
            switch (alt211) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2308:7: ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=> anonymousFunction
                    {
                    pushFollow(FOLLOW_anonymousFunction_in_functionOrExpression15699);
                    anonymousFunction332=anonymousFunction();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(anonymousFunction332); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2312:7: let
                    {
                    pushFollow(FOLLOW_let_in_functionOrExpression15715);
                    let333=let();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(let333); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2315:7: ifExpression
                    {
                    pushFollow(FOLLOW_ifExpression_in_functionOrExpression15731);
                    ifExpression334=ifExpression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(ifExpression334); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2318:7: switchExpression
                    {
                    pushFollow(FOLLOW_switchExpression_in_functionOrExpression15747);
                    switchExpression335=switchExpression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null); 
                            expression.setTerm(switchExpression335); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2321:7: e= expression
                    {
                    pushFollow(FOLLOW_expression_in_functionOrExpression15765);
                    e=expression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = e; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "functionOrExpression"



    // $ANTLR start "let"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2325:1: let returns [LetExpression let] : letClause ;
    public LetExpression let() throws RecognitionException {
        LetExpression let = null;


        LetClause letClause336 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2326:5: ( letClause )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2326:7: letClause
            {
            pushFollow(FOLLOW_letClause_in_let15794);
            letClause336=letClause();

            state._fsp--;
            if (state.failed) return let;

            if ( state.backtracking==0 ) { let = new LetExpression(null);
                    let.setLetClause(letClause336); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return let;
    }
    // $ANTLR end "let"



    // $ANTLR start "patternStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2331:1: patternStart : ( ( variable ENTRY_OP )=> variable ENTRY_OP | tuplePatternStart );
    public void patternStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2332:5: ( ( variable ENTRY_OP )=> variable ENTRY_OP | tuplePatternStart )
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( (LA212_0==COMPILER_ANNOTATION) && (synpred30_Ceylon())) {
                alt212=1;
            }
            else if ( (LA212_0==UIDENTIFIER) && (synpred30_Ceylon())) {
                alt212=1;
            }
            else if ( (LA212_0==SMALLER_OP) && (synpred30_Ceylon())) {
                alt212=1;
            }
            else if ( (LA212_0==PACKAGE) && (synpred30_Ceylon())) {
                alt212=1;
            }
            else if ( (LA212_0==LBRACKET) ) {
                int LA212_5 = input.LA(2);

                if ( (synpred30_Ceylon()) ) {
                    alt212=1;
                }
                else if ( (true) ) {
                    alt212=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 212, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA212_0==LBRACE) && (synpred30_Ceylon())) {
                alt212=1;
            }
            else if ( (LA212_0==VOID_MODIFIER) && (synpred30_Ceylon())) {
                alt212=1;
            }
            else if ( (LA212_0==FUNCTION_MODIFIER) && (synpred30_Ceylon())) {
                alt212=1;
            }
            else if ( (LA212_0==VALUE_MODIFIER) && (synpred30_Ceylon())) {
                alt212=1;
            }
            else if ( (LA212_0==LIDENTIFIER) && (synpred30_Ceylon())) {
                alt212=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 212, 0, input);

                throw nvae;

            }
            switch (alt212) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2332:7: ( variable ENTRY_OP )=> variable ENTRY_OP
                    {
                    pushFollow(FOLLOW_variable_in_patternStart15827);
                    variable();

                    state._fsp--;
                    if (state.failed) return ;

                    match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_patternStart15829); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2333:7: tuplePatternStart
                    {
                    pushFollow(FOLLOW_tuplePatternStart_in_patternStart15840);
                    tuplePatternStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "patternStart"



    // $ANTLR start "letVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2336:1: letVariable returns [Statement statement] : ( ( patternStart )=> pattern | variable ) ( specifier )? ;
    public Statement letVariable() throws RecognitionException {
        Statement statement = null;


        Pattern pattern337 =null;

        Variable variable338 =null;

        SpecifierExpression specifier339 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2337:5: ( ( ( patternStart )=> pattern | variable ) ( specifier )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2337:7: ( ( patternStart )=> pattern | variable ) ( specifier )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2337:7: ( ( patternStart )=> pattern | variable )
            int alt213=2;
            switch ( input.LA(1) ) {
            case LBRACKET:
                {
                int LA213_1 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt213=1;
                }
                else if ( (true) ) {
                    alt213=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 213, 1, input);

                    throw nvae;

                }
                }
                break;
            case COMPILER_ANNOTATION:
                {
                int LA213_2 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt213=1;
                }
                else if ( (true) ) {
                    alt213=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 213, 2, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA213_3 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt213=1;
                }
                else if ( (true) ) {
                    alt213=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 213, 3, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA213_4 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt213=1;
                }
                else if ( (true) ) {
                    alt213=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 213, 4, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA213_5 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt213=1;
                }
                else if ( (true) ) {
                    alt213=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 213, 5, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA213_6 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt213=1;
                }
                else if ( (true) ) {
                    alt213=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 213, 6, input);

                    throw nvae;

                }
                }
                break;
            case VOID_MODIFIER:
                {
                int LA213_7 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt213=1;
                }
                else if ( (true) ) {
                    alt213=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 213, 7, input);

                    throw nvae;

                }
                }
                break;
            case FUNCTION_MODIFIER:
                {
                int LA213_8 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt213=1;
                }
                else if ( (true) ) {
                    alt213=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 213, 8, input);

                    throw nvae;

                }
                }
                break;
            case VALUE_MODIFIER:
                {
                int LA213_9 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt213=1;
                }
                else if ( (true) ) {
                    alt213=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 213, 9, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA213_10 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt213=1;
                }
                else if ( (true) ) {
                    alt213=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 213, 10, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 213, 0, input);

                throw nvae;

            }

            switch (alt213) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2338:9: ( patternStart )=> pattern
                    {
                    pushFollow(FOLLOW_pattern_in_letVariable15877);
                    pattern337=pattern();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { Destructure d = new Destructure(null);
                              d.setPattern(pattern337);
                              statement = d; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2343:9: variable
                    {
                    pushFollow(FOLLOW_variable_in_letVariable15905);
                    variable338=variable();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =variable338; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2346:7: ( specifier )?
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==SPECIFY) ) {
                alt214=1;
            }
            switch (alt214) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2347:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_letVariable15941);
                    specifier339=specifier();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { if (statement instanceof Destructure)
                                ((Destructure) statement).setSpecifierExpression(specifier339);
                              else if (statement instanceof Variable)
                                ((Variable) statement).setSpecifierExpression(specifier339); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "letVariable"



    // $ANTLR start "letClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2355:1: letClause returns [LetClause letClause] : LET LPAREN (v1= letVariable ( COMMA v2= letVariable )* )? RPAREN conditionalBranch ;
    public LetClause letClause() throws RecognitionException {
        LetClause letClause = null;


        Token LET340=null;
        Token LPAREN341=null;
        Token COMMA342=null;
        Token RPAREN343=null;
        Statement v1 =null;

        Statement v2 =null;

        Expression conditionalBranch344 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2356:5: ( LET LPAREN (v1= letVariable ( COMMA v2= letVariable )* )? RPAREN conditionalBranch )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2356:7: LET LPAREN (v1= letVariable ( COMMA v2= letVariable )* )? RPAREN conditionalBranch
            {
            LET340=(Token)match(input,LET,FOLLOW_LET_in_letClause15981); if (state.failed) return letClause;

            if ( state.backtracking==0 ) { letClause = new LetClause(LET340); }

            LPAREN341=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_letClause15997); if (state.failed) return letClause;

            if ( state.backtracking==0 ) { letClause.setEndToken(LPAREN341); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2360:7: (v1= letVariable ( COMMA v2= letVariable )* )?
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==COMPILER_ANNOTATION||LA216_0==FUNCTION_MODIFIER||(LA216_0 >= LBRACE && LA216_0 <= LBRACKET)||LA216_0==LIDENTIFIER||LA216_0==PACKAGE||LA216_0==SMALLER_OP||LA216_0==UIDENTIFIER||LA216_0==VALUE_MODIFIER||LA216_0==VOID_MODIFIER) ) {
                alt216=1;
            }
            switch (alt216) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2361:9: v1= letVariable ( COMMA v2= letVariable )*
                    {
                    pushFollow(FOLLOW_letVariable_in_letClause16025);
                    v1=letVariable();

                    state._fsp--;
                    if (state.failed) return letClause;

                    if ( state.backtracking==0 ) { letClause.setEndToken(null);
                              letClause.addVariable(v1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2364:9: ( COMMA v2= letVariable )*
                    loop215:
                    do {
                        int alt215=2;
                        int LA215_0 = input.LA(1);

                        if ( (LA215_0==COMMA) ) {
                            alt215=1;
                        }


                        switch (alt215) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2365:11: COMMA v2= letVariable
                    	    {
                    	    COMMA342=(Token)match(input,COMMA,FOLLOW_COMMA_in_letClause16057); if (state.failed) return letClause;

                    	    if ( state.backtracking==0 ) { letClause.setEndToken(COMMA342); }

                    	    pushFollow(FOLLOW_letVariable_in_letClause16083);
                    	    v2=letVariable();

                    	    state._fsp--;
                    	    if (state.failed) return letClause;

                    	    if ( state.backtracking==0 ) { letClause.setEndToken(null); 
                    	                letClause.addVariable(v2); }

                    	    }
                    	    break;

                    	default :
                    	    break loop215;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN343=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_letClause16123); if (state.failed) return letClause;

            if ( state.backtracking==0 ) { letClause.setEndToken(RPAREN343); }

            pushFollow(FOLLOW_conditionalBranch_in_letClause16139);
            conditionalBranch344=conditionalBranch();

            state._fsp--;
            if (state.failed) return letClause;

            if ( state.backtracking==0 ) { letClause.setExpression(conditionalBranch344); 
                    letClause.setEndToken(null); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return letClause;
    }
    // $ANTLR end "letClause"



    // $ANTLR start "switchExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2379:1: switchExpression returns [SwitchExpression term] : switchHeader caseExpressions ;
    public SwitchExpression switchExpression() throws RecognitionException {
        SwitchExpression term = null;


        SwitchClause switchHeader345 =null;

        SwitchCaseList caseExpressions346 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2380:5: ( switchHeader caseExpressions )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2380:7: switchHeader caseExpressions
            {
            pushFollow(FOLLOW_switchHeader_in_switchExpression16168);
            switchHeader345=switchHeader();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = new SwitchExpression(null);
                    term.setSwitchClause(switchHeader345); }

            pushFollow(FOLLOW_caseExpressions_in_switchExpression16184);
            caseExpressions346=caseExpressions();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term.setSwitchCaseList(caseExpressions346);
                    //TODO: huge copy/paste job from switchCaseElse 
                    Identifier id = null;
                    Switched sw = switchHeader345.getSwitched();
                    if (sw!=null) {
                      Expression ex = sw.getExpression();
                      if (ex!=null && ex.getTerm() instanceof BaseMemberExpression) {
                        id = ((BaseMemberExpression) ex.getTerm()).getIdentifier();
                      }
                      TypedDeclaration var = switchHeader345.getSwitched().getVariable();
                      if (var!=null) {
                        id = var.getIdentifier();
                      }
                    }
                    if (id!=null) {
                      for (CaseClause cc: caseExpressions346.getCaseClauses()) {
                        CaseItem item = cc.getCaseItem();
                        if (item instanceof IsCase) {
                          IsCase ic = (IsCase) item;
                          Variable v = new Variable(null);
                          v.setType(new SyntheticVariable(null));
                          v.setIdentifier(id);
                          SpecifierExpression se = new SpecifierExpression(null);
                          Expression e = new Expression(null);
                          BaseMemberExpression bme = new BaseMemberExpression(null);
                          bme.setIdentifier(id);
                          bme.setTypeArguments( new InferredTypeArguments(null) );
                          e.setTerm(bme);
                          se.setExpression(e);
                          v.setSpecifierExpression(se);
                          ic.setVariable(v);
                        }
                      } 
                      ElseClause ec = caseExpressions346.getElseClause();
                      if (ec!=null) {
                        Variable ev = new Variable(null);
                        ev.setType(new SyntheticVariable(null));
                        SpecifierExpression ese = new SpecifierExpression(null);
                        Expression ee = new Expression(null);
                        BaseMemberExpression ebme = new BaseMemberExpression(null);
                        ebme.setTypeArguments( new InferredTypeArguments(null) );
                        ee.setTerm(ebme);
                        ese.setExpression(ee);
                        ev.setSpecifierExpression(ese);
                        ec.setVariable(ev);
                        ebme.setIdentifier(id);
                        ev.setIdentifier(id);
                      }
                    } 
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "switchExpression"



    // $ANTLR start "caseExpressions"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2436:1: caseExpressions returns [SwitchCaseList switchCaseList] : ( caseExpression )+ ( defaultCaseExpression )? ;
    public SwitchCaseList caseExpressions() throws RecognitionException {
        SwitchCaseList switchCaseList = null;


        CaseClause caseExpression347 =null;

        ElseClause defaultCaseExpression348 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2437:5: ( ( caseExpression )+ ( defaultCaseExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2437:7: ( caseExpression )+ ( defaultCaseExpression )?
            {
            if ( state.backtracking==0 ) { switchCaseList = new SwitchCaseList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2438:7: ( caseExpression )+
            int cnt217=0;
            loop217:
            do {
                int alt217=2;
                int LA217_0 = input.LA(1);

                if ( (LA217_0==CASE_CLAUSE) ) {
                    alt217=1;
                }


                switch (alt217) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2439:9: caseExpression
            	    {
            	    pushFollow(FOLLOW_caseExpression_in_caseExpressions16231);
            	    caseExpression347=caseExpression();

            	    state._fsp--;
            	    if (state.failed) return switchCaseList;

            	    if ( state.backtracking==0 ) { switchCaseList.addCaseClause(caseExpression347); }

            	    }
            	    break;

            	default :
            	    if ( cnt217 >= 1 ) break loop217;
            	    if (state.backtracking>0) {state.failed=true; return switchCaseList;}
                        EarlyExitException eee =
                            new EarlyExitException(217, input);
                        throw eee;
                }
                cnt217++;
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2442:7: ( defaultCaseExpression )?
            int alt218=2;
            int LA218_0 = input.LA(1);

            if ( (LA218_0==ELSE_CLAUSE) ) {
                alt218=1;
            }
            switch (alt218) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2443:9: defaultCaseExpression
                    {
                    pushFollow(FOLLOW_defaultCaseExpression_in_caseExpressions16268);
                    defaultCaseExpression348=defaultCaseExpression();

                    state._fsp--;
                    if (state.failed) return switchCaseList;

                    if ( state.backtracking==0 ) { switchCaseList.setElseClause(defaultCaseExpression348); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return switchCaseList;
    }
    // $ANTLR end "caseExpressions"



    // $ANTLR start "caseExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2448:1: caseExpression returns [CaseClause clause] : CASE_CLAUSE caseItemList conditionalBranch ;
    public CaseClause caseExpression() throws RecognitionException {
        CaseClause clause = null;


        Token CASE_CLAUSE349=null;
        CaseItem caseItemList350 =null;

        Expression conditionalBranch351 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2449:5: ( CASE_CLAUSE caseItemList conditionalBranch )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2449:7: CASE_CLAUSE caseItemList conditionalBranch
            {
            CASE_CLAUSE349=(Token)match(input,CASE_CLAUSE,FOLLOW_CASE_CLAUSE_in_caseExpression16312); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new CaseClause(CASE_CLAUSE349); }

            pushFollow(FOLLOW_caseItemList_in_caseExpression16329);
            caseItemList350=caseItemList();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setCaseItem(caseItemList350); }

            pushFollow(FOLLOW_conditionalBranch_in_caseExpression16345);
            conditionalBranch351=conditionalBranch();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setExpression(conditionalBranch351); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "caseExpression"



    // $ANTLR start "defaultCaseExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2457:1: defaultCaseExpression returns [ElseClause clause] : ELSE_CLAUSE conditionalBranch ;
    public ElseClause defaultCaseExpression() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE352=null;
        Expression conditionalBranch353 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2458:5: ( ELSE_CLAUSE conditionalBranch )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2458:7: ELSE_CLAUSE conditionalBranch
            {
            ELSE_CLAUSE352=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_defaultCaseExpression16374); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE352); }

            pushFollow(FOLLOW_conditionalBranch_in_defaultCaseExpression16391);
            conditionalBranch353=conditionalBranch();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setExpression(conditionalBranch353); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "defaultCaseExpression"



    // $ANTLR start "ifExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2464:1: ifExpression returns [IfExpression term] : IF_CLAUSE thenElseClauses ;
    public IfExpression ifExpression() throws RecognitionException {
        IfExpression term = null;


        Token IF_CLAUSE354=null;
        PsiCompatibleCeylonParser.thenElseClauses_return thenElseClauses355 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2465:5: ( IF_CLAUSE thenElseClauses )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2465:7: IF_CLAUSE thenElseClauses
            {
            IF_CLAUSE354=(Token)match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_ifExpression16420); if (state.failed) return term;

            if ( state.backtracking==0 ) { term = new IfExpression(IF_CLAUSE354); }

            pushFollow(FOLLOW_thenElseClauses_in_ifExpression16436);
            thenElseClauses355=thenElseClauses();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { IfClause ic = (thenElseClauses355!=null?thenElseClauses355.ifClause:null);
                    ElseClause ec = (thenElseClauses355!=null?thenElseClauses355.elseClause:null);
                    ConditionList cl = (thenElseClauses355!=null?thenElseClauses355.conditionList:null);
                    term.setIfClause(ic);
                    term.setElseClause(ec);
                    if (cl!=null) {
                      if (ic==null) {
                        ic = new IfClause(null);
                        term.setIfClause(ic);
                      }
                      ic.setConditionList(cl); 
                      if (cl!=null) {
                        List<Condition> conditions = cl.getConditions();
                        if (conditions.size()==1) {
                          Condition c = conditions.get(0);
                          Identifier id = null;
                          Type t = null;
                          if (c instanceof ExistsOrNonemptyCondition) {
                            Statement s = ((ExistsOrNonemptyCondition)c).getVariable();
                            if (s instanceof Variable) {
                              Variable v = (Variable) s;
                              t = v.getType();
                              id = v.getIdentifier();
                            }
                          }
                          else if (c instanceof IsCondition) {
                            Variable v = (Variable) ((IsCondition)c).getVariable();
                            if (v!=null) {
                              t = v.getType();
                              id = v.getIdentifier();
                            }
                          }
                          if (id!=null && ec!=null && t instanceof SyntheticVariable) { 
                            Variable ev = new Variable(null);
                            ev.setType(new SyntheticVariable(null));
                            SpecifierExpression ese = new SpecifierExpression(null);
                            Expression ee = new Expression(null);
                            BaseMemberExpression ebme = new BaseMemberExpression(null);
                            ebme.setTypeArguments( new InferredTypeArguments(null) );
                            ee.setTerm(ebme);
                            ese.setExpression(ee);
                            ev.setSpecifierExpression(ese);
                            ec.setVariable(ev);
                            ev.setIdentifier(id);
                            ebme.setIdentifier(id);
                          }
                        }
                      }        
                    } 
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "ifExpression"



    // $ANTLR start "conditionalBranch"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2520:1: conditionalBranch returns [Expression expression] : ( ifExpression | let | disjunctionExpression );
    public Expression conditionalBranch() throws RecognitionException {
        Expression expression = null;


        IfExpression ifExpression356 =null;

        LetExpression let357 =null;

        Term disjunctionExpression358 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2521:5: ( ifExpression | let | disjunctionExpression )
            int alt219=3;
            switch ( input.LA(1) ) {
            case IF_CLAUSE:
                {
                alt219=1;
                }
                break;
            case LET:
                {
                alt219=2;
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case DYNAMIC:
            case FLOAT_LITERAL:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case NOT_OP:
            case OBJECT_DEFINITION:
            case OUTER:
            case PACKAGE:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
                {
                alt219=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return expression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 219, 0, input);

                throw nvae;

            }

            switch (alt219) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2521:7: ifExpression
                    {
                    pushFollow(FOLLOW_ifExpression_in_conditionalBranch16465);
                    ifExpression356=ifExpression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(ifExpression356); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2524:7: let
                    {
                    pushFollow(FOLLOW_let_in_conditionalBranch16481);
                    let357=let();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(let357); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2527:7: disjunctionExpression
                    {
                    pushFollow(FOLLOW_disjunctionExpression_in_conditionalBranch16497);
                    disjunctionExpression358=disjunctionExpression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(disjunctionExpression358); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "conditionalBranch"


    public static class thenElseClauses_return extends ParserRuleReturnScope {
        public IfClause ifClause;
        public ElseClause elseClause;
        public ConditionList conditionList;
    };


    // $ANTLR start "thenElseClauses"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2532:1: thenElseClauses returns [IfClause ifClause, ElseClause elseClause, ConditionList conditionList] : conditions THEN_CLAUSE cb1= conditionalBranch ELSE_CLAUSE cb2= conditionalBranch ;
    public PsiCompatibleCeylonParser.thenElseClauses_return thenElseClauses() throws RecognitionException {
        PsiCompatibleCeylonParser.thenElseClauses_return retval = new PsiCompatibleCeylonParser.thenElseClauses_return();
        retval.start = input.LT(1);


        Token THEN_CLAUSE360=null;
        Token ELSE_CLAUSE361=null;
        Expression cb1 =null;

        Expression cb2 =null;

        ConditionList conditions359 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2533:5: ( conditions THEN_CLAUSE cb1= conditionalBranch ELSE_CLAUSE cb2= conditionalBranch )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2533:7: conditions THEN_CLAUSE cb1= conditionalBranch ELSE_CLAUSE cb2= conditionalBranch
            {
            pushFollow(FOLLOW_conditions_in_thenElseClauses16526);
            conditions359=conditions();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.conditionList = conditions359; }

            THEN_CLAUSE360=(Token)match(input,THEN_CLAUSE,FOLLOW_THEN_CLAUSE_in_thenElseClauses16542); if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.ifClause = new IfClause(THEN_CLAUSE360); }

            pushFollow(FOLLOW_conditionalBranch_in_thenElseClauses16560);
            cb1=conditionalBranch();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.ifClause.setExpression(cb1); }

            ELSE_CLAUSE361=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_thenElseClauses16576); if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.elseClause = new ElseClause(ELSE_CLAUSE361); }

            pushFollow(FOLLOW_conditionalBranch_in_thenElseClauses16594);
            cb2=conditionalBranch();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.elseClause.setExpression(cb2); }

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "thenElseClauses"



    // $ANTLR start "anonymousFunction"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2545:1: anonymousFunction returns [FunctionArgument function] : ( FUNCTION_MODIFIER | VOID_MODIFIER )? p1= parameters (p2= parameters )* ( COMPUTE fe= functionOrExpression | block ) ;
    public FunctionArgument anonymousFunction() throws RecognitionException {
        FunctionArgument function = null;


        Token FUNCTION_MODIFIER362=null;
        Token VOID_MODIFIER363=null;
        ParameterList p1 =null;

        ParameterList p2 =null;

        Expression fe =null;

        Block block364 =null;


         function = new FunctionArgument(null);
                    function.setType(new FunctionModifier(null)); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2548:5: ( ( FUNCTION_MODIFIER | VOID_MODIFIER )? p1= parameters (p2= parameters )* ( COMPUTE fe= functionOrExpression | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2548:7: ( FUNCTION_MODIFIER | VOID_MODIFIER )? p1= parameters (p2= parameters )* ( COMPUTE fe= functionOrExpression | block )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2548:7: ( FUNCTION_MODIFIER | VOID_MODIFIER )?
            int alt220=3;
            int LA220_0 = input.LA(1);

            if ( (LA220_0==FUNCTION_MODIFIER) ) {
                alt220=1;
            }
            else if ( (LA220_0==VOID_MODIFIER) ) {
                alt220=2;
            }
            switch (alt220) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2549:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER362=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_anonymousFunction16642); if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setType(new FunctionModifier(FUNCTION_MODIFIER362)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2552:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER363=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_anonymousFunction16670); if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setType(new VoidModifier(VOID_MODIFIER363)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_parameters_in_anonymousFunction16699);
            p1=parameters();

            state._fsp--;
            if (state.failed) return function;

            if ( state.backtracking==0 ) { function.addParameterList(p1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2557:7: (p2= parameters )*
            loop221:
            do {
                int alt221=2;
                int LA221_0 = input.LA(1);

                if ( (LA221_0==LPAREN) ) {
                    alt221=1;
                }


                switch (alt221) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2558:9: p2= parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_anonymousFunction16728);
            	    p2=parameters();

            	    state._fsp--;
            	    if (state.failed) return function;

            	    if ( state.backtracking==0 ) { function.addParameterList(p2); }

            	    }
            	    break;

            	default :
            	    break loop221;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2561:7: ( COMPUTE fe= functionOrExpression | block )
            int alt222=2;
            int LA222_0 = input.LA(1);

            if ( (LA222_0==COMPUTE) ) {
                alt222=1;
            }
            else if ( (LA222_0==LBRACE) ) {
                alt222=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return function;}
                NoViableAltException nvae =
                    new NoViableAltException("", 222, 0, input);

                throw nvae;

            }
            switch (alt222) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2562:9: COMPUTE fe= functionOrExpression
                    {
                    match(input,COMPUTE,FOLLOW_COMPUTE_in_anonymousFunction16766); if (state.failed) return function;

                    pushFollow(FOLLOW_functionOrExpression_in_anonymousFunction16787);
                    fe=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setExpression(fe); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2567:9: block
                    {
                    pushFollow(FOLLOW_block_in_anonymousFunction16815);
                    block364=block();

                    state._fsp--;
                    if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setBlock(block364); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return function;
    }
    // $ANTLR end "anonymousFunction"



    // $ANTLR start "comprehension"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2572:1: comprehension returns [Comprehension comprehension] : ( forComprehensionClause | ifComprehensionClause );
    public Comprehension comprehension() throws RecognitionException {
        Comprehension comprehension = null;


        ForComprehensionClause forComprehensionClause365 =null;

        IfComprehensionClause ifComprehensionClause366 =null;


         comprehension = new Comprehension(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2574:5: ( forComprehensionClause | ifComprehensionClause )
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==FOR_CLAUSE) ) {
                alt223=1;
            }
            else if ( (LA223_0==IF_CLAUSE) ) {
                alt223=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return comprehension;}
                NoViableAltException nvae =
                    new NoViableAltException("", 223, 0, input);

                throw nvae;

            }
            switch (alt223) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2574:7: forComprehensionClause
                    {
                    pushFollow(FOLLOW_forComprehensionClause_in_comprehension16863);
                    forComprehensionClause365=forComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehension;

                    if ( state.backtracking==0 ) { comprehension.setInitialComprehensionClause(forComprehensionClause365); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2576:7: ifComprehensionClause
                    {
                    pushFollow(FOLLOW_ifComprehensionClause_in_comprehension16879);
                    ifComprehensionClause366=ifComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehension;

                    if ( state.backtracking==0 ) { comprehension.setInitialComprehensionClause(ifComprehensionClause366); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehension;
    }
    // $ANTLR end "comprehension"



    // $ANTLR start "comprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2580:1: comprehensionClause returns [ComprehensionClause comprehensionClause] : ( forComprehensionClause | ( IF_CLAUSE conditions ~ THEN_CLAUSE )=> ifComprehensionClause | expressionComprehensionClause );
    public ComprehensionClause comprehensionClause() throws RecognitionException {
        ComprehensionClause comprehensionClause = null;


        ForComprehensionClause forComprehensionClause367 =null;

        IfComprehensionClause ifComprehensionClause368 =null;

        ExpressionComprehensionClause expressionComprehensionClause369 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2581:5: ( forComprehensionClause | ( IF_CLAUSE conditions ~ THEN_CLAUSE )=> ifComprehensionClause | expressionComprehensionClause )
            int alt224=3;
            switch ( input.LA(1) ) {
            case FOR_CLAUSE:
                {
                alt224=1;
                }
                break;
            case IF_CLAUSE:
                {
                int LA224_2 = input.LA(2);

                if ( (synpred32_Ceylon()) ) {
                    alt224=2;
                }
                else if ( (true) ) {
                    alt224=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return comprehensionClause;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 224, 2, input);

                    throw nvae;

                }
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case COMMA:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case DYNAMIC:
            case FLOAT_LITERAL:
            case FUNCTION_MODIFIER:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case NOT_OP:
            case OBJECT_DEFINITION:
            case OUTER:
            case PACKAGE:
            case RBRACE:
            case RBRACKET:
            case RPAREN:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case SWITCH_CLAUSE:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
            case VOID_MODIFIER:
                {
                alt224=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return comprehensionClause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 224, 0, input);

                throw nvae;

            }

            switch (alt224) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2581:7: forComprehensionClause
                    {
                    pushFollow(FOLLOW_forComprehensionClause_in_comprehensionClause16908);
                    forComprehensionClause367=forComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = forComprehensionClause367; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2583:7: ( IF_CLAUSE conditions ~ THEN_CLAUSE )=> ifComprehensionClause
                    {
                    pushFollow(FOLLOW_ifComprehensionClause_in_comprehensionClause16943);
                    ifComprehensionClause368=ifComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = ifComprehensionClause368; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2586:7: expressionComprehensionClause
                    {
                    pushFollow(FOLLOW_expressionComprehensionClause_in_comprehensionClause16960);
                    expressionComprehensionClause369=expressionComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = expressionComprehensionClause369; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "comprehensionClause"



    // $ANTLR start "expressionComprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2590:1: expressionComprehensionClause returns [ExpressionComprehensionClause comprehensionClause] : ( functionOrExpression |);
    public ExpressionComprehensionClause expressionComprehensionClause() throws RecognitionException {
        ExpressionComprehensionClause comprehensionClause = null;


        Expression functionOrExpression370 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2591:5: ( functionOrExpression |)
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==BACKTICK||LA225_0==CHAR_LITERAL||(LA225_0 >= DECREMENT_OP && LA225_0 <= DIFFERENCE_OP)||LA225_0==DYNAMIC||LA225_0==FLOAT_LITERAL||LA225_0==FUNCTION_MODIFIER||LA225_0==IF_CLAUSE||LA225_0==INCREMENT_OP||(LA225_0 >= LBRACE && LA225_0 <= LIDENTIFIER)||LA225_0==LPAREN||LA225_0==NATURAL_LITERAL||(LA225_0 >= NOT_OP && LA225_0 <= OBJECT_DEFINITION)||(LA225_0 >= OUTER && LA225_0 <= PACKAGE)||LA225_0==STRING_LITERAL||LA225_0==STRING_START||(LA225_0 >= SUM_OP && LA225_0 <= SWITCH_CLAUSE)||LA225_0==THIS||LA225_0==UIDENTIFIER||(LA225_0 >= VERBATIM_STRING && LA225_0 <= VOID_MODIFIER)) ) {
                alt225=1;
            }
            else if ( (LA225_0==COMMA||(LA225_0 >= RBRACE && LA225_0 <= RBRACKET)||LA225_0==RPAREN) ) {
                alt225=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return comprehensionClause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 225, 0, input);

                throw nvae;

            }
            switch (alt225) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2591:7: functionOrExpression
                    {
                    pushFollow(FOLLOW_functionOrExpression_in_expressionComprehensionClause16990);
                    functionOrExpression370=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = new ExpressionComprehensionClause(null);
                            comprehensionClause.setExpression(functionOrExpression370); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2594:7: 
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                              new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "expressionComprehensionClause"



    // $ANTLR start "forComprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2598:1: forComprehensionClause returns [ForComprehensionClause comprehensionClause] : FOR_CLAUSE forIterator comprehensionClause ;
    public ForComprehensionClause forComprehensionClause() throws RecognitionException {
        ForComprehensionClause comprehensionClause = null;


        Token FOR_CLAUSE371=null;
        ForIterator forIterator372 =null;

        ComprehensionClause comprehensionClause373 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2599:5: ( FOR_CLAUSE forIterator comprehensionClause )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2599:7: FOR_CLAUSE forIterator comprehensionClause
            {
            FOR_CLAUSE371=(Token)match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_forComprehensionClause17027); if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause = new ForComprehensionClause(FOR_CLAUSE371); }

            pushFollow(FOLLOW_forIterator_in_forComprehensionClause17043);
            forIterator372=forIterator();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setForIterator(forIterator372); }

            pushFollow(FOLLOW_comprehensionClause_in_forComprehensionClause17059);
            comprehensionClause373=comprehensionClause();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setComprehensionClause(comprehensionClause373); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "forComprehensionClause"



    // $ANTLR start "ifComprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2607:1: ifComprehensionClause returns [IfComprehensionClause comprehensionClause] : IF_CLAUSE conditions comprehensionClause ;
    public IfComprehensionClause ifComprehensionClause() throws RecognitionException {
        IfComprehensionClause comprehensionClause = null;


        Token IF_CLAUSE374=null;
        ConditionList conditions375 =null;

        ComprehensionClause comprehensionClause376 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2608:5: ( IF_CLAUSE conditions comprehensionClause )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2608:7: IF_CLAUSE conditions comprehensionClause
            {
            IF_CLAUSE374=(Token)match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_ifComprehensionClause17092); if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause = new IfComprehensionClause(IF_CLAUSE374); }

            pushFollow(FOLLOW_conditions_in_ifComprehensionClause17108);
            conditions375=conditions();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setConditionList(conditions375); }

            pushFollow(FOLLOW_comprehensionClause_in_ifComprehensionClause17124);
            comprehensionClause376=comprehensionClause();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setComprehensionClause(comprehensionClause376); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "ifComprehensionClause"



    // $ANTLR start "assignmentExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2616:1: assignmentExpression returns [Term term] : ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression )? ;
    public Term assignmentExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        Expression ee2 =null;

        AssignmentOp assignmentOperator377 =null;


         QualifiedMemberOrTypeExpression qe=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2618:5: (ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2618:7: ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression )?
            {
            pushFollow(FOLLOW_thenElseExpression_in_assignmentExpression17168);
            ee1=thenElseExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ee1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2620:7: ( assignmentOperator ee2= functionOrExpression )?
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( (LA226_0==ADD_SPECIFY||LA226_0==AND_SPECIFY||LA226_0==COMPLEMENT_SPECIFY||LA226_0==DIVIDE_SPECIFY||LA226_0==INTERSECT_SPECIFY||LA226_0==MULTIPLY_SPECIFY||LA226_0==OR_SPECIFY||LA226_0==REMAINDER_SPECIFY||LA226_0==SPECIFY||LA226_0==SUBTRACT_SPECIFY||LA226_0==UNION_SPECIFY) ) {
                alt226=1;
            }
            switch (alt226) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2621:9: assignmentOperator ee2= functionOrExpression
                    {
                    pushFollow(FOLLOW_assignmentOperator_in_assignmentExpression17194);
                    assignmentOperator377=assignmentOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { assignmentOperator377.setLeftTerm(term);
                              term = assignmentOperator377; }

                    pushFollow(FOLLOW_functionOrExpression_in_assignmentExpression17217);
                    ee2=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { if (ee2!=null)
                                  assignmentOperator377.setRightTerm(ee2.getTerm()); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "assignmentExpression"



    // $ANTLR start "assignmentOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2630:1: assignmentOperator returns [AssignmentOp operator] : ( SPECIFY | ADD_SPECIFY | SUBTRACT_SPECIFY | MULTIPLY_SPECIFY | DIVIDE_SPECIFY | REMAINDER_SPECIFY | INTERSECT_SPECIFY | UNION_SPECIFY | COMPLEMENT_SPECIFY | AND_SPECIFY | OR_SPECIFY );
    public AssignmentOp assignmentOperator() throws RecognitionException {
        AssignmentOp operator = null;


        Token SPECIFY378=null;
        Token ADD_SPECIFY379=null;
        Token SUBTRACT_SPECIFY380=null;
        Token MULTIPLY_SPECIFY381=null;
        Token DIVIDE_SPECIFY382=null;
        Token REMAINDER_SPECIFY383=null;
        Token INTERSECT_SPECIFY384=null;
        Token UNION_SPECIFY385=null;
        Token COMPLEMENT_SPECIFY386=null;
        Token AND_SPECIFY387=null;
        Token OR_SPECIFY388=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2631:5: ( SPECIFY | ADD_SPECIFY | SUBTRACT_SPECIFY | MULTIPLY_SPECIFY | DIVIDE_SPECIFY | REMAINDER_SPECIFY | INTERSECT_SPECIFY | UNION_SPECIFY | COMPLEMENT_SPECIFY | AND_SPECIFY | OR_SPECIFY )
            int alt227=11;
            switch ( input.LA(1) ) {
            case SPECIFY:
                {
                alt227=1;
                }
                break;
            case ADD_SPECIFY:
                {
                alt227=2;
                }
                break;
            case SUBTRACT_SPECIFY:
                {
                alt227=3;
                }
                break;
            case MULTIPLY_SPECIFY:
                {
                alt227=4;
                }
                break;
            case DIVIDE_SPECIFY:
                {
                alt227=5;
                }
                break;
            case REMAINDER_SPECIFY:
                {
                alt227=6;
                }
                break;
            case INTERSECT_SPECIFY:
                {
                alt227=7;
                }
                break;
            case UNION_SPECIFY:
                {
                alt227=8;
                }
                break;
            case COMPLEMENT_SPECIFY:
                {
                alt227=9;
                }
                break;
            case AND_SPECIFY:
                {
                alt227=10;
                }
                break;
            case OR_SPECIFY:
                {
                alt227=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 227, 0, input);

                throw nvae;

            }

            switch (alt227) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2631:7: SPECIFY
                    {
                    SPECIFY378=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_assignmentOperator17257); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AssignOp(SPECIFY378); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2632:7: ADD_SPECIFY
                    {
                    ADD_SPECIFY379=(Token)match(input,ADD_SPECIFY,FOLLOW_ADD_SPECIFY_in_assignmentOperator17267); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AddAssignOp(ADD_SPECIFY379); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2633:7: SUBTRACT_SPECIFY
                    {
                    SUBTRACT_SPECIFY380=(Token)match(input,SUBTRACT_SPECIFY,FOLLOW_SUBTRACT_SPECIFY_in_assignmentOperator17277); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SubtractAssignOp(SUBTRACT_SPECIFY380); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2634:7: MULTIPLY_SPECIFY
                    {
                    MULTIPLY_SPECIFY381=(Token)match(input,MULTIPLY_SPECIFY,FOLLOW_MULTIPLY_SPECIFY_in_assignmentOperator17287); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new MultiplyAssignOp(MULTIPLY_SPECIFY381); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2635:7: DIVIDE_SPECIFY
                    {
                    DIVIDE_SPECIFY382=(Token)match(input,DIVIDE_SPECIFY,FOLLOW_DIVIDE_SPECIFY_in_assignmentOperator17297); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DivideAssignOp(DIVIDE_SPECIFY382); }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2636:7: REMAINDER_SPECIFY
                    {
                    REMAINDER_SPECIFY383=(Token)match(input,REMAINDER_SPECIFY,FOLLOW_REMAINDER_SPECIFY_in_assignmentOperator17307); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RemainderAssignOp(REMAINDER_SPECIFY383); }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2637:7: INTERSECT_SPECIFY
                    {
                    INTERSECT_SPECIFY384=(Token)match(input,INTERSECT_SPECIFY,FOLLOW_INTERSECT_SPECIFY_in_assignmentOperator17317); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IntersectAssignOp(INTERSECT_SPECIFY384); }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2638:7: UNION_SPECIFY
                    {
                    UNION_SPECIFY385=(Token)match(input,UNION_SPECIFY,FOLLOW_UNION_SPECIFY_in_assignmentOperator17327); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new UnionAssignOp(UNION_SPECIFY385); }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2639:7: COMPLEMENT_SPECIFY
                    {
                    COMPLEMENT_SPECIFY386=(Token)match(input,COMPLEMENT_SPECIFY,FOLLOW_COMPLEMENT_SPECIFY_in_assignmentOperator17337); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ComplementAssignOp(COMPLEMENT_SPECIFY386); }

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2640:7: AND_SPECIFY
                    {
                    AND_SPECIFY387=(Token)match(input,AND_SPECIFY,FOLLOW_AND_SPECIFY_in_assignmentOperator17347); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AndAssignOp(AND_SPECIFY387); }

                    }
                    break;
                case 11 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2641:7: OR_SPECIFY
                    {
                    OR_SPECIFY388=(Token)match(input,OR_SPECIFY,FOLLOW_OR_SPECIFY_in_assignmentOperator17357); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new OrAssignOp(OR_SPECIFY388); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "assignmentOperator"



    // $ANTLR start "thenElseExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2644:1: thenElseExpression returns [Term term] : de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )* ;
    public Term thenElseExpression() throws RecognitionException {
        Term term = null;


        Term de1 =null;

        Term de2 =null;

        BinaryOperatorExpression thenElseOperator389 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2645:5: (de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2645:7: de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )*
            {
            pushFollow(FOLLOW_disjunctionExpression_in_thenElseExpression17382);
            de1=disjunctionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = de1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2647:7: ( thenElseOperator de2= disjunctionExpression )*
            loop228:
            do {
                int alt228=2;
                int LA228_0 = input.LA(1);

                if ( (LA228_0==ELSE_CLAUSE||LA228_0==THEN_CLAUSE) ) {
                    alt228=1;
                }


                switch (alt228) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2648:9: thenElseOperator de2= disjunctionExpression
            	    {
            	    pushFollow(FOLLOW_thenElseOperator_in_thenElseExpression17408);
            	    thenElseOperator389=thenElseOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { thenElseOperator389.setLeftTerm(term);
            	              term = thenElseOperator389; }

            	    pushFollow(FOLLOW_disjunctionExpression_in_thenElseExpression17430);
            	    de2=disjunctionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { thenElseOperator389.setRightTerm(de2); }

            	    }
            	    break;

            	default :
            	    break loop228;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "thenElseExpression"



    // $ANTLR start "thenElseOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2656:1: thenElseOperator returns [BinaryOperatorExpression operator] : ( ELSE_CLAUSE | THEN_CLAUSE );
    public BinaryOperatorExpression thenElseOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token ELSE_CLAUSE390=null;
        Token THEN_CLAUSE391=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2657:5: ( ELSE_CLAUSE | THEN_CLAUSE )
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==ELSE_CLAUSE) ) {
                alt229=1;
            }
            else if ( (LA229_0==THEN_CLAUSE) ) {
                alt229=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 229, 0, input);

                throw nvae;

            }
            switch (alt229) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2657:7: ELSE_CLAUSE
                    {
                    ELSE_CLAUSE390=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_thenElseOperator17470); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DefaultOp(ELSE_CLAUSE390); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2659:7: THEN_CLAUSE
                    {
                    THEN_CLAUSE391=(Token)match(input,THEN_CLAUSE,FOLLOW_THEN_CLAUSE_in_thenElseOperator17487); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ThenOp(THEN_CLAUSE391); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "thenElseOperator"



    // $ANTLR start "disjunctionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2663:1: disjunctionExpression returns [Term term] : me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )* ;
    public Term disjunctionExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        OrOp disjunctionOperator392 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2664:5: (me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2664:7: me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )*
            {
            pushFollow(FOLLOW_conjunctionExpression_in_disjunctionExpression17518);
            me1=conjunctionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = me1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2666:7: ( disjunctionOperator me2= conjunctionExpression )*
            loop230:
            do {
                int alt230=2;
                int LA230_0 = input.LA(1);

                if ( (LA230_0==OR_OP) ) {
                    alt230=1;
                }


                switch (alt230) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2667:9: disjunctionOperator me2= conjunctionExpression
            	    {
            	    pushFollow(FOLLOW_disjunctionOperator_in_disjunctionExpression17544);
            	    disjunctionOperator392=disjunctionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { disjunctionOperator392.setLeftTerm(term);
            	              term = disjunctionOperator392; }

            	    pushFollow(FOLLOW_conjunctionExpression_in_disjunctionExpression17567);
            	    me2=conjunctionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { disjunctionOperator392.setRightTerm(me2); }

            	    }
            	    break;

            	default :
            	    break loop230;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "disjunctionExpression"



    // $ANTLR start "disjunctionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2675:1: disjunctionOperator returns [OrOp operator] : OR_OP ;
    public OrOp disjunctionOperator() throws RecognitionException {
        OrOp operator = null;


        Token OR_OP393=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2676:5: ( OR_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2676:7: OR_OP
            {
            OR_OP393=(Token)match(input,OR_OP,FOLLOW_OR_OP_in_disjunctionOperator17607); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new OrOp(OR_OP393); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "disjunctionOperator"



    // $ANTLR start "conjunctionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2680:1: conjunctionExpression returns [Term term] : me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )* ;
    public Term conjunctionExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        AndOp conjunctionOperator394 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2681:5: (me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2681:7: me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )*
            {
            pushFollow(FOLLOW_logicalNegationExpression_in_conjunctionExpression17639);
            me1=logicalNegationExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = me1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2683:7: ( conjunctionOperator me2= logicalNegationExpression )*
            loop231:
            do {
                int alt231=2;
                int LA231_0 = input.LA(1);

                if ( (LA231_0==AND_OP) ) {
                    alt231=1;
                }


                switch (alt231) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2684:9: conjunctionOperator me2= logicalNegationExpression
            	    {
            	    pushFollow(FOLLOW_conjunctionOperator_in_conjunctionExpression17665);
            	    conjunctionOperator394=conjunctionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { conjunctionOperator394.setLeftTerm(term);
            	              term = conjunctionOperator394; }

            	    pushFollow(FOLLOW_logicalNegationExpression_in_conjunctionExpression17688);
            	    me2=logicalNegationExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { conjunctionOperator394.setRightTerm(me2); }

            	    }
            	    break;

            	default :
            	    break loop231;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "conjunctionExpression"



    // $ANTLR start "conjunctionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2692:1: conjunctionOperator returns [AndOp operator] : AND_OP ;
    public AndOp conjunctionOperator() throws RecognitionException {
        AndOp operator = null;


        Token AND_OP395=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2693:5: ( AND_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2693:7: AND_OP
            {
            AND_OP395=(Token)match(input,AND_OP,FOLLOW_AND_OP_in_conjunctionOperator17728); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new AndOp(AND_OP395); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "conjunctionOperator"



    // $ANTLR start "logicalNegationExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2697:1: logicalNegationExpression returns [Term term] : ( notOperator le= logicalNegationExpression | equalityExpression );
    public Term logicalNegationExpression() throws RecognitionException {
        Term term = null;


        Term le =null;

        NotOp notOperator396 =null;

        Term equalityExpression397 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2698:5: ( notOperator le= logicalNegationExpression | equalityExpression )
            int alt232=2;
            int LA232_0 = input.LA(1);

            if ( (LA232_0==NOT_OP) ) {
                alt232=1;
            }
            else if ( (LA232_0==BACKTICK||LA232_0==CHAR_LITERAL||(LA232_0 >= DECREMENT_OP && LA232_0 <= DIFFERENCE_OP)||LA232_0==DYNAMIC||LA232_0==FLOAT_LITERAL||LA232_0==INCREMENT_OP||(LA232_0 >= LBRACE && LA232_0 <= LBRACKET)||LA232_0==LIDENTIFIER||LA232_0==LPAREN||LA232_0==NATURAL_LITERAL||LA232_0==OBJECT_DEFINITION||(LA232_0 >= OUTER && LA232_0 <= PACKAGE)||LA232_0==STRING_LITERAL||LA232_0==STRING_START||(LA232_0 >= SUM_OP && LA232_0 <= SUPER)||LA232_0==THIS||LA232_0==UIDENTIFIER||LA232_0==VERBATIM_STRING) ) {
                alt232=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                    new NoViableAltException("", 232, 0, input);

                throw nvae;

            }
            switch (alt232) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2698:7: notOperator le= logicalNegationExpression
                    {
                    pushFollow(FOLLOW_notOperator_in_logicalNegationExpression17758);
                    notOperator396=notOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = notOperator396; }

                    pushFollow(FOLLOW_logicalNegationExpression_in_logicalNegationExpression17777);
                    le=logicalNegationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { notOperator396.setTerm(le); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2702:7: equalityExpression
                    {
                    pushFollow(FOLLOW_equalityExpression_in_logicalNegationExpression17793);
                    equalityExpression397=equalityExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = equalityExpression397; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "logicalNegationExpression"



    // $ANTLR start "notOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2706:1: notOperator returns [NotOp operator] : NOT_OP ;
    public NotOp notOperator() throws RecognitionException {
        NotOp operator = null;


        Token NOT_OP398=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2707:5: ( NOT_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2707:7: NOT_OP
            {
            NOT_OP398=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_notOperator17822); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new NotOp(NOT_OP398); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "notOperator"



    // $ANTLR start "equalityExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2711:1: equalityExpression returns [Term term] : ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )? ;
    public Term equalityExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        Term ee2 =null;

        BinaryOperatorExpression equalityOperator399 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2712:5: (ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2712:7: ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )?
            {
            pushFollow(FOLLOW_comparisonExpression_in_equalityExpression17854);
            ee1=comparisonExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ee1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2714:7: ( equalityOperator ee2= comparisonExpression )?
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( (LA233_0==EQUAL_OP||LA233_0==IDENTICAL_OP||LA233_0==NOT_EQUAL_OP) ) {
                alt233=1;
            }
            switch (alt233) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2715:9: equalityOperator ee2= comparisonExpression
                    {
                    pushFollow(FOLLOW_equalityOperator_in_equalityExpression17880);
                    equalityOperator399=equalityOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { equalityOperator399.setLeftTerm(term);
                              term = equalityOperator399; }

                    pushFollow(FOLLOW_comparisonExpression_in_equalityExpression17903);
                    ee2=comparisonExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { equalityOperator399.setRightTerm(ee2); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "equalityExpression"



    // $ANTLR start "equalityOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2723:1: equalityOperator returns [BinaryOperatorExpression operator] : ( EQUAL_OP | NOT_EQUAL_OP | IDENTICAL_OP );
    public BinaryOperatorExpression equalityOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token EQUAL_OP400=null;
        Token NOT_EQUAL_OP401=null;
        Token IDENTICAL_OP402=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2724:5: ( EQUAL_OP | NOT_EQUAL_OP | IDENTICAL_OP )
            int alt234=3;
            switch ( input.LA(1) ) {
            case EQUAL_OP:
                {
                alt234=1;
                }
                break;
            case NOT_EQUAL_OP:
                {
                alt234=2;
                }
                break;
            case IDENTICAL_OP:
                {
                alt234=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 234, 0, input);

                throw nvae;

            }

            switch (alt234) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2724:7: EQUAL_OP
                    {
                    EQUAL_OP400=(Token)match(input,EQUAL_OP,FOLLOW_EQUAL_OP_in_equalityOperator17943); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new EqualOp(EQUAL_OP400); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2726:7: NOT_EQUAL_OP
                    {
                    NOT_EQUAL_OP401=(Token)match(input,NOT_EQUAL_OP,FOLLOW_NOT_EQUAL_OP_in_equalityOperator17960); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new NotEqualOp(NOT_EQUAL_OP401); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2728:7: IDENTICAL_OP
                    {
                    IDENTICAL_OP402=(Token)match(input,IDENTICAL_OP,FOLLOW_IDENTICAL_OP_in_equalityOperator17976); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IdenticalOp(IDENTICAL_OP402); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "equalityOperator"



    // $ANTLR start "comparisonExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2732:1: comparisonExpression returns [Term term] : ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )? ;
    public Term comparisonExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        BinaryOperatorExpression co1 =null;

        Term ee2 =null;

        ComparisonOp lo1 =null;

        Term ee3 =null;

        ComparisonOp so1 =null;

        Term ee4 =null;

        ComparisonOp so2 =null;

        Term ee5 =null;

        TypeOperatorExpression to1 =null;

        StaticType t1 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2733:5: (ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2733:7: ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )?
            {
            pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression18007);
            ee1=existenceEmptinessExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ee1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2735:7: (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )?
            int alt236=5;
            switch ( input.LA(1) ) {
                case COMPARE_OP:
                case IN_OP:
                    {
                    alt236=1;
                    }
                    break;
                case LARGER_OP:
                case LARGE_AS_OP:
                    {
                    alt236=2;
                    }
                    break;
                case SMALLER_OP:
                case SMALL_AS_OP:
                    {
                    alt236=3;
                    }
                    break;
                case CASE_TYPES:
                case EXTENDS:
                case IS_OP:
                case SATISFIES:
                    {
                    alt236=4;
                    }
                    break;
            }

            switch (alt236) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2736:9: co1= comparisonOperator ee2= existenceEmptinessExpression
                    {
                    pushFollow(FOLLOW_comparisonOperator_in_comparisonExpression18035);
                    co1=comparisonOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { co1.setLeftTerm(term);
                              term = co1; }

                    pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression18058);
                    ee2=existenceEmptinessExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { co1.setRightTerm(ee2); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2741:9: lo1= largerOperator ee3= existenceEmptinessExpression
                    {
                    pushFollow(FOLLOW_largerOperator_in_comparisonExpression18080);
                    lo1=largerOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { lo1.setLeftTerm(term);
                              term = lo1; }

                    pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression18103);
                    ee3=existenceEmptinessExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { lo1.setRightTerm(ee3); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2746:9: so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )?
                    {
                    pushFollow(FOLLOW_smallerOperator_in_comparisonExpression18125);
                    so1=smallerOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { so1.setLeftTerm(term);
                              term = so1; }

                    pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression18148);
                    ee4=existenceEmptinessExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { so1.setRightTerm(ee4); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2751:9: (so2= smallerOperator ee5= existenceEmptinessExpression )?
                    int alt235=2;
                    int LA235_0 = input.LA(1);

                    if ( ((LA235_0 >= SMALLER_OP && LA235_0 <= SMALL_AS_OP)) ) {
                        alt235=1;
                    }
                    switch (alt235) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2752:11: so2= smallerOperator ee5= existenceEmptinessExpression
                            {
                            pushFollow(FOLLOW_smallerOperator_in_comparisonExpression18183);
                            so2=smallerOperator();

                            state._fsp--;
                            if (state.failed) return term;

                            pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression18197);
                            ee5=existenceEmptinessExpression();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { WithinOp w = new WithinOp(null); 
                                        Bound lb = so1 instanceof SmallerOp ?
                                            new OpenBound(null) : new ClosedBound(null);
                                        lb.setTerm(ee1);
                                        Bound ub = so2 instanceof SmallerOp ?
                                            new OpenBound(null) : new ClosedBound(null);
                                        ub.setTerm(ee5);
                                        w.setLowerBound(lb);
                                        w.setUpperBound(ub);
                                        w.setTerm(ee4);
                                        term = w; }

                            }
                            break;

                    }


                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2766:9: to1= typeOperator t1= type
                    {
                    pushFollow(FOLLOW_typeOperator_in_comparisonExpression18232);
                    to1=typeOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { to1.setTerm(ee1); 
                              term = to1; }

                    pushFollow(FOLLOW_type_in_comparisonExpression18254);
                    t1=type();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { to1.setType(t1); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "comparisonExpression"



    // $ANTLR start "smallerOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2780:1: smallerOperator returns [ComparisonOp operator] : ( SMALL_AS_OP | SMALLER_OP );
    public ComparisonOp smallerOperator() throws RecognitionException {
        ComparisonOp operator = null;


        Token SMALL_AS_OP403=null;
        Token SMALLER_OP404=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2781:5: ( SMALL_AS_OP | SMALLER_OP )
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==SMALL_AS_OP) ) {
                alt237=1;
            }
            else if ( (LA237_0==SMALLER_OP) ) {
                alt237=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 237, 0, input);

                throw nvae;

            }
            switch (alt237) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2781:7: SMALL_AS_OP
                    {
                    SMALL_AS_OP403=(Token)match(input,SMALL_AS_OP,FOLLOW_SMALL_AS_OP_in_smallerOperator18300); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SmallAsOp(SMALL_AS_OP403); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2783:7: SMALLER_OP
                    {
                    SMALLER_OP404=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_smallerOperator18316); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SmallerOp(SMALLER_OP404); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "smallerOperator"



    // $ANTLR start "largerOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2787:1: largerOperator returns [ComparisonOp operator] : ( LARGE_AS_OP | LARGER_OP );
    public ComparisonOp largerOperator() throws RecognitionException {
        ComparisonOp operator = null;


        Token LARGE_AS_OP405=null;
        Token LARGER_OP406=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2788:5: ( LARGE_AS_OP | LARGER_OP )
            int alt238=2;
            int LA238_0 = input.LA(1);

            if ( (LA238_0==LARGE_AS_OP) ) {
                alt238=1;
            }
            else if ( (LA238_0==LARGER_OP) ) {
                alt238=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 238, 0, input);

                throw nvae;

            }
            switch (alt238) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2788:7: LARGE_AS_OP
                    {
                    LARGE_AS_OP405=(Token)match(input,LARGE_AS_OP,FOLLOW_LARGE_AS_OP_in_largerOperator18345); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new LargeAsOp(LARGE_AS_OP405); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2790:7: LARGER_OP
                    {
                    LARGER_OP406=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_largerOperator18361); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new LargerOp(LARGER_OP406); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "largerOperator"



    // $ANTLR start "comparisonOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2794:1: comparisonOperator returns [BinaryOperatorExpression operator] : ( COMPARE_OP | IN_OP );
    public BinaryOperatorExpression comparisonOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token COMPARE_OP407=null;
        Token IN_OP408=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2795:5: ( COMPARE_OP | IN_OP )
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==COMPARE_OP) ) {
                alt239=1;
            }
            else if ( (LA239_0==IN_OP) ) {
                alt239=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 239, 0, input);

                throw nvae;

            }
            switch (alt239) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2795:7: COMPARE_OP
                    {
                    COMPARE_OP407=(Token)match(input,COMPARE_OP,FOLLOW_COMPARE_OP_in_comparisonOperator18390); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new CompareOp(COMPARE_OP407); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2797:7: IN_OP
                    {
                    IN_OP408=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_comparisonOperator18407); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new InOp(IN_OP408); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "comparisonOperator"



    // $ANTLR start "typeOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2801:1: typeOperator returns [TypeOperatorExpression operator] : ( IS_OP | EXTENDS | SATISFIES | CASE_TYPES );
    public TypeOperatorExpression typeOperator() throws RecognitionException {
        TypeOperatorExpression operator = null;


        Token IS_OP409=null;
        Token EXTENDS410=null;
        Token SATISFIES411=null;
        Token CASE_TYPES412=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2802:5: ( IS_OP | EXTENDS | SATISFIES | CASE_TYPES )
            int alt240=4;
            switch ( input.LA(1) ) {
            case IS_OP:
                {
                alt240=1;
                }
                break;
            case EXTENDS:
                {
                alt240=2;
                }
                break;
            case SATISFIES:
                {
                alt240=3;
                }
                break;
            case CASE_TYPES:
                {
                alt240=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 240, 0, input);

                throw nvae;

            }

            switch (alt240) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2802:7: IS_OP
                    {
                    IS_OP409=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_typeOperator18436); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IsOp(IS_OP409); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2804:7: EXTENDS
                    {
                    EXTENDS410=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_typeOperator18452); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Extends(EXTENDS410); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2806:7: SATISFIES
                    {
                    SATISFIES411=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_typeOperator18468); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Satisfies(SATISFIES411); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2808:7: CASE_TYPES
                    {
                    CASE_TYPES412=(Token)match(input,CASE_TYPES,FOLLOW_CASE_TYPES_in_typeOperator18484); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new OfOp(CASE_TYPES412); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "typeOperator"



    // $ANTLR start "existenceEmptinessExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2812:1: existenceEmptinessExpression returns [Term term] : de1= entryRangeExpression (eno1= existsNonemptyOperator )? ;
    public Term existenceEmptinessExpression() throws RecognitionException {
        Term term = null;


        Term de1 =null;

        UnaryOperatorExpression eno1 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2813:5: (de1= entryRangeExpression (eno1= existsNonemptyOperator )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2813:7: de1= entryRangeExpression (eno1= existsNonemptyOperator )?
            {
            pushFollow(FOLLOW_entryRangeExpression_in_existenceEmptinessExpression18515);
            de1=entryRangeExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = de1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2815:7: (eno1= existsNonemptyOperator )?
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==EXISTS||LA241_0==NONEMPTY) ) {
                alt241=1;
            }
            switch (alt241) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2816:9: eno1= existsNonemptyOperator
                    {
                    pushFollow(FOLLOW_existsNonemptyOperator_in_existenceEmptinessExpression18543);
                    eno1=existsNonemptyOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = eno1;
                              eno1.setTerm(de1); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "existenceEmptinessExpression"



    // $ANTLR start "existsNonemptyOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2826:1: existsNonemptyOperator returns [UnaryOperatorExpression operator] : ( EXISTS | NONEMPTY );
    public UnaryOperatorExpression existsNonemptyOperator() throws RecognitionException {
        UnaryOperatorExpression operator = null;


        Token EXISTS413=null;
        Token NONEMPTY414=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2827:5: ( EXISTS | NONEMPTY )
            int alt242=2;
            int LA242_0 = input.LA(1);

            if ( (LA242_0==EXISTS) ) {
                alt242=1;
            }
            else if ( (LA242_0==NONEMPTY) ) {
                alt242=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 242, 0, input);

                throw nvae;

            }
            switch (alt242) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2827:7: EXISTS
                    {
                    EXISTS413=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_existsNonemptyOperator18589); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Exists(EXISTS413); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2829:7: NONEMPTY
                    {
                    NONEMPTY414=(Token)match(input,NONEMPTY,FOLLOW_NONEMPTY_in_existsNonemptyOperator18606); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Nonempty(NONEMPTY414); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "existsNonemptyOperator"



    // $ANTLR start "entryRangeExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2833:1: entryRangeExpression returns [Term term] : ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )? ;
    public Term entryRangeExpression() throws RecognitionException {
        Term term = null;


        Term ae1 =null;

        Term ae2 =null;

        BinaryOperatorExpression rangeIntervalEntryOperator415 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2834:5: (ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2834:7: ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )?
            {
            pushFollow(FOLLOW_additiveExpression_in_entryRangeExpression18637);
            ae1=additiveExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ae1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2836:7: ( rangeIntervalEntryOperator ae2= additiveExpression )?
            int alt243=2;
            int LA243_0 = input.LA(1);

            if ( (LA243_0==ENTRY_OP||LA243_0==RANGE_OP||LA243_0==SEGMENT_OP) ) {
                alt243=1;
            }
            switch (alt243) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2837:9: rangeIntervalEntryOperator ae2= additiveExpression
                    {
                    pushFollow(FOLLOW_rangeIntervalEntryOperator_in_entryRangeExpression18663);
                    rangeIntervalEntryOperator415=rangeIntervalEntryOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { rangeIntervalEntryOperator415.setLeftTerm(term);
                              term = rangeIntervalEntryOperator415; }

                    pushFollow(FOLLOW_additiveExpression_in_entryRangeExpression18686);
                    ae2=additiveExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { rangeIntervalEntryOperator415.setRightTerm(ae2); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "entryRangeExpression"



    // $ANTLR start "rangeIntervalEntryOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2845:1: rangeIntervalEntryOperator returns [BinaryOperatorExpression operator] : ( RANGE_OP | SEGMENT_OP | ENTRY_OP );
    public BinaryOperatorExpression rangeIntervalEntryOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token RANGE_OP416=null;
        Token SEGMENT_OP417=null;
        Token ENTRY_OP418=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2846:5: ( RANGE_OP | SEGMENT_OP | ENTRY_OP )
            int alt244=3;
            switch ( input.LA(1) ) {
            case RANGE_OP:
                {
                alt244=1;
                }
                break;
            case SEGMENT_OP:
                {
                alt244=2;
                }
                break;
            case ENTRY_OP:
                {
                alt244=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 244, 0, input);

                throw nvae;

            }

            switch (alt244) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2846:7: RANGE_OP
                    {
                    RANGE_OP416=(Token)match(input,RANGE_OP,FOLLOW_RANGE_OP_in_rangeIntervalEntryOperator18726); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RangeOp(RANGE_OP416); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2848:7: SEGMENT_OP
                    {
                    SEGMENT_OP417=(Token)match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_rangeIntervalEntryOperator18743); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SegmentOp(SEGMENT_OP417); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2850:7: ENTRY_OP
                    {
                    ENTRY_OP418=(Token)match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_rangeIntervalEntryOperator18759); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new EntryOp(ENTRY_OP418); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "rangeIntervalEntryOperator"



    // $ANTLR start "additiveExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2854:1: additiveExpression returns [Term term] : me1= scaleExpression ( additiveOperator me2= scaleExpression )* ;
    public Term additiveExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        BinaryOperatorExpression additiveOperator419 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2855:5: (me1= scaleExpression ( additiveOperator me2= scaleExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2855:7: me1= scaleExpression ( additiveOperator me2= scaleExpression )*
            {
            pushFollow(FOLLOW_scaleExpression_in_additiveExpression18790);
            me1=scaleExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = me1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2857:7: ( additiveOperator me2= scaleExpression )*
            loop245:
            do {
                int alt245=2;
                int LA245_0 = input.LA(1);

                if ( (LA245_0==DIFFERENCE_OP||LA245_0==SUM_OP) ) {
                    alt245=1;
                }


                switch (alt245) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2858:9: additiveOperator me2= scaleExpression
            	    {
            	    pushFollow(FOLLOW_additiveOperator_in_additiveExpression18816);
            	    additiveOperator419=additiveOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { additiveOperator419.setLeftTerm(term);
            	              term = additiveOperator419; }

            	    pushFollow(FOLLOW_scaleExpression_in_additiveExpression18839);
            	    me2=scaleExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { additiveOperator419.setRightTerm(me2); }

            	    }
            	    break;

            	default :
            	    break loop245;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "additiveExpression"



    // $ANTLR start "additiveOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2866:1: additiveOperator returns [BinaryOperatorExpression operator] : ( SUM_OP | DIFFERENCE_OP );
    public BinaryOperatorExpression additiveOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token SUM_OP420=null;
        Token DIFFERENCE_OP421=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2867:5: ( SUM_OP | DIFFERENCE_OP )
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==SUM_OP) ) {
                alt246=1;
            }
            else if ( (LA246_0==DIFFERENCE_OP) ) {
                alt246=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 246, 0, input);

                throw nvae;

            }
            switch (alt246) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2867:7: SUM_OP
                    {
                    SUM_OP420=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_additiveOperator18879); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SumOp(SUM_OP420); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2869:7: DIFFERENCE_OP
                    {
                    DIFFERENCE_OP421=(Token)match(input,DIFFERENCE_OP,FOLLOW_DIFFERENCE_OP_in_additiveOperator18896); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DifferenceOp(DIFFERENCE_OP421); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "additiveOperator"



    // $ANTLR start "scaleExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2873:1: scaleExpression returns [Term term] : multiplicativeExpression ( scaleOperator se= scaleExpression )? ;
    public Term scaleExpression() throws RecognitionException {
        Term term = null;


        Term se =null;

        Term multiplicativeExpression422 =null;

        ScaleOp scaleOperator423 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2874:5: ( multiplicativeExpression ( scaleOperator se= scaleExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2874:7: multiplicativeExpression ( scaleOperator se= scaleExpression )?
            {
            pushFollow(FOLLOW_multiplicativeExpression_in_scaleExpression18925);
            multiplicativeExpression422=multiplicativeExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = multiplicativeExpression422; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2876:7: ( scaleOperator se= scaleExpression )?
            int alt247=2;
            int LA247_0 = input.LA(1);

            if ( (LA247_0==SCALE_OP) ) {
                alt247=1;
            }
            switch (alt247) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2877:9: scaleOperator se= scaleExpression
                    {
                    pushFollow(FOLLOW_scaleOperator_in_scaleExpression18951);
                    scaleOperator423=scaleOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { scaleOperator423.setLeftTerm(term);
                              term = scaleOperator423; }

                    pushFollow(FOLLOW_scaleExpression_in_scaleExpression18973);
                    se=scaleExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { scaleOperator423.setRightTerm(se); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "scaleExpression"



    // $ANTLR start "multiplicativeExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2885:1: multiplicativeExpression returns [Term term] : ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )* ;
    public Term multiplicativeExpression() throws RecognitionException {
        Term term = null;


        Term ue1 =null;

        Term ue2 =null;

        BinaryOperatorExpression multiplicativeOperator424 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2886:5: (ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2886:7: ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )*
            {
            pushFollow(FOLLOW_unionExpression_in_multiplicativeExpression19015);
            ue1=unionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ue1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2888:7: ( multiplicativeOperator ue2= unionExpression )*
            loop248:
            do {
                int alt248=2;
                int LA248_0 = input.LA(1);

                if ( ((LA248_0 >= PRODUCT_OP && LA248_0 <= QUOTIENT_OP)||LA248_0==REMAINDER_OP) ) {
                    alt248=1;
                }


                switch (alt248) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2889:9: multiplicativeOperator ue2= unionExpression
            	    {
            	    pushFollow(FOLLOW_multiplicativeOperator_in_multiplicativeExpression19041);
            	    multiplicativeOperator424=multiplicativeOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { multiplicativeOperator424.setLeftTerm(term);
            	              term = multiplicativeOperator424; }

            	    pushFollow(FOLLOW_unionExpression_in_multiplicativeExpression19064);
            	    ue2=unionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { multiplicativeOperator424.setRightTerm(ue2); }

            	    }
            	    break;

            	default :
            	    break loop248;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "multiplicativeExpression"



    // $ANTLR start "multiplicativeOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2897:1: multiplicativeOperator returns [BinaryOperatorExpression operator] : ( PRODUCT_OP | QUOTIENT_OP | REMAINDER_OP );
    public BinaryOperatorExpression multiplicativeOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token PRODUCT_OP425=null;
        Token QUOTIENT_OP426=null;
        Token REMAINDER_OP427=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2898:5: ( PRODUCT_OP | QUOTIENT_OP | REMAINDER_OP )
            int alt249=3;
            switch ( input.LA(1) ) {
            case PRODUCT_OP:
                {
                alt249=1;
                }
                break;
            case QUOTIENT_OP:
                {
                alt249=2;
                }
                break;
            case REMAINDER_OP:
                {
                alt249=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 249, 0, input);

                throw nvae;

            }

            switch (alt249) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2898:7: PRODUCT_OP
                    {
                    PRODUCT_OP425=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_multiplicativeOperator19104); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ProductOp(PRODUCT_OP425); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2900:7: QUOTIENT_OP
                    {
                    QUOTIENT_OP426=(Token)match(input,QUOTIENT_OP,FOLLOW_QUOTIENT_OP_in_multiplicativeOperator19121); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new QuotientOp(QUOTIENT_OP426); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2902:7: REMAINDER_OP
                    {
                    REMAINDER_OP427=(Token)match(input,REMAINDER_OP,FOLLOW_REMAINDER_OP_in_multiplicativeOperator19137); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RemainderOp(REMAINDER_OP427); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "multiplicativeOperator"



    // $ANTLR start "unionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2906:1: unionExpression returns [Term term] : ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )* ;
    public Term unionExpression() throws RecognitionException {
        Term term = null;


        Term ie1 =null;

        Term ie2 =null;

        BinaryOperatorExpression unionOperator428 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2907:5: (ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2907:7: ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )*
            {
            pushFollow(FOLLOW_intersectionExpression_in_unionExpression19168);
            ie1=intersectionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ie1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2909:7: ( unionOperator ie2= intersectionExpression )*
            loop250:
            do {
                int alt250=2;
                int LA250_0 = input.LA(1);

                if ( (LA250_0==COMPLEMENT_OP||LA250_0==UNION_OP) ) {
                    alt250=1;
                }


                switch (alt250) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2910:9: unionOperator ie2= intersectionExpression
            	    {
            	    pushFollow(FOLLOW_unionOperator_in_unionExpression19194);
            	    unionOperator428=unionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { unionOperator428.setLeftTerm(term);
            	              term = unionOperator428; }

            	    pushFollow(FOLLOW_intersectionExpression_in_unionExpression19217);
            	    ie2=intersectionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { unionOperator428.setRightTerm(ie2); }

            	    }
            	    break;

            	default :
            	    break loop250;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "unionExpression"



    // $ANTLR start "unionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2918:1: unionOperator returns [BinaryOperatorExpression operator] : ( UNION_OP | COMPLEMENT_OP );
    public BinaryOperatorExpression unionOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token UNION_OP429=null;
        Token COMPLEMENT_OP430=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2919:5: ( UNION_OP | COMPLEMENT_OP )
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==UNION_OP) ) {
                alt251=1;
            }
            else if ( (LA251_0==COMPLEMENT_OP) ) {
                alt251=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 251, 0, input);

                throw nvae;

            }
            switch (alt251) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2919:7: UNION_OP
                    {
                    UNION_OP429=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_unionOperator19261); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new UnionOp(UNION_OP429); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2921:7: COMPLEMENT_OP
                    {
                    COMPLEMENT_OP430=(Token)match(input,COMPLEMENT_OP,FOLLOW_COMPLEMENT_OP_in_unionOperator19277); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ComplementOp(COMPLEMENT_OP430); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "unionOperator"



    // $ANTLR start "intersectionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2925:1: intersectionExpression returns [Term term] : ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )* ;
    public Term intersectionExpression() throws RecognitionException {
        Term term = null;


        Term ne1 =null;

        Term ne2 =null;

        BinaryOperatorExpression intersectionOperator431 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2926:5: (ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2926:7: ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )*
            {
            pushFollow(FOLLOW_negationComplementExpression_in_intersectionExpression19308);
            ne1=negationComplementExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ne1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2928:7: ( intersectionOperator ne2= negationComplementExpression )*
            loop252:
            do {
                int alt252=2;
                int LA252_0 = input.LA(1);

                if ( (LA252_0==INTERSECTION_OP) ) {
                    alt252=1;
                }


                switch (alt252) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2929:9: intersectionOperator ne2= negationComplementExpression
            	    {
            	    pushFollow(FOLLOW_intersectionOperator_in_intersectionExpression19334);
            	    intersectionOperator431=intersectionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { intersectionOperator431.setLeftTerm(term);
            	              term = intersectionOperator431; }

            	    pushFollow(FOLLOW_negationComplementExpression_in_intersectionExpression19357);
            	    ne2=negationComplementExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { intersectionOperator431.setRightTerm(ne2); }

            	    }
            	    break;

            	default :
            	    break loop252;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "intersectionExpression"



    // $ANTLR start "intersectionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2937:1: intersectionOperator returns [BinaryOperatorExpression operator] : INTERSECTION_OP ;
    public BinaryOperatorExpression intersectionOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token INTERSECTION_OP432=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2938:5: ( INTERSECTION_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2938:7: INTERSECTION_OP
            {
            INTERSECTION_OP432=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_intersectionOperator19401); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new IntersectionOp(INTERSECTION_OP432); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "intersectionOperator"



    // $ANTLR start "negationComplementExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2942:1: negationComplementExpression returns [Term term] : ( unaryMinusOrComplementOperator ne= negationComplementExpression | exponentiationExpression );
    public Term negationComplementExpression() throws RecognitionException {
        Term term = null;


        Term ne =null;

        UnaryOperatorExpression unaryMinusOrComplementOperator433 =null;

        Term exponentiationExpression434 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2943:5: ( unaryMinusOrComplementOperator ne= negationComplementExpression | exponentiationExpression )
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==DIFFERENCE_OP||LA253_0==SUM_OP) ) {
                alt253=1;
            }
            else if ( (LA253_0==BACKTICK||LA253_0==CHAR_LITERAL||LA253_0==DECREMENT_OP||LA253_0==DYNAMIC||LA253_0==FLOAT_LITERAL||LA253_0==INCREMENT_OP||(LA253_0 >= LBRACE && LA253_0 <= LBRACKET)||LA253_0==LIDENTIFIER||LA253_0==LPAREN||LA253_0==NATURAL_LITERAL||LA253_0==OBJECT_DEFINITION||(LA253_0 >= OUTER && LA253_0 <= PACKAGE)||LA253_0==STRING_LITERAL||LA253_0==STRING_START||LA253_0==SUPER||LA253_0==THIS||LA253_0==UIDENTIFIER||LA253_0==VERBATIM_STRING) ) {
                alt253=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                    new NoViableAltException("", 253, 0, input);

                throw nvae;

            }
            switch (alt253) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2943:7: unaryMinusOrComplementOperator ne= negationComplementExpression
                    {
                    pushFollow(FOLLOW_unaryMinusOrComplementOperator_in_negationComplementExpression19430);
                    unaryMinusOrComplementOperator433=unaryMinusOrComplementOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = unaryMinusOrComplementOperator433; }

                    pushFollow(FOLLOW_negationComplementExpression_in_negationComplementExpression19449);
                    ne=negationComplementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { unaryMinusOrComplementOperator433.setTerm(ne); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2947:7: exponentiationExpression
                    {
                    pushFollow(FOLLOW_exponentiationExpression_in_negationComplementExpression19465);
                    exponentiationExpression434=exponentiationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = exponentiationExpression434; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "negationComplementExpression"



    // $ANTLR start "unaryMinusOrComplementOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2951:1: unaryMinusOrComplementOperator returns [UnaryOperatorExpression operator] : ( DIFFERENCE_OP | SUM_OP );
    public UnaryOperatorExpression unaryMinusOrComplementOperator() throws RecognitionException {
        UnaryOperatorExpression operator = null;


        Token DIFFERENCE_OP435=null;
        Token SUM_OP436=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2952:5: ( DIFFERENCE_OP | SUM_OP )
            int alt254=2;
            int LA254_0 = input.LA(1);

            if ( (LA254_0==DIFFERENCE_OP) ) {
                alt254=1;
            }
            else if ( (LA254_0==SUM_OP) ) {
                alt254=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 254, 0, input);

                throw nvae;

            }
            switch (alt254) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2952:7: DIFFERENCE_OP
                    {
                    DIFFERENCE_OP435=(Token)match(input,DIFFERENCE_OP,FOLLOW_DIFFERENCE_OP_in_unaryMinusOrComplementOperator19494); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new NegativeOp(DIFFERENCE_OP435); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2954:7: SUM_OP
                    {
                    SUM_OP436=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_unaryMinusOrComplementOperator19511); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PositiveOp(SUM_OP436); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "unaryMinusOrComplementOperator"



    // $ANTLR start "exponentiationExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2958:1: exponentiationExpression returns [Term term] : incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )? ;
    public Term exponentiationExpression() throws RecognitionException {
        Term term = null;


        Term ee =null;

        Term incrementDecrementExpression437 =null;

        PowerOp exponentiationOperator438 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2959:5: ( incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2959:7: incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )?
            {
            pushFollow(FOLLOW_incrementDecrementExpression_in_exponentiationExpression19540);
            incrementDecrementExpression437=incrementDecrementExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = incrementDecrementExpression437; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2961:7: ( exponentiationOperator ee= exponentiationExpression )?
            int alt255=2;
            int LA255_0 = input.LA(1);

            if ( (LA255_0==POWER_OP) ) {
                alt255=1;
            }
            switch (alt255) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2962:9: exponentiationOperator ee= exponentiationExpression
                    {
                    pushFollow(FOLLOW_exponentiationOperator_in_exponentiationExpression19566);
                    exponentiationOperator438=exponentiationOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { exponentiationOperator438.setLeftTerm(term);
                              term = exponentiationOperator438; }

                    pushFollow(FOLLOW_exponentiationExpression_in_exponentiationExpression19588);
                    ee=exponentiationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { exponentiationOperator438.setRightTerm(ee); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "exponentiationExpression"



    // $ANTLR start "exponentiationOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2970:1: exponentiationOperator returns [PowerOp operator] : POWER_OP ;
    public PowerOp exponentiationOperator() throws RecognitionException {
        PowerOp operator = null;


        Token POWER_OP439=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2971:5: ( POWER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2971:7: POWER_OP
            {
            POWER_OP439=(Token)match(input,POWER_OP,FOLLOW_POWER_OP_in_exponentiationOperator19628); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new PowerOp(POWER_OP439); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "exponentiationOperator"



    // $ANTLR start "scaleOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2975:1: scaleOperator returns [ScaleOp operator] : SCALE_OP ;
    public ScaleOp scaleOperator() throws RecognitionException {
        ScaleOp operator = null;


        Token SCALE_OP440=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2976:5: ( SCALE_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2976:7: SCALE_OP
            {
            SCALE_OP440=(Token)match(input,SCALE_OP,FOLLOW_SCALE_OP_in_scaleOperator19658); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new ScaleOp(SCALE_OP440); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "scaleOperator"



    // $ANTLR start "incrementDecrementExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2980:1: incrementDecrementExpression returns [Term term] : ( prefixOperator ie= incrementDecrementExpression | postfixIncrementDecrementExpression );
    public Term incrementDecrementExpression() throws RecognitionException {
        Term term = null;


        Term ie =null;

        PrefixOperatorExpression prefixOperator441 =null;

        Term postfixIncrementDecrementExpression442 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2981:5: ( prefixOperator ie= incrementDecrementExpression | postfixIncrementDecrementExpression )
            int alt256=2;
            int LA256_0 = input.LA(1);

            if ( (LA256_0==DECREMENT_OP||LA256_0==INCREMENT_OP) ) {
                alt256=1;
            }
            else if ( (LA256_0==BACKTICK||LA256_0==CHAR_LITERAL||LA256_0==DYNAMIC||LA256_0==FLOAT_LITERAL||(LA256_0 >= LBRACE && LA256_0 <= LBRACKET)||LA256_0==LIDENTIFIER||LA256_0==LPAREN||LA256_0==NATURAL_LITERAL||LA256_0==OBJECT_DEFINITION||(LA256_0 >= OUTER && LA256_0 <= PACKAGE)||LA256_0==STRING_LITERAL||LA256_0==STRING_START||LA256_0==SUPER||LA256_0==THIS||LA256_0==UIDENTIFIER||LA256_0==VERBATIM_STRING) ) {
                alt256=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                    new NoViableAltException("", 256, 0, input);

                throw nvae;

            }
            switch (alt256) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2981:7: prefixOperator ie= incrementDecrementExpression
                    {
                    pushFollow(FOLLOW_prefixOperator_in_incrementDecrementExpression19688);
                    prefixOperator441=prefixOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = prefixOperator441; }

                    pushFollow(FOLLOW_incrementDecrementExpression_in_incrementDecrementExpression19706);
                    ie=incrementDecrementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { prefixOperator441.setTerm(ie); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2985:7: postfixIncrementDecrementExpression
                    {
                    pushFollow(FOLLOW_postfixIncrementDecrementExpression_in_incrementDecrementExpression19722);
                    postfixIncrementDecrementExpression442=postfixIncrementDecrementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = postfixIncrementDecrementExpression442; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "incrementDecrementExpression"



    // $ANTLR start "prefixOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2989:1: prefixOperator returns [PrefixOperatorExpression operator] : ( DECREMENT_OP | INCREMENT_OP );
    public PrefixOperatorExpression prefixOperator() throws RecognitionException {
        PrefixOperatorExpression operator = null;


        Token DECREMENT_OP443=null;
        Token INCREMENT_OP444=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2990:5: ( DECREMENT_OP | INCREMENT_OP )
            int alt257=2;
            int LA257_0 = input.LA(1);

            if ( (LA257_0==DECREMENT_OP) ) {
                alt257=1;
            }
            else if ( (LA257_0==INCREMENT_OP) ) {
                alt257=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 257, 0, input);

                throw nvae;

            }
            switch (alt257) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2990:7: DECREMENT_OP
                    {
                    DECREMENT_OP443=(Token)match(input,DECREMENT_OP,FOLLOW_DECREMENT_OP_in_prefixOperator19751); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DecrementOp(DECREMENT_OP443); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2992:7: INCREMENT_OP
                    {
                    INCREMENT_OP444=(Token)match(input,INCREMENT_OP,FOLLOW_INCREMENT_OP_in_prefixOperator19768); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IncrementOp(INCREMENT_OP444); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "prefixOperator"



    // $ANTLR start "postfixIncrementDecrementExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2996:1: postfixIncrementDecrementExpression returns [Term term] : primary ( postfixOperator )* ;
    public Term postfixIncrementDecrementExpression() throws RecognitionException {
        Term term = null;


        Primary primary445 =null;

        PostfixOperatorExpression postfixOperator446 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2997:5: ( primary ( postfixOperator )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2997:7: primary ( postfixOperator )*
            {
            pushFollow(FOLLOW_primary_in_postfixIncrementDecrementExpression19798);
            primary445=primary();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = primary445; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2999:7: ( postfixOperator )*
            loop258:
            do {
                int alt258=2;
                int LA258_0 = input.LA(1);

                if ( (LA258_0==DECREMENT_OP||LA258_0==INCREMENT_OP) ) {
                    alt258=1;
                }


                switch (alt258) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3000:9: postfixOperator
            	    {
            	    pushFollow(FOLLOW_postfixOperator_in_postfixIncrementDecrementExpression19826);
            	    postfixOperator446=postfixOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { postfixOperator446.setTerm(term);
            	              term = postfixOperator446; }

            	    }
            	    break;

            	default :
            	    break loop258;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "postfixIncrementDecrementExpression"



    // $ANTLR start "postfixOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3006:1: postfixOperator returns [PostfixOperatorExpression operator] : ( DECREMENT_OP | INCREMENT_OP );
    public PostfixOperatorExpression postfixOperator() throws RecognitionException {
        PostfixOperatorExpression operator = null;


        Token DECREMENT_OP447=null;
        Token INCREMENT_OP448=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3007:5: ( DECREMENT_OP | INCREMENT_OP )
            int alt259=2;
            int LA259_0 = input.LA(1);

            if ( (LA259_0==DECREMENT_OP) ) {
                alt259=1;
            }
            else if ( (LA259_0==INCREMENT_OP) ) {
                alt259=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 259, 0, input);

                throw nvae;

            }
            switch (alt259) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3007:7: DECREMENT_OP
                    {
                    DECREMENT_OP447=(Token)match(input,DECREMENT_OP,FOLLOW_DECREMENT_OP_in_postfixOperator19866); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PostfixDecrementOp(DECREMENT_OP447); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3009:7: INCREMENT_OP
                    {
                    INCREMENT_OP448=(Token)match(input,INCREMENT_OP,FOLLOW_INCREMENT_OP_in_postfixOperator19883); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PostfixIncrementOp(INCREMENT_OP448); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "postfixOperator"



    // $ANTLR start "selfReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3013:1: selfReference returns [Atom atom] : ( THIS | SUPER | OUTER | PACKAGE );
    public Atom selfReference() throws RecognitionException {
        Atom atom = null;


        Token THIS449=null;
        Token SUPER450=null;
        Token OUTER451=null;
        Token PACKAGE452=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3014:5: ( THIS | SUPER | OUTER | PACKAGE )
            int alt260=4;
            switch ( input.LA(1) ) {
            case THIS:
                {
                alt260=1;
                }
                break;
            case SUPER:
                {
                alt260=2;
                }
                break;
            case OUTER:
                {
                alt260=3;
                }
                break;
            case PACKAGE:
                {
                alt260=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return atom;}
                NoViableAltException nvae =
                    new NoViableAltException("", 260, 0, input);

                throw nvae;

            }

            switch (alt260) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3014:7: THIS
                    {
                    THIS449=(Token)match(input,THIS,FOLLOW_THIS_in_selfReference19913); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new This(THIS449); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3016:7: SUPER
                    {
                    SUPER450=(Token)match(input,SUPER,FOLLOW_SUPER_in_selfReference19929); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Super(SUPER450); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3018:7: OUTER
                    {
                    OUTER451=(Token)match(input,OUTER,FOLLOW_OUTER_in_selfReference19946); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Outer(OUTER451); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3020:7: PACKAGE
                    {
                    PACKAGE452=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_selfReference19962); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Package(PACKAGE452); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return atom;
    }
    // $ANTLR end "selfReference"



    // $ANTLR start "nonstringLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3024:1: nonstringLiteral returns [Literal literal] : ( NATURAL_LITERAL | FLOAT_LITERAL | CHAR_LITERAL );
    public Literal nonstringLiteral() throws RecognitionException {
        Literal literal = null;


        Token NATURAL_LITERAL453=null;
        Token FLOAT_LITERAL454=null;
        Token CHAR_LITERAL455=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3025:5: ( NATURAL_LITERAL | FLOAT_LITERAL | CHAR_LITERAL )
            int alt261=3;
            switch ( input.LA(1) ) {
            case NATURAL_LITERAL:
                {
                alt261=1;
                }
                break;
            case FLOAT_LITERAL:
                {
                alt261=2;
                }
                break;
            case CHAR_LITERAL:
                {
                alt261=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return literal;}
                NoViableAltException nvae =
                    new NoViableAltException("", 261, 0, input);

                throw nvae;

            }

            switch (alt261) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3025:7: NATURAL_LITERAL
                    {
                    NATURAL_LITERAL453=(Token)match(input,NATURAL_LITERAL,FOLLOW_NATURAL_LITERAL_in_nonstringLiteral19995); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new NaturalLiteral(NATURAL_LITERAL453); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3027:7: FLOAT_LITERAL
                    {
                    FLOAT_LITERAL454=(Token)match(input,FLOAT_LITERAL,FOLLOW_FLOAT_LITERAL_in_nonstringLiteral20012); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new FloatLiteral(FLOAT_LITERAL454); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3029:7: CHAR_LITERAL
                    {
                    CHAR_LITERAL455=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_nonstringLiteral20029); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new CharLiteral(CHAR_LITERAL455); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "nonstringLiteral"



    // $ANTLR start "stringLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3033:1: stringLiteral returns [StringLiteral stringLiteral] : ( STRING_LITERAL | VERBATIM_STRING );
    public StringLiteral stringLiteral() throws RecognitionException {
        StringLiteral stringLiteral = null;


        Token STRING_LITERAL456=null;
        Token VERBATIM_STRING457=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3034:5: ( STRING_LITERAL | VERBATIM_STRING )
            int alt262=2;
            int LA262_0 = input.LA(1);

            if ( (LA262_0==STRING_LITERAL) ) {
                alt262=1;
            }
            else if ( (LA262_0==VERBATIM_STRING) ) {
                alt262=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return stringLiteral;}
                NoViableAltException nvae =
                    new NoViableAltException("", 262, 0, input);

                throw nvae;

            }
            switch (alt262) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3034:7: STRING_LITERAL
                    {
                    STRING_LITERAL456=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_stringLiteral20059); if (state.failed) return stringLiteral;

                    if ( state.backtracking==0 ) { stringLiteral = new StringLiteral(STRING_LITERAL456); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3036:7: VERBATIM_STRING
                    {
                    VERBATIM_STRING457=(Token)match(input,VERBATIM_STRING,FOLLOW_VERBATIM_STRING_in_stringLiteral20076); if (state.failed) return stringLiteral;

                    if ( state.backtracking==0 ) { stringLiteral = new StringLiteral(VERBATIM_STRING457); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return stringLiteral;
    }
    // $ANTLR end "stringLiteral"



    // $ANTLR start "stringExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3040:1: stringExpression returns [Atom atom] : (sl1= stringLiteral | STRING_START e1= functionOrExpression ( STRING_MID e2= functionOrExpression )* STRING_END );
    public Atom stringExpression() throws RecognitionException {
        Atom atom = null;


        Token STRING_START458=null;
        Token STRING_MID459=null;
        Token STRING_END460=null;
        StringLiteral sl1 =null;

        Expression e1 =null;

        Expression e2 =null;


         StringTemplate st=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3042:5: (sl1= stringLiteral | STRING_START e1= functionOrExpression ( STRING_MID e2= functionOrExpression )* STRING_END )
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( (LA264_0==STRING_LITERAL||LA264_0==VERBATIM_STRING) ) {
                alt264=1;
            }
            else if ( (LA264_0==STRING_START) ) {
                alt264=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return atom;}
                NoViableAltException nvae =
                    new NoViableAltException("", 264, 0, input);

                throw nvae;

            }
            switch (alt264) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3042:7: sl1= stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_stringExpression20116);
                    sl1=stringLiteral();

                    state._fsp--;
                    if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom =sl1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3044:7: STRING_START e1= functionOrExpression ( STRING_MID e2= functionOrExpression )* STRING_END
                    {
                    STRING_START458=(Token)match(input,STRING_START,FOLLOW_STRING_START_in_stringExpression20132); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { st = new StringTemplate(null);
                            st.addStringLiteral(new StringLiteral(STRING_START458));
                            atom =st; }

                    pushFollow(FOLLOW_functionOrExpression_in_stringExpression20150);
                    e1=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return atom;

                    if ( state.backtracking==0 ) { if (e1!=null) 
                                st.addExpression(e1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3051:7: ( STRING_MID e2= functionOrExpression )*
                    loop263:
                    do {
                        int alt263=2;
                        int LA263_0 = input.LA(1);

                        if ( (LA263_0==STRING_MID) ) {
                            alt263=1;
                        }


                        switch (alt263) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3052:9: STRING_MID e2= functionOrExpression
                    	    {
                    	    STRING_MID459=(Token)match(input,STRING_MID,FOLLOW_STRING_MID_in_stringExpression20176); if (state.failed) return atom;

                    	    if ( state.backtracking==0 ) { st.addStringLiteral(new StringLiteral(STRING_MID459)); }

                    	    pushFollow(FOLLOW_functionOrExpression_in_stringExpression20198);
                    	    e2=functionOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return atom;

                    	    if ( state.backtracking==0 ) { if (e2!=null) 
                    	                  st.addExpression(e2); }

                    	    }
                    	    break;

                    	default :
                    	    break loop263;
                        }
                    } while (true);


                    STRING_END460=(Token)match(input,STRING_END,FOLLOW_STRING_END_in_stringExpression20225); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { st.addStringLiteral(new StringLiteral(STRING_END460)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return atom;
    }
    // $ANTLR end "stringExpression"



    // $ANTLR start "typeArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3062:1: typeArguments returns [TypeArgumentList typeArgumentList] : SMALLER_OP ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )? LARGER_OP ;
    public TypeArgumentList typeArguments() throws RecognitionException {
        TypeArgumentList typeArgumentList = null;


        Token c=null;
        Token SMALLER_OP461=null;
        Token LARGER_OP462=null;
        TypeVariance v1 =null;

        StaticType ta1 =null;

        StaticType ta0 =null;

        TypeVariance v2 =null;

        StaticType ta2 =null;

        StaticType ta3 =null;


         TypeVariance v=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3064:5: ( SMALLER_OP ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )? LARGER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3064:7: SMALLER_OP ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )? LARGER_OP
            {
            SMALLER_OP461=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArguments20263); if (state.failed) return typeArgumentList;

            if ( state.backtracking==0 ) { typeArgumentList = new TypeArgumentList(SMALLER_OP461); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3066:7: ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )?
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==IN_OP||(LA271_0 >= LBRACE && LA271_0 <= LBRACKET)||LA271_0==OUT||LA271_0==PACKAGE||LA271_0==SMALLER_OP||LA271_0==UIDENTIFIER) ) {
                alt271=1;
            }
            switch (alt271) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3067:9: (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )*
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3067:9: (v1= variance (ta1= type )? |ta0= type )
                    int alt266=2;
                    int LA266_0 = input.LA(1);

                    if ( (LA266_0==IN_OP||LA266_0==OUT) ) {
                        alt266=1;
                    }
                    else if ( ((LA266_0 >= LBRACE && LA266_0 <= LBRACKET)||LA266_0==PACKAGE||LA266_0==SMALLER_OP||LA266_0==UIDENTIFIER) ) {
                        alt266=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 266, 0, input);

                        throw nvae;

                    }
                    switch (alt266) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3068:11: v1= variance (ta1= type )?
                            {
                            pushFollow(FOLLOW_variance_in_typeArguments20303);
                            v1=variance();

                            state._fsp--;
                            if (state.failed) return typeArgumentList;

                            if ( state.backtracking==0 ) { v = v1; }

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3070:11: (ta1= type )?
                            int alt265=2;
                            int LA265_0 = input.LA(1);

                            if ( ((LA265_0 >= LBRACE && LA265_0 <= LBRACKET)||LA265_0==PACKAGE||LA265_0==SMALLER_OP||LA265_0==UIDENTIFIER) ) {
                                alt265=1;
                            }
                            switch (alt265) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3071:13: ta1= type
                                    {
                                    pushFollow(FOLLOW_type_in_typeArguments20343);
                                    ta1=type();

                                    state._fsp--;
                                    if (state.failed) return typeArgumentList;

                                    if ( state.backtracking==0 ) { if (ta1!=null)
                                                      typeArgumentList.addType(ta1);
                                                  if (v!=null && ta1!=null) 
                                                      ta1.setTypeVariance(v); }

                                    }
                                    break;

                            }


                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3078:11: ta0= type
                            {
                            pushFollow(FOLLOW_type_in_typeArguments20394);
                            ta0=type();

                            state._fsp--;
                            if (state.failed) return typeArgumentList;

                            if ( state.backtracking==0 ) { if (ta0!=null)
                                            typeArgumentList.addType(ta0); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3082:9: (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )*
                    loop270:
                    do {
                        int alt270=2;
                        int LA270_0 = input.LA(1);

                        if ( (LA270_0==COMMA) ) {
                            alt270=1;
                        }


                        switch (alt270) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3083:11: c= COMMA (v2= variance (ta2= type |) | (ta3= type |) )
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_typeArguments20440); if (state.failed) return typeArgumentList;

                    	    if ( state.backtracking==0 ) { typeArgumentList.setEndToken(c); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3085:11: (v2= variance (ta2= type |) | (ta3= type |) )
                    	    int alt269=2;
                    	    int LA269_0 = input.LA(1);

                    	    if ( (LA269_0==IN_OP||LA269_0==OUT) ) {
                    	        alt269=1;
                    	    }
                    	    else if ( (LA269_0==COMMA||LA269_0==LARGER_OP||(LA269_0 >= LBRACE && LA269_0 <= LBRACKET)||LA269_0==PACKAGE||LA269_0==SMALLER_OP||LA269_0==UIDENTIFIER) ) {
                    	        alt269=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 269, 0, input);

                    	        throw nvae;

                    	    }
                    	    switch (alt269) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3086:13: v2= variance (ta2= type |)
                    	            {
                    	            pushFollow(FOLLOW_variance_in_typeArguments20480);
                    	            v2=variance();

                    	            state._fsp--;
                    	            if (state.failed) return typeArgumentList;

                    	            if ( state.backtracking==0 ) { v = v2; }

                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3088:13: (ta2= type |)
                    	            int alt267=2;
                    	            int LA267_0 = input.LA(1);

                    	            if ( ((LA267_0 >= LBRACE && LA267_0 <= LBRACKET)||LA267_0==PACKAGE||LA267_0==SMALLER_OP||LA267_0==UIDENTIFIER) ) {
                    	                alt267=1;
                    	            }
                    	            else if ( (LA267_0==COMMA||LA267_0==LARGER_OP) ) {
                    	                alt267=2;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 267, 0, input);

                    	                throw nvae;

                    	            }
                    	            switch (alt267) {
                    	                case 1 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3089:15: ta2= type
                    	                    {
                    	                    pushFollow(FOLLOW_type_in_typeArguments20526);
                    	                    ta2=type();

                    	                    state._fsp--;
                    	                    if (state.failed) return typeArgumentList;

                    	                    if ( state.backtracking==0 ) { if (ta2!=null) {
                    	                                        typeArgumentList.addType(ta2);
                    	                                        if (v!=null && ta2!=null) 
                    	                                            ta2.setTypeVariance(v);
                    	                                        typeArgumentList.setEndToken(null); } }

                    	                    }
                    	                    break;
                    	                case 2 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3095:15: 
                    	                    {
                    	                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                                          new MismatchedTokenException(UIDENTIFIER, input)); }

                    	                    }
                    	                    break;

                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3099:13: (ta3= type |)
                    	            {
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3099:13: (ta3= type |)
                    	            int alt268=2;
                    	            int LA268_0 = input.LA(1);

                    	            if ( ((LA268_0 >= LBRACE && LA268_0 <= LBRACKET)||LA268_0==PACKAGE||LA268_0==SMALLER_OP||LA268_0==UIDENTIFIER) ) {
                    	                alt268=1;
                    	            }
                    	            else if ( (LA268_0==COMMA||LA268_0==LARGER_OP) ) {
                    	                alt268=2;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 268, 0, input);

                    	                throw nvae;

                    	            }
                    	            switch (alt268) {
                    	                case 1 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3100:15: ta3= type
                    	                    {
                    	                    pushFollow(FOLLOW_type_in_typeArguments20617);
                    	                    ta3=type();

                    	                    state._fsp--;
                    	                    if (state.failed) return typeArgumentList;

                    	                    if ( state.backtracking==0 ) { if (ta3!=null) {
                    	                                        typeArgumentList.addType(ta3);
                    	                                        typeArgumentList.setEndToken(null); } }

                    	                    }
                    	                    break;
                    	                case 2 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3104:15: 
                    	                    {
                    	                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                                      new MismatchedTokenException(UIDENTIFIER, input)); }

                    	                    }
                    	                    break;

                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop270;
                        }
                    } while (true);


                    }
                    break;

            }


            LARGER_OP462=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeArguments20703); if (state.failed) return typeArgumentList;

            if ( state.backtracking==0 ) { typeArgumentList.setEndToken(LARGER_OP462); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeArgumentList;
    }
    // $ANTLR end "typeArguments"



    // $ANTLR start "variadicType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3114:1: variadicType returns [Type type] : ( ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )? |t= type );
    public Type variadicType() throws RecognitionException {
        Type type = null;


        Token PRODUCT_OP463=null;
        Token SUM_OP464=null;
        StaticType at =null;

        StaticType t =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3115:5: ( ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )? |t= type )
            int alt273=2;
            switch ( input.LA(1) ) {
            case UIDENTIFIER:
                {
                int LA273_1 = input.LA(2);

                if ( (synpred33_Ceylon()) ) {
                    alt273=1;
                }
                else if ( (true) ) {
                    alt273=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 273, 1, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA273_2 = input.LA(2);

                if ( (synpred33_Ceylon()) ) {
                    alt273=1;
                }
                else if ( (true) ) {
                    alt273=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 273, 2, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA273_3 = input.LA(2);

                if ( (synpred33_Ceylon()) ) {
                    alt273=1;
                }
                else if ( (true) ) {
                    alt273=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 273, 3, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA273_4 = input.LA(2);

                if ( (synpred33_Ceylon()) ) {
                    alt273=1;
                }
                else if ( (true) ) {
                    alt273=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 273, 4, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA273_5 = input.LA(2);

                if ( (synpred33_Ceylon()) ) {
                    alt273=1;
                }
                else if ( (true) ) {
                    alt273=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 273, 5, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 273, 0, input);

                throw nvae;

            }

            switch (alt273) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3115:7: ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )?
                    {
                    pushFollow(FOLLOW_unionType_in_variadicType20751);
                    at=unionType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = at; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3118:7: ( PRODUCT_OP | SUM_OP )?
                    int alt272=3;
                    int LA272_0 = input.LA(1);

                    if ( (LA272_0==PRODUCT_OP) ) {
                        alt272=1;
                    }
                    else if ( (LA272_0==SUM_OP) ) {
                        alt272=2;
                    }
                    switch (alt272) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3119:9: PRODUCT_OP
                            {
                            PRODUCT_OP463=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_variadicType20777); if (state.failed) return type;

                            if ( state.backtracking==0 ) { SequencedType st = new SequencedType(null);
                                      st.setType(at); 
                                      st.setEndToken(PRODUCT_OP463);
                                      type = st; }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3125:9: SUM_OP
                            {
                            SUM_OP464=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_variadicType20805); if (state.failed) return type;

                            if ( state.backtracking==0 ) { SequencedType st = new SequencedType(null);
                                      st.setType(at); 
                                      st.setEndToken(SUM_OP464);
                                      st.setAtLeastOne(true);
                                      type = st; }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3132:7: t= type
                    {
                    pushFollow(FOLLOW_type_in_variadicType20834);
                    t=type();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = t; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "variadicType"



    // $ANTLR start "defaultedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3136:1: defaultedType returns [Type type] : ( ( type ( SPECIFY ) )=>t= type ( SPECIFY )? | variadicType );
    public Type defaultedType() throws RecognitionException {
        Type type = null;


        Token SPECIFY465=null;
        StaticType t =null;

        Type variadicType466 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3137:5: ( ( type ( SPECIFY ) )=>t= type ( SPECIFY )? | variadicType )
            int alt275=2;
            switch ( input.LA(1) ) {
            case UIDENTIFIER:
                {
                int LA275_1 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt275=1;
                }
                else if ( (true) ) {
                    alt275=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 275, 1, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA275_2 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt275=1;
                }
                else if ( (true) ) {
                    alt275=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 275, 2, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA275_3 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt275=1;
                }
                else if ( (true) ) {
                    alt275=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 275, 3, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA275_4 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt275=1;
                }
                else if ( (true) ) {
                    alt275=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 275, 4, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA275_5 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt275=1;
                }
                else if ( (true) ) {
                    alt275=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 275, 5, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 275, 0, input);

                throw nvae;

            }

            switch (alt275) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3137:7: ( type ( SPECIFY ) )=>t= type ( SPECIFY )?
                    {
                    pushFollow(FOLLOW_type_in_defaultedType20880);
                    t=type();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = t; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3140:7: ( SPECIFY )?
                    int alt274=2;
                    int LA274_0 = input.LA(1);

                    if ( (LA274_0==SPECIFY) ) {
                        alt274=1;
                    }
                    switch (alt274) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3141:9: SPECIFY
                            {
                            SPECIFY465=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_defaultedType20906); if (state.failed) return type;

                            if ( state.backtracking==0 ) { DefaultedType st = new DefaultedType(null);
                                      st.setType(t); 
                                      st.setEndToken(SPECIFY465);
                                      type = st; }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3147:7: variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_defaultedType20933);
                    variadicType466=variadicType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =variadicType466; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "defaultedType"



    // $ANTLR start "spreadType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3151:1: spreadType returns [Type type] : PRODUCT_OP (sp= unionType )? ;
    public Type spreadType() throws RecognitionException {
        Type type = null;


        Token PRODUCT_OP467=null;
        StaticType sp =null;


         SpreadType spt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3153:5: ( PRODUCT_OP (sp= unionType )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3153:7: PRODUCT_OP (sp= unionType )?
            {
            PRODUCT_OP467=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_spreadType20971); if (state.failed) return type;

            if ( state.backtracking==0 ) { spt = new SpreadType(PRODUCT_OP467);
                    type =spt; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3156:7: (sp= unionType )?
            int alt276=2;
            int LA276_0 = input.LA(1);

            if ( ((LA276_0 >= LBRACE && LA276_0 <= LBRACKET)||LA276_0==PACKAGE||LA276_0==SMALLER_OP||LA276_0==UIDENTIFIER) ) {
                alt276=1;
            }
            switch (alt276) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3157:9: sp= unionType
                    {
                    pushFollow(FOLLOW_unionType_in_spreadType20999);
                    sp=unionType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { spt.setType(sp); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "spreadType"



    // $ANTLR start "tupleType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3162:1: tupleType returns [TupleType type] : LBRACKET (spt= spreadType |t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET ;
    public TupleType tupleType() throws RecognitionException {
        TupleType type = null;


        Token c=null;
        Token LBRACKET468=null;
        Token RBRACKET469=null;
        Type spt =null;

        Type t1 =null;

        Type t2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3163:5: ( LBRACKET (spt= spreadType |t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3163:7: LBRACKET (spt= spreadType |t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET
            {
            LBRACKET468=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_tupleType21039); if (state.failed) return type;

            if ( state.backtracking==0 ) { type = new TupleType(LBRACKET468); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3165:7: (spt= spreadType |t1= defaultedType (c= COMMA t2= defaultedType )* )?
            int alt278=3;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==PRODUCT_OP) ) {
                alt278=1;
            }
            else if ( ((LA278_0 >= LBRACE && LA278_0 <= LBRACKET)||LA278_0==PACKAGE||LA278_0==SMALLER_OP||LA278_0==UIDENTIFIER) ) {
                alt278=2;
            }
            switch (alt278) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3166:9: spt= spreadType
                    {
                    pushFollow(FOLLOW_spreadType_in_tupleType21067);
                    spt=spreadType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.addElementType(spt); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3169:9: t1= defaultedType (c= COMMA t2= defaultedType )*
                    {
                    pushFollow(FOLLOW_defaultedType_in_tupleType21097);
                    t1=defaultedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.addElementType(t1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3171:9: (c= COMMA t2= defaultedType )*
                    loop277:
                    do {
                        int alt277=2;
                        int LA277_0 = input.LA(1);

                        if ( (LA277_0==COMMA) ) {
                            alt277=1;
                        }


                        switch (alt277) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3172:11: c= COMMA t2= defaultedType
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_tupleType21131); if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { type.setEndToken(c); }

                    	    pushFollow(FOLLOW_defaultedType_in_tupleType21157);
                    	    t2=defaultedType();

                    	    state._fsp--;
                    	    if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { type.addElementType(t2);
                    	                type.setEndToken(null); }

                    	    }
                    	    break;

                    	default :
                    	    break loop277;
                        }
                    } while (true);


                    }
                    break;

            }


            RBRACKET469=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_tupleType21197); if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setEndToken(RBRACKET469); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "tupleType"



    // $ANTLR start "groupedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3183:1: groupedType returns [GroupedType type] : SMALLER_OP t= type LARGER_OP ;
    public GroupedType groupedType() throws RecognitionException {
        GroupedType type = null;


        Token SMALLER_OP470=null;
        Token LARGER_OP471=null;
        StaticType t =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3184:5: ( SMALLER_OP t= type LARGER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3184:7: SMALLER_OP t= type LARGER_OP
            {
            SMALLER_OP470=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_groupedType21226); if (state.failed) return type;

            if ( state.backtracking==0 ) { type = new GroupedType(SMALLER_OP470); }

            pushFollow(FOLLOW_type_in_groupedType21244);
            t=type();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setType(t); }

            LARGER_OP471=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_groupedType21260); if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setEndToken(LARGER_OP471); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "groupedType"



    // $ANTLR start "iterableType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3192:1: iterableType returns [IterableType type] : LBRACE (t= variadicType )? RBRACE ;
    public IterableType iterableType() throws RecognitionException {
        IterableType type = null;


        Token LBRACE472=null;
        Token RBRACE473=null;
        Type t =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3193:4: ( LBRACE (t= variadicType )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3193:6: LBRACE (t= variadicType )? RBRACE
            {
            LBRACE472=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_iterableType21288); if (state.failed) return type;

            if ( state.backtracking==0 ) { type = new IterableType(LBRACE472); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3195:6: (t= variadicType )?
            int alt279=2;
            int LA279_0 = input.LA(1);

            if ( ((LA279_0 >= LBRACE && LA279_0 <= LBRACKET)||LA279_0==PACKAGE||LA279_0==SMALLER_OP||LA279_0==UIDENTIFIER) ) {
                alt279=1;
            }
            switch (alt279) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3196:8: t= variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_iterableType21313);
                    t=variadicType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.setElementType(t); }

                    }
                    break;

            }


            RBRACE473=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_iterableType21337); if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setEndToken(RBRACE473); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "iterableType"



    // $ANTLR start "type"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3203:1: type returns [StaticType type] : t1= unionType ( ENTRY_OP (t2= unionType ) )? ;
    public StaticType type() throws RecognitionException {
        StaticType type = null;


        Token ENTRY_OP474=null;
        StaticType t1 =null;

        StaticType t2 =null;


         EntryType bt=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3205:5: (t1= unionType ( ENTRY_OP (t2= unionType ) )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3205:7: t1= unionType ( ENTRY_OP (t2= unionType ) )?
            {
            pushFollow(FOLLOW_unionType_in_type21375);
            t1=unionType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type =t1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3207:7: ( ENTRY_OP (t2= unionType ) )?
            int alt280=2;
            int LA280_0 = input.LA(1);

            if ( (LA280_0==ENTRY_OP) ) {
                alt280=1;
            }
            switch (alt280) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3208:9: ENTRY_OP (t2= unionType )
                    {
                    ENTRY_OP474=(Token)match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_type21401); if (state.failed) return type;

                    if ( state.backtracking==0 ) { bt=new EntryType(null);
                              bt.setKeyType(type);
                              bt.setEndToken(ENTRY_OP474); 
                              type =bt; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3213:9: (t2= unionType )
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3214:11: t2= unionType
                    {
                    pushFollow(FOLLOW_unionType_in_type21435);
                    t2=unionType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { bt.setValueType(t2);
                                bt.setEndToken(null); }

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "type"



    // $ANTLR start "unionType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3223:1: unionType returns [StaticType type] : it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )? ;
    public StaticType unionType() throws RecognitionException {
        StaticType type = null;


        Token u=null;
        StaticType it1 =null;

        StaticType it2 =null;


         UnionType ut=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3225:5: (it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3225:7: it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )?
            {
            pushFollow(FOLLOW_intersectionType_in_unionType21500);
            it1=intersectionType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type = it1;
                    ut = new UnionType(null);
                    ut.addStaticType(type); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3229:7: ( (u= UNION_OP (it2= intersectionType ) )+ )?
            int alt282=2;
            int LA282_0 = input.LA(1);

            if ( (LA282_0==UNION_OP) ) {
                alt282=1;
            }
            switch (alt282) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3230:9: (u= UNION_OP (it2= intersectionType ) )+
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3230:9: (u= UNION_OP (it2= intersectionType ) )+
                    int cnt281=0;
                    loop281:
                    do {
                        int alt281=2;
                        int LA281_0 = input.LA(1);

                        if ( (LA281_0==UNION_OP) ) {
                            alt281=1;
                        }


                        switch (alt281) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3231:11: u= UNION_OP (it2= intersectionType )
                    	    {
                    	    u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_unionType21541); if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { ut.setEndToken(u); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3233:11: (it2= intersectionType )
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3234:13: it2= intersectionType
                    	    {
                    	    pushFollow(FOLLOW_intersectionType_in_unionType21581);
                    	    it2=intersectionType();

                    	    state._fsp--;
                    	    if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { if (it2!=null) {
                    	                      ut.addStaticType(it2);
                    	                      ut.setEndToken(null); 
                    	                  } }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt281 >= 1 ) break loop281;
                    	    if (state.backtracking>0) {state.failed=true; return type;}
                                EarlyExitException eee =
                                    new EarlyExitException(281, input);
                                throw eee;
                        }
                        cnt281++;
                    } while (true);


                    if ( state.backtracking==0 ) { type = ut; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "unionType"



    // $ANTLR start "intersectionType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3247:1: intersectionType returns [StaticType type] : at1= primaryType ( (i= INTERSECTION_OP (at2= primaryType ) )+ )? ;
    public StaticType intersectionType() throws RecognitionException {
        StaticType type = null;


        Token i=null;
        StaticType at1 =null;

        StaticType at2 =null;


         IntersectionType it=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3249:5: (at1= primaryType ( (i= INTERSECTION_OP (at2= primaryType ) )+ )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3249:7: at1= primaryType ( (i= INTERSECTION_OP (at2= primaryType ) )+ )?
            {
            pushFollow(FOLLOW_primaryType_in_intersectionType21671);
            at1=primaryType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type = at1;
                    it = new IntersectionType(null);
                    it.addStaticType(type); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3253:7: ( (i= INTERSECTION_OP (at2= primaryType ) )+ )?
            int alt284=2;
            int LA284_0 = input.LA(1);

            if ( (LA284_0==INTERSECTION_OP) ) {
                alt284=1;
            }
            switch (alt284) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3254:9: (i= INTERSECTION_OP (at2= primaryType ) )+
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3254:9: (i= INTERSECTION_OP (at2= primaryType ) )+
                    int cnt283=0;
                    loop283:
                    do {
                        int alt283=2;
                        int LA283_0 = input.LA(1);

                        if ( (LA283_0==INTERSECTION_OP) ) {
                            alt283=1;
                        }


                        switch (alt283) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3255:11: i= INTERSECTION_OP (at2= primaryType )
                    	    {
                    	    i=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_intersectionType21712); if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { it.setEndToken(i); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3257:11: (at2= primaryType )
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3258:13: at2= primaryType
                    	    {
                    	    pushFollow(FOLLOW_primaryType_in_intersectionType21752);
                    	    at2=primaryType();

                    	    state._fsp--;
                    	    if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { if (at2!=null) {
                    	                      it.addStaticType(at2);
                    	                      it.setEndToken(null); 
                    	                  } }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt283 >= 1 ) break loop283;
                    	    if (state.backtracking>0) {state.failed=true; return type;}
                                EarlyExitException eee =
                                    new EarlyExitException(283, input);
                                throw eee;
                        }
                        cnt283++;
                    } while (true);


                    if ( state.backtracking==0 ) { type = it; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "intersectionType"



    // $ANTLR start "atomicType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3271:1: atomicType returns [StaticType type] : ( qualifiedType | tupleType | iterableType );
    public StaticType atomicType() throws RecognitionException {
        StaticType type = null;


        StaticType qualifiedType475 =null;

        TupleType tupleType476 =null;

        IterableType iterableType477 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3272:5: ( qualifiedType | tupleType | iterableType )
            int alt285=3;
            switch ( input.LA(1) ) {
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt285=1;
                }
                break;
            case LBRACKET:
                {
                alt285=2;
                }
                break;
            case LBRACE:
                {
                alt285=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 285, 0, input);

                throw nvae;

            }

            switch (alt285) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3272:7: qualifiedType
                    {
                    pushFollow(FOLLOW_qualifiedType_in_atomicType21831);
                    qualifiedType475=qualifiedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =qualifiedType475; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3274:7: tupleType
                    {
                    pushFollow(FOLLOW_tupleType_in_atomicType21848);
                    tupleType476=tupleType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =tupleType476; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3276:7: iterableType
                    {
                    pushFollow(FOLLOW_iterableType_in_atomicType21865);
                    iterableType477=iterableType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =iterableType477; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "atomicType"



    // $ANTLR start "primaryType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3286:1: primaryType returns [StaticType type] : atomicType ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )* ;
    public StaticType primaryType() throws RecognitionException {
        StaticType type = null;


        Token OPTIONAL479=null;
        Token LBRACKET480=null;
        Token NATURAL_LITERAL481=null;
        Token RBRACKET482=null;
        Token LPAREN483=null;
        Token COMMA484=null;
        Token RPAREN485=null;
        Type spt =null;

        Type t1 =null;

        Type t2 =null;

        StaticType atomicType478 =null;


         FunctionType bt=null; SequenceType st=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3288:5: ( atomicType ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3288:7: atomicType ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )*
            {
            pushFollow(FOLLOW_atomicType_in_primaryType21906);
            atomicType478=atomicType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type =atomicType478; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3290:7: ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )*
            loop289:
            do {
                int alt289=4;
                switch ( input.LA(1) ) {
                case OPTIONAL:
                    {
                    alt289=1;
                    }
                    break;
                case LBRACKET:
                    {
                    alt289=2;
                    }
                    break;
                case LPAREN:
                    {
                    alt289=3;
                    }
                    break;

                }

                switch (alt289) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3291:9: OPTIONAL
            	    {
            	    OPTIONAL479=(Token)match(input,OPTIONAL,FOLLOW_OPTIONAL_in_primaryType21932); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { OptionalType ot = new OptionalType(null);
            	              ot.setDefiniteType(type);
            	              ot.setEndToken(OPTIONAL479);
            	              type =ot; }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3296:9: LBRACKET ( NATURAL_LITERAL )? RBRACKET
            	    {
            	    LBRACKET480=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_primaryType21953); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { st = new SequenceType(null);
            	              st.setElementType(type);
            	              st.setEndToken(LBRACKET480); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3300:9: ( NATURAL_LITERAL )?
            	    int alt286=2;
            	    int LA286_0 = input.LA(1);

            	    if ( (LA286_0==NATURAL_LITERAL) ) {
            	        alt286=1;
            	    }
            	    switch (alt286) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3301:11: NATURAL_LITERAL
            	            {
            	            NATURAL_LITERAL481=(Token)match(input,NATURAL_LITERAL,FOLLOW_NATURAL_LITERAL_in_primaryType21985); if (state.failed) return type;

            	            if ( state.backtracking==0 ) { st.setLength(new NaturalLiteral(NATURAL_LITERAL481)); 
            	                        st.setEndToken(NATURAL_LITERAL481); }

            	            }
            	            break;

            	    }


            	    RBRACKET482=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_primaryType22019); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { st.setEndToken(RBRACKET482);
            	              type =st; }

            	    }
            	    break;
            	case 3 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3308:9: LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN
            	    {
            	    LPAREN483=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_primaryType22040); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { bt = new FunctionType(null);
            	              bt.setEndToken(LPAREN483);
            	              bt.setReturnType(type);
            	              type =bt; }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3313:11: (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )?
            	    int alt288=3;
            	    int LA288_0 = input.LA(1);

            	    if ( (LA288_0==PRODUCT_OP) ) {
            	        alt288=1;
            	    }
            	    else if ( ((LA288_0 >= LBRACE && LA288_0 <= LBRACKET)||LA288_0==PACKAGE||LA288_0==SMALLER_OP||LA288_0==UIDENTIFIER) ) {
            	        alt288=2;
            	    }
            	    switch (alt288) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3314:13: spt= spreadType
            	            {
            	            pushFollow(FOLLOW_spreadType_in_primaryType22078);
            	            spt=spreadType();

            	            state._fsp--;
            	            if (state.failed) return type;

            	            if ( state.backtracking==0 ) { bt.addArgumentType(spt); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3317:13: t1= defaultedType ( COMMA t2= defaultedType )*
            	            {
            	            pushFollow(FOLLOW_defaultedType_in_primaryType22120);
            	            t1=defaultedType();

            	            state._fsp--;
            	            if (state.failed) return type;

            	            if ( state.backtracking==0 ) { if (t1!=null)
            	                              bt.addArgumentType(t1); }

            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3320:13: ( COMMA t2= defaultedType )*
            	            loop287:
            	            do {
            	                int alt287=2;
            	                int LA287_0 = input.LA(1);

            	                if ( (LA287_0==COMMA) ) {
            	                    alt287=1;
            	                }


            	                switch (alt287) {
            	            	case 1 :
            	            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3321:15: COMMA t2= defaultedType
            	            	    {
            	            	    COMMA484=(Token)match(input,COMMA,FOLLOW_COMMA_in_primaryType22164); if (state.failed) return type;

            	            	    if ( state.backtracking==0 ) { bt.setEndToken(COMMA484); }

            	            	    pushFollow(FOLLOW_defaultedType_in_primaryType22198);
            	            	    t2=defaultedType();

            	            	    state._fsp--;
            	            	    if (state.failed) return type;

            	            	    if ( state.backtracking==0 ) { if (t2!=null)
            	            	                        bt.addArgumentType(t2); }

            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop287;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }


            	    RPAREN485=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_primaryType22252); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { bt.setEndToken(RPAREN485); }

            	    }
            	    break;

            	default :
            	    break loop289;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "primaryType"



    // $ANTLR start "baseType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3333:1: baseType returns [StaticType type] : (tna1= typeNameWithArguments | groupedType | PACKAGE MEMBER_OP tna2= typeNameWithArguments );
    public StaticType baseType() throws RecognitionException {
        StaticType type = null;


        Token PACKAGE487=null;
        Token MEMBER_OP488=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return tna1 =null;

        PsiCompatibleCeylonParser.typeNameWithArguments_return tna2 =null;

        GroupedType groupedType486 =null;


         BaseType pt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3335:5: (tna1= typeNameWithArguments | groupedType | PACKAGE MEMBER_OP tna2= typeNameWithArguments )
            int alt290=3;
            switch ( input.LA(1) ) {
            case UIDENTIFIER:
                {
                alt290=1;
                }
                break;
            case SMALLER_OP:
                {
                alt290=2;
                }
                break;
            case PACKAGE:
                {
                alt290=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 290, 0, input);

                throw nvae;

            }

            switch (alt290) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3336:7: tna1= typeNameWithArguments
                    {
                    pushFollow(FOLLOW_typeNameWithArguments_in_baseType22310);
                    tna1=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { BaseType bt = new BaseType(null);
                            bt.setIdentifier((tna1!=null?tna1.identifier:null));
                            if ((tna1!=null?tna1.typeArgumentList:null)!=null)
                                bt.setTypeArgumentList((tna1!=null?tna1.typeArgumentList:null));
                            type =bt; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3343:7: groupedType
                    {
                    pushFollow(FOLLOW_groupedType_in_baseType22332);
                    groupedType486=groupedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =groupedType486; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3345:7: PACKAGE MEMBER_OP tna2= typeNameWithArguments
                    {
                    PACKAGE487=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_baseType22348); if (state.failed) return type;

                    if ( state.backtracking==0 ) { pt = new BaseType(PACKAGE487); 
                            pt.setPackageQualified(true);
                            type =pt; }

                    MEMBER_OP488=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_baseType22364); if (state.failed) return type;

                    if ( state.backtracking==0 ) { pt.setEndToken(MEMBER_OP488); }

                    pushFollow(FOLLOW_typeNameWithArguments_in_baseType22382);
                    tna2=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { pt.setEndToken(null);
                            pt.setIdentifier((tna2!=null?tna2.identifier:null));
                            if ((tna2!=null?tna2.typeArgumentList:null)!=null)
                                pt.setTypeArgumentList((tna2!=null?tna2.typeArgumentList:null)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "baseType"



    // $ANTLR start "qualifiedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3358:1: qualifiedType returns [StaticType type] : baseType ( MEMBER_OP it= typeNameWithArguments )* ;
    public StaticType qualifiedType() throws RecognitionException {
        StaticType type = null;


        Token MEMBER_OP490=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return it =null;

        StaticType baseType489 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3359:5: ( baseType ( MEMBER_OP it= typeNameWithArguments )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3359:7: baseType ( MEMBER_OP it= typeNameWithArguments )*
            {
            pushFollow(FOLLOW_baseType_in_qualifiedType22411);
            baseType489=baseType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type =baseType489; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3361:7: ( MEMBER_OP it= typeNameWithArguments )*
            loop291:
            do {
                int alt291=2;
                int LA291_0 = input.LA(1);

                if ( (LA291_0==MEMBER_OP) ) {
                    int LA291_2 = input.LA(2);

                    if ( (LA291_2==UIDENTIFIER) ) {
                        alt291=1;
                    }


                }


                switch (alt291) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3362:9: MEMBER_OP it= typeNameWithArguments
            	    {
            	    MEMBER_OP490=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_qualifiedType22437); if (state.failed) return type;

            	    pushFollow(FOLLOW_typeNameWithArguments_in_qualifiedType22449);
            	    it=typeNameWithArguments();

            	    state._fsp--;
            	    if (state.failed) return type;

            	    if ( state.backtracking==0 ) { QualifiedType qt = new QualifiedType(MEMBER_OP490);
            	              qt.setIdentifier((it!=null?it.identifier:null));
            	              if ((it!=null?it.typeArgumentList:null)!=null)
            	                  qt.setTypeArgumentList((it!=null?it.typeArgumentList:null));
            	              qt.setOuterType(type);
            	              type =qt; }

            	    }
            	    break;

            	default :
            	    break loop291;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "qualifiedType"


    public static class typeNameWithArguments_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "typeNameWithArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3373:1: typeNameWithArguments returns [Identifier identifier, TypeArgumentList typeArgumentList] : typeName ( typeArguments )? ;
    public PsiCompatibleCeylonParser.typeNameWithArguments_return typeNameWithArguments() throws RecognitionException {
        PsiCompatibleCeylonParser.typeNameWithArguments_return retval = new PsiCompatibleCeylonParser.typeNameWithArguments_return();
        retval.start = input.LT(1);


        Identifier typeName491 =null;

        TypeArgumentList typeArguments492 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3374:5: ( typeName ( typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3374:7: typeName ( typeArguments )?
            {
            pushFollow(FOLLOW_typeName_in_typeNameWithArguments22489);
            typeName491=typeName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier = typeName491; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3376:7: ( typeArguments )?
            int alt292=2;
            int LA292_0 = input.LA(1);

            if ( (LA292_0==SMALLER_OP) ) {
                int LA292_1 = input.LA(2);

                if ( (LA292_1==IN_OP||LA292_1==LARGER_OP||(LA292_1 >= LBRACE && LA292_1 <= LBRACKET)||LA292_1==OUT||LA292_1==PACKAGE||LA292_1==SMALLER_OP||LA292_1==UIDENTIFIER) ) {
                    alt292=1;
                }
            }
            switch (alt292) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3377:9: typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_typeNameWithArguments22516);
                    typeArguments492=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments492; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "typeNameWithArguments"



    // $ANTLR start "annotations"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3382:1: annotations returns [AnnotationList annotationList] : ( stringLiteral )? ( annotation )* ;
    public AnnotationList annotations() throws RecognitionException {
        AnnotationList annotationList = null;


        StringLiteral stringLiteral493 =null;

        Annotation annotation494 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3383:5: ( ( stringLiteral )? ( annotation )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3383:7: ( stringLiteral )? ( annotation )*
            {
            if ( state.backtracking==0 ) { annotationList = new AnnotationList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3384:7: ( stringLiteral )?
            int alt293=2;
            int LA293_0 = input.LA(1);

            if ( (LA293_0==STRING_LITERAL||LA293_0==VERBATIM_STRING) ) {
                alt293=1;
            }
            switch (alt293) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3385:11: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotations22580);
                    stringLiteral493=stringLiteral();

                    state._fsp--;
                    if (state.failed) return annotationList;

                    if ( state.backtracking==0 ) { if (stringLiteral493.getToken().getType()==VERBATIM_STRING)
                                    stringLiteral493.getToken().setType(AVERBATIM_STRING);
                                else
                                    stringLiteral493.getToken().setType(ASTRING_LITERAL);
                                AnonymousAnnotation aa = new AnonymousAnnotation(null);
                                aa.setStringLiteral(stringLiteral493);
                                annotationList.setAnonymousAnnotation(aa); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3394:7: ( annotation )*
            loop294:
            do {
                int alt294=2;
                int LA294_0 = input.LA(1);

                if ( (LA294_0==LIDENTIFIER) ) {
                    alt294=1;
                }


                switch (alt294) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3395:9: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotations22619);
            	    annotation494=annotation();

            	    state._fsp--;
            	    if (state.failed) return annotationList;

            	    if ( state.backtracking==0 ) { annotationList.addAnnotation(annotation494); 
            	              new com.redhat.ceylon.compiler.typechecker.tree.Visitor() { 
            	                  public void visit(StringLiteral that) {
            	                      if (that.getToken().getType()==VERBATIM_STRING)
            	                          that.getToken().setType(AVERBATIM_STRING);
            	                      else
            	                          that.getToken().setType(ASTRING_LITERAL);
            	                  }
            	              }.visit(annotation494); }

            	    }
            	    break;

            	default :
            	    break loop294;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotationList;
    }
    // $ANTLR end "annotations"



    // $ANTLR start "annotation"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3408:1: annotation returns [Annotation annotation] : annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |) ;
    public Annotation annotation() throws RecognitionException {
        Annotation annotation = null;


        Identifier annotationName495 =null;

        PositionalArgumentList positionalArguments496 =null;

        NamedArgumentList namedArguments497 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3409:5: ( annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3409:7: annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |)
            {
            pushFollow(FOLLOW_annotationName_in_annotation22660);
            annotationName495=annotationName();

            state._fsp--;
            if (state.failed) return annotation;

            if ( state.backtracking==0 ) { annotation = new Annotation(null);
                    BaseMemberExpression bme = new BaseMemberExpression(null);
                    bme.setIdentifier(annotationName495);
                    bme.setTypeArguments( new InferredTypeArguments(null) );
                    annotation.setPrimary(bme); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3415:5: ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |)
            int alt295=3;
            switch ( input.LA(1) ) {
            case LPAREN:
                {
                alt295=1;
                }
                break;
            case LBRACE:
                {
                int LA295_2 = input.LA(2);

                if ( (synpred35_Ceylon()) ) {
                    alt295=2;
                }
                else if ( (true) ) {
                    alt295=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return annotation;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 295, 2, input);

                    throw nvae;

                }
                }
                break;
            case ALIAS:
            case ASSERT:
            case ASSIGN:
            case CLASS_DEFINITION:
            case DYNAMIC:
            case FUNCTION_MODIFIER:
            case IMPORT:
            case INTERFACE_DEFINITION:
            case LBRACKET:
            case LIDENTIFIER:
            case MODULE:
            case NEW:
            case OBJECT_DEFINITION:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
            case VALUE_MODIFIER:
            case VOID_MODIFIER:
                {
                alt295=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return annotation;}
                NoViableAltException nvae =
                    new NoViableAltException("", 295, 0, input);

                throw nvae;

            }

            switch (alt295) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3416:7: positionalArguments
                    {
                    pushFollow(FOLLOW_positionalArguments_in_annotation22683);
                    positionalArguments496=positionalArguments();

                    state._fsp--;
                    if (state.failed) return annotation;

                    if ( state.backtracking==0 ) { annotation.setPositionalArgumentList(positionalArguments496); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3418:7: ( namedAnnotationArgumentsStart )=> namedArguments
                    {
                    pushFollow(FOLLOW_namedArguments_in_annotation22712);
                    namedArguments497=namedArguments();

                    state._fsp--;
                    if (state.failed) return annotation;

                    if ( state.backtracking==0 ) { annotation.setNamedArgumentList(namedArguments497); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3421:7: 
                    {
                    if ( state.backtracking==0 ) { annotation.setPositionalArgumentList(new PositionalArgumentList(null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotation;
    }
    // $ANTLR end "annotation"



    // $ANTLR start "prefixOperatorStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3425:1: prefixOperatorStart : ( DIFFERENCE_OP | INCREMENT_OP | DECREMENT_OP | COMPLEMENT_OP );
    public void prefixOperatorStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3426:5: ( DIFFERENCE_OP | INCREMENT_OP | DECREMENT_OP | COMPLEMENT_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:
            {
            if ( input.LA(1)==COMPLEMENT_OP||(input.LA(1) >= DECREMENT_OP && input.LA(1) <= DIFFERENCE_OP)||input.LA(1)==INCREMENT_OP ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "prefixOperatorStart"



    // $ANTLR start "compilerAnnotations"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3432:1: compilerAnnotations returns [List<CompilerAnnotation> annotations] : ( compilerAnnotation )* ;
    public List<CompilerAnnotation> compilerAnnotations() throws RecognitionException {
        List<CompilerAnnotation> annotations = null;


        CompilerAnnotation compilerAnnotation498 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3433:5: ( ( compilerAnnotation )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3433:7: ( compilerAnnotation )*
            {
            if ( state.backtracking==0 ) { annotations = new ArrayList<CompilerAnnotation>(); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3434:5: ( compilerAnnotation )*
            loop296:
            do {
                int alt296=2;
                int LA296_0 = input.LA(1);

                if ( (LA296_0==COMPILER_ANNOTATION) ) {
                    alt296=1;
                }


                switch (alt296) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3435:7: compilerAnnotation
            	    {
            	    pushFollow(FOLLOW_compilerAnnotation_in_compilerAnnotations22816);
            	    compilerAnnotation498=compilerAnnotation();

            	    state._fsp--;
            	    if (state.failed) return annotations;

            	    if ( state.backtracking==0 ) { annotations.add(compilerAnnotation498); }

            	    }
            	    break;

            	default :
            	    break loop296;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotations;
    }
    // $ANTLR end "compilerAnnotations"



    // $ANTLR start "compilerAnnotation"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3440:1: compilerAnnotation returns [CompilerAnnotation annotation] : COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )? ;
    public CompilerAnnotation compilerAnnotation() throws RecognitionException {
        CompilerAnnotation annotation = null;


        Token COMPILER_ANNOTATION499=null;
        Identifier annotationName500 =null;

        StringLiteral stringLiteral501 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3441:5: ( COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3441:7: COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )?
            {
            COMPILER_ANNOTATION499=(Token)match(input,COMPILER_ANNOTATION,FOLLOW_COMPILER_ANNOTATION_in_compilerAnnotation22856); if (state.failed) return annotation;

            if ( state.backtracking==0 ) { annotation =new CompilerAnnotation(COMPILER_ANNOTATION499); }

            pushFollow(FOLLOW_annotationName_in_compilerAnnotation22873);
            annotationName500=annotationName();

            state._fsp--;
            if (state.failed) return annotation;

            if ( state.backtracking==0 ) { annotation.setIdentifier(annotationName500); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3445:7: ( SEGMENT_OP stringLiteral )?
            int alt297=2;
            int LA297_0 = input.LA(1);

            if ( (LA297_0==SEGMENT_OP) ) {
                alt297=1;
            }
            switch (alt297) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3446:11: SEGMENT_OP stringLiteral
                    {
                    match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_compilerAnnotation22903); if (state.failed) return annotation;

                    pushFollow(FOLLOW_stringLiteral_in_compilerAnnotation22915);
                    stringLiteral501=stringLiteral();

                    state._fsp--;
                    if (state.failed) return annotation;

                    if ( state.backtracking==0 ) { annotation.setStringLiteral(stringLiteral501); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotation;
    }
    // $ANTLR end "compilerAnnotation"



    // $ANTLR start "conditions"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3452:1: conditions returns [ConditionList conditionList] : LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN ;
    public ConditionList conditions() throws RecognitionException {
        ConditionList conditionList = null;


        Token c=null;
        Token LPAREN502=null;
        Token RPAREN503=null;
        Condition c1 =null;

        Condition c2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3453:5: ( LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3453:7: LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN
            {
            LPAREN502=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_conditions22957); if (state.failed) return conditionList;

            if ( state.backtracking==0 ) { conditionList = new ConditionList(LPAREN502); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3455:7: (c1= condition (c= COMMA (c2= condition |) )* )?
            int alt300=2;
            int LA300_0 = input.LA(1);

            if ( (LA300_0==BACKTICK||LA300_0==CHAR_LITERAL||(LA300_0 >= DECREMENT_OP && LA300_0 <= DIFFERENCE_OP)||LA300_0==DYNAMIC||LA300_0==EXISTS||LA300_0==FLOAT_LITERAL||LA300_0==FUNCTION_MODIFIER||LA300_0==IF_CLAUSE||LA300_0==INCREMENT_OP||LA300_0==IS_OP||(LA300_0 >= LBRACE && LA300_0 <= LIDENTIFIER)||LA300_0==LPAREN||LA300_0==NATURAL_LITERAL||LA300_0==NONEMPTY||(LA300_0 >= NOT_OP && LA300_0 <= OBJECT_DEFINITION)||(LA300_0 >= OUTER && LA300_0 <= PACKAGE)||LA300_0==SATISFIES||LA300_0==STRING_LITERAL||LA300_0==STRING_START||(LA300_0 >= SUM_OP && LA300_0 <= SWITCH_CLAUSE)||LA300_0==THIS||LA300_0==UIDENTIFIER||(LA300_0 >= VERBATIM_STRING && LA300_0 <= VOID_MODIFIER)) ) {
                alt300=1;
            }
            switch (alt300) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3456:7: c1= condition (c= COMMA (c2= condition |) )*
                    {
                    pushFollow(FOLLOW_condition_in_conditions22983);
                    c1=condition();

                    state._fsp--;
                    if (state.failed) return conditionList;

                    if ( state.backtracking==0 ) { if (c1!=null) 
                                conditionList.addCondition(c1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3459:7: (c= COMMA (c2= condition |) )*
                    loop299:
                    do {
                        int alt299=2;
                        int LA299_0 = input.LA(1);

                        if ( (LA299_0==COMMA) ) {
                            alt299=1;
                        }


                        switch (alt299) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3459:9: c= COMMA (c2= condition |)
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_conditions23003); if (state.failed) return conditionList;

                    	    if ( state.backtracking==0 ) { conditionList.setEndToken(c); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3461:9: (c2= condition |)
                    	    int alt298=2;
                    	    int LA298_0 = input.LA(1);

                    	    if ( (LA298_0==BACKTICK||LA298_0==CHAR_LITERAL||(LA298_0 >= DECREMENT_OP && LA298_0 <= DIFFERENCE_OP)||LA298_0==DYNAMIC||LA298_0==EXISTS||LA298_0==FLOAT_LITERAL||LA298_0==FUNCTION_MODIFIER||LA298_0==IF_CLAUSE||LA298_0==INCREMENT_OP||LA298_0==IS_OP||(LA298_0 >= LBRACE && LA298_0 <= LIDENTIFIER)||LA298_0==LPAREN||LA298_0==NATURAL_LITERAL||LA298_0==NONEMPTY||(LA298_0 >= NOT_OP && LA298_0 <= OBJECT_DEFINITION)||(LA298_0 >= OUTER && LA298_0 <= PACKAGE)||LA298_0==SATISFIES||LA298_0==STRING_LITERAL||LA298_0==STRING_START||(LA298_0 >= SUM_OP && LA298_0 <= SWITCH_CLAUSE)||LA298_0==THIS||LA298_0==UIDENTIFIER||(LA298_0 >= VERBATIM_STRING && LA298_0 <= VOID_MODIFIER)) ) {
                    	        alt298=1;
                    	    }
                    	    else if ( (LA298_0==COMMA||LA298_0==RPAREN) ) {
                    	        alt298=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return conditionList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 298, 0, input);

                    	        throw nvae;

                    	    }
                    	    switch (alt298) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3462:11: c2= condition
                    	            {
                    	            pushFollow(FOLLOW_condition_in_conditions23038);
                    	            c2=condition();

                    	            state._fsp--;
                    	            if (state.failed) return conditionList;

                    	            if ( state.backtracking==0 ) { if (c2!=null) 
                    	                            conditionList.addCondition(c2);
                    	                        conditionList.setEndToken(null); }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3466:11: 
                    	            {
                    	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                          new MismatchedTokenException(LIDENTIFIER, input)); }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop299;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN503=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_conditions23100); if (state.failed) return conditionList;

            if ( state.backtracking==0 ) { conditionList.setEndToken(RPAREN503); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return conditionList;
    }
    // $ANTLR end "conditions"



    // $ANTLR start "condition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3475:1: condition returns [Condition condition] : ( existsCondition | nonemptyCondition | isCondition | satisfiesCondition | booleanCondition );
    public Condition condition() throws RecognitionException {
        Condition condition = null;


        ExistsCondition existsCondition504 =null;

        NonemptyCondition nonemptyCondition505 =null;

        IsCondition isCondition506 =null;

        SatisfiesCondition satisfiesCondition507 =null;

        BooleanCondition booleanCondition508 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3476:5: ( existsCondition | nonemptyCondition | isCondition | satisfiesCondition | booleanCondition )
            int alt301=5;
            switch ( input.LA(1) ) {
            case NOT_OP:
                {
                switch ( input.LA(2) ) {
                case EXISTS:
                    {
                    alt301=1;
                    }
                    break;
                case NONEMPTY:
                    {
                    alt301=2;
                    }
                    break;
                case IS_OP:
                    {
                    alt301=3;
                    }
                    break;
                case BACKTICK:
                case CHAR_LITERAL:
                case DECREMENT_OP:
                case DIFFERENCE_OP:
                case DYNAMIC:
                case FLOAT_LITERAL:
                case INCREMENT_OP:
                case LBRACE:
                case LBRACKET:
                case LIDENTIFIER:
                case LPAREN:
                case NATURAL_LITERAL:
                case NOT_OP:
                case OBJECT_DEFINITION:
                case OUTER:
                case PACKAGE:
                case STRING_LITERAL:
                case STRING_START:
                case SUM_OP:
                case SUPER:
                case THIS:
                case UIDENTIFIER:
                case VERBATIM_STRING:
                    {
                    alt301=5;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 301, 1, input);

                    throw nvae;

                }

                }
                break;
            case EXISTS:
                {
                alt301=1;
                }
                break;
            case NONEMPTY:
                {
                alt301=2;
                }
                break;
            case IS_OP:
                {
                alt301=3;
                }
                break;
            case SATISFIES:
                {
                alt301=4;
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case DYNAMIC:
            case FLOAT_LITERAL:
            case FUNCTION_MODIFIER:
            case IF_CLAUSE:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case OBJECT_DEFINITION:
            case OUTER:
            case PACKAGE:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case SWITCH_CLAUSE:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
            case VOID_MODIFIER:
                {
                alt301=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 301, 0, input);

                throw nvae;

            }

            switch (alt301) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3476:7: existsCondition
                    {
                    pushFollow(FOLLOW_existsCondition_in_condition23129);
                    existsCondition504=existsCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =existsCondition504; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3478:7: nonemptyCondition
                    {
                    pushFollow(FOLLOW_nonemptyCondition_in_condition23145);
                    nonemptyCondition505=nonemptyCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =nonemptyCondition505; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3480:7: isCondition
                    {
                    pushFollow(FOLLOW_isCondition_in_condition23161);
                    isCondition506=isCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =isCondition506; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3482:7: satisfiesCondition
                    {
                    pushFollow(FOLLOW_satisfiesCondition_in_condition23178);
                    satisfiesCondition507=satisfiesCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =satisfiesCondition507; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3484:7: booleanCondition
                    {
                    pushFollow(FOLLOW_booleanCondition_in_condition23194);
                    booleanCondition508=booleanCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =booleanCondition508; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "condition"



    // $ANTLR start "booleanCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3488:1: booleanCondition returns [BooleanCondition condition] : functionOrExpression ;
    public BooleanCondition booleanCondition() throws RecognitionException {
        BooleanCondition condition = null;


        Expression functionOrExpression509 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3489:5: ( functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3489:7: functionOrExpression
            {
            if ( state.backtracking==0 ) { condition = new BooleanCondition(null); }

            pushFollow(FOLLOW_functionOrExpression_in_booleanCondition23235);
            functionOrExpression509=functionOrExpression();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setExpression(functionOrExpression509); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "booleanCondition"



    // $ANTLR start "existsCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
    public ExistsCondition existsCondition() throws RecognitionException {
        ExistsCondition condition = null;


        Token NOT_OP510=null;
        Token EXISTS511=null;
        Statement letVariable512 =null;

        Variable impliedVariable513 =null;

        Expression expression514 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3495:7: ( NOT_OP )?
            int alt302=2;
            int LA302_0 = input.LA(1);

            if ( (LA302_0==NOT_OP) ) {
                alt302=1;
            }
            switch (alt302) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3496:9: NOT_OP
                    {
                    NOT_OP510=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_existsCondition23278); if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition = new ExistsCondition(NOT_OP510);
                              condition.setNot(true); }

                    }
                    break;

            }


            EXISTS511=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_existsCondition23305); if (state.failed) return condition;

            if ( state.backtracking==0 ) { if (condition==null)
                        condition = new ExistsCondition(EXISTS511); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            int alt303=3;
            int LA303_0 = input.LA(1);

            if ( (LA303_0==LBRACKET) ) {
                int LA303_1 = input.LA(2);

                if ( (synpred37_Ceylon()) ) {
                    alt303=1;
                }
                else if ( (true) ) {
                    alt303=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 303, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA303_0==COMPILER_ANNOTATION) && (synpred37_Ceylon())) {
                alt303=1;
            }
            else if ( (LA303_0==UIDENTIFIER) ) {
                int LA303_3 = input.LA(2);

                if ( (synpred37_Ceylon()) ) {
                    alt303=1;
                }
                else if ( (true) ) {
                    alt303=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 303, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA303_0==SMALLER_OP) && (synpred37_Ceylon())) {
                alt303=1;
            }
            else if ( (LA303_0==PACKAGE) ) {
                int LA303_5 = input.LA(2);

                if ( (synpred37_Ceylon()) ) {
                    alt303=1;
                }
                else if ( (true) ) {
                    alt303=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 303, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA303_0==LBRACE) ) {
                int LA303_6 = input.LA(2);

                if ( (synpred37_Ceylon()) ) {
                    alt303=1;
                }
                else if ( (true) ) {
                    alt303=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 303, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA303_0==VOID_MODIFIER) && (synpred37_Ceylon())) {
                alt303=1;
            }
            else if ( (LA303_0==FUNCTION_MODIFIER) && (synpred37_Ceylon())) {
                alt303=1;
            }
            else if ( (LA303_0==VALUE_MODIFIER) && (synpred37_Ceylon())) {
                alt303=1;
            }
            else if ( (LA303_0==LIDENTIFIER) ) {
                int LA303_10 = input.LA(2);

                if ( (synpred37_Ceylon()) ) {
                    alt303=1;
                }
                else if ( (synpred38_Ceylon()) ) {
                    alt303=2;
                }
                else if ( (true) ) {
                    alt303=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 303, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA303_0==BACKTICK||LA303_0==CHAR_LITERAL||(LA303_0 >= DECREMENT_OP && LA303_0 <= DIFFERENCE_OP)||LA303_0==DYNAMIC||LA303_0==FLOAT_LITERAL||LA303_0==INCREMENT_OP||LA303_0==LPAREN||LA303_0==NATURAL_LITERAL||(LA303_0 >= NOT_OP && LA303_0 <= OBJECT_DEFINITION)||LA303_0==OUTER||LA303_0==STRING_LITERAL||LA303_0==STRING_START||(LA303_0 >= SUM_OP && LA303_0 <= SUPER)||LA303_0==THIS||LA303_0==VERBATIM_STRING) ) {
                alt303=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 303, 0, input);

                throw nvae;

            }
            switch (alt303) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
                    {
                    pushFollow(FOLLOW_letVariable_in_existsCondition23363);
                    letVariable512=letVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(letVariable512); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3508:9: ( LIDENTIFIER )=> impliedVariable
                    {
                    pushFollow(FOLLOW_impliedVariable_in_existsCondition23397);
                    impliedVariable513=impliedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(impliedVariable513); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3510:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_existsCondition23417);
                    expression514=expression();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setBrokenExpression(expression514); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "existsCondition"



    // $ANTLR start "nonemptyCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
    public NonemptyCondition nonemptyCondition() throws RecognitionException {
        NonemptyCondition condition = null;


        Token NOT_OP515=null;
        Token NONEMPTY516=null;
        Statement letVariable517 =null;

        Variable impliedVariable518 =null;

        Expression expression519 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3516:7: ( NOT_OP )?
            int alt304=2;
            int LA304_0 = input.LA(1);

            if ( (LA304_0==NOT_OP) ) {
                alt304=1;
            }
            switch (alt304) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3517:9: NOT_OP
                    {
                    NOT_OP515=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_nonemptyCondition23470); if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition = new NonemptyCondition(NOT_OP515);
                              condition.setNot(true); }

                    }
                    break;

            }


            NONEMPTY516=(Token)match(input,NONEMPTY,FOLLOW_NONEMPTY_in_nonemptyCondition23497); if (state.failed) return condition;

            if ( state.backtracking==0 ) { if (condition==null)
                        condition = new NonemptyCondition(NONEMPTY516); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            int alt305=3;
            int LA305_0 = input.LA(1);

            if ( (LA305_0==LBRACKET) ) {
                int LA305_1 = input.LA(2);

                if ( (synpred40_Ceylon()) ) {
                    alt305=1;
                }
                else if ( (true) ) {
                    alt305=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 305, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA305_0==COMPILER_ANNOTATION) && (synpred40_Ceylon())) {
                alt305=1;
            }
            else if ( (LA305_0==UIDENTIFIER) ) {
                int LA305_3 = input.LA(2);

                if ( (synpred40_Ceylon()) ) {
                    alt305=1;
                }
                else if ( (true) ) {
                    alt305=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 305, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA305_0==SMALLER_OP) && (synpred40_Ceylon())) {
                alt305=1;
            }
            else if ( (LA305_0==PACKAGE) ) {
                int LA305_5 = input.LA(2);

                if ( (synpred40_Ceylon()) ) {
                    alt305=1;
                }
                else if ( (true) ) {
                    alt305=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 305, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA305_0==LBRACE) ) {
                int LA305_6 = input.LA(2);

                if ( (synpred40_Ceylon()) ) {
                    alt305=1;
                }
                else if ( (true) ) {
                    alt305=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 305, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA305_0==VOID_MODIFIER) && (synpred40_Ceylon())) {
                alt305=1;
            }
            else if ( (LA305_0==FUNCTION_MODIFIER) && (synpred40_Ceylon())) {
                alt305=1;
            }
            else if ( (LA305_0==VALUE_MODIFIER) && (synpred40_Ceylon())) {
                alt305=1;
            }
            else if ( (LA305_0==LIDENTIFIER) ) {
                int LA305_10 = input.LA(2);

                if ( (synpred40_Ceylon()) ) {
                    alt305=1;
                }
                else if ( (synpred41_Ceylon()) ) {
                    alt305=2;
                }
                else if ( (true) ) {
                    alt305=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 305, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA305_0==BACKTICK||LA305_0==CHAR_LITERAL||(LA305_0 >= DECREMENT_OP && LA305_0 <= DIFFERENCE_OP)||LA305_0==DYNAMIC||LA305_0==FLOAT_LITERAL||LA305_0==INCREMENT_OP||LA305_0==LPAREN||LA305_0==NATURAL_LITERAL||(LA305_0 >= NOT_OP && LA305_0 <= OBJECT_DEFINITION)||LA305_0==OUTER||LA305_0==STRING_LITERAL||LA305_0==STRING_START||(LA305_0 >= SUM_OP && LA305_0 <= SUPER)||LA305_0==THIS||LA305_0==VERBATIM_STRING) ) {
                alt305=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 305, 0, input);

                throw nvae;

            }
            switch (alt305) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
                    {
                    pushFollow(FOLLOW_letVariable_in_nonemptyCondition23555);
                    letVariable517=letVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(letVariable517); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3529:9: ( LIDENTIFIER )=> impliedVariable
                    {
                    pushFollow(FOLLOW_impliedVariable_in_nonemptyCondition23589);
                    impliedVariable518=impliedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(impliedVariable518); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3531:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_nonemptyCondition23610);
                    expression519=expression();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setBrokenExpression(expression519); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "nonemptyCondition"



    // $ANTLR start "isCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3536:1: isCondition returns [IsCondition condition] : ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable ) ;
    public IsCondition isCondition() throws RecognitionException {
        IsCondition condition = null;


        Token NOT_OP520=null;
        Token IS_OP521=null;
        Variable v =null;

        StaticType type522 =null;

        Variable impliedVariable523 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3537:5: ( ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3537:7: ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3537:7: ( NOT_OP )?
            int alt306=2;
            int LA306_0 = input.LA(1);

            if ( (LA306_0==NOT_OP) ) {
                alt306=1;
            }
            switch (alt306) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3538:9: NOT_OP
                    {
                    NOT_OP520=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_isCondition23659); if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition = new IsCondition(NOT_OP520);
                              condition.setNot(true); }

                    }
                    break;

            }


            IS_OP521=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_isCondition23686); if (state.failed) return condition;

            if ( state.backtracking==0 ) { if (condition==null)
                        condition = new IsCondition(IS_OP521); }

            pushFollow(FOLLOW_type_in_isCondition23703);
            type522=type();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setType(type522); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3547:7: ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable )
            int alt307=2;
            int LA307_0 = input.LA(1);

            if ( (LA307_0==LIDENTIFIER) ) {
                int LA307_1 = input.LA(2);

                if ( (LA307_1==SPECIFY) && (synpred42_Ceylon())) {
                    alt307=1;
                }
                else if ( (LA307_1==COMMA||LA307_1==RPAREN) ) {
                    alt307=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 307, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 307, 0, input);

                throw nvae;

            }
            switch (alt307) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3548:9: ( LIDENTIFIER SPECIFY )=>v= isConditionVariable
                    {
                    pushFollow(FOLLOW_isConditionVariable_in_isCondition23747);
                    v=isConditionVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(v); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3552:9: impliedVariable
                    {
                    pushFollow(FOLLOW_impliedVariable_in_isCondition23775);
                    impliedVariable523=impliedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(impliedVariable523); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "isCondition"



    // $ANTLR start "isConditionVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3557:1: isConditionVariable returns [Variable variable] : memberName specifier ;
    public Variable isConditionVariable() throws RecognitionException {
        Variable variable = null;


        Identifier memberName524 =null;

        SpecifierExpression specifier525 =null;


         variable = new Variable(null);
                    variable.setType(new ValueModifier(null));  
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3560:5: ( memberName specifier )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3560:7: memberName specifier
            {
            pushFollow(FOLLOW_memberName_in_isConditionVariable23824);
            memberName524=memberName();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable.setIdentifier(memberName524); }

            pushFollow(FOLLOW_specifier_in_isConditionVariable23840);
            specifier525=specifier();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable.setSpecifierExpression(specifier525); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "isConditionVariable"



    // $ANTLR start "satisfiesCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3566:1: satisfiesCondition returns [SatisfiesCondition condition] : SATISFIES type typeName ;
    public SatisfiesCondition satisfiesCondition() throws RecognitionException {
        SatisfiesCondition condition = null;


        Token SATISFIES526=null;
        StaticType type527 =null;

        Identifier typeName528 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3567:5: ( SATISFIES type typeName )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3567:7: SATISFIES type typeName
            {
            SATISFIES526=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiesCondition23869); if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition = new SatisfiesCondition(SATISFIES526); }

            pushFollow(FOLLOW_type_in_satisfiesCondition23886);
            type527=type();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setType(type527); }

            pushFollow(FOLLOW_typeName_in_satisfiesCondition23903);
            typeName528=typeName();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setIdentifier(typeName528); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "satisfiesCondition"



    // $ANTLR start "controlStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3575:1: controlStatement returns [ControlStatement controlStatement] : ( ifElse | switchCaseElse | whileLoop | forElse | tryCatchFinally | dynamic );
    public ControlStatement controlStatement() throws RecognitionException {
        ControlStatement controlStatement = null;


        IfStatement ifElse529 =null;

        SwitchStatement switchCaseElse530 =null;

        WhileStatement whileLoop531 =null;

        ForStatement forElse532 =null;

        TryCatchStatement tryCatchFinally533 =null;

        DynamicStatement dynamic534 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3576:5: ( ifElse | switchCaseElse | whileLoop | forElse | tryCatchFinally | dynamic )
            int alt308=6;
            switch ( input.LA(1) ) {
            case IF_CLAUSE:
                {
                alt308=1;
                }
                break;
            case SWITCH_CLAUSE:
                {
                alt308=2;
                }
                break;
            case WHILE_CLAUSE:
                {
                alt308=3;
                }
                break;
            case FOR_CLAUSE:
                {
                alt308=4;
                }
                break;
            case TRY_CLAUSE:
                {
                alt308=5;
                }
                break;
            case DYNAMIC:
                {
                alt308=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return controlStatement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 308, 0, input);

                throw nvae;

            }

            switch (alt308) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3576:7: ifElse
                    {
                    pushFollow(FOLLOW_ifElse_in_controlStatement23932);
                    ifElse529=ifElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =ifElse529; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3578:7: switchCaseElse
                    {
                    pushFollow(FOLLOW_switchCaseElse_in_controlStatement23949);
                    switchCaseElse530=switchCaseElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =switchCaseElse530; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3580:7: whileLoop
                    {
                    pushFollow(FOLLOW_whileLoop_in_controlStatement23966);
                    whileLoop531=whileLoop();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =whileLoop531; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3582:7: forElse
                    {
                    pushFollow(FOLLOW_forElse_in_controlStatement23983);
                    forElse532=forElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =forElse532; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3584:7: tryCatchFinally
                    {
                    pushFollow(FOLLOW_tryCatchFinally_in_controlStatement24000);
                    tryCatchFinally533=tryCatchFinally();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =tryCatchFinally533; }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3586:7: dynamic
                    {
                    pushFollow(FOLLOW_dynamic_in_controlStatement24016);
                    dynamic534=dynamic();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =dynamic534; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return controlStatement;
    }
    // $ANTLR end "controlStatement"



    // $ANTLR start "controlBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3590:1: controlBlock returns [Block block] : ( ( LBRACE )=>b= block |) ;
    public Block controlBlock() throws RecognitionException {
        Block block = null;


        Block b =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3591:5: ( ( ( LBRACE )=>b= block |) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3591:7: ( ( LBRACE )=>b= block |)
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3591:7: ( ( LBRACE )=>b= block |)
            int alt309=2;
            int LA309_0 = input.LA(1);

            if ( (LA309_0==LBRACE) ) {
                int LA309_1 = input.LA(2);

                if ( (synpred43_Ceylon()) ) {
                    alt309=1;
                }
                else if ( (true) ) {
                    alt309=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return block;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 309, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA309_0==ALIAS||(LA309_0 >= ASSERT && LA309_0 <= ASSIGN)||(LA309_0 >= BACKTICK && LA309_0 <= BREAK)||(LA309_0 >= CATCH_CLAUSE && LA309_0 <= CLASS_DEFINITION)||LA309_0==COMPILER_ANNOTATION||LA309_0==CONTINUE||(LA309_0 >= DECREMENT_OP && LA309_0 <= DIFFERENCE_OP)||LA309_0==DYNAMIC||LA309_0==ELSE_CLAUSE||(LA309_0 >= FINALLY_CLAUSE && LA309_0 <= FUNCTION_MODIFIER)||LA309_0==IF_CLAUSE||(LA309_0 >= INCREMENT_OP && LA309_0 <= INTERFACE_DEFINITION)||LA309_0==LBRACKET||LA309_0==LIDENTIFIER||LA309_0==LPAREN||(LA309_0 >= NATURAL_LITERAL && LA309_0 <= NEW)||(LA309_0 >= NOT_OP && LA309_0 <= OBJECT_DEFINITION)||(LA309_0 >= OUTER && LA309_0 <= PACKAGE)||LA309_0==RBRACE||LA309_0==RETURN||LA309_0==SMALLER_OP||LA309_0==STRING_LITERAL||LA309_0==STRING_START||(LA309_0 >= SUM_OP && LA309_0 <= SWITCH_CLAUSE)||(LA309_0 >= THIS && LA309_0 <= TRY_CLAUSE)||LA309_0==UIDENTIFIER||(LA309_0 >= VALUE_MODIFIER && LA309_0 <= WHILE_CLAUSE)) ) {
                alt309=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return block;}
                NoViableAltException nvae =
                    new NoViableAltException("", 309, 0, input);

                throw nvae;

            }
            switch (alt309) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3591:9: ( LBRACE )=>b= block
                    {
                    pushFollow(FOLLOW_block_in_controlBlock24054);
                    b=block();

                    state._fsp--;
                    if (state.failed) return block;

                    if ( state.backtracking==0 ) { block =b; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3593:9: 
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                    new MismatchedTokenException(LBRACE, input)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "controlBlock"



    // $ANTLR start "dynamic"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3598:1: dynamic returns [DynamicStatement statement] : DYNAMIC block ;
    public DynamicStatement dynamic() throws RecognitionException {
        DynamicStatement statement = null;


        Token DYNAMIC535=null;
        Block block536 =null;


         DynamicClause dc = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3600:5: ( DYNAMIC block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3600:7: DYNAMIC block
            {
            if ( state.backtracking==0 ) { statement =new DynamicStatement(null); }

            DYNAMIC535=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_dynamic24120); if (state.failed) return statement;

            if ( state.backtracking==0 ) { dc = new DynamicClause(DYNAMIC535);
                    statement.setDynamicClause(dc); }

            pushFollow(FOLLOW_block_in_dynamic24137);
            block536=block();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { dc.setBlock(block536); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "dynamic"



    // $ANTLR start "ifElse"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3608:1: ifElse returns [IfStatement statement] : ifBlock ( elseBlock )? ;
    public IfStatement ifElse() throws RecognitionException {
        IfStatement statement = null;


        IfClause ifBlock537 =null;

        ElseClause elseBlock538 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3609:5: ( ifBlock ( elseBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3609:7: ifBlock ( elseBlock )?
            {
            if ( state.backtracking==0 ) { statement =new IfStatement(null); }

            pushFollow(FOLLOW_ifBlock_in_ifElse24174);
            ifBlock537=ifBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setIfClause(ifBlock537); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3612:7: ( elseBlock )?
            int alt310=2;
            int LA310_0 = input.LA(1);

            if ( (LA310_0==ELSE_CLAUSE) ) {
                alt310=1;
            }
            switch (alt310) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3613:9: elseBlock
                    {
                    pushFollow(FOLLOW_elseBlock_in_ifElse24202);
                    elseBlock538=elseBlock();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { ElseClause ec = elseBlock538;
                              statement.setElseClause(ec);
                              ConditionList cl = ifBlock537.getConditionList();
                              if (cl!=null) {
                                List<Condition> conditions = cl.getConditions();
                                if (conditions.size()==1) {
                                  Condition c = conditions.get(0);
                                  Identifier id = null;
                                  Type t = null;
                                  if (c instanceof ExistsOrNonemptyCondition) {
                                    Statement s = ((ExistsOrNonemptyCondition)c).getVariable();
                                    if (s instanceof Variable) {
                                      Variable v = (Variable) s;
                                      t = v.getType();
                                      id = v.getIdentifier();
                                    }
                                  }
                                  else if (c instanceof IsCondition) {
                                    Variable v = (Variable) ((IsCondition)c).getVariable();
                                    if (v!=null) {
                                      t = v.getType();
                                      id = v.getIdentifier();
                                    }
                                  }
                                  if (id!=null && ec!=null && t instanceof SyntheticVariable) { 
                                    Variable ev = new Variable(null);
                                    ev.setType(new SyntheticVariable(null));
                                    SpecifierExpression ese = new SpecifierExpression(null);
                                    Expression ee = new Expression(null);
                                    BaseMemberExpression ebme = new BaseMemberExpression(null);
                                    ebme.setTypeArguments( new InferredTypeArguments(null) );
                                    ee.setTerm(ebme);
                                    ese.setExpression(ee);
                                    ev.setSpecifierExpression(ese);
                                    ec.setVariable(ev);
                                    ev.setIdentifier(id);
                                    ebme.setIdentifier(id);
                                  }
                                }
                              }
                            }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "ifElse"



    // $ANTLR start "ifBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3658:1: ifBlock returns [IfClause clause] : IF_CLAUSE conditions controlBlock ;
    public IfClause ifBlock() throws RecognitionException {
        IfClause clause = null;


        Token IF_CLAUSE539=null;
        ConditionList conditions540 =null;

        Block controlBlock541 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3659:5: ( IF_CLAUSE conditions controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3659:7: IF_CLAUSE conditions controlBlock
            {
            IF_CLAUSE539=(Token)match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_ifBlock24242); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new IfClause(IF_CLAUSE539); }

            pushFollow(FOLLOW_conditions_in_ifBlock24259);
            conditions540=conditions();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setConditionList(conditions540); }

            pushFollow(FOLLOW_controlBlock_in_ifBlock24275);
            controlBlock541=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock541); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "ifBlock"



    // $ANTLR start "elseBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3667:1: elseBlock returns [ElseClause clause] : ELSE_CLAUSE ( elseIf | block ) ;
    public ElseClause elseBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE542=null;
        Block elseIf543 =null;

        Block block544 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3668:5: ( ELSE_CLAUSE ( elseIf | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3668:7: ELSE_CLAUSE ( elseIf | block )
            {
            ELSE_CLAUSE542=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_elseBlock24304); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE542); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3670:7: ( elseIf | block )
            int alt311=2;
            int LA311_0 = input.LA(1);

            if ( (LA311_0==IF_CLAUSE) ) {
                alt311=1;
            }
            else if ( (LA311_0==LBRACE) ) {
                alt311=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return clause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 311, 0, input);

                throw nvae;

            }
            switch (alt311) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3671:9: elseIf
                    {
                    pushFollow(FOLLOW_elseIf_in_elseBlock24331);
                    elseIf543=elseIf();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(elseIf543); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3674:9: block
                    {
                    pushFollow(FOLLOW_block_in_elseBlock24361);
                    block544=block();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(block544); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "elseBlock"



    // $ANTLR start "elseIf"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3679:1: elseIf returns [Block block] : ifElse ;
    public Block elseIf() throws RecognitionException {
        Block block = null;


        IfStatement ifElse545 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3680:5: ( ifElse )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3680:7: ifElse
            {
            pushFollow(FOLLOW_ifElse_in_elseIf24400);
            ifElse545=ifElse();

            state._fsp--;
            if (state.failed) return block;

            if ( state.backtracking==0 ) { block = new Block(null);
                    block.addStatement(ifElse545); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "elseIf"



    // $ANTLR start "switchCaseElse"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3685:1: switchCaseElse returns [SwitchStatement statement] : switchHeader cases ;
    public SwitchStatement switchCaseElse() throws RecognitionException {
        SwitchStatement statement = null;


        SwitchClause switchHeader546 =null;

        SwitchCaseList cases547 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3686:5: ( switchHeader cases )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3686:7: switchHeader cases
            {
            if ( state.backtracking==0 ) { statement = new SwitchStatement(null); }

            pushFollow(FOLLOW_switchHeader_in_switchCaseElse24437);
            switchHeader546=switchHeader();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setSwitchClause(switchHeader546); }

            pushFollow(FOLLOW_cases_in_switchCaseElse24454);
            cases547=cases();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setSwitchCaseList(cases547);
                    Identifier id = null;
                    Switched sw = switchHeader546.getSwitched();
                    if (sw!=null) {
                      Expression ex = sw.getExpression();
                      if (ex!=null && ex.getTerm() instanceof BaseMemberExpression) {
                        id = ((BaseMemberExpression) ex.getTerm()).getIdentifier();
                      }
                      TypedDeclaration var = sw.getVariable();
                      if (var!=null) {
                        id = var.getIdentifier();
                      }
                    }
                    if (id!=null) {
                      for (CaseClause cc: cases547.getCaseClauses()) {
                        CaseItem item = cc.getCaseItem();
                        if (item instanceof IsCase) {
                          IsCase ic = (IsCase) item;
                          Variable v = new Variable(null);
                          v.setType(new SyntheticVariable(null));
                          SpecifierExpression se = new SpecifierExpression(null);
                          Expression e = new Expression(null);
                          BaseMemberExpression bme = new BaseMemberExpression(null);
                          bme.setTypeArguments( new InferredTypeArguments(null) );
                          e.setTerm(bme);
                          se.setExpression(e);
                          v.setSpecifierExpression(se);
                          ic.setVariable(v);
                          bme.setIdentifier(id);
                          v.setIdentifier(id);
                        }
                      }
                      ElseClause ec = cases547.getElseClause();
                      if (ec!=null) {
                        Variable ev = new Variable(null);
                        ev.setType(new SyntheticVariable(null));
                        SpecifierExpression ese = new SpecifierExpression(null);
                        Expression ee = new Expression(null);
                        BaseMemberExpression ebme = new BaseMemberExpression(null);
                        ebme.setTypeArguments( new InferredTypeArguments(null) );
                        ee.setTerm(ebme);
                        ese.setExpression(ee);
                        ev.setSpecifierExpression(ese);
                        ec.setVariable(ev);
                        ebme.setIdentifier(id);
                        ev.setIdentifier(id);
                      }
                    }
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "switchCaseElse"



    // $ANTLR start "switchHeader"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3741:1: switchHeader returns [SwitchClause clause] : SWITCH_CLAUSE LPAREN ( switched )? RPAREN ;
    public SwitchClause switchHeader() throws RecognitionException {
        SwitchClause clause = null;


        Token SWITCH_CLAUSE548=null;
        Token LPAREN549=null;
        Token RPAREN551=null;
        Switched switched550 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3742:5: ( SWITCH_CLAUSE LPAREN ( switched )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3742:7: SWITCH_CLAUSE LPAREN ( switched )? RPAREN
            {
            SWITCH_CLAUSE548=(Token)match(input,SWITCH_CLAUSE,FOLLOW_SWITCH_CLAUSE_in_switchHeader24483); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new SwitchClause(SWITCH_CLAUSE548); }

            LPAREN549=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_switchHeader24500); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setEndToken(LPAREN549); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3746:7: ( switched )?
            int alt312=2;
            int LA312_0 = input.LA(1);

            if ( (LA312_0==BACKTICK||LA312_0==CHAR_LITERAL||LA312_0==COMPILER_ANNOTATION||(LA312_0 >= DECREMENT_OP && LA312_0 <= DIFFERENCE_OP)||LA312_0==DYNAMIC||LA312_0==FLOAT_LITERAL||LA312_0==FUNCTION_MODIFIER||LA312_0==INCREMENT_OP||(LA312_0 >= LBRACE && LA312_0 <= LBRACKET)||LA312_0==LIDENTIFIER||LA312_0==LPAREN||LA312_0==NATURAL_LITERAL||(LA312_0 >= NOT_OP && LA312_0 <= OBJECT_DEFINITION)||(LA312_0 >= OUTER && LA312_0 <= PACKAGE)||LA312_0==SMALLER_OP||LA312_0==STRING_LITERAL||LA312_0==STRING_START||(LA312_0 >= SUM_OP && LA312_0 <= SUPER)||LA312_0==THIS||LA312_0==UIDENTIFIER||(LA312_0 >= VALUE_MODIFIER && LA312_0 <= VOID_MODIFIER)) ) {
                alt312=1;
            }
            switch (alt312) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3747:9: switched
                    {
                    pushFollow(FOLLOW_switched_in_switchHeader24526);
                    switched550=switched();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setSwitched(switched550); 
                              clause.setEndToken(null); }

                    }
                    break;

            }


            RPAREN551=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_switchHeader24554); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setEndToken(RPAREN551); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "switchHeader"



    // $ANTLR start "switched"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3755:1: switched returns [Switched switched] : ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression ) ;
    public Switched switched() throws RecognitionException {
        Switched switched = null;


        Variable specifiedVariable552 =null;

        Expression expression553 =null;


         switched = new Switched(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3757:5: ( ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3757:7: ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3757:7: ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression )
            int alt313=2;
            int LA313_0 = input.LA(1);

            if ( (LA313_0==COMPILER_ANNOTATION) && (synpred44_Ceylon())) {
                alt313=1;
            }
            else if ( (LA313_0==UIDENTIFIER) ) {
                int LA313_2 = input.LA(2);

                if ( (synpred44_Ceylon()) ) {
                    alt313=1;
                }
                else if ( (true) ) {
                    alt313=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 313, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA313_0==SMALLER_OP) && (synpred44_Ceylon())) {
                alt313=1;
            }
            else if ( (LA313_0==PACKAGE) ) {
                int LA313_4 = input.LA(2);

                if ( (synpred44_Ceylon()) ) {
                    alt313=1;
                }
                else if ( (true) ) {
                    alt313=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 313, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA313_0==LBRACKET) ) {
                int LA313_5 = input.LA(2);

                if ( (synpred44_Ceylon()) ) {
                    alt313=1;
                }
                else if ( (true) ) {
                    alt313=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 313, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA313_0==LBRACE) ) {
                int LA313_6 = input.LA(2);

                if ( (synpred44_Ceylon()) ) {
                    alt313=1;
                }
                else if ( (true) ) {
                    alt313=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 313, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA313_0==VOID_MODIFIER) && (synpred44_Ceylon())) {
                alt313=1;
            }
            else if ( (LA313_0==FUNCTION_MODIFIER) && (synpred44_Ceylon())) {
                alt313=1;
            }
            else if ( (LA313_0==VALUE_MODIFIER) && (synpred44_Ceylon())) {
                alt313=1;
            }
            else if ( (LA313_0==LIDENTIFIER) ) {
                int LA313_10 = input.LA(2);

                if ( (synpred44_Ceylon()) ) {
                    alt313=1;
                }
                else if ( (true) ) {
                    alt313=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 313, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA313_0==BACKTICK||LA313_0==CHAR_LITERAL||(LA313_0 >= DECREMENT_OP && LA313_0 <= DIFFERENCE_OP)||LA313_0==DYNAMIC||LA313_0==FLOAT_LITERAL||LA313_0==INCREMENT_OP||LA313_0==LPAREN||LA313_0==NATURAL_LITERAL||(LA313_0 >= NOT_OP && LA313_0 <= OBJECT_DEFINITION)||LA313_0==OUTER||LA313_0==STRING_LITERAL||LA313_0==STRING_START||(LA313_0 >= SUM_OP && LA313_0 <= SUPER)||LA313_0==THIS||LA313_0==VERBATIM_STRING) ) {
                alt313=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return switched;}
                NoViableAltException nvae =
                    new NoViableAltException("", 313, 0, input);

                throw nvae;

            }
            switch (alt313) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3757:9: ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable
                    {
                    pushFollow(FOLLOW_specifiedVariable_in_switched24613);
                    specifiedVariable552=specifiedVariable();

                    state._fsp--;
                    if (state.failed) return switched;

                    if ( state.backtracking==0 ) { switched.setVariable(specifiedVariable552); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3760:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_switched24633);
                    expression553=expression();

                    state._fsp--;
                    if (state.failed) return switched;

                    if ( state.backtracking==0 ) { switched.setExpression(expression553); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return switched;
    }
    // $ANTLR end "switched"



    // $ANTLR start "cases"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3765:1: cases returns [SwitchCaseList switchCaseList] : ( caseBlock )+ ( defaultCaseBlock )? ;
    public SwitchCaseList cases() throws RecognitionException {
        SwitchCaseList switchCaseList = null;


        CaseClause caseBlock554 =null;

        ElseClause defaultCaseBlock555 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3766:5: ( ( caseBlock )+ ( defaultCaseBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3766:7: ( caseBlock )+ ( defaultCaseBlock )?
            {
            if ( state.backtracking==0 ) { switchCaseList = new SwitchCaseList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3767:7: ( caseBlock )+
            int cnt314=0;
            loop314:
            do {
                int alt314=2;
                int LA314_0 = input.LA(1);

                if ( (LA314_0==CASE_CLAUSE) ) {
                    alt314=1;
                }


                switch (alt314) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3768:9: caseBlock
            	    {
            	    pushFollow(FOLLOW_caseBlock_in_cases24690);
            	    caseBlock554=caseBlock();

            	    state._fsp--;
            	    if (state.failed) return switchCaseList;

            	    if ( state.backtracking==0 ) { switchCaseList.addCaseClause(caseBlock554); }

            	    }
            	    break;

            	default :
            	    if ( cnt314 >= 1 ) break loop314;
            	    if (state.backtracking>0) {state.failed=true; return switchCaseList;}
                        EarlyExitException eee =
                            new EarlyExitException(314, input);
                        throw eee;
                }
                cnt314++;
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3771:7: ( defaultCaseBlock )?
            int alt315=2;
            int LA315_0 = input.LA(1);

            if ( (LA315_0==ELSE_CLAUSE) ) {
                alt315=1;
            }
            switch (alt315) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3772:9: defaultCaseBlock
                    {
                    pushFollow(FOLLOW_defaultCaseBlock_in_cases24727);
                    defaultCaseBlock555=defaultCaseBlock();

                    state._fsp--;
                    if (state.failed) return switchCaseList;

                    if ( state.backtracking==0 ) { switchCaseList.setElseClause(defaultCaseBlock555); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return switchCaseList;
    }
    // $ANTLR end "cases"



    // $ANTLR start "caseBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3777:1: caseBlock returns [CaseClause clause] : CASE_CLAUSE caseItemList block ;
    public CaseClause caseBlock() throws RecognitionException {
        CaseClause clause = null;


        Token CASE_CLAUSE556=null;
        CaseItem caseItemList557 =null;

        Block block558 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3778:5: ( CASE_CLAUSE caseItemList block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3778:7: CASE_CLAUSE caseItemList block
            {
            CASE_CLAUSE556=(Token)match(input,CASE_CLAUSE,FOLLOW_CASE_CLAUSE_in_caseBlock24771); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new CaseClause(CASE_CLAUSE556); }

            pushFollow(FOLLOW_caseItemList_in_caseBlock24788);
            caseItemList557=caseItemList();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setCaseItem(caseItemList557); }

            pushFollow(FOLLOW_block_in_caseBlock24804);
            block558=block();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(block558); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "caseBlock"



    // $ANTLR start "defaultCaseBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3786:1: defaultCaseBlock returns [ElseClause clause] : ELSE_CLAUSE block ;
    public ElseClause defaultCaseBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE559=null;
        Block block560 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3787:5: ( ELSE_CLAUSE block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3787:7: ELSE_CLAUSE block
            {
            ELSE_CLAUSE559=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_defaultCaseBlock24833); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE559); }

            pushFollow(FOLLOW_block_in_defaultCaseBlock24850);
            block560=block();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(block560); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "defaultCaseBlock"



    // $ANTLR start "caseItemList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3793:1: caseItemList returns [CaseItem item] : LPAREN (ci= caseItem )? RPAREN ;
    public CaseItem caseItemList() throws RecognitionException {
        CaseItem item = null;


        Token RPAREN561=null;
        CaseItem ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3794:5: ( LPAREN (ci= caseItem )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3794:7: LPAREN (ci= caseItem )? RPAREN
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_caseItemList24879); if (state.failed) return item;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3795:7: (ci= caseItem )?
            int alt316=2;
            int LA316_0 = input.LA(1);

            if ( (LA316_0==BACKTICK||LA316_0==CHAR_LITERAL||(LA316_0 >= DECREMENT_OP && LA316_0 <= DIFFERENCE_OP)||LA316_0==DYNAMIC||LA316_0==FLOAT_LITERAL||LA316_0==INCREMENT_OP||LA316_0==IS_OP||(LA316_0 >= LBRACE && LA316_0 <= LBRACKET)||LA316_0==LIDENTIFIER||LA316_0==LPAREN||LA316_0==NATURAL_LITERAL||LA316_0==OBJECT_DEFINITION||(LA316_0 >= OUTER && LA316_0 <= PACKAGE)||LA316_0==SATISFIES||LA316_0==STRING_LITERAL||LA316_0==STRING_START||(LA316_0 >= SUM_OP && LA316_0 <= SUPER)||LA316_0==THIS||LA316_0==UIDENTIFIER||LA316_0==VERBATIM_STRING) ) {
                alt316=1;
            }
            switch (alt316) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3796:9: ci= caseItem
                    {
                    pushFollow(FOLLOW_caseItem_in_caseItemList24900);
                    ci=caseItem();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item = ci; }

                    }
                    break;

            }


            RPAREN561=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_caseItemList24927); if (state.failed) return item;

            if ( state.backtracking==0 ) { if (item!=null) 
                        item.setEndToken(RPAREN561); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "caseItemList"



    // $ANTLR start "caseItem"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3804:1: caseItem returns [CaseItem item] : ( ( IS_OP )=> isCaseCondition | ( SATISFIES )=> satisfiesCaseCondition | matchCaseCondition );
    public CaseItem caseItem() throws RecognitionException {
        CaseItem item = null;


        IsCase isCaseCondition562 =null;

        SatisfiesCase satisfiesCaseCondition563 =null;

        MatchCase matchCaseCondition564 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3805:5: ( ( IS_OP )=> isCaseCondition | ( SATISFIES )=> satisfiesCaseCondition | matchCaseCondition )
            int alt317=3;
            int LA317_0 = input.LA(1);

            if ( (LA317_0==IS_OP) && (synpred45_Ceylon())) {
                alt317=1;
            }
            else if ( (LA317_0==SATISFIES) && (synpred46_Ceylon())) {
                alt317=2;
            }
            else if ( (LA317_0==BACKTICK||LA317_0==CHAR_LITERAL||(LA317_0 >= DECREMENT_OP && LA317_0 <= DIFFERENCE_OP)||LA317_0==DYNAMIC||LA317_0==FLOAT_LITERAL||LA317_0==INCREMENT_OP||(LA317_0 >= LBRACE && LA317_0 <= LBRACKET)||LA317_0==LIDENTIFIER||LA317_0==LPAREN||LA317_0==NATURAL_LITERAL||LA317_0==OBJECT_DEFINITION||(LA317_0 >= OUTER && LA317_0 <= PACKAGE)||LA317_0==STRING_LITERAL||LA317_0==STRING_START||(LA317_0 >= SUM_OP && LA317_0 <= SUPER)||LA317_0==THIS||LA317_0==UIDENTIFIER||LA317_0==VERBATIM_STRING) ) {
                alt317=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return item;}
                NoViableAltException nvae =
                    new NoViableAltException("", 317, 0, input);

                throw nvae;

            }
            switch (alt317) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3805:7: ( IS_OP )=> isCaseCondition
                    {
                    pushFollow(FOLLOW_isCaseCondition_in_caseItem24961);
                    isCaseCondition562=isCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =isCaseCondition562; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3807:7: ( SATISFIES )=> satisfiesCaseCondition
                    {
                    pushFollow(FOLLOW_satisfiesCaseCondition_in_caseItem24982);
                    satisfiesCaseCondition563=satisfiesCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =satisfiesCaseCondition563; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3809:7: matchCaseCondition
                    {
                    pushFollow(FOLLOW_matchCaseCondition_in_caseItem24998);
                    matchCaseCondition564=matchCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =matchCaseCondition564; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "caseItem"



    // $ANTLR start "matchCaseCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3813:1: matchCaseCondition returns [MatchCase item] : valueCaseList ;
    public MatchCase matchCaseCondition() throws RecognitionException {
        MatchCase item = null;


        ExpressionList valueCaseList565 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3814:5: ( valueCaseList )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3814:7: valueCaseList
            {
            pushFollow(FOLLOW_valueCaseList_in_matchCaseCondition25027);
            valueCaseList565=valueCaseList();

            state._fsp--;
            if (state.failed) return item;

            if ( state.backtracking==0 ) { item = new MatchCase(null);
                    item.setExpressionList(valueCaseList565); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "matchCaseCondition"



    // $ANTLR start "isCaseCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3819:1: isCaseCondition returns [IsCase item] : IS_OP type ;
    public IsCase isCaseCondition() throws RecognitionException {
        IsCase item = null;


        Token IS_OP566=null;
        StaticType type567 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3820:5: ( IS_OP type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3820:7: IS_OP type
            {
            IS_OP566=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_isCaseCondition25056); if (state.failed) return item;

            if ( state.backtracking==0 ) { item = new IsCase(IS_OP566); }

            pushFollow(FOLLOW_type_in_isCaseCondition25073);
            type567=type();

            state._fsp--;
            if (state.failed) return item;

            if ( state.backtracking==0 ) { item.setType(type567); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "isCaseCondition"



    // $ANTLR start "satisfiesCaseCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3826:1: satisfiesCaseCondition returns [SatisfiesCase item] : SATISFIES type ;
    public SatisfiesCase satisfiesCaseCondition() throws RecognitionException {
        SatisfiesCase item = null;


        Token SATISFIES568=null;
        StaticType type569 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3827:5: ( SATISFIES type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3827:7: SATISFIES type
            {
            SATISFIES568=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiesCaseCondition25102); if (state.failed) return item;

            if ( state.backtracking==0 ) { item = new SatisfiesCase(SATISFIES568); }

            pushFollow(FOLLOW_type_in_satisfiesCaseCondition25119);
            type569=type();

            state._fsp--;
            if (state.failed) return item;

            if ( state.backtracking==0 ) { item.setType(type569); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "satisfiesCaseCondition"



    // $ANTLR start "forElse"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3833:1: forElse returns [ForStatement statement] : forBlock ( failBlock )? ;
    public ForStatement forElse() throws RecognitionException {
        ForStatement statement = null;


        ForClause forBlock570 =null;

        ElseClause failBlock571 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3834:5: ( forBlock ( failBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3834:7: forBlock ( failBlock )?
            {
            if ( state.backtracking==0 ) { statement =new ForStatement(null); }

            pushFollow(FOLLOW_forBlock_in_forElse25156);
            forBlock570=forBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setForClause(forBlock570); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3837:7: ( failBlock )?
            int alt318=2;
            int LA318_0 = input.LA(1);

            if ( (LA318_0==ELSE_CLAUSE) ) {
                alt318=1;
            }
            switch (alt318) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3838:9: failBlock
                    {
                    pushFollow(FOLLOW_failBlock_in_forElse25183);
                    failBlock571=failBlock();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setElseClause(failBlock571); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "forElse"



    // $ANTLR start "forBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3843:1: forBlock returns [ForClause clause] : FOR_CLAUSE forIterator controlBlock ;
    public ForClause forBlock() throws RecognitionException {
        ForClause clause = null;


        Token FOR_CLAUSE572=null;
        ForIterator forIterator573 =null;

        Block controlBlock574 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3844:5: ( FOR_CLAUSE forIterator controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3844:7: FOR_CLAUSE forIterator controlBlock
            {
            FOR_CLAUSE572=(Token)match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_forBlock25223); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ForClause(FOR_CLAUSE572); }

            pushFollow(FOLLOW_forIterator_in_forBlock25240);
            forIterator573=forIterator();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setForIterator(forIterator573); }

            pushFollow(FOLLOW_controlBlock_in_forBlock25257);
            controlBlock574=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock574); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "forBlock"



    // $ANTLR start "failBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3852:1: failBlock returns [ElseClause clause] : ELSE_CLAUSE controlBlock ;
    public ElseClause failBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE575=null;
        Block controlBlock576 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3853:5: ( ELSE_CLAUSE controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3853:7: ELSE_CLAUSE controlBlock
            {
            ELSE_CLAUSE575=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_failBlock25286); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE575); }

            pushFollow(FOLLOW_controlBlock_in_failBlock25303);
            controlBlock576=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock576); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "failBlock"



    // $ANTLR start "forIterator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3859:1: forIterator returns [ForIterator iterator] : LPAREN ( ( ( patternStart )=> pattern | variable ) ( containment )? )? RPAREN ;
    public ForIterator forIterator() throws RecognitionException {
        ForIterator iterator = null;


        Token LPAREN577=null;
        Token RPAREN581=null;
        Pattern pattern578 =null;

        Variable variable579 =null;

        SpecifierExpression containment580 =null;


         ValueIterator vi = null;
                    PatternIterator pi = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3862:5: ( LPAREN ( ( ( patternStart )=> pattern | variable ) ( containment )? )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3862:7: LPAREN ( ( ( patternStart )=> pattern | variable ) ( containment )? )? RPAREN
            {
            LPAREN577=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_forIterator25341); if (state.failed) return iterator;

            if ( state.backtracking==0 ) { vi = new ValueIterator(LPAREN577); 
            	      pi = new PatternIterator(LPAREN577); 
            	      iterator = vi; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3866:6: ( ( ( patternStart )=> pattern | variable ) ( containment )? )?
            int alt321=2;
            int LA321_0 = input.LA(1);

            if ( (LA321_0==COMPILER_ANNOTATION||LA321_0==FUNCTION_MODIFIER||(LA321_0 >= LBRACE && LA321_0 <= LBRACKET)||LA321_0==LIDENTIFIER||LA321_0==PACKAGE||LA321_0==SMALLER_OP||LA321_0==UIDENTIFIER||LA321_0==VALUE_MODIFIER||LA321_0==VOID_MODIFIER) ) {
                alt321=1;
            }
            switch (alt321) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3867:8: ( ( patternStart )=> pattern | variable ) ( containment )?
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3867:8: ( ( patternStart )=> pattern | variable )
                    int alt319=2;
                    switch ( input.LA(1) ) {
                    case LBRACKET:
                        {
                        int LA319_1 = input.LA(2);

                        if ( (synpred47_Ceylon()) ) {
                            alt319=1;
                        }
                        else if ( (true) ) {
                            alt319=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 319, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case COMPILER_ANNOTATION:
                        {
                        int LA319_2 = input.LA(2);

                        if ( (synpred47_Ceylon()) ) {
                            alt319=1;
                        }
                        else if ( (true) ) {
                            alt319=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 319, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case UIDENTIFIER:
                        {
                        int LA319_3 = input.LA(2);

                        if ( (synpred47_Ceylon()) ) {
                            alt319=1;
                        }
                        else if ( (true) ) {
                            alt319=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 319, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case SMALLER_OP:
                        {
                        int LA319_4 = input.LA(2);

                        if ( (synpred47_Ceylon()) ) {
                            alt319=1;
                        }
                        else if ( (true) ) {
                            alt319=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 319, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case PACKAGE:
                        {
                        int LA319_5 = input.LA(2);

                        if ( (synpred47_Ceylon()) ) {
                            alt319=1;
                        }
                        else if ( (true) ) {
                            alt319=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 319, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case LBRACE:
                        {
                        int LA319_6 = input.LA(2);

                        if ( (synpred47_Ceylon()) ) {
                            alt319=1;
                        }
                        else if ( (true) ) {
                            alt319=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 319, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case VOID_MODIFIER:
                        {
                        int LA319_7 = input.LA(2);

                        if ( (synpred47_Ceylon()) ) {
                            alt319=1;
                        }
                        else if ( (true) ) {
                            alt319=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 319, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case FUNCTION_MODIFIER:
                        {
                        int LA319_8 = input.LA(2);

                        if ( (synpred47_Ceylon()) ) {
                            alt319=1;
                        }
                        else if ( (true) ) {
                            alt319=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 319, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case VALUE_MODIFIER:
                        {
                        int LA319_9 = input.LA(2);

                        if ( (synpred47_Ceylon()) ) {
                            alt319=1;
                        }
                        else if ( (true) ) {
                            alt319=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 319, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case LIDENTIFIER:
                        {
                        int LA319_10 = input.LA(2);

                        if ( (synpred47_Ceylon()) ) {
                            alt319=1;
                        }
                        else if ( (true) ) {
                            alt319=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 319, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return iterator;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 319, 0, input);

                        throw nvae;

                    }

                    switch (alt319) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3868:10: ( patternStart )=> pattern
                            {
                            pushFollow(FOLLOW_pattern_in_forIterator25382);
                            pattern578=pattern();

                            state._fsp--;
                            if (state.failed) return iterator;

                            if ( state.backtracking==0 ) { pi.setPattern(pattern578);
                            	          iterator = pi; }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3872:10: variable
                            {
                            pushFollow(FOLLOW_variable_in_forIterator25413);
                            variable579=variable();

                            state._fsp--;
                            if (state.failed) return iterator;

                            if ( state.backtracking==0 ) { vi.setVariable(variable579); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3875:8: ( containment )?
                    int alt320=2;
                    int LA320_0 = input.LA(1);

                    if ( (LA320_0==IN_OP) ) {
                        alt320=1;
                    }
                    switch (alt320) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3876:10: containment
                            {
                            pushFollow(FOLLOW_containment_in_forIterator25453);
                            containment580=containment();

                            state._fsp--;
                            if (state.failed) return iterator;

                            if ( state.backtracking==0 ) { iterator.setSpecifierExpression(containment580); }

                            }
                            break;

                    }


                    }
                    break;

            }


            RPAREN581=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_forIterator25489); if (state.failed) return iterator;

            if ( state.backtracking==0 ) { iterator.setEndToken(RPAREN581); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return iterator;
    }
    // $ANTLR end "forIterator"



    // $ANTLR start "containment"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3884:1: containment returns [SpecifierExpression specifierExpression] : IN_OP ( expression )? ;
    public SpecifierExpression containment() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token IN_OP582=null;
        Expression expression583 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3885:5: ( IN_OP ( expression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3885:7: IN_OP ( expression )?
            {
            IN_OP582=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_containment25521); if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression = new SpecifierExpression(IN_OP582); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3887:7: ( expression )?
            int alt322=2;
            int LA322_0 = input.LA(1);

            if ( (LA322_0==BACKTICK||LA322_0==CHAR_LITERAL||(LA322_0 >= DECREMENT_OP && LA322_0 <= DIFFERENCE_OP)||LA322_0==DYNAMIC||LA322_0==FLOAT_LITERAL||LA322_0==INCREMENT_OP||(LA322_0 >= LBRACE && LA322_0 <= LBRACKET)||LA322_0==LIDENTIFIER||LA322_0==LPAREN||LA322_0==NATURAL_LITERAL||(LA322_0 >= NOT_OP && LA322_0 <= OBJECT_DEFINITION)||(LA322_0 >= OUTER && LA322_0 <= PACKAGE)||LA322_0==STRING_LITERAL||LA322_0==STRING_START||(LA322_0 >= SUM_OP && LA322_0 <= SUPER)||LA322_0==THIS||LA322_0==UIDENTIFIER||LA322_0==VERBATIM_STRING) ) {
                alt322=1;
            }
            switch (alt322) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3887:8: expression
                    {
                    pushFollow(FOLLOW_expression_in_containment25539);
                    expression583=expression();

                    state._fsp--;
                    if (state.failed) return specifierExpression;

                    if ( state.backtracking==0 ) { specifierExpression.setExpression(expression583); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "containment"



    // $ANTLR start "whileLoop"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3891:1: whileLoop returns [WhileStatement statement] : whileBlock ;
    public WhileStatement whileLoop() throws RecognitionException {
        WhileStatement statement = null;


        WhileClause whileBlock584 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3892:5: ( whileBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3892:7: whileBlock
            {
            if ( state.backtracking==0 ) { statement = new WhileStatement(null); }

            pushFollow(FOLLOW_whileBlock_in_whileLoop25582);
            whileBlock584=whileBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setWhileClause(whileBlock584); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "whileLoop"



    // $ANTLR start "whileBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3897:1: whileBlock returns [WhileClause clause] : WHILE_CLAUSE conditions controlBlock ;
    public WhileClause whileBlock() throws RecognitionException {
        WhileClause clause = null;


        Token WHILE_CLAUSE585=null;
        ConditionList conditions586 =null;

        Block controlBlock587 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3898:5: ( WHILE_CLAUSE conditions controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3898:7: WHILE_CLAUSE conditions controlBlock
            {
            WHILE_CLAUSE585=(Token)match(input,WHILE_CLAUSE,FOLLOW_WHILE_CLAUSE_in_whileBlock25611); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new WhileClause(WHILE_CLAUSE585); }

            pushFollow(FOLLOW_conditions_in_whileBlock25627);
            conditions586=conditions();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setConditionList(conditions586); }

            pushFollow(FOLLOW_controlBlock_in_whileBlock25643);
            controlBlock587=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock587); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "whileBlock"



    // $ANTLR start "tryCatchFinally"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3906:1: tryCatchFinally returns [TryCatchStatement statement] : tryBlock ( catchBlock )* ( finallyBlock )? ;
    public TryCatchStatement tryCatchFinally() throws RecognitionException {
        TryCatchStatement statement = null;


        TryClause tryBlock588 =null;

        CatchClause catchBlock589 =null;

        FinallyClause finallyBlock590 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3907:5: ( tryBlock ( catchBlock )* ( finallyBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3907:7: tryBlock ( catchBlock )* ( finallyBlock )?
            {
            if ( state.backtracking==0 ) { statement = new TryCatchStatement(null); }

            pushFollow(FOLLOW_tryBlock_in_tryCatchFinally25680);
            tryBlock588=tryBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setTryClause(tryBlock588); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3910:7: ( catchBlock )*
            loop323:
            do {
                int alt323=2;
                int LA323_0 = input.LA(1);

                if ( (LA323_0==CATCH_CLAUSE) ) {
                    alt323=1;
                }


                switch (alt323) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3911:9: catchBlock
            	    {
            	    pushFollow(FOLLOW_catchBlock_in_tryCatchFinally25707);
            	    catchBlock589=catchBlock();

            	    state._fsp--;
            	    if (state.failed) return statement;

            	    if ( state.backtracking==0 ) { statement.addCatchClause(catchBlock589); }

            	    }
            	    break;

            	default :
            	    break loop323;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3914:7: ( finallyBlock )?
            int alt324=2;
            int LA324_0 = input.LA(1);

            if ( (LA324_0==FINALLY_CLAUSE) ) {
                alt324=1;
            }
            switch (alt324) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3915:9: finallyBlock
                    {
                    pushFollow(FOLLOW_finallyBlock_in_tryCatchFinally25746);
                    finallyBlock590=finallyBlock();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setFinallyClause(finallyBlock590); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "tryCatchFinally"



    // $ANTLR start "tryBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3920:1: tryBlock returns [TryClause clause] : TRY_CLAUSE ( resources controlBlock | block ) ;
    public TryClause tryBlock() throws RecognitionException {
        TryClause clause = null;


        Token TRY_CLAUSE591=null;
        ResourceList resources592 =null;

        Block controlBlock593 =null;

        Block block594 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3921:5: ( TRY_CLAUSE ( resources controlBlock | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3921:7: TRY_CLAUSE ( resources controlBlock | block )
            {
            TRY_CLAUSE591=(Token)match(input,TRY_CLAUSE,FOLLOW_TRY_CLAUSE_in_tryBlock25786); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new TryClause(TRY_CLAUSE591); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3923:7: ( resources controlBlock | block )
            int alt325=2;
            int LA325_0 = input.LA(1);

            if ( (LA325_0==LPAREN) ) {
                alt325=1;
            }
            else if ( (LA325_0==LBRACE) ) {
                alt325=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return clause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 325, 0, input);

                throw nvae;

            }
            switch (alt325) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3924:9: resources controlBlock
                    {
                    pushFollow(FOLLOW_resources_in_tryBlock25813);
                    resources592=resources();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setResourceList(resources592); }

                    pushFollow(FOLLOW_controlBlock_in_tryBlock25833);
                    controlBlock593=controlBlock();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(controlBlock593); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3929:9: block
                    {
                    pushFollow(FOLLOW_block_in_tryBlock25861);
                    block594=block();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(block594); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "tryBlock"



    // $ANTLR start "catchBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3934:1: catchBlock returns [CatchClause clause] : CATCH_CLAUSE catchVariable controlBlock ;
    public CatchClause catchBlock() throws RecognitionException {
        CatchClause clause = null;


        Token CATCH_CLAUSE595=null;
        CatchVariable catchVariable596 =null;

        Block controlBlock597 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3935:5: ( CATCH_CLAUSE catchVariable controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3935:7: CATCH_CLAUSE catchVariable controlBlock
            {
            CATCH_CLAUSE595=(Token)match(input,CATCH_CLAUSE,FOLLOW_CATCH_CLAUSE_in_catchBlock25900); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new CatchClause(CATCH_CLAUSE595); }

            pushFollow(FOLLOW_catchVariable_in_catchBlock25917);
            catchVariable596=catchVariable();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setCatchVariable(catchVariable596); }

            pushFollow(FOLLOW_controlBlock_in_catchBlock25933);
            controlBlock597=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock597); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "catchBlock"



    // $ANTLR start "catchVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3943:1: catchVariable returns [CatchVariable catchVariable] : LPAREN ( variable )? RPAREN ;
    public CatchVariable catchVariable() throws RecognitionException {
        CatchVariable catchVariable = null;


        Token LPAREN598=null;
        Token RPAREN600=null;
        Variable variable599 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3944:5: ( LPAREN ( variable )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3944:7: LPAREN ( variable )? RPAREN
            {
            LPAREN598=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_catchVariable25962); if (state.failed) return catchVariable;

            if ( state.backtracking==0 ) { catchVariable =new CatchVariable(LPAREN598); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3946:7: ( variable )?
            int alt326=2;
            int LA326_0 = input.LA(1);

            if ( (LA326_0==ALIAS||(LA326_0 >= ASSERT && LA326_0 <= ASSIGN)||(LA326_0 >= BACKTICK && LA326_0 <= BREAK)||(LA326_0 >= CHAR_LITERAL && LA326_0 <= CLASS_DEFINITION)||LA326_0==COMPILER_ANNOTATION||LA326_0==CONTINUE||(LA326_0 >= DECREMENT_OP && LA326_0 <= DIFFERENCE_OP)||LA326_0==DYNAMIC||(LA326_0 >= FLOAT_LITERAL && LA326_0 <= FUNCTION_MODIFIER)||(LA326_0 >= IF_CLAUSE && LA326_0 <= INTERFACE_DEFINITION)||LA326_0==IN_OP||(LA326_0 >= LBRACE && LA326_0 <= LIDENTIFIER)||LA326_0==LPAREN||LA326_0==MODULE||(LA326_0 >= NATURAL_LITERAL && LA326_0 <= NEW)||(LA326_0 >= NOT_OP && LA326_0 <= OBJECT_DEFINITION)||(LA326_0 >= OUT && LA326_0 <= PACKAGE)||LA326_0==PRODUCT_OP||LA326_0==RETURN||(LA326_0 >= SEMICOLON && LA326_0 <= SMALLER_OP)||LA326_0==STRING_LITERAL||LA326_0==STRING_START||(LA326_0 >= SUM_OP && LA326_0 <= SWITCH_CLAUSE)||(LA326_0 >= THIS && LA326_0 <= UIDENTIFIER)||(LA326_0 >= VALUE_MODIFIER && LA326_0 <= WHILE_CLAUSE)) ) {
                alt326=1;
            }
            switch (alt326) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3947:7: variable
                    {
                    pushFollow(FOLLOW_variable_in_catchVariable25987);
                    variable599=variable();

                    state._fsp--;
                    if (state.failed) return catchVariable;

                    if ( state.backtracking==0 ) { catchVariable.setVariable(variable599); }

                    }
                    break;

            }


            RPAREN600=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_catchVariable26013); if (state.failed) return catchVariable;

            if ( state.backtracking==0 ) { catchVariable.setEndToken(RPAREN600); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return catchVariable;
    }
    // $ANTLR end "catchVariable"



    // $ANTLR start "finallyBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3955:1: finallyBlock returns [FinallyClause clause] : FINALLY_CLAUSE controlBlock ;
    public FinallyClause finallyBlock() throws RecognitionException {
        FinallyClause clause = null;


        Token FINALLY_CLAUSE601=null;
        Block controlBlock602 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3956:5: ( FINALLY_CLAUSE controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3956:7: FINALLY_CLAUSE controlBlock
            {
            FINALLY_CLAUSE601=(Token)match(input,FINALLY_CLAUSE,FOLLOW_FINALLY_CLAUSE_in_finallyBlock26044); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new FinallyClause(FINALLY_CLAUSE601); }

            pushFollow(FOLLOW_controlBlock_in_finallyBlock26061);
            controlBlock602=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock602); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "finallyBlock"



    // $ANTLR start "resources"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3962:1: resources returns [ResourceList resources] : LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN ;
    public ResourceList resources() throws RecognitionException {
        ResourceList resources = null;


        Token c=null;
        Token LPAREN603=null;
        Token RPAREN604=null;
        Resource r1 =null;

        Resource r2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3963:5: ( LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3963:7: LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN
            {
            LPAREN603=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_resources26090); if (state.failed) return resources;

            if ( state.backtracking==0 ) { resources = new ResourceList(LPAREN603); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3965:6: (r1= resource (c= COMMA r2= resource )* )?
            int alt328=2;
            int LA328_0 = input.LA(1);

            if ( (LA328_0==BACKTICK||LA328_0==CHAR_LITERAL||LA328_0==COMPILER_ANNOTATION||(LA328_0 >= DECREMENT_OP && LA328_0 <= DIFFERENCE_OP)||LA328_0==DYNAMIC||LA328_0==FLOAT_LITERAL||LA328_0==FUNCTION_MODIFIER||LA328_0==INCREMENT_OP||(LA328_0 >= LBRACE && LA328_0 <= LBRACKET)||LA328_0==LIDENTIFIER||LA328_0==LPAREN||LA328_0==NATURAL_LITERAL||(LA328_0 >= NOT_OP && LA328_0 <= OBJECT_DEFINITION)||(LA328_0 >= OUTER && LA328_0 <= PACKAGE)||LA328_0==SMALLER_OP||LA328_0==STRING_LITERAL||LA328_0==STRING_START||(LA328_0 >= SUM_OP && LA328_0 <= SUPER)||LA328_0==THIS||LA328_0==UIDENTIFIER||(LA328_0 >= VALUE_MODIFIER && LA328_0 <= VOID_MODIFIER)) ) {
                alt328=1;
            }
            switch (alt328) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3966:8: r1= resource (c= COMMA r2= resource )*
                    {
                    pushFollow(FOLLOW_resource_in_resources26116);
                    r1=resource();

                    state._fsp--;
                    if (state.failed) return resources;

                    if ( state.backtracking==0 ) { resources.addResource(r1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3968:8: (c= COMMA r2= resource )*
                    loop327:
                    do {
                        int alt327=2;
                        int LA327_0 = input.LA(1);

                        if ( (LA327_0==COMMA) ) {
                            alt327=1;
                        }


                        switch (alt327) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3969:10: c= COMMA r2= resource
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_resources26147); if (state.failed) return resources;

                    	    if ( state.backtracking==0 ) { resources.setEndToken(c); }

                    	    pushFollow(FOLLOW_resource_in_resources26172);
                    	    r2=resource();

                    	    state._fsp--;
                    	    if (state.failed) return resources;

                    	    if ( state.backtracking==0 ) { resources.addResource(r2);
                    	    	          resources.setEndToken(null); }

                    	    }
                    	    break;

                    	default :
                    	    break loop327;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN604=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_resources26208); if (state.failed) return resources;

            if ( state.backtracking==0 ) { resources.setEndToken(RPAREN604); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return resources;
    }
    // $ANTLR end "resources"



    // $ANTLR start "resource"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3980:1: resource returns [Resource resource] : ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression );
    public Resource resource() throws RecognitionException {
        Resource resource = null;


        Variable specifiedVariable605 =null;

        Expression expression606 =null;


         resource = new Resource(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3982:5: ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression )
            int alt329=2;
            int LA329_0 = input.LA(1);

            if ( (LA329_0==COMPILER_ANNOTATION) && (synpred48_Ceylon())) {
                alt329=1;
            }
            else if ( (LA329_0==UIDENTIFIER) ) {
                int LA329_2 = input.LA(2);

                if ( (synpred48_Ceylon()) ) {
                    alt329=1;
                }
                else if ( (true) ) {
                    alt329=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 329, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA329_0==SMALLER_OP) && (synpred48_Ceylon())) {
                alt329=1;
            }
            else if ( (LA329_0==PACKAGE) ) {
                int LA329_4 = input.LA(2);

                if ( (synpred48_Ceylon()) ) {
                    alt329=1;
                }
                else if ( (true) ) {
                    alt329=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 329, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA329_0==LBRACKET) ) {
                int LA329_5 = input.LA(2);

                if ( (synpred48_Ceylon()) ) {
                    alt329=1;
                }
                else if ( (true) ) {
                    alt329=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 329, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA329_0==LBRACE) ) {
                int LA329_6 = input.LA(2);

                if ( (synpred48_Ceylon()) ) {
                    alt329=1;
                }
                else if ( (true) ) {
                    alt329=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 329, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA329_0==VOID_MODIFIER) && (synpred48_Ceylon())) {
                alt329=1;
            }
            else if ( (LA329_0==FUNCTION_MODIFIER) && (synpred48_Ceylon())) {
                alt329=1;
            }
            else if ( (LA329_0==VALUE_MODIFIER) && (synpred48_Ceylon())) {
                alt329=1;
            }
            else if ( (LA329_0==LIDENTIFIER) ) {
                int LA329_10 = input.LA(2);

                if ( (synpred48_Ceylon()) ) {
                    alt329=1;
                }
                else if ( (true) ) {
                    alt329=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 329, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA329_0==BACKTICK||LA329_0==CHAR_LITERAL||(LA329_0 >= DECREMENT_OP && LA329_0 <= DIFFERENCE_OP)||LA329_0==DYNAMIC||LA329_0==FLOAT_LITERAL||LA329_0==INCREMENT_OP||LA329_0==LPAREN||LA329_0==NATURAL_LITERAL||(LA329_0 >= NOT_OP && LA329_0 <= OBJECT_DEFINITION)||LA329_0==OUTER||LA329_0==STRING_LITERAL||LA329_0==STRING_START||(LA329_0 >= SUM_OP && LA329_0 <= SUPER)||LA329_0==THIS||LA329_0==VERBATIM_STRING) ) {
                alt329=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return resource;}
                NoViableAltException nvae =
                    new NoViableAltException("", 329, 0, input);

                throw nvae;

            }
            switch (alt329) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3983:7: ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable
                    {
                    pushFollow(FOLLOW_specifiedVariable_in_resource26269);
                    specifiedVariable605=specifiedVariable();

                    state._fsp--;
                    if (state.failed) return resource;

                    if ( state.backtracking==0 ) { resource.setVariable(specifiedVariable605); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3987:7: expression
                    {
                    pushFollow(FOLLOW_expression_in_resource26292);
                    expression606=expression();

                    state._fsp--;
                    if (state.failed) return resource;

                    if ( state.backtracking==0 ) { resource.setExpression(expression606); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return resource;
    }
    // $ANTLR end "resource"



    // $ANTLR start "specifiedVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3991:1: specifiedVariable returns [Variable variable] : v= variable ( specifier )? ;
    public Variable specifiedVariable() throws RecognitionException {
        Variable variable = null;


        Variable v =null;

        SpecifierExpression specifier607 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3992:5: (v= variable ( specifier )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3992:7: v= variable ( specifier )?
            {
            pushFollow(FOLLOW_variable_in_specifiedVariable26323);
            v=variable();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable = v; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3994:7: ( specifier )?
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==SPECIFY) ) {
                alt330=1;
            }
            switch (alt330) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3995:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_specifiedVariable26350);
                    specifier607=specifier();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setSpecifierExpression(specifier607); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "specifiedVariable"



    // $ANTLR start "variable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4000:1: variable returns [Variable variable] : compilerAnnotations var ;
    public Variable variable() throws RecognitionException {
        Variable variable = null;


        Variable var608 =null;

        List<CompilerAnnotation> compilerAnnotations609 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4001:5: ( compilerAnnotations var )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4001:7: compilerAnnotations var
            {
            pushFollow(FOLLOW_compilerAnnotations_in_variable26390);
            compilerAnnotations609=compilerAnnotations();

            state._fsp--;
            if (state.failed) return variable;

            pushFollow(FOLLOW_var_in_variable26398);
            var608=var();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable =var608;
                    variable.getCompilerAnnotations().addAll(compilerAnnotations609); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "variable"



    // $ANTLR start "var"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4007:1: var returns [Variable variable] : ( ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )* |mn2= memberName (p2= parameters )* );
    public Variable var() throws RecognitionException {
        Variable variable = null;


        Token VOID_MODIFIER611=null;
        Token FUNCTION_MODIFIER612=null;
        Token VALUE_MODIFIER613=null;
        Identifier mn1 =null;

        ParameterList p1 =null;

        Identifier mn2 =null;

        ParameterList p2 =null;

        StaticType type610 =null;


         variable = new Variable(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4009:5: ( ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )* |mn2= memberName (p2= parameters )* )
            int alt334=2;
            int LA334_0 = input.LA(1);

            if ( (LA334_0==FUNCTION_MODIFIER||(LA334_0 >= LBRACE && LA334_0 <= LBRACKET)||LA334_0==PACKAGE||LA334_0==SMALLER_OP||LA334_0==UIDENTIFIER||LA334_0==VALUE_MODIFIER||LA334_0==VOID_MODIFIER) ) {
                alt334=1;
            }
            else if ( (LA334_0==LIDENTIFIER) ) {
                alt334=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return variable;}
                NoViableAltException nvae =
                    new NoViableAltException("", 334, 0, input);

                throw nvae;

            }
            switch (alt334) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4010:7: ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )*
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4010:7: ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER )
                    int alt331=4;
                    switch ( input.LA(1) ) {
                    case LBRACE:
                    case LBRACKET:
                    case PACKAGE:
                    case SMALLER_OP:
                    case UIDENTIFIER:
                        {
                        alt331=1;
                        }
                        break;
                    case VOID_MODIFIER:
                        {
                        alt331=2;
                        }
                        break;
                    case FUNCTION_MODIFIER:
                        {
                        alt331=3;
                        }
                        break;
                    case VALUE_MODIFIER:
                        {
                        alt331=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return variable;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 331, 0, input);

                        throw nvae;

                    }

                    switch (alt331) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4011:9: type
                            {
                            pushFollow(FOLLOW_type_in_var26458);
                            type610=type();

                            state._fsp--;
                            if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(type610); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4014:9: VOID_MODIFIER
                            {
                            VOID_MODIFIER611=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_var26488); if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(new VoidModifier(VOID_MODIFIER611)); }

                            }
                            break;
                        case 3 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4017:9: FUNCTION_MODIFIER
                            {
                            FUNCTION_MODIFIER612=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_var26517); if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(new FunctionModifier(FUNCTION_MODIFIER612)); }

                            }
                            break;
                        case 4 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4020:9: VALUE_MODIFIER
                            {
                            VALUE_MODIFIER613=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_var26546); if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(new ValueModifier(VALUE_MODIFIER613)); }

                            }
                            break;

                    }


                    pushFollow(FOLLOW_memberName_in_var26574);
                    mn1=memberName();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setIdentifier(mn1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4025:7: (p1= parameters )*
                    loop332:
                    do {
                        int alt332=2;
                        int LA332_0 = input.LA(1);

                        if ( (LA332_0==LPAREN) ) {
                            alt332=1;
                        }


                        switch (alt332) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4026:9: p1= parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_var26604);
                    	    p1=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return variable;

                    	    if ( state.backtracking==0 ) { variable.addParameterList(p1); }

                    	    }
                    	    break;

                    	default :
                    	    break loop332;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4030:7: mn2= memberName (p2= parameters )*
                    {
                    if ( state.backtracking==0 ) { variable.setType( new ValueModifier(null) ); }

                    pushFollow(FOLLOW_memberName_in_var26648);
                    mn2=memberName();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setIdentifier(mn2); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4033:7: (p2= parameters )*
                    loop333:
                    do {
                        int alt333=2;
                        int LA333_0 = input.LA(1);

                        if ( (LA333_0==LPAREN) ) {
                            alt333=1;
                        }


                        switch (alt333) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4034:9: p2= parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_var26676);
                    	    p2=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return variable;

                    	    if ( state.backtracking==0 ) { variable.setType( new FunctionModifier(null) );
                    	              variable.addParameterList(p2); }

                    	    }
                    	    break;

                    	default :
                    	    break loop333;
                        }
                    } while (true);


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "var"



    // $ANTLR start "impliedVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4040:1: impliedVariable returns [Variable variable] : memberName ;
    public Variable impliedVariable() throws RecognitionException {
        Variable variable = null;


        Identifier memberName614 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4041:5: ( memberName )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4041:7: memberName
            {
            pushFollow(FOLLOW_memberName_in_impliedVariable26716);
            memberName614=memberName();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { Variable v = new Variable(null);
                    v.setType(new SyntheticVariable(null));
                    v.setIdentifier(memberName614);
                    SpecifierExpression se = new SpecifierExpression(null);
                    Expression e = new Expression(null);
                    BaseMemberExpression bme = new BaseMemberExpression(null);
                    bme.setIdentifier(memberName614);
                    bme.setTypeArguments( new InferredTypeArguments(null) );
                    e.setTerm(bme);
                    se.setExpression(e);
                    v.setSpecifierExpression(se); 
                    variable = v; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "impliedVariable"



    // $ANTLR start "referencePathElement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4056:1: referencePathElement returns [Identifier identifier] : ( typeName | memberName );
    public Identifier referencePathElement() throws RecognitionException {
        Identifier identifier = null;


        Identifier typeName615 =null;

        Identifier memberName616 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4057:5: ( typeName | memberName )
            int alt335=2;
            int LA335_0 = input.LA(1);

            if ( (LA335_0==UIDENTIFIER) ) {
                alt335=1;
            }
            else if ( (LA335_0==LIDENTIFIER) ) {
                alt335=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 335, 0, input);

                throw nvae;

            }
            switch (alt335) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4057:7: typeName
                    {
                    pushFollow(FOLLOW_typeName_in_referencePathElement26746);
                    typeName615=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =typeName615; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4059:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_referencePathElement26763);
                    memberName616=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =memberName616; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "referencePathElement"



    // $ANTLR start "referencePath"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4063:1: referencePath returns [SimpleType type] : (e1= referencePathElement | PACKAGE o1= MEMBER_OP e2= referencePathElement ) (o2= MEMBER_OP e3= referencePathElement )* ;
    public SimpleType referencePath() throws RecognitionException {
        SimpleType type = null;


        Token o1=null;
        Token o2=null;
        Token PACKAGE617=null;
        Identifier e1 =null;

        Identifier e2 =null;

        Identifier e3 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4064:5: ( (e1= referencePathElement | PACKAGE o1= MEMBER_OP e2= referencePathElement ) (o2= MEMBER_OP e3= referencePathElement )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4064:7: (e1= referencePathElement | PACKAGE o1= MEMBER_OP e2= referencePathElement ) (o2= MEMBER_OP e3= referencePathElement )*
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4064:7: (e1= referencePathElement | PACKAGE o1= MEMBER_OP e2= referencePathElement )
            int alt336=2;
            int LA336_0 = input.LA(1);

            if ( (LA336_0==LIDENTIFIER||LA336_0==UIDENTIFIER) ) {
                alt336=1;
            }
            else if ( (LA336_0==PACKAGE) ) {
                alt336=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 336, 0, input);

                throw nvae;

            }
            switch (alt336) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4065:9: e1= referencePathElement
                    {
                    pushFollow(FOLLOW_referencePathElement_in_referencePath26808);
                    e1=referencePathElement();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { BaseType bt = new BaseType(null);
                              bt.setIdentifier(e1);
                              type = bt; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4070:9: PACKAGE o1= MEMBER_OP e2= referencePathElement
                    {
                    PACKAGE617=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_referencePath26838); if (state.failed) return type;

                    if ( state.backtracking==0 ) { BaseType pbt = new BaseType(PACKAGE617);
                    	        pbt.setPackageQualified(true);
                    	        type = pbt; }

                    o1=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_referencePath26858); if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.setEndToken(o1); }

                    pushFollow(FOLLOW_referencePathElement_in_referencePath26878);
                    e2=referencePathElement();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.setEndToken(null);
                    	        type.setIdentifier(e2); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4080:7: (o2= MEMBER_OP e3= referencePathElement )*
            loop337:
            do {
                int alt337=2;
                int LA337_0 = input.LA(1);

                if ( (LA337_0==MEMBER_OP) ) {
                    alt337=1;
                }


                switch (alt337) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4081:9: o2= MEMBER_OP e3= referencePathElement
            	    {
            	    o2=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_referencePath26915); if (state.failed) return type;

            	    pushFollow(FOLLOW_referencePathElement_in_referencePath26927);
            	    e3=referencePathElement();

            	    state._fsp--;
            	    if (state.failed) return type;

            	    if ( state.backtracking==0 ) { QualifiedType qt = new QualifiedType(o2);
            	              qt.setIdentifier(e3);
            	              qt.setOuterType(type);
            	              type = qt; }

            	    }
            	    break;

            	default :
            	    break loop337;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "referencePath"



    // $ANTLR start "moduleLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4090:1: moduleLiteral returns [ModuleLiteral literal] : MODULE (p1= packagePath )? ;
    public ModuleLiteral moduleLiteral() throws RecognitionException {
        ModuleLiteral literal = null;


        Token MODULE618=null;
        ImportPath p1 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4091:2: ( MODULE (p1= packagePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4091:4: MODULE (p1= packagePath )?
            {
            MODULE618=(Token)match(input,MODULE,FOLLOW_MODULE_in_moduleLiteral26965); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new ModuleLiteral(null);
                 literal.setEndToken(MODULE618); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4094:4: (p1= packagePath )?
            int alt338=2;
            int LA338_0 = input.LA(1);

            if ( (LA338_0==LIDENTIFIER||LA338_0==UIDENTIFIER) ) {
                alt338=1;
            }
            switch (alt338) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4095:6: p1= packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_moduleLiteral26984);
                    p1=packagePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setImportPath(p1); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "moduleLiteral"



    // $ANTLR start "packageLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4101:1: packageLiteral returns [PackageLiteral literal] : PACKAGE (p2= packagePath )? ;
    public PackageLiteral packageLiteral() throws RecognitionException {
        PackageLiteral literal = null;


        Token PACKAGE619=null;
        ImportPath p2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4102:2: ( PACKAGE (p2= packagePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4102:4: PACKAGE (p2= packagePath )?
            {
            PACKAGE619=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_packageLiteral27012); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new PackageLiteral(null);
                 literal.setEndToken(PACKAGE619); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4105:4: (p2= packagePath )?
            int alt339=2;
            int LA339_0 = input.LA(1);

            if ( (LA339_0==LIDENTIFIER||LA339_0==UIDENTIFIER) ) {
                alt339=1;
            }
            switch (alt339) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4106:6: p2= packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_packageLiteral27031);
                    p2=packagePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setImportPath(p2); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "packageLiteral"



    // $ANTLR start "classLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4112:1: classLiteral returns [ClassLiteral literal] : CLASS_DEFINITION (ct= referencePath )? ;
    public ClassLiteral classLiteral() throws RecognitionException {
        ClassLiteral literal = null;


        Token CLASS_DEFINITION620=null;
        SimpleType ct =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4113:2: ( CLASS_DEFINITION (ct= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4113:4: CLASS_DEFINITION (ct= referencePath )?
            {
            CLASS_DEFINITION620=(Token)match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_classLiteral27059); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new ClassLiteral(null);
                 literal.setEndToken(CLASS_DEFINITION620); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4116:4: (ct= referencePath )?
            int alt340=2;
            int LA340_0 = input.LA(1);

            if ( (LA340_0==LIDENTIFIER||LA340_0==PACKAGE||LA340_0==UIDENTIFIER) ) {
                alt340=1;
            }
            switch (alt340) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4117:6: ct= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_classLiteral27078);
                    ct=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(ct); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "classLiteral"



    // $ANTLR start "interfaceLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4123:1: interfaceLiteral returns [InterfaceLiteral literal] : INTERFACE_DEFINITION (it= referencePath )? ;
    public InterfaceLiteral interfaceLiteral() throws RecognitionException {
        InterfaceLiteral literal = null;


        Token INTERFACE_DEFINITION621=null;
        SimpleType it =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4124:2: ( INTERFACE_DEFINITION (it= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4124:4: INTERFACE_DEFINITION (it= referencePath )?
            {
            INTERFACE_DEFINITION621=(Token)match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_interfaceLiteral27106); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new InterfaceLiteral(null);
                 literal.setEndToken(INTERFACE_DEFINITION621); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4127:4: (it= referencePath )?
            int alt341=2;
            int LA341_0 = input.LA(1);

            if ( (LA341_0==LIDENTIFIER||LA341_0==PACKAGE||LA341_0==UIDENTIFIER) ) {
                alt341=1;
            }
            switch (alt341) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4128:6: it= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_interfaceLiteral27125);
                    it=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(it); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "interfaceLiteral"



    // $ANTLR start "newLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4134:1: newLiteral returns [NewLiteral literal] : NEW (nt= referencePath )? ;
    public NewLiteral newLiteral() throws RecognitionException {
        NewLiteral literal = null;


        Token NEW622=null;
        SimpleType nt =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4135:2: ( NEW (nt= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4135:4: NEW (nt= referencePath )?
            {
            NEW622=(Token)match(input,NEW,FOLLOW_NEW_in_newLiteral27153); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new NewLiteral(null);
                 literal.setEndToken(NEW622); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4138:4: (nt= referencePath )?
            int alt342=2;
            int LA342_0 = input.LA(1);

            if ( (LA342_0==LIDENTIFIER||LA342_0==PACKAGE||LA342_0==UIDENTIFIER) ) {
                alt342=1;
            }
            switch (alt342) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4139:6: nt= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_newLiteral27172);
                    nt=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(nt); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "newLiteral"



    // $ANTLR start "aliasLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4145:1: aliasLiteral returns [AliasLiteral literal] : ALIAS (at= referencePath )? ;
    public AliasLiteral aliasLiteral() throws RecognitionException {
        AliasLiteral literal = null;


        Token ALIAS623=null;
        SimpleType at =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4146:2: ( ALIAS (at= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4146:4: ALIAS (at= referencePath )?
            {
            ALIAS623=(Token)match(input,ALIAS,FOLLOW_ALIAS_in_aliasLiteral27200); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new AliasLiteral(null);
                 literal.setEndToken(ALIAS623); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4149:4: (at= referencePath )?
            int alt343=2;
            int LA343_0 = input.LA(1);

            if ( (LA343_0==LIDENTIFIER||LA343_0==PACKAGE||LA343_0==UIDENTIFIER) ) {
                alt343=1;
            }
            switch (alt343) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4150:6: at= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_aliasLiteral27219);
                    at=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(at); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "aliasLiteral"



    // $ANTLR start "typeParameterLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4156:1: typeParameterLiteral returns [TypeParameterLiteral literal] : TYPE_CONSTRAINT (tt= referencePath )? ;
    public TypeParameterLiteral typeParameterLiteral() throws RecognitionException {
        TypeParameterLiteral literal = null;


        Token TYPE_CONSTRAINT624=null;
        SimpleType tt =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4157:2: ( TYPE_CONSTRAINT (tt= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4157:4: TYPE_CONSTRAINT (tt= referencePath )?
            {
            TYPE_CONSTRAINT624=(Token)match(input,TYPE_CONSTRAINT,FOLLOW_TYPE_CONSTRAINT_in_typeParameterLiteral27247); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new TypeParameterLiteral(null);
                 literal.setEndToken(TYPE_CONSTRAINT624); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4160:4: (tt= referencePath )?
            int alt344=2;
            int LA344_0 = input.LA(1);

            if ( (LA344_0==LIDENTIFIER||LA344_0==PACKAGE||LA344_0==UIDENTIFIER) ) {
                alt344=1;
            }
            switch (alt344) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4161:6: tt= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_typeParameterLiteral27266);
                    tt=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(tt); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "typeParameterLiteral"



    // $ANTLR start "valueLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4167:1: valueLiteral returns [ValueLiteral literal] : ( VALUE_MODIFIER | OBJECT_DEFINITION ) vt= referencePath ;
    public ValueLiteral valueLiteral() throws RecognitionException {
        ValueLiteral literal = null;


        Token VALUE_MODIFIER625=null;
        Token OBJECT_DEFINITION626=null;
        SimpleType vt =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4168:3: ( ( VALUE_MODIFIER | OBJECT_DEFINITION ) vt= referencePath )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4168:5: ( VALUE_MODIFIER | OBJECT_DEFINITION ) vt= referencePath
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4168:5: ( VALUE_MODIFIER | OBJECT_DEFINITION )
            int alt345=2;
            int LA345_0 = input.LA(1);

            if ( (LA345_0==VALUE_MODIFIER) ) {
                alt345=1;
            }
            else if ( (LA345_0==OBJECT_DEFINITION) ) {
                alt345=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return literal;}
                NoViableAltException nvae =
                    new NoViableAltException("", 345, 0, input);

                throw nvae;

            }
            switch (alt345) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4169:7: VALUE_MODIFIER
                    {
                    VALUE_MODIFIER625=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_valueLiteral27303); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new ValueLiteral(null);
                            literal.setEndToken(VALUE_MODIFIER625); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4173:7: OBJECT_DEFINITION
                    {
                    OBJECT_DEFINITION626=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_valueLiteral27325); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new ValueLiteral(null);
                            literal.setEndToken(OBJECT_DEFINITION626);
                            literal.setBroken(true); }

                    }
                    break;

            }


            pushFollow(FOLLOW_referencePath_in_valueLiteral27347);
            vt=referencePath();

            state._fsp--;
            if (state.failed) return literal;

            if ( state.backtracking==0 ) {
                  if (vt instanceof QualifiedType) {
                    literal.setType(((QualifiedType)vt).getOuterType());
                    literal.setIdentifier(vt.getIdentifier());
                    literal.setTypeArgumentList(vt.getTypeArgumentList());
                    literal.setEndToken(null);
                  }
                  else if (vt instanceof BaseType) {
                    literal.setIdentifier(vt.getIdentifier());
                    literal.setTypeArgumentList(vt.getTypeArgumentList());
                    literal.setEndToken(null);
                  }
                }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "valueLiteral"



    // $ANTLR start "functionLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4194:1: functionLiteral returns [FunctionLiteral literal] : FUNCTION_MODIFIER ft= referencePath ;
    public FunctionLiteral functionLiteral() throws RecognitionException {
        FunctionLiteral literal = null;


        Token FUNCTION_MODIFIER627=null;
        SimpleType ft =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4195:3: ( FUNCTION_MODIFIER ft= referencePath )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4195:5: FUNCTION_MODIFIER ft= referencePath
            {
            FUNCTION_MODIFIER627=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_functionLiteral27370); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new FunctionLiteral(null);
                  literal.setEndToken(FUNCTION_MODIFIER627); }

            pushFollow(FOLLOW_referencePath_in_functionLiteral27384);
            ft=referencePath();

            state._fsp--;
            if (state.failed) return literal;

            if ( state.backtracking==0 ) {
                  if (ft instanceof QualifiedType) {
                    literal.setType(((QualifiedType)ft).getOuterType());
                    literal.setIdentifier(ft.getIdentifier());
                    literal.setTypeArgumentList(ft.getTypeArgumentList());
                    literal.setEndToken(null);
                  }
                  else if (ft instanceof BaseType) {
                    literal.setIdentifier(ft.getIdentifier());
                    literal.setTypeArgumentList(ft.getTypeArgumentList());
                    literal.setEndToken(null);
                  }
                }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "functionLiteral"


    public static class memberPathElement_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "memberPathElement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4214:1: memberPathElement returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : memberName ( typeArguments )? ;
    public PsiCompatibleCeylonParser.memberPathElement_return memberPathElement() throws RecognitionException {
        PsiCompatibleCeylonParser.memberPathElement_return retval = new PsiCompatibleCeylonParser.memberPathElement_return();
        retval.start = input.LT(1);


        Identifier memberName628 =null;

        TypeArgumentList typeArguments629 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4216:5: ( memberName ( typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4216:7: memberName ( typeArguments )?
            {
            pushFollow(FOLLOW_memberName_in_memberPathElement27409);
            memberName628=memberName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier =memberName628; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4218:7: ( typeArguments )?
            int alt346=2;
            int LA346_0 = input.LA(1);

            if ( (LA346_0==SMALLER_OP) ) {
                alt346=1;
            }
            switch (alt346) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4219:9: typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_memberPathElement27435);
                    typeArguments629=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList =typeArguments629; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "memberPathElement"



    // $ANTLR start "memberModelExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4225:1: memberModelExpression returns [MemberLiteral literal] : (e1= memberPathElement | PACKAGE o2= MEMBER_OP e2= memberPathElement |at= primaryType o3= MEMBER_OP e3= memberPathElement );
    public MemberLiteral memberModelExpression() throws RecognitionException {
        MemberLiteral literal = null;


        Token o2=null;
        Token o3=null;
        Token PACKAGE630=null;
        PsiCompatibleCeylonParser.memberPathElement_return e1 =null;

        PsiCompatibleCeylonParser.memberPathElement_return e2 =null;

        StaticType at =null;

        PsiCompatibleCeylonParser.memberPathElement_return e3 =null;


         literal = new MemberLiteral(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4227:5: (e1= memberPathElement | PACKAGE o2= MEMBER_OP e2= memberPathElement |at= primaryType o3= MEMBER_OP e3= memberPathElement )
            int alt347=3;
            switch ( input.LA(1) ) {
            case LIDENTIFIER:
                {
                alt347=1;
                }
                break;
            case PACKAGE:
                {
                int LA347_2 = input.LA(2);

                if ( (LA347_2==MEMBER_OP) ) {
                    int LA347_4 = input.LA(3);

                    if ( (LA347_4==LIDENTIFIER) ) {
                        alt347=2;
                    }
                    else if ( (LA347_4==UIDENTIFIER) ) {
                        alt347=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return literal;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 347, 4, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return literal;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 347, 2, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
            case LBRACKET:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt347=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return literal;}
                NoViableAltException nvae =
                    new NoViableAltException("", 347, 0, input);

                throw nvae;

            }

            switch (alt347) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4228:7: e1= memberPathElement
                    {
                    pushFollow(FOLLOW_memberPathElement_in_memberModelExpression27498);
                    e1=memberPathElement();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setIdentifier((e1!=null?e1.identifier:null));
                            literal.setTypeArgumentList((e1!=null?e1.typeArgumentList:null)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4232:7: PACKAGE o2= MEMBER_OP e2= memberPathElement
                    {
                    PACKAGE630=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_memberModelExpression27521); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setToken(PACKAGE630);
                            literal.setPackageQualified(true);  }

                    o2=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_memberModelExpression27539); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setEndToken(o2); }

                    pushFollow(FOLLOW_memberPathElement_in_memberModelExpression27557);
                    e2=memberPathElement();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setEndToken(null);
                            literal.setIdentifier((e2!=null?e2.identifier:null)); 
                            literal.setTypeArgumentList((e2!=null?e2.typeArgumentList:null)); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4242:7: at= primaryType o3= MEMBER_OP e3= memberPathElement
                    {
                    pushFollow(FOLLOW_primaryType_in_memberModelExpression27582);
                    at=primaryType();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(at); }

                    o3=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_memberModelExpression27600); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setEndToken(o3); }

                    pushFollow(FOLLOW_memberPathElement_in_memberModelExpression27618);
                    e3=memberPathElement();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setEndToken(null);
                            literal.setIdentifier((e3!=null?e3.identifier:null));
                            literal.setTypeArgumentList((e3!=null?e3.typeArgumentList:null)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "memberModelExpression"



    // $ANTLR start "typeModelExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4252:1: typeModelExpression returns [TypeLiteral literal] : type ;
    public TypeLiteral typeModelExpression() throws RecognitionException {
        TypeLiteral literal = null;


        StaticType type631 =null;


         literal = new TypeLiteral(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4254:5: ( type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4254:7: type
            {
            pushFollow(FOLLOW_type_in_typeModelExpression27657);
            type631=type();

            state._fsp--;
            if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal.setType(type631); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "typeModelExpression"



    // $ANTLR start "modelExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4258:1: modelExpression returns [MetaLiteral meta] : ( ( ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER )=> memberModelExpression | typeModelExpression );
    public MetaLiteral modelExpression() throws RecognitionException {
        MetaLiteral meta = null;


        MemberLiteral memberModelExpression632 =null;

        TypeLiteral typeModelExpression633 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4259:3: ( ( ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER )=> memberModelExpression | typeModelExpression )
            int alt348=2;
            int LA348_0 = input.LA(1);

            if ( (LA348_0==LIDENTIFIER) && (synpred49_Ceylon())) {
                alt348=1;
            }
            else if ( (LA348_0==PACKAGE) ) {
                int LA348_2 = input.LA(2);

                if ( (synpred49_Ceylon()) ) {
                    alt348=1;
                }
                else if ( (true) ) {
                    alt348=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 348, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA348_0==UIDENTIFIER) ) {
                int LA348_3 = input.LA(2);

                if ( (synpred49_Ceylon()) ) {
                    alt348=1;
                }
                else if ( (true) ) {
                    alt348=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 348, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA348_0==SMALLER_OP) ) {
                int LA348_4 = input.LA(2);

                if ( (synpred49_Ceylon()) ) {
                    alt348=1;
                }
                else if ( (true) ) {
                    alt348=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 348, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA348_0==LBRACKET) ) {
                int LA348_5 = input.LA(2);

                if ( (synpred49_Ceylon()) ) {
                    alt348=1;
                }
                else if ( (true) ) {
                    alt348=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 348, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA348_0==LBRACE) ) {
                int LA348_6 = input.LA(2);

                if ( (synpred49_Ceylon()) ) {
                    alt348=1;
                }
                else if ( (true) ) {
                    alt348=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 348, 6, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return meta;}
                NoViableAltException nvae =
                    new NoViableAltException("", 348, 0, input);

                throw nvae;

            }
            switch (alt348) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4260:5: ( ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER )=> memberModelExpression
                    {
                    pushFollow(FOLLOW_memberModelExpression_in_modelExpression27709);
                    memberModelExpression632=memberModelExpression();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =memberModelExpression632; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4264:5: typeModelExpression
                    {
                    pushFollow(FOLLOW_typeModelExpression_in_modelExpression27726);
                    typeModelExpression633=typeModelExpression();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta = typeModelExpression633; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return meta;
    }
    // $ANTLR end "modelExpression"



    // $ANTLR start "metaLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4268:1: metaLiteral returns [MetaLiteral meta] : d1= BACKTICK ( moduleLiteral | ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral | classLiteral | newLiteral | interfaceLiteral | aliasLiteral | typeParameterLiteral | valueLiteral | functionLiteral | modelExpression ) d2= BACKTICK ;
    public MetaLiteral metaLiteral() throws RecognitionException {
        MetaLiteral meta = null;


        Token d1=null;
        Token d2=null;
        ModuleLiteral moduleLiteral634 =null;

        PackageLiteral packageLiteral635 =null;

        ClassLiteral classLiteral636 =null;

        NewLiteral newLiteral637 =null;

        InterfaceLiteral interfaceLiteral638 =null;

        AliasLiteral aliasLiteral639 =null;

        TypeParameterLiteral typeParameterLiteral640 =null;

        ValueLiteral valueLiteral641 =null;

        FunctionLiteral functionLiteral642 =null;

        MetaLiteral modelExpression643 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4269:5: (d1= BACKTICK ( moduleLiteral | ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral | classLiteral | newLiteral | interfaceLiteral | aliasLiteral | typeParameterLiteral | valueLiteral | functionLiteral | modelExpression ) d2= BACKTICK )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4269:7: d1= BACKTICK ( moduleLiteral | ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral | classLiteral | newLiteral | interfaceLiteral | aliasLiteral | typeParameterLiteral | valueLiteral | functionLiteral | modelExpression ) d2= BACKTICK
            {
            d1=(Token)match(input,BACKTICK,FOLLOW_BACKTICK_in_metaLiteral27753); if (state.failed) return meta;

            if ( state.backtracking==0 ) { meta = new TypeLiteral(d1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4271:6: ( moduleLiteral | ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral | classLiteral | newLiteral | interfaceLiteral | aliasLiteral | typeParameterLiteral | valueLiteral | functionLiteral | modelExpression )
            int alt349=10;
            switch ( input.LA(1) ) {
            case MODULE:
                {
                alt349=1;
                }
                break;
            case PACKAGE:
                {
                int LA349_2 = input.LA(2);

                if ( (LA349_2==LIDENTIFIER) && (synpred50_Ceylon())) {
                    alt349=2;
                }
                else if ( (LA349_2==UIDENTIFIER) && (synpred50_Ceylon())) {
                    alt349=2;
                }
                else if ( (LA349_2==BACKTICK) && (synpred50_Ceylon())) {
                    alt349=2;
                }
                else if ( (LA349_2==MEMBER_OP) ) {
                    alt349=10;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 349, 2, input);

                    throw nvae;

                }
                }
                break;
            case CLASS_DEFINITION:
                {
                alt349=3;
                }
                break;
            case NEW:
                {
                alt349=4;
                }
                break;
            case INTERFACE_DEFINITION:
                {
                alt349=5;
                }
                break;
            case ALIAS:
                {
                alt349=6;
                }
                break;
            case TYPE_CONSTRAINT:
                {
                alt349=7;
                }
                break;
            case OBJECT_DEFINITION:
            case VALUE_MODIFIER:
                {
                alt349=8;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt349=9;
                }
                break;
            case LBRACE:
            case LBRACKET:
            case LIDENTIFIER:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt349=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return meta;}
                NoViableAltException nvae =
                    new NoViableAltException("", 349, 0, input);

                throw nvae;

            }

            switch (alt349) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4271:8: moduleLiteral
                    {
                    pushFollow(FOLLOW_moduleLiteral_in_metaLiteral27770);
                    moduleLiteral634=moduleLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =moduleLiteral634; 
                    	        meta.setToken(d1); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4274:8: ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral
                    {
                    pushFollow(FOLLOW_packageLiteral_in_metaLiteral27807);
                    packageLiteral635=packageLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =packageLiteral635; 
                    	        meta.setToken(d1); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4278:8: classLiteral
                    {
                    pushFollow(FOLLOW_classLiteral_in_metaLiteral27825);
                    classLiteral636=classLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =classLiteral636; 
                              meta.setToken(d1); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4281:8: newLiteral
                    {
                    pushFollow(FOLLOW_newLiteral_in_metaLiteral27843);
                    newLiteral637=newLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =newLiteral637; 
                              meta.setToken(d1); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4284:8: interfaceLiteral
                    {
                    pushFollow(FOLLOW_interfaceLiteral_in_metaLiteral27861);
                    interfaceLiteral638=interfaceLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =interfaceLiteral638; 
                              meta.setToken(d1); }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4287:8: aliasLiteral
                    {
                    pushFollow(FOLLOW_aliasLiteral_in_metaLiteral27879);
                    aliasLiteral639=aliasLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =aliasLiteral639; 
                              meta.setToken(d1); }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4290:8: typeParameterLiteral
                    {
                    pushFollow(FOLLOW_typeParameterLiteral_in_metaLiteral27897);
                    typeParameterLiteral640=typeParameterLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =typeParameterLiteral640; 
                              meta.setToken(d1); }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4293:8: valueLiteral
                    {
                    pushFollow(FOLLOW_valueLiteral_in_metaLiteral27915);
                    valueLiteral641=valueLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =valueLiteral641; 
                              meta.setToken(d1); }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4296:8: functionLiteral
                    {
                    pushFollow(FOLLOW_functionLiteral_in_metaLiteral27933);
                    functionLiteral642=functionLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =functionLiteral642; 
                              meta.setToken(d1); }

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4299:8: modelExpression
                    {
                    pushFollow(FOLLOW_modelExpression_in_metaLiteral27951);
                    modelExpression643=modelExpression();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =modelExpression643; 
                    	        meta.setToken(d1); }

                    }
                    break;

            }


            d2=(Token)match(input,BACKTICK,FOLLOW_BACKTICK_in_metaLiteral27982); if (state.failed) return meta;

            if ( state.backtracking==0 ) { meta.setEndToken(d2); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return meta;
    }
    // $ANTLR end "metaLiteral"

    // $ANTLR start synpred1_Ceylon
    public void synpred1_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:94:9: ( annotatedModuleDescriptorStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:94:10: annotatedModuleDescriptorStart
        {
        pushFollow(FOLLOW_annotatedModuleDescriptorStart_in_synpred1_Ceylon164);
        annotatedModuleDescriptorStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred1_Ceylon

    // $ANTLR start synpred2_Ceylon
    public void synpred2_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:98:9: ( annotatedPackageDescriptorStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:98:10: annotatedPackageDescriptorStart
        {
        pushFollow(FOLLOW_annotatedPackageDescriptorStart_in_synpred2_Ceylon207);
        annotatedPackageDescriptorStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred2_Ceylon

    // $ANTLR start synpred3_Ceylon
    public void synpred3_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:480:9: ( compilerAnnotations declarationStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:480:10: compilerAnnotations declarationStart
        {
        pushFollow(FOLLOW_compilerAnnotations_in_synpred3_Ceylon2810);
        compilerAnnotations();

        state._fsp--;
        if (state.failed) return ;

        pushFollow(FOLLOW_declarationStart_in_synpred3_Ceylon2812);
        declarationStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred3_Ceylon

    // $ANTLR start synpred4_Ceylon
    public void synpred4_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:489:7: ( tuplePatternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:489:8: tuplePatternStart
        {
        pushFollow(FOLLOW_tuplePatternStart_in_synpred4_Ceylon2885);
        tuplePatternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred4_Ceylon

    // $ANTLR start synpred5_Ceylon
    public void synpred5_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:498:7: ( variable ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:498:8: variable ENTRY_OP
        {
        pushFollow(FOLLOW_variable_in_synpred5_Ceylon2950);
        variable();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred5_Ceylon2952); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred5_Ceylon

    // $ANTLR start synpred6_Ceylon
    public void synpred6_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:502:7: ( tuplePattern ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:502:8: tuplePattern ENTRY_OP
        {
        pushFollow(FOLLOW_tuplePattern_in_synpred6_Ceylon2988);
        tuplePattern();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred6_Ceylon2990); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred6_Ceylon

    // $ANTLR start synpred7_Ceylon
    public void synpred7_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:506:7: ( tuplePatternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:506:8: tuplePatternStart
        {
        pushFollow(FOLLOW_tuplePatternStart_in_synpred7_Ceylon3026);
        tuplePatternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred7_Ceylon

    // $ANTLR start synpred8_Ceylon
    public void synpred8_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:516:7: ( variable ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:516:8: variable ENTRY_OP
        {
        pushFollow(FOLLOW_variable_in_synpred8_Ceylon3098);
        variable();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred8_Ceylon3100); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred8_Ceylon

    // $ANTLR start synpred9_Ceylon
    public void synpred9_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:520:7: ( tuplePattern ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:520:8: tuplePattern ENTRY_OP
        {
        pushFollow(FOLLOW_tuplePattern_in_synpred9_Ceylon3136);
        tuplePattern();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred9_Ceylon3138); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred9_Ceylon

    // $ANTLR start synpred10_Ceylon
    public void synpred10_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:556:9: ( compilerAnnotations ( unionType )? PRODUCT_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:556:10: compilerAnnotations ( unionType )? PRODUCT_OP
        {
        pushFollow(FOLLOW_compilerAnnotations_in_synpred10_Ceylon3427);
        compilerAnnotations();

        state._fsp--;
        if (state.failed) return ;

        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:556:30: ( unionType )?
        int alt350=2;
        int LA350_0 = input.LA(1);

        if ( ((LA350_0 >= LBRACE && LA350_0 <= LBRACKET)||LA350_0==PACKAGE||LA350_0==SMALLER_OP||LA350_0==UIDENTIFIER) ) {
            alt350=1;
        }
        switch (alt350) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:556:30: unionType
                {
                pushFollow(FOLLOW_unionType_in_synpred10_Ceylon3429);
                unionType();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_synpred10_Ceylon3432); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred10_Ceylon

    // $ANTLR start synpred11_Ceylon
    public void synpred11_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1371:9: ( destructureStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1371:10: destructureStart
        {
        pushFollow(FOLLOW_destructureStart_in_synpred11_Ceylon9050);
        destructureStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred11_Ceylon

    // $ANTLR start synpred12_Ceylon
    public void synpred12_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1373:9: ( annotatedDeclarationStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1373:10: annotatedDeclarationStart
        {
        pushFollow(FOLLOW_annotatedDeclarationStart_in_synpred12_Ceylon9076);
        annotatedDeclarationStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred12_Ceylon

    // $ANTLR start synpred13_Ceylon
    public void synpred13_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1375:9: ( annotatedAssertionStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1375:10: annotatedAssertionStart
        {
        pushFollow(FOLLOW_annotatedAssertionStart_in_synpred13_Ceylon9104);
        annotatedAssertionStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred13_Ceylon

    // $ANTLR start synpred14_Ceylon
    public void synpred14_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1377:9: ( annotationListStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1377:10: annotationListStart
        {
        pushFollow(FOLLOW_annotationListStart_in_synpred14_Ceylon9130);
        annotationListStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred14_Ceylon

    // $ANTLR start synpred15_Ceylon
    public void synpred15_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1394:7: ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )
        int alt351=2;
        int LA351_0 = input.LA(1);

        if ( (LA351_0==INTERFACE_DEFINITION) ) {
            alt351=1;
        }
        else if ( (LA351_0==DYNAMIC) ) {
            alt351=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 351, 0, input);

            throw nvae;

        }
        switch (alt351) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1394:8: INTERFACE_DEFINITION
                {
                match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_synpred15_Ceylon9255); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1394:29: DYNAMIC UIDENTIFIER
                {
                match(input,DYNAMIC,FOLLOW_DYNAMIC_in_synpred15_Ceylon9257); if (state.failed) return ;

                match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_synpred15_Ceylon9259); if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred15_Ceylon

    // $ANTLR start synpred16_Ceylon
    public void synpred16_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1421:8: ( unambiguousType )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1421:9: unambiguousType
        {
        pushFollow(FOLLOW_unambiguousType_in_synpred16_Ceylon9434);
        unambiguousType();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred16_Ceylon

    // $ANTLR start synpred17_Ceylon
    public void synpred17_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1711:9: ( specifierParametersStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1711:10: specifierParametersStart
        {
        pushFollow(FOLLOW_specifierParametersStart_in_synpred17_Ceylon11251);
        specifierParametersStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred17_Ceylon

    // $ANTLR start synpred18_Ceylon
    public void synpred18_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1758:9: (~ ( LIDENTIFIER | UIDENTIFIER ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:
        {
        if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= LET)||(input.LA(1) >= LINE_COMMENT && input.LA(1) <= TYPE_CONSTRAINT)||(input.LA(1) >= UIdentifierPrefix && input.LA(1) <= WS) ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred18_Ceylon

    // $ANTLR start synpred19_Ceylon
    public void synpred19_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1803:9: ( namedArgumentStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1803:10: namedArgumentStart
        {
        pushFollow(FOLLOW_namedArgumentStart_in_synpred19_Ceylon11793);
        namedArgumentStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred19_Ceylon

    // $ANTLR start synpred20_Ceylon
    public void synpred20_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1807:9: ( anonymousArgument )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1807:10: anonymousArgument
        {
        pushFollow(FOLLOW_anonymousArgument_in_synpred20_Ceylon11828);
        anonymousArgument();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred20_Ceylon

    // $ANTLR start synpred21_Ceylon
    public void synpred21_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1851:9: ( typeArgumentsStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1851:10: typeArgumentsStart
        {
        pushFollow(FOLLOW_typeArgumentsStart_in_synpred21_Ceylon12156);
        typeArgumentsStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred21_Ceylon

    // $ANTLR start synpred22_Ceylon
    public void synpred22_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1862:9: ( typeArgumentsStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1862:10: typeArgumentsStart
        {
        pushFollow(FOLLOW_typeArgumentsStart_in_synpred22_Ceylon12237);
        typeArgumentsStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred22_Ceylon

    // $ANTLR start synpred23_Ceylon
    public void synpred23_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1898:9: ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1898:10: index ( ELLIPSIS | RANGE_OP | SEGMENT_OP )
        {
        pushFollow(FOLLOW_index_in_synpred23_Ceylon12465);
        index();

        state._fsp--;
        if (state.failed) return ;

        if ( input.LA(1)==ELLIPSIS||input.LA(1)==RANGE_OP||input.LA(1)==SEGMENT_OP ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred23_Ceylon

    // $ANTLR start synpred24_Ceylon
    public void synpred24_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1947:9: ( namedArgumentStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1947:10: namedArgumentStart
        {
        pushFollow(FOLLOW_namedArgumentStart_in_synpred24_Ceylon12793);
        namedArgumentStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred24_Ceylon

    // $ANTLR start synpred25_Ceylon
    public void synpred25_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1951:9: ( anonymousArgument )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1951:10: anonymousArgument
        {
        pushFollow(FOLLOW_anonymousArgument_in_synpred25_Ceylon12828);
        anonymousArgument();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred25_Ceylon

    // $ANTLR start synpred26_Ceylon
    public void synpred26_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1969:11: ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )
        int alt352=2;
        int LA352_0 = input.LA(1);

        if ( (LA352_0==FOR_CLAUSE) ) {
            alt352=1;
        }
        else if ( (LA352_0==IF_CLAUSE) ) {
            alt352=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 352, 0, input);

            throw nvae;

        }
        switch (alt352) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1969:12: FOR_CLAUSE
                {
                match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_synpred26_Ceylon12966); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1969:25: IF_CLAUSE conditions ~ THEN_CLAUSE
                {
                match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_synpred26_Ceylon12970); if (state.failed) return ;

                pushFollow(FOLLOW_conditions_in_synpred26_Ceylon12972);
                conditions();

                state._fsp--;
                if (state.failed) return ;

                if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= StringPart)||(input.LA(1) >= THIS && input.LA(1) <= WS) ) {
                    input.consume();
                    state.errorRecovery=false;
                    state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


                }
                break;

        }
    }
    // $ANTLR end synpred26_Ceylon

    // $ANTLR start synpred27_Ceylon
    public void synpred27_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1986:13: ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )
        int alt353=2;
        int LA353_0 = input.LA(1);

        if ( (LA353_0==FOR_CLAUSE) ) {
            alt353=1;
        }
        else if ( (LA353_0==IF_CLAUSE) ) {
            alt353=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 353, 0, input);

            throw nvae;

        }
        switch (alt353) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1986:14: FOR_CLAUSE
                {
                match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_synpred27_Ceylon13149); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1986:27: IF_CLAUSE conditions ~ THEN_CLAUSE
                {
                match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_synpred27_Ceylon13153); if (state.failed) return ;

                pushFollow(FOLLOW_conditions_in_synpred27_Ceylon13155);
                conditions();

                state._fsp--;
                if (state.failed) return ;

                if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= StringPart)||(input.LA(1) >= THIS && input.LA(1) <= WS) ) {
                    input.consume();
                    state.errorRecovery=false;
                    state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


                }
                break;

        }
    }
    // $ANTLR end synpred27_Ceylon

    // $ANTLR start synpred28_Ceylon
    public void synpred28_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2241:15: ( namedArgumentStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2241:16: namedArgumentStart
        {
        pushFollow(FOLLOW_namedArgumentStart_in_synpred28_Ceylon15264);
        namedArgumentStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred28_Ceylon

    // $ANTLR start synpred29_Ceylon
    public void synpred29_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2308:7: ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )
        int alt354=3;
        switch ( input.LA(1) ) {
        case FUNCTION_MODIFIER:
            {
            alt354=1;
            }
            break;
        case VOID_MODIFIER:
            {
            alt354=2;
            }
            break;
        case LPAREN:
            {
            alt354=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 354, 0, input);

            throw nvae;

        }

        switch (alt354) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2308:8: FUNCTION_MODIFIER
                {
                match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_synpred29_Ceylon15684); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2308:26: VOID_MODIFIER
                {
                match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_synpred29_Ceylon15686); if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2308:40: anonParametersStart
                {
                pushFollow(FOLLOW_anonParametersStart_in_synpred29_Ceylon15688);
                anonParametersStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred29_Ceylon

    // $ANTLR start synpred30_Ceylon
    public void synpred30_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2332:7: ( variable ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2332:8: variable ENTRY_OP
        {
        pushFollow(FOLLOW_variable_in_synpred30_Ceylon15820);
        variable();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred30_Ceylon15822); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred30_Ceylon

    // $ANTLR start synpred31_Ceylon
    public void synpred31_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2338:9: ( patternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2338:10: patternStart
        {
        pushFollow(FOLLOW_patternStart_in_synpred31_Ceylon15872);
        patternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred31_Ceylon

    // $ANTLR start synpred32_Ceylon
    public void synpred32_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2583:7: ( IF_CLAUSE conditions ~ THEN_CLAUSE )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2583:8: IF_CLAUSE conditions ~ THEN_CLAUSE
        {
        match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_synpred32_Ceylon16926); if (state.failed) return ;

        pushFollow(FOLLOW_conditions_in_synpred32_Ceylon16928);
        conditions();

        state._fsp--;
        if (state.failed) return ;

        if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= StringPart)||(input.LA(1) >= THIS && input.LA(1) <= WS) ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred32_Ceylon

    // $ANTLR start synpred33_Ceylon
    public void synpred33_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3115:7: ( unionType ( PRODUCT_OP | SUM_OP ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3115:8: unionType ( PRODUCT_OP | SUM_OP )
        {
        pushFollow(FOLLOW_unionType_in_synpred33_Ceylon20733);
        unionType();

        state._fsp--;
        if (state.failed) return ;

        if ( input.LA(1)==PRODUCT_OP||input.LA(1)==SUM_OP ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred33_Ceylon

    // $ANTLR start synpred34_Ceylon
    public void synpred34_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3137:7: ( type ( SPECIFY ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3137:8: type ( SPECIFY )
        {
        pushFollow(FOLLOW_type_in_synpred34_Ceylon20864);
        type();

        state._fsp--;
        if (state.failed) return ;

        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3137:13: ( SPECIFY )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3137:14: SPECIFY
        {
        match(input,SPECIFY,FOLLOW_SPECIFY_in_synpred34_Ceylon20867); if (state.failed) return ;

        }


        }

    }
    // $ANTLR end synpred34_Ceylon

    // $ANTLR start synpred35_Ceylon
    public void synpred35_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3418:7: ( namedAnnotationArgumentsStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3418:8: namedAnnotationArgumentsStart
        {
        pushFollow(FOLLOW_namedAnnotationArgumentsStart_in_synpred35_Ceylon22700);
        namedAnnotationArgumentsStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred35_Ceylon

    // $ANTLR start synpred36_Ceylon
    public void synpred36_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3504:10: ( patternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3504:11: patternStart
        {
        pushFollow(FOLLOW_patternStart_in_synpred36_Ceylon23335);
        patternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred36_Ceylon

    // $ANTLR start synpred37_Ceylon
    public void synpred37_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3504:9: ( ( patternStart )=> patternStart | compilerAnnotations ( declarationStart | specificationStart ) )
        int alt356=2;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            int LA356_1 = input.LA(2);

            if ( (synpred36_Ceylon()) ) {
                alt356=1;
            }
            else if ( (true) ) {
                alt356=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 356, 1, input);

                throw nvae;

            }
            }
            break;
        case UIDENTIFIER:
            {
            int LA356_2 = input.LA(2);

            if ( (synpred36_Ceylon()) ) {
                alt356=1;
            }
            else if ( (true) ) {
                alt356=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 356, 2, input);

                throw nvae;

            }
            }
            break;
        case SMALLER_OP:
            {
            int LA356_3 = input.LA(2);

            if ( (synpred36_Ceylon()) ) {
                alt356=1;
            }
            else if ( (true) ) {
                alt356=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 356, 3, input);

                throw nvae;

            }
            }
            break;
        case PACKAGE:
            {
            int LA356_4 = input.LA(2);

            if ( (synpred36_Ceylon()) ) {
                alt356=1;
            }
            else if ( (true) ) {
                alt356=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 356, 4, input);

                throw nvae;

            }
            }
            break;
        case LBRACKET:
            {
            int LA356_5 = input.LA(2);

            if ( (synpred36_Ceylon()) ) {
                alt356=1;
            }
            else if ( (true) ) {
                alt356=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 356, 5, input);

                throw nvae;

            }
            }
            break;
        case LBRACE:
            {
            int LA356_6 = input.LA(2);

            if ( (synpred36_Ceylon()) ) {
                alt356=1;
            }
            else if ( (true) ) {
                alt356=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 356, 6, input);

                throw nvae;

            }
            }
            break;
        case VOID_MODIFIER:
            {
            int LA356_7 = input.LA(2);

            if ( (synpred36_Ceylon()) ) {
                alt356=1;
            }
            else if ( (true) ) {
                alt356=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 356, 7, input);

                throw nvae;

            }
            }
            break;
        case FUNCTION_MODIFIER:
            {
            int LA356_8 = input.LA(2);

            if ( (synpred36_Ceylon()) ) {
                alt356=1;
            }
            else if ( (true) ) {
                alt356=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 356, 8, input);

                throw nvae;

            }
            }
            break;
        case VALUE_MODIFIER:
            {
            int LA356_9 = input.LA(2);

            if ( (synpred36_Ceylon()) ) {
                alt356=1;
            }
            else if ( (true) ) {
                alt356=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 356, 9, input);

                throw nvae;

            }
            }
            break;
        case LIDENTIFIER:
            {
            int LA356_10 = input.LA(2);

            if ( (synpred36_Ceylon()) ) {
                alt356=1;
            }
            else if ( (true) ) {
                alt356=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 356, 10, input);

                throw nvae;

            }
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case INTERFACE_DEFINITION:
        case NEW:
        case OBJECT_DEFINITION:
            {
            alt356=2;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 356, 0, input);

            throw nvae;

        }

        switch (alt356) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3504:10: ( patternStart )=> patternStart
                {
                pushFollow(FOLLOW_patternStart_in_synpred37_Ceylon23340);
                patternStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3504:43: compilerAnnotations ( declarationStart | specificationStart )
                {
                pushFollow(FOLLOW_compilerAnnotations_in_synpred37_Ceylon23344);
                compilerAnnotations();

                state._fsp--;
                if (state.failed) return ;

                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3504:63: ( declarationStart | specificationStart )
                int alt355=2;
                int LA355_0 = input.LA(1);

                if ( (LA355_0==ALIAS||LA355_0==ASSIGN||LA355_0==CLASS_DEFINITION||LA355_0==DYNAMIC||LA355_0==FUNCTION_MODIFIER||LA355_0==INTERFACE_DEFINITION||(LA355_0 >= LBRACE && LA355_0 <= LBRACKET)||LA355_0==NEW||LA355_0==OBJECT_DEFINITION||LA355_0==PACKAGE||LA355_0==SMALLER_OP||LA355_0==UIDENTIFIER||LA355_0==VALUE_MODIFIER||LA355_0==VOID_MODIFIER) ) {
                    alt355=1;
                }
                else if ( (LA355_0==LIDENTIFIER) ) {
                    alt355=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 355, 0, input);

                    throw nvae;

                }
                switch (alt355) {
                    case 1 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3504:64: declarationStart
                        {
                        pushFollow(FOLLOW_declarationStart_in_synpred37_Ceylon23347);
                        declarationStart();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3504:81: specificationStart
                        {
                        pushFollow(FOLLOW_specificationStart_in_synpred37_Ceylon23349);
                        specificationStart();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;

                }


                }
                break;

        }
    }
    // $ANTLR end synpred37_Ceylon

    // $ANTLR start synpred38_Ceylon
    public void synpred38_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3508:9: ( LIDENTIFIER )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3508:10: LIDENTIFIER
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred38_Ceylon23393); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred38_Ceylon

    // $ANTLR start synpred39_Ceylon
    public void synpred39_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3525:10: ( patternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3525:11: patternStart
        {
        pushFollow(FOLLOW_patternStart_in_synpred39_Ceylon23527);
        patternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred39_Ceylon

    // $ANTLR start synpred40_Ceylon
    public void synpred40_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3525:9: ( ( patternStart )=> patternStart | compilerAnnotations ( declarationStart | specificationStart ) )
        int alt358=2;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            int LA358_1 = input.LA(2);

            if ( (synpred39_Ceylon()) ) {
                alt358=1;
            }
            else if ( (true) ) {
                alt358=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 358, 1, input);

                throw nvae;

            }
            }
            break;
        case UIDENTIFIER:
            {
            int LA358_2 = input.LA(2);

            if ( (synpred39_Ceylon()) ) {
                alt358=1;
            }
            else if ( (true) ) {
                alt358=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 358, 2, input);

                throw nvae;

            }
            }
            break;
        case SMALLER_OP:
            {
            int LA358_3 = input.LA(2);

            if ( (synpred39_Ceylon()) ) {
                alt358=1;
            }
            else if ( (true) ) {
                alt358=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 358, 3, input);

                throw nvae;

            }
            }
            break;
        case PACKAGE:
            {
            int LA358_4 = input.LA(2);

            if ( (synpred39_Ceylon()) ) {
                alt358=1;
            }
            else if ( (true) ) {
                alt358=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 358, 4, input);

                throw nvae;

            }
            }
            break;
        case LBRACKET:
            {
            int LA358_5 = input.LA(2);

            if ( (synpred39_Ceylon()) ) {
                alt358=1;
            }
            else if ( (true) ) {
                alt358=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 358, 5, input);

                throw nvae;

            }
            }
            break;
        case LBRACE:
            {
            int LA358_6 = input.LA(2);

            if ( (synpred39_Ceylon()) ) {
                alt358=1;
            }
            else if ( (true) ) {
                alt358=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 358, 6, input);

                throw nvae;

            }
            }
            break;
        case VOID_MODIFIER:
            {
            int LA358_7 = input.LA(2);

            if ( (synpred39_Ceylon()) ) {
                alt358=1;
            }
            else if ( (true) ) {
                alt358=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 358, 7, input);

                throw nvae;

            }
            }
            break;
        case FUNCTION_MODIFIER:
            {
            int LA358_8 = input.LA(2);

            if ( (synpred39_Ceylon()) ) {
                alt358=1;
            }
            else if ( (true) ) {
                alt358=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 358, 8, input);

                throw nvae;

            }
            }
            break;
        case VALUE_MODIFIER:
            {
            int LA358_9 = input.LA(2);

            if ( (synpred39_Ceylon()) ) {
                alt358=1;
            }
            else if ( (true) ) {
                alt358=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 358, 9, input);

                throw nvae;

            }
            }
            break;
        case LIDENTIFIER:
            {
            int LA358_10 = input.LA(2);

            if ( (synpred39_Ceylon()) ) {
                alt358=1;
            }
            else if ( (true) ) {
                alt358=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 358, 10, input);

                throw nvae;

            }
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case INTERFACE_DEFINITION:
        case NEW:
        case OBJECT_DEFINITION:
            {
            alt358=2;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 358, 0, input);

            throw nvae;

        }

        switch (alt358) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3525:10: ( patternStart )=> patternStart
                {
                pushFollow(FOLLOW_patternStart_in_synpred40_Ceylon23532);
                patternStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3525:43: compilerAnnotations ( declarationStart | specificationStart )
                {
                pushFollow(FOLLOW_compilerAnnotations_in_synpred40_Ceylon23536);
                compilerAnnotations();

                state._fsp--;
                if (state.failed) return ;

                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3525:63: ( declarationStart | specificationStart )
                int alt357=2;
                int LA357_0 = input.LA(1);

                if ( (LA357_0==ALIAS||LA357_0==ASSIGN||LA357_0==CLASS_DEFINITION||LA357_0==DYNAMIC||LA357_0==FUNCTION_MODIFIER||LA357_0==INTERFACE_DEFINITION||(LA357_0 >= LBRACE && LA357_0 <= LBRACKET)||LA357_0==NEW||LA357_0==OBJECT_DEFINITION||LA357_0==PACKAGE||LA357_0==SMALLER_OP||LA357_0==UIDENTIFIER||LA357_0==VALUE_MODIFIER||LA357_0==VOID_MODIFIER) ) {
                    alt357=1;
                }
                else if ( (LA357_0==LIDENTIFIER) ) {
                    alt357=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 357, 0, input);

                    throw nvae;

                }
                switch (alt357) {
                    case 1 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3525:64: declarationStart
                        {
                        pushFollow(FOLLOW_declarationStart_in_synpred40_Ceylon23539);
                        declarationStart();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3525:81: specificationStart
                        {
                        pushFollow(FOLLOW_specificationStart_in_synpred40_Ceylon23541);
                        specificationStart();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;

                }


                }
                break;

        }
    }
    // $ANTLR end synpred40_Ceylon

    // $ANTLR start synpred41_Ceylon
    public void synpred41_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3529:9: ( LIDENTIFIER )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3529:10: LIDENTIFIER
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred41_Ceylon23585); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred41_Ceylon

    // $ANTLR start synpred42_Ceylon
    public void synpred42_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3548:9: ( LIDENTIFIER SPECIFY )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3548:10: LIDENTIFIER SPECIFY
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred42_Ceylon23730); if (state.failed) return ;

        match(input,SPECIFY,FOLLOW_SPECIFY_in_synpred42_Ceylon23732); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred42_Ceylon

    // $ANTLR start synpred43_Ceylon
    public void synpred43_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3591:9: ( LBRACE )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3591:10: LBRACE
        {
        match(input,LBRACE,FOLLOW_LBRACE_in_synpred43_Ceylon24048); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred43_Ceylon

    // $ANTLR start synpred44_Ceylon
    public void synpred44_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3757:9: ( COMPILER_ANNOTATION | declarationStart | specificationStart )
        int alt359=3;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            alt359=1;
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case FUNCTION_MODIFIER:
        case INTERFACE_DEFINITION:
        case LBRACE:
        case LBRACKET:
        case NEW:
        case OBJECT_DEFINITION:
        case PACKAGE:
        case SMALLER_OP:
        case UIDENTIFIER:
        case VALUE_MODIFIER:
        case VOID_MODIFIER:
            {
            alt359=2;
            }
            break;
        case LIDENTIFIER:
            {
            alt359=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 359, 0, input);

            throw nvae;

        }

        switch (alt359) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3757:10: COMPILER_ANNOTATION
                {
                match(input,COMPILER_ANNOTATION,FOLLOW_COMPILER_ANNOTATION_in_synpred44_Ceylon24595); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3757:30: declarationStart
                {
                pushFollow(FOLLOW_declarationStart_in_synpred44_Ceylon24597);
                declarationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3757:47: specificationStart
                {
                pushFollow(FOLLOW_specificationStart_in_synpred44_Ceylon24599);
                specificationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred44_Ceylon

    // $ANTLR start synpred45_Ceylon
    public void synpred45_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3805:7: ( IS_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3805:8: IS_OP
        {
        match(input,IS_OP,FOLLOW_IS_OP_in_synpred45_Ceylon24958); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred45_Ceylon

    // $ANTLR start synpred46_Ceylon
    public void synpred46_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3807:7: ( SATISFIES )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3807:8: SATISFIES
        {
        match(input,SATISFIES,FOLLOW_SATISFIES_in_synpred46_Ceylon24979); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred46_Ceylon

    // $ANTLR start synpred47_Ceylon
    public void synpred47_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3868:10: ( patternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3868:11: patternStart
        {
        pushFollow(FOLLOW_patternStart_in_synpred47_Ceylon25377);
        patternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred47_Ceylon

    // $ANTLR start synpred48_Ceylon
    public void synpred48_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3983:7: ( COMPILER_ANNOTATION | declarationStart | specificationStart )
        int alt360=3;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            alt360=1;
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case FUNCTION_MODIFIER:
        case INTERFACE_DEFINITION:
        case LBRACE:
        case LBRACKET:
        case NEW:
        case OBJECT_DEFINITION:
        case PACKAGE:
        case SMALLER_OP:
        case UIDENTIFIER:
        case VALUE_MODIFIER:
        case VOID_MODIFIER:
            {
            alt360=2;
            }
            break;
        case LIDENTIFIER:
            {
            alt360=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 360, 0, input);

            throw nvae;

        }

        switch (alt360) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3983:8: COMPILER_ANNOTATION
                {
                match(input,COMPILER_ANNOTATION,FOLLOW_COMPILER_ANNOTATION_in_synpred48_Ceylon26253); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3983:28: declarationStart
                {
                pushFollow(FOLLOW_declarationStart_in_synpred48_Ceylon26255);
                declarationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3983:45: specificationStart
                {
                pushFollow(FOLLOW_specificationStart_in_synpred48_Ceylon26257);
                specificationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred48_Ceylon

    // $ANTLR start synpred49_Ceylon
    public void synpred49_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4260:5: ( ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4260:6: ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER
        {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4260:6: ( ( PACKAGE | primaryType ) MEMBER_OP )?
        int alt362=2;
        int LA362_0 = input.LA(1);

        if ( ((LA362_0 >= LBRACE && LA362_0 <= LBRACKET)||LA362_0==PACKAGE||LA362_0==SMALLER_OP||LA362_0==UIDENTIFIER) ) {
            alt362=1;
        }
        switch (alt362) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4260:7: ( PACKAGE | primaryType ) MEMBER_OP
                {
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4260:7: ( PACKAGE | primaryType )
                int alt361=2;
                int LA361_0 = input.LA(1);

                if ( (LA361_0==PACKAGE) ) {
                    int LA361_1 = input.LA(2);

                    if ( (LA361_1==MEMBER_OP) ) {
                        int LA361_3 = input.LA(3);

                        if ( (LA361_3==LIDENTIFIER) ) {
                            alt361=1;
                        }
                        else if ( (LA361_3==UIDENTIFIER) ) {
                            alt361=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 361, 3, input);

                            throw nvae;

                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 361, 1, input);

                        throw nvae;

                    }
                }
                else if ( ((LA361_0 >= LBRACE && LA361_0 <= LBRACKET)||LA361_0==SMALLER_OP||LA361_0==UIDENTIFIER) ) {
                    alt361=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 361, 0, input);

                    throw nvae;

                }
                switch (alt361) {
                    case 1 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4260:8: PACKAGE
                        {
                        match(input,PACKAGE,FOLLOW_PACKAGE_in_synpred49_Ceylon27691); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4260:16: primaryType
                        {
                        pushFollow(FOLLOW_primaryType_in_synpred49_Ceylon27693);
                        primaryType();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;

                }


                match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_synpred49_Ceylon27696); if (state.failed) return ;

                }
                break;

        }


        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred49_Ceylon27700); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred49_Ceylon

    // $ANTLR start synpred50_Ceylon
    public void synpred50_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4274:8: ( PACKAGE ( LIDENTIFIER | BACKTICK ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4274:9: PACKAGE ( LIDENTIFIER | BACKTICK )
        {
        match(input,PACKAGE,FOLLOW_PACKAGE_in_synpred50_Ceylon27789); if (state.failed) return ;

        if ( input.LA(1)==BACKTICK||input.LA(1)==LIDENTIFIER ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred50_Ceylon

    // Delegated rules

    public boolean synpred46_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred37_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred13_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred25_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred9_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred7_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred49_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred16_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred12_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred20_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred8_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred42_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred28_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred30_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred48_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred32_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred44_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred27_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred22_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred3_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred26_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred43_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred35_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred45_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred24_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred34_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred41_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred15_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred10_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred1_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred38_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred2_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred36_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred6_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred23_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred11_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred14_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred40_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred18_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred31_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred29_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred4_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred21_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred47_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred50_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred39_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred17_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred33_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred5_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred19_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA159 dfa159 = new DFA159(this);
    protected DFA162 dfa162 = new DFA162(this);
    protected DFA171 dfa171 = new DFA171(this);
    protected DFA172 dfa172 = new DFA172(this);
    static final String DFA1_eotS =
        "\10\uffff";
    static final String DFA1_eofS =
        "\1\3\7\uffff";
    static final String DFA1_minS =
        "\1\7\1\105\2\uffff\1\7\1\160\2\7";
    static final String DFA1_maxS =
        "\1\u0083\1\105\2\uffff\1\u0083\1\u0082\2\u0083";
    static final String DFA1_acceptS =
        "\2\uffff\1\1\1\2\4\uffff";
    static final String DFA1_specialS =
        "\10\uffff}>";
    static final String[] DFA1_transitionS = {
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\5\uffff\1\3\1\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff"+
            "\1\3\4\uffff\1\3\3\uffff\1\3\5\uffff\1\3\5\uffff\1\3\11\uffff"+
            "\1\2\1\3\4\uffff\1\3\14\uffff\1\3\3\uffff\3\3",
            "\1\4",
            "",
            "",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\4\uffff"+
            "\1\3\3\uffff\1\3\5\uffff\1\3\16\uffff\1\5\1\2\1\3\4\uffff\1"+
            "\3\14\uffff\1\3\3\uffff\3\3",
            "\1\6\21\uffff\1\7",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\4\uffff"+
            "\1\3\3\uffff\1\3\5\uffff\1\3\17\uffff\1\2\1\3\4\uffff\1\3\14"+
            "\uffff\1\3\3\uffff\3\3",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\4\uffff"+
            "\1\3\3\uffff\1\3\5\uffff\1\3\17\uffff\1\2\1\3\4\uffff\1\3\14"+
            "\uffff\1\3\3\uffff\3\3"
    };

    static final short[] DFA1_eot = DFA.unpackEncodedString(DFA1_eotS);
    static final short[] DFA1_eof = DFA.unpackEncodedString(DFA1_eofS);
    static final char[] DFA1_min = DFA.unpackEncodedStringToUnsignedChars(DFA1_minS);
    static final char[] DFA1_max = DFA.unpackEncodedStringToUnsignedChars(DFA1_maxS);
    static final short[] DFA1_accept = DFA.unpackEncodedString(DFA1_acceptS);
    static final short[] DFA1_special = DFA.unpackEncodedString(DFA1_specialS);
    static final short[][] DFA1_transition;

    static {
        int numStates = DFA1_transitionS.length;
        DFA1_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA1_transition[i] = DFA.unpackEncodedString(DFA1_transitionS[i]);
        }
    }

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "84:7: (ca= compilerAnnotations SEMICOLON )?";
        }
    }
    static final String DFA159_eotS =
        "\100\uffff";
    static final String DFA159_eofS =
        "\100\uffff";
    static final String DFA159_minS =
        "\1\5\73\uffff\1\0\3\uffff";
    static final String DFA159_maxS =
        "\1\u0080\73\uffff\1\0\3\uffff";
    static final String DFA159_acceptS =
        "\1\uffff\1\6\66\uffff\1\1\2\uffff\1\2\1\uffff\1\5\1\3\1\4";
    static final String DFA159_specialS =
        "\74\uffff\1\0\3\uffff}>";
    static final String[] DFA159_transitionS = {
            "\1\1\2\uffff\2\1\11\uffff\2\1\3\uffff\2\1\1\uffff\3\1\2\uffff"+
            "\3\1\3\uffff\6\1\11\uffff\1\1\2\uffff\1\1\1\uffff\4\1\2\uffff"+
            "\2\1\1\75\1\73\4\uffff\1\74\1\uffff\1\70\1\uffff\1\1\4\uffff"+
            "\2\1\3\uffff\2\1\4\uffff\10\1\1\uffff\1\1\1\70\7\1\1\70\1\1"+
            "\1\uffff\1\1\1\uffff\2\1\3\uffff\1\1\6\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] DFA159_eot = DFA.unpackEncodedString(DFA159_eotS);
    static final short[] DFA159_eof = DFA.unpackEncodedString(DFA159_eofS);
    static final char[] DFA159_min = DFA.unpackEncodedStringToUnsignedChars(DFA159_minS);
    static final char[] DFA159_max = DFA.unpackEncodedStringToUnsignedChars(DFA159_maxS);
    static final short[] DFA159_accept = DFA.unpackEncodedString(DFA159_acceptS);
    static final short[] DFA159_special = DFA.unpackEncodedString(DFA159_specialS);
    static final short[][] DFA159_transition;

    static {
        int numStates = DFA159_transitionS.length;
        DFA159_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA159_transition[i] = DFA.unpackEncodedString(DFA159_transitionS[i]);
        }
    }

    class DFA159 extends DFA {

        public DFA159(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 159;
            this.eot = DFA159_eot;
            this.eof = DFA159_eof;
            this.min = DFA159_min;
            this.max = DFA159_max;
            this.accept = DFA159_accept;
            this.special = DFA159_special;
            this.transition = DFA159_transition;
        }
        public String getDescription() {
            return "()* loopback of 1691:5: ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA159_60 = input.LA(1);

                         
                        int index159_60 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred17_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 63;}

                         
                        input.seek(index159_60);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 159, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA162_eotS =
        "\100\uffff";
    static final String DFA162_eofS =
        "\100\uffff";
    static final String DFA162_minS =
        "\1\5\77\uffff";
    static final String DFA162_maxS =
        "\1\u0080\77\uffff";
    static final String DFA162_acceptS =
        "\1\uffff\1\1\1\2\75\3";
    static final String DFA162_specialS =
        "\1\0\77\uffff}>";
    static final String[] DFA162_transitionS = {
            "\1\60\2\uffff\1\46\1\70\11\uffff\1\55\1\42\3\uffff\1\7\1\31"+
            "\1\uffff\1\12\1\67\1\51\2\uffff\1\3\1\22\1\63\3\uffff\1\23\1"+
            "\54\1\26\1\43\1\27\1\40\11\uffff\1\45\2\uffff\1\4\1\uffff\1"+
            "\6\1\65\1\32\1\37\2\uffff\1\34\1\33\1\77\1\75\1\uffff\1\1\2"+
            "\uffff\1\76\1\uffff\1\72\1\uffff\1\62\4\uffff\1\30\1\44\3\uffff"+
            "\1\47\1\71\4\uffff\1\5\1\15\1\16\1\24\1\13\1\14\1\17\1\64\1"+
            "\uffff\1\11\1\73\1\41\1\20\1\25\1\50\1\36\1\35\1\57\1\74\1\53"+
            "\1\uffff\1\52\1\uffff\1\61\1\21\3\uffff\1\56\4\uffff\1\2\1\uffff"+
            "\1\10\1\66",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA162_eot = DFA.unpackEncodedString(DFA162_eotS);
    static final short[] DFA162_eof = DFA.unpackEncodedString(DFA162_eofS);
    static final char[] DFA162_min = DFA.unpackEncodedStringToUnsignedChars(DFA162_minS);
    static final char[] DFA162_max = DFA.unpackEncodedStringToUnsignedChars(DFA162_maxS);
    static final short[] DFA162_accept = DFA.unpackEncodedString(DFA162_acceptS);
    static final short[] DFA162_special = DFA.unpackEncodedString(DFA162_specialS);
    static final short[][] DFA162_transition;

    static {
        int numStates = DFA162_transitionS.length;
        DFA162_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA162_transition[i] = DFA.unpackEncodedString(DFA162_transitionS[i]);
        }
    }

    class DFA162 extends DFA {

        public DFA162(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 162;
            this.eot = DFA162_eot;
            this.eof = DFA162_eof;
            this.min = DFA162_min;
            this.max = DFA162_max;
            this.accept = DFA162_accept;
            this.special = DFA162_special;
            this.transition = DFA162_transition;
        }
        public String getDescription() {
            return "1750:7: ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA162_0 = input.LA(1);

                         
                        int index162_0 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (LA162_0==LIDENTIFIER) ) {s = 1;}

                        else if ( (LA162_0==UIDENTIFIER) ) {s = 2;}

                        else if ( (LA162_0==DECREMENT_OP) && (synpred18_Ceylon())) {s = 3;}

                        else if ( (LA162_0==INCREMENT_OP) && (synpred18_Ceylon())) {s = 4;}

                        else if ( (LA162_0==POWER_OP) && (synpred18_Ceylon())) {s = 5;}

                        else if ( (LA162_0==INTERSECTION_OP) && (synpred18_Ceylon())) {s = 6;}

                        else if ( (LA162_0==COMMA) && (synpred18_Ceylon())) {s = 7;}

                        else if ( (LA162_0==UNION_OP) && (synpred18_Ceylon())) {s = 8;}

                        else if ( (LA162_0==RPAREN) && (synpred18_Ceylon())) {s = 9;}

                        else if ( (LA162_0==COMPLEMENT_OP) && (synpred18_Ceylon())) {s = 10;}

                        else if ( (LA162_0==RBRACE) && (synpred18_Ceylon())) {s = 11;}

                        else if ( (LA162_0==RBRACKET) && (synpred18_Ceylon())) {s = 12;}

                        else if ( (LA162_0==PRODUCT_OP) && (synpred18_Ceylon())) {s = 13;}

                        else if ( (LA162_0==QUOTIENT_OP) && (synpred18_Ceylon())) {s = 14;}

                        else if ( (LA162_0==REMAINDER_OP) && (synpred18_Ceylon())) {s = 15;}

                        else if ( (LA162_0==SCALE_OP) && (synpred18_Ceylon())) {s = 16;}

                        else if ( (LA162_0==SUM_OP) && (synpred18_Ceylon())) {s = 17;}

                        else if ( (LA162_0==DIFFERENCE_OP) && (synpred18_Ceylon())) {s = 18;}

                        else if ( (LA162_0==ELLIPSIS) && (synpred18_Ceylon())) {s = 19;}

                        else if ( (LA162_0==RANGE_OP) && (synpred18_Ceylon())) {s = 20;}

                        else if ( (LA162_0==SEGMENT_OP) && (synpred18_Ceylon())) {s = 21;}

                        else if ( (LA162_0==ENTRY_OP) && (synpred18_Ceylon())) {s = 22;}

                        else if ( (LA162_0==EXISTS) && (synpred18_Ceylon())) {s = 23;}

                        else if ( (LA162_0==NONEMPTY) && (synpred18_Ceylon())) {s = 24;}

                        else if ( (LA162_0==COMPARE_OP) && (synpred18_Ceylon())) {s = 25;}

                        else if ( (LA162_0==IN_OP) && (synpred18_Ceylon())) {s = 26;}

                        else if ( (LA162_0==LARGE_AS_OP) && (synpred18_Ceylon())) {s = 27;}

                        else if ( (LA162_0==LARGER_OP) && (synpred18_Ceylon())) {s = 28;}

                        else if ( (LA162_0==SMALL_AS_OP) && (synpred18_Ceylon())) {s = 29;}

                        else if ( (LA162_0==SMALLER_OP) && (synpred18_Ceylon())) {s = 30;}

                        else if ( (LA162_0==IS_OP) && (synpred18_Ceylon())) {s = 31;}

                        else if ( (LA162_0==EXTENDS) && (synpred18_Ceylon())) {s = 32;}

                        else if ( (LA162_0==SATISFIES) && (synpred18_Ceylon())) {s = 33;}

                        else if ( (LA162_0==CASE_TYPES) && (synpred18_Ceylon())) {s = 34;}

                        else if ( (LA162_0==EQUAL_OP) && (synpred18_Ceylon())) {s = 35;}

                        else if ( (LA162_0==NOT_EQUAL_OP) && (synpred18_Ceylon())) {s = 36;}

                        else if ( (LA162_0==IDENTICAL_OP) && (synpred18_Ceylon())) {s = 37;}

                        else if ( (LA162_0==AND_OP) && (synpred18_Ceylon())) {s = 38;}

                        else if ( (LA162_0==OR_OP) && (synpred18_Ceylon())) {s = 39;}

                        else if ( (LA162_0==SEMICOLON) && (synpred18_Ceylon())) {s = 40;}

                        else if ( (LA162_0==COMPUTE) && (synpred18_Ceylon())) {s = 41;}

                        else if ( (LA162_0==STRING_MID) && (synpred18_Ceylon())) {s = 42;}

                        else if ( (LA162_0==STRING_END) && (synpred18_Ceylon())) {s = 43;}

                        else if ( (LA162_0==ELSE_CLAUSE) && (synpred18_Ceylon())) {s = 44;}

                        else if ( (LA162_0==CASE_CLAUSE) && (synpred18_Ceylon())) {s = 45;}

                        else if ( (LA162_0==THEN_CLAUSE) && (synpred18_Ceylon())) {s = 46;}

                        else if ( (LA162_0==SPECIFY) && (synpred18_Ceylon())) {s = 47;}

                        else if ( (LA162_0==ADD_SPECIFY) && (synpred18_Ceylon())) {s = 48;}

                        else if ( (LA162_0==SUBTRACT_SPECIFY) && (synpred18_Ceylon())) {s = 49;}

                        else if ( (LA162_0==MULTIPLY_SPECIFY) && (synpred18_Ceylon())) {s = 50;}

                        else if ( (LA162_0==DIVIDE_SPECIFY) && (synpred18_Ceylon())) {s = 51;}

                        else if ( (LA162_0==REMAINDER_SPECIFY) && (synpred18_Ceylon())) {s = 52;}

                        else if ( (LA162_0==INTERSECT_SPECIFY) && (synpred18_Ceylon())) {s = 53;}

                        else if ( (LA162_0==UNION_SPECIFY) && (synpred18_Ceylon())) {s = 54;}

                        else if ( (LA162_0==COMPLEMENT_SPECIFY) && (synpred18_Ceylon())) {s = 55;}

                        else if ( (LA162_0==AND_SPECIFY) && (synpred18_Ceylon())) {s = 56;}

                        else if ( (LA162_0==OR_SPECIFY) && (synpred18_Ceylon())) {s = 57;}

                        else if ( (LA162_0==MEMBER_OP) && (synpred18_Ceylon())) {s = 58;}

                        else if ( (LA162_0==SAFE_MEMBER_OP) && (synpred18_Ceylon())) {s = 59;}

                        else if ( (LA162_0==SPREAD_OP) && (synpred18_Ceylon())) {s = 60;}

                        else if ( (LA162_0==LBRACKET) && (synpred18_Ceylon())) {s = 61;}

                        else if ( (LA162_0==LPAREN) && (synpred18_Ceylon())) {s = 62;}

                        else if ( (LA162_0==LBRACE) && (synpred18_Ceylon())) {s = 63;}

                         
                        input.seek(index162_0);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 162, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA171_eotS =
        "\77\uffff";
    static final String DFA171_eofS =
        "\77\uffff";
    static final String DFA171_minS =
        "\1\5\1\0\75\uffff";
    static final String DFA171_maxS =
        "\1\u0080\1\0\75\uffff";
    static final String DFA171_acceptS =
        "\2\uffff\1\2\73\uffff\1\1";
    static final String DFA171_specialS =
        "\1\uffff\1\0\75\uffff}>";
    static final String[] DFA171_transitionS = {
            "\1\2\2\uffff\2\2\11\uffff\2\2\3\uffff\2\2\1\uffff\3\2\2\uffff"+
            "\3\2\3\uffff\6\2\11\uffff\1\2\2\uffff\1\2\1\uffff\4\2\2\uffff"+
            "\4\2\4\uffff\1\2\1\uffff\1\2\1\uffff\1\2\4\uffff\2\2\3\uffff"+
            "\2\2\4\uffff\10\2\1\uffff\6\2\1\1\4\2\1\uffff\1\2\1\uffff\2"+
            "\2\3\uffff\1\2\6\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA171_eot = DFA.unpackEncodedString(DFA171_eotS);
    static final short[] DFA171_eof = DFA.unpackEncodedString(DFA171_eofS);
    static final char[] DFA171_min = DFA.unpackEncodedStringToUnsignedChars(DFA171_minS);
    static final char[] DFA171_max = DFA.unpackEncodedStringToUnsignedChars(DFA171_maxS);
    static final short[] DFA171_accept = DFA.unpackEncodedString(DFA171_acceptS);
    static final short[] DFA171_special = DFA.unpackEncodedString(DFA171_specialS);
    static final short[][] DFA171_transition;

    static {
        int numStates = DFA171_transitionS.length;
        DFA171_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA171_transition[i] = DFA.unpackEncodedString(DFA171_transitionS[i]);
        }
    }

    class DFA171 extends DFA {

        public DFA171(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 171;
            this.eot = DFA171_eot;
            this.eof = DFA171_eof;
            this.min = DFA171_min;
            this.max = DFA171_max;
            this.accept = DFA171_accept;
            this.special = DFA171_special;
            this.transition = DFA171_transition;
        }
        public String getDescription() {
            return "1850:7: ( ( typeArgumentsStart )=> typeArguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA171_1 = input.LA(1);

                         
                        int index171_1 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred21_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index171_1);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 171, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA172_eotS =
        "\77\uffff";
    static final String DFA172_eofS =
        "\77\uffff";
    static final String DFA172_minS =
        "\1\5\1\0\75\uffff";
    static final String DFA172_maxS =
        "\1\u0080\1\0\75\uffff";
    static final String DFA172_acceptS =
        "\2\uffff\1\2\73\uffff\1\1";
    static final String DFA172_specialS =
        "\1\uffff\1\0\75\uffff}>";
    static final String[] DFA172_transitionS = {
            "\1\2\2\uffff\2\2\11\uffff\2\2\3\uffff\2\2\1\uffff\3\2\2\uffff"+
            "\3\2\3\uffff\6\2\11\uffff\1\2\2\uffff\1\2\1\uffff\4\2\2\uffff"+
            "\4\2\4\uffff\1\2\1\uffff\1\2\1\uffff\1\2\4\uffff\2\2\3\uffff"+
            "\2\2\4\uffff\10\2\1\uffff\6\2\1\1\4\2\1\uffff\1\2\1\uffff\2"+
            "\2\3\uffff\1\2\6\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA172_eot = DFA.unpackEncodedString(DFA172_eotS);
    static final short[] DFA172_eof = DFA.unpackEncodedString(DFA172_eofS);
    static final char[] DFA172_min = DFA.unpackEncodedStringToUnsignedChars(DFA172_minS);
    static final char[] DFA172_max = DFA.unpackEncodedStringToUnsignedChars(DFA172_maxS);
    static final short[] DFA172_accept = DFA.unpackEncodedString(DFA172_acceptS);
    static final short[] DFA172_special = DFA.unpackEncodedString(DFA172_specialS);
    static final short[][] DFA172_transition;

    static {
        int numStates = DFA172_transitionS.length;
        DFA172_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA172_transition[i] = DFA.unpackEncodedString(DFA172_transitionS[i]);
        }
    }

    class DFA172 extends DFA {

        public DFA172(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 172;
            this.eot = DFA172_eot;
            this.eof = DFA172_eof;
            this.min = DFA172_min;
            this.max = DFA172_max;
            this.accept = DFA172_accept;
            this.special = DFA172_special;
            this.transition = DFA172_transition;
        }
        public String getDescription() {
            return "1861:7: ( ( typeArgumentsStart )=> typeArguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA172_1 = input.LA(1);

                         
                        int index172_1 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred22_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index172_1);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 172, _s, input);
            error(nvae);
            throw nvae;
        }

    }
 

    public static final BitSet FOLLOW_compilerAnnotations_in_compilationUnit86 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_compilationUnit96 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_importDeclaration_in_compilationUnit134 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_moduleDescriptor_in_compilationUnit177 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_packageDescriptor_in_compilationUnit220 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_toplevelDeclaration_in_compilationUnit248 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_RBRACE_in_compilationUnit268 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_EOF_in_compilationUnit295 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_toplevelDeclaration318 = new BitSet(new long[]{0x0202000800801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_declaration_in_toplevelDeclaration329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_annotatedModuleDescriptorStart354 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000820L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_annotatedModuleDescriptorStart356 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_MODULE_in_annotatedModuleDescriptorStart358 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_annotatedPackageDescriptorStart375 = new BitSet(new long[]{0x0000000000000000L,0x0001000004000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_annotatedPackageDescriptorStart377 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_PACKAGE_in_annotatedPackageDescriptorStart379 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFBFFL,0x000000000000003FL});
    public static final BitSet FOLLOW_set_in_annotatedPackageDescriptorStart381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_moduleDescriptor403 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000820L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_moduleDescriptor405 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_MODULE_in_moduleDescriptor413 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_moduleDescriptor430 = new BitSet(new long[]{0x0000000000400000L,0x0001000000000000L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_moduleDescriptor456 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_moduleDescriptor484 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_importModuleList_in_moduleDescriptor510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_importModuleList539 = new BitSet(new long[]{0x0080000004000000L,0x0001000100000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_compilerAnnotations_in_importModuleList565 = new BitSet(new long[]{0x0080000000000000L,0x0001000000000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_importModuleList567 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_importModule_in_importModuleList577 = new BitSet(new long[]{0x0080000004000000L,0x0001000100000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_RBRACE_in_importModuleList604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_packageDescriptor633 = new BitSet(new long[]{0x0000000000000000L,0x0001000004000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_packageDescriptor635 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_PACKAGE_in_packageDescriptor643 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_packageDescriptor660 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_packageDescriptor676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPORT_in_importModule705 = new BitSet(new long[]{0x0000000000400000L,0x2001000000000020L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_importModule734 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_importModule764 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_packagePath_in_importModule792 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_importModule830 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_importModule860 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_importModule887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPORT_in_importDeclaration916 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000024L});
    public static final BitSet FOLLOW_packagePath_in_importDeclaration944 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_importElementList_in_importDeclaration980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_importElementList1022 = new BitSet(new long[]{0x0000004004000000L,0x2000000100000020L});
    public static final BitSet FOLLOW_importElement_in_importElementList1045 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_COMMA_in_importElementList1076 = new BitSet(new long[]{0x0000004005000000L,0x2000000100000020L});
    public static final BitSet FOLLOW_importElement_in_importElementList1111 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_importWildcard_in_importElementList1139 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_importWildcard_in_importElementList1193 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_importElementList1208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_importElement1244 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_importName_in_importElement1254 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000004L});
    public static final BitSet FOLLOW_SPECIFY_in_importElement1273 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000024L});
    public static final BitSet FOLLOW_importName_in_importElement1307 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_importElementList_in_importElement1371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELLIPSIS_in_importWildcard1423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_importName1452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_importName1462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_packageName_in_packagePath1496 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_packagePath1527 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000420L});
    public static final BitSet FOLLOW_packageName_in_packagePath1562 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_packageName1627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_packageName1651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_typeName1680 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_annotationName1709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_memberName1738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_memberNameDeclaration1771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_memberNameDeclaration1789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_typeNameDeclaration1819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_typeNameDeclaration1837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_objectDeclaration1867 = new BitSet(new long[]{0x0000080000000000L,0x2000048000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_objectDeclaration1893 = new BitSet(new long[]{0x0000080000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_extendedType_in_objectDeclaration1931 = new BitSet(new long[]{0x0000000000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_objectDeclaration1970 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_classBody_in_objectDeclaration2008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_objectDeclaration2038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_objectExpression2077 = new BitSet(new long[]{0x0000080000000000L,0x0000008000000004L});
    public static final BitSet FOLLOW_extendedType_in_objectExpression2104 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_objectExpression2143 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_classBody_in_objectExpression2171 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodDeclaration2219 = new BitSet(new long[]{0x0000000024000000L,0x30002C0000000124L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodDeclaration2239 = new BitSet(new long[]{0x0000000024000000L,0x30002C0000000124L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_voidOrInferredMethodDeclaration2275 = new BitSet(new long[]{0x0000000024000000L,0x10002C0000000104L});
    public static final BitSet FOLLOW_typeParameters_in_voidOrInferredMethodDeclaration2312 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_parameters_in_voidOrInferredMethodDeclaration2357 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_typeConstraints_in_voidOrInferredMethodDeclaration2401 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_voidOrInferredMethodDeclaration2449 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_voidOrInferredMethodDeclaration2491 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_voidOrInferredMethodDeclaration2534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSIGN_in_setterDeclaration2583 = new BitSet(new long[]{0x0000000020000000L,0x2000240000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_setterDeclaration2610 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_setterDeclaration2649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_setterDeclaration2690 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_setterDeclaration2733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tuplePatternStart2768 = new BitSet(new long[]{0x0202000804801080L,0x200008002411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_compilerAnnotations_in_tuplePatternStart2786 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000020L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_tuplePatternStart2788 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_tuplePatternStart2791 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_tuplePatternStart2827 = new BitSet(new long[]{0x0202000800801080L,0x200008000411000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_tuplePatternStart2829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePatternStart_in_tuplePatternStart2848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_variableOrTuplePattern2890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variablePattern_in_variableOrTuplePattern2913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyItemPattern_in_pattern2965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyItemPattern_in_pattern3003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_pattern3038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variablePattern_in_pattern3061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyItemPattern_in_tupleOrEntryPattern3113 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyItemPattern_in_tupleOrEntryPattern3151 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_tupleOrEntryPattern3173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_variablePattern3202 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tuplePattern3231 = new BitSet(new long[]{0x0002000004000000L,0x200008022400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variadicPattern_in_tuplePattern3259 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_COMMA_in_tuplePattern3293 = new BitSet(new long[]{0x0002000004000000L,0x200008002400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variadicPattern_in_tuplePattern3333 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_tuplePattern3387 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicVariable_in_variadicPattern3445 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_pattern_in_variadicPattern3474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_variadicVariable3521 = new BitSet(new long[]{0x0000000000000000L,0x200008002400000CL});
    public static final BitSet FOLLOW_unionType_in_variadicVariable3547 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_variadicVariable3584 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_variadicVariable3628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableOrTuplePattern_in_keyItemPattern3670 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_keyItemPattern3686 = new BitSet(new long[]{0x0002000004000002L,0x200008000400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variableOrTuplePattern_in_keyItemPattern3714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_destructure3754 = new BitSet(new long[]{0x0002000004000000L,0x200008000400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_tupleOrEntryPattern_in_destructure3770 = new BitSet(new long[]{0x0000000000000000L,0x0000240000000000L});
    public static final BitSet FOLLOW_specifier_in_destructure3796 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_destructure3833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_inferredAttributeDeclaration3871 = new BitSet(new long[]{0x0000000020000000L,0x2000240000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_inferredAttributeDeclaration3898 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_specifier_in_inferredAttributeDeclaration3948 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_inferredAttributeDeclaration3983 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_inferredAttributeDeclaration4026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_inferredAttributeDeclaration4065 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_typedMethodOrAttributeDeclaration4115 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_typedMethodOrAttributeDeclaration4135 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_typedMethodOrAttributeDeclaration4161 = new BitSet(new long[]{0x0000000020000000L,0x00002C0000000104L});
    public static final BitSet FOLLOW_typeParameters_in_typedMethodOrAttributeDeclaration4210 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_typedMethodOrAttributeDeclaration4255 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_typeConstraints_in_typedMethodOrAttributeDeclaration4310 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_typedMethodOrAttributeDeclaration4370 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_typedMethodOrAttributeDeclaration4420 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration4472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_in_typedMethodOrAttributeDeclaration4527 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_typedMethodOrAttributeDeclaration4565 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration4611 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_typedMethodOrAttributeDeclaration4652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_interfaceDeclaration4711 = new BitSet(new long[]{0x0000000024100000L,0x30002C8000000024L});
    public static final BitSet FOLLOW_DYNAMIC_in_interfaceDeclaration4740 = new BitSet(new long[]{0x0000000024100000L,0x30002C8000000024L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_interfaceDeclaration4776 = new BitSet(new long[]{0x0000000024100000L,0x10002C8000000004L});
    public static final BitSet FOLLOW_typeParameters_in_interfaceDeclaration4814 = new BitSet(new long[]{0x0000000024100000L,0x1000248000000004L});
    public static final BitSet FOLLOW_caseTypes_in_interfaceDeclaration4852 = new BitSet(new long[]{0x0000000024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_interfaceDeclaration4906 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000004L});
    public static final BitSet FOLLOW_typeConstraints_in_interfaceDeclaration4943 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_interfaceBody_in_interfaceDeclaration4990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeSpecifier_in_interfaceDeclaration5031 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interfaceDeclaration5075 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_classDeclaration5123 = new BitSet(new long[]{0x0000080024100000L,0x30002C8000000124L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_classDeclaration5150 = new BitSet(new long[]{0x0000080024100000L,0x10002C8000000104L});
    public static final BitSet FOLLOW_typeParameters_in_classDeclaration5187 = new BitSet(new long[]{0x0000080024100000L,0x1000248000000104L});
    public static final BitSet FOLLOW_parameters_in_classDeclaration5224 = new BitSet(new long[]{0x0000080024100000L,0x1000248000000004L});
    public static final BitSet FOLLOW_caseTypes_in_classDeclaration5261 = new BitSet(new long[]{0x0000080024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_extendedType_in_classDeclaration5307 = new BitSet(new long[]{0x0000000024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_classDeclaration5345 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000004L});
    public static final BitSet FOLLOW_typeConstraints_in_classDeclaration5382 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_classBody_in_classDeclaration5429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classSpecifier_in_classDeclaration5470 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_classDeclaration5513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_constructor5552 = new BitSet(new long[]{0x0000080000000000L,0x2000000000000124L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_constructor5578 = new BitSet(new long[]{0x0000080000000000L,0x0000000000000104L});
    public static final BitSet FOLLOW_parameters_in_constructor5615 = new BitSet(new long[]{0x0000080000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_delegatedConstructor_in_constructor5656 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_constructor5683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_delegatedConstructor5712 = new BitSet(new long[]{0x0000000000000002L,0x2020000004000000L});
    public static final BitSet FOLLOW_classInstantiation_in_delegatedConstructor5740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALIAS_in_aliasDeclaration5780 = new BitSet(new long[]{0x0000000024000000L,0x30002C0000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_aliasDeclaration5806 = new BitSet(new long[]{0x0000000024000000L,0x10002C0000000000L});
    public static final BitSet FOLLOW_typeParameters_in_aliasDeclaration5844 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000000L});
    public static final BitSet FOLLOW_typeConstraints_in_aliasDeclaration5882 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000000L});
    public static final BitSet FOLLOW_typeSpecifier_in_aliasDeclaration5919 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_aliasDeclaration5954 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotations_in_assertion5983 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_ASSERT_in_assertion5991 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_assertion6007 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_assertion6031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_block6060 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_block6087 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_block6114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_interfaceBody6147 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_interfaceBody6174 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_interfaceBody6201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_classBody6230 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_classBody6256 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_classBody6283 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_extendedType6312 = new BitSet(new long[]{0x0000000000000002L,0x2020000004000000L});
    public static final BitSet FOLLOW_classInstantiation_in_extendedType6342 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_classSpecifier6392 = new BitSet(new long[]{0x0000000000000002L,0x2020000004000000L});
    public static final BitSet FOLLOW_SPECIFY_in_classSpecifier6421 = new BitSet(new long[]{0x0000000000000002L,0x2020000004000000L});
    public static final BitSet FOLLOW_classInstantiation_in_classSpecifier6460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_packageQualifiedClass6509 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_packageQualifiedClass6537 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_packageQualifiedClass6571 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_packageQualifiedClass6612 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_packageQualifiedClass6642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_unqualifiedClass6720 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_unqualifiedClass6749 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_unqualifiedClass6783 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUPER_in_superQualifiedClass6845 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_superQualifiedClass6864 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_superQualifiedClass6892 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_packageQualifiedClass_in_classInstantiation6952 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_unqualifiedClass_in_classInstantiation6980 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_superQualifiedClass_in_classInstantiation7008 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_positionalArguments_in_classInstantiation7044 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiedTypes7094 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_primaryType_in_satisfiedTypes7124 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_satisfiedTypes7176 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_COMMA_in_satisfiedTypes7211 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_UNION_OP_in_satisfiedTypes7213 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_primaryType_in_satisfiedTypes7259 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_CASE_TYPES_in_caseTypes7311 = new BitSet(new long[]{0x0000000000000000L,0x200008000400002CL});
    public static final BitSet FOLLOW_caseType_in_caseTypes7329 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_caseTypes7371 = new BitSet(new long[]{0x0000000000000000L,0x200008000400002CL});
    public static final BitSet FOLLOW_COMMA_in_caseTypes7407 = new BitSet(new long[]{0x0000000000000000L,0x200008000400002CL});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_caseTypes7409 = new BitSet(new long[]{0x0000000000000000L,0x200008000400002CL});
    public static final BitSet FOLLOW_caseType_in_caseTypes7455 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_primaryType_in_caseType7509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_caseType7526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ABSTRACTED_TYPE_in_abstractedType7561 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_primaryType_in_abstractedType7577 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_parameters7606 = new BitSet(new long[]{0x0002000804000000L,0x200108200400002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_parameterDeclarationOrRef_in_parameters7634 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_parameters7669 = new BitSet(new long[]{0x0002000805000000L,0x200108200400002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_parameterDeclarationOrRef_in_parameters7709 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_parameters7789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_parameter7818 = new BitSet(new long[]{0x0002000800000000L,0x200108000400002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotations_in_parameter7826 = new BitSet(new long[]{0x0002000800000000L,0x200008000400000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_parameterDeclaration_in_parameter7834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_parameterDeclaration7887 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_parameterDeclaration7907 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_parameterDeclaration7927 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_parameterDeclaration7947 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_parameterDeclaration7967 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_parameterDeclaration7993 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000100L});
    public static final BitSet FOLLOW_specifier_in_parameterDeclaration8031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameters_in_parameterDeclaration8084 = new BitSet(new long[]{0x0000000020000002L,0x0000200000000100L});
    public static final BitSet FOLLOW_functionSpecifier_in_parameterDeclaration8129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_parameterRef8181 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_parameterRef8207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameterRef_in_parameterDeclarationOrRef8255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameter_in_parameterDeclarationOrRef8280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeParameters8309 = new BitSet(new long[]{0x1000000004000000L,0x2000000001000020L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters8327 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_COMMA_in_typeParameters8355 = new BitSet(new long[]{0x1000000005000000L,0x2000000001000021L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters8389 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeParameters8440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_typeParameter8477 = new BitSet(new long[]{0x1000000000000000L,0x2000000001000020L});
    public static final BitSet FOLLOW_variance_in_typeParameter8496 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_typeParameter8526 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_typeDefault_in_typeParameter8552 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_variance8600 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OUT_in_variance8616 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_typeConstraint8649 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_TYPE_CONSTRAINT_in_typeConstraint8657 = new BitSet(new long[]{0x0000000000100012L,0x2000008000000120L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_typeConstraint8683 = new BitSet(new long[]{0x0000000000100012L,0x0000008000000100L});
    public static final BitSet FOLLOW_parameters_in_typeConstraint8721 = new BitSet(new long[]{0x0000000000100012L,0x0000008000000000L});
    public static final BitSet FOLLOW_caseTypes_in_typeConstraint8758 = new BitSet(new long[]{0x0000000000000012L,0x0000008000000000L});
    public static final BitSet FOLLOW_satisfiedTypes_in_typeConstraint8802 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_abstractedType_in_typeConstraint8840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeConstraint_in_typeConstraints8898 = new BitSet(new long[]{0x0000000004000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_stringLiteral_in_annotationListStart8935 = new BitSet(new long[]{0x0002000000000000L,0x2000000000000020L,0x000000000000000AL});
    public static final BitSet FOLLOW_annotation_in_annotationListStart8937 = new BitSet(new long[]{0x0002000000000000L,0x2000000000000020L,0x000000000000000AL});
    public static final BitSet FOLLOW_set_in_annotationListStart8947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_destructureStart8974 = new BitSet(new long[]{0x0002000004000000L,0x2000000000000028L,0x000000000000000AL});
    public static final BitSet FOLLOW_compilerAnnotations_in_destructureStart8976 = new BitSet(new long[]{0x0002000000000000L,0x2000000000000028L,0x000000000000000AL});
    public static final BitSet FOLLOW_LBRACKET_in_destructureStart8986 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_destructureStart8988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_destructureStart8990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_destructureStart8992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_destructureStart8994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_destructureStart8996 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_destructureStart8998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_declarationOrStatement9031 = new BitSet(new long[]{0x0343800B40C19880L,0x2E7508100619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_destructure_in_declarationOrStatement9055 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_declarationOrStatement9083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assertion_in_declarationOrStatement9109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_declarationOrStatement9137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_declarationOrStatement9159 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotations_in_declaration9215 = new BitSet(new long[]{0x0202000800801080L,0x200008000411000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_classDeclaration_in_declaration9238 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceDeclaration_in_declaration9264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_aliasDeclaration_in_declaration9280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectDeclaration_in_declaration9296 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_setterDeclaration_in_declaration9312 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_voidOrInferredMethodDeclaration_in_declaration9328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_inferredAttributeDeclaration_in_declaration9344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typedMethodOrAttributeDeclaration_in_declaration9360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructor_in_declaration9376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotatedDeclarationStart9419 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_annotation_in_annotatedDeclarationStart9422 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_unambiguousType_in_annotatedDeclarationStart9439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_annotatedDeclarationStart9443 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotatedAssertionStart9461 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotation_in_annotatedAssertionStart9464 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000020L});
    public static final BitSet FOLLOW_ASSERT_in_annotatedAssertionStart9467 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_declarationStart9487 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_declarationStart9495 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart9497 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_declarationStart9510 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart9512 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSIGN_in_declarationStart9525 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_declarationStart9533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_declarationStart9541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_declarationStart9549 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart9551 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_declarationStart9564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALIAS_in_declarationStart9572 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_declarationStart9581 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_declarationStart9583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_declarationStart9591 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart9593 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType9621 = new BitSet(new long[]{0x0000010000000000L,0x0000000000200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType9641 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType9645 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType9647 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType9660 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType9662 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType9680 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType9684 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType9686 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_unambiguousType9695 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType9704 = new BitSet(new long[]{0x0000010000000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType9707 = new BitSet(new long[]{0x0000010000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType9711 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType9713 = new BitSet(new long[]{0x0000010000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType9733 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType9735 = new BitSet(new long[]{0x0000000000000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType9747 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType9751 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType9753 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_set_in_unambiguousType9773 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_unambiguousType9786 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType9794 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType9803 = new BitSet(new long[]{0x0000010001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType9806 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType9810 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType9812 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType9833 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType9835 = new BitSet(new long[]{0x0000000001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType9846 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType9850 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType9852 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_COMMA_in_unambiguousType9882 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType9893 = new BitSet(new long[]{0x0000010001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType9896 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType9900 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType9902 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType9927 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType9929 = new BitSet(new long[]{0x0000000001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType9943 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType9947 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType9949 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_set_in_unambiguousType9980 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType9993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_directiveStatement_in_statement10014 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_controlStatement_in_statement10030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionOrSpecificationStatement_in_statement10046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_expressionOrSpecificationStatement10084 = new BitSet(new long[]{0x0000000021000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_expressionOrSpecificationStatement10120 = new BitSet(new long[]{0x0000000001000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_expressionOrSpecificationStatement10165 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMMA_in_expressionOrSpecificationStatement10195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_directive_in_directiveStatement10244 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_directiveStatement10261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_returnDirective_in_directive10290 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_throwDirective_in_directive10306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_breakDirective_in_directive10322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_continueDirective_in_directive10338 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RETURN_in_returnDirective10367 = new BitSet(new long[]{0x0142800B00408002L,0x227500000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_returnDirective10394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THROW_in_throwDirective10434 = new BitSet(new long[]{0x0100800B00408002L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_throwDirective10461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BREAK_in_breakDirective10501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CONTINUE_in_continueDirective10530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_typeSpecifier10569 = new BitSet(new long[]{0x0000000000000002L,0x200008000400000CL});
    public static final BitSet FOLLOW_SPECIFY_in_typeSpecifier10598 = new BitSet(new long[]{0x0000000000000002L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_typeSpecifier10635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_typeDefault10675 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_typeDefault10692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_specifier10721 = new BitSet(new long[]{0x0142800B00408000L,0x227500000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_specifier10737 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_lazySpecifier10766 = new BitSet(new long[]{0x0142800B00408000L,0x227500000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_lazySpecifier10782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_functionSpecifier10821 = new BitSet(new long[]{0x0142800B00408000L,0x227500000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_SPECIFY_in_functionSpecifier10849 = new BitSet(new long[]{0x0142800B00408000L,0x227500000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_functionSpecifier10875 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assignmentExpression_in_expression10912 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonstringLiteral_in_base10941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringExpression_in_base10957 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaLiteral_in_base10973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumeration_in_base10989 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuple_in_base11005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dynamicObject_in_base11021 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectExpression_in_base11037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selfReference_in_base11053 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parExpression_in_base11069 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_baseReference_in_base11085 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberReference_in_baseReference11127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeReference_in_baseReference11143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_base_in_primary11178 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_qualifiedReference_in_primary11211 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_indexOrIndexRange_in_primary11229 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_parameters_in_primary11255 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_positionalArguments_in_primary11275 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_namedArguments_in_primary11296 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_LPAREN_in_specifierParametersStart11330 = new BitSet(new long[]{0x0202000804801080L,0x200108200411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_RPAREN_in_specifierParametersStart11346 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_SPECIFY_in_specifierParametersStart11349 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_specifierParametersStart11351 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifierParametersStart_in_specifierParametersStart11353 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_specifierParametersStart11369 = new BitSet(new long[]{0x0202000800801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_specifierParametersStart11371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberSelectionOperator_in_qualifiedReference11398 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberReference_in_qualifiedReference11426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeReference_in_qualifiedReference11446 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MEMBER_OP_in_memberSelectionOperator11513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SAFE_MEMBER_OP_in_memberSelectionOperator11529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPREAD_OP_in_memberSelectionOperator11545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_enumeration11574 = new BitSet(new long[]{0x0143800B04408000L,0x227500012618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_sequencedArgument_in_enumeration11602 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_enumeration11629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tuple11658 = new BitSet(new long[]{0x0143800B04408000L,0x227500022618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_sequencedArgument_in_tuple11685 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_tuple11712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_dynamicObject11754 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_LBRACKET_in_dynamicObject11756 = new BitSet(new long[]{0x0143800B04408000L,0x227508022618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgument_in_dynamicObject11807 = new BitSet(new long[]{0x0143800B04408000L,0x227508022618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_anonymousArgument_in_dynamicObject11841 = new BitSet(new long[]{0x0143800B04408000L,0x227508022618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_sequencedArgument_in_dynamicObject11879 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_dynamicObject11906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionExpression_in_valueCaseList11949 = new BitSet(new long[]{0x0000000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_COMMA_in_valueCaseList11991 = new BitSet(new long[]{0x0100800B01408002L,0xA23500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_UNION_OP_in_valueCaseList12018 = new BitSet(new long[]{0x0100800B01408002L,0xA23500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_intersectionExpression_in_valueCaseList12064 = new BitSet(new long[]{0x0000000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_memberName_in_memberReference12129 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_memberReference12169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_typeReference12209 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_typeReference12250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArgumentsStart12289 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000DL});
    public static final BitSet FOLLOW_type_in_typeArgumentsStart12303 = new BitSet(new long[]{0x0000000001000000L,0x0000080000000001L});
    public static final BitSet FOLLOW_set_in_typeArgumentsStart12311 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArgumentsStart12331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeArgumentsStart12346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_indexOrIndexRange12394 = new BitSet(new long[]{0x0142804B00408000L,0x227500000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_ELLIPSIS_in_indexOrIndexRange12422 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange12444 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange12487 = new BitSet(new long[]{0x0000004000000000L,0x0000020280000000L});
    public static final BitSet FOLLOW_ELLIPSIS_in_indexOrIndexRange12521 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RANGE_OP_in_indexOrIndexRange12556 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange12583 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_indexOrIndexRange12608 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange12634 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_functionOrExpression_in_indexOrIndexRange12670 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_indexOrIndexRange12696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_additiveExpression_in_index12725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_namedArguments12755 = new BitSet(new long[]{0x0143800B04408000L,0x227508012618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgument_in_namedArguments12807 = new BitSet(new long[]{0x0143800B04408000L,0x227508012618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_anonymousArgument_in_namedArguments12841 = new BitSet(new long[]{0x0143800B04408000L,0x227508012618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_sequencedArgument_in_namedArguments12879 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_namedArguments12906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_sequencedArgument12935 = new BitSet(new long[]{0x0143800B00408000L,0x227500002618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehension_in_sequencedArgument12991 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_positionalArgument_in_sequencedArgument13028 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_spreadArgument_in_sequencedArgument13064 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_COMMA_in_sequencedArgument13110 = new BitSet(new long[]{0x0143800B01408002L,0x227500002618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehension_in_sequencedArgument13176 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_positionalArgument_in_sequencedArgument13219 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_spreadArgument_in_sequencedArgument13262 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_namedArgument13347 = new BitSet(new long[]{0x0002000800000000L,0x200008000410002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_namedSpecifiedArgument_in_namedArgument13364 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentDeclaration_in_namedArgument13386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_namedSpecifiedArgument13427 = new BitSet(new long[]{0x0000000000000000L,0x0000240000000000L});
    public static final BitSet FOLLOW_specifier_in_namedSpecifiedArgument13453 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_namedSpecifiedArgument13489 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_anonymousArgument13527 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_anonymousArgument13553 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_objectArgument13582 = new BitSet(new long[]{0x0000080000000000L,0x2000048000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_objectArgument13609 = new BitSet(new long[]{0x0000080000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_extendedType_in_objectArgument13647 = new BitSet(new long[]{0x0000000000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_objectArgument13686 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_classBody_in_objectArgument13724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_objectArgument13754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodArgument13811 = new BitSet(new long[]{0x0000000020000000L,0x2000240000000124L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodArgument13839 = new BitSet(new long[]{0x0000000020000000L,0x2000240000000124L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_voidOrInferredMethodArgument13876 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_parameters_in_voidOrInferredMethodArgument13914 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_block_in_voidOrInferredMethodArgument13951 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_voidOrInferredMethodArgument13992 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_voidOrInferredMethodArgument14035 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_inferredGetterArgument14092 = new BitSet(new long[]{0x0000000020000000L,0x2000240000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_inferredGetterArgument14119 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_inferredGetterArgument14157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_in_inferredGetterArgument14198 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_inferredGetterArgument14234 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_inferredGetterArgument14278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typedMethodOrGetterArgument14346 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_typedMethodOrGetterArgument14375 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_typedMethodOrGetterArgument14401 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_parameters_in_typedMethodOrGetterArgument14449 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_block_in_typedMethodOrGetterArgument14496 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_typedMethodOrGetterArgument14545 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument14598 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_typedMethodOrGetterArgument14664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_in_typedMethodOrGetterArgument14713 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_typedMethodOrGetterArgument14755 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument14809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_untypedMethodOrGetterArgument14881 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_untypedMethodOrGetterArgument14930 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_functionSpecifier_in_untypedMethodOrGetterArgument14975 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_untypedMethodOrGetterArgument15053 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_untypedMethodOrGetterArgument15099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectArgument_in_namedArgumentDeclaration15136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typedMethodOrGetterArgument_in_namedArgumentDeclaration15152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_voidOrInferredMethodArgument_in_namedArgumentDeclaration15168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_inferredGetterArgument_in_namedArgumentDeclaration15184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_untypedMethodOrGetterArgument_in_namedArgumentDeclaration15200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_namedArgumentStart15228 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_specificationStart_in_namedArgumentStart15238 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_namedArgumentStart15242 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_namedAnnotationArgumentsStart15260 = new BitSet(new long[]{0x0302800B04C09080L,0x223508010619812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgumentStart_in_namedAnnotationArgumentsStart15267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_iterableArgumentStart_in_namedAnnotationArgumentsStart15271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RBRACE_in_namedAnnotationArgumentsStart15275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_iterableArgumentStart15293 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_iterableArgumentStart15295 = new BitSet(new long[]{0x0000000001000000L,0x0000040100000000L});
    public static final BitSet FOLLOW_set_in_iterableArgumentStart15297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_specificationStart15321 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_parameters_in_specificationStart15323 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_set_in_specificationStart15326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_parExpression15352 = new BitSet(new long[]{0x0142800B00408000L,0x227500000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_parExpression15369 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_parExpression15385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_positionalArguments15422 = new BitSet(new long[]{0x0143800B04408000L,0x227500202618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_sequencedArgument_in_positionalArguments15451 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_positionalArguments15478 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_positionalArgument15515 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_spreadArgument15544 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_unionExpression_in_spreadArgument15560 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_anonParametersStart15585 = new BitSet(new long[]{0x0202000804801080L,0x200108200411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_RPAREN_in_anonParametersStart15601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_anonParametersStart15609 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_anonParametersStart15612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RPAREN_in_anonParametersStart15616 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_set_in_anonParametersStart15618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_anonParametersStart15632 = new BitSet(new long[]{0x0202000800801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_anonParametersStart15634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_nonemptyParametersStart15658 = new BitSet(new long[]{0x0202000804801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_compilerAnnotations_in_nonemptyParametersStart15660 = new BitSet(new long[]{0x0202000800801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_nonemptyParametersStart15662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousFunction_in_functionOrExpression15699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_let_in_functionOrExpression15715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifExpression_in_functionOrExpression15731 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchExpression_in_functionOrExpression15747 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_functionOrExpression15765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_letClause_in_let15794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_patternStart15827 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_patternStart15829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePatternStart_in_patternStart15840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_pattern_in_letVariable15877 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_variable_in_letVariable15905 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_letVariable15941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LET_in_letClause15981 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_LPAREN_in_letClause15997 = new BitSet(new long[]{0x0002000004000000L,0x200008200400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_letVariable_in_letClause16025 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_letClause16057 = new BitSet(new long[]{0x0002000004000000L,0x200008000400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_letVariable_in_letClause16083 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_letClause16123 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_letClause16139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchHeader_in_switchExpression16168 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_caseExpressions_in_switchExpression16184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_caseExpression_in_caseExpressions16231 = new BitSet(new long[]{0x0000008000080002L});
    public static final BitSet FOLLOW_defaultCaseExpression_in_caseExpressions16268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_CLAUSE_in_caseExpression16312 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_caseItemList_in_caseExpression16329 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_caseExpression16345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_defaultCaseExpression16374 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_defaultCaseExpression16391 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_ifExpression16420 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_thenElseClauses_in_ifExpression16436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifExpression_in_conditionalBranch16465 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_let_in_conditionalBranch16481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_disjunctionExpression_in_conditionalBranch16497 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditions_in_thenElseClauses16526 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_THEN_CLAUSE_in_thenElseClauses16542 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_thenElseClauses16560 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_thenElseClauses16576 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_thenElseClauses16594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_anonymousFunction16642 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_anonymousFunction16670 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_anonymousFunction16699 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000104L});
    public static final BitSet FOLLOW_parameters_in_anonymousFunction16728 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000104L});
    public static final BitSet FOLLOW_COMPUTE_in_anonymousFunction16766 = new BitSet(new long[]{0x0142800B00408000L,0x227500000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_anonymousFunction16787 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_anonymousFunction16815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forComprehensionClause_in_comprehension16863 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifComprehensionClause_in_comprehension16879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forComprehensionClause_in_comprehensionClause16908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifComprehensionClause_in_comprehensionClause16943 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionComprehensionClause_in_comprehensionClause16960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_expressionComprehensionClause16990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_forComprehensionClause17027 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_forIterator_in_forComprehensionClause17043 = new BitSet(new long[]{0x0143800B00408000L,0x227500000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehensionClause_in_forComprehensionClause17059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_ifComprehensionClause17092 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_ifComprehensionClause17108 = new BitSet(new long[]{0x0143800B00408000L,0x227500000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehensionClause_in_ifComprehensionClause17124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_thenElseExpression_in_assignmentExpression17168 = new BitSet(new long[]{0x0800000410000222L,0x0008200800801000L,0x0000000000000001L});
    public static final BitSet FOLLOW_assignmentOperator_in_assignmentExpression17194 = new BitSet(new long[]{0x0142800B00408000L,0x227500000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_assignmentExpression17217 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_assignmentOperator17257 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ADD_SPECIFY_in_assignmentOperator17267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUBTRACT_SPECIFY_in_assignmentOperator17277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MULTIPLY_SPECIFY_in_assignmentOperator17287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIVIDE_SPECIFY_in_assignmentOperator17297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REMAINDER_SPECIFY_in_assignmentOperator17307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERSECT_SPECIFY_in_assignmentOperator17317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNION_SPECIFY_in_assignmentOperator17327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPLEMENT_SPECIFY_in_assignmentOperator17337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AND_SPECIFY_in_assignmentOperator17347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OR_SPECIFY_in_assignmentOperator17357 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_disjunctionExpression_in_thenElseExpression17382 = new BitSet(new long[]{0x0000008000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_thenElseOperator_in_thenElseExpression17408 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_disjunctionExpression_in_thenElseExpression17430 = new BitSet(new long[]{0x0000008000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_thenElseOperator17470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THEN_CLAUSE_in_thenElseOperator17487 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conjunctionExpression_in_disjunctionExpression17518 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_disjunctionOperator_in_disjunctionExpression17544 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conjunctionExpression_in_disjunctionExpression17567 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_OR_OP_in_disjunctionOperator17607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_conjunctionExpression17639 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_conjunctionOperator_in_conjunctionExpression17665 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_conjunctionExpression17688 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_AND_OP_in_conjunctionOperator17728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_notOperator_in_logicalNegationExpression17758 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_logicalNegationExpression17777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_equalityExpression_in_logicalNegationExpression17793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_notOperator17822 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_comparisonExpression_in_equalityExpression17854 = new BitSet(new long[]{0x0020020000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_equalityOperator_in_equalityExpression17880 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_comparisonExpression_in_equalityExpression17903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EQUAL_OP_in_equalityOperator17943 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_EQUAL_OP_in_equalityOperator17960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTICAL_OP_in_equalityOperator17976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression18007 = new BitSet(new long[]{0x3000080002100002L,0x0000188000000003L});
    public static final BitSet FOLLOW_comparisonOperator_in_comparisonExpression18035 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression18058 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_largerOperator_in_comparisonExpression18080 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression18103 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_smallerOperator_in_comparisonExpression18125 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression18148 = new BitSet(new long[]{0x0000000000000002L,0x0000180000000000L});
    public static final BitSet FOLLOW_smallerOperator_in_comparisonExpression18183 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression18197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeOperator_in_comparisonExpression18232 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_comparisonExpression18254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALL_AS_OP_in_smallerOperator18300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_smallerOperator18316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGE_AS_OP_in_largerOperator18345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGER_OP_in_largerOperator18361 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPARE_OP_in_comparisonOperator18390 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_comparisonOperator18407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_typeOperator18436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_typeOperator18452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_typeOperator18468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_TYPES_in_typeOperator18484 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_entryRangeExpression_in_existenceEmptinessExpression18515 = new BitSet(new long[]{0x0000040000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_existsNonemptyOperator_in_existenceEmptinessExpression18543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXISTS_in_existsNonemptyOperator18589 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NONEMPTY_in_existsNonemptyOperator18606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_additiveExpression_in_entryRangeExpression18637 = new BitSet(new long[]{0x0000010000000002L,0x0000020080000000L});
    public static final BitSet FOLLOW_rangeIntervalEntryOperator_in_entryRangeExpression18663 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_additiveExpression_in_entryRangeExpression18686 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RANGE_OP_in_rangeIntervalEntryOperator18726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_rangeIntervalEntryOperator18743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ENTRY_OP_in_rangeIntervalEntryOperator18759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_scaleExpression_in_additiveExpression18790 = new BitSet(new long[]{0x0000000200000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_additiveOperator_in_additiveExpression18816 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_scaleExpression_in_additiveExpression18839 = new BitSet(new long[]{0x0000000200000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_SUM_OP_in_additiveOperator18879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIFFERENCE_OP_in_additiveOperator18896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_multiplicativeExpression_in_scaleExpression18925 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_scaleOperator_in_scaleExpression18951 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_scaleExpression_in_scaleExpression18973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionExpression_in_multiplicativeExpression19015 = new BitSet(new long[]{0x0000000000000002L,0x0000000460000000L});
    public static final BitSet FOLLOW_multiplicativeOperator_in_multiplicativeExpression19041 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_unionExpression_in_multiplicativeExpression19064 = new BitSet(new long[]{0x0000000000000002L,0x0000000460000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_multiplicativeOperator19104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QUOTIENT_OP_in_multiplicativeOperator19121 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REMAINDER_OP_in_multiplicativeOperator19137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionExpression_in_unionExpression19168 = new BitSet(new long[]{0x0000000008000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_unionOperator_in_unionExpression19194 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_intersectionExpression_in_unionExpression19217 = new BitSet(new long[]{0x0000000008000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_unionOperator19261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPLEMENT_OP_in_unionOperator19277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_negationComplementExpression_in_intersectionExpression19308 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_intersectionOperator_in_intersectionExpression19334 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_negationComplementExpression_in_intersectionExpression19357 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_intersectionOperator19401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unaryMinusOrComplementOperator_in_negationComplementExpression19430 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_negationComplementExpression_in_negationComplementExpression19449 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exponentiationExpression_in_negationComplementExpression19465 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIFFERENCE_OP_in_unaryMinusOrComplementOperator19494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUM_OP_in_unaryMinusOrComplementOperator19511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_incrementDecrementExpression_in_exponentiationExpression19540 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_exponentiationOperator_in_exponentiationExpression19566 = new BitSet(new long[]{0x0100800900408000L,0x222500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_exponentiationExpression_in_exponentiationExpression19588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_POWER_OP_in_exponentiationOperator19628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SCALE_OP_in_scaleOperator19658 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_prefixOperator_in_incrementDecrementExpression19688 = new BitSet(new long[]{0x0100800900408000L,0x222500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_incrementDecrementExpression_in_incrementDecrementExpression19706 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_postfixIncrementDecrementExpression_in_incrementDecrementExpression19722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DECREMENT_OP_in_prefixOperator19751 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INCREMENT_OP_in_prefixOperator19768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_in_postfixIncrementDecrementExpression19798 = new BitSet(new long[]{0x0100000100000002L});
    public static final BitSet FOLLOW_postfixOperator_in_postfixIncrementDecrementExpression19826 = new BitSet(new long[]{0x0100000100000002L});
    public static final BitSet FOLLOW_DECREMENT_OP_in_postfixOperator19866 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INCREMENT_OP_in_postfixOperator19883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THIS_in_selfReference19913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUPER_in_selfReference19929 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OUTER_in_selfReference19946 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_selfReference19962 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NATURAL_LITERAL_in_nonstringLiteral19995 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FLOAT_LITERAL_in_nonstringLiteral20012 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_nonstringLiteral20029 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_stringLiteral20059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VERBATIM_STRING_in_stringLiteral20076 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_stringExpression20116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_START_in_stringExpression20132 = new BitSet(new long[]{0x0142800B00408000L,0x227500000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_stringExpression20150 = new BitSet(new long[]{0x0000000000000000L,0x0002800000000000L});
    public static final BitSet FOLLOW_STRING_MID_in_stringExpression20176 = new BitSet(new long[]{0x0142800B00408000L,0x227500000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_stringExpression20198 = new BitSet(new long[]{0x0000000000000000L,0x0002800000000000L});
    public static final BitSet FOLLOW_STRING_END_in_stringExpression20225 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArguments20263 = new BitSet(new long[]{0x1000000000000000L,0x200008000500000DL});
    public static final BitSet FOLLOW_variance_in_typeArguments20303 = new BitSet(new long[]{0x0000000001000000L,0x200008000400000DL});
    public static final BitSet FOLLOW_type_in_typeArguments20343 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_typeArguments20394 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_COMMA_in_typeArguments20440 = new BitSet(new long[]{0x1000000001000000L,0x200008000500000DL});
    public static final BitSet FOLLOW_variance_in_typeArguments20480 = new BitSet(new long[]{0x0000000001000000L,0x200008000400000DL});
    public static final BitSet FOLLOW_type_in_typeArguments20526 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_typeArguments20617 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeArguments20703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_variadicType20751 = new BitSet(new long[]{0x0000000000000002L,0x0010000020000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_variadicType20777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUM_OP_in_variadicType20805 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_variadicType20834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_defaultedType20880 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_defaultedType20906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_defaultedType20933 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_spreadType20971 = new BitSet(new long[]{0x0000000000000002L,0x200008000400000CL});
    public static final BitSet FOLLOW_unionType_in_spreadType20999 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tupleType21039 = new BitSet(new long[]{0x0000000000000000L,0x200008022400000CL});
    public static final BitSet FOLLOW_spreadType_in_tupleType21067 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_defaultedType_in_tupleType21097 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_COMMA_in_tupleType21131 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_defaultedType_in_tupleType21157 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_tupleType21197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_groupedType21226 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_groupedType21244 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_groupedType21260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_iterableType21288 = new BitSet(new long[]{0x0000000000000000L,0x200008010400000CL});
    public static final BitSet FOLLOW_variadicType_in_iterableType21313 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_iterableType21337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_type21375 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_ENTRY_OP_in_type21401 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_unionType_in_type21435 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionType_in_unionType21500 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_unionType21541 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_intersectionType_in_unionType21581 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_primaryType_in_intersectionType21671 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_intersectionType21712 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_primaryType_in_intersectionType21752 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_qualifiedType_in_atomicType21831 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tupleType_in_atomicType21848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_iterableType_in_atomicType21865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_atomicType_in_primaryType21906 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_OPTIONAL_in_primaryType21932 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_LBRACKET_in_primaryType21953 = new BitSet(new long[]{0x0000000000000000L,0x0000000200008000L});
    public static final BitSet FOLLOW_NATURAL_LITERAL_in_primaryType21985 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_primaryType22019 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_LPAREN_in_primaryType22040 = new BitSet(new long[]{0x0000000000000000L,0x200008202400000CL});
    public static final BitSet FOLLOW_spreadType_in_primaryType22078 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_defaultedType_in_primaryType22120 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_primaryType22164 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_defaultedType_in_primaryType22198 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_primaryType22252 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_baseType22310 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_groupedType_in_baseType22332 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_baseType22348 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_baseType22364 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_baseType22382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_baseType_in_qualifiedType22411 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_qualifiedType22437 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_qualifiedType22449 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_typeName_in_typeNameWithArguments22489 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_typeNameWithArguments22516 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotations22580 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotation_in_annotations22619 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotationName_in_annotation22660 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000104L});
    public static final BitSet FOLLOW_positionalArguments_in_annotation22683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArguments_in_annotation22712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotation_in_compilerAnnotations22816 = new BitSet(new long[]{0x0000000004000002L});
    public static final BitSet FOLLOW_COMPILER_ANNOTATION_in_compilerAnnotation22856 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotationName_in_compilerAnnotation22873 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_compilerAnnotation22903 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_stringLiteral_in_compilerAnnotation22915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_conditions22957 = new BitSet(new long[]{0x2142840B00408000L,0x227500A0061A813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_condition_in_conditions22983 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_conditions23003 = new BitSet(new long[]{0x2142840B01408000L,0x227500A0061A813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_condition_in_conditions23038 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_conditions23100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_existsCondition_in_condition23129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonemptyCondition_in_condition23145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_isCondition_in_condition23161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_satisfiesCondition_in_condition23178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_booleanCondition_in_condition23194 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_booleanCondition23235 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_existsCondition23278 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_EXISTS_in_existsCondition23305 = new BitSet(new long[]{0x0102800B04408000L,0x223508000618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_letVariable_in_existsCondition23363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_existsCondition23397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_existsCondition23417 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_nonemptyCondition23470 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_NONEMPTY_in_nonemptyCondition23497 = new BitSet(new long[]{0x0102800B04408000L,0x223508000618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_letVariable_in_nonemptyCondition23555 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_nonemptyCondition23589 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_nonemptyCondition23610 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_isCondition23659 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_IS_OP_in_isCondition23686 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_isCondition23703 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_isConditionVariable_in_isCondition23747 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_isCondition23775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_isConditionVariable23824 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_isConditionVariable23840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiesCondition23869 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_satisfiesCondition23886 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeName_in_satisfiesCondition23903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifElse_in_controlStatement23932 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchCaseElse_in_controlStatement23949 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_whileLoop_in_controlStatement23966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forElse_in_controlStatement23983 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tryCatchFinally_in_controlStatement24000 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dynamic_in_controlStatement24016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_controlBlock24054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_dynamic24120 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_dynamic24137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifBlock_in_ifElse24174 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_elseBlock_in_ifElse24202 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_ifBlock24242 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_ifBlock24259 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_ifBlock24275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_elseBlock24304 = new BitSet(new long[]{0x0040000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_elseIf_in_elseBlock24331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_elseBlock24361 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifElse_in_elseIf24400 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchHeader_in_switchCaseElse24437 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_cases_in_switchCaseElse24454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SWITCH_CLAUSE_in_switchHeader24483 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_LPAREN_in_switchHeader24500 = new BitSet(new long[]{0x0102800B04408000L,0x223508200618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_switched_in_switchHeader24526 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_switchHeader24554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifiedVariable_in_switched24613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_switched24633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_caseBlock_in_cases24690 = new BitSet(new long[]{0x0000008000080002L});
    public static final BitSet FOLLOW_defaultCaseBlock_in_cases24727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_CLAUSE_in_caseBlock24771 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_caseItemList_in_caseBlock24788 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_caseBlock24804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_defaultCaseBlock24833 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_defaultCaseBlock24850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_caseItemList24879 = new BitSet(new long[]{0x2100800B00408000L,0x223500A00610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_caseItem_in_caseItemList24900 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_caseItemList24927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_isCaseCondition_in_caseItem24961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_satisfiesCaseCondition_in_caseItem24982 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_matchCaseCondition_in_caseItem24998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_valueCaseList_in_matchCaseCondition25027 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_isCaseCondition25056 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_isCaseCondition25073 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiesCaseCondition25102 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_satisfiesCaseCondition25119 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forBlock_in_forElse25156 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_failBlock_in_forElse25183 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_forBlock25223 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_forIterator_in_forBlock25240 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_forBlock25257 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_failBlock25286 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_failBlock25303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_forIterator25341 = new BitSet(new long[]{0x0002000004000000L,0x200008200400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_pattern_in_forIterator25382 = new BitSet(new long[]{0x1000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_variable_in_forIterator25413 = new BitSet(new long[]{0x1000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_containment_in_forIterator25453 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_forIterator25489 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_containment25521 = new BitSet(new long[]{0x0100800B00408002L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_containment25539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_whileBlock_in_whileLoop25582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_WHILE_CLAUSE_in_whileBlock25611 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_whileBlock25627 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_whileBlock25643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tryBlock_in_tryCatchFinally25680 = new BitSet(new long[]{0x0000400000200002L});
    public static final BitSet FOLLOW_catchBlock_in_tryCatchFinally25707 = new BitSet(new long[]{0x0000400000200002L});
    public static final BitSet FOLLOW_finallyBlock_in_tryCatchFinally25746 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TRY_CLAUSE_in_tryBlock25786 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000104L});
    public static final BitSet FOLLOW_resources_in_tryBlock25813 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_tryBlock25833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_tryBlock25861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CATCH_CLAUSE_in_catchBlock25900 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_catchVariable_in_catchBlock25917 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_catchBlock25933 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_catchVariable25962 = new BitSet(new long[]{0x0002000004000000L,0x200008200400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variable_in_catchVariable25987 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_catchVariable26013 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FINALLY_CLAUSE_in_finallyBlock26044 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_finallyBlock26061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_resources26090 = new BitSet(new long[]{0x0102800B04408000L,0x223508200618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_resource_in_resources26116 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_resources26147 = new BitSet(new long[]{0x0102800B04408000L,0x223508000618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_resource_in_resources26172 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_resources26208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifiedVariable_in_resource26269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_resource26292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_specifiedVariable26323 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_specifiedVariable26350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_variable26390 = new BitSet(new long[]{0x0002000000000000L,0x200008000400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_var_in_variable26398 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_var26458 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_var26488 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_var26517 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_var26546 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_var26574 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_var26604 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_memberName_in_var26648 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_var26676 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_memberName_in_impliedVariable26716 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_referencePathElement26746 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_referencePathElement26763 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_referencePathElement_in_referencePath26808 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_PACKAGE_in_referencePath26838 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_referencePath26858 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_referencePathElement_in_referencePath26878 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_referencePath26915 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_referencePathElement_in_referencePath26927 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MODULE_in_moduleLiteral26965 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_moduleLiteral26984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_packageLiteral27012 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_packageLiteral27031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_classLiteral27059 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_classLiteral27078 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_interfaceLiteral27106 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_interfaceLiteral27125 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_newLiteral27153 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_newLiteral27172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALIAS_in_aliasLiteral27200 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_aliasLiteral27219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TYPE_CONSTRAINT_in_typeParameterLiteral27247 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_typeParameterLiteral27266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_valueLiteral27303 = new BitSet(new long[]{0x0000000000000000L,0x2000000004000020L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_valueLiteral27325 = new BitSet(new long[]{0x0000000000000000L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_valueLiteral27347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_functionLiteral27370 = new BitSet(new long[]{0x0000000000000000L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_functionLiteral27384 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_memberPathElement27409 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_memberPathElement27435 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberPathElement_in_memberModelExpression27498 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_memberModelExpression27521 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_memberModelExpression27539 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberPathElement_in_memberModelExpression27557 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primaryType_in_memberModelExpression27582 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_memberModelExpression27600 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberPathElement_in_memberModelExpression27618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typeModelExpression27657 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberModelExpression_in_modelExpression27709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeModelExpression_in_modelExpression27726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BACKTICK_in_metaLiteral27753 = new BitSet(new long[]{0x0202000000800080L,0x300008000411082CL,0x0000000000000002L});
    public static final BitSet FOLLOW_moduleLiteral_in_metaLiteral27770 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_packageLiteral_in_metaLiteral27807 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_classLiteral_in_metaLiteral27825 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_newLiteral_in_metaLiteral27843 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_interfaceLiteral_in_metaLiteral27861 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_aliasLiteral_in_metaLiteral27879 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_typeParameterLiteral_in_metaLiteral27897 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_valueLiteral_in_metaLiteral27915 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_functionLiteral_in_metaLiteral27933 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_modelExpression_in_metaLiteral27951 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_BACKTICK_in_metaLiteral27982 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedModuleDescriptorStart_in_synpred1_Ceylon164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedPackageDescriptorStart_in_synpred2_Ceylon207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred3_Ceylon2810 = new BitSet(new long[]{0x0202000800801080L,0x200008000411000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_synpred3_Ceylon2812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePatternStart_in_synpred4_Ceylon2885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_synpred5_Ceylon2950 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred5_Ceylon2952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_synpred6_Ceylon2988 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred6_Ceylon2990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePatternStart_in_synpred7_Ceylon3026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_synpred8_Ceylon3098 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred8_Ceylon3100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_synpred9_Ceylon3136 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred9_Ceylon3138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred10_Ceylon3427 = new BitSet(new long[]{0x0000000000000000L,0x200008002400000CL});
    public static final BitSet FOLLOW_unionType_in_synpred10_Ceylon3429 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_synpred10_Ceylon3432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_destructureStart_in_synpred11_Ceylon9050 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_synpred12_Ceylon9076 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedAssertionStart_in_synpred13_Ceylon9104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationListStart_in_synpred14_Ceylon9130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_synpred15_Ceylon9255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_synpred15_Ceylon9257 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_synpred15_Ceylon9259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unambiguousType_in_synpred16_Ceylon9434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifierParametersStart_in_synpred17_Ceylon11251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred19_Ceylon11793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousArgument_in_synpred20_Ceylon11828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeArgumentsStart_in_synpred21_Ceylon12156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeArgumentsStart_in_synpred22_Ceylon12237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_index_in_synpred23_Ceylon12465 = new BitSet(new long[]{0x0000004000000000L,0x0000020080000000L});
    public static final BitSet FOLLOW_set_in_synpred23_Ceylon12467 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred24_Ceylon12793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousArgument_in_synpred25_Ceylon12828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_synpred26_Ceylon12966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_synpred26_Ceylon12970 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_synpred26_Ceylon12972 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFEFFFFFFFFFFFFFFL,0x000000000000003FL});
    public static final BitSet FOLLOW_set_in_synpred26_Ceylon12974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_synpred27_Ceylon13149 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_synpred27_Ceylon13153 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_synpred27_Ceylon13155 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFEFFFFFFFFFFFFFFL,0x000000000000003FL});
    public static final BitSet FOLLOW_set_in_synpred27_Ceylon13157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred28_Ceylon15264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_synpred29_Ceylon15684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_synpred29_Ceylon15686 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonParametersStart_in_synpred29_Ceylon15688 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_synpred30_Ceylon15820 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred30_Ceylon15822 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred31_Ceylon15872 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_synpred32_Ceylon16926 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_synpred32_Ceylon16928 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFEFFFFFFFFFFFFFFL,0x000000000000003FL});
    public static final BitSet FOLLOW_set_in_synpred32_Ceylon16930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_synpred33_Ceylon20733 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_set_in_synpred33_Ceylon20735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_synpred34_Ceylon20864 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_synpred34_Ceylon20867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedAnnotationArgumentsStart_in_synpred35_Ceylon22700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred36_Ceylon23335 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred37_Ceylon23340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred37_Ceylon23344 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_synpred37_Ceylon23347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred37_Ceylon23349 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred38_Ceylon23393 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred39_Ceylon23527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred40_Ceylon23532 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred40_Ceylon23536 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_synpred40_Ceylon23539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred40_Ceylon23541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred41_Ceylon23585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred42_Ceylon23730 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_synpred42_Ceylon23732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_synpred43_Ceylon24048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPILER_ANNOTATION_in_synpred44_Ceylon24595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_synpred44_Ceylon24597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred44_Ceylon24599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_synpred45_Ceylon24958 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_synpred46_Ceylon24979 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred47_Ceylon25377 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPILER_ANNOTATION_in_synpred48_Ceylon26253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_synpred48_Ceylon26255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred48_Ceylon26257 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_synpred49_Ceylon27691 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_primaryType_in_synpred49_Ceylon27693 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_synpred49_Ceylon27696 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred49_Ceylon27700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_synpred50_Ceylon27789 = new BitSet(new long[]{0x0000000000008000L,0x0000000000000020L});
    public static final BitSet FOLLOW_set_in_synpred50_Ceylon27791 = new BitSet(new long[]{0x0000000000000002L});

}