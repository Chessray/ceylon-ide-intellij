// $ANTLR 3.4 /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g 2015-05-26 14:57:55
 package org.intellij.plugins.ceylon.ide.parser;
                  import com.redhat.ceylon.compiler.typechecker.tree.MissingToken;
                  import com.redhat.ceylon.compiler.typechecker.tree.Node;
                  import com.redhat.ceylon.compiler.typechecker.analyzer.Warning;
                  import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.MethodDeclaration;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.MethodDefinition;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.FunctionArgument;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.AttributeDeclaration;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.Variable;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.ClassDefinition;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.IsCase;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.ExtendedTypeExpression;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.*;

import com.redhat.ceylon.compiler.typechecker.parser.ParseError;
                
                  import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.Package; 

import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class PsiCompatibleCeylonParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "ABSTRACTED_TYPE", "ADD_SPECIFY", "AIDENTIFIER", "ALIAS", "AND_OP", "AND_SPECIFY", "ASSEMBLY", "ASSERT", "ASSIGN", "ASTRING_LITERAL", "AVERBATIM_STRING", "BACKTICK", "BREAK", "BinaryDigit", "BinaryDigits", "CASE_CLAUSE", "CASE_TYPES", "CATCH_CLAUSE", "CHAR_LITERAL", "CLASS_DEFINITION", "COMMA", "COMPARE_OP", "COMPILER_ANNOTATION", "COMPLEMENT_OP", "COMPLEMENT_SPECIFY", "COMPUTE", "CONTINUE", "CharPart", "DECREMENT_OP", "DIFFERENCE_OP", "DIVIDE_SPECIFY", "DYNAMIC", "Digit", "Digits", "ELLIPSIS", "ELSE_CLAUSE", "ENTRY_OP", "EQUAL_OP", "EXISTS", "EXTENDS", "EscapeSequence", "Exponent", "FINALLY_CLAUSE", "FLOAT_LITERAL", "FOR_CLAUSE", "FUNCTION_MODIFIER", "FractionalMagnitude", "HexDigit", "HexDigits", "IDENTICAL_OP", "IF_CLAUSE", "IMPORT", "INCREMENT_OP", "INTERFACE_DEFINITION", "INTERSECTION_OP", "INTERSECT_SPECIFY", "IN_OP", "IS_OP", "IdentifierPart", "IdentifierStart", "LARGER_OP", "LARGE_AS_OP", "LBRACE", "LBRACKET", "LET", "LIDENTIFIER", "LINE_COMMENT", "LIdentifierPrefix", "LPAREN", "Letter", "MEMBER_OP", "MODULE", "MULTIPLY_SPECIFY", "MULTI_COMMENT", "Magnitude", "NATURAL_LITERAL", "NEW", "NONEMPTY", "NOT_EQUAL_OP", "NOT_OP", "OBJECT_DEFINITION", "OPTIONAL", "OR_OP", "OR_SPECIFY", "OUT", "OUTER", "PACKAGE", "PIDENTIFIER", "POWER_OP", "PRODUCT_OP", "QUOTIENT_OP", "RANGE_OP", "RBRACE", "RBRACKET", "REMAINDER_OP", "REMAINDER_SPECIFY", "RETURN", "RPAREN", "SAFE_MEMBER_OP", "SATISFIES", "SCALE_OP", "SEGMENT_OP", "SEMICOLON", "SMALLER_OP", "SMALL_AS_OP", "SPECIFY", "SPREAD_OP", "STRING_END", "STRING_LITERAL", "STRING_MID", "STRING_START", "SUBTRACT_SPECIFY", "SUM_OP", "SUPER", "SWITCH_CLAUSE", "StringPart", "THEN_CLAUSE", "THIS", "THROW", "TRY_CLAUSE", "TYPE_CONSTRAINT", "UIDENTIFIER", "UIdentifierPrefix", "UNION_OP", "UNION_SPECIFY", "VALUE_MODIFIER", "VERBATIM_STRING", "VOID_MODIFIER", "WHILE_CLAUSE", "WS"
    };

    public static final int EOF=-1;
    public static final int ABSTRACTED_TYPE=4;
    public static final int ADD_SPECIFY=5;
    public static final int AIDENTIFIER=6;
    public static final int ALIAS=7;
    public static final int AND_OP=8;
    public static final int AND_SPECIFY=9;
    public static final int ASSEMBLY=10;
    public static final int ASSERT=11;
    public static final int ASSIGN=12;
    public static final int ASTRING_LITERAL=13;
    public static final int AVERBATIM_STRING=14;
    public static final int BACKTICK=15;
    public static final int BREAK=16;
    public static final int BinaryDigit=17;
    public static final int BinaryDigits=18;
    public static final int CASE_CLAUSE=19;
    public static final int CASE_TYPES=20;
    public static final int CATCH_CLAUSE=21;
    public static final int CHAR_LITERAL=22;
    public static final int CLASS_DEFINITION=23;
    public static final int COMMA=24;
    public static final int COMPARE_OP=25;
    public static final int COMPILER_ANNOTATION=26;
    public static final int COMPLEMENT_OP=27;
    public static final int COMPLEMENT_SPECIFY=28;
    public static final int COMPUTE=29;
    public static final int CONTINUE=30;
    public static final int CharPart=31;
    public static final int DECREMENT_OP=32;
    public static final int DIFFERENCE_OP=33;
    public static final int DIVIDE_SPECIFY=34;
    public static final int DYNAMIC=35;
    public static final int Digit=36;
    public static final int Digits=37;
    public static final int ELLIPSIS=38;
    public static final int ELSE_CLAUSE=39;
    public static final int ENTRY_OP=40;
    public static final int EQUAL_OP=41;
    public static final int EXISTS=42;
    public static final int EXTENDS=43;
    public static final int EscapeSequence=44;
    public static final int Exponent=45;
    public static final int FINALLY_CLAUSE=46;
    public static final int FLOAT_LITERAL=47;
    public static final int FOR_CLAUSE=48;
    public static final int FUNCTION_MODIFIER=49;
    public static final int FractionalMagnitude=50;
    public static final int HexDigit=51;
    public static final int HexDigits=52;
    public static final int IDENTICAL_OP=53;
    public static final int IF_CLAUSE=54;
    public static final int IMPORT=55;
    public static final int INCREMENT_OP=56;
    public static final int INTERFACE_DEFINITION=57;
    public static final int INTERSECTION_OP=58;
    public static final int INTERSECT_SPECIFY=59;
    public static final int IN_OP=60;
    public static final int IS_OP=61;
    public static final int IdentifierPart=62;
    public static final int IdentifierStart=63;
    public static final int LARGER_OP=64;
    public static final int LARGE_AS_OP=65;
    public static final int LBRACE=66;
    public static final int LBRACKET=67;
    public static final int LET=68;
    public static final int LIDENTIFIER=69;
    public static final int LINE_COMMENT=70;
    public static final int LIdentifierPrefix=71;
    public static final int LPAREN=72;
    public static final int Letter=73;
    public static final int MEMBER_OP=74;
    public static final int MODULE=75;
    public static final int MULTIPLY_SPECIFY=76;
    public static final int MULTI_COMMENT=77;
    public static final int Magnitude=78;
    public static final int NATURAL_LITERAL=79;
    public static final int NEW=80;
    public static final int NONEMPTY=81;
    public static final int NOT_EQUAL_OP=82;
    public static final int NOT_OP=83;
    public static final int OBJECT_DEFINITION=84;
    public static final int OPTIONAL=85;
    public static final int OR_OP=86;
    public static final int OR_SPECIFY=87;
    public static final int OUT=88;
    public static final int OUTER=89;
    public static final int PACKAGE=90;
    public static final int PIDENTIFIER=91;
    public static final int POWER_OP=92;
    public static final int PRODUCT_OP=93;
    public static final int QUOTIENT_OP=94;
    public static final int RANGE_OP=95;
    public static final int RBRACE=96;
    public static final int RBRACKET=97;
    public static final int REMAINDER_OP=98;
    public static final int REMAINDER_SPECIFY=99;
    public static final int RETURN=100;
    public static final int RPAREN=101;
    public static final int SAFE_MEMBER_OP=102;
    public static final int SATISFIES=103;
    public static final int SCALE_OP=104;
    public static final int SEGMENT_OP=105;
    public static final int SEMICOLON=106;
    public static final int SMALLER_OP=107;
    public static final int SMALL_AS_OP=108;
    public static final int SPECIFY=109;
    public static final int SPREAD_OP=110;
    public static final int STRING_END=111;
    public static final int STRING_LITERAL=112;
    public static final int STRING_MID=113;
    public static final int STRING_START=114;
    public static final int SUBTRACT_SPECIFY=115;
    public static final int SUM_OP=116;
    public static final int SUPER=117;
    public static final int SWITCH_CLAUSE=118;
    public static final int StringPart=119;
    public static final int THEN_CLAUSE=120;
    public static final int THIS=121;
    public static final int THROW=122;
    public static final int TRY_CLAUSE=123;
    public static final int TYPE_CONSTRAINT=124;
    public static final int UIDENTIFIER=125;
    public static final int UIdentifierPrefix=126;
    public static final int UNION_OP=127;
    public static final int UNION_SPECIFY=128;
    public static final int VALUE_MODIFIER=129;
    public static final int VERBATIM_STRING=130;
    public static final int VOID_MODIFIER=131;
    public static final int WHILE_CLAUSE=132;
    public static final int WS=133;

    // delegates
    public Parser[] getDelegates() {
        return new Parser[] {};
    }

    // delegators


    public PsiCompatibleCeylonParser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public PsiCompatibleCeylonParser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
        this.state.ruleMemo = new HashMap[318+1];
         

    }

    public String[] getTokenNames() { return PsiCompatibleCeylonParser.tokenNames; }
    public String getGrammarFileName() { return "/Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g"; }


        private java.util.List<ParseError> errors 
                = new java.util.ArrayList<ParseError>();

        public ParseError newParseError(String[] tn,
                RecognitionException re) {
            ParseError parseError = new ParseError(this, re, expecting, tn);
            expecting = -1;
            return parseError;
        }
        
        public ParseError newParseError(String[] tn, 
                RecognitionException re,
                int code) {
            ParseError parseError = new ParseError(this, re, tn, code);
            return parseError;
        }

        @Override public void displayRecognitionError(String[] tn,
                RecognitionException re) {
            errors.add(newParseError(tn, re));
        }
        public void displayRecognitionError(String[] tn,
                RecognitionException re, 
                int code) {
            errors.add(newParseError(tn, re, code));
        }
        public java.util.List<ParseError> getErrors() {
            return errors;
        }
        int expecting=-1;
      @Override
      protected Object getMissingSymbol(IntStream input,
                        RecognitionException e,
                        int expectedTokenType,
                        BitSet follow)
      {
        String tokenText;
        if ( expectedTokenType==Token.EOF ) tokenText = "<missing EOF>";
        else tokenText = "<missing "+getTokenNames()[expectedTokenType]+">";
        MissingToken t = new MissingToken(expectedTokenType, tokenText);
        Token current = ((TokenStream)input).LT(1);
        if ( current.getType() == Token.EOF ) {
          current = ((TokenStream)input).LT(-1);
        }
        t.setLine(current.getLine());
        t.setCharPositionInLine(current.getCharPositionInLine());
        t.setChannel(DEFAULT_TOKEN_CHANNEL);
        t.setInputStream(current.getInputStream());
        return t;
      }



    // $ANTLR start "compilationUnit"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:81:1: compilationUnit returns [CompilationUnit compilationUnit] : (ca= compilerAnnotations SEMICOLON )? ( importDeclaration | ( annotatedModuleDescriptorStart )=> moduleDescriptor | ( annotatedPackageDescriptorStart )=> packageDescriptor | toplevelDeclaration | RBRACE )* EOF ;
    public CompilationUnit compilationUnit() throws RecognitionException {
        CompilationUnit compilationUnit = null;


        List<CompilerAnnotation> ca =null;

        Import importDeclaration1 =null;

        ModuleDescriptor moduleDescriptor2 =null;

        PackageDescriptor packageDescriptor3 =null;

        Declaration toplevelDeclaration4 =null;


         compilationUnit = new CompilationUnit(null);
                    ImportList importList = new ImportList(null); 
                    compilationUnit.setImportList(importList); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:85:5: ( (ca= compilerAnnotations SEMICOLON )? ( importDeclaration | ( annotatedModuleDescriptorStart )=> moduleDescriptor | ( annotatedPackageDescriptorStart )=> packageDescriptor | toplevelDeclaration | RBRACE )* EOF )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:85:7: (ca= compilerAnnotations SEMICOLON )? ( importDeclaration | ( annotatedModuleDescriptorStart )=> moduleDescriptor | ( annotatedPackageDescriptorStart )=> packageDescriptor | toplevelDeclaration | RBRACE )* EOF
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:85:7: (ca= compilerAnnotations SEMICOLON )?
            int alt1=2;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:86:9: ca= compilerAnnotations SEMICOLON
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_compilationUnit86);
                    ca=compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return compilationUnit;

                    match(input,SEMICOLON,FOLLOW_SEMICOLON_in_compilationUnit96); if (state.failed) return compilationUnit;

                    if ( state.backtracking==0 ) { compilationUnit.getCompilerAnnotations().addAll(ca); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:90:7: ( importDeclaration | ( annotatedModuleDescriptorStart )=> moduleDescriptor | ( annotatedPackageDescriptorStart )=> packageDescriptor | toplevelDeclaration | RBRACE )*
            loop2:
            do {
                int alt2=6;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==IMPORT) ) {
                    alt2=1;
                }
                else if ( (LA2_0==COMPILER_ANNOTATION) ) {
                    int LA2_3 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==STRING_LITERAL) ) {
                    int LA2_4 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==VERBATIM_STRING) ) {
                    int LA2_5 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==LIDENTIFIER) ) {
                    int LA2_6 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==MODULE) && (synpred1_Ceylon())) {
                    alt2=2;
                }
                else if ( (LA2_0==PACKAGE) ) {
                    int LA2_8 = input.LA(2);

                    if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==ALIAS||LA2_0==ASSIGN||LA2_0==CLASS_DEFINITION||LA2_0==DYNAMIC||LA2_0==FUNCTION_MODIFIER||LA2_0==INTERFACE_DEFINITION||(LA2_0 >= LBRACE && LA2_0 <= LBRACKET)||LA2_0==NEW||LA2_0==OBJECT_DEFINITION||LA2_0==SMALLER_OP||LA2_0==UIDENTIFIER||LA2_0==VALUE_MODIFIER||LA2_0==VOID_MODIFIER) ) {
                    alt2=4;
                }
                else if ( (LA2_0==RBRACE) ) {
                    alt2=5;
                }


                switch (alt2) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:91:9: importDeclaration
            	    {
            	    pushFollow(FOLLOW_importDeclaration_in_compilationUnit134);
            	    importDeclaration1=importDeclaration();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { importList.addImport(importDeclaration1); 
            	              compilationUnit.connect(importList); }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:95:9: ( annotatedModuleDescriptorStart )=> moduleDescriptor
            	    {
            	    pushFollow(FOLLOW_moduleDescriptor_in_compilationUnit177);
            	    moduleDescriptor2=moduleDescriptor();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { compilationUnit.addModuleDescriptor(moduleDescriptor2); }

            	    }
            	    break;
            	case 3 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:99:9: ( annotatedPackageDescriptorStart )=> packageDescriptor
            	    {
            	    pushFollow(FOLLOW_packageDescriptor_in_compilationUnit220);
            	    packageDescriptor3=packageDescriptor();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { compilationUnit.addPackageDescriptor(packageDescriptor3); }

            	    }
            	    break;
            	case 4 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:103:9: toplevelDeclaration
            	    {
            	    pushFollow(FOLLOW_toplevelDeclaration_in_compilationUnit248);
            	    toplevelDeclaration4=toplevelDeclaration();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { if (toplevelDeclaration4!=null)
            	                  compilationUnit.addDeclaration(toplevelDeclaration4); }

            	    }
            	    break;
            	case 5 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:106:9: RBRACE
            	    {
            	    match(input,RBRACE,FOLLOW_RBRACE_in_compilationUnit268); if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
            	                  new MismatchedTokenException(EOF, input)); }

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            match(input,EOF,FOLLOW_EOF_in_compilationUnit295); if (state.failed) return compilationUnit;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return compilationUnit;
    }
    // $ANTLR end "compilationUnit"



    // $ANTLR start "toplevelDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:113:1: toplevelDeclaration returns [Declaration declaration] : ca= compilerAnnotations d= declaration ;
    public Declaration toplevelDeclaration() throws RecognitionException {
        Declaration declaration = null;


        List<CompilerAnnotation> ca =null;

        Declaration d =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:114:5: (ca= compilerAnnotations d= declaration )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:114:7: ca= compilerAnnotations d= declaration
            {
            pushFollow(FOLLOW_compilerAnnotations_in_toplevelDeclaration318);
            ca=compilerAnnotations();

            state._fsp--;
            if (state.failed) return declaration;

            pushFollow(FOLLOW_declaration_in_toplevelDeclaration329);
            d=declaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = d;
                    if (declaration!=null)
                        declaration.getCompilerAnnotations().addAll(ca); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "toplevelDeclaration"



    // $ANTLR start "annotatedModuleDescriptorStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:121:1: annotatedModuleDescriptorStart : compilerAnnotations annotations MODULE ;
    public void annotatedModuleDescriptorStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:122:5: ( compilerAnnotations annotations MODULE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:122:7: compilerAnnotations annotations MODULE
            {
            pushFollow(FOLLOW_compilerAnnotations_in_annotatedModuleDescriptorStart354);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_annotations_in_annotatedModuleDescriptorStart356);
            annotations();

            state._fsp--;
            if (state.failed) return ;

            match(input,MODULE,FOLLOW_MODULE_in_annotatedModuleDescriptorStart358); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedModuleDescriptorStart"



    // $ANTLR start "annotatedPackageDescriptorStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:125:1: annotatedPackageDescriptorStart : compilerAnnotations annotations PACKAGE ~ MEMBER_OP ;
    public void annotatedPackageDescriptorStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:126:5: ( compilerAnnotations annotations PACKAGE ~ MEMBER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:126:7: compilerAnnotations annotations PACKAGE ~ MEMBER_OP
            {
            pushFollow(FOLLOW_compilerAnnotations_in_annotatedPackageDescriptorStart375);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_annotations_in_annotatedPackageDescriptorStart377);
            annotations();

            state._fsp--;
            if (state.failed) return ;

            match(input,PACKAGE,FOLLOW_PACKAGE_in_annotatedPackageDescriptorStart379); if (state.failed) return ;

            if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= Letter)||(input.LA(1) >= MODULE && input.LA(1) <= WS) ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedPackageDescriptorStart"



    // $ANTLR start "moduleDescriptor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:129:1: moduleDescriptor returns [ModuleDescriptor moduleDescriptor] : compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList ;
    public ModuleDescriptor moduleDescriptor() throws RecognitionException {
        ModuleDescriptor moduleDescriptor = null;


        Token MODULE5=null;
        Token CHAR_LITERAL9=null;
        Token STRING_LITERAL10=null;
        AnnotationList annotations6 =null;

        List<CompilerAnnotation> compilerAnnotations7 =null;

        ImportPath packagePath8 =null;

        ImportModuleList importModuleList11 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:130:5: ( compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:130:7: compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList
            {
            pushFollow(FOLLOW_compilerAnnotations_in_moduleDescriptor403);
            compilerAnnotations7=compilerAnnotations();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            pushFollow(FOLLOW_annotations_in_moduleDescriptor405);
            annotations6=annotations();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            MODULE5=(Token)match(input,MODULE,FOLLOW_MODULE_in_moduleDescriptor413); if (state.failed) return moduleDescriptor;

            if ( state.backtracking==0 ) { moduleDescriptor = new ModuleDescriptor(MODULE5); 
                    moduleDescriptor.setAnnotationList(annotations6);
                    moduleDescriptor.getCompilerAnnotations().addAll(compilerAnnotations7); }

            pushFollow(FOLLOW_packagePath_in_moduleDescriptor430);
            packagePath8=packagePath();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            if ( state.backtracking==0 ) { moduleDescriptor.setImportPath(packagePath8); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:137:7: ( CHAR_LITERAL | STRING_LITERAL )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==CHAR_LITERAL) ) {
                alt3=1;
            }
            else if ( (LA3_0==STRING_LITERAL) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return moduleDescriptor;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;

            }
            switch (alt3) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:138:9: CHAR_LITERAL
                    {
                    CHAR_LITERAL9=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_moduleDescriptor456); if (state.failed) return moduleDescriptor;

                    if ( state.backtracking==0 ) { moduleDescriptor.setVersion(new QuotedLiteral(CHAR_LITERAL9)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:141:9: STRING_LITERAL
                    {
                    STRING_LITERAL10=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_moduleDescriptor484); if (state.failed) return moduleDescriptor;

                    if ( state.backtracking==0 ) { moduleDescriptor.setVersion(new QuotedLiteral(STRING_LITERAL10)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_importModuleList_in_moduleDescriptor510);
            importModuleList11=importModuleList();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            if ( state.backtracking==0 ) { moduleDescriptor.setImportModuleList(importModuleList11); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return moduleDescriptor;
    }
    // $ANTLR end "moduleDescriptor"



    // $ANTLR start "importModuleList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:148:1: importModuleList returns [ImportModuleList importModuleList] : LBRACE ( compilerAnnotations annotations importModule )* RBRACE ;
    public ImportModuleList importModuleList() throws RecognitionException {
        ImportModuleList importModuleList = null;


        Token LBRACE12=null;
        Token RBRACE16=null;
        ImportModule importModule13 =null;

        AnnotationList annotations14 =null;

        List<CompilerAnnotation> compilerAnnotations15 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:149:5: ( LBRACE ( compilerAnnotations annotations importModule )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:149:7: LBRACE ( compilerAnnotations annotations importModule )* RBRACE
            {
            LBRACE12=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_importModuleList539); if (state.failed) return importModuleList;

            if ( state.backtracking==0 ) { importModuleList = new ImportModuleList(LBRACE12); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:151:7: ( compilerAnnotations annotations importModule )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==ALIAS||(LA4_0 >= ASSERT && LA4_0 <= ASSIGN)||(LA4_0 >= BACKTICK && LA4_0 <= BREAK)||(LA4_0 >= CHAR_LITERAL && LA4_0 <= CLASS_DEFINITION)||LA4_0==COMPILER_ANNOTATION||LA4_0==CONTINUE||(LA4_0 >= DECREMENT_OP && LA4_0 <= DIFFERENCE_OP)||LA4_0==DYNAMIC||(LA4_0 >= FLOAT_LITERAL && LA4_0 <= FUNCTION_MODIFIER)||(LA4_0 >= IF_CLAUSE && LA4_0 <= INTERFACE_DEFINITION)||LA4_0==IN_OP||(LA4_0 >= LBRACE && LA4_0 <= LIDENTIFIER)||LA4_0==LPAREN||LA4_0==MODULE||(LA4_0 >= NATURAL_LITERAL && LA4_0 <= NEW)||(LA4_0 >= NOT_OP && LA4_0 <= OBJECT_DEFINITION)||(LA4_0 >= OUT && LA4_0 <= PACKAGE)||LA4_0==PRODUCT_OP||LA4_0==RETURN||(LA4_0 >= SEMICOLON && LA4_0 <= SMALLER_OP)||LA4_0==STRING_LITERAL||LA4_0==STRING_START||(LA4_0 >= SUM_OP && LA4_0 <= SWITCH_CLAUSE)||(LA4_0 >= THIS && LA4_0 <= UIDENTIFIER)||(LA4_0 >= VALUE_MODIFIER && LA4_0 <= WHILE_CLAUSE)) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:152:9: compilerAnnotations annotations importModule
            	    {
            	    pushFollow(FOLLOW_compilerAnnotations_in_importModuleList565);
            	    compilerAnnotations15=compilerAnnotations();

            	    state._fsp--;
            	    if (state.failed) return importModuleList;

            	    pushFollow(FOLLOW_annotations_in_importModuleList567);
            	    annotations14=annotations();

            	    state._fsp--;
            	    if (state.failed) return importModuleList;

            	    pushFollow(FOLLOW_importModule_in_importModuleList577);
            	    importModule13=importModule();

            	    state._fsp--;
            	    if (state.failed) return importModuleList;

            	    if ( state.backtracking==0 ) { if (importModule13!=null)
            	                  importModuleList.addImportModule(importModule13); 
            	              if (importModule13!=null)
            	                  importModule13.setAnnotationList(annotations14);
            	              if (importModule13!=null)
            	                  importModule13.getCompilerAnnotations().addAll(compilerAnnotations15); }

            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            RBRACE16=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_importModuleList604); if (state.failed) return importModuleList;

            if ( state.backtracking==0 ) { importModuleList.setEndToken(RBRACE16); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importModuleList;
    }
    // $ANTLR end "importModuleList"



    // $ANTLR start "packageDescriptor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:165:1: packageDescriptor returns [PackageDescriptor packageDescriptor] : compilerAnnotations annotations PACKAGE packagePath SEMICOLON ;
    public PackageDescriptor packageDescriptor() throws RecognitionException {
        PackageDescriptor packageDescriptor = null;


        Token PACKAGE17=null;
        Token SEMICOLON21=null;
        AnnotationList annotations18 =null;

        List<CompilerAnnotation> compilerAnnotations19 =null;

        ImportPath packagePath20 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:166:5: ( compilerAnnotations annotations PACKAGE packagePath SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:166:7: compilerAnnotations annotations PACKAGE packagePath SEMICOLON
            {
            pushFollow(FOLLOW_compilerAnnotations_in_packageDescriptor633);
            compilerAnnotations19=compilerAnnotations();

            state._fsp--;
            if (state.failed) return packageDescriptor;

            pushFollow(FOLLOW_annotations_in_packageDescriptor635);
            annotations18=annotations();

            state._fsp--;
            if (state.failed) return packageDescriptor;

            PACKAGE17=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_packageDescriptor643); if (state.failed) return packageDescriptor;

            if ( state.backtracking==0 ) { packageDescriptor = new PackageDescriptor(PACKAGE17); 
                    packageDescriptor.setAnnotationList(annotations18); 
                    packageDescriptor.getCompilerAnnotations().addAll(compilerAnnotations19); }

            pushFollow(FOLLOW_packagePath_in_packageDescriptor660);
            packagePath20=packagePath();

            state._fsp--;
            if (state.failed) return packageDescriptor;

            if ( state.backtracking==0 ) { packageDescriptor.setImportPath(packagePath20); 
                    expecting=SEMICOLON; }

            SEMICOLON21=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_packageDescriptor676); if (state.failed) return packageDescriptor;

            if ( state.backtracking==0 ) { packageDescriptor.setEndToken(SEMICOLON21); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return packageDescriptor;
    }
    // $ANTLR end "packageDescriptor"



    // $ANTLR start "importModule"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:179:1: importModule returns [ImportModule importModule] : IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON ;
    public ImportModule importModule() throws RecognitionException {
        ImportModule importModule = null;


        Token c1=null;
        Token s1=null;
        Token c2=null;
        Token s2=null;
        Token IMPORT22=null;
        Token SEMICOLON24=null;
        ImportPath packagePath23 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:180:5: ( IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:180:7: IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON
            {
            IMPORT22=(Token)match(input,IMPORT,FOLLOW_IMPORT_in_importModule705); if (state.failed) return importModule;

            if ( state.backtracking==0 ) { importModule = new ImportModule(IMPORT22); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:182:7: (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath )
            int alt5=3;
            switch ( input.LA(1) ) {
            case CHAR_LITERAL:
                {
                alt5=1;
                }
                break;
            case STRING_LITERAL:
                {
                alt5=2;
                }
                break;
            case LIDENTIFIER:
            case UIDENTIFIER:
                {
                alt5=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return importModule;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;

            }

            switch (alt5) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:183:9: c1= CHAR_LITERAL
                    {
                    c1=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_importModule734); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setQuotedLiteral(new QuotedLiteral(c1)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:186:9: s1= STRING_LITERAL
                    {
                    s1=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_importModule764); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setQuotedLiteral(new QuotedLiteral(s1)); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:189:9: packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_importModule792);
                    packagePath23=packagePath();

                    state._fsp--;
                    if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setImportPath(packagePath23); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:192:7: (c2= CHAR_LITERAL |s2= STRING_LITERAL )?
            int alt6=3;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==CHAR_LITERAL) ) {
                alt6=1;
            }
            else if ( (LA6_0==STRING_LITERAL) ) {
                alt6=2;
            }
            switch (alt6) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:193:9: c2= CHAR_LITERAL
                    {
                    c2=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_importModule830); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setVersion(new QuotedLiteral(c2)); 
                              expecting=SEMICOLON; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:197:9: s2= STRING_LITERAL
                    {
                    s2=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_importModule860); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setVersion(new QuotedLiteral(s2)); 
                              expecting=SEMICOLON; }

                    }
                    break;

            }


            SEMICOLON24=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_importModule887); if (state.failed) return importModule;

            if ( state.backtracking==0 ) { importModule.setEndToken(SEMICOLON24); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importModule;
    }
    // $ANTLR end "importModule"



    // $ANTLR start "importDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:206:1: importDeclaration returns [Import importDeclaration] : IMPORT ( packagePath |) importElementList ;
    public Import importDeclaration() throws RecognitionException {
        Import importDeclaration = null;


        Token IMPORT25=null;
        ImportPath packagePath26 =null;

        ImportMemberOrTypeList importElementList27 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:207:5: ( IMPORT ( packagePath |) importElementList )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:207:7: IMPORT ( packagePath |) importElementList
            {
            IMPORT25=(Token)match(input,IMPORT,FOLLOW_IMPORT_in_importDeclaration916); if (state.failed) return importDeclaration;

            if ( state.backtracking==0 ) { importDeclaration = new Import(IMPORT25); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:209:7: ( packagePath |)
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==LIDENTIFIER||LA7_0==UIDENTIFIER) ) {
                alt7=1;
            }
            else if ( (LA7_0==LBRACE) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return importDeclaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;

            }
            switch (alt7) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:210:9: packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_importDeclaration944);
                    packagePath26=packagePath();

                    state._fsp--;
                    if (state.failed) return importDeclaration;

                    if ( state.backtracking==0 ) { importDeclaration.setImportPath(packagePath26); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:212:9: 
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_importElementList_in_importDeclaration980);
            importElementList27=importElementList();

            state._fsp--;
            if (state.failed) return importDeclaration;

            if ( state.backtracking==0 ) { importDeclaration.setImportMemberOrTypeList(importElementList27); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importDeclaration;
    }
    // $ANTLR end "importDeclaration"



    // $ANTLR start "importElementList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:219:1: importElementList returns [ImportMemberOrTypeList importMemberOrTypeList] : LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE ;
    public ImportMemberOrTypeList importElementList() throws RecognitionException {
        ImportMemberOrTypeList importMemberOrTypeList = null;


        Token c1=null;
        Token LBRACE28=null;
        Token RBRACE29=null;
        ImportMemberOrType ie1 =null;

        ImportMemberOrType ie2 =null;

        ImportWildcard iw =null;


         ImportMemberOrTypeList il=null; 
                    boolean wildcarded = false; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:222:5: ( LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:223:5: LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE
            {
            LBRACE28=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_importElementList1022); if (state.failed) return importMemberOrTypeList;

            if ( state.backtracking==0 ) { il = new ImportMemberOrTypeList(LBRACE28);
                  importMemberOrTypeList = il; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:226:5: (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )?
            int alt10=3;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==ALIAS||(LA10_0 >= ASSERT && LA10_0 <= ASSIGN)||(LA10_0 >= BACKTICK && LA10_0 <= BREAK)||(LA10_0 >= CHAR_LITERAL && LA10_0 <= CLASS_DEFINITION)||LA10_0==COMPILER_ANNOTATION||LA10_0==CONTINUE||(LA10_0 >= DECREMENT_OP && LA10_0 <= DIFFERENCE_OP)||LA10_0==DYNAMIC||(LA10_0 >= FLOAT_LITERAL && LA10_0 <= FUNCTION_MODIFIER)||(LA10_0 >= IF_CLAUSE && LA10_0 <= INTERFACE_DEFINITION)||LA10_0==IN_OP||(LA10_0 >= LBRACE && LA10_0 <= LIDENTIFIER)||LA10_0==LPAREN||LA10_0==MODULE||(LA10_0 >= NATURAL_LITERAL && LA10_0 <= NEW)||(LA10_0 >= NOT_OP && LA10_0 <= OBJECT_DEFINITION)||(LA10_0 >= OUT && LA10_0 <= PACKAGE)||LA10_0==PRODUCT_OP||LA10_0==RETURN||(LA10_0 >= SEMICOLON && LA10_0 <= SMALLER_OP)||LA10_0==STRING_LITERAL||LA10_0==STRING_START||(LA10_0 >= SUM_OP && LA10_0 <= SWITCH_CLAUSE)||(LA10_0 >= THIS && LA10_0 <= UIDENTIFIER)||(LA10_0 >= VALUE_MODIFIER && LA10_0 <= WHILE_CLAUSE)) ) {
                alt10=1;
            }
            else if ( (LA10_0==ELLIPSIS) ) {
                alt10=2;
            }
            switch (alt10) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:227:7: ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )*
                    {
                    pushFollow(FOLLOW_importElement_in_importElementList1045);
                    ie1=importElement();

                    state._fsp--;
                    if (state.failed) return importMemberOrTypeList;

                    if ( state.backtracking==0 ) { if (ie1!=null)
                                il.addImportMemberOrType(ie1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:230:7: (c1= COMMA (ie2= importElement |iw= importWildcard |) )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==COMMA) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:231:9: c1= COMMA (ie2= importElement |iw= importWildcard |)
                    	    {
                    	    c1=(Token)match(input,COMMA,FOLLOW_COMMA_in_importElementList1076); if (state.failed) return importMemberOrTypeList;

                    	    if ( state.backtracking==0 ) { il.setEndToken(c1); 
                    	              if (wildcarded) 
                    	                  displayRecognitionError(getTokenNames(), 
                    	                      new MismatchedTokenException(RBRACE, input)); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:236:9: (ie2= importElement |iw= importWildcard |)
                    	    int alt8=3;
                    	    switch ( input.LA(1) ) {
                    	    case ALIAS:
                    	    case ASSERT:
                    	    case ASSIGN:
                    	    case BACKTICK:
                    	    case BREAK:
                    	    case CHAR_LITERAL:
                    	    case CLASS_DEFINITION:
                    	    case COMPILER_ANNOTATION:
                    	    case CONTINUE:
                    	    case DECREMENT_OP:
                    	    case DIFFERENCE_OP:
                    	    case DYNAMIC:
                    	    case FLOAT_LITERAL:
                    	    case FOR_CLAUSE:
                    	    case FUNCTION_MODIFIER:
                    	    case IF_CLAUSE:
                    	    case IMPORT:
                    	    case INCREMENT_OP:
                    	    case INTERFACE_DEFINITION:
                    	    case IN_OP:
                    	    case LBRACE:
                    	    case LBRACKET:
                    	    case LET:
                    	    case LIDENTIFIER:
                    	    case LPAREN:
                    	    case MODULE:
                    	    case NATURAL_LITERAL:
                    	    case NEW:
                    	    case NOT_OP:
                    	    case OBJECT_DEFINITION:
                    	    case OUT:
                    	    case OUTER:
                    	    case PACKAGE:
                    	    case PRODUCT_OP:
                    	    case RETURN:
                    	    case SEMICOLON:
                    	    case SMALLER_OP:
                    	    case STRING_LITERAL:
                    	    case STRING_START:
                    	    case SUM_OP:
                    	    case SUPER:
                    	    case SWITCH_CLAUSE:
                    	    case THIS:
                    	    case THROW:
                    	    case TRY_CLAUSE:
                    	    case TYPE_CONSTRAINT:
                    	    case UIDENTIFIER:
                    	    case VALUE_MODIFIER:
                    	    case VERBATIM_STRING:
                    	    case VOID_MODIFIER:
                    	    case WHILE_CLAUSE:
                    	        {
                    	        alt8=1;
                    	        }
                    	        break;
                    	    case ELLIPSIS:
                    	        {
                    	        alt8=2;
                    	        }
                    	        break;
                    	    case COMMA:
                    	    case RBRACE:
                    	        {
                    	        alt8=3;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return importMemberOrTypeList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 8, 0, input);

                    	        throw nvae;

                    	    }

                    	    switch (alt8) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:237:11: ie2= importElement
                    	            {
                    	            pushFollow(FOLLOW_importElement_in_importElementList1111);
                    	            ie2=importElement();

                    	            state._fsp--;
                    	            if (state.failed) return importMemberOrTypeList;

                    	            if ( state.backtracking==0 ) { if (ie2!=null)
                    	                            il.addImportMemberOrType(ie2);
                    	                        if (ie2!=null)
                    	                            il.setEndToken(null); }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:242:11: iw= importWildcard
                    	            {
                    	            pushFollow(FOLLOW_importWildcard_in_importElementList1139);
                    	            iw=importWildcard();

                    	            state._fsp--;
                    	            if (state.failed) return importMemberOrTypeList;

                    	            if ( state.backtracking==0 ) { wildcarded = true;
                    	                        if (iw!=null) 
                    	                            il.setImportWildcard(iw); 
                    	                        if (iw!=null) 
                    	                            il.setEndToken(null); }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:248:11: 
                    	            {
                    	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                            new MismatchedTokenException(ELLIPSIS, input)); }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:252:7: iw= importWildcard
                    {
                    pushFollow(FOLLOW_importWildcard_in_importElementList1193);
                    iw=importWildcard();

                    state._fsp--;
                    if (state.failed) return importMemberOrTypeList;

                    if ( state.backtracking==0 ) { il.setImportWildcard(iw); }

                    }
                    break;

            }


            RBRACE29=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_importElementList1208); if (state.failed) return importMemberOrTypeList;

            if ( state.backtracking==0 ) { il.setEndToken(RBRACE29); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importMemberOrTypeList;
    }
    // $ANTLR end "importElementList"



    // $ANTLR start "importElement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:258:1: importElement returns [ImportMemberOrType importMemberOrType] : compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? ) ;
    public ImportMemberOrType importElement() throws RecognitionException {
        ImportMemberOrType importMemberOrType = null;


        Token SPECIFY30=null;
        Identifier in1 =null;

        Identifier in2 =null;

        ImportMemberOrTypeList iel2 =null;

        List<CompilerAnnotation> compilerAnnotations31 =null;


         Alias alias = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:260:5: ( compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:260:7: compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_importElement1244);
            compilerAnnotations31=compilerAnnotations();

            state._fsp--;
            if (state.failed) return importMemberOrType;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:261:5: (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:261:7: in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )?
            {
            pushFollow(FOLLOW_importName_in_importElement1254);
            in1=importName();

            state._fsp--;
            if (state.failed) return importMemberOrType;

            if ( state.backtracking==0 ) { importMemberOrType = new ImportMember(null);
                    importMemberOrType.setIdentifier(in1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:264:7: ( SPECIFY (in2= importName |) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==SPECIFY) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:264:9: SPECIFY (in2= importName |)
                    {
                    SPECIFY30=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_importElement1273); if (state.failed) return importMemberOrType;

                    if ( state.backtracking==0 ) { alias = new Alias(SPECIFY30);
                              alias.setIdentifier(in1);
                              importMemberOrType.setAlias(alias); 
                              importMemberOrType.setIdentifier(null); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:269:9: (in2= importName |)
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==LIDENTIFIER||LA11_0==UIDENTIFIER) ) {
                        alt11=1;
                    }
                    else if ( (LA11_0==COMMA||LA11_0==LBRACE||LA11_0==RBRACE) ) {
                        alt11=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return importMemberOrType;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 11, 0, input);

                        throw nvae;

                    }
                    switch (alt11) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:270:11: in2= importName
                            {
                            pushFollow(FOLLOW_importName_in_importElement1307);
                            in2=importName();

                            state._fsp--;
                            if (state.failed) return importMemberOrType;

                            if ( state.backtracking==0 ) { importMemberOrType.setIdentifier(in2); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:272:11: 
                            {
                            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                              new MismatchedTokenException(in1.getToken().getType(), input)); }

                            }
                            break;

                    }


                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:276:7: (iel2= importElementList )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==LBRACE) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:277:9: iel2= importElementList
                    {
                    pushFollow(FOLLOW_importElementList_in_importElement1371);
                    iel2=importElementList();

                    state._fsp--;
                    if (state.failed) return importMemberOrType;

                    if ( state.backtracking==0 ) { importMemberOrType.setImportMemberOrTypeList(iel2); }

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) { if (importMemberOrType!=null)
                    importMemberOrType.getCompilerAnnotations().addAll(compilerAnnotations31); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importMemberOrType;
    }
    // $ANTLR end "importElement"



    // $ANTLR start "importWildcard"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:285:1: importWildcard returns [ImportWildcard importWildcard] : ELLIPSIS ;
    public ImportWildcard importWildcard() throws RecognitionException {
        ImportWildcard importWildcard = null;


        Token ELLIPSIS32=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:286:5: ( ELLIPSIS )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:286:7: ELLIPSIS
            {
            ELLIPSIS32=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_importWildcard1423); if (state.failed) return importWildcard;

            if ( state.backtracking==0 ) { importWildcard = new ImportWildcard(ELLIPSIS32); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importWildcard;
    }
    // $ANTLR end "importWildcard"



    // $ANTLR start "importName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:290:1: importName returns [Identifier identifier] : ( memberName | typeName );
    public Identifier importName() throws RecognitionException {
        Identifier identifier = null;


        Identifier memberName33 =null;

        Identifier typeName34 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:291:5: ( memberName | typeName )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==LIDENTIFIER) ) {
                alt14=1;
            }
            else if ( (LA14_0==UIDENTIFIER) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;

            }
            switch (alt14) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:291:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_importName1452);
                    memberName33=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =memberName33; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:292:7: typeName
                    {
                    pushFollow(FOLLOW_typeName_in_importName1462);
                    typeName34=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =typeName34; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "importName"



    // $ANTLR start "packagePath"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:295:1: packagePath returns [ImportPath importPath] : pn1= packageName (m= MEMBER_OP (pn2= packageName |) )* ;
    public ImportPath packagePath() throws RecognitionException {
        ImportPath importPath = null;


        Token m=null;
        Identifier pn1 =null;

        Identifier pn2 =null;


         importPath = new ImportPath(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:297:5: (pn1= packageName (m= MEMBER_OP (pn2= packageName |) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:297:7: pn1= packageName (m= MEMBER_OP (pn2= packageName |) )*
            {
            pushFollow(FOLLOW_packageName_in_packagePath1496);
            pn1=packageName();

            state._fsp--;
            if (state.failed) return importPath;

            if ( state.backtracking==0 ) { if (pn1!=null) 
                        importPath.addIdentifier(pn1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:300:7: (m= MEMBER_OP (pn2= packageName |) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==MEMBER_OP) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:301:9: m= MEMBER_OP (pn2= packageName |)
            	    {
            	    m=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_packagePath1527); if (state.failed) return importPath;

            	    if ( state.backtracking==0 ) { importPath.setEndToken(m); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:303:9: (pn2= packageName |)
            	    int alt15=2;
            	    int LA15_0 = input.LA(1);

            	    if ( (LA15_0==LIDENTIFIER||LA15_0==UIDENTIFIER) ) {
            	        alt15=1;
            	    }
            	    else if ( (LA15_0==BACKTICK||LA15_0==CHAR_LITERAL||LA15_0==LBRACE||LA15_0==MEMBER_OP||LA15_0==SEMICOLON||LA15_0==STRING_LITERAL) ) {
            	        alt15=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return importPath;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 15, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt15) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:304:11: pn2= packageName
            	            {
            	            pushFollow(FOLLOW_packageName_in_packagePath1562);
            	            pn2=packageName();

            	            state._fsp--;
            	            if (state.failed) return importPath;

            	            if ( state.backtracking==0 ) { importPath.addIdentifier(pn2); 
            	                        importPath.setEndToken(null); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:307:11: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                            new MismatchedTokenException(LIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importPath;
    }
    // $ANTLR end "packagePath"



    // $ANTLR start "packageName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:313:1: packageName returns [Identifier identifier] : ( LIDENTIFIER | UIDENTIFIER );
    public Identifier packageName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER35=null;
        Token UIDENTIFIER36=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:314:5: ( LIDENTIFIER | UIDENTIFIER )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==LIDENTIFIER) ) {
                alt17=1;
            }
            else if ( (LA17_0==UIDENTIFIER) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;

            }
            switch (alt17) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:314:7: LIDENTIFIER
                    {
                    LIDENTIFIER35=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_packageName1627); if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER35);
                            LIDENTIFIER35.setType(PIDENTIFIER);}

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:317:7: UIDENTIFIER
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                  new MismatchedTokenException(LIDENTIFIER, input), 5001); }

                    UIDENTIFIER36=(Token)match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_packageName1651); if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = new Identifier(UIDENTIFIER36);
                            UIDENTIFIER36.setType(PIDENTIFIER);}

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "packageName"



    // $ANTLR start "typeName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:324:1: typeName returns [Identifier identifier] : UIDENTIFIER ;
    public Identifier typeName() throws RecognitionException {
        Identifier identifier = null;


        Token UIDENTIFIER37=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:325:5: ( UIDENTIFIER )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:325:7: UIDENTIFIER
            {
            UIDENTIFIER37=(Token)match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_typeName1680); if (state.failed) return identifier;

            if ( state.backtracking==0 ) { identifier = new Identifier(UIDENTIFIER37); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "typeName"



    // $ANTLR start "annotationName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:329:1: annotationName returns [Identifier identifier] : LIDENTIFIER ;
    public Identifier annotationName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER38=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:330:5: ( LIDENTIFIER )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:330:7: LIDENTIFIER
            {
            LIDENTIFIER38=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_annotationName1709); if (state.failed) return identifier;

            if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER38); 
                    LIDENTIFIER38.setType(AIDENTIFIER); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "annotationName"



    // $ANTLR start "memberName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:335:1: memberName returns [Identifier identifier] : LIDENTIFIER ;
    public Identifier memberName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER39=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:336:5: ( LIDENTIFIER )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:336:7: LIDENTIFIER
            {
            LIDENTIFIER39=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_memberName1738); if (state.failed) return identifier;

            if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER39); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "memberName"



    // $ANTLR start "memberNameDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:340:1: memberNameDeclaration returns [Identifier identifier] : ( memberName | typeName );
    public Identifier memberNameDeclaration() throws RecognitionException {
        Identifier identifier = null;


        Identifier memberName40 =null;

        Identifier typeName41 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:341:5: ( memberName | typeName )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==LIDENTIFIER) ) {
                alt18=1;
            }
            else if ( (LA18_0==UIDENTIFIER) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;

            }
            switch (alt18) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:341:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_memberNameDeclaration1771);
                    memberName40=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = memberName40; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:342:7: typeName
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LIDENTIFIER, input), 5001); }

                    pushFollow(FOLLOW_typeName_in_memberNameDeclaration1789);
                    typeName41=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = typeName41; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "memberNameDeclaration"



    // $ANTLR start "typeNameDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:348:1: typeNameDeclaration returns [Identifier identifier] : ( typeName | memberName );
    public Identifier typeNameDeclaration() throws RecognitionException {
        Identifier identifier = null;


        Identifier typeName42 =null;

        Identifier memberName43 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:349:5: ( typeName | memberName )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==UIDENTIFIER) ) {
                alt19=1;
            }
            else if ( (LA19_0==LIDENTIFIER) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;

            }
            switch (alt19) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:349:7: typeName
                    {
                    pushFollow(FOLLOW_typeName_in_typeNameDeclaration1819);
                    typeName42=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = typeName42; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:350:7: memberName
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(UIDENTIFIER, input), 5002); }

                    pushFollow(FOLLOW_memberName_in_typeNameDeclaration1837);
                    memberName43=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = memberName43; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "typeNameDeclaration"



    // $ANTLR start "objectDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:356:1: objectDeclaration returns [ObjectDefinition declaration] : OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) ;
    public ObjectDefinition objectDeclaration() throws RecognitionException {
        ObjectDefinition declaration = null;


        Token OBJECT_DEFINITION44=null;
        Token SEMICOLON49=null;
        Identifier memberNameDeclaration45 =null;

        ExtendedType extendedType46 =null;

        SatisfiedTypes satisfiedTypes47 =null;

        ClassBody classBody48 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:357:5: ( OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:357:7: OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON )
            {
            OBJECT_DEFINITION44=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_objectDeclaration1867); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new ObjectDefinition(OBJECT_DEFINITION44); 
                    declaration.setType(new ValueModifier(null)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:360:7: ( memberNameDeclaration )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==LIDENTIFIER||LA20_0==UIDENTIFIER) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:361:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_objectDeclaration1893);
                    memberNameDeclaration45=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration45); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:364:7: ( extendedType )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==EXTENDS) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:365:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_objectDeclaration1931);
                    extendedType46=extendedType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setExtendedType(extendedType46); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:368:7: ( satisfiedTypes )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==SATISFIES) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:369:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_objectDeclaration1970);
                    satisfiedTypes47=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setSatisfiedTypes(satisfiedTypes47); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:372:7: ( classBody | SEMICOLON )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==LBRACE) ) {
                alt23=1;
            }
            else if ( (LA23_0==SEMICOLON) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;

            }
            switch (alt23) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:373:9: classBody
                    {
                    pushFollow(FOLLOW_classBody_in_objectDeclaration2008);
                    classBody48=classBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setClassBody(classBody48); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:375:9: SEMICOLON
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LBRACE, input)); }

                    SEMICOLON49=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_objectDeclaration2038); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON49); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "objectDeclaration"



    // $ANTLR start "objectExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:382:1: objectExpression returns [ObjectExpression objectExpression] : OBJECT_DEFINITION ( extendedType )? ( satisfiedTypes )? classBody ;
    public ObjectExpression objectExpression() throws RecognitionException {
        ObjectExpression objectExpression = null;


        Token OBJECT_DEFINITION50=null;
        ExtendedType extendedType51 =null;

        SatisfiedTypes satisfiedTypes52 =null;

        ClassBody classBody53 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:383:5: ( OBJECT_DEFINITION ( extendedType )? ( satisfiedTypes )? classBody )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:383:7: OBJECT_DEFINITION ( extendedType )? ( satisfiedTypes )? classBody
            {
            OBJECT_DEFINITION50=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_objectExpression2077); if (state.failed) return objectExpression;

            if ( state.backtracking==0 ) { objectExpression = new ObjectExpression(OBJECT_DEFINITION50); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:385:7: ( extendedType )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==EXTENDS) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:386:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_objectExpression2104);
                    extendedType51=extendedType();

                    state._fsp--;
                    if (state.failed) return objectExpression;

                    if ( state.backtracking==0 ) { objectExpression.setExtendedType(extendedType51); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:389:7: ( satisfiedTypes )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==SATISFIES) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:390:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_objectExpression2143);
                    satisfiedTypes52=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return objectExpression;

                    if ( state.backtracking==0 ) { objectExpression.setSatisfiedTypes(satisfiedTypes52); }

                    }
                    break;

            }


            pushFollow(FOLLOW_classBody_in_objectExpression2171);
            classBody53=classBody();

            state._fsp--;
            if (state.failed) return objectExpression;

            if ( state.backtracking==0 ) { objectExpression.setClassBody(classBody53); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return objectExpression;
    }
    // $ANTLR end "objectExpression"



    // $ANTLR start "voidOrInferredMethodDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:397:1: voidOrInferredMethodDeclaration returns [AnyMethod declaration] : ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON ) ;
    public AnyMethod voidOrInferredMethodDeclaration() throws RecognitionException {
        AnyMethod declaration = null;


        Token VOID_MODIFIER54=null;
        Token FUNCTION_MODIFIER55=null;
        Token SEMICOLON62=null;
        Identifier memberNameDeclaration56 =null;

        TypeParameterList typeParameters57 =null;

        ParameterList parameters58 =null;

        TypeConstraintList typeConstraints59 =null;

        Block block60 =null;

        SpecifierExpression functionSpecifier61 =null;


         MethodDefinition def=null;
                    MethodDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:400:5: ( ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:400:7: ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:400:7: ( VOID_MODIFIER | FUNCTION_MODIFIER )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==VOID_MODIFIER) ) {
                alt26=1;
            }
            else if ( (LA26_0==FUNCTION_MODIFIER) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;

            }
            switch (alt26) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:401:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER54=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodDeclaration2219); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { VoidModifier vm = new VoidModifier(VOID_MODIFIER54);
                              def = new MethodDefinition(VOID_MODIFIER54);
                              dec = new MethodDeclaration(VOID_MODIFIER54);
                              def.setType(vm);
                              dec.setType(vm);
                              declaration = dec; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:408:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER55=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodDeclaration2239); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { FunctionModifier fm = new FunctionModifier(FUNCTION_MODIFIER55);
                              def = new MethodDefinition(FUNCTION_MODIFIER55);
                              dec = new MethodDeclaration(FUNCTION_MODIFIER55);
                              def.setType(fm);
                              dec.setType(fm);
                              declaration = dec; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:416:7: ( memberNameDeclaration )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==LIDENTIFIER||LA27_0==UIDENTIFIER) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:417:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_voidOrInferredMethodDeclaration2275);
                    memberNameDeclaration56=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { dec.setIdentifier(memberNameDeclaration56); 
                              def.setIdentifier(memberNameDeclaration56); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:421:7: ( typeParameters )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==SMALLER_OP) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:422:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_voidOrInferredMethodDeclaration2312);
                    typeParameters57=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters57); 
                              dec.setTypeParameterList(typeParameters57); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:426:7: ( parameters )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==LPAREN) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:427:9: parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_voidOrInferredMethodDeclaration2357);
            	    parameters58=parameters();

            	    state._fsp--;
            	    if (state.failed) return declaration;

            	    if ( state.backtracking==0 ) { def.addParameterList(parameters58); 
            	              dec.addParameterList(parameters58); }

            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:432:7: ( typeConstraints )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==COMPILER_ANNOTATION||LA30_0==TYPE_CONSTRAINT) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:433:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_voidOrInferredMethodDeclaration2401);
                    typeConstraints59=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints59); 
                              dec.setTypeConstraintList(typeConstraints59); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:437:7: ( block | ( functionSpecifier )? SEMICOLON )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==LBRACE) ) {
                alt32=1;
            }
            else if ( (LA32_0==COMPUTE||LA32_0==SEMICOLON||LA32_0==SPECIFY) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;

            }
            switch (alt32) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:438:9: block
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_block_in_voidOrInferredMethodDeclaration2449);
                    block60=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setBlock(block60); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:442:9: ( functionSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:442:9: ( functionSpecifier )?
                    int alt31=2;
                    int LA31_0 = input.LA(1);

                    if ( (LA31_0==COMPUTE||LA31_0==SPECIFY) ) {
                        alt31=1;
                    }
                    switch (alt31) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:443:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_voidOrInferredMethodDeclaration2491);
                            functionSpecifier61=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setSpecifierExpression(functionSpecifier61); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON62=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_voidOrInferredMethodDeclaration2534); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { expecting=-1; }

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON62); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "voidOrInferredMethodDeclaration"



    // $ANTLR start "setterDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:453:1: setterDeclaration returns [AttributeSetterDefinition declaration] : ASSIGN ( memberNameDeclaration )? ( block | ( functionSpecifier )? SEMICOLON ) ;
    public AttributeSetterDefinition setterDeclaration() throws RecognitionException {
        AttributeSetterDefinition declaration = null;


        Token ASSIGN63=null;
        Token SEMICOLON67=null;
        Identifier memberNameDeclaration64 =null;

        Block block65 =null;

        SpecifierExpression functionSpecifier66 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:454:5: ( ASSIGN ( memberNameDeclaration )? ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:454:7: ASSIGN ( memberNameDeclaration )? ( block | ( functionSpecifier )? SEMICOLON )
            {
            ASSIGN63=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_setterDeclaration2583); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new AttributeSetterDefinition(ASSIGN63); 
                    declaration.setType( new VoidModifier(null) ); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:457:7: ( memberNameDeclaration )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==LIDENTIFIER||LA33_0==UIDENTIFIER) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:458:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_setterDeclaration2610);
                    memberNameDeclaration64=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration64); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:461:7: ( block | ( functionSpecifier )? SEMICOLON )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==LBRACE) ) {
                alt35=1;
            }
            else if ( (LA35_0==COMPUTE||LA35_0==SEMICOLON||LA35_0==SPECIFY) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;

            }
            switch (alt35) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:462:9: block
                    {
                    pushFollow(FOLLOW_block_in_setterDeclaration2649);
                    block65=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block65); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:465:9: ( functionSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:465:9: ( functionSpecifier )?
                    int alt34=2;
                    int LA34_0 = input.LA(1);

                    if ( (LA34_0==COMPUTE||LA34_0==SPECIFY) ) {
                        alt34=1;
                    }
                    switch (alt34) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:466:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_setterDeclaration2690);
                            functionSpecifier66=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(functionSpecifier66); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON67=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_setterDeclaration2733); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON67); 
                              expecting=-1; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "setterDeclaration"



    // $ANTLR start "tuplePatternStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:476:1: tuplePatternStart : LBRACKET ( compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER | ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart ) | tuplePatternStart ) ;
    public void tuplePatternStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:477:5: ( LBRACKET ( compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER | ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart ) | tuplePatternStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:477:7: LBRACKET ( compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER | ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart ) | tuplePatternStart )
            {
            match(input,LBRACKET,FOLLOW_LBRACKET_in_tuplePatternStart2768); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:478:7: ( compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER | ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart ) | tuplePatternStart )
            int alt37=3;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==COMPILER_ANNOTATION) ) {
                int LA37_1 = input.LA(2);

                if ( (true) ) {
                    alt37=1;
                }
                else if ( (synpred3_Ceylon()) ) {
                    alt37=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA37_0==LIDENTIFIER||LA37_0==PRODUCT_OP) ) {
                alt37=1;
            }
            else if ( (LA37_0==VALUE_MODIFIER) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==FUNCTION_MODIFIER) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==VOID_MODIFIER) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==ASSIGN) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==INTERFACE_DEFINITION) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==CLASS_DEFINITION) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==OBJECT_DEFINITION) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==NEW) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==ALIAS) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==UIDENTIFIER) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==SMALLER_OP) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==PACKAGE) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==LBRACKET) ) {
                int LA37_16 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt37=2;
                }
                else if ( (true) ) {
                    alt37=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 16, input);

                    throw nvae;

                }
            }
            else if ( (LA37_0==LBRACE) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else if ( (LA37_0==DYNAMIC) && (synpred3_Ceylon())) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;

            }
            switch (alt37) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:479:9: compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_tuplePatternStart2786);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:479:29: ( PRODUCT_OP )?
                    int alt36=2;
                    int LA36_0 = input.LA(1);

                    if ( (LA36_0==PRODUCT_OP) ) {
                        alt36=1;
                    }
                    switch (alt36) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:479:29: PRODUCT_OP
                            {
                            match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_tuplePatternStart2788); if (state.failed) return ;

                            }
                            break;

                    }


                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_tuplePatternStart2791); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:481:9: ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart )
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:482:9: ( compilerAnnotations declarationStart )
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:482:10: compilerAnnotations declarationStart
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_tuplePatternStart2827);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    pushFollow(FOLLOW_declarationStart_in_tuplePatternStart2829);
                    declarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:484:9: tuplePatternStart
                    {
                    pushFollow(FOLLOW_tuplePatternStart_in_tuplePatternStart2848);
                    tuplePatternStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "tuplePatternStart"



    // $ANTLR start "variableOrTuplePattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:488:1: variableOrTuplePattern returns [Pattern pattern] : ( ( tuplePatternStart )=> tuplePattern | variablePattern );
    public Pattern variableOrTuplePattern() throws RecognitionException {
        Pattern pattern = null;


        TuplePattern tuplePattern68 =null;

        VariablePattern variablePattern69 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:489:5: ( ( tuplePatternStart )=> tuplePattern | variablePattern )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==LBRACKET) ) {
                int LA38_1 = input.LA(2);

                if ( (synpred4_Ceylon()) ) {
                    alt38=1;
                }
                else if ( (true) ) {
                    alt38=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA38_0==COMPILER_ANNOTATION||LA38_0==FUNCTION_MODIFIER||LA38_0==LBRACE||LA38_0==LIDENTIFIER||LA38_0==PACKAGE||LA38_0==SMALLER_OP||LA38_0==UIDENTIFIER||LA38_0==VALUE_MODIFIER||LA38_0==VOID_MODIFIER) ) {
                alt38=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return pattern;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;

            }
            switch (alt38) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:490:7: ( tuplePatternStart )=> tuplePattern
                    {
                    pushFollow(FOLLOW_tuplePattern_in_variableOrTuplePattern2890);
                    tuplePattern68=tuplePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = tuplePattern68; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:493:7: variablePattern
                    {
                    pushFollow(FOLLOW_variablePattern_in_variableOrTuplePattern2913);
                    variablePattern69=variablePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = variablePattern69; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "variableOrTuplePattern"



    // $ANTLR start "pattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:497:1: pattern returns [Pattern pattern] : ( ( variable ENTRY_OP )=>ki1= keyItemPattern | ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern | ( tuplePatternStart )=> tuplePattern | variablePattern );
    public Pattern pattern() throws RecognitionException {
        Pattern pattern = null;


        KeyValuePattern ki1 =null;

        KeyValuePattern ki2 =null;

        TuplePattern tuplePattern70 =null;

        VariablePattern variablePattern71 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:498:5: ( ( variable ENTRY_OP )=>ki1= keyItemPattern | ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern | ( tuplePatternStart )=> tuplePattern | variablePattern )
            int alt39=4;
            switch ( input.LA(1) ) {
            case LBRACKET:
                {
                int LA39_1 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (synpred7_Ceylon()) ) {
                    alt39=3;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 1, input);

                    throw nvae;

                }
                }
                break;
            case COMPILER_ANNOTATION:
                {
                int LA39_2 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 2, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA39_3 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 3, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA39_4 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 4, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA39_5 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 5, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA39_6 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 6, input);

                    throw nvae;

                }
                }
                break;
            case VOID_MODIFIER:
                {
                int LA39_7 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 7, input);

                    throw nvae;

                }
                }
                break;
            case FUNCTION_MODIFIER:
                {
                int LA39_8 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 8, input);

                    throw nvae;

                }
                }
                break;
            case VALUE_MODIFIER:
                {
                int LA39_9 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 9, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA39_10 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt39=2;
                }
                else if ( (true) ) {
                    alt39=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 10, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return pattern;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;

            }

            switch (alt39) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:499:7: ( variable ENTRY_OP )=>ki1= keyItemPattern
                    {
                    pushFollow(FOLLOW_keyItemPattern_in_pattern2965);
                    ki1=keyItemPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = ki1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:503:7: ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern
                    {
                    pushFollow(FOLLOW_keyItemPattern_in_pattern3003);
                    ki2=keyItemPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = ki2; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:507:7: ( tuplePatternStart )=> tuplePattern
                    {
                    pushFollow(FOLLOW_tuplePattern_in_pattern3038);
                    tuplePattern70=tuplePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = tuplePattern70; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:511:7: variablePattern
                    {
                    pushFollow(FOLLOW_variablePattern_in_pattern3061);
                    variablePattern71=variablePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = variablePattern71; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "pattern"



    // $ANTLR start "tupleOrEntryPattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:515:1: tupleOrEntryPattern returns [Pattern pattern] : ( ( variable ENTRY_OP )=>ki1= keyItemPattern | ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern | tuplePattern );
    public Pattern tupleOrEntryPattern() throws RecognitionException {
        Pattern pattern = null;


        KeyValuePattern ki1 =null;

        KeyValuePattern ki2 =null;

        TuplePattern tuplePattern72 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:516:5: ( ( variable ENTRY_OP )=>ki1= keyItemPattern | ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern | tuplePattern )
            int alt40=3;
            switch ( input.LA(1) ) {
            case LBRACKET:
                {
                int LA40_1 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else if ( (true) ) {
                    alt40=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 1, input);

                    throw nvae;

                }
                }
                break;
            case COMPILER_ANNOTATION:
                {
                int LA40_2 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 2, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA40_3 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 3, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA40_4 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 4, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA40_5 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 5, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA40_6 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 6, input);

                    throw nvae;

                }
                }
                break;
            case VOID_MODIFIER:
                {
                int LA40_7 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 7, input);

                    throw nvae;

                }
                }
                break;
            case FUNCTION_MODIFIER:
                {
                int LA40_8 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 8, input);

                    throw nvae;

                }
                }
                break;
            case VALUE_MODIFIER:
                {
                int LA40_9 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 9, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA40_10 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 10, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return pattern;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;

            }

            switch (alt40) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:517:7: ( variable ENTRY_OP )=>ki1= keyItemPattern
                    {
                    pushFollow(FOLLOW_keyItemPattern_in_tupleOrEntryPattern3113);
                    ki1=keyItemPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = ki1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:521:7: ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern
                    {
                    pushFollow(FOLLOW_keyItemPattern_in_tupleOrEntryPattern3151);
                    ki2=keyItemPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = ki2; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:525:7: tuplePattern
                    {
                    pushFollow(FOLLOW_tuplePattern_in_tupleOrEntryPattern3173);
                    tuplePattern72=tuplePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = tuplePattern72; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "tupleOrEntryPattern"



    // $ANTLR start "variablePattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:529:1: variablePattern returns [VariablePattern pattern] : variable ;
    public VariablePattern variablePattern() throws RecognitionException {
        VariablePattern pattern = null;


        Variable variable73 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:530:5: ( variable )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:530:7: variable
            {
            pushFollow(FOLLOW_variable_in_variablePattern3202);
            variable73=variable();

            state._fsp--;
            if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern = new VariablePattern(null);
                    pattern.setVariable(variable73); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "variablePattern"



    // $ANTLR start "tuplePattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:535:1: tuplePattern returns [TuplePattern pattern] : LBRACKET (v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )* )? RBRACKET ;
    public TuplePattern tuplePattern() throws RecognitionException {
        TuplePattern pattern = null;


        Token c1=null;
        Token LBRACKET74=null;
        Token RBRACKET75=null;
        Pattern v1 =null;

        Pattern v2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:536:5: ( LBRACKET (v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )* )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:536:7: LBRACKET (v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )* )? RBRACKET
            {
            LBRACKET74=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_tuplePattern3231); if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern = new TuplePattern(LBRACKET74); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:538:7: (v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )* )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==COMPILER_ANNOTATION||LA42_0==FUNCTION_MODIFIER||(LA42_0 >= LBRACE && LA42_0 <= LBRACKET)||LA42_0==LIDENTIFIER||LA42_0==PACKAGE||LA42_0==PRODUCT_OP||LA42_0==SMALLER_OP||LA42_0==UIDENTIFIER||LA42_0==VALUE_MODIFIER||LA42_0==VOID_MODIFIER) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:539:9: v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )*
                    {
                    pushFollow(FOLLOW_variadicPattern_in_tuplePattern3259);
                    v1=variadicPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern.addPattern(v1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:541:9: (c1= COMMA (v2= variadicPattern ) )*
                    loop41:
                    do {
                        int alt41=2;
                        int LA41_0 = input.LA(1);

                        if ( (LA41_0==COMMA) ) {
                            alt41=1;
                        }


                        switch (alt41) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:542:11: c1= COMMA (v2= variadicPattern )
                    	    {
                    	    c1=(Token)match(input,COMMA,FOLLOW_COMMA_in_tuplePattern3293); if (state.failed) return pattern;

                    	    if ( state.backtracking==0 ) { pattern.setEndToken(c1); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:544:11: (v2= variadicPattern )
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:545:13: v2= variadicPattern
                    	    {
                    	    pushFollow(FOLLOW_variadicPattern_in_tuplePattern3333);
                    	    v2=variadicPattern();

                    	    state._fsp--;
                    	    if (state.failed) return pattern;

                    	    if ( state.backtracking==0 ) { pattern.addPattern(v2);
                    	                  pattern.setEndToken(null); }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop41;
                        }
                    } while (true);


                    }
                    break;

            }


            RBRACKET75=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_tuplePattern3387); if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern.setEndToken(RBRACKET75); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "tuplePattern"



    // $ANTLR start "variadicPattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:555:1: variadicPattern returns [Pattern pattern] : ( ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable |p= pattern ) ;
    public Pattern variadicPattern() throws RecognitionException {
        Pattern pattern = null;


        Pattern p =null;

        Variable variadicVariable76 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:556:5: ( ( ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable |p= pattern ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:556:7: ( ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable |p= pattern )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:556:7: ( ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable |p= pattern )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==COMPILER_ANNOTATION) ) {
                int LA43_1 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (true) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA43_0==UIDENTIFIER) ) {
                int LA43_2 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (true) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA43_0==SMALLER_OP) ) {
                int LA43_3 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (true) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA43_0==PACKAGE) ) {
                int LA43_4 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (true) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA43_0==LBRACKET) ) {
                int LA43_5 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (true) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA43_0==LBRACE) ) {
                int LA43_6 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (true) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA43_0==PRODUCT_OP) && (synpred10_Ceylon())) {
                alt43=1;
            }
            else if ( (LA43_0==FUNCTION_MODIFIER||LA43_0==LIDENTIFIER||LA43_0==VALUE_MODIFIER||LA43_0==VOID_MODIFIER) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return pattern;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;

            }
            switch (alt43) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:557:9: ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable
                    {
                    pushFollow(FOLLOW_variadicVariable_in_variadicPattern3445);
                    variadicVariable76=variadicVariable();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { VariablePattern vp = new VariablePattern(null);
                              vp.setVariable(variadicVariable76); 
                              pattern = vp; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:563:9: p= pattern
                    {
                    pushFollow(FOLLOW_pattern_in_variadicPattern3474);
                    p=pattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = p; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "variadicPattern"



    // $ANTLR start "variadicVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:568:1: variadicVariable returns [Variable variable] : compilerAnnotations ( unionType )? ( PRODUCT_OP ) ( memberName )? ;
    public Variable variadicVariable() throws RecognitionException {
        Variable variable = null;


        Token PRODUCT_OP79=null;
        List<CompilerAnnotation> compilerAnnotations77 =null;

        StaticType unionType78 =null;

        Identifier memberName80 =null;


         variable = new Variable(null); 
                    Type t = new ValueModifier(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:571:5: ( compilerAnnotations ( unionType )? ( PRODUCT_OP ) ( memberName )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:571:7: compilerAnnotations ( unionType )? ( PRODUCT_OP ) ( memberName )?
            {
            pushFollow(FOLLOW_compilerAnnotations_in_variadicVariable3521);
            compilerAnnotations77=compilerAnnotations();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable.getCompilerAnnotations().addAll(compilerAnnotations77); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:573:7: ( unionType )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( ((LA44_0 >= LBRACE && LA44_0 <= LBRACKET)||LA44_0==PACKAGE||LA44_0==SMALLER_OP||LA44_0==UIDENTIFIER) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:574:9: unionType
                    {
                    pushFollow(FOLLOW_unionType_in_variadicVariable3547);
                    unionType78=unionType();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { t = unionType78; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:577:7: ( PRODUCT_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:578:9: PRODUCT_OP
            {
            PRODUCT_OP79=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_variadicVariable3584); if (state.failed) return variable;

            if ( state.backtracking==0 ) { SequencedType st = new SequencedType(PRODUCT_OP79);
                      st.setType(t);
                      st.setAtLeastOne(false);
                      variable.setType(st); }

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:590:7: ( memberName )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==LIDENTIFIER) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:591:9: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_variadicVariable3628);
                    memberName80=memberName();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setIdentifier(memberName80); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "variadicVariable"



    // $ANTLR start "keyItemPattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:596:1: keyItemPattern returns [KeyValuePattern pattern] : v1= variableOrTuplePattern ENTRY_OP (v2= variableOrTuplePattern )? ;
    public KeyValuePattern keyItemPattern() throws RecognitionException {
        KeyValuePattern pattern = null;


        Token ENTRY_OP81=null;
        Pattern v1 =null;

        Pattern v2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:597:5: (v1= variableOrTuplePattern ENTRY_OP (v2= variableOrTuplePattern )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:597:7: v1= variableOrTuplePattern ENTRY_OP (v2= variableOrTuplePattern )?
            {
            pushFollow(FOLLOW_variableOrTuplePattern_in_keyItemPattern3670);
            v1=variableOrTuplePattern();

            state._fsp--;
            if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern = new KeyValuePattern(null);
                    pattern.setKey(v1); }

            ENTRY_OP81=(Token)match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_keyItemPattern3686); if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern.setEndToken(ENTRY_OP81); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:602:7: (v2= variableOrTuplePattern )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==COMPILER_ANNOTATION||LA46_0==FUNCTION_MODIFIER||(LA46_0 >= LBRACE && LA46_0 <= LBRACKET)||LA46_0==LIDENTIFIER||LA46_0==PACKAGE||LA46_0==SMALLER_OP||LA46_0==UIDENTIFIER||LA46_0==VALUE_MODIFIER||LA46_0==VOID_MODIFIER) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:603:9: v2= variableOrTuplePattern
                    {
                    pushFollow(FOLLOW_variableOrTuplePattern_in_keyItemPattern3714);
                    v2=variableOrTuplePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern.setValue(v2); 
                              pattern.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "keyItemPattern"



    // $ANTLR start "destructure"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:609:1: destructure returns [Destructure destructure] : VALUE_MODIFIER tupleOrEntryPattern ( specifier )? SEMICOLON ;
    public Destructure destructure() throws RecognitionException {
        Destructure destructure = null;


        Token VALUE_MODIFIER82=null;
        Token SEMICOLON85=null;
        Pattern tupleOrEntryPattern83 =null;

        SpecifierExpression specifier84 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:610:5: ( VALUE_MODIFIER tupleOrEntryPattern ( specifier )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:610:7: VALUE_MODIFIER tupleOrEntryPattern ( specifier )? SEMICOLON
            {
            VALUE_MODIFIER82=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_destructure3754); if (state.failed) return destructure;

            if ( state.backtracking==0 ) { ValueModifier vm = new ValueModifier(VALUE_MODIFIER82);
                    destructure = new Destructure(null);
                    destructure.setType(vm); }

            pushFollow(FOLLOW_tupleOrEntryPattern_in_destructure3770);
            tupleOrEntryPattern83=tupleOrEntryPattern();

            state._fsp--;
            if (state.failed) return destructure;

            if ( state.backtracking==0 ) { destructure.setPattern(tupleOrEntryPattern83); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:616:7: ( specifier )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==SPECIFY) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:617:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_destructure3796);
                    specifier84=specifier();

                    state._fsp--;
                    if (state.failed) return destructure;

                    if ( state.backtracking==0 ) { destructure.setSpecifierExpression(specifier84); }

                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    }
                    break;

            }


            SEMICOLON85=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_destructure3833); if (state.failed) return destructure;

            if ( state.backtracking==0 ) { destructure.setEndToken(SEMICOLON85); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return destructure;
    }
    // $ANTLR end "destructure"



    // $ANTLR start "inferredAttributeDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:626:1: inferredAttributeDeclaration returns [AnyAttribute declaration] : VALUE_MODIFIER ( memberNameDeclaration )? ( ( specifier | lazySpecifier )? SEMICOLON | block ) ;
    public AnyAttribute inferredAttributeDeclaration() throws RecognitionException {
        AnyAttribute declaration = null;


        Token VALUE_MODIFIER86=null;
        Token SEMICOLON90=null;
        Identifier memberNameDeclaration87 =null;

        SpecifierExpression specifier88 =null;

        SpecifierExpression lazySpecifier89 =null;

        Block block91 =null;


         AttributeGetterDefinition def=null;
                    AttributeDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:629:5: ( VALUE_MODIFIER ( memberNameDeclaration )? ( ( specifier | lazySpecifier )? SEMICOLON | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:629:7: VALUE_MODIFIER ( memberNameDeclaration )? ( ( specifier | lazySpecifier )? SEMICOLON | block )
            {
            VALUE_MODIFIER86=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_inferredAttributeDeclaration3871); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { ValueModifier fm = new ValueModifier(VALUE_MODIFIER86);
                    def = new AttributeGetterDefinition(VALUE_MODIFIER86);
                    dec = new AttributeDeclaration(VALUE_MODIFIER86);
                    def.setType(fm);
                    dec.setType(fm);
                    declaration = dec; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:636:7: ( memberNameDeclaration )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==LIDENTIFIER||LA48_0==UIDENTIFIER) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:637:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_inferredAttributeDeclaration3898);
                    memberNameDeclaration87=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { dec.setIdentifier(memberNameDeclaration87); 
                              def.setIdentifier(memberNameDeclaration87); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:641:7: ( ( specifier | lazySpecifier )? SEMICOLON | block )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==COMPUTE||LA50_0==SEMICOLON||LA50_0==SPECIFY) ) {
                alt50=1;
            }
            else if ( (LA50_0==LBRACE) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;

            }
            switch (alt50) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:642:9: ( specifier | lazySpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:642:9: ( specifier | lazySpecifier )?
                    int alt49=3;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==SPECIFY) ) {
                        alt49=1;
                    }
                    else if ( (LA49_0==COMPUTE) ) {
                        alt49=2;
                    }
                    switch (alt49) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:643:11: specifier
                            {
                            pushFollow(FOLLOW_specifier_in_inferredAttributeDeclaration3948);
                            specifier88=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setSpecifierOrInitializerExpression(specifier88); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:646:11: lazySpecifier
                            {
                            pushFollow(FOLLOW_lazySpecifier_in_inferredAttributeDeclaration3983);
                            lazySpecifier89=lazySpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setSpecifierOrInitializerExpression(lazySpecifier89); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON90=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_inferredAttributeDeclaration4026); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON90); 
                              expecting=-1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:654:9: block
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_block_in_inferredAttributeDeclaration4065);
                    block91=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setBlock(block91); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "inferredAttributeDeclaration"



    // $ANTLR start "typedMethodOrAttributeDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:660:1: typedMethodOrAttributeDeclaration returns [TypedDeclaration declaration] : ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block ) ;
    public TypedDeclaration typedMethodOrAttributeDeclaration() throws RecognitionException {
        TypedDeclaration declaration = null;


        Token s1=null;
        Token s2=null;
        Token DYNAMIC93=null;
        Block b1 =null;

        SpecifierExpression ms =null;

        SpecifierExpression as =null;

        SpecifierExpression ac =null;

        Block b2 =null;

        Type variadicType92 =null;

        Identifier memberNameDeclaration94 =null;

        TypeParameterList typeParameters95 =null;

        ParameterList parameters96 =null;

        TypeConstraintList typeConstraints97 =null;


         AttributeGetterDefinition adef=new AttributeGetterDefinition(null);
                    AttributeDeclaration adec=new AttributeDeclaration(null);
                    MethodDefinition mdef=new MethodDefinition(null);
                    MethodDeclaration mdec=new MethodDeclaration(null); 
                    declaration = adec; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:666:5: ( ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:666:7: ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:666:7: ( variadicType | DYNAMIC )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( ((LA51_0 >= LBRACE && LA51_0 <= LBRACKET)||LA51_0==PACKAGE||LA51_0==SMALLER_OP||LA51_0==UIDENTIFIER) ) {
                alt51=1;
            }
            else if ( (LA51_0==DYNAMIC) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;

            }
            switch (alt51) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:666:9: variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_typedMethodOrAttributeDeclaration4115);
                    variadicType92=variadicType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { adef.setType(variadicType92);
                              adec.setType(variadicType92); 
                              mdef.setType(variadicType92);
                              mdec.setType(variadicType92); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:671:9: DYNAMIC
                    {
                    DYNAMIC93=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_typedMethodOrAttributeDeclaration4135); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { DynamicModifier dm = new DynamicModifier(DYNAMIC93);
                              adef.setType(dm);
                              adec.setType(dm); 
                              mdef.setType(dm);
                              mdec.setType(dm); }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberNameDeclaration_in_typedMethodOrAttributeDeclaration4161);
            memberNameDeclaration94=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { adef.setIdentifier(memberNameDeclaration94);
                    adec.setIdentifier(memberNameDeclaration94); 
                    mdef.setIdentifier(memberNameDeclaration94);
                    mdec.setIdentifier(memberNameDeclaration94); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:683:7: ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block )
            int alt58=3;
            switch ( input.LA(1) ) {
            case LPAREN:
            case SMALLER_OP:
                {
                alt58=1;
                }
                break;
            case COMPUTE:
            case SEMICOLON:
            case SPECIFY:
                {
                alt58=2;
                }
                break;
            case LBRACE:
                {
                alt58=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;

            }

            switch (alt58) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:684:9: ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON )
                    {
                    if ( state.backtracking==0 ) { declaration = mdec; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:685:9: ( typeParameters )?
                    int alt52=2;
                    int LA52_0 = input.LA(1);

                    if ( (LA52_0==SMALLER_OP) ) {
                        alt52=1;
                    }
                    switch (alt52) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:686:11: typeParameters
                            {
                            pushFollow(FOLLOW_typeParameters_in_typedMethodOrAttributeDeclaration4210);
                            typeParameters95=typeParameters();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { mdef.setTypeParameterList(typeParameters95);
                                        mdec.setTypeParameterList(typeParameters95); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:690:9: ( parameters )+
                    int cnt53=0;
                    loop53:
                    do {
                        int alt53=2;
                        int LA53_0 = input.LA(1);

                        if ( (LA53_0==LPAREN) ) {
                            alt53=1;
                        }


                        switch (alt53) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:691:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_typedMethodOrAttributeDeclaration4255);
                    	    parameters96=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { mdef.addParameterList(parameters96);
                    	                mdec.addParameterList(parameters96); }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt53 >= 1 ) break loop53;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(53, input);
                                throw eee;
                        }
                        cnt53++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:696:9: ( typeConstraints )?
                    int alt54=2;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==COMPILER_ANNOTATION||LA54_0==TYPE_CONSTRAINT) ) {
                        alt54=1;
                    }
                    switch (alt54) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:697:11: typeConstraints
                            {
                            pushFollow(FOLLOW_typeConstraints_in_typedMethodOrAttributeDeclaration4310);
                            typeConstraints97=typeConstraints();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { mdef.setTypeConstraintList(typeConstraints97);
                                        mdec.setTypeConstraintList(typeConstraints97); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:701:9: (b1= block | (ms= functionSpecifier )? s1= SEMICOLON )
                    int alt56=2;
                    int LA56_0 = input.LA(1);

                    if ( (LA56_0==LBRACE) ) {
                        alt56=1;
                    }
                    else if ( (LA56_0==COMPUTE||LA56_0==SEMICOLON||LA56_0==SPECIFY) ) {
                        alt56=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 56, 0, input);

                        throw nvae;

                    }
                    switch (alt56) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:702:11: b1= block
                            {
                            if ( state.backtracking==0 ) { declaration = mdef; }

                            pushFollow(FOLLOW_block_in_typedMethodOrAttributeDeclaration4370);
                            b1=block();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { mdef.setBlock(b1); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:706:11: (ms= functionSpecifier )? s1= SEMICOLON
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:706:11: (ms= functionSpecifier )?
                            int alt55=2;
                            int LA55_0 = input.LA(1);

                            if ( (LA55_0==COMPUTE||LA55_0==SPECIFY) ) {
                                alt55=1;
                            }
                            switch (alt55) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:707:13: ms= functionSpecifier
                                    {
                                    pushFollow(FOLLOW_functionSpecifier_in_typedMethodOrAttributeDeclaration4420);
                                    ms=functionSpecifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { mdec.setSpecifierExpression(ms); }

                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                            s1=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration4472); if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setEndToken(s1);
                                        expecting=-1; }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:716:9: (as= specifier |ac= lazySpecifier )? s2= SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:716:9: (as= specifier |ac= lazySpecifier )?
                    int alt57=3;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==SPECIFY) ) {
                        alt57=1;
                    }
                    else if ( (LA57_0==COMPUTE) ) {
                        alt57=2;
                    }
                    switch (alt57) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:717:11: as= specifier
                            {
                            pushFollow(FOLLOW_specifier_in_typedMethodOrAttributeDeclaration4527);
                            as=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { adec.setSpecifierOrInitializerExpression(as); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:720:11: ac= lazySpecifier
                            {
                            pushFollow(FOLLOW_lazySpecifier_in_typedMethodOrAttributeDeclaration4565);
                            ac=lazySpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { adec.setSpecifierOrInitializerExpression(ac); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    s2=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration4611); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(s2); 
                            expecting=-1; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:728:9: b2= block
                    {
                    if ( state.backtracking==0 ) { declaration = adef; }

                    pushFollow(FOLLOW_block_in_typedMethodOrAttributeDeclaration4652);
                    b2=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { adef.setBlock(b2); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "typedMethodOrAttributeDeclaration"



    // $ANTLR start "interfaceDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:734:1: interfaceDeclaration returns [AnyInterface declaration] : ( INTERFACE_DEFINITION | DYNAMIC ) ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON ) ;
    public AnyInterface interfaceDeclaration() throws RecognitionException {
        AnyInterface declaration = null;


        Token INTERFACE_DEFINITION98=null;
        Token DYNAMIC99=null;
        Token SEMICOLON107=null;
        Identifier typeNameDeclaration100 =null;

        TypeParameterList typeParameters101 =null;

        CaseTypes caseTypes102 =null;

        SatisfiedTypes satisfiedTypes103 =null;

        TypeConstraintList typeConstraints104 =null;

        InterfaceBody interfaceBody105 =null;

        TypeSpecifier typeSpecifier106 =null;


         InterfaceDefinition def=null; 
                    InterfaceDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:737:5: ( ( INTERFACE_DEFINITION | DYNAMIC ) ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:737:7: ( INTERFACE_DEFINITION | DYNAMIC ) ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:737:7: ( INTERFACE_DEFINITION | DYNAMIC )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==INTERFACE_DEFINITION) ) {
                alt59=1;
            }
            else if ( (LA59_0==DYNAMIC) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;

            }
            switch (alt59) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:738:9: INTERFACE_DEFINITION
                    {
                    INTERFACE_DEFINITION98=(Token)match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_interfaceDeclaration4711); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def = new InterfaceDefinition(INTERFACE_DEFINITION98); 
                              dec = new InterfaceDeclaration(INTERFACE_DEFINITION98);
                              declaration = dec; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:743:9: DYNAMIC
                    {
                    DYNAMIC99=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_interfaceDeclaration4740); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def = new InterfaceDefinition(DYNAMIC99);
                              dec = new InterfaceDeclaration(DYNAMIC99);
                              def.setDynamic(true);
                              declaration = def; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:749:7: ( typeNameDeclaration )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==LIDENTIFIER||LA60_0==UIDENTIFIER) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:750:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_interfaceDeclaration4776);
                    typeNameDeclaration100=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { dec.setIdentifier(typeNameDeclaration100); 
                              def.setIdentifier(typeNameDeclaration100); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:754:7: ( typeParameters )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==SMALLER_OP) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:755:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_interfaceDeclaration4814);
                    typeParameters101=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters101); 
                              dec.setTypeParameterList(typeParameters101); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:759:7: ( caseTypes )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==CASE_TYPES) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:760:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_interfaceDeclaration4852);
                    caseTypes102=caseTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setCaseTypes(caseTypes102); 
                              dec.setCaseTypes(caseTypes102); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:769:7: ( satisfiedTypes )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==SATISFIES) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:770:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_interfaceDeclaration4906);
                    satisfiedTypes103=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setSatisfiedTypes(satisfiedTypes103); 
                              dec.setSatisfiedTypes(satisfiedTypes103); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:774:7: ( typeConstraints )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==COMPILER_ANNOTATION||LA64_0==TYPE_CONSTRAINT) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:775:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_interfaceDeclaration4943);
                    typeConstraints104=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints104); 
                              dec.setTypeConstraintList(typeConstraints104); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:779:7: ( interfaceBody | ( typeSpecifier )? SEMICOLON )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==LBRACE) ) {
                alt66=1;
            }
            else if ( (LA66_0==COMPUTE||LA66_0==SEMICOLON||LA66_0==SPECIFY) ) {
                alt66=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;

            }
            switch (alt66) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:780:9: interfaceBody
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_interfaceBody_in_interfaceDeclaration4990);
                    interfaceBody105=interfaceBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setInterfaceBody(interfaceBody105); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:784:9: ( typeSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:784:9: ( typeSpecifier )?
                    int alt65=2;
                    int LA65_0 = input.LA(1);

                    if ( (LA65_0==COMPUTE||LA65_0==SPECIFY) ) {
                        alt65=1;
                    }
                    switch (alt65) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:785:11: typeSpecifier
                            {
                            pushFollow(FOLLOW_typeSpecifier_in_interfaceDeclaration5031);
                            typeSpecifier106=typeSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setTypeSpecifier(typeSpecifier106); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON107=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interfaceDeclaration5075); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON107); 
                              expecting=-1; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "interfaceDeclaration"



    // $ANTLR start "classDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:795:1: classDeclaration returns [AnyClass declaration] : CLASS_DEFINITION ( typeNameDeclaration )? ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON ) ;
    public AnyClass classDeclaration() throws RecognitionException {
        AnyClass declaration = null;


        Token CLASS_DEFINITION108=null;
        Token SEMICOLON118=null;
        Identifier typeNameDeclaration109 =null;

        TypeParameterList typeParameters110 =null;

        ParameterList parameters111 =null;

        CaseTypes caseTypes112 =null;

        ExtendedType extendedType113 =null;

        SatisfiedTypes satisfiedTypes114 =null;

        TypeConstraintList typeConstraints115 =null;

        ClassBody classBody116 =null;

        ClassSpecifier classSpecifier117 =null;


         ClassDefinition def=null; 
                    ClassDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:798:5: ( CLASS_DEFINITION ( typeNameDeclaration )? ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:798:7: CLASS_DEFINITION ( typeNameDeclaration )? ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON )
            {
            CLASS_DEFINITION108=(Token)match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_classDeclaration5123); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { def = new ClassDefinition(CLASS_DEFINITION108); 
                    dec = new ClassDeclaration(CLASS_DEFINITION108);
                    declaration = dec; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:802:7: ( typeNameDeclaration )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==LIDENTIFIER||LA67_0==UIDENTIFIER) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:803:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_classDeclaration5150);
                    typeNameDeclaration109=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { dec.setIdentifier(typeNameDeclaration109); 
                              def.setIdentifier(typeNameDeclaration109); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:807:7: ( typeParameters )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==SMALLER_OP) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:808:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_classDeclaration5187);
                    typeParameters110=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters110); 
                              dec.setTypeParameterList(typeParameters110); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:812:7: ( parameters )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==LPAREN) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:813:9: parameters
                    {
                    pushFollow(FOLLOW_parameters_in_classDeclaration5224);
                    parameters111=parameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setParameterList(parameters111); 
                              dec.setParameterList(parameters111); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:817:7: ( caseTypes )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==CASE_TYPES) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:818:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_classDeclaration5261);
                    caseTypes112=caseTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setCaseTypes(caseTypes112); 
                              dec.setCaseTypes(caseTypes112); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:823:7: ( extendedType )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==EXTENDS) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:824:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_classDeclaration5307);
                    extendedType113=extendedType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setExtendedType(extendedType113); 
                              dec.setExtendedType(extendedType113); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:828:7: ( satisfiedTypes )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==SATISFIES) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:829:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_classDeclaration5345);
                    satisfiedTypes114=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setSatisfiedTypes(satisfiedTypes114); 
                              dec.setSatisfiedTypes(satisfiedTypes114); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:833:7: ( typeConstraints )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==COMPILER_ANNOTATION||LA73_0==TYPE_CONSTRAINT) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:834:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_classDeclaration5382);
                    typeConstraints115=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints115); 
                              dec.setTypeConstraintList(typeConstraints115); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:838:7: ( classBody | ( classSpecifier )? SEMICOLON )
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==LBRACE) ) {
                alt75=1;
            }
            else if ( (LA75_0==COMPUTE||LA75_0==SEMICOLON||LA75_0==SPECIFY) ) {
                alt75=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;

            }
            switch (alt75) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:839:9: classBody
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_classBody_in_classDeclaration5429);
                    classBody116=classBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setClassBody(classBody116); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:843:9: ( classSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:843:9: ( classSpecifier )?
                    int alt74=2;
                    int LA74_0 = input.LA(1);

                    if ( (LA74_0==COMPUTE||LA74_0==SPECIFY) ) {
                        alt74=1;
                    }
                    switch (alt74) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:844:11: classSpecifier
                            {
                            pushFollow(FOLLOW_classSpecifier_in_classDeclaration5470);
                            classSpecifier117=classSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setClassSpecifier(classSpecifier117); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON118=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_classDeclaration5513); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON118); 
                              expecting=-1; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "classDeclaration"



    // $ANTLR start "constructor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:854:1: constructor returns [Constructor declaration] : NEW ( typeNameDeclaration )? ( parameters )? (dc= delegatedConstructor )? block ;
    public Constructor constructor() throws RecognitionException {
        Constructor declaration = null;


        Token NEW119=null;
        DelegatedConstructor dc =null;

        Identifier typeNameDeclaration120 =null;

        ParameterList parameters121 =null;

        Block block122 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:855:5: ( NEW ( typeNameDeclaration )? ( parameters )? (dc= delegatedConstructor )? block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:855:7: NEW ( typeNameDeclaration )? ( parameters )? (dc= delegatedConstructor )? block
            {
            NEW119=(Token)match(input,NEW,FOLLOW_NEW_in_constructor5552); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new Constructor(NEW119); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:857:7: ( typeNameDeclaration )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==LIDENTIFIER||LA76_0==UIDENTIFIER) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:858:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_constructor5578);
                    typeNameDeclaration120=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(typeNameDeclaration120); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:861:7: ( parameters )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==LPAREN) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:862:9: parameters
                    {
                    pushFollow(FOLLOW_parameters_in_constructor5615);
                    parameters121=parameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setParameterList(parameters121); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:865:7: (dc= delegatedConstructor )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==EXTENDS) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:866:9: dc= delegatedConstructor
                    {
                    pushFollow(FOLLOW_delegatedConstructor_in_constructor5656);
                    dc=delegatedConstructor();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setDelegatedConstructor(dc); }

                    }
                    break;

            }


            pushFollow(FOLLOW_block_in_constructor5683);
            block122=block();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setBlock(block122); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "constructor"



    // $ANTLR start "delegatedConstructor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:873:1: delegatedConstructor returns [DelegatedConstructor delegatedConstructor] : EXTENDS (ci= classInstantiation )? ;
    public DelegatedConstructor delegatedConstructor() throws RecognitionException {
        DelegatedConstructor delegatedConstructor = null;


        Token EXTENDS123=null;
        PsiCompatibleCeylonParser.classInstantiation_return ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:874:5: ( EXTENDS (ci= classInstantiation )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:874:7: EXTENDS (ci= classInstantiation )?
            {
            EXTENDS123=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_delegatedConstructor5712); if (state.failed) return delegatedConstructor;

            if ( state.backtracking==0 ) { delegatedConstructor = new DelegatedConstructor(EXTENDS123); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:876:7: (ci= classInstantiation )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==PACKAGE||LA79_0==SUPER||LA79_0==UIDENTIFIER) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:877:9: ci= classInstantiation
                    {
                    pushFollow(FOLLOW_classInstantiation_in_delegatedConstructor5740);
                    ci=classInstantiation();

                    state._fsp--;
                    if (state.failed) return delegatedConstructor;

                    if ( state.backtracking==0 ) { delegatedConstructor.setType((ci!=null?ci.type:null));
                              delegatedConstructor.setInvocationExpression((ci!=null?ci.invocationExpression:null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return delegatedConstructor;
    }
    // $ANTLR end "delegatedConstructor"



    // $ANTLR start "aliasDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:883:1: aliasDeclaration returns [TypeAliasDeclaration declaration] : ALIAS ( typeNameDeclaration )? ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON ;
    public TypeAliasDeclaration aliasDeclaration() throws RecognitionException {
        TypeAliasDeclaration declaration = null;


        Token ALIAS124=null;
        Token SEMICOLON129=null;
        Identifier typeNameDeclaration125 =null;

        TypeParameterList typeParameters126 =null;

        TypeConstraintList typeConstraints127 =null;

        TypeSpecifier typeSpecifier128 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:884:5: ( ALIAS ( typeNameDeclaration )? ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:884:7: ALIAS ( typeNameDeclaration )? ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON
            {
            ALIAS124=(Token)match(input,ALIAS,FOLLOW_ALIAS_in_aliasDeclaration5780); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new TypeAliasDeclaration(ALIAS124);}

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:886:7: ( typeNameDeclaration )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==LIDENTIFIER||LA80_0==UIDENTIFIER) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:887:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_aliasDeclaration5806);
                    typeNameDeclaration125=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(typeNameDeclaration125); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:890:7: ( typeParameters )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==SMALLER_OP) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:891:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_aliasDeclaration5844);
                    typeParameters126=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeParameterList(typeParameters126); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:894:7: ( typeConstraints )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==COMPILER_ANNOTATION||LA82_0==TYPE_CONSTRAINT) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:895:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_aliasDeclaration5882);
                    typeConstraints127=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeConstraintList(typeConstraints127); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:898:7: ( typeSpecifier )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==COMPUTE||LA83_0==SPECIFY) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:899:9: typeSpecifier
                    {
                    pushFollow(FOLLOW_typeSpecifier_in_aliasDeclaration5919);
                    typeSpecifier128=typeSpecifier();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeSpecifier(typeSpecifier128); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON129=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_aliasDeclaration5954); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON129); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "aliasDeclaration"



    // $ANTLR start "assertion"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:908:1: assertion returns [Assertion assertion] : annotations ASSERT conditions SEMICOLON ;
    public Assertion assertion() throws RecognitionException {
        Assertion assertion = null;


        Token ASSERT130=null;
        Token SEMICOLON133=null;
        AnnotationList annotations131 =null;

        ConditionList conditions132 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:909:5: ( annotations ASSERT conditions SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:909:7: annotations ASSERT conditions SEMICOLON
            {
            pushFollow(FOLLOW_annotations_in_assertion5983);
            annotations131=annotations();

            state._fsp--;
            if (state.failed) return assertion;

            ASSERT130=(Token)match(input,ASSERT,FOLLOW_ASSERT_in_assertion5991); if (state.failed) return assertion;

            if ( state.backtracking==0 ) { assertion = new Assertion(ASSERT130); 
                    assertion.setAnnotationList(annotations131); }

            pushFollow(FOLLOW_conditions_in_assertion6007);
            conditions132=conditions();

            state._fsp--;
            if (state.failed) return assertion;

            if ( state.backtracking==0 ) { assertion.setConditionList(conditions132); }

            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON133=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_assertion6031); if (state.failed) return assertion;

            if ( state.backtracking==0 ) { assertion.setEndToken(SEMICOLON133); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return assertion;
    }
    // $ANTLR end "assertion"



    // $ANTLR start "block"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:921:1: block returns [Block block] : LBRACE ( declarationOrStatement )* RBRACE ;
    public Block block() throws RecognitionException {
        Block block = null;


        Token LBRACE134=null;
        Token RBRACE136=null;
        Statement declarationOrStatement135 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:922:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:922:7: LBRACE ( declarationOrStatement )* RBRACE
            {
            LBRACE134=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_block6060); if (state.failed) return block;

            if ( state.backtracking==0 ) { block = new Block(LBRACE134); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:924:7: ( declarationOrStatement )*
            loop84:
            do {
                int alt84=2;
                int LA84_0 = input.LA(1);

                if ( (LA84_0==ALIAS||(LA84_0 >= ASSERT && LA84_0 <= ASSIGN)||(LA84_0 >= BACKTICK && LA84_0 <= BREAK)||(LA84_0 >= CHAR_LITERAL && LA84_0 <= CLASS_DEFINITION)||LA84_0==COMPILER_ANNOTATION||LA84_0==CONTINUE||(LA84_0 >= DECREMENT_OP && LA84_0 <= DIFFERENCE_OP)||LA84_0==DYNAMIC||(LA84_0 >= FLOAT_LITERAL && LA84_0 <= FUNCTION_MODIFIER)||(LA84_0 >= IF_CLAUSE && LA84_0 <= INTERFACE_DEFINITION)||LA84_0==IN_OP||(LA84_0 >= LBRACE && LA84_0 <= LIDENTIFIER)||LA84_0==LPAREN||LA84_0==MODULE||(LA84_0 >= NATURAL_LITERAL && LA84_0 <= NEW)||(LA84_0 >= NOT_OP && LA84_0 <= OBJECT_DEFINITION)||(LA84_0 >= OUT && LA84_0 <= PACKAGE)||LA84_0==PRODUCT_OP||LA84_0==RETURN||(LA84_0 >= SEMICOLON && LA84_0 <= SMALLER_OP)||LA84_0==STRING_LITERAL||LA84_0==STRING_START||(LA84_0 >= SUM_OP && LA84_0 <= SWITCH_CLAUSE)||(LA84_0 >= THIS && LA84_0 <= UIDENTIFIER)||(LA84_0 >= VALUE_MODIFIER && LA84_0 <= WHILE_CLAUSE)) ) {
                    alt84=1;
                }


                switch (alt84) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:925:9: declarationOrStatement
            	    {
            	    pushFollow(FOLLOW_declarationOrStatement_in_block6087);
            	    declarationOrStatement135=declarationOrStatement();

            	    state._fsp--;
            	    if (state.failed) return block;

            	    if ( state.backtracking==0 ) { if (declarationOrStatement135!=null)
            	                  block.addStatement(declarationOrStatement135); }

            	    }
            	    break;

            	default :
            	    break loop84;
                }
            } while (true);


            RBRACE136=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_block6114); if (state.failed) return block;

            if ( state.backtracking==0 ) { block.setEndToken(RBRACE136); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "block"



    // $ANTLR start "interfaceBody"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:937:1: interfaceBody returns [InterfaceBody interfaceBody] : LBRACE ( declarationOrStatement )* RBRACE ;
    public InterfaceBody interfaceBody() throws RecognitionException {
        InterfaceBody interfaceBody = null;


        Token LBRACE137=null;
        Token RBRACE139=null;
        Statement declarationOrStatement138 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:938:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:938:7: LBRACE ( declarationOrStatement )* RBRACE
            {
            LBRACE137=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_interfaceBody6147); if (state.failed) return interfaceBody;

            if ( state.backtracking==0 ) { interfaceBody = new InterfaceBody(LBRACE137); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:940:7: ( declarationOrStatement )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==ALIAS||(LA85_0 >= ASSERT && LA85_0 <= ASSIGN)||(LA85_0 >= BACKTICK && LA85_0 <= BREAK)||(LA85_0 >= CHAR_LITERAL && LA85_0 <= CLASS_DEFINITION)||LA85_0==COMPILER_ANNOTATION||LA85_0==CONTINUE||(LA85_0 >= DECREMENT_OP && LA85_0 <= DIFFERENCE_OP)||LA85_0==DYNAMIC||(LA85_0 >= FLOAT_LITERAL && LA85_0 <= FUNCTION_MODIFIER)||(LA85_0 >= IF_CLAUSE && LA85_0 <= INTERFACE_DEFINITION)||LA85_0==IN_OP||(LA85_0 >= LBRACE && LA85_0 <= LIDENTIFIER)||LA85_0==LPAREN||LA85_0==MODULE||(LA85_0 >= NATURAL_LITERAL && LA85_0 <= NEW)||(LA85_0 >= NOT_OP && LA85_0 <= OBJECT_DEFINITION)||(LA85_0 >= OUT && LA85_0 <= PACKAGE)||LA85_0==PRODUCT_OP||LA85_0==RETURN||(LA85_0 >= SEMICOLON && LA85_0 <= SMALLER_OP)||LA85_0==STRING_LITERAL||LA85_0==STRING_START||(LA85_0 >= SUM_OP && LA85_0 <= SWITCH_CLAUSE)||(LA85_0 >= THIS && LA85_0 <= UIDENTIFIER)||(LA85_0 >= VALUE_MODIFIER && LA85_0 <= WHILE_CLAUSE)) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:941:9: declarationOrStatement
            	    {
            	    pushFollow(FOLLOW_declarationOrStatement_in_interfaceBody6174);
            	    declarationOrStatement138=declarationOrStatement();

            	    state._fsp--;
            	    if (state.failed) return interfaceBody;

            	    if ( state.backtracking==0 ) { if (declarationOrStatement138!=null)
            	                  interfaceBody.addStatement(declarationOrStatement138); }

            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);


            RBRACE139=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_interfaceBody6201); if (state.failed) return interfaceBody;

            if ( state.backtracking==0 ) { interfaceBody.setEndToken(RBRACE139); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return interfaceBody;
    }
    // $ANTLR end "interfaceBody"



    // $ANTLR start "classBody"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:949:1: classBody returns [ClassBody classBody] : LBRACE ( declarationOrStatement )* RBRACE ;
    public ClassBody classBody() throws RecognitionException {
        ClassBody classBody = null;


        Token LBRACE140=null;
        Token RBRACE142=null;
        Statement declarationOrStatement141 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:950:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:950:7: LBRACE ( declarationOrStatement )* RBRACE
            {
            LBRACE140=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_classBody6230); if (state.failed) return classBody;

            if ( state.backtracking==0 ) { classBody = new ClassBody(LBRACE140); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:952:7: ( declarationOrStatement )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==ALIAS||(LA86_0 >= ASSERT && LA86_0 <= ASSIGN)||(LA86_0 >= BACKTICK && LA86_0 <= BREAK)||(LA86_0 >= CHAR_LITERAL && LA86_0 <= CLASS_DEFINITION)||LA86_0==COMPILER_ANNOTATION||LA86_0==CONTINUE||(LA86_0 >= DECREMENT_OP && LA86_0 <= DIFFERENCE_OP)||LA86_0==DYNAMIC||(LA86_0 >= FLOAT_LITERAL && LA86_0 <= FUNCTION_MODIFIER)||(LA86_0 >= IF_CLAUSE && LA86_0 <= INTERFACE_DEFINITION)||LA86_0==IN_OP||(LA86_0 >= LBRACE && LA86_0 <= LIDENTIFIER)||LA86_0==LPAREN||LA86_0==MODULE||(LA86_0 >= NATURAL_LITERAL && LA86_0 <= NEW)||(LA86_0 >= NOT_OP && LA86_0 <= OBJECT_DEFINITION)||(LA86_0 >= OUT && LA86_0 <= PACKAGE)||LA86_0==PRODUCT_OP||LA86_0==RETURN||(LA86_0 >= SEMICOLON && LA86_0 <= SMALLER_OP)||LA86_0==STRING_LITERAL||LA86_0==STRING_START||(LA86_0 >= SUM_OP && LA86_0 <= SWITCH_CLAUSE)||(LA86_0 >= THIS && LA86_0 <= UIDENTIFIER)||(LA86_0 >= VALUE_MODIFIER && LA86_0 <= WHILE_CLAUSE)) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:953:9: declarationOrStatement
            	    {
            	    pushFollow(FOLLOW_declarationOrStatement_in_classBody6256);
            	    declarationOrStatement141=declarationOrStatement();

            	    state._fsp--;
            	    if (state.failed) return classBody;

            	    if ( state.backtracking==0 ) { if (declarationOrStatement141!=null)
            	                  classBody.addStatement(declarationOrStatement141); }

            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);


            RBRACE142=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_classBody6283); if (state.failed) return classBody;

            if ( state.backtracking==0 ) { classBody.setEndToken(RBRACE142); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return classBody;
    }
    // $ANTLR end "classBody"



    // $ANTLR start "extendedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:961:1: extendedType returns [ExtendedType extendedType] : EXTENDS (ci= classInstantiation )? ;
    public ExtendedType extendedType() throws RecognitionException {
        ExtendedType extendedType = null;


        Token EXTENDS143=null;
        PsiCompatibleCeylonParser.classInstantiation_return ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:962:5: ( EXTENDS (ci= classInstantiation )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:962:7: EXTENDS (ci= classInstantiation )?
            {
            EXTENDS143=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_extendedType6312); if (state.failed) return extendedType;

            if ( state.backtracking==0 ) { extendedType = new ExtendedType(EXTENDS143); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:964:7: (ci= classInstantiation )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==PACKAGE||LA87_0==SUPER||LA87_0==UIDENTIFIER) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:965:9: ci= classInstantiation
                    {
                    pushFollow(FOLLOW_classInstantiation_in_extendedType6342);
                    ci=classInstantiation();

                    state._fsp--;
                    if (state.failed) return extendedType;

                    if ( state.backtracking==0 ) { extendedType.setType((ci!=null?ci.type:null));
                              extendedType.setInvocationExpression((ci!=null?ci.invocationExpression:null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return extendedType;
    }
    // $ANTLR end "extendedType"



    // $ANTLR start "classSpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:971:1: classSpecifier returns [ClassSpecifier classSpecifier] : ( COMPUTE | SPECIFY ) (ci= classInstantiation )? ;
    public ClassSpecifier classSpecifier() throws RecognitionException {
        ClassSpecifier classSpecifier = null;


        Token COMPUTE144=null;
        Token SPECIFY145=null;
        PsiCompatibleCeylonParser.classInstantiation_return ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:972:5: ( ( COMPUTE | SPECIFY ) (ci= classInstantiation )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:972:7: ( COMPUTE | SPECIFY ) (ci= classInstantiation )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:972:7: ( COMPUTE | SPECIFY )
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==COMPUTE) ) {
                alt88=1;
            }
            else if ( (LA88_0==SPECIFY) ) {
                alt88=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return classSpecifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;

            }
            switch (alt88) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:973:9: COMPUTE
                    {
                    COMPUTE144=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_classSpecifier6392); if (state.failed) return classSpecifier;

                    if ( state.backtracking==0 ) { classSpecifier = new ClassSpecifier(COMPUTE144); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:976:9: SPECIFY
                    {
                    SPECIFY145=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_classSpecifier6421); if (state.failed) return classSpecifier;

                    if ( state.backtracking==0 ) { classSpecifier = new ClassSpecifier(SPECIFY145); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:979:7: (ci= classInstantiation )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==PACKAGE||LA89_0==SUPER||LA89_0==UIDENTIFIER) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:980:9: ci= classInstantiation
                    {
                    pushFollow(FOLLOW_classInstantiation_in_classSpecifier6460);
                    ci=classInstantiation();

                    state._fsp--;
                    if (state.failed) return classSpecifier;

                    if ( state.backtracking==0 ) { classSpecifier.setType((ci!=null?ci.type:null));
                              classSpecifier.setInvocationExpression((ci!=null?ci.invocationExpression:null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return classSpecifier;
    }
    // $ANTLR end "classSpecifier"


    public static class packageQualifiedClass_return extends ParserRuleReturnScope {
        public SimpleType type;
        public ExtendedTypeExpression expression;
    };


    // $ANTLR start "packageQualifiedClass"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:986:1: packageQualifiedClass returns [SimpleType type, ExtendedTypeExpression expression] : PACKAGE (m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )? )? ;
    public PsiCompatibleCeylonParser.packageQualifiedClass_return packageQualifiedClass() throws RecognitionException {
        PsiCompatibleCeylonParser.packageQualifiedClass_return retval = new PsiCompatibleCeylonParser.packageQualifiedClass_return();
        retval.start = input.LT(1);


        Token m1=null;
        Token m2=null;
        Token PACKAGE146=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return t1 =null;

        PsiCompatibleCeylonParser.typeNameWithArguments_return t2 =null;


         BaseType bt = null;
                    QualifiedType qt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:989:5: ( PACKAGE (m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )? )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:989:7: PACKAGE (m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )? )?
            {
            PACKAGE146=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_packageQualifiedClass6509); if (state.failed) return retval;

            if ( state.backtracking==0 ) { bt = new BaseType(PACKAGE146);
                    bt.setPackageQualified(true);
                    retval.type =bt; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:993:7: (m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )? )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==MEMBER_OP) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:994:9: m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )?
                    {
                    m1=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_packageQualifiedClass6537); if (state.failed) return retval;

                    if ( state.backtracking==0 ) { bt.setEndToken(m1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:996:9: (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )?
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( (LA91_0==UIDENTIFIER) ) {
                        alt91=1;
                    }
                    switch (alt91) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:997:11: t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )?
                            {
                            pushFollow(FOLLOW_typeNameWithArguments_in_packageQualifiedClass6571);
                            t1=typeNameWithArguments();

                            state._fsp--;
                            if (state.failed) return retval;

                            if ( state.backtracking==0 ) { if ((t1!=null?t1.identifier:null)!=null) {
                                          bt.setEndToken(null);
                                          bt.setIdentifier((t1!=null?t1.identifier:null));
                                        }
                                        if ((t1!=null?t1.typeArgumentList:null)!=null)
                                            bt.setTypeArgumentList((t1!=null?t1.typeArgumentList:null));
                                        retval.expression = new ExtendedTypeExpression(null);
                                        retval.expression.setExtendedType(retval.type); }

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1006:11: (m2= MEMBER_OP t2= typeNameWithArguments )?
                            int alt90=2;
                            int LA90_0 = input.LA(1);

                            if ( (LA90_0==MEMBER_OP) ) {
                                alt90=1;
                            }
                            switch (alt90) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1007:13: m2= MEMBER_OP t2= typeNameWithArguments
                                    {
                                    m2=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_packageQualifiedClass6612); if (state.failed) return retval;

                                    if ( state.backtracking==0 ) { qt = new QualifiedType(null);
                                                  qt.setOuterType(retval.type);
                                                  qt.setEndToken(m2); 
                                                  retval.type =qt; }

                                    pushFollow(FOLLOW_typeNameWithArguments_in_packageQualifiedClass6642);
                                    t2=typeNameWithArguments();

                                    state._fsp--;
                                    if (state.failed) return retval;

                                    if ( state.backtracking==0 ) { if ((t2!=null?t2.identifier:null)!=null) {
                                                    qt.setEndToken(null);
                                                    qt.setIdentifier((t2!=null?t2.identifier:null));
                                                  }
                                                  if ((t2!=null?t2.typeArgumentList:null)!=null)
                                                    qt.setTypeArgumentList((t2!=null?t2.typeArgumentList:null));
                                                  retval.expression = new ExtendedTypeExpression(null);
                                                  retval.expression.setExtendedType(retval.type); }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "packageQualifiedClass"


    public static class unqualifiedClass_return extends ParserRuleReturnScope {
        public SimpleType type;
        public ExtendedTypeExpression expression;
    };


    // $ANTLR start "unqualifiedClass"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1026:1: unqualifiedClass returns [SimpleType type, ExtendedTypeExpression expression] : t0= typeNameWithArguments (m3= MEMBER_OP (t3= typeNameWithArguments )? )? ;
    public PsiCompatibleCeylonParser.unqualifiedClass_return unqualifiedClass() throws RecognitionException {
        PsiCompatibleCeylonParser.unqualifiedClass_return retval = new PsiCompatibleCeylonParser.unqualifiedClass_return();
        retval.start = input.LT(1);


        Token m3=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return t0 =null;

        PsiCompatibleCeylonParser.typeNameWithArguments_return t3 =null;


         BaseType bt = null;
                    QualifiedType qt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1029:5: (t0= typeNameWithArguments (m3= MEMBER_OP (t3= typeNameWithArguments )? )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1029:7: t0= typeNameWithArguments (m3= MEMBER_OP (t3= typeNameWithArguments )? )?
            {
            pushFollow(FOLLOW_typeNameWithArguments_in_unqualifiedClass6720);
            t0=typeNameWithArguments();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { bt = new BaseType(null);
                    bt.setIdentifier((t0!=null?t0.identifier:null));
                    if ((t0!=null?t0.typeArgumentList:null)!=null)
                        bt.setTypeArgumentList((t0!=null?t0.typeArgumentList:null));
                    retval.type =bt; 
                    retval.expression = new ExtendedTypeExpression(null);
                    retval.expression.setExtendedType(retval.type); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1037:7: (m3= MEMBER_OP (t3= typeNameWithArguments )? )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==MEMBER_OP) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1038:9: m3= MEMBER_OP (t3= typeNameWithArguments )?
                    {
                    m3=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_unqualifiedClass6749); if (state.failed) return retval;

                    if ( state.backtracking==0 ) { qt = new QualifiedType(null);
                              qt.setOuterType(retval.type);
                              qt.setEndToken(m3); 
                              retval.type =qt; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1043:9: (t3= typeNameWithArguments )?
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( (LA93_0==UIDENTIFIER) ) {
                        alt93=1;
                    }
                    switch (alt93) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1044:11: t3= typeNameWithArguments
                            {
                            pushFollow(FOLLOW_typeNameWithArguments_in_unqualifiedClass6783);
                            t3=typeNameWithArguments();

                            state._fsp--;
                            if (state.failed) return retval;

                            if ( state.backtracking==0 ) { if ((t3!=null?t3.identifier:null)!=null) {
                                          qt.setEndToken(null);
                                          qt.setIdentifier((t3!=null?t3.identifier:null));
                                        }
                                        if ((t3!=null?t3.typeArgumentList:null)!=null)
                                            qt.setTypeArgumentList((t3!=null?t3.typeArgumentList:null));
                                        retval.expression = new ExtendedTypeExpression(null);
                                        retval.expression.setExtendedType(retval.type); }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "unqualifiedClass"


    public static class superQualifiedClass_return extends ParserRuleReturnScope {
        public SimpleType type;
        public ExtendedTypeExpression expression;
    };


    // $ANTLR start "superQualifiedClass"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1057:1: superQualifiedClass returns [SimpleType type, ExtendedTypeExpression expression] : SUPER m4= MEMBER_OP (t4= typeNameWithArguments )? ;
    public PsiCompatibleCeylonParser.superQualifiedClass_return superQualifiedClass() throws RecognitionException {
        PsiCompatibleCeylonParser.superQualifiedClass_return retval = new PsiCompatibleCeylonParser.superQualifiedClass_return();
        retval.start = input.LT(1);


        Token m4=null;
        Token SUPER147=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return t4 =null;


         QualifiedType qt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1059:5: ( SUPER m4= MEMBER_OP (t4= typeNameWithArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1059:7: SUPER m4= MEMBER_OP (t4= typeNameWithArguments )?
            {
            SUPER147=(Token)match(input,SUPER,FOLLOW_SUPER_in_superQualifiedClass6845); if (state.failed) return retval;

            if ( state.backtracking==0 ) { SuperType st = new SuperType(SUPER147); 
                    qt = new QualifiedType(null); 
                    qt.setOuterType(st); 
                    retval.type =qt; }

            m4=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_superQualifiedClass6864); if (state.failed) return retval;

            if ( state.backtracking==0 ) { qt.setEndToken(m4); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1066:7: (t4= typeNameWithArguments )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==UIDENTIFIER) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1067:9: t4= typeNameWithArguments
                    {
                    pushFollow(FOLLOW_typeNameWithArguments_in_superQualifiedClass6892);
                    t4=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { if ((t4!=null?t4.identifier:null)!=null) {
                                qt.setEndToken(null);
                                qt.setIdentifier((t4!=null?t4.identifier:null));
                              }
                              if ((t4!=null?t4.typeArgumentList:null)!=null)
                                qt.setTypeArgumentList((t4!=null?t4.typeArgumentList:null));
                              retval.expression = new ExtendedTypeExpression(null);
                              retval.expression.setExtendedType(retval.type); }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "superQualifiedClass"


    public static class classInstantiation_return extends ParserRuleReturnScope {
        public SimpleType type;
        public InvocationExpression invocationExpression;
    };


    // $ANTLR start "classInstantiation"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1079:1: classInstantiation returns [SimpleType type, InvocationExpression invocationExpression] : (pq= packageQualifiedClass |uq= unqualifiedClass |sq= superQualifiedClass ) (pa= positionalArguments )? ;
    public PsiCompatibleCeylonParser.classInstantiation_return classInstantiation() throws RecognitionException {
        PsiCompatibleCeylonParser.classInstantiation_return retval = new PsiCompatibleCeylonParser.classInstantiation_return();
        retval.start = input.LT(1);


        PsiCompatibleCeylonParser.packageQualifiedClass_return pq =null;

        PsiCompatibleCeylonParser.unqualifiedClass_return uq =null;

        PsiCompatibleCeylonParser.superQualifiedClass_return sq =null;

        PositionalArgumentList pa =null;


         ExtendedTypeExpression ete = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1081:5: ( (pq= packageQualifiedClass |uq= unqualifiedClass |sq= superQualifiedClass ) (pa= positionalArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1081:7: (pq= packageQualifiedClass |uq= unqualifiedClass |sq= superQualifiedClass ) (pa= positionalArguments )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1081:7: (pq= packageQualifiedClass |uq= unqualifiedClass |sq= superQualifiedClass )
            int alt96=3;
            switch ( input.LA(1) ) {
            case PACKAGE:
                {
                alt96=1;
                }
                break;
            case UIDENTIFIER:
                {
                alt96=2;
                }
                break;
            case SUPER:
                {
                alt96=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;

            }

            switch (alt96) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1082:8: pq= packageQualifiedClass
                    {
                    pushFollow(FOLLOW_packageQualifiedClass_in_classInstantiation6952);
                    pq=packageQualifiedClass();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =(pq!=null?pq.type:null); ete=(pq!=null?pq.expression:null); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1085:8: uq= unqualifiedClass
                    {
                    pushFollow(FOLLOW_unqualifiedClass_in_classInstantiation6980);
                    uq=unqualifiedClass();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =(uq!=null?uq.type:null); ete=(uq!=null?uq.expression:null); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1088:8: sq= superQualifiedClass
                    {
                    pushFollow(FOLLOW_superQualifiedClass_in_classInstantiation7008);
                    sq=superQualifiedClass();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =(sq!=null?sq.type:null); ete=(sq!=null?sq.expression:null); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1091:7: (pa= positionalArguments )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==LPAREN) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1092:9: pa= positionalArguments
                    {
                    pushFollow(FOLLOW_positionalArguments_in_classInstantiation7044);
                    pa=positionalArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.invocationExpression = new InvocationExpression(null);
                              retval.invocationExpression.setPrimary(ete);
                              retval.invocationExpression.setPositionalArgumentList(pa); }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "classInstantiation"



    // $ANTLR start "satisfiedTypes"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1104:1: satisfiedTypes returns [SatisfiedTypes satisfiedTypes] : SATISFIES (t1= primaryType ) ( (i= INTERSECTION_OP | COMMA | UNION_OP ) (t2= primaryType ) )* ;
    public SatisfiedTypes satisfiedTypes() throws RecognitionException {
        SatisfiedTypes satisfiedTypes = null;


        Token i=null;
        Token SATISFIES148=null;
        StaticType t1 =null;

        StaticType t2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1105:5: ( SATISFIES (t1= primaryType ) ( (i= INTERSECTION_OP | COMMA | UNION_OP ) (t2= primaryType ) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1105:7: SATISFIES (t1= primaryType ) ( (i= INTERSECTION_OP | COMMA | UNION_OP ) (t2= primaryType ) )*
            {
            SATISFIES148=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiedTypes7094); if (state.failed) return satisfiedTypes;

            if ( state.backtracking==0 ) { satisfiedTypes = new SatisfiedTypes(SATISFIES148); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1107:7: (t1= primaryType )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1108:9: t1= primaryType
            {
            pushFollow(FOLLOW_primaryType_in_satisfiedTypes7124);
            t1=primaryType();

            state._fsp--;
            if (state.failed) return satisfiedTypes;

            if ( state.backtracking==0 ) { if (t1!=null) satisfiedTypes.addType(t1); }

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1111:7: ( (i= INTERSECTION_OP | COMMA | UNION_OP ) (t2= primaryType ) )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==COMMA||LA99_0==INTERSECTION_OP||LA99_0==UNION_OP) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1112:9: (i= INTERSECTION_OP | COMMA | UNION_OP ) (t2= primaryType )
            	    {
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1112:9: (i= INTERSECTION_OP | COMMA | UNION_OP )
            	    int alt98=3;
            	    switch ( input.LA(1) ) {
            	    case INTERSECTION_OP:
            	        {
            	        alt98=1;
            	        }
            	        break;
            	    case COMMA:
            	        {
            	        alt98=2;
            	        }
            	        break;
            	    case UNION_OP:
            	        {
            	        alt98=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return satisfiedTypes;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 98, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt98) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1113:11: i= INTERSECTION_OP
            	            {
            	            i=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_satisfiedTypes7176); if (state.failed) return satisfiedTypes;

            	            if ( state.backtracking==0 ) { satisfiedTypes.setEndToken(i); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1116:11: COMMA
            	            {
            	            match(input,COMMA,FOLLOW_COMMA_in_satisfiedTypes7211); if (state.failed) return satisfiedTypes;

            	            }
            	            break;
            	        case 3 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1116:17: UNION_OP
            	            {
            	            match(input,UNION_OP,FOLLOW_UNION_OP_in_satisfiedTypes7213); if (state.failed) return satisfiedTypes;

            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                          new MismatchedTokenException(INTERSECTION_OP, input)); }

            	            }
            	            break;

            	    }


            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1120:9: (t2= primaryType )
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1121:11: t2= primaryType
            	    {
            	    pushFollow(FOLLOW_primaryType_in_satisfiedTypes7259);
            	    t2=primaryType();

            	    state._fsp--;
            	    if (state.failed) return satisfiedTypes;

            	    if ( state.backtracking==0 ) { if (t2!=null) {
            	                    satisfiedTypes.addType(t2); 
            	                    satisfiedTypes.setEndToken(null); } }

            	    }


            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return satisfiedTypes;
    }
    // $ANTLR end "satisfiedTypes"



    // $ANTLR start "caseTypes"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1129:1: caseTypes returns [CaseTypes caseTypes] : CASE_TYPES ct1= caseType ( (u= UNION_OP | COMMA | INTERSECTION_OP ) (ct2= caseType ) )* ;
    public CaseTypes caseTypes() throws RecognitionException {
        CaseTypes caseTypes = null;


        Token u=null;
        Token CASE_TYPES149=null;
        PsiCompatibleCeylonParser.caseType_return ct1 =null;

        PsiCompatibleCeylonParser.caseType_return ct2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1130:5: ( CASE_TYPES ct1= caseType ( (u= UNION_OP | COMMA | INTERSECTION_OP ) (ct2= caseType ) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1130:7: CASE_TYPES ct1= caseType ( (u= UNION_OP | COMMA | INTERSECTION_OP ) (ct2= caseType ) )*
            {
            CASE_TYPES149=(Token)match(input,CASE_TYPES,FOLLOW_CASE_TYPES_in_caseTypes7311); if (state.failed) return caseTypes;

            if ( state.backtracking==0 ) { caseTypes = new CaseTypes(CASE_TYPES149); }

            pushFollow(FOLLOW_caseType_in_caseTypes7329);
            ct1=caseType();

            state._fsp--;
            if (state.failed) return caseTypes;

            if ( state.backtracking==0 ) { if ((ct1!=null?ct1.type:null)!=null) caseTypes.addType((ct1!=null?ct1.type:null)); 
                    if ((ct1!=null?ct1.instance:null)!=null) caseTypes.addBaseMemberExpression((ct1!=null?ct1.instance:null)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1135:7: ( (u= UNION_OP | COMMA | INTERSECTION_OP ) (ct2= caseType ) )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==COMMA||LA101_0==INTERSECTION_OP||LA101_0==UNION_OP) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1136:9: (u= UNION_OP | COMMA | INTERSECTION_OP ) (ct2= caseType )
            	    {
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1136:9: (u= UNION_OP | COMMA | INTERSECTION_OP )
            	    int alt100=3;
            	    switch ( input.LA(1) ) {
            	    case UNION_OP:
            	        {
            	        alt100=1;
            	        }
            	        break;
            	    case COMMA:
            	        {
            	        alt100=2;
            	        }
            	        break;
            	    case INTERSECTION_OP:
            	        {
            	        alt100=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return caseTypes;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 100, 0, input);

            	        throw nvae;

            	    }

            	    switch (alt100) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1137:11: u= UNION_OP
            	            {
            	            u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_caseTypes7371); if (state.failed) return caseTypes;

            	            if ( state.backtracking==0 ) { caseTypes.setEndToken(u); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1140:11: COMMA
            	            {
            	            match(input,COMMA,FOLLOW_COMMA_in_caseTypes7407); if (state.failed) return caseTypes;

            	            }
            	            break;
            	        case 3 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1140:17: INTERSECTION_OP
            	            {
            	            match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_caseTypes7409); if (state.failed) return caseTypes;

            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                          new MismatchedTokenException(UNION_OP, input)); }

            	            }
            	            break;

            	    }


            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1144:9: (ct2= caseType )
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1145:11: ct2= caseType
            	    {
            	    pushFollow(FOLLOW_caseType_in_caseTypes7455);
            	    ct2=caseType();

            	    state._fsp--;
            	    if (state.failed) return caseTypes;

            	    if ( state.backtracking==0 ) { if ((ct2!=null?ct2.type:null)!=null) caseTypes.addType((ct2!=null?ct2.type:null)); 
            	                if ((ct2!=null?ct2.instance:null)!=null) caseTypes.addBaseMemberExpression((ct2!=null?ct2.instance:null)); 
            	                if ((ct2!=null?ct2.type:null)!=null||(ct2!=null?ct2.instance:null)!=null) caseTypes.setEndToken(null); }

            	    }


            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return caseTypes;
    }
    // $ANTLR end "caseTypes"


    public static class caseType_return extends ParserRuleReturnScope {
        public StaticType type;
        public BaseMemberExpression instance;
    };


    // $ANTLR start "caseType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1153:1: caseType returns [StaticType type, BaseMemberExpression instance] : (t= primaryType | memberName );
    public PsiCompatibleCeylonParser.caseType_return caseType() throws RecognitionException {
        PsiCompatibleCeylonParser.caseType_return retval = new PsiCompatibleCeylonParser.caseType_return();
        retval.start = input.LT(1);


        StaticType t =null;

        Identifier memberName150 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1154:5: (t= primaryType | memberName )
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( ((LA102_0 >= LBRACE && LA102_0 <= LBRACKET)||LA102_0==PACKAGE||LA102_0==SMALLER_OP||LA102_0==UIDENTIFIER) ) {
                alt102=1;
            }
            else if ( (LA102_0==LIDENTIFIER) ) {
                alt102=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 102, 0, input);

                throw nvae;

            }
            switch (alt102) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1154:7: t= primaryType
                    {
                    pushFollow(FOLLOW_primaryType_in_caseType7509);
                    t=primaryType();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =t;}

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1156:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_caseType7526);
                    memberName150=memberName();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.instance = new BaseMemberExpression(null);
                            retval.instance.setIdentifier(memberName150);
                            retval.instance.setTypeArguments( new InferredTypeArguments(null) ); }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "caseType"



    // $ANTLR start "abstractedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1164:1: abstractedType returns [AbstractedType abstractedType] : ABSTRACTED_TYPE primaryType ;
    public AbstractedType abstractedType() throws RecognitionException {
        AbstractedType abstractedType = null;


        Token ABSTRACTED_TYPE151=null;
        StaticType primaryType152 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1165:5: ( ABSTRACTED_TYPE primaryType )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1165:7: ABSTRACTED_TYPE primaryType
            {
            ABSTRACTED_TYPE151=(Token)match(input,ABSTRACTED_TYPE,FOLLOW_ABSTRACTED_TYPE_in_abstractedType7561); if (state.failed) return abstractedType;

            if ( state.backtracking==0 ) { abstractedType = new AbstractedType(ABSTRACTED_TYPE151); }

            pushFollow(FOLLOW_primaryType_in_abstractedType7577);
            primaryType152=primaryType();

            state._fsp--;
            if (state.failed) return abstractedType;

            if ( state.backtracking==0 ) { abstractedType.setType(primaryType152); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return abstractedType;
    }
    // $ANTLR end "abstractedType"



    // $ANTLR start "parameters"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1171:1: parameters returns [ParameterList parameterList] : LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN ;
    public ParameterList parameters() throws RecognitionException {
        ParameterList parameterList = null;


        Token c=null;
        Token LPAREN153=null;
        Token RPAREN154=null;
        Parameter ap1 =null;

        Parameter ap2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1172:5: ( LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1172:7: LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN
            {
            LPAREN153=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parameters7606); if (state.failed) return parameterList;

            if ( state.backtracking==0 ) { parameterList =new ParameterList(LPAREN153); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1174:7: (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==ALIAS||(LA105_0 >= ASSERT && LA105_0 <= ASSIGN)||(LA105_0 >= BACKTICK && LA105_0 <= BREAK)||(LA105_0 >= CHAR_LITERAL && LA105_0 <= CLASS_DEFINITION)||LA105_0==COMPILER_ANNOTATION||LA105_0==CONTINUE||(LA105_0 >= DECREMENT_OP && LA105_0 <= DIFFERENCE_OP)||LA105_0==DYNAMIC||(LA105_0 >= FLOAT_LITERAL && LA105_0 <= FUNCTION_MODIFIER)||(LA105_0 >= IF_CLAUSE && LA105_0 <= INTERFACE_DEFINITION)||LA105_0==IN_OP||(LA105_0 >= LBRACE && LA105_0 <= LIDENTIFIER)||LA105_0==LPAREN||LA105_0==MODULE||(LA105_0 >= NATURAL_LITERAL && LA105_0 <= NEW)||(LA105_0 >= NOT_OP && LA105_0 <= OBJECT_DEFINITION)||(LA105_0 >= OUT && LA105_0 <= PACKAGE)||LA105_0==PRODUCT_OP||LA105_0==RETURN||(LA105_0 >= SEMICOLON && LA105_0 <= SMALLER_OP)||LA105_0==STRING_LITERAL||LA105_0==STRING_START||(LA105_0 >= SUM_OP && LA105_0 <= SWITCH_CLAUSE)||(LA105_0 >= THIS && LA105_0 <= UIDENTIFIER)||(LA105_0 >= VALUE_MODIFIER && LA105_0 <= WHILE_CLAUSE)) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1175:9: ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )*
                    {
                    pushFollow(FOLLOW_parameterDeclarationOrRef_in_parameters7634);
                    ap1=parameterDeclarationOrRef();

                    state._fsp--;
                    if (state.failed) return parameterList;

                    if ( state.backtracking==0 ) { if (ap1!=null)
                                  parameterList.addParameter(ap1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1178:9: (c= COMMA (ap2= parameterDeclarationOrRef |) )*
                    loop104:
                    do {
                        int alt104=2;
                        int LA104_0 = input.LA(1);

                        if ( (LA104_0==COMMA) ) {
                            alt104=1;
                        }


                        switch (alt104) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1179:11: c= COMMA (ap2= parameterDeclarationOrRef |)
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_parameters7669); if (state.failed) return parameterList;

                    	    if ( state.backtracking==0 ) { parameterList.setEndToken(c); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1181:11: (ap2= parameterDeclarationOrRef |)
                    	    int alt103=2;
                    	    int LA103_0 = input.LA(1);

                    	    if ( (LA103_0==ALIAS||(LA103_0 >= ASSERT && LA103_0 <= ASSIGN)||(LA103_0 >= BACKTICK && LA103_0 <= BREAK)||(LA103_0 >= CHAR_LITERAL && LA103_0 <= CLASS_DEFINITION)||LA103_0==COMPILER_ANNOTATION||LA103_0==CONTINUE||(LA103_0 >= DECREMENT_OP && LA103_0 <= DIFFERENCE_OP)||LA103_0==DYNAMIC||(LA103_0 >= FLOAT_LITERAL && LA103_0 <= FUNCTION_MODIFIER)||(LA103_0 >= IF_CLAUSE && LA103_0 <= INTERFACE_DEFINITION)||LA103_0==IN_OP||(LA103_0 >= LBRACE && LA103_0 <= LIDENTIFIER)||LA103_0==LPAREN||LA103_0==MODULE||(LA103_0 >= NATURAL_LITERAL && LA103_0 <= NEW)||(LA103_0 >= NOT_OP && LA103_0 <= OBJECT_DEFINITION)||(LA103_0 >= OUT && LA103_0 <= PACKAGE)||LA103_0==PRODUCT_OP||LA103_0==RETURN||(LA103_0 >= SEMICOLON && LA103_0 <= SMALLER_OP)||LA103_0==STRING_LITERAL||LA103_0==STRING_START||(LA103_0 >= SUM_OP && LA103_0 <= SWITCH_CLAUSE)||(LA103_0 >= THIS && LA103_0 <= UIDENTIFIER)||(LA103_0 >= VALUE_MODIFIER && LA103_0 <= WHILE_CLAUSE)) ) {
                    	        alt103=1;
                    	    }
                    	    else if ( (LA103_0==COMMA||LA103_0==RPAREN) ) {
                    	        alt103=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return parameterList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 103, 0, input);

                    	        throw nvae;

                    	    }
                    	    switch (alt103) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1182:13: ap2= parameterDeclarationOrRef
                    	            {
                    	            pushFollow(FOLLOW_parameterDeclarationOrRef_in_parameters7709);
                    	            ap2=parameterDeclarationOrRef();

                    	            state._fsp--;
                    	            if (state.failed) return parameterList;

                    	            if ( state.backtracking==0 ) { if (ap2!=null) {
                    	                              parameterList.addParameter(ap2); 
                    	                              parameterList.setEndToken(null); } }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1187:13: 
                    	            {
                    	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                    	                            new MismatchedTokenException(UIDENTIFIER, input)); }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop104;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN154=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parameters7789); if (state.failed) return parameterList;

            if ( state.backtracking==0 ) { parameterList.setEndToken(RPAREN154); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameterList;
    }
    // $ANTLR end "parameters"



    // $ANTLR start "parameter"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1196:1: parameter returns [ParameterDeclaration parameter] : compilerAnnotations annotations parameterDeclaration ;
    public ParameterDeclaration parameter() throws RecognitionException {
        ParameterDeclaration parameter = null;


        TypedDeclaration parameterDeclaration155 =null;

        List<CompilerAnnotation> compilerAnnotations156 =null;

        AnnotationList annotations157 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1197:5: ( compilerAnnotations annotations parameterDeclaration )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1197:7: compilerAnnotations annotations parameterDeclaration
            {
            pushFollow(FOLLOW_compilerAnnotations_in_parameter7818);
            compilerAnnotations156=compilerAnnotations();

            state._fsp--;
            if (state.failed) return parameter;

            pushFollow(FOLLOW_annotations_in_parameter7826);
            annotations157=annotations();

            state._fsp--;
            if (state.failed) return parameter;

            pushFollow(FOLLOW_parameterDeclaration_in_parameter7834);
            parameterDeclaration155=parameterDeclaration();

            state._fsp--;
            if (state.failed) return parameter;

            if ( state.backtracking==0 ) { TypedDeclaration d = parameterDeclaration155;
                    d.getCompilerAnnotations().addAll(compilerAnnotations156);
                    d.setAnnotationList(annotations157);
                    if (d instanceof AttributeDeclaration) {
                        ValueParameterDeclaration vp = new ValueParameterDeclaration(null);
                        vp.setTypedDeclaration(d);
                        parameter = vp;
                    }
                    else if (d instanceof MethodDeclaration) {
                        FunctionalParameterDeclaration fp = new FunctionalParameterDeclaration(null);
                        fp.setTypedDeclaration(d);
                        parameter = fp;
                    }
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameter"



    // $ANTLR start "parameterDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1216:1: parameterDeclaration returns [TypedDeclaration declaration] : ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( parameters )+ ( functionSpecifier )? ) ;
    public TypedDeclaration parameterDeclaration() throws RecognitionException {
        TypedDeclaration declaration = null;


        Token VOID_MODIFIER159=null;
        Token FUNCTION_MODIFIER160=null;
        Token DYNAMIC161=null;
        Token VALUE_MODIFIER162=null;
        Type variadicType158 =null;

        Identifier memberName163 =null;

        SpecifierExpression specifier164 =null;

        ParameterList parameters165 =null;

        SpecifierExpression functionSpecifier166 =null;


         AttributeDeclaration a = new AttributeDeclaration(null); 
                    MethodDeclaration m = new MethodDeclaration(null);
                    declaration = a; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1220:5: ( ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( parameters )+ ( functionSpecifier )? ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1220:7: ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( parameters )+ ( functionSpecifier )? )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1220:7: ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER )
            int alt106=5;
            switch ( input.LA(1) ) {
            case LBRACE:
            case LBRACKET:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt106=1;
                }
                break;
            case VOID_MODIFIER:
                {
                alt106=2;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt106=3;
                }
                break;
            case DYNAMIC:
                {
                alt106=4;
                }
                break;
            case VALUE_MODIFIER:
                {
                alt106=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;

            }

            switch (alt106) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1221:9: variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_parameterDeclaration7887);
                    variadicType158=variadicType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { a.setType(variadicType158);
                              m.setType(variadicType158); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1224:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER159=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_parameterDeclaration7907); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { m.setType(new VoidModifier(VOID_MODIFIER159));
                              declaration =m; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1227:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER160=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_parameterDeclaration7927); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { m.setType(new FunctionModifier(FUNCTION_MODIFIER160));
                              declaration =m; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1230:9: DYNAMIC
                    {
                    DYNAMIC161=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_parameterDeclaration7947); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { a.setType(new DynamicModifier(DYNAMIC161));
                              m.setType(new DynamicModifier(DYNAMIC161)); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1233:9: VALUE_MODIFIER
                    {
                    VALUE_MODIFIER162=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_parameterDeclaration7967); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { a.setType(new ValueModifier(VALUE_MODIFIER162)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberName_in_parameterDeclaration7993);
            memberName163=memberName();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { a.setIdentifier(memberName163);
                    m.setIdentifier(memberName163); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1239:7: ( ( specifier )? | ( parameters )+ ( functionSpecifier )? )
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==COMMA||LA110_0==RPAREN||LA110_0==SPECIFY) ) {
                alt110=1;
            }
            else if ( (LA110_0==LPAREN) ) {
                alt110=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;

            }
            switch (alt110) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1240:9: ( specifier )?
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1240:9: ( specifier )?
                    int alt107=2;
                    int LA107_0 = input.LA(1);

                    if ( (LA107_0==SPECIFY) ) {
                        alt107=1;
                    }
                    switch (alt107) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1241:11: specifier
                            {
                            pushFollow(FOLLOW_specifier_in_parameterDeclaration8031);
                            specifier164=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { a.setSpecifierOrInitializerExpression(specifier164); }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1245:9: ( parameters )+ ( functionSpecifier )?
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1245:9: ( parameters )+
                    int cnt108=0;
                    loop108:
                    do {
                        int alt108=2;
                        int LA108_0 = input.LA(1);

                        if ( (LA108_0==LPAREN) ) {
                            alt108=1;
                        }


                        switch (alt108) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1246:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_parameterDeclaration8084);
                    	    parameters165=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { m.addParameterList(parameters165);
                    	                declaration =m; }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt108 >= 1 ) break loop108;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(108, input);
                                throw eee;
                        }
                        cnt108++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1250:9: ( functionSpecifier )?
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==COMPUTE||LA109_0==SPECIFY) ) {
                        alt109=1;
                    }
                    switch (alt109) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1251:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_parameterDeclaration8129);
                            functionSpecifier166=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { m.setSpecifierExpression(functionSpecifier166); }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "parameterDeclaration"



    // $ANTLR start "parameterRef"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1257:1: parameterRef returns [InitializerParameter parameter] : memberName ( specifier )? ;
    public InitializerParameter parameterRef() throws RecognitionException {
        InitializerParameter parameter = null;


        Identifier memberName167 =null;

        SpecifierExpression specifier168 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1258:5: ( memberName ( specifier )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1258:7: memberName ( specifier )?
            {
            pushFollow(FOLLOW_memberName_in_parameterRef8181);
            memberName167=memberName();

            state._fsp--;
            if (state.failed) return parameter;

            if ( state.backtracking==0 ) { parameter = new InitializerParameter(null);
                    parameter.setIdentifier(memberName167); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1261:7: ( specifier )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==SPECIFY) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1262:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_parameterRef8207);
                    specifier168=specifier();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter.setSpecifierExpression(specifier168); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameterRef"



    // $ANTLR start "parameterDeclarationOrRef"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1267:1: parameterDeclarationOrRef returns [Parameter parameter] : (r= parameterRef |p= parameter );
    public Parameter parameterDeclarationOrRef() throws RecognitionException {
        Parameter parameter = null;


        InitializerParameter r =null;

        ParameterDeclaration p =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1268:5: (r= parameterRef |p= parameter )
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==LIDENTIFIER) ) {
                int LA112_1 = input.LA(2);

                if ( (LA112_1==COMMA||LA112_1==RPAREN||LA112_1==SPECIFY) ) {
                    alt112=1;
                }
                else if ( (LA112_1==DYNAMIC||LA112_1==FUNCTION_MODIFIER||(LA112_1 >= LBRACE && LA112_1 <= LBRACKET)||LA112_1==LIDENTIFIER||LA112_1==LPAREN||LA112_1==PACKAGE||LA112_1==SMALLER_OP||LA112_1==UIDENTIFIER||LA112_1==VALUE_MODIFIER||LA112_1==VOID_MODIFIER) ) {
                    alt112=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return parameter;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 112, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA112_0==COMPILER_ANNOTATION||LA112_0==DYNAMIC||LA112_0==FUNCTION_MODIFIER||(LA112_0 >= LBRACE && LA112_0 <= LBRACKET)||LA112_0==PACKAGE||LA112_0==SMALLER_OP||LA112_0==STRING_LITERAL||LA112_0==UIDENTIFIER||(LA112_0 >= VALUE_MODIFIER && LA112_0 <= VOID_MODIFIER)) ) {
                alt112=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return parameter;}
                NoViableAltException nvae =
                    new NoViableAltException("", 112, 0, input);

                throw nvae;

            }
            switch (alt112) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1269:7: r= parameterRef
                    {
                    pushFollow(FOLLOW_parameterRef_in_parameterDeclarationOrRef8255);
                    r=parameterRef();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter =r; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1272:7: p= parameter
                    {
                    pushFollow(FOLLOW_parameter_in_parameterDeclarationOrRef8280);
                    p=parameter();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter =p; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameterDeclarationOrRef"



    // $ANTLR start "typeParameters"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1276:1: typeParameters returns [TypeParameterList typeParameterList] : SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP ;
    public TypeParameterList typeParameters() throws RecognitionException {
        TypeParameterList typeParameterList = null;


        Token c=null;
        Token SMALLER_OP169=null;
        Token LARGER_OP170=null;
        TypeParameterDeclaration tp1 =null;

        TypeParameterDeclaration tp2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1277:5: ( SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1277:7: SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP
            {
            SMALLER_OP169=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeParameters8309); if (state.failed) return typeParameterList;

            if ( state.backtracking==0 ) { typeParameterList = new TypeParameterList(SMALLER_OP169); }

            pushFollow(FOLLOW_typeParameter_in_typeParameters8327);
            tp1=typeParameter();

            state._fsp--;
            if (state.failed) return typeParameterList;

            if ( state.backtracking==0 ) { if (tp1 instanceof TypeParameterDeclaration)
                        typeParameterList.addTypeParameterDeclaration(tp1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1282:7: (c= COMMA (tp2= typeParameter |) )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==COMMA) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1283:9: c= COMMA (tp2= typeParameter |)
            	    {
            	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_typeParameters8355); if (state.failed) return typeParameterList;

            	    if ( state.backtracking==0 ) { typeParameterList.setEndToken(c); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1285:9: (tp2= typeParameter |)
            	    int alt113=2;
            	    int LA113_0 = input.LA(1);

            	    if ( (LA113_0==ALIAS||(LA113_0 >= ASSERT && LA113_0 <= ASSIGN)||(LA113_0 >= BACKTICK && LA113_0 <= BREAK)||(LA113_0 >= CHAR_LITERAL && LA113_0 <= CLASS_DEFINITION)||LA113_0==COMPILER_ANNOTATION||LA113_0==CONTINUE||(LA113_0 >= DECREMENT_OP && LA113_0 <= DIFFERENCE_OP)||LA113_0==DYNAMIC||(LA113_0 >= FLOAT_LITERAL && LA113_0 <= FUNCTION_MODIFIER)||(LA113_0 >= IF_CLAUSE && LA113_0 <= INTERFACE_DEFINITION)||LA113_0==IN_OP||(LA113_0 >= LBRACE && LA113_0 <= LIDENTIFIER)||LA113_0==LPAREN||LA113_0==MODULE||(LA113_0 >= NATURAL_LITERAL && LA113_0 <= NEW)||(LA113_0 >= NOT_OP && LA113_0 <= OBJECT_DEFINITION)||(LA113_0 >= OUT && LA113_0 <= PACKAGE)||LA113_0==PRODUCT_OP||LA113_0==RETURN||(LA113_0 >= SEMICOLON && LA113_0 <= SMALLER_OP)||LA113_0==STRING_LITERAL||LA113_0==STRING_START||(LA113_0 >= SUM_OP && LA113_0 <= SWITCH_CLAUSE)||(LA113_0 >= THIS && LA113_0 <= UIDENTIFIER)||(LA113_0 >= VALUE_MODIFIER && LA113_0 <= WHILE_CLAUSE)) ) {
            	        alt113=1;
            	    }
            	    else if ( (LA113_0==COMMA||LA113_0==LARGER_OP) ) {
            	        alt113=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return typeParameterList;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 113, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt113) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1286:11: tp2= typeParameter
            	            {
            	            pushFollow(FOLLOW_typeParameter_in_typeParameters8389);
            	            tp2=typeParameter();

            	            state._fsp--;
            	            if (state.failed) return typeParameterList;

            	            if ( state.backtracking==0 ) { if (tp2 instanceof TypeParameterDeclaration)
            	                            typeParameterList.addTypeParameterDeclaration(tp2);
            	                        typeParameterList.setEndToken(null); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1290:11: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                            new MismatchedTokenException(UIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);


            LARGER_OP170=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeParameters8440); if (state.failed) return typeParameterList;

            if ( state.backtracking==0 ) { typeParameterList.setEndToken(LARGER_OP170); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeParameterList;
    }
    // $ANTLR end "typeParameters"



    // $ANTLR start "typeParameter"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1298:1: typeParameter returns [TypeParameterDeclaration typeParameter] : compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )? ;
    public TypeParameterDeclaration typeParameter() throws RecognitionException {
        TypeParameterDeclaration typeParameter = null;


        TypeVariance variance171 =null;

        Identifier typeNameDeclaration172 =null;

        TypeSpecifier typeDefault173 =null;

        List<CompilerAnnotation> compilerAnnotations174 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1299:5: ( compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1299:7: compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )?
            {
            if ( state.backtracking==0 ) { typeParameter = new TypeParameterDeclaration(null); }

            pushFollow(FOLLOW_compilerAnnotations_in_typeParameter8477);
            compilerAnnotations174=compilerAnnotations();

            state._fsp--;
            if (state.failed) return typeParameter;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1301:7: ( variance )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==IN_OP||LA115_0==OUT) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1302:9: variance
                    {
                    pushFollow(FOLLOW_variance_in_typeParameter8496);
                    variance171=variance();

                    state._fsp--;
                    if (state.failed) return typeParameter;

                    if ( state.backtracking==0 ) { typeParameter.setTypeVariance(variance171); }

                    }
                    break;

            }


            pushFollow(FOLLOW_typeNameDeclaration_in_typeParameter8525);
            typeNameDeclaration172=typeNameDeclaration();

            state._fsp--;
            if (state.failed) return typeParameter;

            if ( state.backtracking==0 ) { typeParameter.setIdentifier(typeNameDeclaration172); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1307:7: ( typeDefault )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==SPECIFY) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1308:9: typeDefault
                    {
                    pushFollow(FOLLOW_typeDefault_in_typeParameter8551);
                    typeDefault173=typeDefault();

                    state._fsp--;
                    if (state.failed) return typeParameter;

                    if ( state.backtracking==0 ) { typeParameter.setTypeSpecifier(typeDefault173); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { typeParameter.getCompilerAnnotations().addAll(compilerAnnotations174); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeParameter;
    }
    // $ANTLR end "typeParameter"



    // $ANTLR start "variance"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1314:1: variance returns [TypeVariance typeVariance] : ( IN_OP | OUT );
    public TypeVariance variance() throws RecognitionException {
        TypeVariance typeVariance = null;


        Token IN_OP175=null;
        Token OUT176=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1315:5: ( IN_OP | OUT )
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==IN_OP) ) {
                alt117=1;
            }
            else if ( (LA117_0==OUT) ) {
                alt117=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return typeVariance;}
                NoViableAltException nvae =
                    new NoViableAltException("", 117, 0, input);

                throw nvae;

            }
            switch (alt117) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1315:7: IN_OP
                    {
                    IN_OP175=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_variance8599); if (state.failed) return typeVariance;

                    if ( state.backtracking==0 ) { typeVariance = new TypeVariance(IN_OP175); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1317:7: OUT
                    {
                    OUT176=(Token)match(input,OUT,FOLLOW_OUT_in_variance8615); if (state.failed) return typeVariance;

                    if ( state.backtracking==0 ) { typeVariance = new TypeVariance(OUT176); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeVariance;
    }
    // $ANTLR end "variance"



    // $ANTLR start "typeConstraint"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1321:1: typeConstraint returns [TypeConstraint typeConstraint] : compilerAnnotations TYPE_CONSTRAINT ( typeNameDeclaration )? ( typeParameters )? ( parameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )? ;
    public TypeConstraint typeConstraint() throws RecognitionException {
        TypeConstraint typeConstraint = null;


        Token TYPE_CONSTRAINT177=null;
        List<CompilerAnnotation> compilerAnnotations178 =null;

        Identifier typeNameDeclaration179 =null;

        TypeParameterList typeParameters180 =null;

        ParameterList parameters181 =null;

        CaseTypes caseTypes182 =null;

        SatisfiedTypes satisfiedTypes183 =null;

        AbstractedType abstractedType184 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1322:5: ( compilerAnnotations TYPE_CONSTRAINT ( typeNameDeclaration )? ( typeParameters )? ( parameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1322:7: compilerAnnotations TYPE_CONSTRAINT ( typeNameDeclaration )? ( typeParameters )? ( parameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )?
            {
            pushFollow(FOLLOW_compilerAnnotations_in_typeConstraint8648);
            compilerAnnotations178=compilerAnnotations();

            state._fsp--;
            if (state.failed) return typeConstraint;

            TYPE_CONSTRAINT177=(Token)match(input,TYPE_CONSTRAINT,FOLLOW_TYPE_CONSTRAINT_in_typeConstraint8656); if (state.failed) return typeConstraint;

            if ( state.backtracking==0 ) { typeConstraint = new TypeConstraint(TYPE_CONSTRAINT177); 
                    typeConstraint.getCompilerAnnotations().addAll(compilerAnnotations178); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1326:7: ( typeNameDeclaration )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==LIDENTIFIER||LA118_0==UIDENTIFIER) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1327:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_typeConstraint8682);
                    typeNameDeclaration179=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setIdentifier(typeNameDeclaration179); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1330:7: ( typeParameters )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==SMALLER_OP) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1331:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_typeConstraint8720);
                    typeParameters180=typeParameters();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setTypeParameterList(typeParameters180); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1334:7: ( parameters )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==LPAREN) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1335:9: parameters
                    {
                    pushFollow(FOLLOW_parameters_in_typeConstraint8758);
                    parameters181=parameters();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setParameterList(parameters181); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1338:7: ( caseTypes )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==CASE_TYPES) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1339:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_typeConstraint8795);
                    caseTypes182=caseTypes();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setCaseTypes(caseTypes182); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1343:7: ( satisfiedTypes )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==SATISFIES) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1344:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_typeConstraint8839);
                    satisfiedTypes183=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setSatisfiedTypes(satisfiedTypes183); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1347:7: ( abstractedType )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==ABSTRACTED_TYPE) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1348:9: abstractedType
                    {
                    pushFollow(FOLLOW_abstractedType_in_typeConstraint8877);
                    abstractedType184=abstractedType();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setAbstractedType(abstractedType184); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeConstraint;
    }
    // $ANTLR end "typeConstraint"



    // $ANTLR start "anonymousTypeConstraint"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1353:1: anonymousTypeConstraint returns [TypeConstraint typeConstraint] : TYPE_CONSTRAINT typeNameDeclaration ( caseTypes )? ( satisfiedTypes )? ;
    public TypeConstraint anonymousTypeConstraint() throws RecognitionException {
        TypeConstraint typeConstraint = null;


        Token TYPE_CONSTRAINT185=null;
        Identifier typeNameDeclaration186 =null;

        CaseTypes caseTypes187 =null;

        SatisfiedTypes satisfiedTypes188 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1354:5: ( TYPE_CONSTRAINT typeNameDeclaration ( caseTypes )? ( satisfiedTypes )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1354:7: TYPE_CONSTRAINT typeNameDeclaration ( caseTypes )? ( satisfiedTypes )?
            {
            TYPE_CONSTRAINT185=(Token)match(input,TYPE_CONSTRAINT,FOLLOW_TYPE_CONSTRAINT_in_anonymousTypeConstraint8917); if (state.failed) return typeConstraint;

            if ( state.backtracking==0 ) { typeConstraint = new TypeConstraint(TYPE_CONSTRAINT185); }

            pushFollow(FOLLOW_typeNameDeclaration_in_anonymousTypeConstraint8933);
            typeNameDeclaration186=typeNameDeclaration();

            state._fsp--;
            if (state.failed) return typeConstraint;

            if ( state.backtracking==0 ) { typeConstraint.setIdentifier(typeNameDeclaration186); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1358:7: ( caseTypes )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==CASE_TYPES) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1359:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_anonymousTypeConstraint8960);
                    caseTypes187=caseTypes();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setCaseTypes(caseTypes187); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1362:7: ( satisfiedTypes )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==SATISFIES) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1363:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_anonymousTypeConstraint8997);
                    satisfiedTypes188=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setSatisfiedTypes(satisfiedTypes188); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeConstraint;
    }
    // $ANTLR end "anonymousTypeConstraint"



    // $ANTLR start "typeConstraints"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1368:1: typeConstraints returns [TypeConstraintList typeConstraintList] : ( typeConstraint )+ ;
    public TypeConstraintList typeConstraints() throws RecognitionException {
        TypeConstraintList typeConstraintList = null;


        TypeConstraint typeConstraint189 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1369:5: ( ( typeConstraint )+ )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1369:7: ( typeConstraint )+
            {
            if ( state.backtracking==0 ) { typeConstraintList =new TypeConstraintList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1370:7: ( typeConstraint )+
            int cnt126=0;
            loop126:
            do {
                int alt126=2;
                int LA126_0 = input.LA(1);

                if ( (LA126_0==COMPILER_ANNOTATION||LA126_0==TYPE_CONSTRAINT) ) {
                    alt126=1;
                }


                switch (alt126) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1371:9: typeConstraint
            	    {
            	    pushFollow(FOLLOW_typeConstraint_in_typeConstraints9055);
            	    typeConstraint189=typeConstraint();

            	    state._fsp--;
            	    if (state.failed) return typeConstraintList;

            	    if ( state.backtracking==0 ) { if (typeConstraint189!=null)
            	                typeConstraintList.addTypeConstraint(typeConstraint189); }

            	    }
            	    break;

            	default :
            	    if ( cnt126 >= 1 ) break loop126;
            	    if (state.backtracking>0) {state.failed=true; return typeConstraintList;}
                        EarlyExitException eee =
                            new EarlyExitException(126, input);
                        throw eee;
                }
                cnt126++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeConstraintList;
    }
    // $ANTLR end "typeConstraints"



    // $ANTLR start "anonymousTypeConstraints"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1377:1: anonymousTypeConstraints returns [TypeConstraintList typeConstraintList] : ( anonymousTypeConstraint )+ ;
    public TypeConstraintList anonymousTypeConstraints() throws RecognitionException {
        TypeConstraintList typeConstraintList = null;


        TypeConstraint anonymousTypeConstraint190 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1378:5: ( ( anonymousTypeConstraint )+ )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1378:7: ( anonymousTypeConstraint )+
            {
            if ( state.backtracking==0 ) { typeConstraintList =new TypeConstraintList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1379:7: ( anonymousTypeConstraint )+
            int cnt127=0;
            loop127:
            do {
                int alt127=2;
                int LA127_0 = input.LA(1);

                if ( (LA127_0==TYPE_CONSTRAINT) ) {
                    alt127=1;
                }


                switch (alt127) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1380:9: anonymousTypeConstraint
            	    {
            	    pushFollow(FOLLOW_anonymousTypeConstraint_in_anonymousTypeConstraints9113);
            	    anonymousTypeConstraint190=anonymousTypeConstraint();

            	    state._fsp--;
            	    if (state.failed) return typeConstraintList;

            	    if ( state.backtracking==0 ) { if (anonymousTypeConstraint190!=null)
            	                typeConstraintList.addTypeConstraint(anonymousTypeConstraint190); }

            	    }
            	    break;

            	default :
            	    if ( cnt127 >= 1 ) break loop127;
            	    if (state.backtracking>0) {state.failed=true; return typeConstraintList;}
                        EarlyExitException eee =
                            new EarlyExitException(127, input);
                        throw eee;
                }
                cnt127++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeConstraintList;
    }
    // $ANTLR end "anonymousTypeConstraints"



    // $ANTLR start "annotationListStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1386:1: annotationListStart : ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER | VOID_MODIFIER ) ;
    public void annotationListStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1387:5: ( ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER | VOID_MODIFIER ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1387:7: ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER | VOID_MODIFIER )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1387:7: ( stringLiteral | annotation )
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==STRING_LITERAL||LA128_0==VERBATIM_STRING) ) {
                alt128=1;
            }
            else if ( (LA128_0==LIDENTIFIER) ) {
                alt128=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;

            }
            switch (alt128) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1387:8: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotationListStart9150);
                    stringLiteral();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1387:22: annotation
                    {
                    pushFollow(FOLLOW_annotation_in_annotationListStart9152);
                    annotation();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            if ( input.LA(1)==FUNCTION_MODIFIER||input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER||input.LA(1)==VALUE_MODIFIER||input.LA(1)==VOID_MODIFIER ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotationListStart"



    // $ANTLR start "destructureStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1391:1: destructureStart : VALUE_MODIFIER compilerAnnotations ( LBRACKET | UIDENTIFIER | VOID_MODIFIER | VALUE_MODIFIER | FUNCTION_MODIFIER | LIDENTIFIER ENTRY_OP ) ;
    public void destructureStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1392:5: ( VALUE_MODIFIER compilerAnnotations ( LBRACKET | UIDENTIFIER | VOID_MODIFIER | VALUE_MODIFIER | FUNCTION_MODIFIER | LIDENTIFIER ENTRY_OP ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1392:7: VALUE_MODIFIER compilerAnnotations ( LBRACKET | UIDENTIFIER | VOID_MODIFIER | VALUE_MODIFIER | FUNCTION_MODIFIER | LIDENTIFIER ENTRY_OP )
            {
            match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_destructureStart9189); if (state.failed) return ;

            pushFollow(FOLLOW_compilerAnnotations_in_destructureStart9191);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1393:7: ( LBRACKET | UIDENTIFIER | VOID_MODIFIER | VALUE_MODIFIER | FUNCTION_MODIFIER | LIDENTIFIER ENTRY_OP )
            int alt129=6;
            switch ( input.LA(1) ) {
            case LBRACKET:
                {
                alt129=1;
                }
                break;
            case UIDENTIFIER:
                {
                alt129=2;
                }
                break;
            case VOID_MODIFIER:
                {
                alt129=3;
                }
                break;
            case VALUE_MODIFIER:
                {
                alt129=4;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt129=5;
                }
                break;
            case LIDENTIFIER:
                {
                alt129=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 129, 0, input);

                throw nvae;

            }

            switch (alt129) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1393:8: LBRACKET
                    {
                    match(input,LBRACKET,FOLLOW_LBRACKET_in_destructureStart9201); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1393:17: UIDENTIFIER
                    {
                    match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_destructureStart9203); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1393:29: VOID_MODIFIER
                    {
                    match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_destructureStart9205); if (state.failed) return ;

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1393:43: VALUE_MODIFIER
                    {
                    match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_destructureStart9207); if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1393:58: FUNCTION_MODIFIER
                    {
                    match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_destructureStart9209); if (state.failed) return ;

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1393:76: LIDENTIFIER ENTRY_OP
                    {
                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_destructureStart9211); if (state.failed) return ;

                    match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_destructureStart9213); if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "destructureStart"



    // $ANTLR start "declarationOrStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1396:1: declarationOrStatement returns [Statement statement] options {memoize=true; } : compilerAnnotations ( ( destructureStart )=> destructure | ( annotatedDeclarationStart )=>d1= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d2= declaration |s= statement ) ;
    public Statement declarationOrStatement() throws RecognitionException {
        Statement statement = null;

        int declarationOrStatement_StartIndex = input.index();

        Declaration d1 =null;

        Declaration d2 =null;

        Statement s =null;

        Destructure destructure191 =null;

        Assertion assertion192 =null;

        List<CompilerAnnotation> compilerAnnotations193 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return statement; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1398:5: ( compilerAnnotations ( ( destructureStart )=> destructure | ( annotatedDeclarationStart )=>d1= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d2= declaration |s= statement ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1398:7: compilerAnnotations ( ( destructureStart )=> destructure | ( annotatedDeclarationStart )=>d1= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d2= declaration |s= statement )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_declarationOrStatement9246);
            compilerAnnotations193=compilerAnnotations();

            state._fsp--;
            if (state.failed) return statement;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1399:7: ( ( destructureStart )=> destructure | ( annotatedDeclarationStart )=>d1= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d2= declaration |s= statement )
            int alt130=5;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==VALUE_MODIFIER) ) {
                int LA130_1 = input.LA(2);

                if ( (synpred11_Ceylon()) ) {
                    alt130=1;
                }
                else if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==STRING_LITERAL) ) {
                int LA130_2 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred13_Ceylon()) ) {
                    alt130=3;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else if ( (true) ) {
                    alt130=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==VERBATIM_STRING) ) {
                int LA130_3 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred13_Ceylon()) ) {
                    alt130=3;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else if ( (true) ) {
                    alt130=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==LIDENTIFIER) ) {
                int LA130_4 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred13_Ceylon()) ) {
                    alt130=3;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else if ( (true) ) {
                    alt130=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==CLASS_DEFINITION) ) {
                int LA130_5 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==INTERFACE_DEFINITION) ) {
                int LA130_6 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==DYNAMIC) ) {
                int LA130_7 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else if ( (true) ) {
                    alt130=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 7, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==ALIAS) ) {
                int LA130_8 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 8, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==OBJECT_DEFINITION) ) {
                int LA130_9 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else if ( (true) ) {
                    alt130=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 9, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==ASSIGN) ) {
                int LA130_10 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==VOID_MODIFIER) ) {
                int LA130_11 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 11, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==FUNCTION_MODIFIER) ) {
                int LA130_12 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 12, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==UIDENTIFIER) ) {
                int LA130_13 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else if ( (true) ) {
                    alt130=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 13, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==SMALLER_OP) ) {
                int LA130_14 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 14, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==PACKAGE) ) {
                int LA130_15 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else if ( (true) ) {
                    alt130=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 15, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==LBRACKET) ) {
                int LA130_16 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else if ( (true) ) {
                    alt130=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 16, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==LBRACE) ) {
                int LA130_17 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else if ( (true) ) {
                    alt130=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 17, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==NEW) ) {
                int LA130_18 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt130=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt130=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 18, input);

                    throw nvae;

                }
            }
            else if ( (LA130_0==ASSERT) && (synpred13_Ceylon())) {
                alt130=3;
            }
            else if ( ((LA130_0 >= BACKTICK && LA130_0 <= BREAK)||LA130_0==CHAR_LITERAL||LA130_0==CONTINUE||(LA130_0 >= DECREMENT_OP && LA130_0 <= DIFFERENCE_OP)||(LA130_0 >= FLOAT_LITERAL && LA130_0 <= FOR_CLAUSE)||LA130_0==IF_CLAUSE||LA130_0==INCREMENT_OP||LA130_0==LPAREN||LA130_0==NATURAL_LITERAL||LA130_0==NOT_OP||LA130_0==OUTER||LA130_0==RETURN||LA130_0==STRING_START||(LA130_0 >= SUM_OP && LA130_0 <= SWITCH_CLAUSE)||(LA130_0 >= THIS && LA130_0 <= TRY_CLAUSE)||LA130_0==WHILE_CLAUSE) ) {
                alt130=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;

            }
            switch (alt130) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1400:9: ( destructureStart )=> destructure
                    {
                    pushFollow(FOLLOW_destructure_in_declarationOrStatement9270);
                    destructure191=destructure();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =destructure191; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1402:9: ( annotatedDeclarationStart )=>d1= declaration
                    {
                    pushFollow(FOLLOW_declaration_in_declarationOrStatement9298);
                    d1=declaration();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =d1; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1404:9: ( annotatedAssertionStart )=> assertion
                    {
                    pushFollow(FOLLOW_assertion_in_declarationOrStatement9324);
                    assertion192=assertion();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = assertion192; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1406:9: ( annotationListStart )=>d2= declaration
                    {
                    pushFollow(FOLLOW_declaration_in_declarationOrStatement9352);
                    d2=declaration();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =d2; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1408:9: s= statement
                    {
                    pushFollow(FOLLOW_statement_in_declarationOrStatement9374);
                    s=statement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =s; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { if (statement!=null)
                        statement.getCompilerAnnotations().addAll(compilerAnnotations193); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 70, declarationOrStatement_StartIndex); }

        }
        return statement;
    }
    // $ANTLR end "declarationOrStatement"



    // $ANTLR start "declaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1415:1: declaration returns [Declaration declaration] : annotations ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | constructor ) ;
    public Declaration declaration() throws RecognitionException {
        Declaration declaration = null;


        AnnotationList annotations194 =null;

        AnyClass classDeclaration195 =null;

        AnyInterface interfaceDeclaration196 =null;

        TypeAliasDeclaration aliasDeclaration197 =null;

        ObjectDefinition objectDeclaration198 =null;

        AttributeSetterDefinition setterDeclaration199 =null;

        AnyMethod voidOrInferredMethodDeclaration200 =null;

        AnyAttribute inferredAttributeDeclaration201 =null;

        TypedDeclaration typedMethodOrAttributeDeclaration202 =null;

        Constructor constructor203 =null;


         MissingDeclaration md = new MissingDeclaration(null); 
                    declaration = md; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1418:5: ( annotations ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | constructor ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1418:7: annotations ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | constructor )
            {
            pushFollow(FOLLOW_annotations_in_declaration9430);
            annotations194=annotations();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { md.setAnnotationList(annotations194); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1420:5: ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | constructor )
            int alt131=9;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==CLASS_DEFINITION) ) {
                alt131=1;
            }
            else if ( (LA131_0==INTERFACE_DEFINITION) && (synpred15_Ceylon())) {
                alt131=2;
            }
            else if ( (LA131_0==DYNAMIC) ) {
                int LA131_3 = input.LA(2);

                if ( (synpred15_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (true) ) {
                    alt131=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==ALIAS) ) {
                alt131=3;
            }
            else if ( (LA131_0==OBJECT_DEFINITION) ) {
                alt131=4;
            }
            else if ( (LA131_0==ASSIGN) ) {
                alt131=5;
            }
            else if ( (LA131_0==FUNCTION_MODIFIER||LA131_0==VOID_MODIFIER) ) {
                alt131=6;
            }
            else if ( (LA131_0==VALUE_MODIFIER) ) {
                alt131=7;
            }
            else if ( ((LA131_0 >= LBRACE && LA131_0 <= LBRACKET)||LA131_0==PACKAGE||LA131_0==SMALLER_OP||LA131_0==UIDENTIFIER) ) {
                alt131=8;
            }
            else if ( (LA131_0==NEW) ) {
                alt131=9;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 131, 0, input);

                throw nvae;

            }
            switch (alt131) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1421:7: classDeclaration
                    {
                    pushFollow(FOLLOW_classDeclaration_in_declaration9453);
                    classDeclaration195=classDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =classDeclaration195; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1423:7: ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration
                    {
                    pushFollow(FOLLOW_interfaceDeclaration_in_declaration9479);
                    interfaceDeclaration196=interfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =interfaceDeclaration196; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1425:7: aliasDeclaration
                    {
                    pushFollow(FOLLOW_aliasDeclaration_in_declaration9495);
                    aliasDeclaration197=aliasDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =aliasDeclaration197; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1427:7: objectDeclaration
                    {
                    pushFollow(FOLLOW_objectDeclaration_in_declaration9511);
                    objectDeclaration198=objectDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =objectDeclaration198; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1429:7: setterDeclaration
                    {
                    pushFollow(FOLLOW_setterDeclaration_in_declaration9527);
                    setterDeclaration199=setterDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =setterDeclaration199; }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1431:7: voidOrInferredMethodDeclaration
                    {
                    pushFollow(FOLLOW_voidOrInferredMethodDeclaration_in_declaration9543);
                    voidOrInferredMethodDeclaration200=voidOrInferredMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =voidOrInferredMethodDeclaration200; }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1433:7: inferredAttributeDeclaration
                    {
                    pushFollow(FOLLOW_inferredAttributeDeclaration_in_declaration9559);
                    inferredAttributeDeclaration201=inferredAttributeDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =inferredAttributeDeclaration201; }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1435:7: typedMethodOrAttributeDeclaration
                    {
                    pushFollow(FOLLOW_typedMethodOrAttributeDeclaration_in_declaration9575);
                    typedMethodOrAttributeDeclaration202=typedMethodOrAttributeDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =typedMethodOrAttributeDeclaration202; }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1437:7: constructor
                    {
                    pushFollow(FOLLOW_constructor_in_declaration9591);
                    constructor203=constructor();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =constructor203; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { if (declaration!=null)
                      declaration.setAnnotationList(annotations194); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "declaration"



    // $ANTLR start "annotatedDeclarationStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1448:1: annotatedDeclarationStart : ( stringLiteral )? ( annotation )* ( ( unambiguousType )=> unambiguousType | declarationStart ) ;
    public void annotatedDeclarationStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1449:5: ( ( stringLiteral )? ( annotation )* ( ( unambiguousType )=> unambiguousType | declarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1449:7: ( stringLiteral )? ( annotation )* ( ( unambiguousType )=> unambiguousType | declarationStart )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1449:7: ( stringLiteral )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==STRING_LITERAL||LA132_0==VERBATIM_STRING) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1449:7: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotatedDeclarationStart9634);
                    stringLiteral();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1449:22: ( annotation )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==LIDENTIFIER) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1449:22: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotatedDeclarationStart9637);
            	    annotation();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1450:7: ( ( unambiguousType )=> unambiguousType | declarationStart )
            int alt134=2;
            switch ( input.LA(1) ) {
            case UIDENTIFIER:
                {
                int LA134_1 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt134=1;
                }
                else if ( (true) ) {
                    alt134=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 134, 1, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA134_2 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt134=1;
                }
                else if ( (true) ) {
                    alt134=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 134, 2, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA134_3 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt134=1;
                }
                else if ( (true) ) {
                    alt134=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 134, 3, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA134_4 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt134=1;
                }
                else if ( (true) ) {
                    alt134=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 134, 4, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA134_5 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt134=1;
                }
                else if ( (true) ) {
                    alt134=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 134, 5, input);

                    throw nvae;

                }
                }
                break;
            case ALIAS:
            case ASSIGN:
            case CLASS_DEFINITION:
            case DYNAMIC:
            case FUNCTION_MODIFIER:
            case INTERFACE_DEFINITION:
            case NEW:
            case OBJECT_DEFINITION:
            case VALUE_MODIFIER:
            case VOID_MODIFIER:
                {
                alt134=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 134, 0, input);

                throw nvae;

            }

            switch (alt134) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1450:8: ( unambiguousType )=> unambiguousType
                    {
                    pushFollow(FOLLOW_unambiguousType_in_annotatedDeclarationStart9654);
                    unambiguousType();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1450:47: declarationStart
                    {
                    pushFollow(FOLLOW_declarationStart_in_annotatedDeclarationStart9658);
                    declarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedDeclarationStart"



    // $ANTLR start "annotatedAssertionStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1453:1: annotatedAssertionStart : ( stringLiteral )? ( annotation )* ASSERT ;
    public void annotatedAssertionStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1454:5: ( ( stringLiteral )? ( annotation )* ASSERT )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1454:7: ( stringLiteral )? ( annotation )* ASSERT
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1454:7: ( stringLiteral )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==STRING_LITERAL||LA135_0==VERBATIM_STRING) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1454:7: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotatedAssertionStart9676);
                    stringLiteral();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1454:22: ( annotation )*
            loop136:
            do {
                int alt136=2;
                int LA136_0 = input.LA(1);

                if ( (LA136_0==LIDENTIFIER) ) {
                    alt136=1;
                }


                switch (alt136) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1454:22: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotatedAssertionStart9679);
            	    annotation();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop136;
                }
            } while (true);


            match(input,ASSERT,FOLLOW_ASSERT_in_annotatedAssertionStart9682); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedAssertionStart"



    // $ANTLR start "declarationStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1460:1: declarationStart : ( VALUE_MODIFIER | FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | ASSIGN | INTERFACE_DEFINITION | CLASS_DEFINITION | OBJECT_DEFINITION ( LIDENTIFIER | UIDENTIFIER ) | NEW | ALIAS | variadicType LIDENTIFIER | DYNAMIC ( LIDENTIFIER | UIDENTIFIER ) );
    public void declarationStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1461:5: ( VALUE_MODIFIER | FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | ASSIGN | INTERFACE_DEFINITION | CLASS_DEFINITION | OBJECT_DEFINITION ( LIDENTIFIER | UIDENTIFIER ) | NEW | ALIAS | variadicType LIDENTIFIER | DYNAMIC ( LIDENTIFIER | UIDENTIFIER ) )
            int alt137=11;
            switch ( input.LA(1) ) {
            case VALUE_MODIFIER:
                {
                alt137=1;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt137=2;
                }
                break;
            case VOID_MODIFIER:
                {
                alt137=3;
                }
                break;
            case ASSIGN:
                {
                alt137=4;
                }
                break;
            case INTERFACE_DEFINITION:
                {
                alt137=5;
                }
                break;
            case CLASS_DEFINITION:
                {
                alt137=6;
                }
                break;
            case OBJECT_DEFINITION:
                {
                alt137=7;
                }
                break;
            case NEW:
                {
                alt137=8;
                }
                break;
            case ALIAS:
                {
                alt137=9;
                }
                break;
            case LBRACE:
            case LBRACKET:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt137=10;
                }
                break;
            case DYNAMIC:
                {
                alt137=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;

            }

            switch (alt137) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1461:7: VALUE_MODIFIER
                    {
                    match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_declarationStart9702); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1462:7: FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_declarationStart9710); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1463:7: VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_declarationStart9725); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1464:7: ASSIGN
                    {
                    match(input,ASSIGN,FOLLOW_ASSIGN_in_declarationStart9740); if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1465:7: INTERFACE_DEFINITION
                    {
                    match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_declarationStart9748); if (state.failed) return ;

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1466:7: CLASS_DEFINITION
                    {
                    match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_declarationStart9756); if (state.failed) return ;

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1467:7: OBJECT_DEFINITION ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_declarationStart9764); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1468:7: NEW
                    {
                    match(input,NEW,FOLLOW_NEW_in_declarationStart9779); if (state.failed) return ;

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1469:7: ALIAS
                    {
                    match(input,ALIAS,FOLLOW_ALIAS_in_declarationStart9787); if (state.failed) return ;

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1470:7: variadicType LIDENTIFIER
                    {
                    pushFollow(FOLLOW_variadicType_in_declarationStart9796);
                    variadicType();

                    state._fsp--;
                    if (state.failed) return ;

                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_declarationStart9798); if (state.failed) return ;

                    }
                    break;
                case 11 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1471:7: DYNAMIC ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,DYNAMIC,FOLLOW_DYNAMIC_in_declarationStart9806); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "declarationStart"



    // $ANTLR start "unambiguousType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1477:1: unambiguousType : ( qualifiedType ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )? ( OPTIONAL | LBRACKET RBRACKET ) | LBRACE qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( PRODUCT_OP | SUM_OP ) RBRACE | LBRACKET qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )* ( PRODUCT_OP | SUM_OP ) RBRACKET );
    public void unambiguousType() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1478:5: ( qualifiedType ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )? ( OPTIONAL | LBRACKET RBRACKET ) | LBRACE qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( PRODUCT_OP | SUM_OP ) RBRACE | LBRACKET qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )* ( PRODUCT_OP | SUM_OP ) RBRACKET )
            int alt151=3;
            switch ( input.LA(1) ) {
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt151=1;
                }
                break;
            case LBRACE:
                {
                alt151=2;
                }
                break;
            case LBRACKET:
                {
                alt151=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;

            }

            switch (alt151) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1478:7: qualifiedType ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )? ( OPTIONAL | LBRACKET RBRACKET )
                    {
                    pushFollow(FOLLOW_qualifiedType_in_unambiguousType9836);
                    qualifiedType();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1479:7: ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )?
                    int alt139=2;
                    switch ( input.LA(1) ) {
                        case OPTIONAL:
                            {
                            int LA139_1 = input.LA(2);

                            if ( (LA139_1==ENTRY_OP) ) {
                                alt139=1;
                            }
                            }
                            break;
                        case LBRACKET:
                            {
                            int LA139_2 = input.LA(2);

                            if ( (LA139_2==RBRACKET) ) {
                                int LA139_5 = input.LA(3);

                                if ( (LA139_5==ENTRY_OP) ) {
                                    alt139=1;
                                }
                            }
                            }
                            break;
                        case ENTRY_OP:
                            {
                            alt139=1;
                            }
                            break;
                    }

                    switch (alt139) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1480:9: ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1480:9: ( OPTIONAL | LBRACKET RBRACKET )?
                            int alt138=3;
                            int LA138_0 = input.LA(1);

                            if ( (LA138_0==OPTIONAL) ) {
                                alt138=1;
                            }
                            else if ( (LA138_0==LBRACKET) ) {
                                alt138=2;
                            }
                            switch (alt138) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1480:10: OPTIONAL
                                    {
                                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType9856); if (state.failed) return ;

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1480:21: LBRACKET RBRACKET
                                    {
                                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType9860); if (state.failed) return ;

                                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType9862); if (state.failed) return ;

                                    }
                                    break;

                            }


                            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType9875); if (state.failed) return ;

                            pushFollow(FOLLOW_qualifiedType_in_unambiguousType9877);
                            qualifiedType();

                            state._fsp--;
                            if (state.failed) return ;

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1483:7: ( OPTIONAL | LBRACKET RBRACKET )
                    int alt140=2;
                    int LA140_0 = input.LA(1);

                    if ( (LA140_0==OPTIONAL) ) {
                        alt140=1;
                    }
                    else if ( (LA140_0==LBRACKET) ) {
                        alt140=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 140, 0, input);

                        throw nvae;

                    }
                    switch (alt140) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1483:8: OPTIONAL
                            {
                            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType9895); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1483:19: LBRACKET RBRACKET
                            {
                            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType9899); if (state.failed) return ;

                            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType9901); if (state.failed) return ;

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1484:7: LBRACE qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( PRODUCT_OP | SUM_OP ) RBRACE
                    {
                    match(input,LBRACE,FOLLOW_LBRACE_in_unambiguousType9910); if (state.failed) return ;

                    pushFollow(FOLLOW_qualifiedType_in_unambiguousType9919);
                    qualifiedType();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1485:21: ( OPTIONAL | LBRACKET RBRACKET )?
                    int alt141=3;
                    int LA141_0 = input.LA(1);

                    if ( (LA141_0==OPTIONAL) ) {
                        alt141=1;
                    }
                    else if ( (LA141_0==LBRACKET) ) {
                        alt141=2;
                    }
                    switch (alt141) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1485:22: OPTIONAL
                            {
                            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType9922); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1485:33: LBRACKET RBRACKET
                            {
                            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType9926); if (state.failed) return ;

                            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType9928); if (state.failed) return ;

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1486:7: ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    int alt143=2;
                    int LA143_0 = input.LA(1);

                    if ( (LA143_0==ENTRY_OP) ) {
                        alt143=1;
                    }
                    switch (alt143) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1487:9: ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )?
                            {
                            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType9948); if (state.failed) return ;

                            pushFollow(FOLLOW_qualifiedType_in_unambiguousType9950);
                            qualifiedType();

                            state._fsp--;
                            if (state.failed) return ;

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1488:9: ( OPTIONAL | LBRACKET RBRACKET )?
                            int alt142=3;
                            int LA142_0 = input.LA(1);

                            if ( (LA142_0==OPTIONAL) ) {
                                alt142=1;
                            }
                            else if ( (LA142_0==LBRACKET) ) {
                                alt142=2;
                            }
                            switch (alt142) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1488:10: OPTIONAL
                                    {
                                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType9962); if (state.failed) return ;

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1488:21: LBRACKET RBRACKET
                                    {
                                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType9966); if (state.failed) return ;

                                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType9968); if (state.failed) return ;

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    if ( input.LA(1)==PRODUCT_OP||input.LA(1)==SUM_OP ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    match(input,RBRACE,FOLLOW_RBRACE_in_unambiguousType10001); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1492:7: LBRACKET qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )* ( PRODUCT_OP | SUM_OP ) RBRACKET
                    {
                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10009); if (state.failed) return ;

                    pushFollow(FOLLOW_qualifiedType_in_unambiguousType10018);
                    qualifiedType();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1493:21: ( OPTIONAL | LBRACKET RBRACKET )?
                    int alt144=3;
                    int LA144_0 = input.LA(1);

                    if ( (LA144_0==OPTIONAL) ) {
                        alt144=1;
                    }
                    else if ( (LA144_0==LBRACKET) ) {
                        alt144=2;
                    }
                    switch (alt144) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1493:22: OPTIONAL
                            {
                            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10021); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1493:33: LBRACKET RBRACKET
                            {
                            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10025); if (state.failed) return ;

                            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10027); if (state.failed) return ;

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1494:7: ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    int alt146=2;
                    int LA146_0 = input.LA(1);

                    if ( (LA146_0==ENTRY_OP) ) {
                        alt146=1;
                    }
                    switch (alt146) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1495:9: ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )?
                            {
                            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType10048); if (state.failed) return ;

                            pushFollow(FOLLOW_qualifiedType_in_unambiguousType10050);
                            qualifiedType();

                            state._fsp--;
                            if (state.failed) return ;

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1496:9: ( OPTIONAL | LBRACKET RBRACKET )?
                            int alt145=3;
                            int LA145_0 = input.LA(1);

                            if ( (LA145_0==OPTIONAL) ) {
                                alt145=1;
                            }
                            else if ( (LA145_0==LBRACKET) ) {
                                alt145=2;
                            }
                            switch (alt145) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1496:10: OPTIONAL
                                    {
                                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10061); if (state.failed) return ;

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1496:21: LBRACKET RBRACKET
                                    {
                                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10065); if (state.failed) return ;

                                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10067); if (state.failed) return ;

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1498:7: ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )*
                    loop150:
                    do {
                        int alt150=2;
                        int LA150_0 = input.LA(1);

                        if ( (LA150_0==COMMA) ) {
                            alt150=1;
                        }


                        switch (alt150) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1499:9: COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_unambiguousType10097); if (state.failed) return ;

                    	    pushFollow(FOLLOW_qualifiedType_in_unambiguousType10108);
                    	    qualifiedType();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1500:23: ( OPTIONAL | LBRACKET RBRACKET )?
                    	    int alt147=3;
                    	    int LA147_0 = input.LA(1);

                    	    if ( (LA147_0==OPTIONAL) ) {
                    	        alt147=1;
                    	    }
                    	    else if ( (LA147_0==LBRACKET) ) {
                    	        alt147=2;
                    	    }
                    	    switch (alt147) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1500:24: OPTIONAL
                    	            {
                    	            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10111); if (state.failed) return ;

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1500:35: LBRACKET RBRACKET
                    	            {
                    	            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10115); if (state.failed) return ;

                    	            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10117); if (state.failed) return ;

                    	            }
                    	            break;

                    	    }


                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1501:9: ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    	    int alt149=2;
                    	    int LA149_0 = input.LA(1);

                    	    if ( (LA149_0==ENTRY_OP) ) {
                    	        alt149=1;
                    	    }
                    	    switch (alt149) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1502:11: ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )?
                    	            {
                    	            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType10142); if (state.failed) return ;

                    	            pushFollow(FOLLOW_qualifiedType_in_unambiguousType10144);
                    	            qualifiedType();

                    	            state._fsp--;
                    	            if (state.failed) return ;

                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1503:11: ( OPTIONAL | LBRACKET RBRACKET )?
                    	            int alt148=3;
                    	            int LA148_0 = input.LA(1);

                    	            if ( (LA148_0==OPTIONAL) ) {
                    	                alt148=1;
                    	            }
                    	            else if ( (LA148_0==LBRACKET) ) {
                    	                alt148=2;
                    	            }
                    	            switch (alt148) {
                    	                case 1 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1503:12: OPTIONAL
                    	                    {
                    	                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10158); if (state.failed) return ;

                    	                    }
                    	                    break;
                    	                case 2 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1503:23: LBRACKET RBRACKET
                    	                    {
                    	                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10162); if (state.failed) return ;

                    	                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10164); if (state.failed) return ;

                    	                    }
                    	                    break;

                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop150;
                        }
                    } while (true);


                    if ( input.LA(1)==PRODUCT_OP||input.LA(1)==SUM_OP ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10208); if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "unambiguousType"



    // $ANTLR start "statement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1510:1: statement returns [Statement statement] : ( directiveStatement | controlStatement | expressionOrSpecificationStatement );
    public Statement statement() throws RecognitionException {
        Statement statement = null;


        Directive directiveStatement204 =null;

        ControlStatement controlStatement205 =null;

        Statement expressionOrSpecificationStatement206 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1511:5: ( directiveStatement | controlStatement | expressionOrSpecificationStatement )
            int alt152=3;
            switch ( input.LA(1) ) {
            case BREAK:
            case CONTINUE:
            case RETURN:
            case THROW:
                {
                alt152=1;
                }
                break;
            case FOR_CLAUSE:
            case IF_CLAUSE:
            case SWITCH_CLAUSE:
            case TRY_CLAUSE:
            case WHILE_CLAUSE:
                {
                alt152=2;
                }
                break;
            case DYNAMIC:
                {
                int LA152_3 = input.LA(2);

                if ( (LA152_3==LBRACKET) ) {
                    alt152=3;
                }
                else if ( (LA152_3==LBRACE) ) {
                    alt152=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 152, 3, input);

                    throw nvae;

                }
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case FLOAT_LITERAL:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case NOT_OP:
            case OBJECT_DEFINITION:
            case OUTER:
            case PACKAGE:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
                {
                alt152=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;

            }

            switch (alt152) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1511:7: directiveStatement
                    {
                    pushFollow(FOLLOW_directiveStatement_in_statement10229);
                    directiveStatement204=directiveStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = directiveStatement204; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1513:7: controlStatement
                    {
                    pushFollow(FOLLOW_controlStatement_in_statement10245);
                    controlStatement205=controlStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = controlStatement205; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1515:7: expressionOrSpecificationStatement
                    {
                    pushFollow(FOLLOW_expressionOrSpecificationStatement_in_statement10261);
                    expressionOrSpecificationStatement206=expressionOrSpecificationStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = expressionOrSpecificationStatement206; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "statement"



    // $ANTLR start "expressionOrSpecificationStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1519:1: expressionOrSpecificationStatement returns [Statement statement] : expression ( lazySpecifier )? ( SEMICOLON | COMMA ) ;
    public Statement expressionOrSpecificationStatement() throws RecognitionException {
        Statement statement = null;


        Token SEMICOLON209=null;
        Token COMMA210=null;
        Expression expression207 =null;

        SpecifierExpression lazySpecifier208 =null;


         SpecifierStatement ss=new SpecifierStatement(null); 
                    ExpressionStatement es=new ExpressionStatement(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1522:5: ( expression ( lazySpecifier )? ( SEMICOLON | COMMA ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1522:7: expression ( lazySpecifier )? ( SEMICOLON | COMMA )
            {
            pushFollow(FOLLOW_expression_in_expressionOrSpecificationStatement10299);
            expression207=expression();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement = es;
                    if (expression207!=null)
                        es.setExpression(expression207);
                    if (expression207.getTerm() instanceof AssignOp) {
                        AssignOp a = (AssignOp) expression207.getTerm();
                        Term lt = a.getLeftTerm();
                        if (lt instanceof BaseMemberExpression ||
                            lt instanceof ParameterizedExpression ||
                            lt instanceof QualifiedMemberExpression &&
                                ((QualifiedMemberExpression) lt).getPrimary() instanceof This &&
                                ((QualifiedMemberExpression) lt).getMemberOperator() instanceof MemberOp) {
                            Expression e = new Expression(null);
                            e.setTerm(a.getRightTerm());
                            SpecifierExpression se = new SpecifierExpression(null);
                            se.setExpression(e);
                            ss.setSpecifierExpression(se);
                            ss.setBaseMemberExpression(a.getLeftTerm());
                            statement = ss;
                        }
                    }
                  }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1544:7: ( lazySpecifier )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==COMPUTE) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1550:9: lazySpecifier
                    {
                    pushFollow(FOLLOW_lazySpecifier_in_expressionOrSpecificationStatement10335);
                    lazySpecifier208=lazySpecifier();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { ss.setSpecifierExpression(lazySpecifier208);
                              ss.setBaseMemberExpression(expression207.getTerm()); 
                              statement = ss; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1556:7: ( SEMICOLON | COMMA )
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==SEMICOLON) ) {
                alt154=1;
            }
            else if ( (LA154_0==COMMA) ) {
                alt154=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 154, 0, input);

                throw nvae;

            }
            switch (alt154) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1557:9: SEMICOLON
                    {
                    SEMICOLON209=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_expressionOrSpecificationStatement10380); if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setEndToken(SEMICOLON209); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1559:9: COMMA
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(SEMICOLON, input)); }

                    COMMA210=(Token)match(input,COMMA,FOLLOW_COMMA_in_expressionOrSpecificationStatement10410); if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setEndToken(COMMA210); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "expressionOrSpecificationStatement"



    // $ANTLR start "directiveStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1567:1: directiveStatement returns [Directive directive] : d= directive SEMICOLON ;
    public Directive directiveStatement() throws RecognitionException {
        Directive directive = null;


        Token SEMICOLON211=null;
        Directive d =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1568:5: (d= directive SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1568:7: d= directive SEMICOLON
            {
            pushFollow(FOLLOW_directive_in_directiveStatement10459);
            d=directive();

            state._fsp--;
            if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive =d;
                    expecting=SEMICOLON; }

            SEMICOLON211=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_directiveStatement10476); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive.setEndToken(SEMICOLON211);
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "directiveStatement"



    // $ANTLR start "directive"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1576:1: directive returns [Directive directive] : ( returnDirective | throwDirective | breakDirective | continueDirective );
    public Directive directive() throws RecognitionException {
        Directive directive = null;


        Return returnDirective212 =null;

        Throw throwDirective213 =null;

        Break breakDirective214 =null;

        Continue continueDirective215 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1577:5: ( returnDirective | throwDirective | breakDirective | continueDirective )
            int alt155=4;
            switch ( input.LA(1) ) {
            case RETURN:
                {
                alt155=1;
                }
                break;
            case THROW:
                {
                alt155=2;
                }
                break;
            case BREAK:
                {
                alt155=3;
                }
                break;
            case CONTINUE:
                {
                alt155=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return directive;}
                NoViableAltException nvae =
                    new NoViableAltException("", 155, 0, input);

                throw nvae;

            }

            switch (alt155) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1577:7: returnDirective
                    {
                    pushFollow(FOLLOW_returnDirective_in_directive10505);
                    returnDirective212=returnDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = returnDirective212; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1579:7: throwDirective
                    {
                    pushFollow(FOLLOW_throwDirective_in_directive10521);
                    throwDirective213=throwDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = throwDirective213; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1581:7: breakDirective
                    {
                    pushFollow(FOLLOW_breakDirective_in_directive10537);
                    breakDirective214=breakDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = breakDirective214; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1583:7: continueDirective
                    {
                    pushFollow(FOLLOW_continueDirective_in_directive10553);
                    continueDirective215=continueDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = continueDirective215; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "directive"



    // $ANTLR start "returnDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1587:1: returnDirective returns [Return directive] : RETURN ( functionOrExpression )? ;
    public Return returnDirective() throws RecognitionException {
        Return directive = null;


        Token RETURN216=null;
        Expression functionOrExpression217 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1588:5: ( RETURN ( functionOrExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1588:7: RETURN ( functionOrExpression )?
            {
            RETURN216=(Token)match(input,RETURN,FOLLOW_RETURN_in_returnDirective10582); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Return(RETURN216); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1590:7: ( functionOrExpression )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==BACKTICK||LA156_0==CHAR_LITERAL||(LA156_0 >= DECREMENT_OP && LA156_0 <= DIFFERENCE_OP)||LA156_0==DYNAMIC||LA156_0==FLOAT_LITERAL||LA156_0==FUNCTION_MODIFIER||LA156_0==IF_CLAUSE||LA156_0==INCREMENT_OP||(LA156_0 >= LBRACE && LA156_0 <= LIDENTIFIER)||LA156_0==LPAREN||LA156_0==NATURAL_LITERAL||(LA156_0 >= NOT_OP && LA156_0 <= OBJECT_DEFINITION)||(LA156_0 >= OUTER && LA156_0 <= PACKAGE)||LA156_0==SMALLER_OP||LA156_0==STRING_LITERAL||LA156_0==STRING_START||(LA156_0 >= SUM_OP && LA156_0 <= SWITCH_CLAUSE)||LA156_0==THIS||LA156_0==UIDENTIFIER||(LA156_0 >= VERBATIM_STRING && LA156_0 <= VOID_MODIFIER)) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1591:9: functionOrExpression
                    {
                    pushFollow(FOLLOW_functionOrExpression_in_returnDirective10609);
                    functionOrExpression217=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive.setExpression(functionOrExpression217); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "returnDirective"



    // $ANTLR start "throwDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1596:1: throwDirective returns [Throw directive] : THROW ( expression )? ;
    public Throw throwDirective() throws RecognitionException {
        Throw directive = null;


        Token THROW218=null;
        Expression expression219 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1597:5: ( THROW ( expression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1597:7: THROW ( expression )?
            {
            THROW218=(Token)match(input,THROW,FOLLOW_THROW_in_throwDirective10649); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Throw(THROW218); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1599:7: ( expression )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==BACKTICK||LA157_0==CHAR_LITERAL||(LA157_0 >= DECREMENT_OP && LA157_0 <= DIFFERENCE_OP)||LA157_0==DYNAMIC||LA157_0==FLOAT_LITERAL||LA157_0==INCREMENT_OP||(LA157_0 >= LBRACE && LA157_0 <= LBRACKET)||LA157_0==LIDENTIFIER||LA157_0==LPAREN||LA157_0==NATURAL_LITERAL||(LA157_0 >= NOT_OP && LA157_0 <= OBJECT_DEFINITION)||(LA157_0 >= OUTER && LA157_0 <= PACKAGE)||LA157_0==STRING_LITERAL||LA157_0==STRING_START||(LA157_0 >= SUM_OP && LA157_0 <= SUPER)||LA157_0==THIS||LA157_0==UIDENTIFIER||LA157_0==VERBATIM_STRING) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1600:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_throwDirective10676);
                    expression219=expression();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive.setExpression(expression219); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "throwDirective"



    // $ANTLR start "breakDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1605:1: breakDirective returns [Break directive] : BREAK ;
    public Break breakDirective() throws RecognitionException {
        Break directive = null;


        Token BREAK220=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1606:5: ( BREAK )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1606:7: BREAK
            {
            BREAK220=(Token)match(input,BREAK,FOLLOW_BREAK_in_breakDirective10716); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Break(BREAK220); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "breakDirective"



    // $ANTLR start "continueDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1610:1: continueDirective returns [Continue directive] : CONTINUE ;
    public Continue continueDirective() throws RecognitionException {
        Continue directive = null;


        Token CONTINUE221=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1611:5: ( CONTINUE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1611:7: CONTINUE
            {
            CONTINUE221=(Token)match(input,CONTINUE,FOLLOW_CONTINUE_in_continueDirective10745); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Continue(CONTINUE221); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "continueDirective"



    // $ANTLR start "typeSpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1615:1: typeSpecifier returns [TypeSpecifier typeSpecifier] : ( COMPUTE | SPECIFY ) ( type )? ;
    public TypeSpecifier typeSpecifier() throws RecognitionException {
        TypeSpecifier typeSpecifier = null;


        Token COMPUTE222=null;
        Token SPECIFY223=null;
        StaticType type224 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1616:5: ( ( COMPUTE | SPECIFY ) ( type )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1616:7: ( COMPUTE | SPECIFY ) ( type )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1616:7: ( COMPUTE | SPECIFY )
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==COMPUTE) ) {
                alt158=1;
            }
            else if ( (LA158_0==SPECIFY) ) {
                alt158=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return typeSpecifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;

            }
            switch (alt158) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1617:9: COMPUTE
                    {
                    COMPUTE222=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_typeSpecifier10784); if (state.failed) return typeSpecifier;

                    if ( state.backtracking==0 ) { typeSpecifier = new TypeSpecifier(COMPUTE222); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1620:9: SPECIFY
                    {
                    SPECIFY223=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_typeSpecifier10813); if (state.failed) return typeSpecifier;

                    if ( state.backtracking==0 ) { typeSpecifier = new TypeSpecifier(SPECIFY223); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1623:7: ( type )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( ((LA159_0 >= LBRACE && LA159_0 <= LBRACKET)||LA159_0==PACKAGE||LA159_0==SMALLER_OP||LA159_0==UIDENTIFIER) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1624:9: type
                    {
                    pushFollow(FOLLOW_type_in_typeSpecifier10850);
                    type224=type();

                    state._fsp--;
                    if (state.failed) return typeSpecifier;

                    if ( state.backtracking==0 ) { typeSpecifier.setType(type224); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeSpecifier;
    }
    // $ANTLR end "typeSpecifier"



    // $ANTLR start "typeDefault"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1629:1: typeDefault returns [TypeSpecifier typeSpecifier] : SPECIFY type ;
    public TypeSpecifier typeDefault() throws RecognitionException {
        TypeSpecifier typeSpecifier = null;


        Token SPECIFY225=null;
        StaticType type226 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1630:5: ( SPECIFY type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1630:7: SPECIFY type
            {
            SPECIFY225=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_typeDefault10890); if (state.failed) return typeSpecifier;

            if ( state.backtracking==0 ) { typeSpecifier = new DefaultTypeArgument(SPECIFY225); }

            pushFollow(FOLLOW_type_in_typeDefault10907);
            type226=type();

            state._fsp--;
            if (state.failed) return typeSpecifier;

            if ( state.backtracking==0 ) { typeSpecifier.setType(type226); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeSpecifier;
    }
    // $ANTLR end "typeDefault"



    // $ANTLR start "specifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1636:1: specifier returns [SpecifierExpression specifierExpression] : SPECIFY functionOrExpression ;
    public SpecifierExpression specifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token SPECIFY227=null;
        Expression functionOrExpression228 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1637:5: ( SPECIFY functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1637:7: SPECIFY functionOrExpression
            {
            SPECIFY227=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_specifier10936); if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression = new SpecifierExpression(SPECIFY227); }

            pushFollow(FOLLOW_functionOrExpression_in_specifier10952);
            functionOrExpression228=functionOrExpression();

            state._fsp--;
            if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression228); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "specifier"



    // $ANTLR start "lazySpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1643:1: lazySpecifier returns [SpecifierExpression specifierExpression] : COMPUTE functionOrExpression ;
    public SpecifierExpression lazySpecifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token COMPUTE229=null;
        Expression functionOrExpression230 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1644:5: ( COMPUTE functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1644:7: COMPUTE functionOrExpression
            {
            COMPUTE229=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_lazySpecifier10981); if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(COMPUTE229); }

            pushFollow(FOLLOW_functionOrExpression_in_lazySpecifier10997);
            functionOrExpression230=functionOrExpression();

            state._fsp--;
            if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression230); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "lazySpecifier"



    // $ANTLR start "functionSpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1650:1: functionSpecifier returns [SpecifierExpression specifierExpression] : ( COMPUTE | SPECIFY ) functionOrExpression ;
    public SpecifierExpression functionSpecifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token COMPUTE231=null;
        Token SPECIFY232=null;
        Expression functionOrExpression233 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1651:5: ( ( COMPUTE | SPECIFY ) functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1651:7: ( COMPUTE | SPECIFY ) functionOrExpression
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1651:7: ( COMPUTE | SPECIFY )
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==COMPUTE) ) {
                alt160=1;
            }
            else if ( (LA160_0==SPECIFY) ) {
                alt160=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return specifierExpression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 160, 0, input);

                throw nvae;

            }
            switch (alt160) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1652:9: COMPUTE
                    {
                    COMPUTE231=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_functionSpecifier11036); if (state.failed) return specifierExpression;

                    if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(COMPUTE231); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1655:9: SPECIFY
                    {
                    SPECIFY232=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_functionSpecifier11064); if (state.failed) return specifierExpression;

                    if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(SPECIFY232); }

                    }
                    break;

            }


            pushFollow(FOLLOW_functionOrExpression_in_functionSpecifier11090);
            functionOrExpression233=functionOrExpression();

            state._fsp--;
            if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression233); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "functionSpecifier"



    // $ANTLR start "expression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1662:1: expression returns [Expression expression] : assignmentExpression ;
    public Expression expression() throws RecognitionException {
        Expression expression = null;


        Term assignmentExpression234 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1663:5: ( assignmentExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1663:7: assignmentExpression
            {
            if ( state.backtracking==0 ) { expression = new Expression(null); }

            pushFollow(FOLLOW_assignmentExpression_in_expression11127);
            assignmentExpression234=assignmentExpression();

            state._fsp--;
            if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression.setTerm(assignmentExpression234); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "expression"



    // $ANTLR start "base"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1668:1: base returns [Primary primary] : ( nonstringLiteral | stringExpression | metaLiteral | enumeration | tuple | dynamicObject | objectExpression | selfReference | parExpression | baseReference );
    public Primary base() throws RecognitionException {
        Primary primary = null;


        Literal nonstringLiteral235 =null;

        Atom stringExpression236 =null;

        MetaLiteral metaLiteral237 =null;

        SequenceEnumeration enumeration238 =null;

        Tuple tuple239 =null;

        Dynamic dynamicObject240 =null;

        ObjectExpression objectExpression241 =null;

        Atom selfReference242 =null;

        Expression parExpression243 =null;

        PsiCompatibleCeylonParser.baseReference_return baseReference244 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1669:5: ( nonstringLiteral | stringExpression | metaLiteral | enumeration | tuple | dynamicObject | objectExpression | selfReference | parExpression | baseReference )
            int alt161=10;
            switch ( input.LA(1) ) {
            case CHAR_LITERAL:
            case FLOAT_LITERAL:
            case NATURAL_LITERAL:
                {
                alt161=1;
                }
                break;
            case STRING_LITERAL:
            case STRING_START:
            case VERBATIM_STRING:
                {
                alt161=2;
                }
                break;
            case BACKTICK:
                {
                alt161=3;
                }
                break;
            case LBRACE:
                {
                alt161=4;
                }
                break;
            case LBRACKET:
                {
                alt161=5;
                }
                break;
            case DYNAMIC:
                {
                alt161=6;
                }
                break;
            case OBJECT_DEFINITION:
                {
                alt161=7;
                }
                break;
            case OUTER:
            case PACKAGE:
            case SUPER:
            case THIS:
                {
                alt161=8;
                }
                break;
            case LPAREN:
                {
                alt161=9;
                }
                break;
            case LIDENTIFIER:
            case UIDENTIFIER:
                {
                alt161=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return primary;}
                NoViableAltException nvae =
                    new NoViableAltException("", 161, 0, input);

                throw nvae;

            }

            switch (alt161) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1669:7: nonstringLiteral
                    {
                    pushFollow(FOLLOW_nonstringLiteral_in_base11156);
                    nonstringLiteral235=nonstringLiteral();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =nonstringLiteral235; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1671:7: stringExpression
                    {
                    pushFollow(FOLLOW_stringExpression_in_base11172);
                    stringExpression236=stringExpression();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =stringExpression236; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1673:7: metaLiteral
                    {
                    pushFollow(FOLLOW_metaLiteral_in_base11188);
                    metaLiteral237=metaLiteral();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =metaLiteral237; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1675:7: enumeration
                    {
                    pushFollow(FOLLOW_enumeration_in_base11204);
                    enumeration238=enumeration();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =enumeration238; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1677:7: tuple
                    {
                    pushFollow(FOLLOW_tuple_in_base11220);
                    tuple239=tuple();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =tuple239; }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1679:7: dynamicObject
                    {
                    pushFollow(FOLLOW_dynamicObject_in_base11236);
                    dynamicObject240=dynamicObject();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =dynamicObject240; }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1681:7: objectExpression
                    {
                    pushFollow(FOLLOW_objectExpression_in_base11252);
                    objectExpression241=objectExpression();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary = objectExpression241; }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1683:7: selfReference
                    {
                    pushFollow(FOLLOW_selfReference_in_base11268);
                    selfReference242=selfReference();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =selfReference242; }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1685:7: parExpression
                    {
                    pushFollow(FOLLOW_parExpression_in_base11284);
                    parExpression243=parExpression();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =parExpression243; }

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1687:7: baseReference
                    {
                    pushFollow(FOLLOW_baseReference_in_base11300);
                    baseReference244=baseReference();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { BaseMemberOrTypeExpression be;
                            if ((baseReference244!=null?baseReference244.isMember:false))
                                be = new BaseMemberExpression(null);
                            else
                                be = new BaseTypeExpression(null);
                            be.setIdentifier((baseReference244!=null?baseReference244.identifier:null));
                            if ((baseReference244!=null?baseReference244.typeArgumentList:null)!=null)
                                be.setTypeArguments((baseReference244!=null?baseReference244.typeArgumentList:null));
                            else
                                be.setTypeArguments( new InferredTypeArguments(null) );
                            primary =be; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return primary;
    }
    // $ANTLR end "base"


    public static class baseReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
        public boolean isMember;
    };


    // $ANTLR start "baseReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1701:1: baseReference returns [Identifier identifier, \n TypeArgumentList typeArgumentList, \n boolean isMember] : ( memberReference | typeReference ) ;
    public PsiCompatibleCeylonParser.baseReference_return baseReference() throws RecognitionException {
        PsiCompatibleCeylonParser.baseReference_return retval = new PsiCompatibleCeylonParser.baseReference_return();
        retval.start = input.LT(1);


        PsiCompatibleCeylonParser.memberReference_return memberReference245 =null;

        PsiCompatibleCeylonParser.typeReference_return typeReference246 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1704:5: ( ( memberReference | typeReference ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1705:5: ( memberReference | typeReference )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1705:5: ( memberReference | typeReference )
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==LIDENTIFIER) ) {
                alt162=1;
            }
            else if ( (LA162_0==UIDENTIFIER) ) {
                alt162=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 162, 0, input);

                throw nvae;

            }
            switch (alt162) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1706:7: memberReference
                    {
                    pushFollow(FOLLOW_memberReference_in_baseReference11342);
                    memberReference245=memberReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (memberReference245!=null?memberReference245.identifier:null);
                            retval.typeArgumentList = (memberReference245!=null?memberReference245.typeArgumentList:null);
                            retval.isMember = true; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1710:7: typeReference
                    {
                    pushFollow(FOLLOW_typeReference_in_baseReference11358);
                    typeReference246=typeReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (typeReference246!=null?typeReference246.identifier:null);
                            retval.typeArgumentList = (typeReference246!=null?typeReference246.typeArgumentList:null);
                            retval.isMember = false; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "baseReference"



    // $ANTLR start "primary"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1717:1: primary returns [Primary primary] : base ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )* ;
    public Primary primary() throws RecognitionException {
        Primary primary = null;


        Primary base247 =null;

        PsiCompatibleCeylonParser.qualifiedReference_return qualifiedReference248 =null;

        IndexExpression indexOrIndexRange249 =null;

        ParameterList parameters250 =null;

        PositionalArgumentList positionalArguments251 =null;

        NamedArgumentList namedArguments252 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1718:5: ( base ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1718:7: base ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )*
            {
            pushFollow(FOLLOW_base_in_primary11393);
            base247=base();

            state._fsp--;
            if (state.failed) return primary;

            if ( state.backtracking==0 ) { primary =base247; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1720:5: ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )*
            loop163:
            do {
                int alt163=6;
                alt163 = dfa163.predict(input);
                switch (alt163) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1723:11: qualifiedReference
            	    {
            	    pushFollow(FOLLOW_qualifiedReference_in_primary11426);
            	    qualifiedReference248=qualifiedReference();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { QualifiedMemberOrTypeExpression qe;
            	            if ((qualifiedReference248!=null?qualifiedReference248.isMember:false))
            	                qe = new QualifiedMemberExpression(null);
            	            else
            	                qe = new QualifiedTypeExpression(null);
            	            qe.setPrimary(primary);
            	            qe.setMemberOperator((qualifiedReference248!=null?qualifiedReference248.operator:null));
            	            qe.setIdentifier((qualifiedReference248!=null?qualifiedReference248.identifier:null));
            	            if ((qualifiedReference248!=null?qualifiedReference248.typeArgumentList:null)!=null)
            	                qe.setTypeArguments((qualifiedReference248!=null?qualifiedReference248.typeArgumentList:null));
            	            else 
            	                qe.setTypeArguments( new InferredTypeArguments(null) );
            	            primary =qe; }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1737:9: indexOrIndexRange
            	    {
            	    pushFollow(FOLLOW_indexOrIndexRange_in_primary11444);
            	    indexOrIndexRange249=indexOrIndexRange();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { indexOrIndexRange249.setPrimary(primary);
            	              primary = indexOrIndexRange249; }

            	    }
            	    break;
            	case 3 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1740:9: ( specifierParametersStart )=> parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_primary11470);
            	    parameters250=parameters();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { ParameterizedExpression pe;
            	              if (primary instanceof ParameterizedExpression) {
            	                  pe = (ParameterizedExpression) primary;
            	              } else {
            	                  pe = new ParameterizedExpression(null);
            	                  pe.setPrimary(primary);
            	              }
            	              pe.addParameterList(parameters250);
            	              primary = pe; }

            	    }
            	    break;
            	case 4 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1750:9: positionalArguments
            	    {
            	    pushFollow(FOLLOW_positionalArguments_in_primary11490);
            	    positionalArguments251=positionalArguments();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { InvocationExpression ie = new InvocationExpression(null);
            	              ie.setPrimary(primary);
            	              ie.setPositionalArgumentList(positionalArguments251); 
            	              primary =ie; }

            	    }
            	    break;
            	case 5 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1755:9: namedArguments
            	    {
            	    pushFollow(FOLLOW_namedArguments_in_primary11511);
            	    namedArguments252=namedArguments();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { InvocationExpression ie = new InvocationExpression(null);
            	              ie.setPrimary(primary);
            	              ie.setNamedArgumentList(namedArguments252);
            	              primary =ie; }

            	    }
            	    break;

            	default :
            	    break loop163;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return primary;
    }
    // $ANTLR end "primary"



    // $ANTLR start "specifierParametersStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1763:1: specifierParametersStart : LPAREN ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart ) ;
    public void specifierParametersStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1764:5: ( LPAREN ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1764:7: LPAREN ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart )
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_specifierParametersStart11545); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1765:5: ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart )
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==RPAREN) ) {
                alt165=1;
            }
            else if ( (LA165_0==ALIAS||(LA165_0 >= ASSERT && LA165_0 <= ASSIGN)||(LA165_0 >= BACKTICK && LA165_0 <= BREAK)||(LA165_0 >= CHAR_LITERAL && LA165_0 <= CLASS_DEFINITION)||LA165_0==COMPILER_ANNOTATION||LA165_0==CONTINUE||(LA165_0 >= DECREMENT_OP && LA165_0 <= DIFFERENCE_OP)||LA165_0==DYNAMIC||(LA165_0 >= FLOAT_LITERAL && LA165_0 <= FUNCTION_MODIFIER)||(LA165_0 >= IF_CLAUSE && LA165_0 <= INTERFACE_DEFINITION)||LA165_0==IN_OP||(LA165_0 >= LBRACE && LA165_0 <= LIDENTIFIER)||LA165_0==LPAREN||LA165_0==MODULE||(LA165_0 >= NATURAL_LITERAL && LA165_0 <= NEW)||(LA165_0 >= NOT_OP && LA165_0 <= OBJECT_DEFINITION)||(LA165_0 >= OUT && LA165_0 <= PACKAGE)||LA165_0==PRODUCT_OP||LA165_0==RETURN||(LA165_0 >= SEMICOLON && LA165_0 <= SMALLER_OP)||LA165_0==STRING_LITERAL||LA165_0==STRING_START||(LA165_0 >= SUM_OP && LA165_0 <= SWITCH_CLAUSE)||(LA165_0 >= THIS && LA165_0 <= UIDENTIFIER)||(LA165_0 >= VALUE_MODIFIER && LA165_0 <= WHILE_CLAUSE)) ) {
                alt165=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 165, 0, input);

                throw nvae;

            }
            switch (alt165) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1766:7: RPAREN ( SPECIFY | COMPUTE | specifierParametersStart )
                    {
                    match(input,RPAREN,FOLLOW_RPAREN_in_specifierParametersStart11561); if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1766:14: ( SPECIFY | COMPUTE | specifierParametersStart )
                    int alt164=3;
                    switch ( input.LA(1) ) {
                    case SPECIFY:
                        {
                        alt164=1;
                        }
                        break;
                    case COMPUTE:
                        {
                        alt164=2;
                        }
                        break;
                    case LPAREN:
                        {
                        alt164=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 164, 0, input);

                        throw nvae;

                    }

                    switch (alt164) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1766:15: SPECIFY
                            {
                            match(input,SPECIFY,FOLLOW_SPECIFY_in_specifierParametersStart11564); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1766:23: COMPUTE
                            {
                            match(input,COMPUTE,FOLLOW_COMPUTE_in_specifierParametersStart11566); if (state.failed) return ;

                            }
                            break;
                        case 3 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1766:31: specifierParametersStart
                            {
                            pushFollow(FOLLOW_specifierParametersStart_in_specifierParametersStart11568);
                            specifierParametersStart();

                            state._fsp--;
                            if (state.failed) return ;

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1768:7: compilerAnnotations annotatedDeclarationStart
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_specifierParametersStart11584);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    pushFollow(FOLLOW_annotatedDeclarationStart_in_specifierParametersStart11586);
                    annotatedDeclarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "specifierParametersStart"


    public static class qualifiedReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public MemberOperator operator;
        public TypeArgumentList typeArgumentList;
        public boolean isMember;
    };


    // $ANTLR start "qualifiedReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1772:1: qualifiedReference returns [Identifier identifier, MemberOperator operator, \n TypeArgumentList typeArgumentList, boolean isMember] : memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>) ;
    public PsiCompatibleCeylonParser.qualifiedReference_return qualifiedReference() throws RecognitionException {
        PsiCompatibleCeylonParser.qualifiedReference_return retval = new PsiCompatibleCeylonParser.qualifiedReference_return();
        retval.start = input.LT(1);


        MemberOperator memberSelectionOperator253 =null;

        PsiCompatibleCeylonParser.memberReference_return memberReference254 =null;

        PsiCompatibleCeylonParser.typeReference_return typeReference255 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1774:5: ( memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1774:7: memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)
            {
            pushFollow(FOLLOW_memberSelectionOperator_in_qualifiedReference11613);
            memberSelectionOperator253=memberSelectionOperator();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.operator = memberSelectionOperator253;
                    retval.identifier = new Identifier(retval.operator.getToken());
                    retval.identifier.setText("");
                    retval.isMember =true; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1779:7: ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)
            int alt166=3;
            alt166 = dfa166.predict(input);
            switch (alt166) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1780:9: memberReference
                    {
                    pushFollow(FOLLOW_memberReference_in_qualifiedReference11641);
                    memberReference254=memberReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (memberReference254!=null?memberReference254.identifier:null);
                              retval.typeArgumentList = (memberReference254!=null?memberReference254.typeArgumentList:null); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1783:9: typeReference
                    {
                    pushFollow(FOLLOW_typeReference_in_qualifiedReference11661);
                    typeReference255=typeReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (typeReference255!=null?typeReference255.identifier:null);
                              retval.typeArgumentList = (typeReference255!=null?typeReference255.typeArgumentList:null);  
                              retval.isMember =false; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1787:9: (~ ( LIDENTIFIER | UIDENTIFIER ) )=>
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "qualifiedReference"



    // $ANTLR start "memberSelectionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1793:1: memberSelectionOperator returns [MemberOperator operator] : ( MEMBER_OP | SAFE_MEMBER_OP | SPREAD_OP );
    public MemberOperator memberSelectionOperator() throws RecognitionException {
        MemberOperator operator = null;


        Token MEMBER_OP256=null;
        Token SAFE_MEMBER_OP257=null;
        Token SPREAD_OP258=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1794:5: ( MEMBER_OP | SAFE_MEMBER_OP | SPREAD_OP )
            int alt167=3;
            switch ( input.LA(1) ) {
            case MEMBER_OP:
                {
                alt167=1;
                }
                break;
            case SAFE_MEMBER_OP:
                {
                alt167=2;
                }
                break;
            case SPREAD_OP:
                {
                alt167=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 167, 0, input);

                throw nvae;

            }

            switch (alt167) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1794:7: MEMBER_OP
                    {
                    MEMBER_OP256=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_memberSelectionOperator11728); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new MemberOp(MEMBER_OP256); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1796:7: SAFE_MEMBER_OP
                    {
                    SAFE_MEMBER_OP257=(Token)match(input,SAFE_MEMBER_OP,FOLLOW_SAFE_MEMBER_OP_in_memberSelectionOperator11744); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new SafeMemberOp(SAFE_MEMBER_OP257); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1798:7: SPREAD_OP
                    {
                    SPREAD_OP258=(Token)match(input,SPREAD_OP,FOLLOW_SPREAD_OP_in_memberSelectionOperator11760); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new SpreadOp(SPREAD_OP258); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "memberSelectionOperator"



    // $ANTLR start "enumeration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1802:1: enumeration returns [SequenceEnumeration sequenceEnumeration] : LBRACE ( sequencedArgument )? RBRACE ;
    public SequenceEnumeration enumeration() throws RecognitionException {
        SequenceEnumeration sequenceEnumeration = null;


        Token LBRACE259=null;
        Token RBRACE261=null;
        SequencedArgument sequencedArgument260 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1803:5: ( LBRACE ( sequencedArgument )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1803:7: LBRACE ( sequencedArgument )? RBRACE
            {
            LBRACE259=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_enumeration11789); if (state.failed) return sequenceEnumeration;

            if ( state.backtracking==0 ) { sequenceEnumeration = new SequenceEnumeration(LBRACE259); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1805:7: ( sequencedArgument )?
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==ALIAS||(LA168_0 >= ASSERT && LA168_0 <= ASSIGN)||(LA168_0 >= BACKTICK && LA168_0 <= BREAK)||(LA168_0 >= CHAR_LITERAL && LA168_0 <= CLASS_DEFINITION)||LA168_0==COMPILER_ANNOTATION||LA168_0==CONTINUE||(LA168_0 >= DECREMENT_OP && LA168_0 <= DIFFERENCE_OP)||LA168_0==DYNAMIC||(LA168_0 >= FLOAT_LITERAL && LA168_0 <= FUNCTION_MODIFIER)||(LA168_0 >= IF_CLAUSE && LA168_0 <= INTERFACE_DEFINITION)||LA168_0==IN_OP||(LA168_0 >= LBRACE && LA168_0 <= LIDENTIFIER)||LA168_0==LPAREN||LA168_0==MODULE||(LA168_0 >= NATURAL_LITERAL && LA168_0 <= NEW)||(LA168_0 >= NOT_OP && LA168_0 <= OBJECT_DEFINITION)||(LA168_0 >= OUT && LA168_0 <= PACKAGE)||LA168_0==PRODUCT_OP||LA168_0==RETURN||(LA168_0 >= SEMICOLON && LA168_0 <= SMALLER_OP)||LA168_0==STRING_LITERAL||LA168_0==STRING_START||(LA168_0 >= SUM_OP && LA168_0 <= SWITCH_CLAUSE)||(LA168_0 >= THIS && LA168_0 <= UIDENTIFIER)||(LA168_0 >= VALUE_MODIFIER && LA168_0 <= WHILE_CLAUSE)) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1806:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_enumeration11817);
                    sequencedArgument260=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return sequenceEnumeration;

                    if ( state.backtracking==0 ) { sequenceEnumeration.setSequencedArgument(sequencedArgument260); }

                    }
                    break;

            }


            RBRACE261=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_enumeration11844); if (state.failed) return sequenceEnumeration;

            if ( state.backtracking==0 ) { sequenceEnumeration.setEndToken(RBRACE261); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return sequenceEnumeration;
    }
    // $ANTLR end "enumeration"



    // $ANTLR start "tuple"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1813:1: tuple returns [Tuple tuple] : LBRACKET ( sequencedArgument )? RBRACKET ;
    public Tuple tuple() throws RecognitionException {
        Tuple tuple = null;


        Token LBRACKET262=null;
        Token RBRACKET264=null;
        SequencedArgument sequencedArgument263 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1814:5: ( LBRACKET ( sequencedArgument )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1814:7: LBRACKET ( sequencedArgument )? RBRACKET
            {
            LBRACKET262=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_tuple11873); if (state.failed) return tuple;

            if ( state.backtracking==0 ) { tuple = new Tuple(LBRACKET262); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1816:7: ( sequencedArgument )?
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==ALIAS||(LA169_0 >= ASSERT && LA169_0 <= ASSIGN)||(LA169_0 >= BACKTICK && LA169_0 <= BREAK)||(LA169_0 >= CHAR_LITERAL && LA169_0 <= CLASS_DEFINITION)||LA169_0==COMPILER_ANNOTATION||LA169_0==CONTINUE||(LA169_0 >= DECREMENT_OP && LA169_0 <= DIFFERENCE_OP)||LA169_0==DYNAMIC||(LA169_0 >= FLOAT_LITERAL && LA169_0 <= FUNCTION_MODIFIER)||(LA169_0 >= IF_CLAUSE && LA169_0 <= INTERFACE_DEFINITION)||LA169_0==IN_OP||(LA169_0 >= LBRACE && LA169_0 <= LIDENTIFIER)||LA169_0==LPAREN||LA169_0==MODULE||(LA169_0 >= NATURAL_LITERAL && LA169_0 <= NEW)||(LA169_0 >= NOT_OP && LA169_0 <= OBJECT_DEFINITION)||(LA169_0 >= OUT && LA169_0 <= PACKAGE)||LA169_0==PRODUCT_OP||LA169_0==RETURN||(LA169_0 >= SEMICOLON && LA169_0 <= SMALLER_OP)||LA169_0==STRING_LITERAL||LA169_0==STRING_START||(LA169_0 >= SUM_OP && LA169_0 <= SWITCH_CLAUSE)||(LA169_0 >= THIS && LA169_0 <= UIDENTIFIER)||(LA169_0 >= VALUE_MODIFIER && LA169_0 <= WHILE_CLAUSE)) ) {
                alt169=1;
            }
            switch (alt169) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1817:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_tuple11900);
                    sequencedArgument263=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return tuple;

                    if ( state.backtracking==0 ) { tuple.setSequencedArgument(sequencedArgument263); }

                    }
                    break;

            }


            RBRACKET264=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_tuple11927); if (state.failed) return tuple;

            if ( state.backtracking==0 ) { tuple.setEndToken(RBRACKET264); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return tuple;
    }
    // $ANTLR end "tuple"



    // $ANTLR start "dynamicObject"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1824:1: dynamicObject returns [Dynamic dynamic] : DYNAMIC LBRACKET ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACKET ;
    public Dynamic dynamicObject() throws RecognitionException {
        Dynamic dynamic = null;


        Token DYNAMIC265=null;
        Token LBRACKET266=null;
        Token RBRACKET270=null;
        NamedArgument namedArgument267 =null;

        SpecifiedArgument anonymousArgument268 =null;

        SequencedArgument sequencedArgument269 =null;


         NamedArgumentList nal=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1826:5: ( DYNAMIC LBRACKET ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1826:7: DYNAMIC LBRACKET ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACKET
            {
            DYNAMIC265=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_dynamicObject11969); if (state.failed) return dynamic;

            LBRACKET266=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_dynamicObject11971); if (state.failed) return dynamic;

            if ( state.backtracking==0 ) { dynamic = new Dynamic(DYNAMIC265);
                    nal = new NamedArgumentList(LBRACKET266); 
                    dynamic.setNamedArgumentList(nal); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1830:7: ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )*
            loop170:
            do {
                int alt170=3;
                int LA170_0 = input.LA(1);

                if ( (LA170_0==COMPILER_ANNOTATION) ) {
                    int LA170_1 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt170=1;
                    }


                }
                else if ( (LA170_0==IF_CLAUSE) ) {
                    int LA170_3 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==FUNCTION_MODIFIER) ) {
                    int LA170_4 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt170=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==VOID_MODIFIER) ) {
                    int LA170_5 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt170=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==SMALLER_OP) ) {
                    int LA170_6 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt170=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==LPAREN) ) {
                    int LA170_7 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==LET) ) {
                    int LA170_8 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==SWITCH_CLAUSE) ) {
                    int LA170_9 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==NOT_OP) ) {
                    int LA170_10 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==DIFFERENCE_OP) ) {
                    int LA170_11 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==SUM_OP) ) {
                    int LA170_12 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==DECREMENT_OP) ) {
                    int LA170_13 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==INCREMENT_OP) ) {
                    int LA170_14 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==NATURAL_LITERAL) ) {
                    int LA170_15 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==FLOAT_LITERAL) ) {
                    int LA170_16 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==CHAR_LITERAL) ) {
                    int LA170_17 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==STRING_LITERAL) ) {
                    int LA170_18 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==VERBATIM_STRING) ) {
                    int LA170_19 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==STRING_START) ) {
                    int LA170_20 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==BACKTICK) ) {
                    int LA170_21 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==LBRACE) ) {
                    int LA170_22 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt170=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==LBRACKET) ) {
                    int LA170_23 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt170=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==DYNAMIC) ) {
                    int LA170_24 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt170=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==OBJECT_DEFINITION) ) {
                    int LA170_25 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt170=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==THIS) ) {
                    int LA170_26 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==SUPER) ) {
                    int LA170_27 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==OUTER) ) {
                    int LA170_28 = input.LA(2);

                    if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==PACKAGE) ) {
                    int LA170_29 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt170=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==LIDENTIFIER) ) {
                    int LA170_30 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt170=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==UIDENTIFIER) ) {
                    int LA170_31 = input.LA(2);

                    if ( (synpred19_Ceylon()) ) {
                        alt170=1;
                    }
                    else if ( (synpred20_Ceylon()) ) {
                        alt170=2;
                    }


                }
                else if ( (LA170_0==VALUE_MODIFIER) && (synpred19_Ceylon())) {
                    alt170=1;
                }


                switch (alt170) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1832:9: ( namedArgumentStart )=> namedArgument
            	    {
            	    pushFollow(FOLLOW_namedArgument_in_dynamicObject12022);
            	    namedArgument267=namedArgument();

            	    state._fsp--;
            	    if (state.failed) return dynamic;

            	    if ( state.backtracking==0 ) { if (namedArgument267!=null) 
            	                  nal.addNamedArgument(namedArgument267); }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1836:9: ( anonymousArgument )=> anonymousArgument
            	    {
            	    pushFollow(FOLLOW_anonymousArgument_in_dynamicObject12056);
            	    anonymousArgument268=anonymousArgument();

            	    state._fsp--;
            	    if (state.failed) return dynamic;

            	    if ( state.backtracking==0 ) { if (anonymousArgument268!=null) 
            	                  nal.addNamedArgument(anonymousArgument268); }

            	    }
            	    break;

            	default :
            	    break loop170;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1841:7: ( sequencedArgument )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==ALIAS||(LA171_0 >= ASSERT && LA171_0 <= ASSIGN)||(LA171_0 >= BACKTICK && LA171_0 <= BREAK)||(LA171_0 >= CHAR_LITERAL && LA171_0 <= CLASS_DEFINITION)||LA171_0==COMPILER_ANNOTATION||LA171_0==CONTINUE||(LA171_0 >= DECREMENT_OP && LA171_0 <= DIFFERENCE_OP)||LA171_0==DYNAMIC||(LA171_0 >= FLOAT_LITERAL && LA171_0 <= FUNCTION_MODIFIER)||(LA171_0 >= IF_CLAUSE && LA171_0 <= INTERFACE_DEFINITION)||LA171_0==IN_OP||(LA171_0 >= LBRACE && LA171_0 <= LIDENTIFIER)||LA171_0==LPAREN||LA171_0==MODULE||(LA171_0 >= NATURAL_LITERAL && LA171_0 <= NEW)||(LA171_0 >= NOT_OP && LA171_0 <= OBJECT_DEFINITION)||(LA171_0 >= OUT && LA171_0 <= PACKAGE)||LA171_0==PRODUCT_OP||LA171_0==RETURN||(LA171_0 >= SEMICOLON && LA171_0 <= SMALLER_OP)||LA171_0==STRING_LITERAL||LA171_0==STRING_START||(LA171_0 >= SUM_OP && LA171_0 <= SWITCH_CLAUSE)||(LA171_0 >= THIS && LA171_0 <= UIDENTIFIER)||(LA171_0 >= VALUE_MODIFIER && LA171_0 <= WHILE_CLAUSE)) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1842:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_dynamicObject12094);
                    sequencedArgument269=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return dynamic;

                    if ( state.backtracking==0 ) { nal.setSequencedArgument(sequencedArgument269); }

                    }
                    break;

            }


            RBRACKET270=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_dynamicObject12121); if (state.failed) return dynamic;

            if ( state.backtracking==0 ) { nal.setEndToken(RBRACKET270); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return dynamic;
    }
    // $ANTLR end "dynamicObject"



    // $ANTLR start "valueCaseList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1849:1: valueCaseList returns [ExpressionList expressionList] :ie1= intersectionExpression ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )* ;
    public ExpressionList valueCaseList() throws RecognitionException {
        ExpressionList expressionList = null;


        Token c=null;
        Token u=null;
        Term ie1 =null;

        Term ie2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1850:5: (ie1= intersectionExpression ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1850:7: ie1= intersectionExpression ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )*
            {
            if ( state.backtracking==0 ) { expressionList = new ExpressionList(null); }

            pushFollow(FOLLOW_intersectionExpression_in_valueCaseList12164);
            ie1=intersectionExpression();

            state._fsp--;
            if (state.failed) return expressionList;

            if ( state.backtracking==0 ) { Expression e = new Expression(null);
                    e.setTerm(ie1);
                    expressionList.addExpression(e); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1855:7: ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )*
            loop174:
            do {
                int alt174=2;
                int LA174_0 = input.LA(1);

                if ( (LA174_0==COMMA||LA174_0==UNION_OP) ) {
                    alt174=1;
                }


                switch (alt174) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1856:9: (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |)
            	    {
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1856:9: (c= COMMA |u= UNION_OP )
            	    int alt172=2;
            	    int LA172_0 = input.LA(1);

            	    if ( (LA172_0==COMMA) ) {
            	        alt172=1;
            	    }
            	    else if ( (LA172_0==UNION_OP) ) {
            	        alt172=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return expressionList;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 172, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt172) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1857:11: c= COMMA
            	            {
            	            c=(Token)match(input,COMMA,FOLLOW_COMMA_in_valueCaseList12206); if (state.failed) return expressionList;

            	            if ( state.backtracking==0 ) { expressionList.setEndToken(c);
            	                        if (expressionList.getErrors().isEmpty())
            	                            expressionList.addUsageWarning(Warning.syntaxDeprecation,
            	                                "use of ',' in case conditions is deprecated (change to '|')"); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1862:11: u= UNION_OP
            	            {
            	            u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_valueCaseList12233); if (state.failed) return expressionList;

            	            if ( state.backtracking==0 ) { expressionList.setEndToken(u); }

            	            }
            	            break;

            	    }


            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1865:9: (ie2= intersectionExpression |)
            	    int alt173=2;
            	    int LA173_0 = input.LA(1);

            	    if ( (LA173_0==BACKTICK||LA173_0==CHAR_LITERAL||(LA173_0 >= DECREMENT_OP && LA173_0 <= DIFFERENCE_OP)||LA173_0==DYNAMIC||LA173_0==FLOAT_LITERAL||LA173_0==INCREMENT_OP||(LA173_0 >= LBRACE && LA173_0 <= LBRACKET)||LA173_0==LIDENTIFIER||LA173_0==LPAREN||LA173_0==NATURAL_LITERAL||LA173_0==OBJECT_DEFINITION||(LA173_0 >= OUTER && LA173_0 <= PACKAGE)||LA173_0==STRING_LITERAL||LA173_0==STRING_START||(LA173_0 >= SUM_OP && LA173_0 <= SUPER)||LA173_0==THIS||LA173_0==UIDENTIFIER||LA173_0==VERBATIM_STRING) ) {
            	        alt173=1;
            	    }
            	    else if ( (LA173_0==COMMA||LA173_0==RPAREN||LA173_0==UNION_OP) ) {
            	        alt173=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return expressionList;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 173, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt173) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1866:11: ie2= intersectionExpression
            	            {
            	            pushFollow(FOLLOW_intersectionExpression_in_valueCaseList12279);
            	            ie2=intersectionExpression();

            	            state._fsp--;
            	            if (state.failed) return expressionList;

            	            if ( state.backtracking==0 ) { if (ie2!=null) {
            	                            Expression e = new Expression(null);
            	                            e.setTerm(ie2);
            	                            expressionList.addExpression(e);
            	                            expressionList.setEndToken(null); } }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1872:11: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                          new MismatchedTokenException(LIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop174;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expressionList;
    }
    // $ANTLR end "valueCaseList"


    public static class memberReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "memberReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1878:1: memberReference returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : memberName ( ( typeArgumentsStart )=> typeArguments )? ;
    public PsiCompatibleCeylonParser.memberReference_return memberReference() throws RecognitionException {
        PsiCompatibleCeylonParser.memberReference_return retval = new PsiCompatibleCeylonParser.memberReference_return();
        retval.start = input.LT(1);


        Identifier memberName271 =null;

        TypeArgumentList typeArguments272 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1880:5: ( memberName ( ( typeArgumentsStart )=> typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1880:7: memberName ( ( typeArgumentsStart )=> typeArguments )?
            {
            pushFollow(FOLLOW_memberName_in_memberReference12344);
            memberName271=memberName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier = memberName271; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1882:7: ( ( typeArgumentsStart )=> typeArguments )?
            int alt175=2;
            alt175 = dfa175.predict(input);
            switch (alt175) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1883:9: ( typeArgumentsStart )=> typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_memberReference12384);
                    typeArguments272=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments272; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "memberReference"


    public static class typeReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "typeReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1889:1: typeReference returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : typeName ( ( typeArgumentsStart )=> typeArguments )? ;
    public PsiCompatibleCeylonParser.typeReference_return typeReference() throws RecognitionException {
        PsiCompatibleCeylonParser.typeReference_return retval = new PsiCompatibleCeylonParser.typeReference_return();
        retval.start = input.LT(1);


        Identifier typeName273 =null;

        TypeArgumentList typeArguments274 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1891:5: ( typeName ( ( typeArgumentsStart )=> typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1891:7: typeName ( ( typeArgumentsStart )=> typeArguments )?
            {
            pushFollow(FOLLOW_typeName_in_typeReference12424);
            typeName273=typeName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier = typeName273; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1893:7: ( ( typeArgumentsStart )=> typeArguments )?
            int alt176=2;
            alt176 = dfa176.predict(input);
            switch (alt176) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1894:9: ( typeArgumentsStart )=> typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_typeReference12465);
                    typeArguments274=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments274; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "typeReference"



    // $ANTLR start "typeArgumentsStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1903:1: typeArgumentsStart : SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP ) ;
    public void typeArgumentsStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1904:5: ( SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1904:7: SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP )
            {
            match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArgumentsStart12504); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1905:5: ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP )
            int alt177=3;
            switch ( input.LA(1) ) {
            case SMALLER_OP:
                {
                int LA177_1 = input.LA(2);

                if ( (LA177_1==COMPILER_ANNOTATION||LA177_1==IN_OP||(LA177_1 >= LBRACE && LA177_1 <= LBRACKET)||LA177_1==LIDENTIFIER||LA177_1==OUT||LA177_1==PACKAGE||LA177_1==SMALLER_OP||LA177_1==UIDENTIFIER) ) {
                    alt177=1;
                }
                else if ( (LA177_1==EOF) ) {
                    alt177=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 177, 1, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
            case LBRACKET:
            case PACKAGE:
            case UIDENTIFIER:
                {
                alt177=1;
                }
                break;
            case LARGER_OP:
                {
                alt177=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 177, 0, input);

                throw nvae;

            }

            switch (alt177) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1906:7: type ( LARGER_OP | SMALLER_OP | COMMA )
                    {
                    pushFollow(FOLLOW_type_in_typeArgumentsStart12518);
                    type();

                    state._fsp--;
                    if (state.failed) return ;

                    if ( input.LA(1)==COMMA||input.LA(1)==LARGER_OP||input.LA(1)==SMALLER_OP ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1909:7: SMALLER_OP
                    {
                    match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArgumentsStart12546); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1911:7: LARGER_OP
                    {
                    match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeArgumentsStart12561); if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "typeArgumentsStart"



    // $ANTLR start "indexOrIndexRange"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1915:1: indexOrIndexRange returns [IndexExpression indexExpression] : LBRACKET (e1= ELLIPSIS i= index | ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? |fe= functionOrExpression ) RBRACKET ;
    public IndexExpression indexOrIndexRange() throws RecognitionException {
        IndexExpression indexExpression = null;


        Token e1=null;
        Token e2=null;
        Token LBRACKET275=null;
        Token RANGE_OP276=null;
        Token SEGMENT_OP277=null;
        Token RBRACKET278=null;
        Expression i =null;

        Expression l =null;

        Expression u =null;

        Expression s =null;

        Expression fe =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1920:5: ( LBRACKET (e1= ELLIPSIS i= index | ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? |fe= functionOrExpression ) RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1920:7: LBRACKET (e1= ELLIPSIS i= index | ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? |fe= functionOrExpression ) RBRACKET
            {
            LBRACKET275=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_indexOrIndexRange12609); if (state.failed) return indexExpression;

            if ( state.backtracking==0 ) { indexExpression = new IndexExpression(LBRACKET275); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1922:7: (e1= ELLIPSIS i= index | ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? |fe= functionOrExpression )
            int alt179=3;
            switch ( input.LA(1) ) {
            case ELLIPSIS:
                {
                alt179=1;
                }
                break;
            case DIFFERENCE_OP:
                {
                int LA179_2 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 2, input);

                    throw nvae;

                }
                }
                break;
            case SUM_OP:
                {
                int LA179_3 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 3, input);

                    throw nvae;

                }
                }
                break;
            case DECREMENT_OP:
                {
                int LA179_4 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 4, input);

                    throw nvae;

                }
                }
                break;
            case INCREMENT_OP:
                {
                int LA179_5 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 5, input);

                    throw nvae;

                }
                }
                break;
            case NATURAL_LITERAL:
                {
                int LA179_6 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 6, input);

                    throw nvae;

                }
                }
                break;
            case FLOAT_LITERAL:
                {
                int LA179_7 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 7, input);

                    throw nvae;

                }
                }
                break;
            case CHAR_LITERAL:
                {
                int LA179_8 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 8, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA179_9 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 9, input);

                    throw nvae;

                }
                }
                break;
            case VERBATIM_STRING:
                {
                int LA179_10 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 10, input);

                    throw nvae;

                }
                }
                break;
            case STRING_START:
                {
                int LA179_11 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 11, input);

                    throw nvae;

                }
                }
                break;
            case BACKTICK:
                {
                int LA179_12 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 12, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA179_13 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 13, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA179_14 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 14, input);

                    throw nvae;

                }
                }
                break;
            case DYNAMIC:
                {
                int LA179_15 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 15, input);

                    throw nvae;

                }
                }
                break;
            case OBJECT_DEFINITION:
                {
                int LA179_16 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 16, input);

                    throw nvae;

                }
                }
                break;
            case THIS:
                {
                int LA179_17 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 17, input);

                    throw nvae;

                }
                }
                break;
            case SUPER:
                {
                int LA179_18 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 18, input);

                    throw nvae;

                }
                }
                break;
            case OUTER:
                {
                int LA179_19 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 19, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA179_20 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 20, input);

                    throw nvae;

                }
                }
                break;
            case LPAREN:
                {
                int LA179_21 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 21, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA179_22 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 22, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA179_23 = input.LA(2);

                if ( (synpred23_Ceylon()) ) {
                    alt179=2;
                }
                else if ( (true) ) {
                    alt179=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 179, 23, input);

                    throw nvae;

                }
                }
                break;
            case FUNCTION_MODIFIER:
            case IF_CLAUSE:
            case LET:
            case NOT_OP:
            case SMALLER_OP:
            case SWITCH_CLAUSE:
            case VOID_MODIFIER:
                {
                alt179=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return indexExpression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;

            }

            switch (alt179) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1923:9: e1= ELLIPSIS i= index
                    {
                    e1=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_indexOrIndexRange12637); if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { indexExpression.setEndToken(e1); }

                    pushFollow(FOLLOW_index_in_indexOrIndexRange12659);
                    i=index();

                    state._fsp--;
                    if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { ElementRange er0 = new ElementRange(null);
                              er0.setUpperBound(i);
                              indexExpression.setElementOrRange(er0); 
                              indexExpression.setEndToken(null); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1930:9: ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )?
                    {
                    pushFollow(FOLLOW_index_in_indexOrIndexRange12702);
                    l=index();

                    state._fsp--;
                    if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { Element e = new Element(null);
                              e.setExpression(l); 
                              indexExpression.setElementOrRange(e); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1935:9: (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )?
                    int alt178=4;
                    switch ( input.LA(1) ) {
                        case ELLIPSIS:
                            {
                            alt178=1;
                            }
                            break;
                        case RANGE_OP:
                            {
                            alt178=2;
                            }
                            break;
                        case SEGMENT_OP:
                            {
                            alt178=3;
                            }
                            break;
                    }

                    switch (alt178) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1936:11: e2= ELLIPSIS
                            {
                            e2=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_indexOrIndexRange12736); if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { indexExpression.setEndToken(e2);
                                        ElementRange er1 = new ElementRange(null);
                                        er1.setLowerBound(l);
                                        indexExpression.setElementOrRange(er1); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1942:11: RANGE_OP u= index
                            {
                            RANGE_OP276=(Token)match(input,RANGE_OP,FOLLOW_RANGE_OP_in_indexOrIndexRange12771); if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { indexExpression.setEndToken(RANGE_OP276); }

                            pushFollow(FOLLOW_index_in_indexOrIndexRange12798);
                            u=index();

                            state._fsp--;
                            if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { ElementRange er2 = new ElementRange(null);
                                        er2.setLowerBound(l); 
                                        er2.setUpperBound(u); 
                                        indexExpression.setElementOrRange(er2);
                                        indexExpression.setEndToken(null); }

                            }
                            break;
                        case 3 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1950:11: SEGMENT_OP s= index
                            {
                            SEGMENT_OP277=(Token)match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_indexOrIndexRange12823); if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { indexExpression.setEndToken(SEGMENT_OP277); }

                            pushFollow(FOLLOW_index_in_indexOrIndexRange12849);
                            s=index();

                            state._fsp--;
                            if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { ElementRange er3 = new ElementRange(null);
                                        er3.setLowerBound(l); 
                                        er3.setLength(s); 
                                        indexExpression.setElementOrRange(er3);
                                        indexExpression.setEndToken(null); }

                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1959:9: fe= functionOrExpression
                    {
                    pushFollow(FOLLOW_functionOrExpression_in_indexOrIndexRange12885);
                    fe=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { Element e = new Element(null);
                              e.setExpression(fe); 
                              indexExpression.setElementOrRange(e); }

                    }
                    break;

            }


            RBRACKET278=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_indexOrIndexRange12911); if (state.failed) return indexExpression;

            if ( state.backtracking==0 ) { indexExpression.setEndToken(RBRACKET278); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return indexExpression;
    }
    // $ANTLR end "indexOrIndexRange"



    // $ANTLR start "index"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1968:1: index returns [Expression expression] : additiveExpression ;
    public Expression index() throws RecognitionException {
        Expression expression = null;


        Term additiveExpression279 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1969:5: ( additiveExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1969:7: additiveExpression
            {
            pushFollow(FOLLOW_additiveExpression_in_index12940);
            additiveExpression279=additiveExpression();

            state._fsp--;
            if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression = new Expression(null);
                    expression.setTerm(additiveExpression279); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "index"



    // $ANTLR start "namedArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1974:1: namedArguments returns [NamedArgumentList namedArgumentList] : LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE ;
    public NamedArgumentList namedArguments() throws RecognitionException {
        NamedArgumentList namedArgumentList = null;


        Token LBRACE280=null;
        Token RBRACE284=null;
        NamedArgument namedArgument281 =null;

        SpecifiedArgument anonymousArgument282 =null;

        SequencedArgument sequencedArgument283 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1975:5: ( LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1975:7: LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE
            {
            LBRACE280=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_namedArguments12970); if (state.failed) return namedArgumentList;

            if ( state.backtracking==0 ) { namedArgumentList = new NamedArgumentList(LBRACE280); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1977:7: ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )*
            loop180:
            do {
                int alt180=3;
                int LA180_0 = input.LA(1);

                if ( (LA180_0==COMPILER_ANNOTATION) ) {
                    int LA180_1 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt180=1;
                    }


                }
                else if ( (LA180_0==IF_CLAUSE) ) {
                    int LA180_3 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==FUNCTION_MODIFIER) ) {
                    int LA180_4 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt180=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==VOID_MODIFIER) ) {
                    int LA180_5 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt180=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==SMALLER_OP) ) {
                    int LA180_6 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt180=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==LPAREN) ) {
                    int LA180_7 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==LET) ) {
                    int LA180_8 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==SWITCH_CLAUSE) ) {
                    int LA180_9 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==NOT_OP) ) {
                    int LA180_10 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==DIFFERENCE_OP) ) {
                    int LA180_11 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==SUM_OP) ) {
                    int LA180_12 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==DECREMENT_OP) ) {
                    int LA180_13 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==INCREMENT_OP) ) {
                    int LA180_14 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==NATURAL_LITERAL) ) {
                    int LA180_15 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==FLOAT_LITERAL) ) {
                    int LA180_16 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==CHAR_LITERAL) ) {
                    int LA180_17 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==STRING_LITERAL) ) {
                    int LA180_18 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==VERBATIM_STRING) ) {
                    int LA180_19 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==STRING_START) ) {
                    int LA180_20 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==BACKTICK) ) {
                    int LA180_21 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==LBRACE) ) {
                    int LA180_22 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt180=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==LBRACKET) ) {
                    int LA180_23 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt180=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==DYNAMIC) ) {
                    int LA180_24 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt180=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==OBJECT_DEFINITION) ) {
                    int LA180_25 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt180=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==THIS) ) {
                    int LA180_26 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==SUPER) ) {
                    int LA180_27 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==OUTER) ) {
                    int LA180_28 = input.LA(2);

                    if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==PACKAGE) ) {
                    int LA180_29 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt180=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==LIDENTIFIER) ) {
                    int LA180_30 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt180=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==UIDENTIFIER) ) {
                    int LA180_31 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt180=1;
                    }
                    else if ( (synpred25_Ceylon()) ) {
                        alt180=2;
                    }


                }
                else if ( (LA180_0==VALUE_MODIFIER) && (synpred24_Ceylon())) {
                    alt180=1;
                }


                switch (alt180) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1979:9: ( namedArgumentStart )=> namedArgument
            	    {
            	    pushFollow(FOLLOW_namedArgument_in_namedArguments13022);
            	    namedArgument281=namedArgument();

            	    state._fsp--;
            	    if (state.failed) return namedArgumentList;

            	    if ( state.backtracking==0 ) { if (namedArgument281!=null) 
            	                  namedArgumentList.addNamedArgument(namedArgument281); }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1983:9: ( anonymousArgument )=> anonymousArgument
            	    {
            	    pushFollow(FOLLOW_anonymousArgument_in_namedArguments13056);
            	    anonymousArgument282=anonymousArgument();

            	    state._fsp--;
            	    if (state.failed) return namedArgumentList;

            	    if ( state.backtracking==0 ) { if (anonymousArgument282!=null) 
            	                  namedArgumentList.addNamedArgument(anonymousArgument282); }

            	    }
            	    break;

            	default :
            	    break loop180;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1988:7: ( sequencedArgument )?
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==ALIAS||(LA181_0 >= ASSERT && LA181_0 <= ASSIGN)||(LA181_0 >= BACKTICK && LA181_0 <= BREAK)||(LA181_0 >= CHAR_LITERAL && LA181_0 <= CLASS_DEFINITION)||LA181_0==COMPILER_ANNOTATION||LA181_0==CONTINUE||(LA181_0 >= DECREMENT_OP && LA181_0 <= DIFFERENCE_OP)||LA181_0==DYNAMIC||(LA181_0 >= FLOAT_LITERAL && LA181_0 <= FUNCTION_MODIFIER)||(LA181_0 >= IF_CLAUSE && LA181_0 <= INTERFACE_DEFINITION)||LA181_0==IN_OP||(LA181_0 >= LBRACE && LA181_0 <= LIDENTIFIER)||LA181_0==LPAREN||LA181_0==MODULE||(LA181_0 >= NATURAL_LITERAL && LA181_0 <= NEW)||(LA181_0 >= NOT_OP && LA181_0 <= OBJECT_DEFINITION)||(LA181_0 >= OUT && LA181_0 <= PACKAGE)||LA181_0==PRODUCT_OP||LA181_0==RETURN||(LA181_0 >= SEMICOLON && LA181_0 <= SMALLER_OP)||LA181_0==STRING_LITERAL||LA181_0==STRING_START||(LA181_0 >= SUM_OP && LA181_0 <= SWITCH_CLAUSE)||(LA181_0 >= THIS && LA181_0 <= UIDENTIFIER)||(LA181_0 >= VALUE_MODIFIER && LA181_0 <= WHILE_CLAUSE)) ) {
                alt181=1;
            }
            switch (alt181) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1989:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_namedArguments13094);
                    sequencedArgument283=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return namedArgumentList;

                    if ( state.backtracking==0 ) { namedArgumentList.setSequencedArgument(sequencedArgument283); }

                    }
                    break;

            }


            RBRACE284=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_namedArguments13121); if (state.failed) return namedArgumentList;

            if ( state.backtracking==0 ) { namedArgumentList.setEndToken(RBRACE284); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return namedArgumentList;
    }
    // $ANTLR end "namedArguments"



    // $ANTLR start "sequencedArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1996:1: sequencedArgument returns [SequencedArgument sequencedArgument] : compilerAnnotations ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension |pa1= positionalArgument |sa1= spreadArgument ) (c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |) )* ;
    public SequencedArgument sequencedArgument() throws RecognitionException {
        SequencedArgument sequencedArgument = null;


        Token c=null;
        Comprehension c1 =null;

        ListedArgument pa1 =null;

        SpreadArgument sa1 =null;

        Comprehension c2 =null;

        ListedArgument pa2 =null;

        SpreadArgument sa2 =null;

        List<CompilerAnnotation> compilerAnnotations285 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1997:5: ( compilerAnnotations ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension |pa1= positionalArgument |sa1= spreadArgument ) (c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1997:7: compilerAnnotations ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension |pa1= positionalArgument |sa1= spreadArgument ) (c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |) )*
            {
            pushFollow(FOLLOW_compilerAnnotations_in_sequencedArgument13150);
            compilerAnnotations285=compilerAnnotations();

            state._fsp--;
            if (state.failed) return sequencedArgument;

            if ( state.backtracking==0 ) { sequencedArgument = new SequencedArgument(null);
                    sequencedArgument.getCompilerAnnotations().addAll(compilerAnnotations285); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2000:9: ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension |pa1= positionalArgument |sa1= spreadArgument )
            int alt182=3;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==FOR_CLAUSE) && (synpred26_Ceylon())) {
                alt182=1;
            }
            else if ( (LA182_0==IF_CLAUSE) ) {
                int LA182_2 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt182=1;
                }
                else if ( (true) ) {
                    alt182=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 182, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA182_0==BACKTICK||LA182_0==CHAR_LITERAL||(LA182_0 >= DECREMENT_OP && LA182_0 <= DIFFERENCE_OP)||LA182_0==DYNAMIC||LA182_0==FLOAT_LITERAL||LA182_0==FUNCTION_MODIFIER||LA182_0==INCREMENT_OP||(LA182_0 >= LBRACE && LA182_0 <= LIDENTIFIER)||LA182_0==LPAREN||LA182_0==NATURAL_LITERAL||(LA182_0 >= NOT_OP && LA182_0 <= OBJECT_DEFINITION)||(LA182_0 >= OUTER && LA182_0 <= PACKAGE)||LA182_0==SMALLER_OP||LA182_0==STRING_LITERAL||LA182_0==STRING_START||(LA182_0 >= SUM_OP && LA182_0 <= SWITCH_CLAUSE)||LA182_0==THIS||LA182_0==UIDENTIFIER||(LA182_0 >= VERBATIM_STRING && LA182_0 <= VOID_MODIFIER)) ) {
                alt182=2;
            }
            else if ( (LA182_0==PRODUCT_OP) ) {
                alt182=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
                NoViableAltException nvae =
                    new NoViableAltException("", 182, 0, input);

                throw nvae;

            }
            switch (alt182) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2001:11: ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension
                    {
                    pushFollow(FOLLOW_comprehension_in_sequencedArgument13206);
                    c1=comprehension();

                    state._fsp--;
                    if (state.failed) return sequencedArgument;

                    if ( state.backtracking==0 ) { if (c1!=null)
                                    sequencedArgument.addPositionalArgument(c1); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2006:11: pa1= positionalArgument
                    {
                    pushFollow(FOLLOW_positionalArgument_in_sequencedArgument13243);
                    pa1=positionalArgument();

                    state._fsp--;
                    if (state.failed) return sequencedArgument;

                    if ( state.backtracking==0 ) { if (pa1!=null)
                                    sequencedArgument.addPositionalArgument(pa1); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2010:11: sa1= spreadArgument
                    {
                    pushFollow(FOLLOW_spreadArgument_in_sequencedArgument13279);
                    sa1=spreadArgument();

                    state._fsp--;
                    if (state.failed) return sequencedArgument;

                    if ( state.backtracking==0 ) { if (sa1!=null)
                                    sequencedArgument.addPositionalArgument(sa1); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2014:9: (c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |) )*
            loop184:
            do {
                int alt184=2;
                int LA184_0 = input.LA(1);

                if ( (LA184_0==COMMA) ) {
                    alt184=1;
                }


                switch (alt184) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2015:11: c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |)
            	    {
            	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_sequencedArgument13325); if (state.failed) return sequencedArgument;

            	    if ( state.backtracking==0 ) { sequencedArgument.setEndToken(c); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2017:11: ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |)
            	    int alt183=4;
            	    int LA183_0 = input.LA(1);

            	    if ( (LA183_0==FOR_CLAUSE) && (synpred27_Ceylon())) {
            	        alt183=1;
            	    }
            	    else if ( (LA183_0==IF_CLAUSE) ) {
            	        int LA183_2 = input.LA(2);

            	        if ( (synpred27_Ceylon()) ) {
            	            alt183=1;
            	        }
            	        else if ( (true) ) {
            	            alt183=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 183, 2, input);

            	            throw nvae;

            	        }
            	    }
            	    else if ( (LA183_0==BACKTICK||LA183_0==CHAR_LITERAL||(LA183_0 >= DECREMENT_OP && LA183_0 <= DIFFERENCE_OP)||LA183_0==DYNAMIC||LA183_0==FLOAT_LITERAL||LA183_0==FUNCTION_MODIFIER||LA183_0==INCREMENT_OP||(LA183_0 >= LBRACE && LA183_0 <= LIDENTIFIER)||LA183_0==LPAREN||LA183_0==NATURAL_LITERAL||(LA183_0 >= NOT_OP && LA183_0 <= OBJECT_DEFINITION)||(LA183_0 >= OUTER && LA183_0 <= PACKAGE)||LA183_0==SMALLER_OP||LA183_0==STRING_LITERAL||LA183_0==STRING_START||(LA183_0 >= SUM_OP && LA183_0 <= SWITCH_CLAUSE)||LA183_0==THIS||LA183_0==UIDENTIFIER||(LA183_0 >= VERBATIM_STRING && LA183_0 <= VOID_MODIFIER)) ) {
            	        alt183=2;
            	    }
            	    else if ( (LA183_0==PRODUCT_OP) ) {
            	        alt183=3;
            	    }
            	    else if ( (LA183_0==COMMA||(LA183_0 >= RBRACE && LA183_0 <= RBRACKET)||LA183_0==RPAREN) ) {
            	        alt183=4;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 183, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt183) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2018:13: ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension
            	            {
            	            pushFollow(FOLLOW_comprehension_in_sequencedArgument13391);
            	            c2=comprehension();

            	            state._fsp--;
            	            if (state.failed) return sequencedArgument;

            	            if ( state.backtracking==0 ) { if (c2!=null) {
            	                              sequencedArgument.addPositionalArgument(c2);
            	                              sequencedArgument.setEndToken(null); } }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2024:13: pa2= positionalArgument
            	            {
            	            pushFollow(FOLLOW_positionalArgument_in_sequencedArgument13434);
            	            pa2=positionalArgument();

            	            state._fsp--;
            	            if (state.failed) return sequencedArgument;

            	            if ( state.backtracking==0 ) { if (pa2!=null) {
            	                              sequencedArgument.addPositionalArgument(pa2); 
            	                              sequencedArgument.setEndToken(null); } }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2029:13: sa2= spreadArgument
            	            {
            	            pushFollow(FOLLOW_spreadArgument_in_sequencedArgument13477);
            	            sa2=spreadArgument();

            	            state._fsp--;
            	            if (state.failed) return sequencedArgument;

            	            if ( state.backtracking==0 ) { if (sa2!=null) {
            	                              sequencedArgument.addPositionalArgument(sa2); 
            	                              sequencedArgument.setEndToken(null); } }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2034:13: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                            new MismatchedTokenException(LIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop184;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return sequencedArgument;
    }
    // $ANTLR end "sequencedArgument"



    // $ANTLR start "namedArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2040:1: namedArgument returns [NamedArgument namedArgument] : compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration ) ;
    public NamedArgument namedArgument() throws RecognitionException {
        NamedArgument namedArgument = null;


        SpecifiedArgument namedSpecifiedArgument286 =null;

        NamedArgument namedArgumentDeclaration287 =null;

        List<CompilerAnnotation> compilerAnnotations288 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2041:5: ( compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2041:7: compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_namedArgument13562);
            compilerAnnotations288=compilerAnnotations();

            state._fsp--;
            if (state.failed) return namedArgument;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2042:5: ( namedSpecifiedArgument | namedArgumentDeclaration )
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==LIDENTIFIER) ) {
                int LA185_1 = input.LA(2);

                if ( (LA185_1==SEMICOLON||LA185_1==SPECIFY) ) {
                    alt185=1;
                }
                else if ( (LA185_1==COMPUTE||LA185_1==LPAREN) ) {
                    alt185=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return namedArgument;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 185, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA185_0==DYNAMIC||LA185_0==FUNCTION_MODIFIER||(LA185_0 >= LBRACE && LA185_0 <= LBRACKET)||LA185_0==OBJECT_DEFINITION||LA185_0==PACKAGE||LA185_0==SMALLER_OP||LA185_0==UIDENTIFIER||LA185_0==VALUE_MODIFIER||LA185_0==VOID_MODIFIER) ) {
                alt185=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return namedArgument;}
                NoViableAltException nvae =
                    new NoViableAltException("", 185, 0, input);

                throw nvae;

            }
            switch (alt185) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2043:7: namedSpecifiedArgument
                    {
                    pushFollow(FOLLOW_namedSpecifiedArgument_in_namedArgument13579);
                    namedSpecifiedArgument286=namedSpecifiedArgument();

                    state._fsp--;
                    if (state.failed) return namedArgument;

                    if ( state.backtracking==0 ) { namedArgument = namedSpecifiedArgument286; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2046:7: namedArgumentDeclaration
                    {
                    pushFollow(FOLLOW_namedArgumentDeclaration_in_namedArgument13601);
                    namedArgumentDeclaration287=namedArgumentDeclaration();

                    state._fsp--;
                    if (state.failed) return namedArgument;

                    if ( state.backtracking==0 ) { namedArgument = namedArgumentDeclaration287; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { if (namedArgument!=null)
                      namedArgument.getCompilerAnnotations().addAll(compilerAnnotations288); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return namedArgument;
    }
    // $ANTLR end "namedArgument"



    // $ANTLR start "namedSpecifiedArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2053:1: namedSpecifiedArgument returns [SpecifiedArgument specifiedArgument] : memberName ( specifier )? SEMICOLON ;
    public SpecifiedArgument namedSpecifiedArgument() throws RecognitionException {
        SpecifiedArgument specifiedArgument = null;


        Token SEMICOLON291=null;
        Identifier memberName289 =null;

        SpecifierExpression specifier290 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2054:5: ( memberName ( specifier )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2054:7: memberName ( specifier )? SEMICOLON
            {
            pushFollow(FOLLOW_memberName_in_namedSpecifiedArgument13642);
            memberName289=memberName();

            state._fsp--;
            if (state.failed) return specifiedArgument;

            if ( state.backtracking==0 ) { specifiedArgument = new SpecifiedArgument(null); 
                    specifiedArgument.setIdentifier(memberName289); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2057:7: ( specifier )?
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( (LA186_0==SPECIFY) ) {
                alt186=1;
            }
            switch (alt186) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2058:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_namedSpecifiedArgument13668);
                    specifier290=specifier();

                    state._fsp--;
                    if (state.failed) return specifiedArgument;

                    if ( state.backtracking==0 ) { specifiedArgument.setSpecifierExpression(specifier290); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON291=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_namedSpecifiedArgument13704); if (state.failed) return specifiedArgument;

            if ( state.backtracking==0 ) { specifiedArgument.setEndToken(SEMICOLON291); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifiedArgument;
    }
    // $ANTLR end "namedSpecifiedArgument"



    // $ANTLR start "anonymousArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2066:1: anonymousArgument returns [SpecifiedArgument namedArgument] : functionOrExpression SEMICOLON ;
    public SpecifiedArgument anonymousArgument() throws RecognitionException {
        SpecifiedArgument namedArgument = null;


        Token SEMICOLON293=null;
        Expression functionOrExpression292 =null;


         namedArgument = new SpecifiedArgument(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2068:5: ( functionOrExpression SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2068:7: functionOrExpression SEMICOLON
            {
            pushFollow(FOLLOW_functionOrExpression_in_anonymousArgument13742);
            functionOrExpression292=functionOrExpression();

            state._fsp--;
            if (state.failed) return namedArgument;

            if ( state.backtracking==0 ) { SpecifierExpression se = new SpecifierExpression(null);
                   se.setExpression(functionOrExpression292);
                   namedArgument.setSpecifierExpression(se); }

            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON293=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_anonymousArgument13768); if (state.failed) return namedArgument;

            if ( state.backtracking==0 ) { namedArgument.setEndToken(SEMICOLON293); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return namedArgument;
    }
    // $ANTLR end "anonymousArgument"



    // $ANTLR start "objectArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2077:1: objectArgument returns [ObjectArgument declaration] : OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) ;
    public ObjectArgument objectArgument() throws RecognitionException {
        ObjectArgument declaration = null;


        Token OBJECT_DEFINITION294=null;
        Token SEMICOLON299=null;
        Identifier memberNameDeclaration295 =null;

        ExtendedType extendedType296 =null;

        SatisfiedTypes satisfiedTypes297 =null;

        ClassBody classBody298 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2078:5: ( OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2078:7: OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON )
            {
            OBJECT_DEFINITION294=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_objectArgument13797); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new ObjectArgument(OBJECT_DEFINITION294); 
                    declaration.setType(new ValueModifier(null)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2081:7: ( memberNameDeclaration )?
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==LIDENTIFIER||LA187_0==UIDENTIFIER) ) {
                alt187=1;
            }
            switch (alt187) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2082:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_objectArgument13824);
                    memberNameDeclaration295=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration295); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2085:7: ( extendedType )?
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==EXTENDS) ) {
                alt188=1;
            }
            switch (alt188) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2086:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_objectArgument13862);
                    extendedType296=extendedType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setExtendedType(extendedType296); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2089:7: ( satisfiedTypes )?
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==SATISFIES) ) {
                alt189=1;
            }
            switch (alt189) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2090:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_objectArgument13901);
                    satisfiedTypes297=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setSatisfiedTypes(satisfiedTypes297); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2093:7: ( classBody | SEMICOLON )
            int alt190=2;
            int LA190_0 = input.LA(1);

            if ( (LA190_0==LBRACE) ) {
                alt190=1;
            }
            else if ( (LA190_0==SEMICOLON) ) {
                alt190=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 190, 0, input);

                throw nvae;

            }
            switch (alt190) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2094:9: classBody
                    {
                    pushFollow(FOLLOW_classBody_in_objectArgument13939);
                    classBody298=classBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setClassBody(classBody298); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2096:9: SEMICOLON
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LBRACE, input)); }

                    SEMICOLON299=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_objectArgument13969); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON299); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "objectArgument"



    // $ANTLR start "voidOrInferredMethodArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2103:1: voidOrInferredMethodArgument returns [MethodArgument declaration] : ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( parameters )* ( block | ( functionSpecifier )? SEMICOLON ) ;
    public MethodArgument voidOrInferredMethodArgument() throws RecognitionException {
        MethodArgument declaration = null;


        Token VOID_MODIFIER300=null;
        Token FUNCTION_MODIFIER301=null;
        Token SEMICOLON306=null;
        Identifier memberNameDeclaration302 =null;

        ParameterList parameters303 =null;

        Block block304 =null;

        SpecifierExpression functionSpecifier305 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2104:5: ( ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( parameters )* ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2104:7: ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( parameters )* ( block | ( functionSpecifier )? SEMICOLON )
            {
            if ( state.backtracking==0 ) { declaration =new MethodArgument(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2105:7: ( VOID_MODIFIER | FUNCTION_MODIFIER )
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==VOID_MODIFIER) ) {
                alt191=1;
            }
            else if ( (LA191_0==FUNCTION_MODIFIER) ) {
                alt191=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 191, 0, input);

                throw nvae;

            }
            switch (alt191) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2106:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER300=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodArgument14026); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setType(new VoidModifier(VOID_MODIFIER300)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2109:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER301=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodArgument14054); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setType(new FunctionModifier(FUNCTION_MODIFIER301)); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2112:7: ( memberNameDeclaration )?
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==LIDENTIFIER||LA192_0==UIDENTIFIER) ) {
                alt192=1;
            }
            switch (alt192) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2113:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_voidOrInferredMethodArgument14091);
                    memberNameDeclaration302=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration302); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2116:7: ( parameters )*
            loop193:
            do {
                int alt193=2;
                int LA193_0 = input.LA(1);

                if ( (LA193_0==LPAREN) ) {
                    alt193=1;
                }


                switch (alt193) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2117:9: parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_voidOrInferredMethodArgument14129);
            	    parameters303=parameters();

            	    state._fsp--;
            	    if (state.failed) return declaration;

            	    if ( state.backtracking==0 ) { declaration.addParameterList(parameters303); }

            	    }
            	    break;

            	default :
            	    break loop193;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2120:7: ( block | ( functionSpecifier )? SEMICOLON )
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( (LA195_0==LBRACE) ) {
                alt195=1;
            }
            else if ( (LA195_0==COMPUTE||LA195_0==SEMICOLON||LA195_0==SPECIFY) ) {
                alt195=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 195, 0, input);

                throw nvae;

            }
            switch (alt195) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2121:9: block
                    {
                    pushFollow(FOLLOW_block_in_voidOrInferredMethodArgument14166);
                    block304=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block304); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2124:9: ( functionSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2124:9: ( functionSpecifier )?
                    int alt194=2;
                    int LA194_0 = input.LA(1);

                    if ( (LA194_0==COMPUTE||LA194_0==SPECIFY) ) {
                        alt194=1;
                    }
                    switch (alt194) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2125:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_voidOrInferredMethodArgument14207);
                            functionSpecifier305=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(functionSpecifier305); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON306=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_voidOrInferredMethodArgument14250); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { expecting=-1; }

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON306); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "voidOrInferredMethodArgument"



    // $ANTLR start "inferredGetterArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2135:1: inferredGetterArgument returns [AttributeArgument declaration] : VALUE_MODIFIER ( memberNameDeclaration )? ( block | ( specifier | lazySpecifier )? SEMICOLON ) ;
    public AttributeArgument inferredGetterArgument() throws RecognitionException {
        AttributeArgument declaration = null;


        Token VALUE_MODIFIER307=null;
        Token SEMICOLON312=null;
        Identifier memberNameDeclaration308 =null;

        Block block309 =null;

        SpecifierExpression specifier310 =null;

        SpecifierExpression lazySpecifier311 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2136:5: ( VALUE_MODIFIER ( memberNameDeclaration )? ( block | ( specifier | lazySpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2136:7: VALUE_MODIFIER ( memberNameDeclaration )? ( block | ( specifier | lazySpecifier )? SEMICOLON )
            {
            if ( state.backtracking==0 ) { declaration =new AttributeArgument(null); }

            VALUE_MODIFIER307=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_inferredGetterArgument14307); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setType(new ValueModifier(VALUE_MODIFIER307)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2139:7: ( memberNameDeclaration )?
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( (LA196_0==LIDENTIFIER||LA196_0==UIDENTIFIER) ) {
                alt196=1;
            }
            switch (alt196) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2140:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_inferredGetterArgument14334);
                    memberNameDeclaration308=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration308); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2143:7: ( block | ( specifier | lazySpecifier )? SEMICOLON )
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==LBRACE) ) {
                alt198=1;
            }
            else if ( (LA198_0==COMPUTE||LA198_0==SEMICOLON||LA198_0==SPECIFY) ) {
                alt198=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 198, 0, input);

                throw nvae;

            }
            switch (alt198) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2144:9: block
                    {
                    pushFollow(FOLLOW_block_in_inferredGetterArgument14372);
                    block309=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block309); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2147:9: ( specifier | lazySpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2147:9: ( specifier | lazySpecifier )?
                    int alt197=3;
                    int LA197_0 = input.LA(1);

                    if ( (LA197_0==SPECIFY) ) {
                        alt197=1;
                    }
                    else if ( (LA197_0==COMPUTE) ) {
                        alt197=2;
                    }
                    switch (alt197) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2148:11: specifier
                            {
                            pushFollow(FOLLOW_specifier_in_inferredGetterArgument14413);
                            specifier310=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(specifier310); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2151:11: lazySpecifier
                            {
                            pushFollow(FOLLOW_lazySpecifier_in_inferredGetterArgument14449);
                            lazySpecifier311=lazySpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(lazySpecifier311); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON312=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_inferredGetterArgument14493); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { expecting=-1; }

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON312); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "inferredGetterArgument"



    // $ANTLR start "typedMethodOrGetterArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2161:1: typedMethodOrGetterArgument returns [TypedArgument declaration] : ( type | DYNAMIC ) memberNameDeclaration ( ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) ) ;
    public TypedArgument typedMethodOrGetterArgument() throws RecognitionException {
        TypedArgument declaration = null;


        Token s1=null;
        Token s2=null;
        Token DYNAMIC314=null;
        Block b1 =null;

        Block b2 =null;

        StaticType type313 =null;

        Identifier memberNameDeclaration315 =null;

        ParameterList parameters316 =null;

        SpecifierExpression functionSpecifier317 =null;

        SpecifierExpression specifier318 =null;

        SpecifierExpression lazySpecifier319 =null;


         MethodArgument marg = new MethodArgument(null);
                    AttributeArgument aarg = new AttributeArgument(null); 
                    declaration =aarg; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2165:5: ( ( type | DYNAMIC ) memberNameDeclaration ( ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2165:7: ( type | DYNAMIC ) memberNameDeclaration ( ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2165:7: ( type | DYNAMIC )
            int alt199=2;
            int LA199_0 = input.LA(1);

            if ( ((LA199_0 >= LBRACE && LA199_0 <= LBRACKET)||LA199_0==PACKAGE||LA199_0==SMALLER_OP||LA199_0==UIDENTIFIER) ) {
                alt199=1;
            }
            else if ( (LA199_0==DYNAMIC) ) {
                alt199=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 199, 0, input);

                throw nvae;

            }
            switch (alt199) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2166:9: type
                    {
                    pushFollow(FOLLOW_type_in_typedMethodOrGetterArgument14561);
                    type313=type();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { marg.setType(type313);
                              aarg.setType(type313); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2170:9: DYNAMIC
                    {
                    DYNAMIC314=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_typedMethodOrGetterArgument14590); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { DynamicModifier dm = new DynamicModifier(DYNAMIC314);
                              marg.setType(dm);
                              aarg.setType(dm); }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberNameDeclaration_in_typedMethodOrGetterArgument14616);
            memberNameDeclaration315=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { marg.setIdentifier(memberNameDeclaration315);
                    aarg.setIdentifier(memberNameDeclaration315); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2178:7: ( ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) )
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( (LA205_0==LPAREN) ) {
                alt205=1;
            }
            else if ( (LA205_0==COMPUTE||LA205_0==LBRACE||LA205_0==SEMICOLON||LA205_0==SPECIFY) ) {
                alt205=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 205, 0, input);

                throw nvae;

            }
            switch (alt205) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2179:9: ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON )
                    {
                    if ( state.backtracking==0 ) { declaration = marg; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2180:9: ( parameters )+
                    int cnt200=0;
                    loop200:
                    do {
                        int alt200=2;
                        int LA200_0 = input.LA(1);

                        if ( (LA200_0==LPAREN) ) {
                            alt200=1;
                        }


                        switch (alt200) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2181:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_typedMethodOrGetterArgument14664);
                    	    parameters316=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { marg.addParameterList(parameters316); }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt200 >= 1 ) break loop200;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(200, input);
                                throw eee;
                        }
                        cnt200++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2184:9: (b1= block | ( functionSpecifier )? s1= SEMICOLON )
                    int alt202=2;
                    int LA202_0 = input.LA(1);

                    if ( (LA202_0==LBRACE) ) {
                        alt202=1;
                    }
                    else if ( (LA202_0==COMPUTE||LA202_0==SEMICOLON||LA202_0==SPECIFY) ) {
                        alt202=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 202, 0, input);

                        throw nvae;

                    }
                    switch (alt202) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2185:11: b1= block
                            {
                            pushFollow(FOLLOW_block_in_typedMethodOrGetterArgument14711);
                            b1=block();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { marg.setBlock(b1); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2188:11: ( functionSpecifier )? s1= SEMICOLON
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2188:11: ( functionSpecifier )?
                            int alt201=2;
                            int LA201_0 = input.LA(1);

                            if ( (LA201_0==COMPUTE||LA201_0==SPECIFY) ) {
                                alt201=1;
                            }
                            switch (alt201) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2189:13: functionSpecifier
                                    {
                                    pushFollow(FOLLOW_functionSpecifier_in_typedMethodOrGetterArgument14760);
                                    functionSpecifier317=functionSpecifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { marg.setSpecifierExpression(functionSpecifier317); }

                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                            s1=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument14813); if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { expecting=-1; }

                            if ( state.backtracking==0 ) { declaration.setEndToken(s1); }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2198:9: (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON )
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2198:9: (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON )
                    int alt204=2;
                    int LA204_0 = input.LA(1);

                    if ( (LA204_0==LBRACE) ) {
                        alt204=1;
                    }
                    else if ( (LA204_0==COMPUTE||LA204_0==SEMICOLON||LA204_0==SPECIFY) ) {
                        alt204=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 204, 0, input);

                        throw nvae;

                    }
                    switch (alt204) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2199:11: b2= block
                            {
                            pushFollow(FOLLOW_block_in_typedMethodOrGetterArgument14879);
                            b2=block();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { aarg.setBlock(b2); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2202:11: ( specifier | lazySpecifier )? s2= SEMICOLON
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2202:11: ( specifier | lazySpecifier )?
                            int alt203=3;
                            int LA203_0 = input.LA(1);

                            if ( (LA203_0==SPECIFY) ) {
                                alt203=1;
                            }
                            else if ( (LA203_0==COMPUTE) ) {
                                alt203=2;
                            }
                            switch (alt203) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2203:13: specifier
                                    {
                                    pushFollow(FOLLOW_specifier_in_typedMethodOrGetterArgument14928);
                                    specifier318=specifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { aarg.setSpecifierExpression(specifier318); }

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2206:13: lazySpecifier
                                    {
                                    pushFollow(FOLLOW_lazySpecifier_in_typedMethodOrGetterArgument14970);
                                    lazySpecifier319=lazySpecifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { aarg.setSpecifierExpression(lazySpecifier319); }

                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                            s2=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument15024); if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { expecting=-1; }

                            if ( state.backtracking==0 ) { declaration.setEndToken(s2); }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "typedMethodOrGetterArgument"



    // $ANTLR start "untypedMethodOrGetterArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2217:1: untypedMethodOrGetterArgument returns [TypedArgument declaration] : memberName ( ( parameters )+ ( functionSpecifier ) | lazySpecifier ) SEMICOLON ;
    public TypedArgument untypedMethodOrGetterArgument() throws RecognitionException {
        TypedArgument declaration = null;


        Token SEMICOLON324=null;
        Identifier memberName320 =null;

        ParameterList parameters321 =null;

        SpecifierExpression functionSpecifier322 =null;

        SpecifierExpression lazySpecifier323 =null;


         MethodArgument marg = new MethodArgument(null);
                    marg.setType(new FunctionModifier(null));
                    AttributeArgument aarg = new AttributeArgument(null);
                    aarg.setType(new ValueModifier(null));
                    declaration =aarg; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2223:5: ( memberName ( ( parameters )+ ( functionSpecifier ) | lazySpecifier ) SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2223:7: memberName ( ( parameters )+ ( functionSpecifier ) | lazySpecifier ) SEMICOLON
            {
            pushFollow(FOLLOW_memberName_in_untypedMethodOrGetterArgument15096);
            memberName320=memberName();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { marg.setIdentifier(memberName320);
                    aarg.setIdentifier(memberName320); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2226:7: ( ( parameters )+ ( functionSpecifier ) | lazySpecifier )
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==LPAREN) ) {
                alt207=1;
            }
            else if ( (LA207_0==COMPUTE) ) {
                alt207=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 207, 0, input);

                throw nvae;

            }
            switch (alt207) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2227:9: ( parameters )+ ( functionSpecifier )
                    {
                    if ( state.backtracking==0 ) { declaration = marg; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2228:9: ( parameters )+
                    int cnt206=0;
                    loop206:
                    do {
                        int alt206=2;
                        int LA206_0 = input.LA(1);

                        if ( (LA206_0==LPAREN) ) {
                            alt206=1;
                        }


                        switch (alt206) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2229:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_untypedMethodOrGetterArgument15145);
                    	    parameters321=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { marg.addParameterList(parameters321); }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt206 >= 1 ) break loop206;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(206, input);
                                throw eee;
                        }
                        cnt206++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2232:9: ( functionSpecifier )
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2233:11: functionSpecifier
                    {
                    pushFollow(FOLLOW_functionSpecifier_in_untypedMethodOrGetterArgument15190);
                    functionSpecifier322=functionSpecifier();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { marg.setSpecifierExpression(functionSpecifier322); }

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2241:11: lazySpecifier
                    {
                    pushFollow(FOLLOW_lazySpecifier_in_untypedMethodOrGetterArgument15268);
                    lazySpecifier323=lazySpecifier();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { aarg.setSpecifierExpression(lazySpecifier323); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON324=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_untypedMethodOrGetterArgument15314); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { expecting=-1; }

            if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON324); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "untypedMethodOrGetterArgument"



    // $ANTLR start "namedArgumentDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2251:1: namedArgumentDeclaration returns [NamedArgument declaration] : ( objectArgument | typedMethodOrGetterArgument | voidOrInferredMethodArgument | inferredGetterArgument | untypedMethodOrGetterArgument );
    public NamedArgument namedArgumentDeclaration() throws RecognitionException {
        NamedArgument declaration = null;


        ObjectArgument objectArgument325 =null;

        TypedArgument typedMethodOrGetterArgument326 =null;

        MethodArgument voidOrInferredMethodArgument327 =null;

        AttributeArgument inferredGetterArgument328 =null;

        TypedArgument untypedMethodOrGetterArgument329 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2252:5: ( objectArgument | typedMethodOrGetterArgument | voidOrInferredMethodArgument | inferredGetterArgument | untypedMethodOrGetterArgument )
            int alt208=5;
            switch ( input.LA(1) ) {
            case OBJECT_DEFINITION:
                {
                alt208=1;
                }
                break;
            case DYNAMIC:
            case LBRACE:
            case LBRACKET:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt208=2;
                }
                break;
            case FUNCTION_MODIFIER:
            case VOID_MODIFIER:
                {
                alt208=3;
                }
                break;
            case VALUE_MODIFIER:
                {
                alt208=4;
                }
                break;
            case LIDENTIFIER:
                {
                alt208=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 208, 0, input);

                throw nvae;

            }

            switch (alt208) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2252:7: objectArgument
                    {
                    pushFollow(FOLLOW_objectArgument_in_namedArgumentDeclaration15351);
                    objectArgument325=objectArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =objectArgument325; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2254:7: typedMethodOrGetterArgument
                    {
                    pushFollow(FOLLOW_typedMethodOrGetterArgument_in_namedArgumentDeclaration15367);
                    typedMethodOrGetterArgument326=typedMethodOrGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =typedMethodOrGetterArgument326; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2256:7: voidOrInferredMethodArgument
                    {
                    pushFollow(FOLLOW_voidOrInferredMethodArgument_in_namedArgumentDeclaration15383);
                    voidOrInferredMethodArgument327=voidOrInferredMethodArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =voidOrInferredMethodArgument327; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2258:7: inferredGetterArgument
                    {
                    pushFollow(FOLLOW_inferredGetterArgument_in_namedArgumentDeclaration15399);
                    inferredGetterArgument328=inferredGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =inferredGetterArgument328; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2260:7: untypedMethodOrGetterArgument
                    {
                    pushFollow(FOLLOW_untypedMethodOrGetterArgument_in_namedArgumentDeclaration15415);
                    untypedMethodOrGetterArgument329=untypedMethodOrGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =untypedMethodOrGetterArgument329; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "namedArgumentDeclaration"



    // $ANTLR start "namedArgumentStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2267:1: namedArgumentStart : compilerAnnotations ( specificationStart | declarationStart ) ;
    public void namedArgumentStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2268:5: ( compilerAnnotations ( specificationStart | declarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2268:7: compilerAnnotations ( specificationStart | declarationStart )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_namedArgumentStart15443);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2269:7: ( specificationStart | declarationStart )
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==LIDENTIFIER) ) {
                alt209=1;
            }
            else if ( (LA209_0==ALIAS||LA209_0==ASSIGN||LA209_0==CLASS_DEFINITION||LA209_0==DYNAMIC||LA209_0==FUNCTION_MODIFIER||LA209_0==INTERFACE_DEFINITION||(LA209_0 >= LBRACE && LA209_0 <= LBRACKET)||LA209_0==NEW||LA209_0==OBJECT_DEFINITION||LA209_0==PACKAGE||LA209_0==SMALLER_OP||LA209_0==UIDENTIFIER||LA209_0==VALUE_MODIFIER||LA209_0==VOID_MODIFIER) ) {
                alt209=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 209, 0, input);

                throw nvae;

            }
            switch (alt209) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2269:8: specificationStart
                    {
                    pushFollow(FOLLOW_specificationStart_in_namedArgumentStart15453);
                    specificationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2269:29: declarationStart
                    {
                    pushFollow(FOLLOW_declarationStart_in_namedArgumentStart15457);
                    declarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "namedArgumentStart"



    // $ANTLR start "namedAnnotationArgumentsStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2272:1: namedAnnotationArgumentsStart : LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE ) ;
    public void namedAnnotationArgumentsStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2273:5: ( LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2273:7: LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE )
            {
            match(input,LBRACE,FOLLOW_LBRACE_in_namedAnnotationArgumentsStart15475); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2273:14: ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE )
            int alt210=3;
            int LA210_0 = input.LA(1);

            if ( (LA210_0==COMPILER_ANNOTATION) ) {
                int LA210_1 = input.LA(2);

                if ( (synpred28_Ceylon()) ) {
                    alt210=1;
                }
                else if ( (true) ) {
                    alt210=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 210, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA210_0==LIDENTIFIER) ) {
                int LA210_2 = input.LA(2);

                if ( (synpred28_Ceylon()) ) {
                    alt210=1;
                }
                else if ( (true) ) {
                    alt210=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 210, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA210_0==VALUE_MODIFIER) && (synpred28_Ceylon())) {
                alt210=1;
            }
            else if ( (LA210_0==FUNCTION_MODIFIER) && (synpred28_Ceylon())) {
                alt210=1;
            }
            else if ( (LA210_0==VOID_MODIFIER) && (synpred28_Ceylon())) {
                alt210=1;
            }
            else if ( (LA210_0==ASSIGN) && (synpred28_Ceylon())) {
                alt210=1;
            }
            else if ( (LA210_0==INTERFACE_DEFINITION) && (synpred28_Ceylon())) {
                alt210=1;
            }
            else if ( (LA210_0==CLASS_DEFINITION) && (synpred28_Ceylon())) {
                alt210=1;
            }
            else if ( (LA210_0==OBJECT_DEFINITION) ) {
                int LA210_9 = input.LA(2);

                if ( (synpred28_Ceylon()) ) {
                    alt210=1;
                }
                else if ( (true) ) {
                    alt210=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 210, 9, input);

                    throw nvae;

                }
            }
            else if ( (LA210_0==NEW) && (synpred28_Ceylon())) {
                alt210=1;
            }
            else if ( (LA210_0==ALIAS) && (synpred28_Ceylon())) {
                alt210=1;
            }
            else if ( (LA210_0==UIDENTIFIER) ) {
                int LA210_12 = input.LA(2);

                if ( (synpred28_Ceylon()) ) {
                    alt210=1;
                }
                else if ( (true) ) {
                    alt210=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 210, 12, input);

                    throw nvae;

                }
            }
            else if ( (LA210_0==SMALLER_OP) && (synpred28_Ceylon())) {
                alt210=1;
            }
            else if ( (LA210_0==PACKAGE) ) {
                int LA210_14 = input.LA(2);

                if ( (synpred28_Ceylon()) ) {
                    alt210=1;
                }
                else if ( (true) ) {
                    alt210=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 210, 14, input);

                    throw nvae;

                }
            }
            else if ( (LA210_0==LBRACKET) ) {
                int LA210_15 = input.LA(2);

                if ( (synpred28_Ceylon()) ) {
                    alt210=1;
                }
                else if ( (true) ) {
                    alt210=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 210, 15, input);

                    throw nvae;

                }
            }
            else if ( (LA210_0==LBRACE) ) {
                int LA210_16 = input.LA(2);

                if ( (synpred28_Ceylon()) ) {
                    alt210=1;
                }
                else if ( (true) ) {
                    alt210=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 210, 16, input);

                    throw nvae;

                }
            }
            else if ( (LA210_0==DYNAMIC) ) {
                int LA210_17 = input.LA(2);

                if ( (synpred28_Ceylon()) ) {
                    alt210=1;
                }
                else if ( (true) ) {
                    alt210=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 210, 17, input);

                    throw nvae;

                }
            }
            else if ( (LA210_0==BACKTICK||LA210_0==CHAR_LITERAL||(LA210_0 >= DECREMENT_OP && LA210_0 <= DIFFERENCE_OP)||LA210_0==FLOAT_LITERAL||LA210_0==INCREMENT_OP||LA210_0==LPAREN||LA210_0==NATURAL_LITERAL||LA210_0==NOT_OP||LA210_0==OUTER||LA210_0==STRING_LITERAL||LA210_0==STRING_START||(LA210_0 >= SUM_OP && LA210_0 <= SUPER)||LA210_0==THIS||LA210_0==VERBATIM_STRING) ) {
                alt210=2;
            }
            else if ( (LA210_0==RBRACE) ) {
                alt210=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 210, 0, input);

                throw nvae;

            }
            switch (alt210) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2273:15: ( namedArgumentStart )=> namedArgumentStart
                    {
                    pushFollow(FOLLOW_namedArgumentStart_in_namedAnnotationArgumentsStart15482);
                    namedArgumentStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2273:58: iterableArgumentStart
                    {
                    pushFollow(FOLLOW_iterableArgumentStart_in_namedAnnotationArgumentsStart15486);
                    iterableArgumentStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2273:82: RBRACE
                    {
                    match(input,RBRACE,FOLLOW_RBRACE_in_namedAnnotationArgumentsStart15490); if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "namedAnnotationArgumentsStart"



    // $ANTLR start "iterableArgumentStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2276:1: iterableArgumentStart : compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE ) ;
    public void iterableArgumentStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2277:5: ( compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2277:7: compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_iterableArgumentStart15508);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_expression_in_iterableArgumentStart15510);
            expression();

            state._fsp--;
            if (state.failed) return ;

            if ( input.LA(1)==COMMA||input.LA(1)==RBRACE||input.LA(1)==SEMICOLON ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "iterableArgumentStart"



    // $ANTLR start "specificationStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2281:1: specificationStart : LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE ) ;
    public void specificationStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2282:5: ( LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2282:7: LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE )
            {
            match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_specificationStart15536); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2282:19: ( parameters )*
            loop211:
            do {
                int alt211=2;
                int LA211_0 = input.LA(1);

                if ( (LA211_0==LPAREN) ) {
                    alt211=1;
                }


                switch (alt211) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2282:19: parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_specificationStart15538);
            	    parameters();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop211;
                }
            } while (true);


            if ( input.LA(1)==COMPUTE||input.LA(1)==SPECIFY ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "specificationStart"



    // $ANTLR start "parExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2285:1: parExpression returns [Expression expression] : LPAREN functionOrExpression RPAREN ;
    public Expression parExpression() throws RecognitionException {
        Expression expression = null;


        Token LPAREN330=null;
        Token RPAREN332=null;
        Expression functionOrExpression331 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2286:5: ( LPAREN functionOrExpression RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2286:7: LPAREN functionOrExpression RPAREN
            {
            LPAREN330=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parExpression15567); if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression = new Expression(LPAREN330); }

            pushFollow(FOLLOW_functionOrExpression_in_parExpression15584);
            functionOrExpression331=functionOrExpression();

            state._fsp--;
            if (state.failed) return expression;

            if ( state.backtracking==0 ) { if (functionOrExpression331!=null)
                        expression.setTerm(functionOrExpression331.getTerm()); }

            RPAREN332=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parExpression15600); if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression.setEndToken(RPAREN332); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "parExpression"



    // $ANTLR start "positionalArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2295:1: positionalArguments returns [PositionalArgumentList positionalArgumentList] : LPAREN (sa= sequencedArgument )? RPAREN ;
    public PositionalArgumentList positionalArguments() throws RecognitionException {
        PositionalArgumentList positionalArgumentList = null;


        Token LPAREN333=null;
        Token RPAREN334=null;
        SequencedArgument sa =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2296:5: ( LPAREN (sa= sequencedArgument )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2296:7: LPAREN (sa= sequencedArgument )? RPAREN
            {
            LPAREN333=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_positionalArguments15637); if (state.failed) return positionalArgumentList;

            if ( state.backtracking==0 ) { positionalArgumentList = new PositionalArgumentList(LPAREN333); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2298:7: (sa= sequencedArgument )?
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( (LA212_0==ALIAS||(LA212_0 >= ASSERT && LA212_0 <= ASSIGN)||(LA212_0 >= BACKTICK && LA212_0 <= BREAK)||(LA212_0 >= CHAR_LITERAL && LA212_0 <= CLASS_DEFINITION)||LA212_0==COMPILER_ANNOTATION||LA212_0==CONTINUE||(LA212_0 >= DECREMENT_OP && LA212_0 <= DIFFERENCE_OP)||LA212_0==DYNAMIC||(LA212_0 >= FLOAT_LITERAL && LA212_0 <= FUNCTION_MODIFIER)||(LA212_0 >= IF_CLAUSE && LA212_0 <= INTERFACE_DEFINITION)||LA212_0==IN_OP||(LA212_0 >= LBRACE && LA212_0 <= LIDENTIFIER)||LA212_0==LPAREN||LA212_0==MODULE||(LA212_0 >= NATURAL_LITERAL && LA212_0 <= NEW)||(LA212_0 >= NOT_OP && LA212_0 <= OBJECT_DEFINITION)||(LA212_0 >= OUT && LA212_0 <= PACKAGE)||LA212_0==PRODUCT_OP||LA212_0==RETURN||(LA212_0 >= SEMICOLON && LA212_0 <= SMALLER_OP)||LA212_0==STRING_LITERAL||LA212_0==STRING_START||(LA212_0 >= SUM_OP && LA212_0 <= SWITCH_CLAUSE)||(LA212_0 >= THIS && LA212_0 <= UIDENTIFIER)||(LA212_0 >= VALUE_MODIFIER && LA212_0 <= WHILE_CLAUSE)) ) {
                alt212=1;
            }
            switch (alt212) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2299:9: sa= sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_positionalArguments15666);
                    sa=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return positionalArgumentList;

                    if ( state.backtracking==0 ) { if (sa!=null) {
                                  for (PositionalArgument pa: sa.getPositionalArguments())
                                      positionalArgumentList.addPositionalArgument(pa);
                                  //TODO: this is really nasty, PositionalArgumentList should have
                                  //      or be a SequencedArgument, not copy its PositionalArguments!
                                  positionalArgumentList.setEndToken(sa.getMainEndToken()); } }

                    }
                    break;

            }


            RPAREN334=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_positionalArguments15693); if (state.failed) return positionalArgumentList;

            if ( state.backtracking==0 ) { positionalArgumentList.setEndToken(RPAREN334); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return positionalArgumentList;
    }
    // $ANTLR end "positionalArguments"



    // $ANTLR start "positionalArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2311:1: positionalArgument returns [ListedArgument positionalArgument] : functionOrExpression ;
    public ListedArgument positionalArgument() throws RecognitionException {
        ListedArgument positionalArgument = null;


        Expression functionOrExpression335 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2312:5: ( functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2312:7: functionOrExpression
            {
            if ( state.backtracking==0 ) { positionalArgument = new ListedArgument(null); }

            pushFollow(FOLLOW_functionOrExpression_in_positionalArgument15730);
            functionOrExpression335=functionOrExpression();

            state._fsp--;
            if (state.failed) return positionalArgument;

            if ( state.backtracking==0 ) { positionalArgument.setExpression(functionOrExpression335); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return positionalArgument;
    }
    // $ANTLR end "positionalArgument"



    // $ANTLR start "spreadArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2317:1: spreadArgument returns [SpreadArgument positionalArgument] : PRODUCT_OP unionExpression ;
    public SpreadArgument spreadArgument() throws RecognitionException {
        SpreadArgument positionalArgument = null;


        Token PRODUCT_OP336=null;
        Term unionExpression337 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2318:5: ( PRODUCT_OP unionExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2318:7: PRODUCT_OP unionExpression
            {
            PRODUCT_OP336=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_spreadArgument15759); if (state.failed) return positionalArgument;

            if ( state.backtracking==0 ) { positionalArgument = new SpreadArgument(PRODUCT_OP336); }

            pushFollow(FOLLOW_unionExpression_in_spreadArgument15775);
            unionExpression337=unionExpression();

            state._fsp--;
            if (state.failed) return positionalArgument;

            if ( state.backtracking==0 ) { Expression e = new Expression(null);
                    e.setTerm(unionExpression337);
                    positionalArgument.setExpression(e); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return positionalArgument;
    }
    // $ANTLR end "spreadArgument"



    // $ANTLR start "anonParametersStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2326:1: anonParametersStart : ( typeParameters )? LPAREN ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) ) | compilerAnnotations annotatedDeclarationStart ) ;
    public void anonParametersStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2327:5: ( ( typeParameters )? LPAREN ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) ) | compilerAnnotations annotatedDeclarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2327:7: ( typeParameters )? LPAREN ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) ) | compilerAnnotations annotatedDeclarationStart )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2327:7: ( typeParameters )?
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==SMALLER_OP) ) {
                alt213=1;
            }
            switch (alt213) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2327:7: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_anonParametersStart15800);
                    typeParameters();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            match(input,LPAREN,FOLLOW_LPAREN_in_anonParametersStart15807); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2329:5: ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) ) | compilerAnnotations annotatedDeclarationStart )
            int alt215=3;
            switch ( input.LA(1) ) {
            case RPAREN:
                {
                alt215=1;
                }
                break;
            case LIDENTIFIER:
                {
                int LA215_2 = input.LA(2);

                if ( (LA215_2==COMMA||LA215_2==RPAREN) ) {
                    alt215=2;
                }
                else if ( (LA215_2==ALIAS||LA215_2==ASSIGN||LA215_2==CLASS_DEFINITION||LA215_2==DYNAMIC||LA215_2==FUNCTION_MODIFIER||LA215_2==INTERFACE_DEFINITION||(LA215_2 >= LBRACE && LA215_2 <= LBRACKET)||LA215_2==LIDENTIFIER||LA215_2==LPAREN||LA215_2==NEW||LA215_2==OBJECT_DEFINITION||LA215_2==PACKAGE||LA215_2==SMALLER_OP||LA215_2==UIDENTIFIER||LA215_2==VALUE_MODIFIER||LA215_2==VOID_MODIFIER) ) {
                    alt215=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 215, 2, input);

                    throw nvae;

                }
                }
                break;
            case ALIAS:
            case ASSIGN:
            case CLASS_DEFINITION:
            case COMPILER_ANNOTATION:
            case DYNAMIC:
            case FUNCTION_MODIFIER:
            case INTERFACE_DEFINITION:
            case LBRACE:
            case LBRACKET:
            case NEW:
            case OBJECT_DEFINITION:
            case PACKAGE:
            case SMALLER_OP:
            case STRING_LITERAL:
            case UIDENTIFIER:
            case VALUE_MODIFIER:
            case VERBATIM_STRING:
            case VOID_MODIFIER:
                {
                alt215=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 215, 0, input);

                throw nvae;

            }

            switch (alt215) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2330:7: RPAREN
                    {
                    match(input,RPAREN,FOLLOW_RPAREN_in_anonParametersStart15823); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2331:7: LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) )
                    {
                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_anonParametersStart15831); if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2331:19: ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) )
                    int alt214=2;
                    int LA214_0 = input.LA(1);

                    if ( (LA214_0==COMMA) ) {
                        alt214=1;
                    }
                    else if ( (LA214_0==RPAREN) ) {
                        alt214=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 214, 0, input);

                        throw nvae;

                    }
                    switch (alt214) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2331:20: COMMA
                            {
                            match(input,COMMA,FOLLOW_COMMA_in_anonParametersStart15834); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2331:28: RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT )
                            {
                            match(input,RPAREN,FOLLOW_RPAREN_in_anonParametersStart15838); if (state.failed) return ;

                            if ( input.LA(1)==COMPUTE||input.LA(1)==LBRACE||input.LA(1)==TYPE_CONSTRAINT ) {
                                input.consume();
                                state.errorRecovery=false;
                                state.failed=false;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return ;}
                                MismatchedSetException mse = new MismatchedSetException(null,input);
                                throw mse;
                            }


                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2332:7: compilerAnnotations annotatedDeclarationStart
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_anonParametersStart15856);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    pushFollow(FOLLOW_annotatedDeclarationStart_in_anonParametersStart15858);
                    annotatedDeclarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "anonParametersStart"



    // $ANTLR start "nonemptyParametersStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2336:1: nonemptyParametersStart : LPAREN compilerAnnotations annotatedDeclarationStart ;
    public void nonemptyParametersStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2337:5: ( LPAREN compilerAnnotations annotatedDeclarationStart )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2337:7: LPAREN compilerAnnotations annotatedDeclarationStart
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_nonemptyParametersStart15882); if (state.failed) return ;

            pushFollow(FOLLOW_compilerAnnotations_in_nonemptyParametersStart15884);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_annotatedDeclarationStart_in_nonemptyParametersStart15886);
            annotatedDeclarationStart();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "nonemptyParametersStart"



    // $ANTLR start "functionOrExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2340:1: functionOrExpression returns [Expression expression] : ( ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=> anonymousFunction | let | ifExpression | switchExpression |e= expression );
    public Expression functionOrExpression() throws RecognitionException {
        Expression expression = null;


        Expression e =null;

        FunctionArgument anonymousFunction338 =null;

        LetExpression let339 =null;

        IfExpression ifExpression340 =null;

        SwitchExpression switchExpression341 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2341:5: ( ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=> anonymousFunction | let | ifExpression | switchExpression |e= expression )
            int alt216=5;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==FUNCTION_MODIFIER) && (synpred29_Ceylon())) {
                alt216=1;
            }
            else if ( (LA216_0==VOID_MODIFIER) && (synpred29_Ceylon())) {
                alt216=1;
            }
            else if ( (LA216_0==SMALLER_OP) && (synpred29_Ceylon())) {
                alt216=1;
            }
            else if ( (LA216_0==LPAREN) ) {
                int LA216_4 = input.LA(2);

                if ( (synpred29_Ceylon()) ) {
                    alt216=1;
                }
                else if ( (true) ) {
                    alt216=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return expression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 216, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA216_0==LET) ) {
                alt216=2;
            }
            else if ( (LA216_0==IF_CLAUSE) ) {
                alt216=3;
            }
            else if ( (LA216_0==SWITCH_CLAUSE) ) {
                alt216=4;
            }
            else if ( (LA216_0==BACKTICK||LA216_0==CHAR_LITERAL||(LA216_0 >= DECREMENT_OP && LA216_0 <= DIFFERENCE_OP)||LA216_0==DYNAMIC||LA216_0==FLOAT_LITERAL||LA216_0==INCREMENT_OP||(LA216_0 >= LBRACE && LA216_0 <= LBRACKET)||LA216_0==LIDENTIFIER||LA216_0==NATURAL_LITERAL||(LA216_0 >= NOT_OP && LA216_0 <= OBJECT_DEFINITION)||(LA216_0 >= OUTER && LA216_0 <= PACKAGE)||LA216_0==STRING_LITERAL||LA216_0==STRING_START||(LA216_0 >= SUM_OP && LA216_0 <= SUPER)||LA216_0==THIS||LA216_0==UIDENTIFIER||LA216_0==VERBATIM_STRING) ) {
                alt216=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return expression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 216, 0, input);

                throw nvae;

            }
            switch (alt216) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2341:7: ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=> anonymousFunction
                    {
                    pushFollow(FOLLOW_anonymousFunction_in_functionOrExpression15923);
                    anonymousFunction338=anonymousFunction();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(anonymousFunction338); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2345:7: let
                    {
                    pushFollow(FOLLOW_let_in_functionOrExpression15939);
                    let339=let();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(let339); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2348:7: ifExpression
                    {
                    pushFollow(FOLLOW_ifExpression_in_functionOrExpression15955);
                    ifExpression340=ifExpression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(ifExpression340); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2351:7: switchExpression
                    {
                    pushFollow(FOLLOW_switchExpression_in_functionOrExpression15971);
                    switchExpression341=switchExpression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null); 
                            expression.setTerm(switchExpression341); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2354:7: e= expression
                    {
                    pushFollow(FOLLOW_expression_in_functionOrExpression15989);
                    e=expression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = e; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "functionOrExpression"



    // $ANTLR start "let"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2358:1: let returns [LetExpression let] : letClause ;
    public LetExpression let() throws RecognitionException {
        LetExpression let = null;


        LetClause letClause342 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2359:5: ( letClause )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2359:7: letClause
            {
            pushFollow(FOLLOW_letClause_in_let16018);
            letClause342=letClause();

            state._fsp--;
            if (state.failed) return let;

            if ( state.backtracking==0 ) { let = new LetExpression(null);
                    let.setLetClause(letClause342); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return let;
    }
    // $ANTLR end "let"



    // $ANTLR start "patternStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2364:1: patternStart : ( ( variable ENTRY_OP )=> variable ENTRY_OP | tuplePatternStart );
    public void patternStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2365:5: ( ( variable ENTRY_OP )=> variable ENTRY_OP | tuplePatternStart )
            int alt217=2;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==COMPILER_ANNOTATION) && (synpred30_Ceylon())) {
                alt217=1;
            }
            else if ( (LA217_0==SMALLER_OP) && (synpred30_Ceylon())) {
                alt217=1;
            }
            else if ( (LA217_0==UIDENTIFIER) && (synpred30_Ceylon())) {
                alt217=1;
            }
            else if ( (LA217_0==PACKAGE) && (synpred30_Ceylon())) {
                alt217=1;
            }
            else if ( (LA217_0==LBRACKET) ) {
                int LA217_5 = input.LA(2);

                if ( (synpred30_Ceylon()) ) {
                    alt217=1;
                }
                else if ( (true) ) {
                    alt217=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 217, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA217_0==LBRACE) && (synpred30_Ceylon())) {
                alt217=1;
            }
            else if ( (LA217_0==VOID_MODIFIER) && (synpred30_Ceylon())) {
                alt217=1;
            }
            else if ( (LA217_0==FUNCTION_MODIFIER) && (synpred30_Ceylon())) {
                alt217=1;
            }
            else if ( (LA217_0==VALUE_MODIFIER) && (synpred30_Ceylon())) {
                alt217=1;
            }
            else if ( (LA217_0==LIDENTIFIER) && (synpred30_Ceylon())) {
                alt217=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 217, 0, input);

                throw nvae;

            }
            switch (alt217) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2365:7: ( variable ENTRY_OP )=> variable ENTRY_OP
                    {
                    pushFollow(FOLLOW_variable_in_patternStart16051);
                    variable();

                    state._fsp--;
                    if (state.failed) return ;

                    match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_patternStart16053); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2366:7: tuplePatternStart
                    {
                    pushFollow(FOLLOW_tuplePatternStart_in_patternStart16064);
                    tuplePatternStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "patternStart"



    // $ANTLR start "letVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2369:1: letVariable returns [Statement statement] : ( ( patternStart )=> pattern | variable ) ( specifier )? ;
    public Statement letVariable() throws RecognitionException {
        Statement statement = null;


        Pattern pattern343 =null;

        Variable variable344 =null;

        SpecifierExpression specifier345 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2370:5: ( ( ( patternStart )=> pattern | variable ) ( specifier )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2370:7: ( ( patternStart )=> pattern | variable ) ( specifier )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2370:7: ( ( patternStart )=> pattern | variable )
            int alt218=2;
            switch ( input.LA(1) ) {
            case LBRACKET:
                {
                int LA218_1 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt218=1;
                }
                else if ( (true) ) {
                    alt218=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 218, 1, input);

                    throw nvae;

                }
                }
                break;
            case COMPILER_ANNOTATION:
                {
                int LA218_2 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt218=1;
                }
                else if ( (true) ) {
                    alt218=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 218, 2, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA218_3 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt218=1;
                }
                else if ( (true) ) {
                    alt218=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 218, 3, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA218_4 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt218=1;
                }
                else if ( (true) ) {
                    alt218=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 218, 4, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA218_5 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt218=1;
                }
                else if ( (true) ) {
                    alt218=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 218, 5, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA218_6 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt218=1;
                }
                else if ( (true) ) {
                    alt218=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 218, 6, input);

                    throw nvae;

                }
                }
                break;
            case VOID_MODIFIER:
                {
                int LA218_7 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt218=1;
                }
                else if ( (true) ) {
                    alt218=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 218, 7, input);

                    throw nvae;

                }
                }
                break;
            case FUNCTION_MODIFIER:
                {
                int LA218_8 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt218=1;
                }
                else if ( (true) ) {
                    alt218=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 218, 8, input);

                    throw nvae;

                }
                }
                break;
            case VALUE_MODIFIER:
                {
                int LA218_9 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt218=1;
                }
                else if ( (true) ) {
                    alt218=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 218, 9, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA218_10 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt218=1;
                }
                else if ( (true) ) {
                    alt218=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 218, 10, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 218, 0, input);

                throw nvae;

            }

            switch (alt218) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2371:9: ( patternStart )=> pattern
                    {
                    pushFollow(FOLLOW_pattern_in_letVariable16101);
                    pattern343=pattern();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { Destructure d = new Destructure(null);
                              d.setPattern(pattern343);
                              statement = d; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2376:9: variable
                    {
                    pushFollow(FOLLOW_variable_in_letVariable16129);
                    variable344=variable();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =variable344; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2379:7: ( specifier )?
            int alt219=2;
            int LA219_0 = input.LA(1);

            if ( (LA219_0==SPECIFY) ) {
                alt219=1;
            }
            switch (alt219) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2380:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_letVariable16165);
                    specifier345=specifier();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { if (statement instanceof Destructure)
                                ((Destructure) statement).setSpecifierExpression(specifier345);
                              else if (statement instanceof Variable)
                                ((Variable) statement).setSpecifierExpression(specifier345); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "letVariable"



    // $ANTLR start "letClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2388:1: letClause returns [LetClause letClause] : LET LPAREN (v1= letVariable ( COMMA v2= letVariable )* )? RPAREN conditionalBranch ;
    public LetClause letClause() throws RecognitionException {
        LetClause letClause = null;


        Token LET346=null;
        Token LPAREN347=null;
        Token COMMA348=null;
        Token RPAREN349=null;
        Statement v1 =null;

        Statement v2 =null;

        Expression conditionalBranch350 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2389:5: ( LET LPAREN (v1= letVariable ( COMMA v2= letVariable )* )? RPAREN conditionalBranch )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2389:7: LET LPAREN (v1= letVariable ( COMMA v2= letVariable )* )? RPAREN conditionalBranch
            {
            LET346=(Token)match(input,LET,FOLLOW_LET_in_letClause16205); if (state.failed) return letClause;

            if ( state.backtracking==0 ) { letClause = new LetClause(LET346); }

            LPAREN347=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_letClause16221); if (state.failed) return letClause;

            if ( state.backtracking==0 ) { letClause.setEndToken(LPAREN347); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2393:7: (v1= letVariable ( COMMA v2= letVariable )* )?
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==COMPILER_ANNOTATION||LA221_0==FUNCTION_MODIFIER||(LA221_0 >= LBRACE && LA221_0 <= LBRACKET)||LA221_0==LIDENTIFIER||LA221_0==PACKAGE||LA221_0==SMALLER_OP||LA221_0==UIDENTIFIER||LA221_0==VALUE_MODIFIER||LA221_0==VOID_MODIFIER) ) {
                alt221=1;
            }
            switch (alt221) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2394:9: v1= letVariable ( COMMA v2= letVariable )*
                    {
                    pushFollow(FOLLOW_letVariable_in_letClause16249);
                    v1=letVariable();

                    state._fsp--;
                    if (state.failed) return letClause;

                    if ( state.backtracking==0 ) { letClause.setEndToken(null);
                              letClause.addVariable(v1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2397:9: ( COMMA v2= letVariable )*
                    loop220:
                    do {
                        int alt220=2;
                        int LA220_0 = input.LA(1);

                        if ( (LA220_0==COMMA) ) {
                            alt220=1;
                        }


                        switch (alt220) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2398:11: COMMA v2= letVariable
                    	    {
                    	    COMMA348=(Token)match(input,COMMA,FOLLOW_COMMA_in_letClause16281); if (state.failed) return letClause;

                    	    if ( state.backtracking==0 ) { letClause.setEndToken(COMMA348); }

                    	    pushFollow(FOLLOW_letVariable_in_letClause16307);
                    	    v2=letVariable();

                    	    state._fsp--;
                    	    if (state.failed) return letClause;

                    	    if ( state.backtracking==0 ) { letClause.setEndToken(null); 
                    	                letClause.addVariable(v2); }

                    	    }
                    	    break;

                    	default :
                    	    break loop220;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN349=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_letClause16347); if (state.failed) return letClause;

            if ( state.backtracking==0 ) { letClause.setEndToken(RPAREN349); }

            pushFollow(FOLLOW_conditionalBranch_in_letClause16363);
            conditionalBranch350=conditionalBranch();

            state._fsp--;
            if (state.failed) return letClause;

            if ( state.backtracking==0 ) { letClause.setExpression(conditionalBranch350); 
                    letClause.setEndToken(null); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return letClause;
    }
    // $ANTLR end "letClause"



    // $ANTLR start "switchExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2412:1: switchExpression returns [SwitchExpression term] : switchHeader caseExpressions ;
    public SwitchExpression switchExpression() throws RecognitionException {
        SwitchExpression term = null;


        SwitchClause switchHeader351 =null;

        SwitchCaseList caseExpressions352 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2413:5: ( switchHeader caseExpressions )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2413:7: switchHeader caseExpressions
            {
            pushFollow(FOLLOW_switchHeader_in_switchExpression16392);
            switchHeader351=switchHeader();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = new SwitchExpression(null);
                    term.setSwitchClause(switchHeader351); }

            pushFollow(FOLLOW_caseExpressions_in_switchExpression16408);
            caseExpressions352=caseExpressions();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term.setSwitchCaseList(caseExpressions352);
                    //TODO: huge copy/paste job from switchCaseElse 
                    Identifier id = null;
                    Switched sw = switchHeader351.getSwitched();
                    if (sw!=null) {
                      Expression ex = sw.getExpression();
                      if (ex!=null && ex.getTerm() instanceof BaseMemberExpression) {
                        id = ((BaseMemberExpression) ex.getTerm()).getIdentifier();
                      }
                      TypedDeclaration var = switchHeader351.getSwitched().getVariable();
                      if (var!=null) {
                        id = var.getIdentifier();
                      }
                    }
                    if (id!=null) {
                      for (CaseClause cc: caseExpressions352.getCaseClauses()) {
                        CaseItem item = cc.getCaseItem();
                        if (item instanceof IsCase) {
                          IsCase ic = (IsCase) item;
                          Variable v = new Variable(null);
                          v.setType(new SyntheticVariable(null));
                          v.setIdentifier(id);
                          SpecifierExpression se = new SpecifierExpression(null);
                          Expression e = new Expression(null);
                          BaseMemberExpression bme = new BaseMemberExpression(null);
                          bme.setIdentifier(id);
                          bme.setTypeArguments( new InferredTypeArguments(null) );
                          e.setTerm(bme);
                          se.setExpression(e);
                          v.setSpecifierExpression(se);
                          ic.setVariable(v);
                        }
                      } 
                      ElseClause ec = caseExpressions352.getElseClause();
                      if (ec!=null) {
                        Variable ev = new Variable(null);
                        ev.setType(new SyntheticVariable(null));
                        SpecifierExpression ese = new SpecifierExpression(null);
                        Expression ee = new Expression(null);
                        BaseMemberExpression ebme = new BaseMemberExpression(null);
                        ebme.setTypeArguments( new InferredTypeArguments(null) );
                        ee.setTerm(ebme);
                        ese.setExpression(ee);
                        ev.setSpecifierExpression(ese);
                        ec.setVariable(ev);
                        ebme.setIdentifier(id);
                        ev.setIdentifier(id);
                      }
                    } 
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "switchExpression"



    // $ANTLR start "caseExpressions"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2469:1: caseExpressions returns [SwitchCaseList switchCaseList] : ( caseExpression )+ ( defaultCaseExpression )? ;
    public SwitchCaseList caseExpressions() throws RecognitionException {
        SwitchCaseList switchCaseList = null;


        CaseClause caseExpression353 =null;

        ElseClause defaultCaseExpression354 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2470:5: ( ( caseExpression )+ ( defaultCaseExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2470:7: ( caseExpression )+ ( defaultCaseExpression )?
            {
            if ( state.backtracking==0 ) { switchCaseList = new SwitchCaseList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2471:7: ( caseExpression )+
            int cnt222=0;
            loop222:
            do {
                int alt222=2;
                int LA222_0 = input.LA(1);

                if ( (LA222_0==CASE_CLAUSE) ) {
                    alt222=1;
                }


                switch (alt222) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2472:9: caseExpression
            	    {
            	    pushFollow(FOLLOW_caseExpression_in_caseExpressions16455);
            	    caseExpression353=caseExpression();

            	    state._fsp--;
            	    if (state.failed) return switchCaseList;

            	    if ( state.backtracking==0 ) { switchCaseList.addCaseClause(caseExpression353); }

            	    }
            	    break;

            	default :
            	    if ( cnt222 >= 1 ) break loop222;
            	    if (state.backtracking>0) {state.failed=true; return switchCaseList;}
                        EarlyExitException eee =
                            new EarlyExitException(222, input);
                        throw eee;
                }
                cnt222++;
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2475:7: ( defaultCaseExpression )?
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==ELSE_CLAUSE) ) {
                alt223=1;
            }
            switch (alt223) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2476:9: defaultCaseExpression
                    {
                    pushFollow(FOLLOW_defaultCaseExpression_in_caseExpressions16492);
                    defaultCaseExpression354=defaultCaseExpression();

                    state._fsp--;
                    if (state.failed) return switchCaseList;

                    if ( state.backtracking==0 ) { switchCaseList.setElseClause(defaultCaseExpression354); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return switchCaseList;
    }
    // $ANTLR end "caseExpressions"



    // $ANTLR start "caseExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2481:1: caseExpression returns [CaseClause clause] : CASE_CLAUSE caseItemList conditionalBranch ;
    public CaseClause caseExpression() throws RecognitionException {
        CaseClause clause = null;


        Token CASE_CLAUSE355=null;
        CaseItem caseItemList356 =null;

        Expression conditionalBranch357 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2482:5: ( CASE_CLAUSE caseItemList conditionalBranch )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2482:7: CASE_CLAUSE caseItemList conditionalBranch
            {
            CASE_CLAUSE355=(Token)match(input,CASE_CLAUSE,FOLLOW_CASE_CLAUSE_in_caseExpression16536); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new CaseClause(CASE_CLAUSE355); }

            pushFollow(FOLLOW_caseItemList_in_caseExpression16553);
            caseItemList356=caseItemList();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setCaseItem(caseItemList356); }

            pushFollow(FOLLOW_conditionalBranch_in_caseExpression16569);
            conditionalBranch357=conditionalBranch();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setExpression(conditionalBranch357); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "caseExpression"



    // $ANTLR start "defaultCaseExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2490:1: defaultCaseExpression returns [ElseClause clause] : ELSE_CLAUSE conditionalBranch ;
    public ElseClause defaultCaseExpression() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE358=null;
        Expression conditionalBranch359 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2491:5: ( ELSE_CLAUSE conditionalBranch )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2491:7: ELSE_CLAUSE conditionalBranch
            {
            ELSE_CLAUSE358=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_defaultCaseExpression16598); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE358); }

            pushFollow(FOLLOW_conditionalBranch_in_defaultCaseExpression16615);
            conditionalBranch359=conditionalBranch();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setExpression(conditionalBranch359); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "defaultCaseExpression"



    // $ANTLR start "ifExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2497:1: ifExpression returns [IfExpression term] : IF_CLAUSE thenElseClauses ;
    public IfExpression ifExpression() throws RecognitionException {
        IfExpression term = null;


        Token IF_CLAUSE360=null;
        PsiCompatibleCeylonParser.thenElseClauses_return thenElseClauses361 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2498:5: ( IF_CLAUSE thenElseClauses )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2498:7: IF_CLAUSE thenElseClauses
            {
            IF_CLAUSE360=(Token)match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_ifExpression16644); if (state.failed) return term;

            if ( state.backtracking==0 ) { term = new IfExpression(IF_CLAUSE360); }

            pushFollow(FOLLOW_thenElseClauses_in_ifExpression16660);
            thenElseClauses361=thenElseClauses();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { IfClause ic = (thenElseClauses361!=null?thenElseClauses361.ifClause:null);
                    ElseClause ec = (thenElseClauses361!=null?thenElseClauses361.elseClause:null);
                    ConditionList cl = (thenElseClauses361!=null?thenElseClauses361.conditionList:null);
                    term.setIfClause(ic);
                    term.setElseClause(ec);
                    if (cl!=null) {
                      if (ic==null) {
                        ic = new IfClause(null);
                        term.setIfClause(ic);
                      }
                      ic.setConditionList(cl); 
                      if (cl!=null) {
                        List<Condition> conditions = cl.getConditions();
                        if (conditions.size()==1) {
                          Condition c = conditions.get(0);
                          Identifier id = null;
                          Type t = null;
                          if (c instanceof ExistsOrNonemptyCondition) {
                            Statement s = ((ExistsOrNonemptyCondition)c).getVariable();
                            if (s instanceof Variable) {
                              Variable v = (Variable) s;
                              t = v.getType();
                              id = v.getIdentifier();
                            }
                          }
                          else if (c instanceof IsCondition) {
                            Variable v = (Variable) ((IsCondition)c).getVariable();
                            if (v!=null) {
                              t = v.getType();
                              id = v.getIdentifier();
                            }
                          }
                          if (id!=null && ec!=null && t instanceof SyntheticVariable) { 
                            Variable ev = new Variable(null);
                            ev.setType(new SyntheticVariable(null));
                            SpecifierExpression ese = new SpecifierExpression(null);
                            Expression ee = new Expression(null);
                            BaseMemberExpression ebme = new BaseMemberExpression(null);
                            ebme.setTypeArguments( new InferredTypeArguments(null) );
                            ee.setTerm(ebme);
                            ese.setExpression(ee);
                            ev.setSpecifierExpression(ese);
                            ec.setVariable(ev);
                            ev.setIdentifier(id);
                            ebme.setIdentifier(id);
                          }
                        }
                      }        
                    } 
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "ifExpression"



    // $ANTLR start "conditionalBranch"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2553:1: conditionalBranch returns [Expression expression] : ( ifExpression | let | disjunctionExpression );
    public Expression conditionalBranch() throws RecognitionException {
        Expression expression = null;


        IfExpression ifExpression362 =null;

        LetExpression let363 =null;

        Term disjunctionExpression364 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2554:5: ( ifExpression | let | disjunctionExpression )
            int alt224=3;
            switch ( input.LA(1) ) {
            case IF_CLAUSE:
                {
                alt224=1;
                }
                break;
            case LET:
                {
                alt224=2;
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case DYNAMIC:
            case FLOAT_LITERAL:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case NOT_OP:
            case OBJECT_DEFINITION:
            case OUTER:
            case PACKAGE:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
                {
                alt224=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return expression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 224, 0, input);

                throw nvae;

            }

            switch (alt224) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2554:7: ifExpression
                    {
                    pushFollow(FOLLOW_ifExpression_in_conditionalBranch16689);
                    ifExpression362=ifExpression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(ifExpression362); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2557:7: let
                    {
                    pushFollow(FOLLOW_let_in_conditionalBranch16705);
                    let363=let();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(let363); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2560:7: disjunctionExpression
                    {
                    pushFollow(FOLLOW_disjunctionExpression_in_conditionalBranch16721);
                    disjunctionExpression364=disjunctionExpression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(disjunctionExpression364); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "conditionalBranch"


    public static class thenElseClauses_return extends ParserRuleReturnScope {
        public IfClause ifClause;
        public ElseClause elseClause;
        public ConditionList conditionList;
    };


    // $ANTLR start "thenElseClauses"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2565:1: thenElseClauses returns [IfClause ifClause, ElseClause elseClause, ConditionList conditionList] : conditions THEN_CLAUSE cb1= conditionalBranch ELSE_CLAUSE cb2= conditionalBranch ;
    public PsiCompatibleCeylonParser.thenElseClauses_return thenElseClauses() throws RecognitionException {
        PsiCompatibleCeylonParser.thenElseClauses_return retval = new PsiCompatibleCeylonParser.thenElseClauses_return();
        retval.start = input.LT(1);


        Token THEN_CLAUSE366=null;
        Token ELSE_CLAUSE367=null;
        Expression cb1 =null;

        Expression cb2 =null;

        ConditionList conditions365 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2566:5: ( conditions THEN_CLAUSE cb1= conditionalBranch ELSE_CLAUSE cb2= conditionalBranch )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2566:7: conditions THEN_CLAUSE cb1= conditionalBranch ELSE_CLAUSE cb2= conditionalBranch
            {
            pushFollow(FOLLOW_conditions_in_thenElseClauses16750);
            conditions365=conditions();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.conditionList = conditions365; }

            THEN_CLAUSE366=(Token)match(input,THEN_CLAUSE,FOLLOW_THEN_CLAUSE_in_thenElseClauses16766); if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.ifClause = new IfClause(THEN_CLAUSE366); }

            pushFollow(FOLLOW_conditionalBranch_in_thenElseClauses16784);
            cb1=conditionalBranch();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.ifClause.setExpression(cb1); }

            ELSE_CLAUSE367=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_thenElseClauses16800); if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.elseClause = new ElseClause(ELSE_CLAUSE367); }

            pushFollow(FOLLOW_conditionalBranch_in_thenElseClauses16818);
            cb2=conditionalBranch();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.elseClause.setExpression(cb2); }

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "thenElseClauses"



    // $ANTLR start "anonymousFunction"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2578:1: anonymousFunction returns [FunctionArgument function] : ( FUNCTION_MODIFIER | VOID_MODIFIER )? (tp= typeParameters )? p1= parameters (p2= parameters )* (tc= typeConstraints )? ( COMPUTE fe= functionOrExpression | block ) ;
    public FunctionArgument anonymousFunction() throws RecognitionException {
        FunctionArgument function = null;


        Token FUNCTION_MODIFIER368=null;
        Token VOID_MODIFIER369=null;
        TypeParameterList tp =null;

        ParameterList p1 =null;

        ParameterList p2 =null;

        TypeConstraintList tc =null;

        Expression fe =null;

        Block block370 =null;


         function = new FunctionArgument(null);
                    function.setType(new FunctionModifier(null)); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2581:5: ( ( FUNCTION_MODIFIER | VOID_MODIFIER )? (tp= typeParameters )? p1= parameters (p2= parameters )* (tc= typeConstraints )? ( COMPUTE fe= functionOrExpression | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2581:7: ( FUNCTION_MODIFIER | VOID_MODIFIER )? (tp= typeParameters )? p1= parameters (p2= parameters )* (tc= typeConstraints )? ( COMPUTE fe= functionOrExpression | block )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2581:7: ( FUNCTION_MODIFIER | VOID_MODIFIER )?
            int alt225=3;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==FUNCTION_MODIFIER) ) {
                alt225=1;
            }
            else if ( (LA225_0==VOID_MODIFIER) ) {
                alt225=2;
            }
            switch (alt225) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2582:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER368=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_anonymousFunction16866); if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setType(new FunctionModifier(FUNCTION_MODIFIER368)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2585:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER369=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_anonymousFunction16894); if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setType(new VoidModifier(VOID_MODIFIER369)); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2588:7: (tp= typeParameters )?
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( (LA226_0==SMALLER_OP) ) {
                alt226=1;
            }
            switch (alt226) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2589:9: tp= typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_anonymousFunction16933);
                    tp=typeParameters();

                    state._fsp--;
                    if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setTypeParameterList(tp); }

                    }
                    break;

            }


            pushFollow(FOLLOW_parameters_in_anonymousFunction16962);
            p1=parameters();

            state._fsp--;
            if (state.failed) return function;

            if ( state.backtracking==0 ) { function.addParameterList(p1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2594:7: (p2= parameters )*
            loop227:
            do {
                int alt227=2;
                int LA227_0 = input.LA(1);

                if ( (LA227_0==LPAREN) ) {
                    alt227=1;
                }


                switch (alt227) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2595:9: p2= parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_anonymousFunction16991);
            	    p2=parameters();

            	    state._fsp--;
            	    if (state.failed) return function;

            	    if ( state.backtracking==0 ) { function.addParameterList(p2); }

            	    }
            	    break;

            	default :
            	    break loop227;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2598:7: (tc= typeConstraints )?
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( (LA228_0==COMPILER_ANNOTATION||LA228_0==TYPE_CONSTRAINT) ) {
                alt228=1;
            }
            switch (alt228) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2599:9: tc= typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_anonymousFunction17030);
                    tc=typeConstraints();

                    state._fsp--;
                    if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setTypeConstraintList(tc); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2602:7: ( COMPUTE fe= functionOrExpression | block )
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==COMPUTE) ) {
                alt229=1;
            }
            else if ( (LA229_0==LBRACE) ) {
                alt229=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return function;}
                NoViableAltException nvae =
                    new NoViableAltException("", 229, 0, input);

                throw nvae;

            }
            switch (alt229) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2603:9: COMPUTE fe= functionOrExpression
                    {
                    match(input,COMPUTE,FOLLOW_COMPUTE_in_anonymousFunction17068); if (state.failed) return function;

                    pushFollow(FOLLOW_functionOrExpression_in_anonymousFunction17089);
                    fe=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setExpression(fe); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2608:9: block
                    {
                    pushFollow(FOLLOW_block_in_anonymousFunction17117);
                    block370=block();

                    state._fsp--;
                    if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setBlock(block370); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return function;
    }
    // $ANTLR end "anonymousFunction"



    // $ANTLR start "comprehension"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2613:1: comprehension returns [Comprehension comprehension] : ( forComprehensionClause | ifComprehensionClause );
    public Comprehension comprehension() throws RecognitionException {
        Comprehension comprehension = null;


        ForComprehensionClause forComprehensionClause371 =null;

        IfComprehensionClause ifComprehensionClause372 =null;


         comprehension = new Comprehension(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2615:5: ( forComprehensionClause | ifComprehensionClause )
            int alt230=2;
            int LA230_0 = input.LA(1);

            if ( (LA230_0==FOR_CLAUSE) ) {
                alt230=1;
            }
            else if ( (LA230_0==IF_CLAUSE) ) {
                alt230=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return comprehension;}
                NoViableAltException nvae =
                    new NoViableAltException("", 230, 0, input);

                throw nvae;

            }
            switch (alt230) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2615:7: forComprehensionClause
                    {
                    pushFollow(FOLLOW_forComprehensionClause_in_comprehension17165);
                    forComprehensionClause371=forComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehension;

                    if ( state.backtracking==0 ) { comprehension.setInitialComprehensionClause(forComprehensionClause371); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2617:7: ifComprehensionClause
                    {
                    pushFollow(FOLLOW_ifComprehensionClause_in_comprehension17181);
                    ifComprehensionClause372=ifComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehension;

                    if ( state.backtracking==0 ) { comprehension.setInitialComprehensionClause(ifComprehensionClause372); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehension;
    }
    // $ANTLR end "comprehension"



    // $ANTLR start "comprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2621:1: comprehensionClause returns [ComprehensionClause comprehensionClause] : ( forComprehensionClause | ( IF_CLAUSE conditions ~ THEN_CLAUSE )=> ifComprehensionClause | expressionComprehensionClause );
    public ComprehensionClause comprehensionClause() throws RecognitionException {
        ComprehensionClause comprehensionClause = null;


        ForComprehensionClause forComprehensionClause373 =null;

        IfComprehensionClause ifComprehensionClause374 =null;

        ExpressionComprehensionClause expressionComprehensionClause375 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2622:5: ( forComprehensionClause | ( IF_CLAUSE conditions ~ THEN_CLAUSE )=> ifComprehensionClause | expressionComprehensionClause )
            int alt231=3;
            switch ( input.LA(1) ) {
            case FOR_CLAUSE:
                {
                alt231=1;
                }
                break;
            case IF_CLAUSE:
                {
                int LA231_2 = input.LA(2);

                if ( (synpred32_Ceylon()) ) {
                    alt231=2;
                }
                else if ( (true) ) {
                    alt231=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return comprehensionClause;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 231, 2, input);

                    throw nvae;

                }
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case COMMA:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case DYNAMIC:
            case FLOAT_LITERAL:
            case FUNCTION_MODIFIER:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case NOT_OP:
            case OBJECT_DEFINITION:
            case OUTER:
            case PACKAGE:
            case RBRACE:
            case RBRACKET:
            case RPAREN:
            case SMALLER_OP:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case SWITCH_CLAUSE:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
            case VOID_MODIFIER:
                {
                alt231=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return comprehensionClause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 231, 0, input);

                throw nvae;

            }

            switch (alt231) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2622:7: forComprehensionClause
                    {
                    pushFollow(FOLLOW_forComprehensionClause_in_comprehensionClause17210);
                    forComprehensionClause373=forComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = forComprehensionClause373; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2624:7: ( IF_CLAUSE conditions ~ THEN_CLAUSE )=> ifComprehensionClause
                    {
                    pushFollow(FOLLOW_ifComprehensionClause_in_comprehensionClause17245);
                    ifComprehensionClause374=ifComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = ifComprehensionClause374; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2627:7: expressionComprehensionClause
                    {
                    pushFollow(FOLLOW_expressionComprehensionClause_in_comprehensionClause17262);
                    expressionComprehensionClause375=expressionComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = expressionComprehensionClause375; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "comprehensionClause"



    // $ANTLR start "expressionComprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2631:1: expressionComprehensionClause returns [ExpressionComprehensionClause comprehensionClause] : ( functionOrExpression |);
    public ExpressionComprehensionClause expressionComprehensionClause() throws RecognitionException {
        ExpressionComprehensionClause comprehensionClause = null;


        Expression functionOrExpression376 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2632:5: ( functionOrExpression |)
            int alt232=2;
            int LA232_0 = input.LA(1);

            if ( (LA232_0==BACKTICK||LA232_0==CHAR_LITERAL||(LA232_0 >= DECREMENT_OP && LA232_0 <= DIFFERENCE_OP)||LA232_0==DYNAMIC||LA232_0==FLOAT_LITERAL||LA232_0==FUNCTION_MODIFIER||LA232_0==IF_CLAUSE||LA232_0==INCREMENT_OP||(LA232_0 >= LBRACE && LA232_0 <= LIDENTIFIER)||LA232_0==LPAREN||LA232_0==NATURAL_LITERAL||(LA232_0 >= NOT_OP && LA232_0 <= OBJECT_DEFINITION)||(LA232_0 >= OUTER && LA232_0 <= PACKAGE)||LA232_0==SMALLER_OP||LA232_0==STRING_LITERAL||LA232_0==STRING_START||(LA232_0 >= SUM_OP && LA232_0 <= SWITCH_CLAUSE)||LA232_0==THIS||LA232_0==UIDENTIFIER||(LA232_0 >= VERBATIM_STRING && LA232_0 <= VOID_MODIFIER)) ) {
                alt232=1;
            }
            else if ( (LA232_0==COMMA||(LA232_0 >= RBRACE && LA232_0 <= RBRACKET)||LA232_0==RPAREN) ) {
                alt232=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return comprehensionClause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 232, 0, input);

                throw nvae;

            }
            switch (alt232) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2632:7: functionOrExpression
                    {
                    pushFollow(FOLLOW_functionOrExpression_in_expressionComprehensionClause17292);
                    functionOrExpression376=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = new ExpressionComprehensionClause(null);
                            comprehensionClause.setExpression(functionOrExpression376); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2635:7: 
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                              new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "expressionComprehensionClause"



    // $ANTLR start "forComprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2639:1: forComprehensionClause returns [ForComprehensionClause comprehensionClause] : FOR_CLAUSE forIterator comprehensionClause ;
    public ForComprehensionClause forComprehensionClause() throws RecognitionException {
        ForComprehensionClause comprehensionClause = null;


        Token FOR_CLAUSE377=null;
        ForIterator forIterator378 =null;

        ComprehensionClause comprehensionClause379 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2640:5: ( FOR_CLAUSE forIterator comprehensionClause )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2640:7: FOR_CLAUSE forIterator comprehensionClause
            {
            FOR_CLAUSE377=(Token)match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_forComprehensionClause17329); if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause = new ForComprehensionClause(FOR_CLAUSE377); }

            pushFollow(FOLLOW_forIterator_in_forComprehensionClause17345);
            forIterator378=forIterator();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setForIterator(forIterator378); }

            pushFollow(FOLLOW_comprehensionClause_in_forComprehensionClause17361);
            comprehensionClause379=comprehensionClause();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setComprehensionClause(comprehensionClause379); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "forComprehensionClause"



    // $ANTLR start "ifComprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2648:1: ifComprehensionClause returns [IfComprehensionClause comprehensionClause] : IF_CLAUSE conditions comprehensionClause ;
    public IfComprehensionClause ifComprehensionClause() throws RecognitionException {
        IfComprehensionClause comprehensionClause = null;


        Token IF_CLAUSE380=null;
        ConditionList conditions381 =null;

        ComprehensionClause comprehensionClause382 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2649:5: ( IF_CLAUSE conditions comprehensionClause )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2649:7: IF_CLAUSE conditions comprehensionClause
            {
            IF_CLAUSE380=(Token)match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_ifComprehensionClause17394); if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause = new IfComprehensionClause(IF_CLAUSE380); }

            pushFollow(FOLLOW_conditions_in_ifComprehensionClause17410);
            conditions381=conditions();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setConditionList(conditions381); }

            pushFollow(FOLLOW_comprehensionClause_in_ifComprehensionClause17426);
            comprehensionClause382=comprehensionClause();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setComprehensionClause(comprehensionClause382); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "ifComprehensionClause"



    // $ANTLR start "assignmentExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2657:1: assignmentExpression returns [Term term] : ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression )? ;
    public Term assignmentExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        Expression ee2 =null;

        AssignmentOp assignmentOperator383 =null;


         QualifiedMemberOrTypeExpression qe=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2659:5: (ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2659:7: ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression )?
            {
            pushFollow(FOLLOW_thenElseExpression_in_assignmentExpression17470);
            ee1=thenElseExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ee1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2661:7: ( assignmentOperator ee2= functionOrExpression )?
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( (LA233_0==ADD_SPECIFY||LA233_0==AND_SPECIFY||LA233_0==COMPLEMENT_SPECIFY||LA233_0==DIVIDE_SPECIFY||LA233_0==INTERSECT_SPECIFY||LA233_0==MULTIPLY_SPECIFY||LA233_0==OR_SPECIFY||LA233_0==REMAINDER_SPECIFY||LA233_0==SPECIFY||LA233_0==SUBTRACT_SPECIFY||LA233_0==UNION_SPECIFY) ) {
                alt233=1;
            }
            switch (alt233) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2662:9: assignmentOperator ee2= functionOrExpression
                    {
                    pushFollow(FOLLOW_assignmentOperator_in_assignmentExpression17496);
                    assignmentOperator383=assignmentOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { assignmentOperator383.setLeftTerm(term);
                              term = assignmentOperator383; }

                    pushFollow(FOLLOW_functionOrExpression_in_assignmentExpression17519);
                    ee2=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { if (ee2!=null)
                                  assignmentOperator383.setRightTerm(ee2.getTerm()); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "assignmentExpression"



    // $ANTLR start "assignmentOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2671:1: assignmentOperator returns [AssignmentOp operator] : ( SPECIFY | ADD_SPECIFY | SUBTRACT_SPECIFY | MULTIPLY_SPECIFY | DIVIDE_SPECIFY | REMAINDER_SPECIFY | INTERSECT_SPECIFY | UNION_SPECIFY | COMPLEMENT_SPECIFY | AND_SPECIFY | OR_SPECIFY );
    public AssignmentOp assignmentOperator() throws RecognitionException {
        AssignmentOp operator = null;


        Token SPECIFY384=null;
        Token ADD_SPECIFY385=null;
        Token SUBTRACT_SPECIFY386=null;
        Token MULTIPLY_SPECIFY387=null;
        Token DIVIDE_SPECIFY388=null;
        Token REMAINDER_SPECIFY389=null;
        Token INTERSECT_SPECIFY390=null;
        Token UNION_SPECIFY391=null;
        Token COMPLEMENT_SPECIFY392=null;
        Token AND_SPECIFY393=null;
        Token OR_SPECIFY394=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2672:5: ( SPECIFY | ADD_SPECIFY | SUBTRACT_SPECIFY | MULTIPLY_SPECIFY | DIVIDE_SPECIFY | REMAINDER_SPECIFY | INTERSECT_SPECIFY | UNION_SPECIFY | COMPLEMENT_SPECIFY | AND_SPECIFY | OR_SPECIFY )
            int alt234=11;
            switch ( input.LA(1) ) {
            case SPECIFY:
                {
                alt234=1;
                }
                break;
            case ADD_SPECIFY:
                {
                alt234=2;
                }
                break;
            case SUBTRACT_SPECIFY:
                {
                alt234=3;
                }
                break;
            case MULTIPLY_SPECIFY:
                {
                alt234=4;
                }
                break;
            case DIVIDE_SPECIFY:
                {
                alt234=5;
                }
                break;
            case REMAINDER_SPECIFY:
                {
                alt234=6;
                }
                break;
            case INTERSECT_SPECIFY:
                {
                alt234=7;
                }
                break;
            case UNION_SPECIFY:
                {
                alt234=8;
                }
                break;
            case COMPLEMENT_SPECIFY:
                {
                alt234=9;
                }
                break;
            case AND_SPECIFY:
                {
                alt234=10;
                }
                break;
            case OR_SPECIFY:
                {
                alt234=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 234, 0, input);

                throw nvae;

            }

            switch (alt234) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2672:7: SPECIFY
                    {
                    SPECIFY384=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_assignmentOperator17559); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AssignOp(SPECIFY384); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2673:7: ADD_SPECIFY
                    {
                    ADD_SPECIFY385=(Token)match(input,ADD_SPECIFY,FOLLOW_ADD_SPECIFY_in_assignmentOperator17569); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AddAssignOp(ADD_SPECIFY385); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2674:7: SUBTRACT_SPECIFY
                    {
                    SUBTRACT_SPECIFY386=(Token)match(input,SUBTRACT_SPECIFY,FOLLOW_SUBTRACT_SPECIFY_in_assignmentOperator17579); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SubtractAssignOp(SUBTRACT_SPECIFY386); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2675:7: MULTIPLY_SPECIFY
                    {
                    MULTIPLY_SPECIFY387=(Token)match(input,MULTIPLY_SPECIFY,FOLLOW_MULTIPLY_SPECIFY_in_assignmentOperator17589); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new MultiplyAssignOp(MULTIPLY_SPECIFY387); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2676:7: DIVIDE_SPECIFY
                    {
                    DIVIDE_SPECIFY388=(Token)match(input,DIVIDE_SPECIFY,FOLLOW_DIVIDE_SPECIFY_in_assignmentOperator17599); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DivideAssignOp(DIVIDE_SPECIFY388); }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2677:7: REMAINDER_SPECIFY
                    {
                    REMAINDER_SPECIFY389=(Token)match(input,REMAINDER_SPECIFY,FOLLOW_REMAINDER_SPECIFY_in_assignmentOperator17609); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RemainderAssignOp(REMAINDER_SPECIFY389); }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2678:7: INTERSECT_SPECIFY
                    {
                    INTERSECT_SPECIFY390=(Token)match(input,INTERSECT_SPECIFY,FOLLOW_INTERSECT_SPECIFY_in_assignmentOperator17619); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IntersectAssignOp(INTERSECT_SPECIFY390); }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2679:7: UNION_SPECIFY
                    {
                    UNION_SPECIFY391=(Token)match(input,UNION_SPECIFY,FOLLOW_UNION_SPECIFY_in_assignmentOperator17629); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new UnionAssignOp(UNION_SPECIFY391); }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2680:7: COMPLEMENT_SPECIFY
                    {
                    COMPLEMENT_SPECIFY392=(Token)match(input,COMPLEMENT_SPECIFY,FOLLOW_COMPLEMENT_SPECIFY_in_assignmentOperator17639); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ComplementAssignOp(COMPLEMENT_SPECIFY392); }

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2681:7: AND_SPECIFY
                    {
                    AND_SPECIFY393=(Token)match(input,AND_SPECIFY,FOLLOW_AND_SPECIFY_in_assignmentOperator17649); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AndAssignOp(AND_SPECIFY393); }

                    }
                    break;
                case 11 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2682:7: OR_SPECIFY
                    {
                    OR_SPECIFY394=(Token)match(input,OR_SPECIFY,FOLLOW_OR_SPECIFY_in_assignmentOperator17659); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new OrAssignOp(OR_SPECIFY394); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "assignmentOperator"



    // $ANTLR start "thenElseExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2685:1: thenElseExpression returns [Term term] : de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )* ;
    public Term thenElseExpression() throws RecognitionException {
        Term term = null;


        Term de1 =null;

        Term de2 =null;

        BinaryOperatorExpression thenElseOperator395 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2686:5: (de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2686:7: de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )*
            {
            pushFollow(FOLLOW_disjunctionExpression_in_thenElseExpression17684);
            de1=disjunctionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = de1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2688:7: ( thenElseOperator de2= disjunctionExpression )*
            loop235:
            do {
                int alt235=2;
                int LA235_0 = input.LA(1);

                if ( (LA235_0==ELSE_CLAUSE||LA235_0==THEN_CLAUSE) ) {
                    alt235=1;
                }


                switch (alt235) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2689:9: thenElseOperator de2= disjunctionExpression
            	    {
            	    pushFollow(FOLLOW_thenElseOperator_in_thenElseExpression17710);
            	    thenElseOperator395=thenElseOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { thenElseOperator395.setLeftTerm(term);
            	              term = thenElseOperator395; }

            	    pushFollow(FOLLOW_disjunctionExpression_in_thenElseExpression17732);
            	    de2=disjunctionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { thenElseOperator395.setRightTerm(de2); }

            	    }
            	    break;

            	default :
            	    break loop235;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "thenElseExpression"



    // $ANTLR start "thenElseOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2697:1: thenElseOperator returns [BinaryOperatorExpression operator] : ( ELSE_CLAUSE | THEN_CLAUSE );
    public BinaryOperatorExpression thenElseOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token ELSE_CLAUSE396=null;
        Token THEN_CLAUSE397=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2698:5: ( ELSE_CLAUSE | THEN_CLAUSE )
            int alt236=2;
            int LA236_0 = input.LA(1);

            if ( (LA236_0==ELSE_CLAUSE) ) {
                alt236=1;
            }
            else if ( (LA236_0==THEN_CLAUSE) ) {
                alt236=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 236, 0, input);

                throw nvae;

            }
            switch (alt236) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2698:7: ELSE_CLAUSE
                    {
                    ELSE_CLAUSE396=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_thenElseOperator17772); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DefaultOp(ELSE_CLAUSE396); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2700:7: THEN_CLAUSE
                    {
                    THEN_CLAUSE397=(Token)match(input,THEN_CLAUSE,FOLLOW_THEN_CLAUSE_in_thenElseOperator17789); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ThenOp(THEN_CLAUSE397); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "thenElseOperator"



    // $ANTLR start "disjunctionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2704:1: disjunctionExpression returns [Term term] : me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )* ;
    public Term disjunctionExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        OrOp disjunctionOperator398 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2705:5: (me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2705:7: me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )*
            {
            pushFollow(FOLLOW_conjunctionExpression_in_disjunctionExpression17820);
            me1=conjunctionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = me1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2707:7: ( disjunctionOperator me2= conjunctionExpression )*
            loop237:
            do {
                int alt237=2;
                int LA237_0 = input.LA(1);

                if ( (LA237_0==OR_OP) ) {
                    alt237=1;
                }


                switch (alt237) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2708:9: disjunctionOperator me2= conjunctionExpression
            	    {
            	    pushFollow(FOLLOW_disjunctionOperator_in_disjunctionExpression17846);
            	    disjunctionOperator398=disjunctionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { disjunctionOperator398.setLeftTerm(term);
            	              term = disjunctionOperator398; }

            	    pushFollow(FOLLOW_conjunctionExpression_in_disjunctionExpression17869);
            	    me2=conjunctionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { disjunctionOperator398.setRightTerm(me2); }

            	    }
            	    break;

            	default :
            	    break loop237;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "disjunctionExpression"



    // $ANTLR start "disjunctionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2716:1: disjunctionOperator returns [OrOp operator] : OR_OP ;
    public OrOp disjunctionOperator() throws RecognitionException {
        OrOp operator = null;


        Token OR_OP399=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2717:5: ( OR_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2717:7: OR_OP
            {
            OR_OP399=(Token)match(input,OR_OP,FOLLOW_OR_OP_in_disjunctionOperator17909); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new OrOp(OR_OP399); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "disjunctionOperator"



    // $ANTLR start "conjunctionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2721:1: conjunctionExpression returns [Term term] : me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )* ;
    public Term conjunctionExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        AndOp conjunctionOperator400 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2722:5: (me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2722:7: me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )*
            {
            pushFollow(FOLLOW_logicalNegationExpression_in_conjunctionExpression17941);
            me1=logicalNegationExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = me1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2724:7: ( conjunctionOperator me2= logicalNegationExpression )*
            loop238:
            do {
                int alt238=2;
                int LA238_0 = input.LA(1);

                if ( (LA238_0==AND_OP) ) {
                    alt238=1;
                }


                switch (alt238) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2725:9: conjunctionOperator me2= logicalNegationExpression
            	    {
            	    pushFollow(FOLLOW_conjunctionOperator_in_conjunctionExpression17967);
            	    conjunctionOperator400=conjunctionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { conjunctionOperator400.setLeftTerm(term);
            	              term = conjunctionOperator400; }

            	    pushFollow(FOLLOW_logicalNegationExpression_in_conjunctionExpression17990);
            	    me2=logicalNegationExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { conjunctionOperator400.setRightTerm(me2); }

            	    }
            	    break;

            	default :
            	    break loop238;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "conjunctionExpression"



    // $ANTLR start "conjunctionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2733:1: conjunctionOperator returns [AndOp operator] : AND_OP ;
    public AndOp conjunctionOperator() throws RecognitionException {
        AndOp operator = null;


        Token AND_OP401=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2734:5: ( AND_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2734:7: AND_OP
            {
            AND_OP401=(Token)match(input,AND_OP,FOLLOW_AND_OP_in_conjunctionOperator18030); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new AndOp(AND_OP401); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "conjunctionOperator"



    // $ANTLR start "logicalNegationExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2738:1: logicalNegationExpression returns [Term term] : ( notOperator le= logicalNegationExpression | equalityExpression );
    public Term logicalNegationExpression() throws RecognitionException {
        Term term = null;


        Term le =null;

        NotOp notOperator402 =null;

        Term equalityExpression403 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2739:5: ( notOperator le= logicalNegationExpression | equalityExpression )
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==NOT_OP) ) {
                alt239=1;
            }
            else if ( (LA239_0==BACKTICK||LA239_0==CHAR_LITERAL||(LA239_0 >= DECREMENT_OP && LA239_0 <= DIFFERENCE_OP)||LA239_0==DYNAMIC||LA239_0==FLOAT_LITERAL||LA239_0==INCREMENT_OP||(LA239_0 >= LBRACE && LA239_0 <= LBRACKET)||LA239_0==LIDENTIFIER||LA239_0==LPAREN||LA239_0==NATURAL_LITERAL||LA239_0==OBJECT_DEFINITION||(LA239_0 >= OUTER && LA239_0 <= PACKAGE)||LA239_0==STRING_LITERAL||LA239_0==STRING_START||(LA239_0 >= SUM_OP && LA239_0 <= SUPER)||LA239_0==THIS||LA239_0==UIDENTIFIER||LA239_0==VERBATIM_STRING) ) {
                alt239=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                    new NoViableAltException("", 239, 0, input);

                throw nvae;

            }
            switch (alt239) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2739:7: notOperator le= logicalNegationExpression
                    {
                    pushFollow(FOLLOW_notOperator_in_logicalNegationExpression18060);
                    notOperator402=notOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = notOperator402; }

                    pushFollow(FOLLOW_logicalNegationExpression_in_logicalNegationExpression18079);
                    le=logicalNegationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { notOperator402.setTerm(le); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2743:7: equalityExpression
                    {
                    pushFollow(FOLLOW_equalityExpression_in_logicalNegationExpression18095);
                    equalityExpression403=equalityExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = equalityExpression403; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "logicalNegationExpression"



    // $ANTLR start "notOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2747:1: notOperator returns [NotOp operator] : NOT_OP ;
    public NotOp notOperator() throws RecognitionException {
        NotOp operator = null;


        Token NOT_OP404=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2748:5: ( NOT_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2748:7: NOT_OP
            {
            NOT_OP404=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_notOperator18124); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new NotOp(NOT_OP404); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "notOperator"



    // $ANTLR start "equalityExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2752:1: equalityExpression returns [Term term] : ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )? ;
    public Term equalityExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        Term ee2 =null;

        BinaryOperatorExpression equalityOperator405 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2753:5: (ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2753:7: ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )?
            {
            pushFollow(FOLLOW_comparisonExpression_in_equalityExpression18156);
            ee1=comparisonExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ee1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2755:7: ( equalityOperator ee2= comparisonExpression )?
            int alt240=2;
            int LA240_0 = input.LA(1);

            if ( (LA240_0==EQUAL_OP||LA240_0==IDENTICAL_OP||LA240_0==NOT_EQUAL_OP) ) {
                alt240=1;
            }
            switch (alt240) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2756:9: equalityOperator ee2= comparisonExpression
                    {
                    pushFollow(FOLLOW_equalityOperator_in_equalityExpression18182);
                    equalityOperator405=equalityOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { equalityOperator405.setLeftTerm(term);
                              term = equalityOperator405; }

                    pushFollow(FOLLOW_comparisonExpression_in_equalityExpression18205);
                    ee2=comparisonExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { equalityOperator405.setRightTerm(ee2); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "equalityExpression"



    // $ANTLR start "equalityOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2764:1: equalityOperator returns [BinaryOperatorExpression operator] : ( EQUAL_OP | NOT_EQUAL_OP | IDENTICAL_OP );
    public BinaryOperatorExpression equalityOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token EQUAL_OP406=null;
        Token NOT_EQUAL_OP407=null;
        Token IDENTICAL_OP408=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2765:5: ( EQUAL_OP | NOT_EQUAL_OP | IDENTICAL_OP )
            int alt241=3;
            switch ( input.LA(1) ) {
            case EQUAL_OP:
                {
                alt241=1;
                }
                break;
            case NOT_EQUAL_OP:
                {
                alt241=2;
                }
                break;
            case IDENTICAL_OP:
                {
                alt241=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 241, 0, input);

                throw nvae;

            }

            switch (alt241) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2765:7: EQUAL_OP
                    {
                    EQUAL_OP406=(Token)match(input,EQUAL_OP,FOLLOW_EQUAL_OP_in_equalityOperator18245); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new EqualOp(EQUAL_OP406); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2767:7: NOT_EQUAL_OP
                    {
                    NOT_EQUAL_OP407=(Token)match(input,NOT_EQUAL_OP,FOLLOW_NOT_EQUAL_OP_in_equalityOperator18262); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new NotEqualOp(NOT_EQUAL_OP407); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2769:7: IDENTICAL_OP
                    {
                    IDENTICAL_OP408=(Token)match(input,IDENTICAL_OP,FOLLOW_IDENTICAL_OP_in_equalityOperator18278); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IdenticalOp(IDENTICAL_OP408); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "equalityOperator"



    // $ANTLR start "comparisonExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2773:1: comparisonExpression returns [Term term] : ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )? ;
    public Term comparisonExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        BinaryOperatorExpression co1 =null;

        Term ee2 =null;

        ComparisonOp lo1 =null;

        Term ee3 =null;

        ComparisonOp so1 =null;

        Term ee4 =null;

        ComparisonOp so2 =null;

        Term ee5 =null;

        TypeOperatorExpression to1 =null;

        StaticType t1 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2774:5: (ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2774:7: ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )?
            {
            pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression18309);
            ee1=existenceEmptinessExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ee1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2776:7: (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )?
            int alt243=5;
            switch ( input.LA(1) ) {
                case COMPARE_OP:
                case IN_OP:
                    {
                    alt243=1;
                    }
                    break;
                case LARGER_OP:
                case LARGE_AS_OP:
                    {
                    alt243=2;
                    }
                    break;
                case SMALLER_OP:
                case SMALL_AS_OP:
                    {
                    alt243=3;
                    }
                    break;
                case CASE_TYPES:
                case EXTENDS:
                case IS_OP:
                case SATISFIES:
                    {
                    alt243=4;
                    }
                    break;
            }

            switch (alt243) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2777:9: co1= comparisonOperator ee2= existenceEmptinessExpression
                    {
                    pushFollow(FOLLOW_comparisonOperator_in_comparisonExpression18337);
                    co1=comparisonOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { co1.setLeftTerm(term);
                              term = co1; }

                    pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression18360);
                    ee2=existenceEmptinessExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { co1.setRightTerm(ee2); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2782:9: lo1= largerOperator ee3= existenceEmptinessExpression
                    {
                    pushFollow(FOLLOW_largerOperator_in_comparisonExpression18382);
                    lo1=largerOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { lo1.setLeftTerm(term);
                              term = lo1; }

                    pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression18405);
                    ee3=existenceEmptinessExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { lo1.setRightTerm(ee3); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2787:9: so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )?
                    {
                    pushFollow(FOLLOW_smallerOperator_in_comparisonExpression18427);
                    so1=smallerOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { so1.setLeftTerm(term);
                              term = so1; }

                    pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression18450);
                    ee4=existenceEmptinessExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { so1.setRightTerm(ee4); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2792:9: (so2= smallerOperator ee5= existenceEmptinessExpression )?
                    int alt242=2;
                    int LA242_0 = input.LA(1);

                    if ( ((LA242_0 >= SMALLER_OP && LA242_0 <= SMALL_AS_OP)) ) {
                        alt242=1;
                    }
                    switch (alt242) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2793:11: so2= smallerOperator ee5= existenceEmptinessExpression
                            {
                            pushFollow(FOLLOW_smallerOperator_in_comparisonExpression18485);
                            so2=smallerOperator();

                            state._fsp--;
                            if (state.failed) return term;

                            pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression18499);
                            ee5=existenceEmptinessExpression();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { WithinOp w = new WithinOp(null); 
                                        Bound lb = so1 instanceof SmallerOp ?
                                            new OpenBound(null) : new ClosedBound(null);
                                        lb.setTerm(ee1);
                                        Bound ub = so2 instanceof SmallerOp ?
                                            new OpenBound(null) : new ClosedBound(null);
                                        ub.setTerm(ee5);
                                        w.setLowerBound(lb);
                                        w.setUpperBound(ub);
                                        w.setTerm(ee4);
                                        term = w; }

                            }
                            break;

                    }


                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2807:9: to1= typeOperator t1= type
                    {
                    pushFollow(FOLLOW_typeOperator_in_comparisonExpression18534);
                    to1=typeOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { to1.setTerm(ee1); 
                              term = to1; }

                    pushFollow(FOLLOW_type_in_comparisonExpression18556);
                    t1=type();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { to1.setType(t1); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "comparisonExpression"



    // $ANTLR start "smallerOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2821:1: smallerOperator returns [ComparisonOp operator] : ( SMALL_AS_OP | SMALLER_OP );
    public ComparisonOp smallerOperator() throws RecognitionException {
        ComparisonOp operator = null;


        Token SMALL_AS_OP409=null;
        Token SMALLER_OP410=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2822:5: ( SMALL_AS_OP | SMALLER_OP )
            int alt244=2;
            int LA244_0 = input.LA(1);

            if ( (LA244_0==SMALL_AS_OP) ) {
                alt244=1;
            }
            else if ( (LA244_0==SMALLER_OP) ) {
                alt244=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 244, 0, input);

                throw nvae;

            }
            switch (alt244) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2822:7: SMALL_AS_OP
                    {
                    SMALL_AS_OP409=(Token)match(input,SMALL_AS_OP,FOLLOW_SMALL_AS_OP_in_smallerOperator18602); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SmallAsOp(SMALL_AS_OP409); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2824:7: SMALLER_OP
                    {
                    SMALLER_OP410=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_smallerOperator18618); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SmallerOp(SMALLER_OP410); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "smallerOperator"



    // $ANTLR start "largerOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2828:1: largerOperator returns [ComparisonOp operator] : ( LARGE_AS_OP | LARGER_OP );
    public ComparisonOp largerOperator() throws RecognitionException {
        ComparisonOp operator = null;


        Token LARGE_AS_OP411=null;
        Token LARGER_OP412=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2829:5: ( LARGE_AS_OP | LARGER_OP )
            int alt245=2;
            int LA245_0 = input.LA(1);

            if ( (LA245_0==LARGE_AS_OP) ) {
                alt245=1;
            }
            else if ( (LA245_0==LARGER_OP) ) {
                alt245=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 245, 0, input);

                throw nvae;

            }
            switch (alt245) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2829:7: LARGE_AS_OP
                    {
                    LARGE_AS_OP411=(Token)match(input,LARGE_AS_OP,FOLLOW_LARGE_AS_OP_in_largerOperator18647); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new LargeAsOp(LARGE_AS_OP411); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2831:7: LARGER_OP
                    {
                    LARGER_OP412=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_largerOperator18663); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new LargerOp(LARGER_OP412); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "largerOperator"



    // $ANTLR start "comparisonOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2835:1: comparisonOperator returns [BinaryOperatorExpression operator] : ( COMPARE_OP | IN_OP );
    public BinaryOperatorExpression comparisonOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token COMPARE_OP413=null;
        Token IN_OP414=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2836:5: ( COMPARE_OP | IN_OP )
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==COMPARE_OP) ) {
                alt246=1;
            }
            else if ( (LA246_0==IN_OP) ) {
                alt246=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 246, 0, input);

                throw nvae;

            }
            switch (alt246) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2836:7: COMPARE_OP
                    {
                    COMPARE_OP413=(Token)match(input,COMPARE_OP,FOLLOW_COMPARE_OP_in_comparisonOperator18692); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new CompareOp(COMPARE_OP413); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2838:7: IN_OP
                    {
                    IN_OP414=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_comparisonOperator18709); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new InOp(IN_OP414); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "comparisonOperator"



    // $ANTLR start "typeOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2842:1: typeOperator returns [TypeOperatorExpression operator] : ( IS_OP | EXTENDS | SATISFIES | CASE_TYPES );
    public TypeOperatorExpression typeOperator() throws RecognitionException {
        TypeOperatorExpression operator = null;


        Token IS_OP415=null;
        Token EXTENDS416=null;
        Token SATISFIES417=null;
        Token CASE_TYPES418=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2843:5: ( IS_OP | EXTENDS | SATISFIES | CASE_TYPES )
            int alt247=4;
            switch ( input.LA(1) ) {
            case IS_OP:
                {
                alt247=1;
                }
                break;
            case EXTENDS:
                {
                alt247=2;
                }
                break;
            case SATISFIES:
                {
                alt247=3;
                }
                break;
            case CASE_TYPES:
                {
                alt247=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 247, 0, input);

                throw nvae;

            }

            switch (alt247) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2843:7: IS_OP
                    {
                    IS_OP415=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_typeOperator18738); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IsOp(IS_OP415); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2845:7: EXTENDS
                    {
                    EXTENDS416=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_typeOperator18754); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Extends(EXTENDS416); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2847:7: SATISFIES
                    {
                    SATISFIES417=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_typeOperator18770); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Satisfies(SATISFIES417); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2849:7: CASE_TYPES
                    {
                    CASE_TYPES418=(Token)match(input,CASE_TYPES,FOLLOW_CASE_TYPES_in_typeOperator18786); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new OfOp(CASE_TYPES418); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "typeOperator"



    // $ANTLR start "existenceEmptinessExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2853:1: existenceEmptinessExpression returns [Term term] : de1= entryRangeExpression (eno1= existsNonemptyOperator )? ;
    public Term existenceEmptinessExpression() throws RecognitionException {
        Term term = null;


        Term de1 =null;

        UnaryOperatorExpression eno1 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2854:5: (de1= entryRangeExpression (eno1= existsNonemptyOperator )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2854:7: de1= entryRangeExpression (eno1= existsNonemptyOperator )?
            {
            pushFollow(FOLLOW_entryRangeExpression_in_existenceEmptinessExpression18817);
            de1=entryRangeExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = de1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2856:7: (eno1= existsNonemptyOperator )?
            int alt248=2;
            int LA248_0 = input.LA(1);

            if ( (LA248_0==EXISTS||LA248_0==NONEMPTY) ) {
                alt248=1;
            }
            switch (alt248) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2857:9: eno1= existsNonemptyOperator
                    {
                    pushFollow(FOLLOW_existsNonemptyOperator_in_existenceEmptinessExpression18845);
                    eno1=existsNonemptyOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = eno1;
                              eno1.setTerm(de1); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "existenceEmptinessExpression"



    // $ANTLR start "existsNonemptyOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2867:1: existsNonemptyOperator returns [UnaryOperatorExpression operator] : ( EXISTS | NONEMPTY );
    public UnaryOperatorExpression existsNonemptyOperator() throws RecognitionException {
        UnaryOperatorExpression operator = null;


        Token EXISTS419=null;
        Token NONEMPTY420=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2868:5: ( EXISTS | NONEMPTY )
            int alt249=2;
            int LA249_0 = input.LA(1);

            if ( (LA249_0==EXISTS) ) {
                alt249=1;
            }
            else if ( (LA249_0==NONEMPTY) ) {
                alt249=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 249, 0, input);

                throw nvae;

            }
            switch (alt249) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2868:7: EXISTS
                    {
                    EXISTS419=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_existsNonemptyOperator18891); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Exists(EXISTS419); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2870:7: NONEMPTY
                    {
                    NONEMPTY420=(Token)match(input,NONEMPTY,FOLLOW_NONEMPTY_in_existsNonemptyOperator18908); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Nonempty(NONEMPTY420); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "existsNonemptyOperator"



    // $ANTLR start "entryRangeExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2874:1: entryRangeExpression returns [Term term] : ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )? ;
    public Term entryRangeExpression() throws RecognitionException {
        Term term = null;


        Term ae1 =null;

        Term ae2 =null;

        BinaryOperatorExpression rangeIntervalEntryOperator421 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2875:5: (ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2875:7: ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )?
            {
            pushFollow(FOLLOW_additiveExpression_in_entryRangeExpression18939);
            ae1=additiveExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ae1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2877:7: ( rangeIntervalEntryOperator ae2= additiveExpression )?
            int alt250=2;
            int LA250_0 = input.LA(1);

            if ( (LA250_0==ENTRY_OP||LA250_0==RANGE_OP||LA250_0==SEGMENT_OP) ) {
                alt250=1;
            }
            switch (alt250) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2878:9: rangeIntervalEntryOperator ae2= additiveExpression
                    {
                    pushFollow(FOLLOW_rangeIntervalEntryOperator_in_entryRangeExpression18965);
                    rangeIntervalEntryOperator421=rangeIntervalEntryOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { rangeIntervalEntryOperator421.setLeftTerm(term);
                              term = rangeIntervalEntryOperator421; }

                    pushFollow(FOLLOW_additiveExpression_in_entryRangeExpression18988);
                    ae2=additiveExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { rangeIntervalEntryOperator421.setRightTerm(ae2); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "entryRangeExpression"



    // $ANTLR start "rangeIntervalEntryOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2886:1: rangeIntervalEntryOperator returns [BinaryOperatorExpression operator] : ( RANGE_OP | SEGMENT_OP | ENTRY_OP );
    public BinaryOperatorExpression rangeIntervalEntryOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token RANGE_OP422=null;
        Token SEGMENT_OP423=null;
        Token ENTRY_OP424=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2887:5: ( RANGE_OP | SEGMENT_OP | ENTRY_OP )
            int alt251=3;
            switch ( input.LA(1) ) {
            case RANGE_OP:
                {
                alt251=1;
                }
                break;
            case SEGMENT_OP:
                {
                alt251=2;
                }
                break;
            case ENTRY_OP:
                {
                alt251=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 251, 0, input);

                throw nvae;

            }

            switch (alt251) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2887:7: RANGE_OP
                    {
                    RANGE_OP422=(Token)match(input,RANGE_OP,FOLLOW_RANGE_OP_in_rangeIntervalEntryOperator19028); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RangeOp(RANGE_OP422); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2889:7: SEGMENT_OP
                    {
                    SEGMENT_OP423=(Token)match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_rangeIntervalEntryOperator19045); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SegmentOp(SEGMENT_OP423); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2891:7: ENTRY_OP
                    {
                    ENTRY_OP424=(Token)match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_rangeIntervalEntryOperator19061); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new EntryOp(ENTRY_OP424); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "rangeIntervalEntryOperator"



    // $ANTLR start "additiveExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2895:1: additiveExpression returns [Term term] : me1= scaleExpression ( additiveOperator me2= scaleExpression )* ;
    public Term additiveExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        BinaryOperatorExpression additiveOperator425 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2896:5: (me1= scaleExpression ( additiveOperator me2= scaleExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2896:7: me1= scaleExpression ( additiveOperator me2= scaleExpression )*
            {
            pushFollow(FOLLOW_scaleExpression_in_additiveExpression19092);
            me1=scaleExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = me1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2898:7: ( additiveOperator me2= scaleExpression )*
            loop252:
            do {
                int alt252=2;
                int LA252_0 = input.LA(1);

                if ( (LA252_0==DIFFERENCE_OP||LA252_0==SUM_OP) ) {
                    alt252=1;
                }


                switch (alt252) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2899:9: additiveOperator me2= scaleExpression
            	    {
            	    pushFollow(FOLLOW_additiveOperator_in_additiveExpression19118);
            	    additiveOperator425=additiveOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { additiveOperator425.setLeftTerm(term);
            	              term = additiveOperator425; }

            	    pushFollow(FOLLOW_scaleExpression_in_additiveExpression19141);
            	    me2=scaleExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { additiveOperator425.setRightTerm(me2); }

            	    }
            	    break;

            	default :
            	    break loop252;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "additiveExpression"



    // $ANTLR start "additiveOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2907:1: additiveOperator returns [BinaryOperatorExpression operator] : ( SUM_OP | DIFFERENCE_OP );
    public BinaryOperatorExpression additiveOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token SUM_OP426=null;
        Token DIFFERENCE_OP427=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2908:5: ( SUM_OP | DIFFERENCE_OP )
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==SUM_OP) ) {
                alt253=1;
            }
            else if ( (LA253_0==DIFFERENCE_OP) ) {
                alt253=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 253, 0, input);

                throw nvae;

            }
            switch (alt253) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2908:7: SUM_OP
                    {
                    SUM_OP426=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_additiveOperator19181); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SumOp(SUM_OP426); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2910:7: DIFFERENCE_OP
                    {
                    DIFFERENCE_OP427=(Token)match(input,DIFFERENCE_OP,FOLLOW_DIFFERENCE_OP_in_additiveOperator19198); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DifferenceOp(DIFFERENCE_OP427); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "additiveOperator"



    // $ANTLR start "scaleExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2914:1: scaleExpression returns [Term term] : multiplicativeExpression ( scaleOperator se= scaleExpression )? ;
    public Term scaleExpression() throws RecognitionException {
        Term term = null;


        Term se =null;

        Term multiplicativeExpression428 =null;

        ScaleOp scaleOperator429 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2915:5: ( multiplicativeExpression ( scaleOperator se= scaleExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2915:7: multiplicativeExpression ( scaleOperator se= scaleExpression )?
            {
            pushFollow(FOLLOW_multiplicativeExpression_in_scaleExpression19227);
            multiplicativeExpression428=multiplicativeExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = multiplicativeExpression428; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2917:7: ( scaleOperator se= scaleExpression )?
            int alt254=2;
            int LA254_0 = input.LA(1);

            if ( (LA254_0==SCALE_OP) ) {
                alt254=1;
            }
            switch (alt254) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2918:9: scaleOperator se= scaleExpression
                    {
                    pushFollow(FOLLOW_scaleOperator_in_scaleExpression19253);
                    scaleOperator429=scaleOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { scaleOperator429.setLeftTerm(term);
                              term = scaleOperator429; }

                    pushFollow(FOLLOW_scaleExpression_in_scaleExpression19275);
                    se=scaleExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { scaleOperator429.setRightTerm(se); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "scaleExpression"



    // $ANTLR start "multiplicativeExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2926:1: multiplicativeExpression returns [Term term] : ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )* ;
    public Term multiplicativeExpression() throws RecognitionException {
        Term term = null;


        Term ue1 =null;

        Term ue2 =null;

        BinaryOperatorExpression multiplicativeOperator430 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2927:5: (ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2927:7: ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )*
            {
            pushFollow(FOLLOW_unionExpression_in_multiplicativeExpression19317);
            ue1=unionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ue1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2929:7: ( multiplicativeOperator ue2= unionExpression )*
            loop255:
            do {
                int alt255=2;
                int LA255_0 = input.LA(1);

                if ( ((LA255_0 >= PRODUCT_OP && LA255_0 <= QUOTIENT_OP)||LA255_0==REMAINDER_OP) ) {
                    alt255=1;
                }


                switch (alt255) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2930:9: multiplicativeOperator ue2= unionExpression
            	    {
            	    pushFollow(FOLLOW_multiplicativeOperator_in_multiplicativeExpression19343);
            	    multiplicativeOperator430=multiplicativeOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { multiplicativeOperator430.setLeftTerm(term);
            	              term = multiplicativeOperator430; }

            	    pushFollow(FOLLOW_unionExpression_in_multiplicativeExpression19366);
            	    ue2=unionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { multiplicativeOperator430.setRightTerm(ue2); }

            	    }
            	    break;

            	default :
            	    break loop255;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "multiplicativeExpression"



    // $ANTLR start "multiplicativeOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2938:1: multiplicativeOperator returns [BinaryOperatorExpression operator] : ( PRODUCT_OP | QUOTIENT_OP | REMAINDER_OP );
    public BinaryOperatorExpression multiplicativeOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token PRODUCT_OP431=null;
        Token QUOTIENT_OP432=null;
        Token REMAINDER_OP433=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2939:5: ( PRODUCT_OP | QUOTIENT_OP | REMAINDER_OP )
            int alt256=3;
            switch ( input.LA(1) ) {
            case PRODUCT_OP:
                {
                alt256=1;
                }
                break;
            case QUOTIENT_OP:
                {
                alt256=2;
                }
                break;
            case REMAINDER_OP:
                {
                alt256=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 256, 0, input);

                throw nvae;

            }

            switch (alt256) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2939:7: PRODUCT_OP
                    {
                    PRODUCT_OP431=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_multiplicativeOperator19406); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ProductOp(PRODUCT_OP431); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2941:7: QUOTIENT_OP
                    {
                    QUOTIENT_OP432=(Token)match(input,QUOTIENT_OP,FOLLOW_QUOTIENT_OP_in_multiplicativeOperator19423); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new QuotientOp(QUOTIENT_OP432); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2943:7: REMAINDER_OP
                    {
                    REMAINDER_OP433=(Token)match(input,REMAINDER_OP,FOLLOW_REMAINDER_OP_in_multiplicativeOperator19439); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RemainderOp(REMAINDER_OP433); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "multiplicativeOperator"



    // $ANTLR start "unionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2947:1: unionExpression returns [Term term] : ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )* ;
    public Term unionExpression() throws RecognitionException {
        Term term = null;


        Term ie1 =null;

        Term ie2 =null;

        BinaryOperatorExpression unionOperator434 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2948:5: (ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2948:7: ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )*
            {
            pushFollow(FOLLOW_intersectionExpression_in_unionExpression19470);
            ie1=intersectionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ie1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2950:7: ( unionOperator ie2= intersectionExpression )*
            loop257:
            do {
                int alt257=2;
                int LA257_0 = input.LA(1);

                if ( (LA257_0==COMPLEMENT_OP||LA257_0==UNION_OP) ) {
                    alt257=1;
                }


                switch (alt257) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2951:9: unionOperator ie2= intersectionExpression
            	    {
            	    pushFollow(FOLLOW_unionOperator_in_unionExpression19496);
            	    unionOperator434=unionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { unionOperator434.setLeftTerm(term);
            	              term = unionOperator434; }

            	    pushFollow(FOLLOW_intersectionExpression_in_unionExpression19519);
            	    ie2=intersectionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { unionOperator434.setRightTerm(ie2); }

            	    }
            	    break;

            	default :
            	    break loop257;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "unionExpression"



    // $ANTLR start "unionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2959:1: unionOperator returns [BinaryOperatorExpression operator] : ( UNION_OP | COMPLEMENT_OP );
    public BinaryOperatorExpression unionOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token UNION_OP435=null;
        Token COMPLEMENT_OP436=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2960:5: ( UNION_OP | COMPLEMENT_OP )
            int alt258=2;
            int LA258_0 = input.LA(1);

            if ( (LA258_0==UNION_OP) ) {
                alt258=1;
            }
            else if ( (LA258_0==COMPLEMENT_OP) ) {
                alt258=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 258, 0, input);

                throw nvae;

            }
            switch (alt258) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2960:7: UNION_OP
                    {
                    UNION_OP435=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_unionOperator19563); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new UnionOp(UNION_OP435); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2962:7: COMPLEMENT_OP
                    {
                    COMPLEMENT_OP436=(Token)match(input,COMPLEMENT_OP,FOLLOW_COMPLEMENT_OP_in_unionOperator19579); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ComplementOp(COMPLEMENT_OP436); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "unionOperator"



    // $ANTLR start "intersectionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2966:1: intersectionExpression returns [Term term] : ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )* ;
    public Term intersectionExpression() throws RecognitionException {
        Term term = null;


        Term ne1 =null;

        Term ne2 =null;

        BinaryOperatorExpression intersectionOperator437 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2967:5: (ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2967:7: ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )*
            {
            pushFollow(FOLLOW_negationComplementExpression_in_intersectionExpression19610);
            ne1=negationComplementExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ne1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2969:7: ( intersectionOperator ne2= negationComplementExpression )*
            loop259:
            do {
                int alt259=2;
                int LA259_0 = input.LA(1);

                if ( (LA259_0==INTERSECTION_OP) ) {
                    alt259=1;
                }


                switch (alt259) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2970:9: intersectionOperator ne2= negationComplementExpression
            	    {
            	    pushFollow(FOLLOW_intersectionOperator_in_intersectionExpression19636);
            	    intersectionOperator437=intersectionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { intersectionOperator437.setLeftTerm(term);
            	              term = intersectionOperator437; }

            	    pushFollow(FOLLOW_negationComplementExpression_in_intersectionExpression19659);
            	    ne2=negationComplementExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { intersectionOperator437.setRightTerm(ne2); }

            	    }
            	    break;

            	default :
            	    break loop259;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "intersectionExpression"



    // $ANTLR start "intersectionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2978:1: intersectionOperator returns [BinaryOperatorExpression operator] : INTERSECTION_OP ;
    public BinaryOperatorExpression intersectionOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token INTERSECTION_OP438=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2979:5: ( INTERSECTION_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2979:7: INTERSECTION_OP
            {
            INTERSECTION_OP438=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_intersectionOperator19703); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new IntersectionOp(INTERSECTION_OP438); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "intersectionOperator"



    // $ANTLR start "negationComplementExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2983:1: negationComplementExpression returns [Term term] : ( unaryMinusOrComplementOperator ne= negationComplementExpression | exponentiationExpression );
    public Term negationComplementExpression() throws RecognitionException {
        Term term = null;


        Term ne =null;

        UnaryOperatorExpression unaryMinusOrComplementOperator439 =null;

        Term exponentiationExpression440 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2984:5: ( unaryMinusOrComplementOperator ne= negationComplementExpression | exponentiationExpression )
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( (LA260_0==DIFFERENCE_OP||LA260_0==SUM_OP) ) {
                alt260=1;
            }
            else if ( (LA260_0==BACKTICK||LA260_0==CHAR_LITERAL||LA260_0==DECREMENT_OP||LA260_0==DYNAMIC||LA260_0==FLOAT_LITERAL||LA260_0==INCREMENT_OP||(LA260_0 >= LBRACE && LA260_0 <= LBRACKET)||LA260_0==LIDENTIFIER||LA260_0==LPAREN||LA260_0==NATURAL_LITERAL||LA260_0==OBJECT_DEFINITION||(LA260_0 >= OUTER && LA260_0 <= PACKAGE)||LA260_0==STRING_LITERAL||LA260_0==STRING_START||LA260_0==SUPER||LA260_0==THIS||LA260_0==UIDENTIFIER||LA260_0==VERBATIM_STRING) ) {
                alt260=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                    new NoViableAltException("", 260, 0, input);

                throw nvae;

            }
            switch (alt260) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2984:7: unaryMinusOrComplementOperator ne= negationComplementExpression
                    {
                    pushFollow(FOLLOW_unaryMinusOrComplementOperator_in_negationComplementExpression19732);
                    unaryMinusOrComplementOperator439=unaryMinusOrComplementOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = unaryMinusOrComplementOperator439; }

                    pushFollow(FOLLOW_negationComplementExpression_in_negationComplementExpression19751);
                    ne=negationComplementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { unaryMinusOrComplementOperator439.setTerm(ne); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2988:7: exponentiationExpression
                    {
                    pushFollow(FOLLOW_exponentiationExpression_in_negationComplementExpression19767);
                    exponentiationExpression440=exponentiationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = exponentiationExpression440; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "negationComplementExpression"



    // $ANTLR start "unaryMinusOrComplementOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2992:1: unaryMinusOrComplementOperator returns [UnaryOperatorExpression operator] : ( DIFFERENCE_OP | SUM_OP );
    public UnaryOperatorExpression unaryMinusOrComplementOperator() throws RecognitionException {
        UnaryOperatorExpression operator = null;


        Token DIFFERENCE_OP441=null;
        Token SUM_OP442=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2993:5: ( DIFFERENCE_OP | SUM_OP )
            int alt261=2;
            int LA261_0 = input.LA(1);

            if ( (LA261_0==DIFFERENCE_OP) ) {
                alt261=1;
            }
            else if ( (LA261_0==SUM_OP) ) {
                alt261=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 261, 0, input);

                throw nvae;

            }
            switch (alt261) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2993:7: DIFFERENCE_OP
                    {
                    DIFFERENCE_OP441=(Token)match(input,DIFFERENCE_OP,FOLLOW_DIFFERENCE_OP_in_unaryMinusOrComplementOperator19796); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new NegativeOp(DIFFERENCE_OP441); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2995:7: SUM_OP
                    {
                    SUM_OP442=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_unaryMinusOrComplementOperator19813); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PositiveOp(SUM_OP442); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "unaryMinusOrComplementOperator"



    // $ANTLR start "exponentiationExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2999:1: exponentiationExpression returns [Term term] : incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )? ;
    public Term exponentiationExpression() throws RecognitionException {
        Term term = null;


        Term ee =null;

        Term incrementDecrementExpression443 =null;

        PowerOp exponentiationOperator444 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3000:5: ( incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3000:7: incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )?
            {
            pushFollow(FOLLOW_incrementDecrementExpression_in_exponentiationExpression19842);
            incrementDecrementExpression443=incrementDecrementExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = incrementDecrementExpression443; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3002:7: ( exponentiationOperator ee= exponentiationExpression )?
            int alt262=2;
            int LA262_0 = input.LA(1);

            if ( (LA262_0==POWER_OP) ) {
                alt262=1;
            }
            switch (alt262) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3003:9: exponentiationOperator ee= exponentiationExpression
                    {
                    pushFollow(FOLLOW_exponentiationOperator_in_exponentiationExpression19868);
                    exponentiationOperator444=exponentiationOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { exponentiationOperator444.setLeftTerm(term);
                              term = exponentiationOperator444; }

                    pushFollow(FOLLOW_exponentiationExpression_in_exponentiationExpression19890);
                    ee=exponentiationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { exponentiationOperator444.setRightTerm(ee); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "exponentiationExpression"



    // $ANTLR start "exponentiationOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3011:1: exponentiationOperator returns [PowerOp operator] : POWER_OP ;
    public PowerOp exponentiationOperator() throws RecognitionException {
        PowerOp operator = null;


        Token POWER_OP445=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3012:5: ( POWER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3012:7: POWER_OP
            {
            POWER_OP445=(Token)match(input,POWER_OP,FOLLOW_POWER_OP_in_exponentiationOperator19930); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new PowerOp(POWER_OP445); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "exponentiationOperator"



    // $ANTLR start "scaleOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3016:1: scaleOperator returns [ScaleOp operator] : SCALE_OP ;
    public ScaleOp scaleOperator() throws RecognitionException {
        ScaleOp operator = null;


        Token SCALE_OP446=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3017:5: ( SCALE_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3017:7: SCALE_OP
            {
            SCALE_OP446=(Token)match(input,SCALE_OP,FOLLOW_SCALE_OP_in_scaleOperator19960); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new ScaleOp(SCALE_OP446); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "scaleOperator"



    // $ANTLR start "incrementDecrementExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3021:1: incrementDecrementExpression returns [Term term] : ( prefixOperator ie= incrementDecrementExpression | postfixIncrementDecrementExpression );
    public Term incrementDecrementExpression() throws RecognitionException {
        Term term = null;


        Term ie =null;

        PrefixOperatorExpression prefixOperator447 =null;

        Term postfixIncrementDecrementExpression448 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3022:5: ( prefixOperator ie= incrementDecrementExpression | postfixIncrementDecrementExpression )
            int alt263=2;
            int LA263_0 = input.LA(1);

            if ( (LA263_0==DECREMENT_OP||LA263_0==INCREMENT_OP) ) {
                alt263=1;
            }
            else if ( (LA263_0==BACKTICK||LA263_0==CHAR_LITERAL||LA263_0==DYNAMIC||LA263_0==FLOAT_LITERAL||(LA263_0 >= LBRACE && LA263_0 <= LBRACKET)||LA263_0==LIDENTIFIER||LA263_0==LPAREN||LA263_0==NATURAL_LITERAL||LA263_0==OBJECT_DEFINITION||(LA263_0 >= OUTER && LA263_0 <= PACKAGE)||LA263_0==STRING_LITERAL||LA263_0==STRING_START||LA263_0==SUPER||LA263_0==THIS||LA263_0==UIDENTIFIER||LA263_0==VERBATIM_STRING) ) {
                alt263=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                    new NoViableAltException("", 263, 0, input);

                throw nvae;

            }
            switch (alt263) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3022:7: prefixOperator ie= incrementDecrementExpression
                    {
                    pushFollow(FOLLOW_prefixOperator_in_incrementDecrementExpression19990);
                    prefixOperator447=prefixOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = prefixOperator447; }

                    pushFollow(FOLLOW_incrementDecrementExpression_in_incrementDecrementExpression20008);
                    ie=incrementDecrementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { prefixOperator447.setTerm(ie); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3026:7: postfixIncrementDecrementExpression
                    {
                    pushFollow(FOLLOW_postfixIncrementDecrementExpression_in_incrementDecrementExpression20024);
                    postfixIncrementDecrementExpression448=postfixIncrementDecrementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = postfixIncrementDecrementExpression448; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "incrementDecrementExpression"



    // $ANTLR start "prefixOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3030:1: prefixOperator returns [PrefixOperatorExpression operator] : ( DECREMENT_OP | INCREMENT_OP );
    public PrefixOperatorExpression prefixOperator() throws RecognitionException {
        PrefixOperatorExpression operator = null;


        Token DECREMENT_OP449=null;
        Token INCREMENT_OP450=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3031:5: ( DECREMENT_OP | INCREMENT_OP )
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( (LA264_0==DECREMENT_OP) ) {
                alt264=1;
            }
            else if ( (LA264_0==INCREMENT_OP) ) {
                alt264=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 264, 0, input);

                throw nvae;

            }
            switch (alt264) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3031:7: DECREMENT_OP
                    {
                    DECREMENT_OP449=(Token)match(input,DECREMENT_OP,FOLLOW_DECREMENT_OP_in_prefixOperator20053); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DecrementOp(DECREMENT_OP449); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3033:7: INCREMENT_OP
                    {
                    INCREMENT_OP450=(Token)match(input,INCREMENT_OP,FOLLOW_INCREMENT_OP_in_prefixOperator20070); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IncrementOp(INCREMENT_OP450); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "prefixOperator"



    // $ANTLR start "postfixIncrementDecrementExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3037:1: postfixIncrementDecrementExpression returns [Term term] : primary ( postfixOperator )* ;
    public Term postfixIncrementDecrementExpression() throws RecognitionException {
        Term term = null;


        Primary primary451 =null;

        PostfixOperatorExpression postfixOperator452 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3038:5: ( primary ( postfixOperator )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3038:7: primary ( postfixOperator )*
            {
            pushFollow(FOLLOW_primary_in_postfixIncrementDecrementExpression20100);
            primary451=primary();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = primary451; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3040:7: ( postfixOperator )*
            loop265:
            do {
                int alt265=2;
                int LA265_0 = input.LA(1);

                if ( (LA265_0==DECREMENT_OP||LA265_0==INCREMENT_OP) ) {
                    alt265=1;
                }


                switch (alt265) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3041:9: postfixOperator
            	    {
            	    pushFollow(FOLLOW_postfixOperator_in_postfixIncrementDecrementExpression20128);
            	    postfixOperator452=postfixOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { postfixOperator452.setTerm(term);
            	              term = postfixOperator452; }

            	    }
            	    break;

            	default :
            	    break loop265;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "postfixIncrementDecrementExpression"



    // $ANTLR start "postfixOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3047:1: postfixOperator returns [PostfixOperatorExpression operator] : ( DECREMENT_OP | INCREMENT_OP );
    public PostfixOperatorExpression postfixOperator() throws RecognitionException {
        PostfixOperatorExpression operator = null;


        Token DECREMENT_OP453=null;
        Token INCREMENT_OP454=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3048:5: ( DECREMENT_OP | INCREMENT_OP )
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( (LA266_0==DECREMENT_OP) ) {
                alt266=1;
            }
            else if ( (LA266_0==INCREMENT_OP) ) {
                alt266=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 266, 0, input);

                throw nvae;

            }
            switch (alt266) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3048:7: DECREMENT_OP
                    {
                    DECREMENT_OP453=(Token)match(input,DECREMENT_OP,FOLLOW_DECREMENT_OP_in_postfixOperator20168); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PostfixDecrementOp(DECREMENT_OP453); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3050:7: INCREMENT_OP
                    {
                    INCREMENT_OP454=(Token)match(input,INCREMENT_OP,FOLLOW_INCREMENT_OP_in_postfixOperator20185); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PostfixIncrementOp(INCREMENT_OP454); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "postfixOperator"



    // $ANTLR start "selfReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3054:1: selfReference returns [Atom atom] : ( THIS | SUPER | OUTER | PACKAGE );
    public Atom selfReference() throws RecognitionException {
        Atom atom = null;


        Token THIS455=null;
        Token SUPER456=null;
        Token OUTER457=null;
        Token PACKAGE458=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3055:5: ( THIS | SUPER | OUTER | PACKAGE )
            int alt267=4;
            switch ( input.LA(1) ) {
            case THIS:
                {
                alt267=1;
                }
                break;
            case SUPER:
                {
                alt267=2;
                }
                break;
            case OUTER:
                {
                alt267=3;
                }
                break;
            case PACKAGE:
                {
                alt267=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return atom;}
                NoViableAltException nvae =
                    new NoViableAltException("", 267, 0, input);

                throw nvae;

            }

            switch (alt267) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3055:7: THIS
                    {
                    THIS455=(Token)match(input,THIS,FOLLOW_THIS_in_selfReference20215); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new This(THIS455); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3057:7: SUPER
                    {
                    SUPER456=(Token)match(input,SUPER,FOLLOW_SUPER_in_selfReference20231); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Super(SUPER456); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3059:7: OUTER
                    {
                    OUTER457=(Token)match(input,OUTER,FOLLOW_OUTER_in_selfReference20248); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Outer(OUTER457); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3061:7: PACKAGE
                    {
                    PACKAGE458=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_selfReference20264); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Package(PACKAGE458); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return atom;
    }
    // $ANTLR end "selfReference"



    // $ANTLR start "nonstringLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3065:1: nonstringLiteral returns [Literal literal] : ( NATURAL_LITERAL | FLOAT_LITERAL | CHAR_LITERAL );
    public Literal nonstringLiteral() throws RecognitionException {
        Literal literal = null;


        Token NATURAL_LITERAL459=null;
        Token FLOAT_LITERAL460=null;
        Token CHAR_LITERAL461=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3066:5: ( NATURAL_LITERAL | FLOAT_LITERAL | CHAR_LITERAL )
            int alt268=3;
            switch ( input.LA(1) ) {
            case NATURAL_LITERAL:
                {
                alt268=1;
                }
                break;
            case FLOAT_LITERAL:
                {
                alt268=2;
                }
                break;
            case CHAR_LITERAL:
                {
                alt268=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return literal;}
                NoViableAltException nvae =
                    new NoViableAltException("", 268, 0, input);

                throw nvae;

            }

            switch (alt268) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3066:7: NATURAL_LITERAL
                    {
                    NATURAL_LITERAL459=(Token)match(input,NATURAL_LITERAL,FOLLOW_NATURAL_LITERAL_in_nonstringLiteral20297); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new NaturalLiteral(NATURAL_LITERAL459); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3068:7: FLOAT_LITERAL
                    {
                    FLOAT_LITERAL460=(Token)match(input,FLOAT_LITERAL,FOLLOW_FLOAT_LITERAL_in_nonstringLiteral20314); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new FloatLiteral(FLOAT_LITERAL460); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3070:7: CHAR_LITERAL
                    {
                    CHAR_LITERAL461=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_nonstringLiteral20331); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new CharLiteral(CHAR_LITERAL461); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "nonstringLiteral"



    // $ANTLR start "stringLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3074:1: stringLiteral returns [StringLiteral stringLiteral] : ( STRING_LITERAL | VERBATIM_STRING );
    public StringLiteral stringLiteral() throws RecognitionException {
        StringLiteral stringLiteral = null;


        Token STRING_LITERAL462=null;
        Token VERBATIM_STRING463=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3075:5: ( STRING_LITERAL | VERBATIM_STRING )
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==STRING_LITERAL) ) {
                alt269=1;
            }
            else if ( (LA269_0==VERBATIM_STRING) ) {
                alt269=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return stringLiteral;}
                NoViableAltException nvae =
                    new NoViableAltException("", 269, 0, input);

                throw nvae;

            }
            switch (alt269) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3075:7: STRING_LITERAL
                    {
                    STRING_LITERAL462=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_stringLiteral20361); if (state.failed) return stringLiteral;

                    if ( state.backtracking==0 ) { stringLiteral = new StringLiteral(STRING_LITERAL462); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3077:7: VERBATIM_STRING
                    {
                    VERBATIM_STRING463=(Token)match(input,VERBATIM_STRING,FOLLOW_VERBATIM_STRING_in_stringLiteral20378); if (state.failed) return stringLiteral;

                    if ( state.backtracking==0 ) { stringLiteral = new StringLiteral(VERBATIM_STRING463); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return stringLiteral;
    }
    // $ANTLR end "stringLiteral"



    // $ANTLR start "stringExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3081:1: stringExpression returns [Atom atom] : (sl1= stringLiteral | STRING_START e1= functionOrExpression ( STRING_MID e2= functionOrExpression )* STRING_END );
    public Atom stringExpression() throws RecognitionException {
        Atom atom = null;


        Token STRING_START464=null;
        Token STRING_MID465=null;
        Token STRING_END466=null;
        StringLiteral sl1 =null;

        Expression e1 =null;

        Expression e2 =null;


         StringTemplate st=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3083:5: (sl1= stringLiteral | STRING_START e1= functionOrExpression ( STRING_MID e2= functionOrExpression )* STRING_END )
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==STRING_LITERAL||LA271_0==VERBATIM_STRING) ) {
                alt271=1;
            }
            else if ( (LA271_0==STRING_START) ) {
                alt271=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return atom;}
                NoViableAltException nvae =
                    new NoViableAltException("", 271, 0, input);

                throw nvae;

            }
            switch (alt271) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3083:7: sl1= stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_stringExpression20418);
                    sl1=stringLiteral();

                    state._fsp--;
                    if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom =sl1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3085:7: STRING_START e1= functionOrExpression ( STRING_MID e2= functionOrExpression )* STRING_END
                    {
                    STRING_START464=(Token)match(input,STRING_START,FOLLOW_STRING_START_in_stringExpression20434); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { st = new StringTemplate(null);
                            st.addStringLiteral(new StringLiteral(STRING_START464));
                            atom =st; }

                    pushFollow(FOLLOW_functionOrExpression_in_stringExpression20452);
                    e1=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return atom;

                    if ( state.backtracking==0 ) { if (e1!=null) 
                                st.addExpression(e1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3092:7: ( STRING_MID e2= functionOrExpression )*
                    loop270:
                    do {
                        int alt270=2;
                        int LA270_0 = input.LA(1);

                        if ( (LA270_0==STRING_MID) ) {
                            alt270=1;
                        }


                        switch (alt270) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3093:9: STRING_MID e2= functionOrExpression
                    	    {
                    	    STRING_MID465=(Token)match(input,STRING_MID,FOLLOW_STRING_MID_in_stringExpression20478); if (state.failed) return atom;

                    	    if ( state.backtracking==0 ) { st.addStringLiteral(new StringLiteral(STRING_MID465)); }

                    	    pushFollow(FOLLOW_functionOrExpression_in_stringExpression20500);
                    	    e2=functionOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return atom;

                    	    if ( state.backtracking==0 ) { if (e2!=null) 
                    	                  st.addExpression(e2); }

                    	    }
                    	    break;

                    	default :
                    	    break loop270;
                        }
                    } while (true);


                    STRING_END466=(Token)match(input,STRING_END,FOLLOW_STRING_END_in_stringExpression20527); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { st.addStringLiteral(new StringLiteral(STRING_END466)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return atom;
    }
    // $ANTLR end "stringExpression"



    // $ANTLR start "typeArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3103:1: typeArguments returns [TypeArgumentList typeArgumentList] : SMALLER_OP ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )? LARGER_OP ;
    public TypeArgumentList typeArguments() throws RecognitionException {
        TypeArgumentList typeArgumentList = null;


        Token c=null;
        Token SMALLER_OP467=null;
        Token LARGER_OP468=null;
        TypeVariance v1 =null;

        StaticType ta1 =null;

        StaticType ta0 =null;

        TypeVariance v2 =null;

        StaticType ta2 =null;

        StaticType ta3 =null;


         TypeVariance v=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3105:5: ( SMALLER_OP ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )? LARGER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3105:7: SMALLER_OP ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )? LARGER_OP
            {
            SMALLER_OP467=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArguments20565); if (state.failed) return typeArgumentList;

            if ( state.backtracking==0 ) { typeArgumentList = new TypeArgumentList(SMALLER_OP467); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3107:7: ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )?
            int alt278=2;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==IN_OP||(LA278_0 >= LBRACE && LA278_0 <= LBRACKET)||LA278_0==OUT||LA278_0==PACKAGE||LA278_0==SMALLER_OP||LA278_0==UIDENTIFIER) ) {
                alt278=1;
            }
            switch (alt278) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3108:9: (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )*
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3108:9: (v1= variance (ta1= type )? |ta0= type )
                    int alt273=2;
                    int LA273_0 = input.LA(1);

                    if ( (LA273_0==IN_OP||LA273_0==OUT) ) {
                        alt273=1;
                    }
                    else if ( ((LA273_0 >= LBRACE && LA273_0 <= LBRACKET)||LA273_0==PACKAGE||LA273_0==SMALLER_OP||LA273_0==UIDENTIFIER) ) {
                        alt273=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 273, 0, input);

                        throw nvae;

                    }
                    switch (alt273) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3109:11: v1= variance (ta1= type )?
                            {
                            pushFollow(FOLLOW_variance_in_typeArguments20605);
                            v1=variance();

                            state._fsp--;
                            if (state.failed) return typeArgumentList;

                            if ( state.backtracking==0 ) { v = v1; }

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3111:11: (ta1= type )?
                            int alt272=2;
                            int LA272_0 = input.LA(1);

                            if ( ((LA272_0 >= LBRACE && LA272_0 <= LBRACKET)||LA272_0==PACKAGE||LA272_0==SMALLER_OP||LA272_0==UIDENTIFIER) ) {
                                alt272=1;
                            }
                            switch (alt272) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3112:13: ta1= type
                                    {
                                    pushFollow(FOLLOW_type_in_typeArguments20645);
                                    ta1=type();

                                    state._fsp--;
                                    if (state.failed) return typeArgumentList;

                                    if ( state.backtracking==0 ) { if (ta1!=null)
                                                      typeArgumentList.addType(ta1);
                                                  if (v!=null && ta1!=null) 
                                                      ta1.setTypeVariance(v); }

                                    }
                                    break;

                            }


                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3119:11: ta0= type
                            {
                            pushFollow(FOLLOW_type_in_typeArguments20696);
                            ta0=type();

                            state._fsp--;
                            if (state.failed) return typeArgumentList;

                            if ( state.backtracking==0 ) { if (ta0!=null)
                                            typeArgumentList.addType(ta0); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3123:9: (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )*
                    loop277:
                    do {
                        int alt277=2;
                        int LA277_0 = input.LA(1);

                        if ( (LA277_0==COMMA) ) {
                            alt277=1;
                        }


                        switch (alt277) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3124:11: c= COMMA (v2= variance (ta2= type |) | (ta3= type |) )
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_typeArguments20742); if (state.failed) return typeArgumentList;

                    	    if ( state.backtracking==0 ) { typeArgumentList.setEndToken(c); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3126:11: (v2= variance (ta2= type |) | (ta3= type |) )
                    	    int alt276=2;
                    	    int LA276_0 = input.LA(1);

                    	    if ( (LA276_0==IN_OP||LA276_0==OUT) ) {
                    	        alt276=1;
                    	    }
                    	    else if ( (LA276_0==COMMA||LA276_0==LARGER_OP||(LA276_0 >= LBRACE && LA276_0 <= LBRACKET)||LA276_0==PACKAGE||LA276_0==SMALLER_OP||LA276_0==UIDENTIFIER) ) {
                    	        alt276=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 276, 0, input);

                    	        throw nvae;

                    	    }
                    	    switch (alt276) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3127:13: v2= variance (ta2= type |)
                    	            {
                    	            pushFollow(FOLLOW_variance_in_typeArguments20782);
                    	            v2=variance();

                    	            state._fsp--;
                    	            if (state.failed) return typeArgumentList;

                    	            if ( state.backtracking==0 ) { v = v2; }

                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3129:13: (ta2= type |)
                    	            int alt274=2;
                    	            int LA274_0 = input.LA(1);

                    	            if ( ((LA274_0 >= LBRACE && LA274_0 <= LBRACKET)||LA274_0==PACKAGE||LA274_0==SMALLER_OP||LA274_0==UIDENTIFIER) ) {
                    	                alt274=1;
                    	            }
                    	            else if ( (LA274_0==COMMA||LA274_0==LARGER_OP) ) {
                    	                alt274=2;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 274, 0, input);

                    	                throw nvae;

                    	            }
                    	            switch (alt274) {
                    	                case 1 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3130:15: ta2= type
                    	                    {
                    	                    pushFollow(FOLLOW_type_in_typeArguments20828);
                    	                    ta2=type();

                    	                    state._fsp--;
                    	                    if (state.failed) return typeArgumentList;

                    	                    if ( state.backtracking==0 ) { if (ta2!=null) {
                    	                                        typeArgumentList.addType(ta2);
                    	                                        if (v!=null && ta2!=null) 
                    	                                            ta2.setTypeVariance(v);
                    	                                        typeArgumentList.setEndToken(null); } }

                    	                    }
                    	                    break;
                    	                case 2 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3136:15: 
                    	                    {
                    	                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                                          new MismatchedTokenException(UIDENTIFIER, input)); }

                    	                    }
                    	                    break;

                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3140:13: (ta3= type |)
                    	            {
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3140:13: (ta3= type |)
                    	            int alt275=2;
                    	            int LA275_0 = input.LA(1);

                    	            if ( ((LA275_0 >= LBRACE && LA275_0 <= LBRACKET)||LA275_0==PACKAGE||LA275_0==SMALLER_OP||LA275_0==UIDENTIFIER) ) {
                    	                alt275=1;
                    	            }
                    	            else if ( (LA275_0==COMMA||LA275_0==LARGER_OP) ) {
                    	                alt275=2;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 275, 0, input);

                    	                throw nvae;

                    	            }
                    	            switch (alt275) {
                    	                case 1 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3141:15: ta3= type
                    	                    {
                    	                    pushFollow(FOLLOW_type_in_typeArguments20919);
                    	                    ta3=type();

                    	                    state._fsp--;
                    	                    if (state.failed) return typeArgumentList;

                    	                    if ( state.backtracking==0 ) { if (ta3!=null) {
                    	                                        typeArgumentList.addType(ta3);
                    	                                        typeArgumentList.setEndToken(null); } }

                    	                    }
                    	                    break;
                    	                case 2 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3145:15: 
                    	                    {
                    	                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                                      new MismatchedTokenException(UIDENTIFIER, input)); }

                    	                    }
                    	                    break;

                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop277;
                        }
                    } while (true);


                    }
                    break;

            }


            LARGER_OP468=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeArguments21005); if (state.failed) return typeArgumentList;

            if ( state.backtracking==0 ) { typeArgumentList.setEndToken(LARGER_OP468); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeArgumentList;
    }
    // $ANTLR end "typeArguments"



    // $ANTLR start "variadicType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3155:1: variadicType returns [Type type] : ( ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )? |t= type );
    public Type variadicType() throws RecognitionException {
        Type type = null;


        Token PRODUCT_OP469=null;
        Token SUM_OP470=null;
        StaticType at =null;

        StaticType t =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3156:5: ( ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )? |t= type )
            int alt280=2;
            switch ( input.LA(1) ) {
            case UIDENTIFIER:
                {
                int LA280_1 = input.LA(2);

                if ( (synpred33_Ceylon()) ) {
                    alt280=1;
                }
                else if ( (true) ) {
                    alt280=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 280, 1, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA280_2 = input.LA(2);

                if ( (synpred33_Ceylon()) ) {
                    alt280=1;
                }
                else if ( (true) ) {
                    alt280=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 280, 2, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA280_3 = input.LA(2);

                if ( (synpred33_Ceylon()) ) {
                    alt280=1;
                }
                else if ( (true) ) {
                    alt280=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 280, 3, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA280_4 = input.LA(2);

                if ( (synpred33_Ceylon()) ) {
                    alt280=1;
                }
                else if ( (true) ) {
                    alt280=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 280, 4, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA280_5 = input.LA(2);

                if ( (synpred33_Ceylon()) ) {
                    alt280=1;
                }
                else if ( (true) ) {
                    alt280=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 280, 5, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 280, 0, input);

                throw nvae;

            }

            switch (alt280) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3156:7: ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )?
                    {
                    pushFollow(FOLLOW_unionType_in_variadicType21053);
                    at=unionType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = at; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3159:7: ( PRODUCT_OP | SUM_OP )?
                    int alt279=3;
                    int LA279_0 = input.LA(1);

                    if ( (LA279_0==PRODUCT_OP) ) {
                        alt279=1;
                    }
                    else if ( (LA279_0==SUM_OP) ) {
                        alt279=2;
                    }
                    switch (alt279) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3160:9: PRODUCT_OP
                            {
                            PRODUCT_OP469=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_variadicType21079); if (state.failed) return type;

                            if ( state.backtracking==0 ) { SequencedType st = new SequencedType(null);
                                      st.setType(at); 
                                      st.setEndToken(PRODUCT_OP469);
                                      type = st; }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3166:9: SUM_OP
                            {
                            SUM_OP470=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_variadicType21107); if (state.failed) return type;

                            if ( state.backtracking==0 ) { SequencedType st = new SequencedType(null);
                                      st.setType(at); 
                                      st.setEndToken(SUM_OP470);
                                      st.setAtLeastOne(true);
                                      type = st; }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3173:7: t= type
                    {
                    pushFollow(FOLLOW_type_in_variadicType21136);
                    t=type();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = t; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "variadicType"



    // $ANTLR start "defaultedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3177:1: defaultedType returns [Type type] : ( ( type ( SPECIFY ) )=>t= type ( SPECIFY )? | variadicType );
    public Type defaultedType() throws RecognitionException {
        Type type = null;


        Token SPECIFY471=null;
        StaticType t =null;

        Type variadicType472 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3178:5: ( ( type ( SPECIFY ) )=>t= type ( SPECIFY )? | variadicType )
            int alt282=2;
            switch ( input.LA(1) ) {
            case SMALLER_OP:
                {
                int LA282_1 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt282=1;
                }
                else if ( (true) ) {
                    alt282=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 282, 1, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA282_2 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt282=1;
                }
                else if ( (true) ) {
                    alt282=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 282, 2, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA282_3 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt282=1;
                }
                else if ( (true) ) {
                    alt282=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 282, 3, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA282_4 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt282=1;
                }
                else if ( (true) ) {
                    alt282=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 282, 4, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA282_5 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt282=1;
                }
                else if ( (true) ) {
                    alt282=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 282, 5, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 282, 0, input);

                throw nvae;

            }

            switch (alt282) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3178:7: ( type ( SPECIFY ) )=>t= type ( SPECIFY )?
                    {
                    pushFollow(FOLLOW_type_in_defaultedType21182);
                    t=type();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = t; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3181:7: ( SPECIFY )?
                    int alt281=2;
                    int LA281_0 = input.LA(1);

                    if ( (LA281_0==SPECIFY) ) {
                        alt281=1;
                    }
                    switch (alt281) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3182:9: SPECIFY
                            {
                            SPECIFY471=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_defaultedType21208); if (state.failed) return type;

                            if ( state.backtracking==0 ) { DefaultedType st = new DefaultedType(null);
                                      st.setType(t); 
                                      st.setEndToken(SPECIFY471);
                                      type = st; }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3188:7: variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_defaultedType21235);
                    variadicType472=variadicType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =variadicType472; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "defaultedType"



    // $ANTLR start "spreadType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3192:1: spreadType returns [Type type] : PRODUCT_OP (sp= unionType )? ;
    public Type spreadType() throws RecognitionException {
        Type type = null;


        Token PRODUCT_OP473=null;
        StaticType sp =null;


         SpreadType spt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3194:5: ( PRODUCT_OP (sp= unionType )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3194:7: PRODUCT_OP (sp= unionType )?
            {
            PRODUCT_OP473=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_spreadType21273); if (state.failed) return type;

            if ( state.backtracking==0 ) { spt = new SpreadType(PRODUCT_OP473);
                    type =spt; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3197:7: (sp= unionType )?
            int alt283=2;
            int LA283_0 = input.LA(1);

            if ( ((LA283_0 >= LBRACE && LA283_0 <= LBRACKET)||LA283_0==PACKAGE||LA283_0==SMALLER_OP||LA283_0==UIDENTIFIER) ) {
                alt283=1;
            }
            switch (alt283) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3198:9: sp= unionType
                    {
                    pushFollow(FOLLOW_unionType_in_spreadType21301);
                    sp=unionType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { spt.setType(sp); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "spreadType"



    // $ANTLR start "tupleType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3203:1: tupleType returns [TupleType type] : LBRACKET (spt= spreadType |t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET ;
    public TupleType tupleType() throws RecognitionException {
        TupleType type = null;


        Token c=null;
        Token LBRACKET474=null;
        Token RBRACKET475=null;
        Type spt =null;

        Type t1 =null;

        Type t2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3204:5: ( LBRACKET (spt= spreadType |t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3204:7: LBRACKET (spt= spreadType |t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET
            {
            LBRACKET474=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_tupleType21341); if (state.failed) return type;

            if ( state.backtracking==0 ) { type = new TupleType(LBRACKET474); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3206:7: (spt= spreadType |t1= defaultedType (c= COMMA t2= defaultedType )* )?
            int alt285=3;
            int LA285_0 = input.LA(1);

            if ( (LA285_0==PRODUCT_OP) ) {
                alt285=1;
            }
            else if ( ((LA285_0 >= LBRACE && LA285_0 <= LBRACKET)||LA285_0==PACKAGE||LA285_0==SMALLER_OP||LA285_0==UIDENTIFIER) ) {
                alt285=2;
            }
            switch (alt285) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3207:9: spt= spreadType
                    {
                    pushFollow(FOLLOW_spreadType_in_tupleType21369);
                    spt=spreadType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.addElementType(spt); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3210:9: t1= defaultedType (c= COMMA t2= defaultedType )*
                    {
                    pushFollow(FOLLOW_defaultedType_in_tupleType21399);
                    t1=defaultedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.addElementType(t1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3212:9: (c= COMMA t2= defaultedType )*
                    loop284:
                    do {
                        int alt284=2;
                        int LA284_0 = input.LA(1);

                        if ( (LA284_0==COMMA) ) {
                            alt284=1;
                        }


                        switch (alt284) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3213:11: c= COMMA t2= defaultedType
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_tupleType21433); if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { type.setEndToken(c); }

                    	    pushFollow(FOLLOW_defaultedType_in_tupleType21459);
                    	    t2=defaultedType();

                    	    state._fsp--;
                    	    if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { type.addElementType(t2);
                    	                type.setEndToken(null); }

                    	    }
                    	    break;

                    	default :
                    	    break loop284;
                        }
                    } while (true);


                    }
                    break;

            }


            RBRACKET475=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_tupleType21499); if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setEndToken(RBRACKET475); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "tupleType"



    // $ANTLR start "groupedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3224:1: groupedType returns [GroupedType type] : SMALLER_OP t= type LARGER_OP ;
    public GroupedType groupedType() throws RecognitionException {
        GroupedType type = null;


        Token SMALLER_OP476=null;
        Token LARGER_OP477=null;
        StaticType t =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3225:5: ( SMALLER_OP t= type LARGER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3225:7: SMALLER_OP t= type LARGER_OP
            {
            SMALLER_OP476=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_groupedType21528); if (state.failed) return type;

            if ( state.backtracking==0 ) { type = new GroupedType(SMALLER_OP476); }

            pushFollow(FOLLOW_type_in_groupedType21546);
            t=type();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setType(t); }

            LARGER_OP477=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_groupedType21562); if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setEndToken(LARGER_OP477); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "groupedType"



    // $ANTLR start "iterableType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3233:1: iterableType returns [IterableType type] : LBRACE (t= variadicType )? RBRACE ;
    public IterableType iterableType() throws RecognitionException {
        IterableType type = null;


        Token LBRACE478=null;
        Token RBRACE479=null;
        Type t =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3234:4: ( LBRACE (t= variadicType )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3234:6: LBRACE (t= variadicType )? RBRACE
            {
            LBRACE478=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_iterableType21590); if (state.failed) return type;

            if ( state.backtracking==0 ) { type = new IterableType(LBRACE478); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3236:6: (t= variadicType )?
            int alt286=2;
            int LA286_0 = input.LA(1);

            if ( ((LA286_0 >= LBRACE && LA286_0 <= LBRACKET)||LA286_0==PACKAGE||LA286_0==SMALLER_OP||LA286_0==UIDENTIFIER) ) {
                alt286=1;
            }
            switch (alt286) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3237:8: t= variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_iterableType21615);
                    t=variadicType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.setElementType(t); }

                    }
                    break;

            }


            RBRACE479=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_iterableType21639); if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setEndToken(RBRACE479); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "iterableType"



    // $ANTLR start "type"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3244:1: type returns [StaticType type] : ( ( typeParameters ( TYPE_CONSTRAINT | COMPUTE ) )=> typeParameters ( anonymousTypeConstraints )? COMPUTE entryType | entryType );
    public StaticType type() throws RecognitionException {
        StaticType type = null;


        TypeParameterList typeParameters480 =null;

        TypeConstraintList anonymousTypeConstraints481 =null;

        StaticType entryType482 =null;

        StaticType entryType483 =null;


         TypeConstructor ct=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3246:5: ( ( typeParameters ( TYPE_CONSTRAINT | COMPUTE ) )=> typeParameters ( anonymousTypeConstraints )? COMPUTE entryType | entryType )
            int alt288=2;
            int LA288_0 = input.LA(1);

            if ( (LA288_0==SMALLER_OP) ) {
                int LA288_1 = input.LA(2);

                if ( (synpred35_Ceylon()) ) {
                    alt288=1;
                }
                else if ( (true) ) {
                    alt288=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 288, 1, input);

                    throw nvae;

                }
            }
            else if ( ((LA288_0 >= LBRACE && LA288_0 <= LBRACKET)||LA288_0==PACKAGE||LA288_0==UIDENTIFIER) ) {
                alt288=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 288, 0, input);

                throw nvae;

            }
            switch (alt288) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3246:7: ( typeParameters ( TYPE_CONSTRAINT | COMPUTE ) )=> typeParameters ( anonymousTypeConstraints )? COMPUTE entryType
                    {
                    pushFollow(FOLLOW_typeParameters_in_type21693);
                    typeParameters480=typeParameters();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { ct = new TypeConstructor(null);
                            ct.setTypeParameterList(typeParameters480);
                            type = ct; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3251:7: ( anonymousTypeConstraints )?
                    int alt287=2;
                    int LA287_0 = input.LA(1);

                    if ( (LA287_0==TYPE_CONSTRAINT) ) {
                        alt287=1;
                    }
                    switch (alt287) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3252:9: anonymousTypeConstraints
                            {
                            pushFollow(FOLLOW_anonymousTypeConstraints_in_type21720);
                            anonymousTypeConstraints481=anonymousTypeConstraints();

                            state._fsp--;
                            if (state.failed) return type;

                            if ( state.backtracking==0 ) { ct.setTypeConstraintList(anonymousTypeConstraints481); }

                            }
                            break;

                    }


                    match(input,COMPUTE,FOLLOW_COMPUTE_in_type21747); if (state.failed) return type;

                    pushFollow(FOLLOW_entryType_in_type21756);
                    entryType482=entryType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { ct.setType(entryType482); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3258:7: entryType
                    {
                    pushFollow(FOLLOW_entryType_in_type21772);
                    entryType483=entryType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =entryType483; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "type"



    // $ANTLR start "entryType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3262:1: entryType returns [StaticType type] : t1= unionType ( ENTRY_OP (t2= unionType ) )? ;
    public StaticType entryType() throws RecognitionException {
        StaticType type = null;


        Token ENTRY_OP484=null;
        StaticType t1 =null;

        StaticType t2 =null;


         EntryType bt=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3264:5: (t1= unionType ( ENTRY_OP (t2= unionType ) )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3264:7: t1= unionType ( ENTRY_OP (t2= unionType ) )?
            {
            pushFollow(FOLLOW_unionType_in_entryType21812);
            t1=unionType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type =t1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3266:7: ( ENTRY_OP (t2= unionType ) )?
            int alt289=2;
            int LA289_0 = input.LA(1);

            if ( (LA289_0==ENTRY_OP) ) {
                alt289=1;
            }
            switch (alt289) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3267:9: ENTRY_OP (t2= unionType )
                    {
                    ENTRY_OP484=(Token)match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_entryType21838); if (state.failed) return type;

                    if ( state.backtracking==0 ) { bt=new EntryType(null);
                              bt.setKeyType(type);
                              bt.setEndToken(ENTRY_OP484); 
                              type =bt; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3272:9: (t2= unionType )
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3273:11: t2= unionType
                    {
                    pushFollow(FOLLOW_unionType_in_entryType21872);
                    t2=unionType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { bt.setValueType(t2);
                                bt.setEndToken(null); }

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "entryType"



    // $ANTLR start "unionType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3282:1: unionType returns [StaticType type] : it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )? ;
    public StaticType unionType() throws RecognitionException {
        StaticType type = null;


        Token u=null;
        StaticType it1 =null;

        StaticType it2 =null;


         UnionType ut=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3284:5: (it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3284:7: it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )?
            {
            pushFollow(FOLLOW_intersectionType_in_unionType21937);
            it1=intersectionType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type = it1;
                    ut = new UnionType(null);
                    ut.addStaticType(type); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3288:7: ( (u= UNION_OP (it2= intersectionType ) )+ )?
            int alt291=2;
            int LA291_0 = input.LA(1);

            if ( (LA291_0==UNION_OP) ) {
                alt291=1;
            }
            switch (alt291) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3289:9: (u= UNION_OP (it2= intersectionType ) )+
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3289:9: (u= UNION_OP (it2= intersectionType ) )+
                    int cnt290=0;
                    loop290:
                    do {
                        int alt290=2;
                        int LA290_0 = input.LA(1);

                        if ( (LA290_0==UNION_OP) ) {
                            alt290=1;
                        }


                        switch (alt290) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3290:11: u= UNION_OP (it2= intersectionType )
                    	    {
                    	    u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_unionType21978); if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { ut.setEndToken(u); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3292:11: (it2= intersectionType )
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3293:13: it2= intersectionType
                    	    {
                    	    pushFollow(FOLLOW_intersectionType_in_unionType22018);
                    	    it2=intersectionType();

                    	    state._fsp--;
                    	    if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { if (it2!=null) {
                    	                      ut.addStaticType(it2);
                    	                      ut.setEndToken(null); 
                    	                  } }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt290 >= 1 ) break loop290;
                    	    if (state.backtracking>0) {state.failed=true; return type;}
                                EarlyExitException eee =
                                    new EarlyExitException(290, input);
                                throw eee;
                        }
                        cnt290++;
                    } while (true);


                    if ( state.backtracking==0 ) { type = ut; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "unionType"



    // $ANTLR start "intersectionType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3306:1: intersectionType returns [StaticType type] : at1= primaryType ( (i= INTERSECTION_OP (at2= primaryType ) )+ )? ;
    public StaticType intersectionType() throws RecognitionException {
        StaticType type = null;


        Token i=null;
        StaticType at1 =null;

        StaticType at2 =null;


         IntersectionType it=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3308:5: (at1= primaryType ( (i= INTERSECTION_OP (at2= primaryType ) )+ )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3308:7: at1= primaryType ( (i= INTERSECTION_OP (at2= primaryType ) )+ )?
            {
            pushFollow(FOLLOW_primaryType_in_intersectionType22108);
            at1=primaryType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type = at1;
                    it = new IntersectionType(null);
                    it.addStaticType(type); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3312:7: ( (i= INTERSECTION_OP (at2= primaryType ) )+ )?
            int alt293=2;
            int LA293_0 = input.LA(1);

            if ( (LA293_0==INTERSECTION_OP) ) {
                alt293=1;
            }
            switch (alt293) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3313:9: (i= INTERSECTION_OP (at2= primaryType ) )+
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3313:9: (i= INTERSECTION_OP (at2= primaryType ) )+
                    int cnt292=0;
                    loop292:
                    do {
                        int alt292=2;
                        int LA292_0 = input.LA(1);

                        if ( (LA292_0==INTERSECTION_OP) ) {
                            alt292=1;
                        }


                        switch (alt292) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3314:11: i= INTERSECTION_OP (at2= primaryType )
                    	    {
                    	    i=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_intersectionType22149); if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { it.setEndToken(i); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3316:11: (at2= primaryType )
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3317:13: at2= primaryType
                    	    {
                    	    pushFollow(FOLLOW_primaryType_in_intersectionType22189);
                    	    at2=primaryType();

                    	    state._fsp--;
                    	    if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { if (at2!=null) {
                    	                      it.addStaticType(at2);
                    	                      it.setEndToken(null); 
                    	                  } }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt292 >= 1 ) break loop292;
                    	    if (state.backtracking>0) {state.failed=true; return type;}
                                EarlyExitException eee =
                                    new EarlyExitException(292, input);
                                throw eee;
                        }
                        cnt292++;
                    } while (true);


                    if ( state.backtracking==0 ) { type = it; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "intersectionType"



    // $ANTLR start "atomicType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3330:1: atomicType returns [StaticType type] : ( qualifiedType | tupleType | iterableType );
    public StaticType atomicType() throws RecognitionException {
        StaticType type = null;


        StaticType qualifiedType485 =null;

        TupleType tupleType486 =null;

        IterableType iterableType487 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3331:5: ( qualifiedType | tupleType | iterableType )
            int alt294=3;
            switch ( input.LA(1) ) {
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt294=1;
                }
                break;
            case LBRACKET:
                {
                alt294=2;
                }
                break;
            case LBRACE:
                {
                alt294=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 294, 0, input);

                throw nvae;

            }

            switch (alt294) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3331:7: qualifiedType
                    {
                    pushFollow(FOLLOW_qualifiedType_in_atomicType22268);
                    qualifiedType485=qualifiedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =qualifiedType485; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3333:7: tupleType
                    {
                    pushFollow(FOLLOW_tupleType_in_atomicType22285);
                    tupleType486=tupleType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =tupleType486; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3335:7: iterableType
                    {
                    pushFollow(FOLLOW_iterableType_in_atomicType22302);
                    iterableType487=iterableType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =iterableType487; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "atomicType"



    // $ANTLR start "primaryType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3339:1: primaryType returns [StaticType type] : atomicType ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )* ;
    public StaticType primaryType() throws RecognitionException {
        StaticType type = null;


        Token OPTIONAL489=null;
        Token LBRACKET490=null;
        Token NATURAL_LITERAL491=null;
        Token RBRACKET492=null;
        Token LPAREN493=null;
        Token COMMA494=null;
        Token RPAREN495=null;
        Type spt =null;

        Type t1 =null;

        Type t2 =null;

        StaticType atomicType488 =null;


         FunctionType bt=null; SequenceType st=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3341:5: ( atomicType ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3341:7: atomicType ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )*
            {
            pushFollow(FOLLOW_atomicType_in_primaryType22340);
            atomicType488=atomicType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type =atomicType488; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3343:7: ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )*
            loop298:
            do {
                int alt298=4;
                switch ( input.LA(1) ) {
                case OPTIONAL:
                    {
                    alt298=1;
                    }
                    break;
                case LBRACKET:
                    {
                    alt298=2;
                    }
                    break;
                case LPAREN:
                    {
                    alt298=3;
                    }
                    break;

                }

                switch (alt298) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3344:9: OPTIONAL
            	    {
            	    OPTIONAL489=(Token)match(input,OPTIONAL,FOLLOW_OPTIONAL_in_primaryType22366); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { OptionalType ot = new OptionalType(null);
            	              ot.setDefiniteType(type);
            	              ot.setEndToken(OPTIONAL489);
            	              type =ot; }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3349:9: LBRACKET ( NATURAL_LITERAL )? RBRACKET
            	    {
            	    LBRACKET490=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_primaryType22387); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { st = new SequenceType(null);
            	              st.setElementType(type);
            	              st.setEndToken(LBRACKET490); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3353:9: ( NATURAL_LITERAL )?
            	    int alt295=2;
            	    int LA295_0 = input.LA(1);

            	    if ( (LA295_0==NATURAL_LITERAL) ) {
            	        alt295=1;
            	    }
            	    switch (alt295) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3354:11: NATURAL_LITERAL
            	            {
            	            NATURAL_LITERAL491=(Token)match(input,NATURAL_LITERAL,FOLLOW_NATURAL_LITERAL_in_primaryType22419); if (state.failed) return type;

            	            if ( state.backtracking==0 ) { st.setLength(new NaturalLiteral(NATURAL_LITERAL491)); 
            	                        st.setEndToken(NATURAL_LITERAL491); }

            	            }
            	            break;

            	    }


            	    RBRACKET492=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_primaryType22453); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { st.setEndToken(RBRACKET492);
            	              type =st; }

            	    }
            	    break;
            	case 3 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3361:9: LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN
            	    {
            	    LPAREN493=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_primaryType22474); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { bt = new FunctionType(null);
            	              bt.setEndToken(LPAREN493);
            	              bt.setReturnType(type);
            	              type =bt; }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3366:11: (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )?
            	    int alt297=3;
            	    int LA297_0 = input.LA(1);

            	    if ( (LA297_0==PRODUCT_OP) ) {
            	        alt297=1;
            	    }
            	    else if ( ((LA297_0 >= LBRACE && LA297_0 <= LBRACKET)||LA297_0==PACKAGE||LA297_0==SMALLER_OP||LA297_0==UIDENTIFIER) ) {
            	        alt297=2;
            	    }
            	    switch (alt297) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3367:13: spt= spreadType
            	            {
            	            pushFollow(FOLLOW_spreadType_in_primaryType22512);
            	            spt=spreadType();

            	            state._fsp--;
            	            if (state.failed) return type;

            	            if ( state.backtracking==0 ) { bt.addArgumentType(spt); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3370:13: t1= defaultedType ( COMMA t2= defaultedType )*
            	            {
            	            pushFollow(FOLLOW_defaultedType_in_primaryType22554);
            	            t1=defaultedType();

            	            state._fsp--;
            	            if (state.failed) return type;

            	            if ( state.backtracking==0 ) { if (t1!=null)
            	                              bt.addArgumentType(t1); }

            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3373:13: ( COMMA t2= defaultedType )*
            	            loop296:
            	            do {
            	                int alt296=2;
            	                int LA296_0 = input.LA(1);

            	                if ( (LA296_0==COMMA) ) {
            	                    alt296=1;
            	                }


            	                switch (alt296) {
            	            	case 1 :
            	            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3374:15: COMMA t2= defaultedType
            	            	    {
            	            	    COMMA494=(Token)match(input,COMMA,FOLLOW_COMMA_in_primaryType22598); if (state.failed) return type;

            	            	    if ( state.backtracking==0 ) { bt.setEndToken(COMMA494); }

            	            	    pushFollow(FOLLOW_defaultedType_in_primaryType22632);
            	            	    t2=defaultedType();

            	            	    state._fsp--;
            	            	    if (state.failed) return type;

            	            	    if ( state.backtracking==0 ) { if (t2!=null)
            	            	                        bt.addArgumentType(t2); }

            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop296;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }


            	    RPAREN495=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_primaryType22686); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { bt.setEndToken(RPAREN495); }

            	    }
            	    break;

            	default :
            	    break loop298;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "primaryType"



    // $ANTLR start "baseType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3386:1: baseType returns [StaticType type] : (tna1= typeNameWithArguments | groupedType | PACKAGE MEMBER_OP tna2= typeNameWithArguments );
    public StaticType baseType() throws RecognitionException {
        StaticType type = null;


        Token PACKAGE497=null;
        Token MEMBER_OP498=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return tna1 =null;

        PsiCompatibleCeylonParser.typeNameWithArguments_return tna2 =null;

        GroupedType groupedType496 =null;


         BaseType pt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3388:5: (tna1= typeNameWithArguments | groupedType | PACKAGE MEMBER_OP tna2= typeNameWithArguments )
            int alt299=3;
            switch ( input.LA(1) ) {
            case UIDENTIFIER:
                {
                alt299=1;
                }
                break;
            case SMALLER_OP:
                {
                alt299=2;
                }
                break;
            case PACKAGE:
                {
                alt299=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 299, 0, input);

                throw nvae;

            }

            switch (alt299) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3389:7: tna1= typeNameWithArguments
                    {
                    pushFollow(FOLLOW_typeNameWithArguments_in_baseType22744);
                    tna1=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { BaseType bt = new BaseType(null);
                            bt.setIdentifier((tna1!=null?tna1.identifier:null));
                            if ((tna1!=null?tna1.typeArgumentList:null)!=null)
                                bt.setTypeArgumentList((tna1!=null?tna1.typeArgumentList:null));
                            type =bt; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3396:7: groupedType
                    {
                    pushFollow(FOLLOW_groupedType_in_baseType22766);
                    groupedType496=groupedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =groupedType496; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3398:7: PACKAGE MEMBER_OP tna2= typeNameWithArguments
                    {
                    PACKAGE497=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_baseType22782); if (state.failed) return type;

                    if ( state.backtracking==0 ) { pt = new BaseType(PACKAGE497); 
                            pt.setPackageQualified(true);
                            type =pt; }

                    MEMBER_OP498=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_baseType22798); if (state.failed) return type;

                    if ( state.backtracking==0 ) { pt.setEndToken(MEMBER_OP498); }

                    pushFollow(FOLLOW_typeNameWithArguments_in_baseType22816);
                    tna2=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { pt.setEndToken(null);
                            pt.setIdentifier((tna2!=null?tna2.identifier:null));
                            if ((tna2!=null?tna2.typeArgumentList:null)!=null)
                                pt.setTypeArgumentList((tna2!=null?tna2.typeArgumentList:null)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "baseType"



    // $ANTLR start "qualifiedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3411:1: qualifiedType returns [StaticType type] : baseType ( MEMBER_OP it= typeNameWithArguments )* ;
    public StaticType qualifiedType() throws RecognitionException {
        StaticType type = null;


        Token MEMBER_OP500=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return it =null;

        StaticType baseType499 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3412:5: ( baseType ( MEMBER_OP it= typeNameWithArguments )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3412:7: baseType ( MEMBER_OP it= typeNameWithArguments )*
            {
            pushFollow(FOLLOW_baseType_in_qualifiedType22845);
            baseType499=baseType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type =baseType499; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3414:7: ( MEMBER_OP it= typeNameWithArguments )*
            loop300:
            do {
                int alt300=2;
                int LA300_0 = input.LA(1);

                if ( (LA300_0==MEMBER_OP) ) {
                    int LA300_2 = input.LA(2);

                    if ( (LA300_2==UIDENTIFIER) ) {
                        alt300=1;
                    }


                }


                switch (alt300) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3415:9: MEMBER_OP it= typeNameWithArguments
            	    {
            	    MEMBER_OP500=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_qualifiedType22871); if (state.failed) return type;

            	    pushFollow(FOLLOW_typeNameWithArguments_in_qualifiedType22883);
            	    it=typeNameWithArguments();

            	    state._fsp--;
            	    if (state.failed) return type;

            	    if ( state.backtracking==0 ) { QualifiedType qt = new QualifiedType(MEMBER_OP500);
            	              qt.setIdentifier((it!=null?it.identifier:null));
            	              if ((it!=null?it.typeArgumentList:null)!=null)
            	                  qt.setTypeArgumentList((it!=null?it.typeArgumentList:null));
            	              qt.setOuterType(type);
            	              type =qt; }

            	    }
            	    break;

            	default :
            	    break loop300;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "qualifiedType"


    public static class typeNameWithArguments_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "typeNameWithArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3426:1: typeNameWithArguments returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : typeName ( typeArguments )? ;
    public PsiCompatibleCeylonParser.typeNameWithArguments_return typeNameWithArguments() throws RecognitionException {
        PsiCompatibleCeylonParser.typeNameWithArguments_return retval = new PsiCompatibleCeylonParser.typeNameWithArguments_return();
        retval.start = input.LT(1);


        Identifier typeName501 =null;

        TypeArgumentList typeArguments502 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3428:5: ( typeName ( typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3428:7: typeName ( typeArguments )?
            {
            pushFollow(FOLLOW_typeName_in_typeNameWithArguments22923);
            typeName501=typeName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier = typeName501; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3430:7: ( typeArguments )?
            int alt301=2;
            int LA301_0 = input.LA(1);

            if ( (LA301_0==SMALLER_OP) ) {
                int LA301_1 = input.LA(2);

                if ( (LA301_1==IN_OP||LA301_1==LARGER_OP||(LA301_1 >= LBRACE && LA301_1 <= LBRACKET)||LA301_1==OUT||LA301_1==PACKAGE||LA301_1==SMALLER_OP||LA301_1==UIDENTIFIER) ) {
                    alt301=1;
                }
            }
            switch (alt301) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3431:9: typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_typeNameWithArguments22950);
                    typeArguments502=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments502; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "typeNameWithArguments"



    // $ANTLR start "annotations"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3436:1: annotations returns [AnnotationList annotationList] : ( stringLiteral )? ( annotation )* ;
    public AnnotationList annotations() throws RecognitionException {
        AnnotationList annotationList = null;


        StringLiteral stringLiteral503 =null;

        Annotation annotation504 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3437:5: ( ( stringLiteral )? ( annotation )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3437:7: ( stringLiteral )? ( annotation )*
            {
            if ( state.backtracking==0 ) { annotationList = new AnnotationList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3438:7: ( stringLiteral )?
            int alt302=2;
            int LA302_0 = input.LA(1);

            if ( (LA302_0==STRING_LITERAL||LA302_0==VERBATIM_STRING) ) {
                alt302=1;
            }
            switch (alt302) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3439:11: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotations23014);
                    stringLiteral503=stringLiteral();

                    state._fsp--;
                    if (state.failed) return annotationList;

                    if ( state.backtracking==0 ) { if (stringLiteral503.getToken().getType()==VERBATIM_STRING)
                                    stringLiteral503.getToken().setType(AVERBATIM_STRING);
                                else
                                    stringLiteral503.getToken().setType(ASTRING_LITERAL);
                                AnonymousAnnotation aa = new AnonymousAnnotation(null);
                                aa.setStringLiteral(stringLiteral503);
                                annotationList.setAnonymousAnnotation(aa); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3448:7: ( annotation )*
            loop303:
            do {
                int alt303=2;
                int LA303_0 = input.LA(1);

                if ( (LA303_0==LIDENTIFIER) ) {
                    alt303=1;
                }


                switch (alt303) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3449:9: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotations23053);
            	    annotation504=annotation();

            	    state._fsp--;
            	    if (state.failed) return annotationList;

            	    if ( state.backtracking==0 ) { annotationList.addAnnotation(annotation504); 
            	              new com.redhat.ceylon.compiler.typechecker.tree.Visitor() { 
            	                  public void visit(StringLiteral that) {
            	                      if (that.getToken().getType()==VERBATIM_STRING)
            	                          that.getToken().setType(AVERBATIM_STRING);
            	                      else
            	                          that.getToken().setType(ASTRING_LITERAL);
            	                  }
            	              }.visit(annotation504); }

            	    }
            	    break;

            	default :
            	    break loop303;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotationList;
    }
    // $ANTLR end "annotations"



    // $ANTLR start "annotation"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3462:1: annotation returns [Annotation annotation] : annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |) ;
    public Annotation annotation() throws RecognitionException {
        Annotation annotation = null;


        Identifier annotationName505 =null;

        PositionalArgumentList positionalArguments506 =null;

        NamedArgumentList namedArguments507 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3463:5: ( annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3463:7: annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |)
            {
            pushFollow(FOLLOW_annotationName_in_annotation23094);
            annotationName505=annotationName();

            state._fsp--;
            if (state.failed) return annotation;

            if ( state.backtracking==0 ) { annotation = new Annotation(null);
                    BaseMemberExpression bme = new BaseMemberExpression(null);
                    bme.setIdentifier(annotationName505);
                    bme.setTypeArguments( new InferredTypeArguments(null) );
                    annotation.setPrimary(bme); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3469:5: ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |)
            int alt304=3;
            switch ( input.LA(1) ) {
            case LPAREN:
                {
                alt304=1;
                }
                break;
            case LBRACE:
                {
                int LA304_2 = input.LA(2);

                if ( (synpred36_Ceylon()) ) {
                    alt304=2;
                }
                else if ( (true) ) {
                    alt304=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return annotation;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 304, 2, input);

                    throw nvae;

                }
                }
                break;
            case ALIAS:
            case ASSERT:
            case ASSIGN:
            case CLASS_DEFINITION:
            case DYNAMIC:
            case FUNCTION_MODIFIER:
            case IMPORT:
            case INTERFACE_DEFINITION:
            case LBRACKET:
            case LIDENTIFIER:
            case MODULE:
            case NEW:
            case OBJECT_DEFINITION:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
            case VALUE_MODIFIER:
            case VOID_MODIFIER:
                {
                alt304=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return annotation;}
                NoViableAltException nvae =
                    new NoViableAltException("", 304, 0, input);

                throw nvae;

            }

            switch (alt304) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3470:7: positionalArguments
                    {
                    pushFollow(FOLLOW_positionalArguments_in_annotation23117);
                    positionalArguments506=positionalArguments();

                    state._fsp--;
                    if (state.failed) return annotation;

                    if ( state.backtracking==0 ) { annotation.setPositionalArgumentList(positionalArguments506); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3472:7: ( namedAnnotationArgumentsStart )=> namedArguments
                    {
                    pushFollow(FOLLOW_namedArguments_in_annotation23146);
                    namedArguments507=namedArguments();

                    state._fsp--;
                    if (state.failed) return annotation;

                    if ( state.backtracking==0 ) { annotation.setNamedArgumentList(namedArguments507); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3475:7: 
                    {
                    if ( state.backtracking==0 ) { annotation.setPositionalArgumentList(new PositionalArgumentList(null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotation;
    }
    // $ANTLR end "annotation"



    // $ANTLR start "prefixOperatorStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3479:1: prefixOperatorStart : ( DIFFERENCE_OP | INCREMENT_OP | DECREMENT_OP | COMPLEMENT_OP );
    public void prefixOperatorStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3480:5: ( DIFFERENCE_OP | INCREMENT_OP | DECREMENT_OP | COMPLEMENT_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:
            {
            if ( input.LA(1)==COMPLEMENT_OP||(input.LA(1) >= DECREMENT_OP && input.LA(1) <= DIFFERENCE_OP)||input.LA(1)==INCREMENT_OP ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "prefixOperatorStart"



    // $ANTLR start "compilerAnnotations"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3486:1: compilerAnnotations returns [List<CompilerAnnotation> annotations] : ( compilerAnnotation )* ;
    public List<CompilerAnnotation> compilerAnnotations() throws RecognitionException {
        List<CompilerAnnotation> annotations = null;


        CompilerAnnotation compilerAnnotation508 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3487:5: ( ( compilerAnnotation )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3487:7: ( compilerAnnotation )*
            {
            if ( state.backtracking==0 ) { annotations = new ArrayList<CompilerAnnotation>(); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3488:5: ( compilerAnnotation )*
            loop305:
            do {
                int alt305=2;
                int LA305_0 = input.LA(1);

                if ( (LA305_0==COMPILER_ANNOTATION) ) {
                    alt305=1;
                }


                switch (alt305) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3489:7: compilerAnnotation
            	    {
            	    pushFollow(FOLLOW_compilerAnnotation_in_compilerAnnotations23250);
            	    compilerAnnotation508=compilerAnnotation();

            	    state._fsp--;
            	    if (state.failed) return annotations;

            	    if ( state.backtracking==0 ) { annotations.add(compilerAnnotation508); }

            	    }
            	    break;

            	default :
            	    break loop305;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotations;
    }
    // $ANTLR end "compilerAnnotations"



    // $ANTLR start "compilerAnnotation"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3494:1: compilerAnnotation returns [CompilerAnnotation annotation] : COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )? ;
    public CompilerAnnotation compilerAnnotation() throws RecognitionException {
        CompilerAnnotation annotation = null;


        Token COMPILER_ANNOTATION509=null;
        Identifier annotationName510 =null;

        StringLiteral stringLiteral511 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3495:5: ( COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3495:7: COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )?
            {
            COMPILER_ANNOTATION509=(Token)match(input,COMPILER_ANNOTATION,FOLLOW_COMPILER_ANNOTATION_in_compilerAnnotation23290); if (state.failed) return annotation;

            if ( state.backtracking==0 ) { annotation =new CompilerAnnotation(COMPILER_ANNOTATION509); }

            pushFollow(FOLLOW_annotationName_in_compilerAnnotation23307);
            annotationName510=annotationName();

            state._fsp--;
            if (state.failed) return annotation;

            if ( state.backtracking==0 ) { annotation.setIdentifier(annotationName510); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3499:7: ( SEGMENT_OP stringLiteral )?
            int alt306=2;
            int LA306_0 = input.LA(1);

            if ( (LA306_0==SEGMENT_OP) ) {
                alt306=1;
            }
            switch (alt306) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3500:11: SEGMENT_OP stringLiteral
                    {
                    match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_compilerAnnotation23337); if (state.failed) return annotation;

                    pushFollow(FOLLOW_stringLiteral_in_compilerAnnotation23349);
                    stringLiteral511=stringLiteral();

                    state._fsp--;
                    if (state.failed) return annotation;

                    if ( state.backtracking==0 ) { annotation.setStringLiteral(stringLiteral511); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotation;
    }
    // $ANTLR end "compilerAnnotation"



    // $ANTLR start "conditions"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3506:1: conditions returns [ConditionList conditionList] : LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN ;
    public ConditionList conditions() throws RecognitionException {
        ConditionList conditionList = null;


        Token c=null;
        Token LPAREN512=null;
        Token RPAREN513=null;
        Condition c1 =null;

        Condition c2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3507:5: ( LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3507:7: LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN
            {
            LPAREN512=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_conditions23391); if (state.failed) return conditionList;

            if ( state.backtracking==0 ) { conditionList = new ConditionList(LPAREN512); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3509:7: (c1= condition (c= COMMA (c2= condition |) )* )?
            int alt309=2;
            int LA309_0 = input.LA(1);

            if ( (LA309_0==BACKTICK||LA309_0==CHAR_LITERAL||(LA309_0 >= DECREMENT_OP && LA309_0 <= DIFFERENCE_OP)||LA309_0==DYNAMIC||LA309_0==EXISTS||LA309_0==FLOAT_LITERAL||LA309_0==FUNCTION_MODIFIER||LA309_0==IF_CLAUSE||LA309_0==INCREMENT_OP||LA309_0==IS_OP||(LA309_0 >= LBRACE && LA309_0 <= LIDENTIFIER)||LA309_0==LPAREN||LA309_0==NATURAL_LITERAL||LA309_0==NONEMPTY||(LA309_0 >= NOT_OP && LA309_0 <= OBJECT_DEFINITION)||(LA309_0 >= OUTER && LA309_0 <= PACKAGE)||LA309_0==SATISFIES||LA309_0==SMALLER_OP||LA309_0==STRING_LITERAL||LA309_0==STRING_START||(LA309_0 >= SUM_OP && LA309_0 <= SWITCH_CLAUSE)||LA309_0==THIS||LA309_0==UIDENTIFIER||(LA309_0 >= VERBATIM_STRING && LA309_0 <= VOID_MODIFIER)) ) {
                alt309=1;
            }
            switch (alt309) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3510:7: c1= condition (c= COMMA (c2= condition |) )*
                    {
                    pushFollow(FOLLOW_condition_in_conditions23417);
                    c1=condition();

                    state._fsp--;
                    if (state.failed) return conditionList;

                    if ( state.backtracking==0 ) { if (c1!=null) 
                                conditionList.addCondition(c1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3513:7: (c= COMMA (c2= condition |) )*
                    loop308:
                    do {
                        int alt308=2;
                        int LA308_0 = input.LA(1);

                        if ( (LA308_0==COMMA) ) {
                            alt308=1;
                        }


                        switch (alt308) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3513:9: c= COMMA (c2= condition |)
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_conditions23437); if (state.failed) return conditionList;

                    	    if ( state.backtracking==0 ) { conditionList.setEndToken(c); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3515:9: (c2= condition |)
                    	    int alt307=2;
                    	    int LA307_0 = input.LA(1);

                    	    if ( (LA307_0==BACKTICK||LA307_0==CHAR_LITERAL||(LA307_0 >= DECREMENT_OP && LA307_0 <= DIFFERENCE_OP)||LA307_0==DYNAMIC||LA307_0==EXISTS||LA307_0==FLOAT_LITERAL||LA307_0==FUNCTION_MODIFIER||LA307_0==IF_CLAUSE||LA307_0==INCREMENT_OP||LA307_0==IS_OP||(LA307_0 >= LBRACE && LA307_0 <= LIDENTIFIER)||LA307_0==LPAREN||LA307_0==NATURAL_LITERAL||LA307_0==NONEMPTY||(LA307_0 >= NOT_OP && LA307_0 <= OBJECT_DEFINITION)||(LA307_0 >= OUTER && LA307_0 <= PACKAGE)||LA307_0==SATISFIES||LA307_0==SMALLER_OP||LA307_0==STRING_LITERAL||LA307_0==STRING_START||(LA307_0 >= SUM_OP && LA307_0 <= SWITCH_CLAUSE)||LA307_0==THIS||LA307_0==UIDENTIFIER||(LA307_0 >= VERBATIM_STRING && LA307_0 <= VOID_MODIFIER)) ) {
                    	        alt307=1;
                    	    }
                    	    else if ( (LA307_0==COMMA||LA307_0==RPAREN) ) {
                    	        alt307=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return conditionList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 307, 0, input);

                    	        throw nvae;

                    	    }
                    	    switch (alt307) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3516:11: c2= condition
                    	            {
                    	            pushFollow(FOLLOW_condition_in_conditions23472);
                    	            c2=condition();

                    	            state._fsp--;
                    	            if (state.failed) return conditionList;

                    	            if ( state.backtracking==0 ) { if (c2!=null) 
                    	                            conditionList.addCondition(c2);
                    	                        conditionList.setEndToken(null); }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3520:11: 
                    	            {
                    	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                          new MismatchedTokenException(LIDENTIFIER, input)); }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop308;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN513=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_conditions23534); if (state.failed) return conditionList;

            if ( state.backtracking==0 ) { conditionList.setEndToken(RPAREN513); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return conditionList;
    }
    // $ANTLR end "conditions"



    // $ANTLR start "condition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3529:1: condition returns [Condition condition] : ( existsCondition | nonemptyCondition | isCondition | satisfiesCondition | booleanCondition );
    public Condition condition() throws RecognitionException {
        Condition condition = null;


        ExistsCondition existsCondition514 =null;

        NonemptyCondition nonemptyCondition515 =null;

        IsCondition isCondition516 =null;

        SatisfiesCondition satisfiesCondition517 =null;

        BooleanCondition booleanCondition518 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3530:5: ( existsCondition | nonemptyCondition | isCondition | satisfiesCondition | booleanCondition )
            int alt310=5;
            switch ( input.LA(1) ) {
            case NOT_OP:
                {
                switch ( input.LA(2) ) {
                case EXISTS:
                    {
                    alt310=1;
                    }
                    break;
                case NONEMPTY:
                    {
                    alt310=2;
                    }
                    break;
                case IS_OP:
                    {
                    alt310=3;
                    }
                    break;
                case BACKTICK:
                case CHAR_LITERAL:
                case DECREMENT_OP:
                case DIFFERENCE_OP:
                case DYNAMIC:
                case FLOAT_LITERAL:
                case INCREMENT_OP:
                case LBRACE:
                case LBRACKET:
                case LIDENTIFIER:
                case LPAREN:
                case NATURAL_LITERAL:
                case NOT_OP:
                case OBJECT_DEFINITION:
                case OUTER:
                case PACKAGE:
                case STRING_LITERAL:
                case STRING_START:
                case SUM_OP:
                case SUPER:
                case THIS:
                case UIDENTIFIER:
                case VERBATIM_STRING:
                    {
                    alt310=5;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 310, 1, input);

                    throw nvae;

                }

                }
                break;
            case EXISTS:
                {
                alt310=1;
                }
                break;
            case NONEMPTY:
                {
                alt310=2;
                }
                break;
            case IS_OP:
                {
                alt310=3;
                }
                break;
            case SATISFIES:
                {
                alt310=4;
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case DYNAMIC:
            case FLOAT_LITERAL:
            case FUNCTION_MODIFIER:
            case IF_CLAUSE:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case OBJECT_DEFINITION:
            case OUTER:
            case PACKAGE:
            case SMALLER_OP:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case SWITCH_CLAUSE:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
            case VOID_MODIFIER:
                {
                alt310=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 310, 0, input);

                throw nvae;

            }

            switch (alt310) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3530:7: existsCondition
                    {
                    pushFollow(FOLLOW_existsCondition_in_condition23563);
                    existsCondition514=existsCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =existsCondition514; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3532:7: nonemptyCondition
                    {
                    pushFollow(FOLLOW_nonemptyCondition_in_condition23579);
                    nonemptyCondition515=nonemptyCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =nonemptyCondition515; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3534:7: isCondition
                    {
                    pushFollow(FOLLOW_isCondition_in_condition23595);
                    isCondition516=isCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =isCondition516; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3536:7: satisfiesCondition
                    {
                    pushFollow(FOLLOW_satisfiesCondition_in_condition23612);
                    satisfiesCondition517=satisfiesCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =satisfiesCondition517; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3538:7: booleanCondition
                    {
                    pushFollow(FOLLOW_booleanCondition_in_condition23628);
                    booleanCondition518=booleanCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =booleanCondition518; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "condition"



    // $ANTLR start "booleanCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3542:1: booleanCondition returns [BooleanCondition condition] : functionOrExpression ;
    public BooleanCondition booleanCondition() throws RecognitionException {
        BooleanCondition condition = null;


        Expression functionOrExpression519 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3543:5: ( functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3543:7: functionOrExpression
            {
            if ( state.backtracking==0 ) { condition = new BooleanCondition(null); }

            pushFollow(FOLLOW_functionOrExpression_in_booleanCondition23669);
            functionOrExpression519=functionOrExpression();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setExpression(functionOrExpression519); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "booleanCondition"



    // $ANTLR start "existsCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
    public ExistsCondition existsCondition() throws RecognitionException {
        ExistsCondition condition = null;


        Token NOT_OP520=null;
        Token EXISTS521=null;
        Statement letVariable522 =null;

        Variable impliedVariable523 =null;

        Expression expression524 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3549:7: ( NOT_OP )?
            int alt311=2;
            int LA311_0 = input.LA(1);

            if ( (LA311_0==NOT_OP) ) {
                alt311=1;
            }
            switch (alt311) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3550:9: NOT_OP
                    {
                    NOT_OP520=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_existsCondition23712); if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition = new ExistsCondition(NOT_OP520);
                              condition.setNot(true); }

                    }
                    break;

            }


            EXISTS521=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_existsCondition23739); if (state.failed) return condition;

            if ( state.backtracking==0 ) { if (condition==null)
                        condition = new ExistsCondition(EXISTS521); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            int alt312=3;
            int LA312_0 = input.LA(1);

            if ( (LA312_0==LBRACKET) ) {
                int LA312_1 = input.LA(2);

                if ( (synpred38_Ceylon()) ) {
                    alt312=1;
                }
                else if ( (true) ) {
                    alt312=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 312, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA312_0==COMPILER_ANNOTATION) && (synpred38_Ceylon())) {
                alt312=1;
            }
            else if ( (LA312_0==SMALLER_OP) && (synpred38_Ceylon())) {
                alt312=1;
            }
            else if ( (LA312_0==UIDENTIFIER) ) {
                int LA312_4 = input.LA(2);

                if ( (synpred38_Ceylon()) ) {
                    alt312=1;
                }
                else if ( (true) ) {
                    alt312=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 312, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA312_0==PACKAGE) ) {
                int LA312_5 = input.LA(2);

                if ( (synpred38_Ceylon()) ) {
                    alt312=1;
                }
                else if ( (true) ) {
                    alt312=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 312, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA312_0==LBRACE) ) {
                int LA312_6 = input.LA(2);

                if ( (synpred38_Ceylon()) ) {
                    alt312=1;
                }
                else if ( (true) ) {
                    alt312=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 312, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA312_0==VOID_MODIFIER) && (synpred38_Ceylon())) {
                alt312=1;
            }
            else if ( (LA312_0==FUNCTION_MODIFIER) && (synpred38_Ceylon())) {
                alt312=1;
            }
            else if ( (LA312_0==VALUE_MODIFIER) && (synpred38_Ceylon())) {
                alt312=1;
            }
            else if ( (LA312_0==LIDENTIFIER) ) {
                int LA312_10 = input.LA(2);

                if ( (synpred38_Ceylon()) ) {
                    alt312=1;
                }
                else if ( (synpred39_Ceylon()) ) {
                    alt312=2;
                }
                else if ( (true) ) {
                    alt312=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 312, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA312_0==BACKTICK||LA312_0==CHAR_LITERAL||(LA312_0 >= DECREMENT_OP && LA312_0 <= DIFFERENCE_OP)||LA312_0==DYNAMIC||LA312_0==FLOAT_LITERAL||LA312_0==INCREMENT_OP||LA312_0==LPAREN||LA312_0==NATURAL_LITERAL||(LA312_0 >= NOT_OP && LA312_0 <= OBJECT_DEFINITION)||LA312_0==OUTER||LA312_0==STRING_LITERAL||LA312_0==STRING_START||(LA312_0 >= SUM_OP && LA312_0 <= SUPER)||LA312_0==THIS||LA312_0==VERBATIM_STRING) ) {
                alt312=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 312, 0, input);

                throw nvae;

            }
            switch (alt312) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
                    {
                    pushFollow(FOLLOW_letVariable_in_existsCondition23797);
                    letVariable522=letVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(letVariable522); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3562:9: ( LIDENTIFIER )=> impliedVariable
                    {
                    pushFollow(FOLLOW_impliedVariable_in_existsCondition23831);
                    impliedVariable523=impliedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(impliedVariable523); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3564:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_existsCondition23851);
                    expression524=expression();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setBrokenExpression(expression524); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "existsCondition"



    // $ANTLR start "nonemptyCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
    public NonemptyCondition nonemptyCondition() throws RecognitionException {
        NonemptyCondition condition = null;


        Token NOT_OP525=null;
        Token NONEMPTY526=null;
        Statement letVariable527 =null;

        Variable impliedVariable528 =null;

        Expression expression529 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3570:7: ( NOT_OP )?
            int alt313=2;
            int LA313_0 = input.LA(1);

            if ( (LA313_0==NOT_OP) ) {
                alt313=1;
            }
            switch (alt313) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3571:9: NOT_OP
                    {
                    NOT_OP525=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_nonemptyCondition23904); if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition = new NonemptyCondition(NOT_OP525);
                              condition.setNot(true); }

                    }
                    break;

            }


            NONEMPTY526=(Token)match(input,NONEMPTY,FOLLOW_NONEMPTY_in_nonemptyCondition23931); if (state.failed) return condition;

            if ( state.backtracking==0 ) { if (condition==null)
                        condition = new NonemptyCondition(NONEMPTY526); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            int alt314=3;
            int LA314_0 = input.LA(1);

            if ( (LA314_0==LBRACKET) ) {
                int LA314_1 = input.LA(2);

                if ( (synpred41_Ceylon()) ) {
                    alt314=1;
                }
                else if ( (true) ) {
                    alt314=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 314, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA314_0==COMPILER_ANNOTATION) && (synpred41_Ceylon())) {
                alt314=1;
            }
            else if ( (LA314_0==SMALLER_OP) && (synpred41_Ceylon())) {
                alt314=1;
            }
            else if ( (LA314_0==UIDENTIFIER) ) {
                int LA314_4 = input.LA(2);

                if ( (synpred41_Ceylon()) ) {
                    alt314=1;
                }
                else if ( (true) ) {
                    alt314=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 314, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA314_0==PACKAGE) ) {
                int LA314_5 = input.LA(2);

                if ( (synpred41_Ceylon()) ) {
                    alt314=1;
                }
                else if ( (true) ) {
                    alt314=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 314, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA314_0==LBRACE) ) {
                int LA314_6 = input.LA(2);

                if ( (synpred41_Ceylon()) ) {
                    alt314=1;
                }
                else if ( (true) ) {
                    alt314=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 314, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA314_0==VOID_MODIFIER) && (synpred41_Ceylon())) {
                alt314=1;
            }
            else if ( (LA314_0==FUNCTION_MODIFIER) && (synpred41_Ceylon())) {
                alt314=1;
            }
            else if ( (LA314_0==VALUE_MODIFIER) && (synpred41_Ceylon())) {
                alt314=1;
            }
            else if ( (LA314_0==LIDENTIFIER) ) {
                int LA314_10 = input.LA(2);

                if ( (synpred41_Ceylon()) ) {
                    alt314=1;
                }
                else if ( (synpred42_Ceylon()) ) {
                    alt314=2;
                }
                else if ( (true) ) {
                    alt314=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 314, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA314_0==BACKTICK||LA314_0==CHAR_LITERAL||(LA314_0 >= DECREMENT_OP && LA314_0 <= DIFFERENCE_OP)||LA314_0==DYNAMIC||LA314_0==FLOAT_LITERAL||LA314_0==INCREMENT_OP||LA314_0==LPAREN||LA314_0==NATURAL_LITERAL||(LA314_0 >= NOT_OP && LA314_0 <= OBJECT_DEFINITION)||LA314_0==OUTER||LA314_0==STRING_LITERAL||LA314_0==STRING_START||(LA314_0 >= SUM_OP && LA314_0 <= SUPER)||LA314_0==THIS||LA314_0==VERBATIM_STRING) ) {
                alt314=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 314, 0, input);

                throw nvae;

            }
            switch (alt314) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
                    {
                    pushFollow(FOLLOW_letVariable_in_nonemptyCondition23989);
                    letVariable527=letVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(letVariable527); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3583:9: ( LIDENTIFIER )=> impliedVariable
                    {
                    pushFollow(FOLLOW_impliedVariable_in_nonemptyCondition24023);
                    impliedVariable528=impliedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(impliedVariable528); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3585:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_nonemptyCondition24044);
                    expression529=expression();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setBrokenExpression(expression529); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "nonemptyCondition"



    // $ANTLR start "isCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3590:1: isCondition returns [IsCondition condition] : ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable ) ;
    public IsCondition isCondition() throws RecognitionException {
        IsCondition condition = null;


        Token NOT_OP530=null;
        Token IS_OP531=null;
        Variable v =null;

        StaticType type532 =null;

        Variable impliedVariable533 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3591:5: ( ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3591:7: ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3591:7: ( NOT_OP )?
            int alt315=2;
            int LA315_0 = input.LA(1);

            if ( (LA315_0==NOT_OP) ) {
                alt315=1;
            }
            switch (alt315) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3592:9: NOT_OP
                    {
                    NOT_OP530=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_isCondition24093); if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition = new IsCondition(NOT_OP530);
                              condition.setNot(true); }

                    }
                    break;

            }


            IS_OP531=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_isCondition24120); if (state.failed) return condition;

            if ( state.backtracking==0 ) { if (condition==null)
                        condition = new IsCondition(IS_OP531); }

            pushFollow(FOLLOW_type_in_isCondition24137);
            type532=type();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setType(type532); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3601:7: ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable )
            int alt316=2;
            int LA316_0 = input.LA(1);

            if ( (LA316_0==LIDENTIFIER) ) {
                int LA316_1 = input.LA(2);

                if ( (LA316_1==SPECIFY) && (synpred43_Ceylon())) {
                    alt316=1;
                }
                else if ( (LA316_1==COMMA||LA316_1==RPAREN) ) {
                    alt316=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 316, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 316, 0, input);

                throw nvae;

            }
            switch (alt316) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3602:9: ( LIDENTIFIER SPECIFY )=>v= isConditionVariable
                    {
                    pushFollow(FOLLOW_isConditionVariable_in_isCondition24181);
                    v=isConditionVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(v); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3606:9: impliedVariable
                    {
                    pushFollow(FOLLOW_impliedVariable_in_isCondition24209);
                    impliedVariable533=impliedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(impliedVariable533); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "isCondition"



    // $ANTLR start "isConditionVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3611:1: isConditionVariable returns [Variable variable] : memberName specifier ;
    public Variable isConditionVariable() throws RecognitionException {
        Variable variable = null;


        Identifier memberName534 =null;

        SpecifierExpression specifier535 =null;


         variable = new Variable(null);
                    variable.setType(new ValueModifier(null));  
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3614:5: ( memberName specifier )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3614:7: memberName specifier
            {
            pushFollow(FOLLOW_memberName_in_isConditionVariable24258);
            memberName534=memberName();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable.setIdentifier(memberName534); }

            pushFollow(FOLLOW_specifier_in_isConditionVariable24274);
            specifier535=specifier();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable.setSpecifierExpression(specifier535); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "isConditionVariable"



    // $ANTLR start "satisfiesCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3620:1: satisfiesCondition returns [SatisfiesCondition condition] : SATISFIES type typeName ;
    public SatisfiesCondition satisfiesCondition() throws RecognitionException {
        SatisfiesCondition condition = null;


        Token SATISFIES536=null;
        StaticType type537 =null;

        Identifier typeName538 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3621:5: ( SATISFIES type typeName )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3621:7: SATISFIES type typeName
            {
            SATISFIES536=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiesCondition24303); if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition = new SatisfiesCondition(SATISFIES536); }

            pushFollow(FOLLOW_type_in_satisfiesCondition24320);
            type537=type();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setType(type537); }

            pushFollow(FOLLOW_typeName_in_satisfiesCondition24337);
            typeName538=typeName();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setIdentifier(typeName538); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "satisfiesCondition"



    // $ANTLR start "controlStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3629:1: controlStatement returns [ControlStatement controlStatement] : ( ifElse | switchCaseElse | whileLoop | forElse | tryCatchFinally | dynamic );
    public ControlStatement controlStatement() throws RecognitionException {
        ControlStatement controlStatement = null;


        IfStatement ifElse539 =null;

        SwitchStatement switchCaseElse540 =null;

        WhileStatement whileLoop541 =null;

        ForStatement forElse542 =null;

        TryCatchStatement tryCatchFinally543 =null;

        DynamicStatement dynamic544 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3630:5: ( ifElse | switchCaseElse | whileLoop | forElse | tryCatchFinally | dynamic )
            int alt317=6;
            switch ( input.LA(1) ) {
            case IF_CLAUSE:
                {
                alt317=1;
                }
                break;
            case SWITCH_CLAUSE:
                {
                alt317=2;
                }
                break;
            case WHILE_CLAUSE:
                {
                alt317=3;
                }
                break;
            case FOR_CLAUSE:
                {
                alt317=4;
                }
                break;
            case TRY_CLAUSE:
                {
                alt317=5;
                }
                break;
            case DYNAMIC:
                {
                alt317=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return controlStatement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 317, 0, input);

                throw nvae;

            }

            switch (alt317) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3630:7: ifElse
                    {
                    pushFollow(FOLLOW_ifElse_in_controlStatement24366);
                    ifElse539=ifElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =ifElse539; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3632:7: switchCaseElse
                    {
                    pushFollow(FOLLOW_switchCaseElse_in_controlStatement24383);
                    switchCaseElse540=switchCaseElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =switchCaseElse540; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3634:7: whileLoop
                    {
                    pushFollow(FOLLOW_whileLoop_in_controlStatement24400);
                    whileLoop541=whileLoop();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =whileLoop541; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3636:7: forElse
                    {
                    pushFollow(FOLLOW_forElse_in_controlStatement24417);
                    forElse542=forElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =forElse542; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3638:7: tryCatchFinally
                    {
                    pushFollow(FOLLOW_tryCatchFinally_in_controlStatement24434);
                    tryCatchFinally543=tryCatchFinally();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =tryCatchFinally543; }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3640:7: dynamic
                    {
                    pushFollow(FOLLOW_dynamic_in_controlStatement24450);
                    dynamic544=dynamic();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =dynamic544; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return controlStatement;
    }
    // $ANTLR end "controlStatement"



    // $ANTLR start "controlBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3644:1: controlBlock returns [Block block] : ( ( LBRACE )=>b= block |) ;
    public Block controlBlock() throws RecognitionException {
        Block block = null;


        Block b =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3645:5: ( ( ( LBRACE )=>b= block |) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3645:7: ( ( LBRACE )=>b= block |)
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3645:7: ( ( LBRACE )=>b= block |)
            int alt318=2;
            int LA318_0 = input.LA(1);

            if ( (LA318_0==LBRACE) ) {
                int LA318_1 = input.LA(2);

                if ( (synpred44_Ceylon()) ) {
                    alt318=1;
                }
                else if ( (true) ) {
                    alt318=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return block;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 318, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA318_0==ALIAS||(LA318_0 >= ASSERT && LA318_0 <= ASSIGN)||(LA318_0 >= BACKTICK && LA318_0 <= BREAK)||(LA318_0 >= CATCH_CLAUSE && LA318_0 <= CLASS_DEFINITION)||LA318_0==COMPILER_ANNOTATION||LA318_0==CONTINUE||(LA318_0 >= DECREMENT_OP && LA318_0 <= DIFFERENCE_OP)||LA318_0==DYNAMIC||LA318_0==ELSE_CLAUSE||(LA318_0 >= FINALLY_CLAUSE && LA318_0 <= FUNCTION_MODIFIER)||LA318_0==IF_CLAUSE||(LA318_0 >= INCREMENT_OP && LA318_0 <= INTERFACE_DEFINITION)||LA318_0==LBRACKET||LA318_0==LIDENTIFIER||LA318_0==LPAREN||(LA318_0 >= NATURAL_LITERAL && LA318_0 <= NEW)||(LA318_0 >= NOT_OP && LA318_0 <= OBJECT_DEFINITION)||(LA318_0 >= OUTER && LA318_0 <= PACKAGE)||LA318_0==RBRACE||LA318_0==RETURN||LA318_0==SMALLER_OP||LA318_0==STRING_LITERAL||LA318_0==STRING_START||(LA318_0 >= SUM_OP && LA318_0 <= SWITCH_CLAUSE)||(LA318_0 >= THIS && LA318_0 <= TRY_CLAUSE)||LA318_0==UIDENTIFIER||(LA318_0 >= VALUE_MODIFIER && LA318_0 <= WHILE_CLAUSE)) ) {
                alt318=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return block;}
                NoViableAltException nvae =
                    new NoViableAltException("", 318, 0, input);

                throw nvae;

            }
            switch (alt318) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3645:9: ( LBRACE )=>b= block
                    {
                    pushFollow(FOLLOW_block_in_controlBlock24488);
                    b=block();

                    state._fsp--;
                    if (state.failed) return block;

                    if ( state.backtracking==0 ) { block =b; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3647:9: 
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                    new MismatchedTokenException(LBRACE, input)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "controlBlock"



    // $ANTLR start "dynamic"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3652:1: dynamic returns [DynamicStatement statement] : DYNAMIC block ;
    public DynamicStatement dynamic() throws RecognitionException {
        DynamicStatement statement = null;


        Token DYNAMIC545=null;
        Block block546 =null;


         DynamicClause dc = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3654:5: ( DYNAMIC block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3654:7: DYNAMIC block
            {
            if ( state.backtracking==0 ) { statement =new DynamicStatement(null); }

            DYNAMIC545=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_dynamic24554); if (state.failed) return statement;

            if ( state.backtracking==0 ) { dc = new DynamicClause(DYNAMIC545);
                    statement.setDynamicClause(dc); }

            pushFollow(FOLLOW_block_in_dynamic24571);
            block546=block();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { dc.setBlock(block546); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "dynamic"



    // $ANTLR start "ifElse"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3662:1: ifElse returns [IfStatement statement] : ifBlock ( elseBlock )? ;
    public IfStatement ifElse() throws RecognitionException {
        IfStatement statement = null;


        IfClause ifBlock547 =null;

        ElseClause elseBlock548 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3663:5: ( ifBlock ( elseBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3663:7: ifBlock ( elseBlock )?
            {
            if ( state.backtracking==0 ) { statement =new IfStatement(null); }

            pushFollow(FOLLOW_ifBlock_in_ifElse24608);
            ifBlock547=ifBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setIfClause(ifBlock547); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3666:7: ( elseBlock )?
            int alt319=2;
            int LA319_0 = input.LA(1);

            if ( (LA319_0==ELSE_CLAUSE) ) {
                alt319=1;
            }
            switch (alt319) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3667:9: elseBlock
                    {
                    pushFollow(FOLLOW_elseBlock_in_ifElse24636);
                    elseBlock548=elseBlock();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { ElseClause ec = elseBlock548;
                              statement.setElseClause(ec);
                              ConditionList cl = ifBlock547.getConditionList();
                              if (cl!=null) {
                                List<Condition> conditions = cl.getConditions();
                                if (conditions.size()==1) {
                                  Condition c = conditions.get(0);
                                  Identifier id = null;
                                  Type t = null;
                                  if (c instanceof ExistsOrNonemptyCondition) {
                                    Statement s = ((ExistsOrNonemptyCondition)c).getVariable();
                                    if (s instanceof Variable) {
                                      Variable v = (Variable) s;
                                      t = v.getType();
                                      id = v.getIdentifier();
                                    }
                                  }
                                  else if (c instanceof IsCondition) {
                                    Variable v = (Variable) ((IsCondition)c).getVariable();
                                    if (v!=null) {
                                      t = v.getType();
                                      id = v.getIdentifier();
                                    }
                                  }
                                  if (id!=null && ec!=null && t instanceof SyntheticVariable) { 
                                    Variable ev = new Variable(null);
                                    ev.setType(new SyntheticVariable(null));
                                    SpecifierExpression ese = new SpecifierExpression(null);
                                    Expression ee = new Expression(null);
                                    BaseMemberExpression ebme = new BaseMemberExpression(null);
                                    ebme.setTypeArguments( new InferredTypeArguments(null) );
                                    ee.setTerm(ebme);
                                    ese.setExpression(ee);
                                    ev.setSpecifierExpression(ese);
                                    ec.setVariable(ev);
                                    ev.setIdentifier(id);
                                    ebme.setIdentifier(id);
                                  }
                                }
                              }
                            }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "ifElse"



    // $ANTLR start "ifBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3712:1: ifBlock returns [IfClause clause] : IF_CLAUSE conditions controlBlock ;
    public IfClause ifBlock() throws RecognitionException {
        IfClause clause = null;


        Token IF_CLAUSE549=null;
        ConditionList conditions550 =null;

        Block controlBlock551 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3713:5: ( IF_CLAUSE conditions controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3713:7: IF_CLAUSE conditions controlBlock
            {
            IF_CLAUSE549=(Token)match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_ifBlock24676); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new IfClause(IF_CLAUSE549); }

            pushFollow(FOLLOW_conditions_in_ifBlock24693);
            conditions550=conditions();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setConditionList(conditions550); }

            pushFollow(FOLLOW_controlBlock_in_ifBlock24709);
            controlBlock551=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock551); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "ifBlock"



    // $ANTLR start "elseBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3721:1: elseBlock returns [ElseClause clause] : ELSE_CLAUSE ( elseIf | block ) ;
    public ElseClause elseBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE552=null;
        Block elseIf553 =null;

        Block block554 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3722:5: ( ELSE_CLAUSE ( elseIf | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3722:7: ELSE_CLAUSE ( elseIf | block )
            {
            ELSE_CLAUSE552=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_elseBlock24738); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE552); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3724:7: ( elseIf | block )
            int alt320=2;
            int LA320_0 = input.LA(1);

            if ( (LA320_0==IF_CLAUSE) ) {
                alt320=1;
            }
            else if ( (LA320_0==LBRACE) ) {
                alt320=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return clause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 320, 0, input);

                throw nvae;

            }
            switch (alt320) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3725:9: elseIf
                    {
                    pushFollow(FOLLOW_elseIf_in_elseBlock24765);
                    elseIf553=elseIf();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(elseIf553); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3728:9: block
                    {
                    pushFollow(FOLLOW_block_in_elseBlock24795);
                    block554=block();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(block554); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "elseBlock"



    // $ANTLR start "elseIf"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3733:1: elseIf returns [Block block] : ifElse ;
    public Block elseIf() throws RecognitionException {
        Block block = null;


        IfStatement ifElse555 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3734:5: ( ifElse )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3734:7: ifElse
            {
            pushFollow(FOLLOW_ifElse_in_elseIf24834);
            ifElse555=ifElse();

            state._fsp--;
            if (state.failed) return block;

            if ( state.backtracking==0 ) { block = new Block(null);
                    block.addStatement(ifElse555); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "elseIf"



    // $ANTLR start "switchCaseElse"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3739:1: switchCaseElse returns [SwitchStatement statement] : switchHeader cases ;
    public SwitchStatement switchCaseElse() throws RecognitionException {
        SwitchStatement statement = null;


        SwitchClause switchHeader556 =null;

        SwitchCaseList cases557 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3740:5: ( switchHeader cases )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3740:7: switchHeader cases
            {
            if ( state.backtracking==0 ) { statement = new SwitchStatement(null); }

            pushFollow(FOLLOW_switchHeader_in_switchCaseElse24871);
            switchHeader556=switchHeader();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setSwitchClause(switchHeader556); }

            pushFollow(FOLLOW_cases_in_switchCaseElse24888);
            cases557=cases();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setSwitchCaseList(cases557);
                    Identifier id = null;
                    Switched sw = switchHeader556.getSwitched();
                    if (sw!=null) {
                      Expression ex = sw.getExpression();
                      if (ex!=null && ex.getTerm() instanceof BaseMemberExpression) {
                        id = ((BaseMemberExpression) ex.getTerm()).getIdentifier();
                      }
                      TypedDeclaration var = sw.getVariable();
                      if (var!=null) {
                        id = var.getIdentifier();
                      }
                    }
                    if (id!=null) {
                      for (CaseClause cc: cases557.getCaseClauses()) {
                        CaseItem item = cc.getCaseItem();
                        if (item instanceof IsCase) {
                          IsCase ic = (IsCase) item;
                          Variable v = new Variable(null);
                          v.setType(new SyntheticVariable(null));
                          SpecifierExpression se = new SpecifierExpression(null);
                          Expression e = new Expression(null);
                          BaseMemberExpression bme = new BaseMemberExpression(null);
                          bme.setTypeArguments( new InferredTypeArguments(null) );
                          e.setTerm(bme);
                          se.setExpression(e);
                          v.setSpecifierExpression(se);
                          ic.setVariable(v);
                          bme.setIdentifier(id);
                          v.setIdentifier(id);
                        }
                      }
                      ElseClause ec = cases557.getElseClause();
                      if (ec!=null) {
                        Variable ev = new Variable(null);
                        ev.setType(new SyntheticVariable(null));
                        SpecifierExpression ese = new SpecifierExpression(null);
                        Expression ee = new Expression(null);
                        BaseMemberExpression ebme = new BaseMemberExpression(null);
                        ebme.setTypeArguments( new InferredTypeArguments(null) );
                        ee.setTerm(ebme);
                        ese.setExpression(ee);
                        ev.setSpecifierExpression(ese);
                        ec.setVariable(ev);
                        ebme.setIdentifier(id);
                        ev.setIdentifier(id);
                      }
                    }
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "switchCaseElse"



    // $ANTLR start "switchHeader"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3795:1: switchHeader returns [SwitchClause clause] : SWITCH_CLAUSE LPAREN ( switched )? RPAREN ;
    public SwitchClause switchHeader() throws RecognitionException {
        SwitchClause clause = null;


        Token SWITCH_CLAUSE558=null;
        Token LPAREN559=null;
        Token RPAREN561=null;
        Switched switched560 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3796:5: ( SWITCH_CLAUSE LPAREN ( switched )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3796:7: SWITCH_CLAUSE LPAREN ( switched )? RPAREN
            {
            SWITCH_CLAUSE558=(Token)match(input,SWITCH_CLAUSE,FOLLOW_SWITCH_CLAUSE_in_switchHeader24917); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new SwitchClause(SWITCH_CLAUSE558); }

            LPAREN559=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_switchHeader24934); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setEndToken(LPAREN559); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3800:7: ( switched )?
            int alt321=2;
            int LA321_0 = input.LA(1);

            if ( (LA321_0==BACKTICK||LA321_0==CHAR_LITERAL||LA321_0==COMPILER_ANNOTATION||(LA321_0 >= DECREMENT_OP && LA321_0 <= DIFFERENCE_OP)||LA321_0==DYNAMIC||LA321_0==FLOAT_LITERAL||LA321_0==FUNCTION_MODIFIER||LA321_0==INCREMENT_OP||(LA321_0 >= LBRACE && LA321_0 <= LBRACKET)||LA321_0==LIDENTIFIER||LA321_0==LPAREN||LA321_0==NATURAL_LITERAL||(LA321_0 >= NOT_OP && LA321_0 <= OBJECT_DEFINITION)||(LA321_0 >= OUTER && LA321_0 <= PACKAGE)||LA321_0==SMALLER_OP||LA321_0==STRING_LITERAL||LA321_0==STRING_START||(LA321_0 >= SUM_OP && LA321_0 <= SUPER)||LA321_0==THIS||LA321_0==UIDENTIFIER||(LA321_0 >= VALUE_MODIFIER && LA321_0 <= VOID_MODIFIER)) ) {
                alt321=1;
            }
            switch (alt321) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3801:9: switched
                    {
                    pushFollow(FOLLOW_switched_in_switchHeader24960);
                    switched560=switched();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setSwitched(switched560); 
                              clause.setEndToken(null); }

                    }
                    break;

            }


            RPAREN561=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_switchHeader24988); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setEndToken(RPAREN561); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "switchHeader"



    // $ANTLR start "switched"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3809:1: switched returns [Switched switched] : ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression ) ;
    public Switched switched() throws RecognitionException {
        Switched switched = null;


        Variable specifiedVariable562 =null;

        Expression expression563 =null;


         switched = new Switched(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3811:5: ( ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3811:7: ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3811:7: ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression )
            int alt322=2;
            int LA322_0 = input.LA(1);

            if ( (LA322_0==COMPILER_ANNOTATION) && (synpred45_Ceylon())) {
                alt322=1;
            }
            else if ( (LA322_0==SMALLER_OP) && (synpred45_Ceylon())) {
                alt322=1;
            }
            else if ( (LA322_0==UIDENTIFIER) ) {
                int LA322_3 = input.LA(2);

                if ( (synpred45_Ceylon()) ) {
                    alt322=1;
                }
                else if ( (true) ) {
                    alt322=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 322, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA322_0==PACKAGE) ) {
                int LA322_4 = input.LA(2);

                if ( (synpred45_Ceylon()) ) {
                    alt322=1;
                }
                else if ( (true) ) {
                    alt322=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 322, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA322_0==LBRACKET) ) {
                int LA322_5 = input.LA(2);

                if ( (synpred45_Ceylon()) ) {
                    alt322=1;
                }
                else if ( (true) ) {
                    alt322=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 322, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA322_0==LBRACE) ) {
                int LA322_6 = input.LA(2);

                if ( (synpred45_Ceylon()) ) {
                    alt322=1;
                }
                else if ( (true) ) {
                    alt322=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 322, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA322_0==VOID_MODIFIER) && (synpred45_Ceylon())) {
                alt322=1;
            }
            else if ( (LA322_0==FUNCTION_MODIFIER) && (synpred45_Ceylon())) {
                alt322=1;
            }
            else if ( (LA322_0==VALUE_MODIFIER) && (synpred45_Ceylon())) {
                alt322=1;
            }
            else if ( (LA322_0==LIDENTIFIER) ) {
                int LA322_10 = input.LA(2);

                if ( (synpred45_Ceylon()) ) {
                    alt322=1;
                }
                else if ( (true) ) {
                    alt322=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 322, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA322_0==BACKTICK||LA322_0==CHAR_LITERAL||(LA322_0 >= DECREMENT_OP && LA322_0 <= DIFFERENCE_OP)||LA322_0==DYNAMIC||LA322_0==FLOAT_LITERAL||LA322_0==INCREMENT_OP||LA322_0==LPAREN||LA322_0==NATURAL_LITERAL||(LA322_0 >= NOT_OP && LA322_0 <= OBJECT_DEFINITION)||LA322_0==OUTER||LA322_0==STRING_LITERAL||LA322_0==STRING_START||(LA322_0 >= SUM_OP && LA322_0 <= SUPER)||LA322_0==THIS||LA322_0==VERBATIM_STRING) ) {
                alt322=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return switched;}
                NoViableAltException nvae =
                    new NoViableAltException("", 322, 0, input);

                throw nvae;

            }
            switch (alt322) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3811:9: ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable
                    {
                    pushFollow(FOLLOW_specifiedVariable_in_switched25047);
                    specifiedVariable562=specifiedVariable();

                    state._fsp--;
                    if (state.failed) return switched;

                    if ( state.backtracking==0 ) { switched.setVariable(specifiedVariable562); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3814:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_switched25067);
                    expression563=expression();

                    state._fsp--;
                    if (state.failed) return switched;

                    if ( state.backtracking==0 ) { switched.setExpression(expression563); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return switched;
    }
    // $ANTLR end "switched"



    // $ANTLR start "cases"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3819:1: cases returns [SwitchCaseList switchCaseList] : ( caseBlock )+ ( defaultCaseBlock )? ;
    public SwitchCaseList cases() throws RecognitionException {
        SwitchCaseList switchCaseList = null;


        CaseClause caseBlock564 =null;

        ElseClause defaultCaseBlock565 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3820:5: ( ( caseBlock )+ ( defaultCaseBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3820:7: ( caseBlock )+ ( defaultCaseBlock )?
            {
            if ( state.backtracking==0 ) { switchCaseList = new SwitchCaseList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3821:7: ( caseBlock )+
            int cnt323=0;
            loop323:
            do {
                int alt323=2;
                int LA323_0 = input.LA(1);

                if ( (LA323_0==CASE_CLAUSE) ) {
                    alt323=1;
                }


                switch (alt323) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3822:9: caseBlock
            	    {
            	    pushFollow(FOLLOW_caseBlock_in_cases25124);
            	    caseBlock564=caseBlock();

            	    state._fsp--;
            	    if (state.failed) return switchCaseList;

            	    if ( state.backtracking==0 ) { switchCaseList.addCaseClause(caseBlock564); }

            	    }
            	    break;

            	default :
            	    if ( cnt323 >= 1 ) break loop323;
            	    if (state.backtracking>0) {state.failed=true; return switchCaseList;}
                        EarlyExitException eee =
                            new EarlyExitException(323, input);
                        throw eee;
                }
                cnt323++;
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3825:7: ( defaultCaseBlock )?
            int alt324=2;
            int LA324_0 = input.LA(1);

            if ( (LA324_0==ELSE_CLAUSE) ) {
                alt324=1;
            }
            switch (alt324) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3826:9: defaultCaseBlock
                    {
                    pushFollow(FOLLOW_defaultCaseBlock_in_cases25161);
                    defaultCaseBlock565=defaultCaseBlock();

                    state._fsp--;
                    if (state.failed) return switchCaseList;

                    if ( state.backtracking==0 ) { switchCaseList.setElseClause(defaultCaseBlock565); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return switchCaseList;
    }
    // $ANTLR end "cases"



    // $ANTLR start "caseBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3831:1: caseBlock returns [CaseClause clause] : CASE_CLAUSE caseItemList block ;
    public CaseClause caseBlock() throws RecognitionException {
        CaseClause clause = null;


        Token CASE_CLAUSE566=null;
        CaseItem caseItemList567 =null;

        Block block568 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3832:5: ( CASE_CLAUSE caseItemList block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3832:7: CASE_CLAUSE caseItemList block
            {
            CASE_CLAUSE566=(Token)match(input,CASE_CLAUSE,FOLLOW_CASE_CLAUSE_in_caseBlock25205); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new CaseClause(CASE_CLAUSE566); }

            pushFollow(FOLLOW_caseItemList_in_caseBlock25222);
            caseItemList567=caseItemList();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setCaseItem(caseItemList567); }

            pushFollow(FOLLOW_block_in_caseBlock25238);
            block568=block();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(block568); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "caseBlock"



    // $ANTLR start "defaultCaseBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3840:1: defaultCaseBlock returns [ElseClause clause] : ELSE_CLAUSE block ;
    public ElseClause defaultCaseBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE569=null;
        Block block570 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3841:5: ( ELSE_CLAUSE block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3841:7: ELSE_CLAUSE block
            {
            ELSE_CLAUSE569=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_defaultCaseBlock25267); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE569); }

            pushFollow(FOLLOW_block_in_defaultCaseBlock25284);
            block570=block();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(block570); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "defaultCaseBlock"



    // $ANTLR start "caseItemList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3847:1: caseItemList returns [CaseItem item] : LPAREN (ci= caseItem )? RPAREN ;
    public CaseItem caseItemList() throws RecognitionException {
        CaseItem item = null;


        Token RPAREN571=null;
        CaseItem ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3848:5: ( LPAREN (ci= caseItem )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3848:7: LPAREN (ci= caseItem )? RPAREN
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_caseItemList25313); if (state.failed) return item;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3849:7: (ci= caseItem )?
            int alt325=2;
            int LA325_0 = input.LA(1);

            if ( (LA325_0==BACKTICK||LA325_0==CHAR_LITERAL||(LA325_0 >= DECREMENT_OP && LA325_0 <= DIFFERENCE_OP)||LA325_0==DYNAMIC||LA325_0==FLOAT_LITERAL||LA325_0==INCREMENT_OP||LA325_0==IS_OP||(LA325_0 >= LBRACE && LA325_0 <= LBRACKET)||LA325_0==LIDENTIFIER||LA325_0==LPAREN||LA325_0==NATURAL_LITERAL||LA325_0==OBJECT_DEFINITION||(LA325_0 >= OUTER && LA325_0 <= PACKAGE)||LA325_0==SATISFIES||LA325_0==STRING_LITERAL||LA325_0==STRING_START||(LA325_0 >= SUM_OP && LA325_0 <= SUPER)||LA325_0==THIS||LA325_0==UIDENTIFIER||LA325_0==VERBATIM_STRING) ) {
                alt325=1;
            }
            switch (alt325) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3850:9: ci= caseItem
                    {
                    pushFollow(FOLLOW_caseItem_in_caseItemList25334);
                    ci=caseItem();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item = ci; }

                    }
                    break;

            }


            RPAREN571=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_caseItemList25361); if (state.failed) return item;

            if ( state.backtracking==0 ) { if (item!=null) 
                        item.setEndToken(RPAREN571); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "caseItemList"



    // $ANTLR start "caseItem"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3858:1: caseItem returns [CaseItem item] : ( ( IS_OP )=> isCaseCondition | ( SATISFIES )=> satisfiesCaseCondition | matchCaseCondition );
    public CaseItem caseItem() throws RecognitionException {
        CaseItem item = null;


        IsCase isCaseCondition572 =null;

        SatisfiesCase satisfiesCaseCondition573 =null;

        MatchCase matchCaseCondition574 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3859:5: ( ( IS_OP )=> isCaseCondition | ( SATISFIES )=> satisfiesCaseCondition | matchCaseCondition )
            int alt326=3;
            int LA326_0 = input.LA(1);

            if ( (LA326_0==IS_OP) && (synpred46_Ceylon())) {
                alt326=1;
            }
            else if ( (LA326_0==SATISFIES) && (synpred47_Ceylon())) {
                alt326=2;
            }
            else if ( (LA326_0==BACKTICK||LA326_0==CHAR_LITERAL||(LA326_0 >= DECREMENT_OP && LA326_0 <= DIFFERENCE_OP)||LA326_0==DYNAMIC||LA326_0==FLOAT_LITERAL||LA326_0==INCREMENT_OP||(LA326_0 >= LBRACE && LA326_0 <= LBRACKET)||LA326_0==LIDENTIFIER||LA326_0==LPAREN||LA326_0==NATURAL_LITERAL||LA326_0==OBJECT_DEFINITION||(LA326_0 >= OUTER && LA326_0 <= PACKAGE)||LA326_0==STRING_LITERAL||LA326_0==STRING_START||(LA326_0 >= SUM_OP && LA326_0 <= SUPER)||LA326_0==THIS||LA326_0==UIDENTIFIER||LA326_0==VERBATIM_STRING) ) {
                alt326=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return item;}
                NoViableAltException nvae =
                    new NoViableAltException("", 326, 0, input);

                throw nvae;

            }
            switch (alt326) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3859:7: ( IS_OP )=> isCaseCondition
                    {
                    pushFollow(FOLLOW_isCaseCondition_in_caseItem25395);
                    isCaseCondition572=isCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =isCaseCondition572; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3861:7: ( SATISFIES )=> satisfiesCaseCondition
                    {
                    pushFollow(FOLLOW_satisfiesCaseCondition_in_caseItem25416);
                    satisfiesCaseCondition573=satisfiesCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =satisfiesCaseCondition573; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3863:7: matchCaseCondition
                    {
                    pushFollow(FOLLOW_matchCaseCondition_in_caseItem25432);
                    matchCaseCondition574=matchCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =matchCaseCondition574; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "caseItem"



    // $ANTLR start "matchCaseCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3867:1: matchCaseCondition returns [MatchCase item] : valueCaseList ;
    public MatchCase matchCaseCondition() throws RecognitionException {
        MatchCase item = null;


        ExpressionList valueCaseList575 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3868:5: ( valueCaseList )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3868:7: valueCaseList
            {
            pushFollow(FOLLOW_valueCaseList_in_matchCaseCondition25461);
            valueCaseList575=valueCaseList();

            state._fsp--;
            if (state.failed) return item;

            if ( state.backtracking==0 ) { item = new MatchCase(null);
                    item.setExpressionList(valueCaseList575); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "matchCaseCondition"



    // $ANTLR start "isCaseCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3873:1: isCaseCondition returns [IsCase item] : IS_OP type ;
    public IsCase isCaseCondition() throws RecognitionException {
        IsCase item = null;


        Token IS_OP576=null;
        StaticType type577 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3874:5: ( IS_OP type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3874:7: IS_OP type
            {
            IS_OP576=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_isCaseCondition25490); if (state.failed) return item;

            if ( state.backtracking==0 ) { item = new IsCase(IS_OP576); }

            pushFollow(FOLLOW_type_in_isCaseCondition25507);
            type577=type();

            state._fsp--;
            if (state.failed) return item;

            if ( state.backtracking==0 ) { item.setType(type577); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "isCaseCondition"



    // $ANTLR start "satisfiesCaseCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3880:1: satisfiesCaseCondition returns [SatisfiesCase item] : SATISFIES type ;
    public SatisfiesCase satisfiesCaseCondition() throws RecognitionException {
        SatisfiesCase item = null;


        Token SATISFIES578=null;
        StaticType type579 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3881:5: ( SATISFIES type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3881:7: SATISFIES type
            {
            SATISFIES578=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiesCaseCondition25536); if (state.failed) return item;

            if ( state.backtracking==0 ) { item = new SatisfiesCase(SATISFIES578); }

            pushFollow(FOLLOW_type_in_satisfiesCaseCondition25553);
            type579=type();

            state._fsp--;
            if (state.failed) return item;

            if ( state.backtracking==0 ) { item.setType(type579); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "satisfiesCaseCondition"



    // $ANTLR start "forElse"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3887:1: forElse returns [ForStatement statement] : forBlock ( failBlock )? ;
    public ForStatement forElse() throws RecognitionException {
        ForStatement statement = null;


        ForClause forBlock580 =null;

        ElseClause failBlock581 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3888:5: ( forBlock ( failBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3888:7: forBlock ( failBlock )?
            {
            if ( state.backtracking==0 ) { statement =new ForStatement(null); }

            pushFollow(FOLLOW_forBlock_in_forElse25590);
            forBlock580=forBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setForClause(forBlock580); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3891:7: ( failBlock )?
            int alt327=2;
            int LA327_0 = input.LA(1);

            if ( (LA327_0==ELSE_CLAUSE) ) {
                alt327=1;
            }
            switch (alt327) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3892:9: failBlock
                    {
                    pushFollow(FOLLOW_failBlock_in_forElse25617);
                    failBlock581=failBlock();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setElseClause(failBlock581); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "forElse"



    // $ANTLR start "forBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3897:1: forBlock returns [ForClause clause] : FOR_CLAUSE forIterator controlBlock ;
    public ForClause forBlock() throws RecognitionException {
        ForClause clause = null;


        Token FOR_CLAUSE582=null;
        ForIterator forIterator583 =null;

        Block controlBlock584 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3898:5: ( FOR_CLAUSE forIterator controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3898:7: FOR_CLAUSE forIterator controlBlock
            {
            FOR_CLAUSE582=(Token)match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_forBlock25657); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ForClause(FOR_CLAUSE582); }

            pushFollow(FOLLOW_forIterator_in_forBlock25674);
            forIterator583=forIterator();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setForIterator(forIterator583); }

            pushFollow(FOLLOW_controlBlock_in_forBlock25691);
            controlBlock584=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock584); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "forBlock"



    // $ANTLR start "failBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3906:1: failBlock returns [ElseClause clause] : ELSE_CLAUSE controlBlock ;
    public ElseClause failBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE585=null;
        Block controlBlock586 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3907:5: ( ELSE_CLAUSE controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3907:7: ELSE_CLAUSE controlBlock
            {
            ELSE_CLAUSE585=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_failBlock25720); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE585); }

            pushFollow(FOLLOW_controlBlock_in_failBlock25737);
            controlBlock586=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock586); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "failBlock"



    // $ANTLR start "forIterator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3913:1: forIterator returns [ForIterator iterator] : LPAREN ( ( ( patternStart )=> pattern | variable ) ( containment )? )? RPAREN ;
    public ForIterator forIterator() throws RecognitionException {
        ForIterator iterator = null;


        Token LPAREN587=null;
        Token RPAREN591=null;
        Pattern pattern588 =null;

        Variable variable589 =null;

        SpecifierExpression containment590 =null;


         ValueIterator vi = null;
                    PatternIterator pi = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3916:5: ( LPAREN ( ( ( patternStart )=> pattern | variable ) ( containment )? )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3916:7: LPAREN ( ( ( patternStart )=> pattern | variable ) ( containment )? )? RPAREN
            {
            LPAREN587=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_forIterator25775); if (state.failed) return iterator;

            if ( state.backtracking==0 ) { vi = new ValueIterator(LPAREN587); 
            	      pi = new PatternIterator(LPAREN587); 
            	      iterator = vi; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3920:6: ( ( ( patternStart )=> pattern | variable ) ( containment )? )?
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==COMPILER_ANNOTATION||LA330_0==FUNCTION_MODIFIER||(LA330_0 >= LBRACE && LA330_0 <= LBRACKET)||LA330_0==LIDENTIFIER||LA330_0==PACKAGE||LA330_0==SMALLER_OP||LA330_0==UIDENTIFIER||LA330_0==VALUE_MODIFIER||LA330_0==VOID_MODIFIER) ) {
                alt330=1;
            }
            switch (alt330) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3921:8: ( ( patternStart )=> pattern | variable ) ( containment )?
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3921:8: ( ( patternStart )=> pattern | variable )
                    int alt328=2;
                    switch ( input.LA(1) ) {
                    case LBRACKET:
                        {
                        int LA328_1 = input.LA(2);

                        if ( (synpred48_Ceylon()) ) {
                            alt328=1;
                        }
                        else if ( (true) ) {
                            alt328=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 328, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case COMPILER_ANNOTATION:
                        {
                        int LA328_2 = input.LA(2);

                        if ( (synpred48_Ceylon()) ) {
                            alt328=1;
                        }
                        else if ( (true) ) {
                            alt328=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 328, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case SMALLER_OP:
                        {
                        int LA328_3 = input.LA(2);

                        if ( (synpred48_Ceylon()) ) {
                            alt328=1;
                        }
                        else if ( (true) ) {
                            alt328=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 328, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case UIDENTIFIER:
                        {
                        int LA328_4 = input.LA(2);

                        if ( (synpred48_Ceylon()) ) {
                            alt328=1;
                        }
                        else if ( (true) ) {
                            alt328=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 328, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case PACKAGE:
                        {
                        int LA328_5 = input.LA(2);

                        if ( (synpred48_Ceylon()) ) {
                            alt328=1;
                        }
                        else if ( (true) ) {
                            alt328=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 328, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case LBRACE:
                        {
                        int LA328_6 = input.LA(2);

                        if ( (synpred48_Ceylon()) ) {
                            alt328=1;
                        }
                        else if ( (true) ) {
                            alt328=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 328, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case VOID_MODIFIER:
                        {
                        int LA328_7 = input.LA(2);

                        if ( (synpred48_Ceylon()) ) {
                            alt328=1;
                        }
                        else if ( (true) ) {
                            alt328=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 328, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case FUNCTION_MODIFIER:
                        {
                        int LA328_8 = input.LA(2);

                        if ( (synpred48_Ceylon()) ) {
                            alt328=1;
                        }
                        else if ( (true) ) {
                            alt328=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 328, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case VALUE_MODIFIER:
                        {
                        int LA328_9 = input.LA(2);

                        if ( (synpred48_Ceylon()) ) {
                            alt328=1;
                        }
                        else if ( (true) ) {
                            alt328=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 328, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case LIDENTIFIER:
                        {
                        int LA328_10 = input.LA(2);

                        if ( (synpred48_Ceylon()) ) {
                            alt328=1;
                        }
                        else if ( (true) ) {
                            alt328=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 328, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return iterator;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 328, 0, input);

                        throw nvae;

                    }

                    switch (alt328) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3922:10: ( patternStart )=> pattern
                            {
                            pushFollow(FOLLOW_pattern_in_forIterator25816);
                            pattern588=pattern();

                            state._fsp--;
                            if (state.failed) return iterator;

                            if ( state.backtracking==0 ) { pi.setPattern(pattern588);
                            	          iterator = pi; }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3926:10: variable
                            {
                            pushFollow(FOLLOW_variable_in_forIterator25847);
                            variable589=variable();

                            state._fsp--;
                            if (state.failed) return iterator;

                            if ( state.backtracking==0 ) { vi.setVariable(variable589); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3929:8: ( containment )?
                    int alt329=2;
                    int LA329_0 = input.LA(1);

                    if ( (LA329_0==IN_OP) ) {
                        alt329=1;
                    }
                    switch (alt329) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3930:10: containment
                            {
                            pushFollow(FOLLOW_containment_in_forIterator25887);
                            containment590=containment();

                            state._fsp--;
                            if (state.failed) return iterator;

                            if ( state.backtracking==0 ) { iterator.setSpecifierExpression(containment590); }

                            }
                            break;

                    }


                    }
                    break;

            }


            RPAREN591=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_forIterator25923); if (state.failed) return iterator;

            if ( state.backtracking==0 ) { iterator.setEndToken(RPAREN591); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return iterator;
    }
    // $ANTLR end "forIterator"



    // $ANTLR start "containment"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3938:1: containment returns [SpecifierExpression specifierExpression] : IN_OP ( expression )? ;
    public SpecifierExpression containment() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token IN_OP592=null;
        Expression expression593 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3939:5: ( IN_OP ( expression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3939:7: IN_OP ( expression )?
            {
            IN_OP592=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_containment25955); if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression = new SpecifierExpression(IN_OP592); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3941:7: ( expression )?
            int alt331=2;
            int LA331_0 = input.LA(1);

            if ( (LA331_0==BACKTICK||LA331_0==CHAR_LITERAL||(LA331_0 >= DECREMENT_OP && LA331_0 <= DIFFERENCE_OP)||LA331_0==DYNAMIC||LA331_0==FLOAT_LITERAL||LA331_0==INCREMENT_OP||(LA331_0 >= LBRACE && LA331_0 <= LBRACKET)||LA331_0==LIDENTIFIER||LA331_0==LPAREN||LA331_0==NATURAL_LITERAL||(LA331_0 >= NOT_OP && LA331_0 <= OBJECT_DEFINITION)||(LA331_0 >= OUTER && LA331_0 <= PACKAGE)||LA331_0==STRING_LITERAL||LA331_0==STRING_START||(LA331_0 >= SUM_OP && LA331_0 <= SUPER)||LA331_0==THIS||LA331_0==UIDENTIFIER||LA331_0==VERBATIM_STRING) ) {
                alt331=1;
            }
            switch (alt331) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3941:8: expression
                    {
                    pushFollow(FOLLOW_expression_in_containment25973);
                    expression593=expression();

                    state._fsp--;
                    if (state.failed) return specifierExpression;

                    if ( state.backtracking==0 ) { specifierExpression.setExpression(expression593); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "containment"



    // $ANTLR start "whileLoop"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3945:1: whileLoop returns [WhileStatement statement] : whileBlock ;
    public WhileStatement whileLoop() throws RecognitionException {
        WhileStatement statement = null;


        WhileClause whileBlock594 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3946:5: ( whileBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3946:7: whileBlock
            {
            if ( state.backtracking==0 ) { statement = new WhileStatement(null); }

            pushFollow(FOLLOW_whileBlock_in_whileLoop26016);
            whileBlock594=whileBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setWhileClause(whileBlock594); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "whileLoop"



    // $ANTLR start "whileBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3951:1: whileBlock returns [WhileClause clause] : WHILE_CLAUSE conditions controlBlock ;
    public WhileClause whileBlock() throws RecognitionException {
        WhileClause clause = null;


        Token WHILE_CLAUSE595=null;
        ConditionList conditions596 =null;

        Block controlBlock597 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3952:5: ( WHILE_CLAUSE conditions controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3952:7: WHILE_CLAUSE conditions controlBlock
            {
            WHILE_CLAUSE595=(Token)match(input,WHILE_CLAUSE,FOLLOW_WHILE_CLAUSE_in_whileBlock26045); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new WhileClause(WHILE_CLAUSE595); }

            pushFollow(FOLLOW_conditions_in_whileBlock26061);
            conditions596=conditions();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setConditionList(conditions596); }

            pushFollow(FOLLOW_controlBlock_in_whileBlock26077);
            controlBlock597=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock597); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "whileBlock"



    // $ANTLR start "tryCatchFinally"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3960:1: tryCatchFinally returns [TryCatchStatement statement] : tryBlock ( catchBlock )* ( finallyBlock )? ;
    public TryCatchStatement tryCatchFinally() throws RecognitionException {
        TryCatchStatement statement = null;


        TryClause tryBlock598 =null;

        CatchClause catchBlock599 =null;

        FinallyClause finallyBlock600 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3961:5: ( tryBlock ( catchBlock )* ( finallyBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3961:7: tryBlock ( catchBlock )* ( finallyBlock )?
            {
            if ( state.backtracking==0 ) { statement = new TryCatchStatement(null); }

            pushFollow(FOLLOW_tryBlock_in_tryCatchFinally26114);
            tryBlock598=tryBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setTryClause(tryBlock598); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3964:7: ( catchBlock )*
            loop332:
            do {
                int alt332=2;
                int LA332_0 = input.LA(1);

                if ( (LA332_0==CATCH_CLAUSE) ) {
                    alt332=1;
                }


                switch (alt332) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3965:9: catchBlock
            	    {
            	    pushFollow(FOLLOW_catchBlock_in_tryCatchFinally26141);
            	    catchBlock599=catchBlock();

            	    state._fsp--;
            	    if (state.failed) return statement;

            	    if ( state.backtracking==0 ) { statement.addCatchClause(catchBlock599); }

            	    }
            	    break;

            	default :
            	    break loop332;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3968:7: ( finallyBlock )?
            int alt333=2;
            int LA333_0 = input.LA(1);

            if ( (LA333_0==FINALLY_CLAUSE) ) {
                alt333=1;
            }
            switch (alt333) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3969:9: finallyBlock
                    {
                    pushFollow(FOLLOW_finallyBlock_in_tryCatchFinally26180);
                    finallyBlock600=finallyBlock();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setFinallyClause(finallyBlock600); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "tryCatchFinally"



    // $ANTLR start "tryBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3974:1: tryBlock returns [TryClause clause] : TRY_CLAUSE ( resources controlBlock | block ) ;
    public TryClause tryBlock() throws RecognitionException {
        TryClause clause = null;


        Token TRY_CLAUSE601=null;
        ResourceList resources602 =null;

        Block controlBlock603 =null;

        Block block604 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3975:5: ( TRY_CLAUSE ( resources controlBlock | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3975:7: TRY_CLAUSE ( resources controlBlock | block )
            {
            TRY_CLAUSE601=(Token)match(input,TRY_CLAUSE,FOLLOW_TRY_CLAUSE_in_tryBlock26220); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new TryClause(TRY_CLAUSE601); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3977:7: ( resources controlBlock | block )
            int alt334=2;
            int LA334_0 = input.LA(1);

            if ( (LA334_0==LPAREN) ) {
                alt334=1;
            }
            else if ( (LA334_0==LBRACE) ) {
                alt334=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return clause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 334, 0, input);

                throw nvae;

            }
            switch (alt334) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3978:9: resources controlBlock
                    {
                    pushFollow(FOLLOW_resources_in_tryBlock26247);
                    resources602=resources();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setResourceList(resources602); }

                    pushFollow(FOLLOW_controlBlock_in_tryBlock26267);
                    controlBlock603=controlBlock();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(controlBlock603); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3983:9: block
                    {
                    pushFollow(FOLLOW_block_in_tryBlock26295);
                    block604=block();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(block604); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "tryBlock"



    // $ANTLR start "catchBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3988:1: catchBlock returns [CatchClause clause] : CATCH_CLAUSE catchVariable controlBlock ;
    public CatchClause catchBlock() throws RecognitionException {
        CatchClause clause = null;


        Token CATCH_CLAUSE605=null;
        CatchVariable catchVariable606 =null;

        Block controlBlock607 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3989:5: ( CATCH_CLAUSE catchVariable controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3989:7: CATCH_CLAUSE catchVariable controlBlock
            {
            CATCH_CLAUSE605=(Token)match(input,CATCH_CLAUSE,FOLLOW_CATCH_CLAUSE_in_catchBlock26334); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new CatchClause(CATCH_CLAUSE605); }

            pushFollow(FOLLOW_catchVariable_in_catchBlock26351);
            catchVariable606=catchVariable();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setCatchVariable(catchVariable606); }

            pushFollow(FOLLOW_controlBlock_in_catchBlock26367);
            controlBlock607=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock607); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "catchBlock"



    // $ANTLR start "catchVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3997:1: catchVariable returns [CatchVariable catchVariable] : LPAREN ( variable )? RPAREN ;
    public CatchVariable catchVariable() throws RecognitionException {
        CatchVariable catchVariable = null;


        Token LPAREN608=null;
        Token RPAREN610=null;
        Variable variable609 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3998:5: ( LPAREN ( variable )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3998:7: LPAREN ( variable )? RPAREN
            {
            LPAREN608=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_catchVariable26396); if (state.failed) return catchVariable;

            if ( state.backtracking==0 ) { catchVariable =new CatchVariable(LPAREN608); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4000:7: ( variable )?
            int alt335=2;
            int LA335_0 = input.LA(1);

            if ( (LA335_0==ALIAS||(LA335_0 >= ASSERT && LA335_0 <= ASSIGN)||(LA335_0 >= BACKTICK && LA335_0 <= BREAK)||(LA335_0 >= CHAR_LITERAL && LA335_0 <= CLASS_DEFINITION)||LA335_0==COMPILER_ANNOTATION||LA335_0==CONTINUE||(LA335_0 >= DECREMENT_OP && LA335_0 <= DIFFERENCE_OP)||LA335_0==DYNAMIC||(LA335_0 >= FLOAT_LITERAL && LA335_0 <= FUNCTION_MODIFIER)||(LA335_0 >= IF_CLAUSE && LA335_0 <= INTERFACE_DEFINITION)||LA335_0==IN_OP||(LA335_0 >= LBRACE && LA335_0 <= LIDENTIFIER)||LA335_0==LPAREN||LA335_0==MODULE||(LA335_0 >= NATURAL_LITERAL && LA335_0 <= NEW)||(LA335_0 >= NOT_OP && LA335_0 <= OBJECT_DEFINITION)||(LA335_0 >= OUT && LA335_0 <= PACKAGE)||LA335_0==PRODUCT_OP||LA335_0==RETURN||(LA335_0 >= SEMICOLON && LA335_0 <= SMALLER_OP)||LA335_0==STRING_LITERAL||LA335_0==STRING_START||(LA335_0 >= SUM_OP && LA335_0 <= SWITCH_CLAUSE)||(LA335_0 >= THIS && LA335_0 <= UIDENTIFIER)||(LA335_0 >= VALUE_MODIFIER && LA335_0 <= WHILE_CLAUSE)) ) {
                alt335=1;
            }
            switch (alt335) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4001:7: variable
                    {
                    pushFollow(FOLLOW_variable_in_catchVariable26421);
                    variable609=variable();

                    state._fsp--;
                    if (state.failed) return catchVariable;

                    if ( state.backtracking==0 ) { catchVariable.setVariable(variable609); }

                    }
                    break;

            }


            RPAREN610=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_catchVariable26447); if (state.failed) return catchVariable;

            if ( state.backtracking==0 ) { catchVariable.setEndToken(RPAREN610); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return catchVariable;
    }
    // $ANTLR end "catchVariable"



    // $ANTLR start "finallyBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4009:1: finallyBlock returns [FinallyClause clause] : FINALLY_CLAUSE controlBlock ;
    public FinallyClause finallyBlock() throws RecognitionException {
        FinallyClause clause = null;


        Token FINALLY_CLAUSE611=null;
        Block controlBlock612 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4010:5: ( FINALLY_CLAUSE controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4010:7: FINALLY_CLAUSE controlBlock
            {
            FINALLY_CLAUSE611=(Token)match(input,FINALLY_CLAUSE,FOLLOW_FINALLY_CLAUSE_in_finallyBlock26478); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new FinallyClause(FINALLY_CLAUSE611); }

            pushFollow(FOLLOW_controlBlock_in_finallyBlock26495);
            controlBlock612=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock612); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "finallyBlock"



    // $ANTLR start "resources"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4016:1: resources returns [ResourceList resources] : LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN ;
    public ResourceList resources() throws RecognitionException {
        ResourceList resources = null;


        Token c=null;
        Token LPAREN613=null;
        Token RPAREN614=null;
        Resource r1 =null;

        Resource r2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4017:5: ( LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4017:7: LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN
            {
            LPAREN613=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_resources26524); if (state.failed) return resources;

            if ( state.backtracking==0 ) { resources = new ResourceList(LPAREN613); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4019:6: (r1= resource (c= COMMA r2= resource )* )?
            int alt337=2;
            int LA337_0 = input.LA(1);

            if ( (LA337_0==BACKTICK||LA337_0==CHAR_LITERAL||LA337_0==COMPILER_ANNOTATION||(LA337_0 >= DECREMENT_OP && LA337_0 <= DIFFERENCE_OP)||LA337_0==DYNAMIC||LA337_0==FLOAT_LITERAL||LA337_0==FUNCTION_MODIFIER||LA337_0==INCREMENT_OP||(LA337_0 >= LBRACE && LA337_0 <= LBRACKET)||LA337_0==LIDENTIFIER||LA337_0==LPAREN||LA337_0==NATURAL_LITERAL||(LA337_0 >= NOT_OP && LA337_0 <= OBJECT_DEFINITION)||(LA337_0 >= OUTER && LA337_0 <= PACKAGE)||LA337_0==SMALLER_OP||LA337_0==STRING_LITERAL||LA337_0==STRING_START||(LA337_0 >= SUM_OP && LA337_0 <= SUPER)||LA337_0==THIS||LA337_0==UIDENTIFIER||(LA337_0 >= VALUE_MODIFIER && LA337_0 <= VOID_MODIFIER)) ) {
                alt337=1;
            }
            switch (alt337) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4020:8: r1= resource (c= COMMA r2= resource )*
                    {
                    pushFollow(FOLLOW_resource_in_resources26550);
                    r1=resource();

                    state._fsp--;
                    if (state.failed) return resources;

                    if ( state.backtracking==0 ) { resources.addResource(r1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4022:8: (c= COMMA r2= resource )*
                    loop336:
                    do {
                        int alt336=2;
                        int LA336_0 = input.LA(1);

                        if ( (LA336_0==COMMA) ) {
                            alt336=1;
                        }


                        switch (alt336) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4023:10: c= COMMA r2= resource
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_resources26581); if (state.failed) return resources;

                    	    if ( state.backtracking==0 ) { resources.setEndToken(c); }

                    	    pushFollow(FOLLOW_resource_in_resources26606);
                    	    r2=resource();

                    	    state._fsp--;
                    	    if (state.failed) return resources;

                    	    if ( state.backtracking==0 ) { resources.addResource(r2);
                    	    	          resources.setEndToken(null); }

                    	    }
                    	    break;

                    	default :
                    	    break loop336;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN614=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_resources26642); if (state.failed) return resources;

            if ( state.backtracking==0 ) { resources.setEndToken(RPAREN614); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return resources;
    }
    // $ANTLR end "resources"



    // $ANTLR start "resource"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4034:1: resource returns [Resource resource] : ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression );
    public Resource resource() throws RecognitionException {
        Resource resource = null;


        Variable specifiedVariable615 =null;

        Expression expression616 =null;


         resource = new Resource(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4036:5: ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression )
            int alt338=2;
            int LA338_0 = input.LA(1);

            if ( (LA338_0==COMPILER_ANNOTATION) && (synpred49_Ceylon())) {
                alt338=1;
            }
            else if ( (LA338_0==SMALLER_OP) && (synpred49_Ceylon())) {
                alt338=1;
            }
            else if ( (LA338_0==UIDENTIFIER) ) {
                int LA338_3 = input.LA(2);

                if ( (synpred49_Ceylon()) ) {
                    alt338=1;
                }
                else if ( (true) ) {
                    alt338=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 338, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA338_0==PACKAGE) ) {
                int LA338_4 = input.LA(2);

                if ( (synpred49_Ceylon()) ) {
                    alt338=1;
                }
                else if ( (true) ) {
                    alt338=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 338, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA338_0==LBRACKET) ) {
                int LA338_5 = input.LA(2);

                if ( (synpred49_Ceylon()) ) {
                    alt338=1;
                }
                else if ( (true) ) {
                    alt338=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 338, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA338_0==LBRACE) ) {
                int LA338_6 = input.LA(2);

                if ( (synpred49_Ceylon()) ) {
                    alt338=1;
                }
                else if ( (true) ) {
                    alt338=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 338, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA338_0==VOID_MODIFIER) && (synpred49_Ceylon())) {
                alt338=1;
            }
            else if ( (LA338_0==FUNCTION_MODIFIER) && (synpred49_Ceylon())) {
                alt338=1;
            }
            else if ( (LA338_0==VALUE_MODIFIER) && (synpred49_Ceylon())) {
                alt338=1;
            }
            else if ( (LA338_0==LIDENTIFIER) ) {
                int LA338_10 = input.LA(2);

                if ( (synpred49_Ceylon()) ) {
                    alt338=1;
                }
                else if ( (true) ) {
                    alt338=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 338, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA338_0==BACKTICK||LA338_0==CHAR_LITERAL||(LA338_0 >= DECREMENT_OP && LA338_0 <= DIFFERENCE_OP)||LA338_0==DYNAMIC||LA338_0==FLOAT_LITERAL||LA338_0==INCREMENT_OP||LA338_0==LPAREN||LA338_0==NATURAL_LITERAL||(LA338_0 >= NOT_OP && LA338_0 <= OBJECT_DEFINITION)||LA338_0==OUTER||LA338_0==STRING_LITERAL||LA338_0==STRING_START||(LA338_0 >= SUM_OP && LA338_0 <= SUPER)||LA338_0==THIS||LA338_0==VERBATIM_STRING) ) {
                alt338=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return resource;}
                NoViableAltException nvae =
                    new NoViableAltException("", 338, 0, input);

                throw nvae;

            }
            switch (alt338) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4037:7: ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable
                    {
                    pushFollow(FOLLOW_specifiedVariable_in_resource26703);
                    specifiedVariable615=specifiedVariable();

                    state._fsp--;
                    if (state.failed) return resource;

                    if ( state.backtracking==0 ) { resource.setVariable(specifiedVariable615); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4041:7: expression
                    {
                    pushFollow(FOLLOW_expression_in_resource26726);
                    expression616=expression();

                    state._fsp--;
                    if (state.failed) return resource;

                    if ( state.backtracking==0 ) { resource.setExpression(expression616); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return resource;
    }
    // $ANTLR end "resource"



    // $ANTLR start "specifiedVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4045:1: specifiedVariable returns [Variable variable] : v= variable ( specifier )? ;
    public Variable specifiedVariable() throws RecognitionException {
        Variable variable = null;


        Variable v =null;

        SpecifierExpression specifier617 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4046:5: (v= variable ( specifier )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4046:7: v= variable ( specifier )?
            {
            pushFollow(FOLLOW_variable_in_specifiedVariable26757);
            v=variable();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable = v; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4048:7: ( specifier )?
            int alt339=2;
            int LA339_0 = input.LA(1);

            if ( (LA339_0==SPECIFY) ) {
                alt339=1;
            }
            switch (alt339) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4049:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_specifiedVariable26784);
                    specifier617=specifier();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setSpecifierExpression(specifier617); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "specifiedVariable"



    // $ANTLR start "variable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4054:1: variable returns [Variable variable] : compilerAnnotations var ;
    public Variable variable() throws RecognitionException {
        Variable variable = null;


        Variable var618 =null;

        List<CompilerAnnotation> compilerAnnotations619 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4055:5: ( compilerAnnotations var )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4055:7: compilerAnnotations var
            {
            pushFollow(FOLLOW_compilerAnnotations_in_variable26824);
            compilerAnnotations619=compilerAnnotations();

            state._fsp--;
            if (state.failed) return variable;

            pushFollow(FOLLOW_var_in_variable26832);
            var618=var();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable =var618;
                    variable.getCompilerAnnotations().addAll(compilerAnnotations619); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "variable"



    // $ANTLR start "var"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4061:1: var returns [Variable variable] : ( ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )* |mn2= memberName (p2= parameters )* );
    public Variable var() throws RecognitionException {
        Variable variable = null;


        Token VOID_MODIFIER621=null;
        Token FUNCTION_MODIFIER622=null;
        Token VALUE_MODIFIER623=null;
        Identifier mn1 =null;

        ParameterList p1 =null;

        Identifier mn2 =null;

        ParameterList p2 =null;

        StaticType type620 =null;


         variable = new Variable(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4063:5: ( ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )* |mn2= memberName (p2= parameters )* )
            int alt343=2;
            int LA343_0 = input.LA(1);

            if ( (LA343_0==FUNCTION_MODIFIER||(LA343_0 >= LBRACE && LA343_0 <= LBRACKET)||LA343_0==PACKAGE||LA343_0==SMALLER_OP||LA343_0==UIDENTIFIER||LA343_0==VALUE_MODIFIER||LA343_0==VOID_MODIFIER) ) {
                alt343=1;
            }
            else if ( (LA343_0==LIDENTIFIER) ) {
                alt343=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return variable;}
                NoViableAltException nvae =
                    new NoViableAltException("", 343, 0, input);

                throw nvae;

            }
            switch (alt343) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4064:7: ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )*
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4064:7: ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER )
                    int alt340=4;
                    switch ( input.LA(1) ) {
                    case LBRACE:
                    case LBRACKET:
                    case PACKAGE:
                    case SMALLER_OP:
                    case UIDENTIFIER:
                        {
                        alt340=1;
                        }
                        break;
                    case VOID_MODIFIER:
                        {
                        alt340=2;
                        }
                        break;
                    case FUNCTION_MODIFIER:
                        {
                        alt340=3;
                        }
                        break;
                    case VALUE_MODIFIER:
                        {
                        alt340=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return variable;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 340, 0, input);

                        throw nvae;

                    }

                    switch (alt340) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4065:9: type
                            {
                            pushFollow(FOLLOW_type_in_var26892);
                            type620=type();

                            state._fsp--;
                            if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(type620); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4068:9: VOID_MODIFIER
                            {
                            VOID_MODIFIER621=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_var26922); if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(new VoidModifier(VOID_MODIFIER621)); }

                            }
                            break;
                        case 3 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4071:9: FUNCTION_MODIFIER
                            {
                            FUNCTION_MODIFIER622=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_var26951); if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(new FunctionModifier(FUNCTION_MODIFIER622)); }

                            }
                            break;
                        case 4 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4074:9: VALUE_MODIFIER
                            {
                            VALUE_MODIFIER623=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_var26980); if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(new ValueModifier(VALUE_MODIFIER623)); }

                            }
                            break;

                    }


                    pushFollow(FOLLOW_memberName_in_var27008);
                    mn1=memberName();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setIdentifier(mn1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4079:7: (p1= parameters )*
                    loop341:
                    do {
                        int alt341=2;
                        int LA341_0 = input.LA(1);

                        if ( (LA341_0==LPAREN) ) {
                            alt341=1;
                        }


                        switch (alt341) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4080:9: p1= parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_var27038);
                    	    p1=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return variable;

                    	    if ( state.backtracking==0 ) { variable.addParameterList(p1); }

                    	    }
                    	    break;

                    	default :
                    	    break loop341;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4084:7: mn2= memberName (p2= parameters )*
                    {
                    if ( state.backtracking==0 ) { variable.setType( new ValueModifier(null) ); }

                    pushFollow(FOLLOW_memberName_in_var27082);
                    mn2=memberName();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setIdentifier(mn2); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4087:7: (p2= parameters )*
                    loop342:
                    do {
                        int alt342=2;
                        int LA342_0 = input.LA(1);

                        if ( (LA342_0==LPAREN) ) {
                            alt342=1;
                        }


                        switch (alt342) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4088:9: p2= parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_var27110);
                    	    p2=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return variable;

                    	    if ( state.backtracking==0 ) { variable.setType( new FunctionModifier(null) );
                    	              variable.addParameterList(p2); }

                    	    }
                    	    break;

                    	default :
                    	    break loop342;
                        }
                    } while (true);


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "var"



    // $ANTLR start "impliedVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4094:1: impliedVariable returns [Variable variable] : memberName ;
    public Variable impliedVariable() throws RecognitionException {
        Variable variable = null;


        Identifier memberName624 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4095:5: ( memberName )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4095:7: memberName
            {
            pushFollow(FOLLOW_memberName_in_impliedVariable27150);
            memberName624=memberName();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { Variable v = new Variable(null);
                    v.setType(new SyntheticVariable(null));
                    v.setIdentifier(memberName624);
                    SpecifierExpression se = new SpecifierExpression(null);
                    Expression e = new Expression(null);
                    BaseMemberExpression bme = new BaseMemberExpression(null);
                    bme.setIdentifier(memberName624);
                    bme.setTypeArguments( new InferredTypeArguments(null) );
                    e.setTerm(bme);
                    se.setExpression(e);
                    v.setSpecifierExpression(se); 
                    variable = v; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "impliedVariable"



    // $ANTLR start "referencePathElement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4110:1: referencePathElement returns [Identifier identifier] : ( typeName | memberName );
    public Identifier referencePathElement() throws RecognitionException {
        Identifier identifier = null;


        Identifier typeName625 =null;

        Identifier memberName626 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4111:5: ( typeName | memberName )
            int alt344=2;
            int LA344_0 = input.LA(1);

            if ( (LA344_0==UIDENTIFIER) ) {
                alt344=1;
            }
            else if ( (LA344_0==LIDENTIFIER) ) {
                alt344=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 344, 0, input);

                throw nvae;

            }
            switch (alt344) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4111:7: typeName
                    {
                    pushFollow(FOLLOW_typeName_in_referencePathElement27180);
                    typeName625=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =typeName625; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4113:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_referencePathElement27197);
                    memberName626=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =memberName626; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "referencePathElement"



    // $ANTLR start "referencePath"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4117:1: referencePath returns [SimpleType type] : (e1= referencePathElement | PACKAGE o1= MEMBER_OP e2= referencePathElement ) (o2= MEMBER_OP e3= referencePathElement )* ;
    public SimpleType referencePath() throws RecognitionException {
        SimpleType type = null;


        Token o1=null;
        Token o2=null;
        Token PACKAGE627=null;
        Identifier e1 =null;

        Identifier e2 =null;

        Identifier e3 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4118:5: ( (e1= referencePathElement | PACKAGE o1= MEMBER_OP e2= referencePathElement ) (o2= MEMBER_OP e3= referencePathElement )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4118:7: (e1= referencePathElement | PACKAGE o1= MEMBER_OP e2= referencePathElement ) (o2= MEMBER_OP e3= referencePathElement )*
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4118:7: (e1= referencePathElement | PACKAGE o1= MEMBER_OP e2= referencePathElement )
            int alt345=2;
            int LA345_0 = input.LA(1);

            if ( (LA345_0==LIDENTIFIER||LA345_0==UIDENTIFIER) ) {
                alt345=1;
            }
            else if ( (LA345_0==PACKAGE) ) {
                alt345=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 345, 0, input);

                throw nvae;

            }
            switch (alt345) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4119:9: e1= referencePathElement
                    {
                    pushFollow(FOLLOW_referencePathElement_in_referencePath27242);
                    e1=referencePathElement();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { BaseType bt = new BaseType(null);
                              bt.setIdentifier(e1);
                              type = bt; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4124:9: PACKAGE o1= MEMBER_OP e2= referencePathElement
                    {
                    PACKAGE627=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_referencePath27272); if (state.failed) return type;

                    if ( state.backtracking==0 ) { BaseType pbt = new BaseType(PACKAGE627);
                    	        pbt.setPackageQualified(true);
                    	        type = pbt; }

                    o1=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_referencePath27292); if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.setEndToken(o1); }

                    pushFollow(FOLLOW_referencePathElement_in_referencePath27312);
                    e2=referencePathElement();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.setEndToken(null);
                    	        type.setIdentifier(e2); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4134:7: (o2= MEMBER_OP e3= referencePathElement )*
            loop346:
            do {
                int alt346=2;
                int LA346_0 = input.LA(1);

                if ( (LA346_0==MEMBER_OP) ) {
                    alt346=1;
                }


                switch (alt346) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4135:9: o2= MEMBER_OP e3= referencePathElement
            	    {
            	    o2=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_referencePath27349); if (state.failed) return type;

            	    pushFollow(FOLLOW_referencePathElement_in_referencePath27361);
            	    e3=referencePathElement();

            	    state._fsp--;
            	    if (state.failed) return type;

            	    if ( state.backtracking==0 ) { QualifiedType qt = new QualifiedType(o2);
            	              qt.setIdentifier(e3);
            	              qt.setOuterType(type);
            	              type = qt; }

            	    }
            	    break;

            	default :
            	    break loop346;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "referencePath"



    // $ANTLR start "moduleLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4144:1: moduleLiteral returns [ModuleLiteral literal] : MODULE (p1= packagePath )? ;
    public ModuleLiteral moduleLiteral() throws RecognitionException {
        ModuleLiteral literal = null;


        Token MODULE628=null;
        ImportPath p1 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4145:2: ( MODULE (p1= packagePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4145:4: MODULE (p1= packagePath )?
            {
            MODULE628=(Token)match(input,MODULE,FOLLOW_MODULE_in_moduleLiteral27399); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new ModuleLiteral(null);
                 literal.setEndToken(MODULE628); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4148:4: (p1= packagePath )?
            int alt347=2;
            int LA347_0 = input.LA(1);

            if ( (LA347_0==LIDENTIFIER||LA347_0==UIDENTIFIER) ) {
                alt347=1;
            }
            switch (alt347) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4149:6: p1= packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_moduleLiteral27418);
                    p1=packagePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setImportPath(p1); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "moduleLiteral"



    // $ANTLR start "packageLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4155:1: packageLiteral returns [PackageLiteral literal] : PACKAGE (p2= packagePath )? ;
    public PackageLiteral packageLiteral() throws RecognitionException {
        PackageLiteral literal = null;


        Token PACKAGE629=null;
        ImportPath p2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4156:2: ( PACKAGE (p2= packagePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4156:4: PACKAGE (p2= packagePath )?
            {
            PACKAGE629=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_packageLiteral27446); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new PackageLiteral(null);
                 literal.setEndToken(PACKAGE629); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4159:4: (p2= packagePath )?
            int alt348=2;
            int LA348_0 = input.LA(1);

            if ( (LA348_0==LIDENTIFIER||LA348_0==UIDENTIFIER) ) {
                alt348=1;
            }
            switch (alt348) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4160:6: p2= packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_packageLiteral27465);
                    p2=packagePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setImportPath(p2); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "packageLiteral"



    // $ANTLR start "classLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4166:1: classLiteral returns [ClassLiteral literal] : CLASS_DEFINITION (ct= referencePath )? ;
    public ClassLiteral classLiteral() throws RecognitionException {
        ClassLiteral literal = null;


        Token CLASS_DEFINITION630=null;
        SimpleType ct =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4167:2: ( CLASS_DEFINITION (ct= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4167:4: CLASS_DEFINITION (ct= referencePath )?
            {
            CLASS_DEFINITION630=(Token)match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_classLiteral27493); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new ClassLiteral(null);
                 literal.setEndToken(CLASS_DEFINITION630); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4170:4: (ct= referencePath )?
            int alt349=2;
            int LA349_0 = input.LA(1);

            if ( (LA349_0==LIDENTIFIER||LA349_0==PACKAGE||LA349_0==UIDENTIFIER) ) {
                alt349=1;
            }
            switch (alt349) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4171:6: ct= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_classLiteral27512);
                    ct=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(ct); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "classLiteral"



    // $ANTLR start "interfaceLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4177:1: interfaceLiteral returns [InterfaceLiteral literal] : INTERFACE_DEFINITION (it= referencePath )? ;
    public InterfaceLiteral interfaceLiteral() throws RecognitionException {
        InterfaceLiteral literal = null;


        Token INTERFACE_DEFINITION631=null;
        SimpleType it =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4178:2: ( INTERFACE_DEFINITION (it= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4178:4: INTERFACE_DEFINITION (it= referencePath )?
            {
            INTERFACE_DEFINITION631=(Token)match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_interfaceLiteral27540); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new InterfaceLiteral(null);
                 literal.setEndToken(INTERFACE_DEFINITION631); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4181:4: (it= referencePath )?
            int alt350=2;
            int LA350_0 = input.LA(1);

            if ( (LA350_0==LIDENTIFIER||LA350_0==PACKAGE||LA350_0==UIDENTIFIER) ) {
                alt350=1;
            }
            switch (alt350) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4182:6: it= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_interfaceLiteral27559);
                    it=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(it); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "interfaceLiteral"



    // $ANTLR start "newLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4188:1: newLiteral returns [NewLiteral literal] : NEW (nt= referencePath )? ;
    public NewLiteral newLiteral() throws RecognitionException {
        NewLiteral literal = null;


        Token NEW632=null;
        SimpleType nt =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4189:2: ( NEW (nt= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4189:4: NEW (nt= referencePath )?
            {
            NEW632=(Token)match(input,NEW,FOLLOW_NEW_in_newLiteral27587); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new NewLiteral(null);
                 literal.setEndToken(NEW632); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4192:4: (nt= referencePath )?
            int alt351=2;
            int LA351_0 = input.LA(1);

            if ( (LA351_0==LIDENTIFIER||LA351_0==PACKAGE||LA351_0==UIDENTIFIER) ) {
                alt351=1;
            }
            switch (alt351) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4193:6: nt= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_newLiteral27606);
                    nt=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(nt); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "newLiteral"



    // $ANTLR start "aliasLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4199:1: aliasLiteral returns [AliasLiteral literal] : ALIAS (at= referencePath )? ;
    public AliasLiteral aliasLiteral() throws RecognitionException {
        AliasLiteral literal = null;


        Token ALIAS633=null;
        SimpleType at =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4200:2: ( ALIAS (at= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4200:4: ALIAS (at= referencePath )?
            {
            ALIAS633=(Token)match(input,ALIAS,FOLLOW_ALIAS_in_aliasLiteral27634); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new AliasLiteral(null);
                 literal.setEndToken(ALIAS633); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4203:4: (at= referencePath )?
            int alt352=2;
            int LA352_0 = input.LA(1);

            if ( (LA352_0==LIDENTIFIER||LA352_0==PACKAGE||LA352_0==UIDENTIFIER) ) {
                alt352=1;
            }
            switch (alt352) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4204:6: at= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_aliasLiteral27653);
                    at=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(at); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "aliasLiteral"



    // $ANTLR start "typeParameterLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4210:1: typeParameterLiteral returns [TypeParameterLiteral literal] : TYPE_CONSTRAINT (tt= referencePath )? ;
    public TypeParameterLiteral typeParameterLiteral() throws RecognitionException {
        TypeParameterLiteral literal = null;


        Token TYPE_CONSTRAINT634=null;
        SimpleType tt =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4211:2: ( TYPE_CONSTRAINT (tt= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4211:4: TYPE_CONSTRAINT (tt= referencePath )?
            {
            TYPE_CONSTRAINT634=(Token)match(input,TYPE_CONSTRAINT,FOLLOW_TYPE_CONSTRAINT_in_typeParameterLiteral27681); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new TypeParameterLiteral(null);
                 literal.setEndToken(TYPE_CONSTRAINT634); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4214:4: (tt= referencePath )?
            int alt353=2;
            int LA353_0 = input.LA(1);

            if ( (LA353_0==LIDENTIFIER||LA353_0==PACKAGE||LA353_0==UIDENTIFIER) ) {
                alt353=1;
            }
            switch (alt353) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4215:6: tt= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_typeParameterLiteral27700);
                    tt=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(tt); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "typeParameterLiteral"



    // $ANTLR start "valueLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4221:1: valueLiteral returns [ValueLiteral literal] : ( VALUE_MODIFIER | OBJECT_DEFINITION ) vt= referencePath ;
    public ValueLiteral valueLiteral() throws RecognitionException {
        ValueLiteral literal = null;


        Token VALUE_MODIFIER635=null;
        Token OBJECT_DEFINITION636=null;
        SimpleType vt =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4222:3: ( ( VALUE_MODIFIER | OBJECT_DEFINITION ) vt= referencePath )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4222:5: ( VALUE_MODIFIER | OBJECT_DEFINITION ) vt= referencePath
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4222:5: ( VALUE_MODIFIER | OBJECT_DEFINITION )
            int alt354=2;
            int LA354_0 = input.LA(1);

            if ( (LA354_0==VALUE_MODIFIER) ) {
                alt354=1;
            }
            else if ( (LA354_0==OBJECT_DEFINITION) ) {
                alt354=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return literal;}
                NoViableAltException nvae =
                    new NoViableAltException("", 354, 0, input);

                throw nvae;

            }
            switch (alt354) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4223:7: VALUE_MODIFIER
                    {
                    VALUE_MODIFIER635=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_valueLiteral27737); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new ValueLiteral(null);
                            literal.setEndToken(VALUE_MODIFIER635); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4227:7: OBJECT_DEFINITION
                    {
                    OBJECT_DEFINITION636=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_valueLiteral27759); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new ValueLiteral(null);
                            literal.setEndToken(OBJECT_DEFINITION636);
                            literal.setBroken(true); }

                    }
                    break;

            }


            pushFollow(FOLLOW_referencePath_in_valueLiteral27781);
            vt=referencePath();

            state._fsp--;
            if (state.failed) return literal;

            if ( state.backtracking==0 ) {
                  if (vt instanceof QualifiedType) {
                    literal.setType(((QualifiedType)vt).getOuterType());
                    literal.setIdentifier(vt.getIdentifier());
                    literal.setTypeArgumentList(vt.getTypeArgumentList());
                    literal.setEndToken(null);
                  }
                  else if (vt instanceof BaseType) {
                    literal.setIdentifier(vt.getIdentifier());
                    literal.setTypeArgumentList(vt.getTypeArgumentList());
                    literal.setEndToken(null);
                  }
                }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "valueLiteral"



    // $ANTLR start "functionLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4248:1: functionLiteral returns [FunctionLiteral literal] : FUNCTION_MODIFIER ft= referencePath ;
    public FunctionLiteral functionLiteral() throws RecognitionException {
        FunctionLiteral literal = null;


        Token FUNCTION_MODIFIER637=null;
        SimpleType ft =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4249:3: ( FUNCTION_MODIFIER ft= referencePath )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4249:5: FUNCTION_MODIFIER ft= referencePath
            {
            FUNCTION_MODIFIER637=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_functionLiteral27804); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new FunctionLiteral(null);
                  literal.setEndToken(FUNCTION_MODIFIER637); }

            pushFollow(FOLLOW_referencePath_in_functionLiteral27818);
            ft=referencePath();

            state._fsp--;
            if (state.failed) return literal;

            if ( state.backtracking==0 ) {
                  if (ft instanceof QualifiedType) {
                    literal.setType(((QualifiedType)ft).getOuterType());
                    literal.setIdentifier(ft.getIdentifier());
                    literal.setTypeArgumentList(ft.getTypeArgumentList());
                    literal.setEndToken(null);
                  }
                  else if (ft instanceof BaseType) {
                    literal.setIdentifier(ft.getIdentifier());
                    literal.setTypeArgumentList(ft.getTypeArgumentList());
                    literal.setEndToken(null);
                  }
                }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "functionLiteral"


    public static class memberPathElement_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "memberPathElement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4268:1: memberPathElement returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : memberName ( typeArguments )? ;
    public PsiCompatibleCeylonParser.memberPathElement_return memberPathElement() throws RecognitionException {
        PsiCompatibleCeylonParser.memberPathElement_return retval = new PsiCompatibleCeylonParser.memberPathElement_return();
        retval.start = input.LT(1);


        Identifier memberName638 =null;

        TypeArgumentList typeArguments639 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4270:5: ( memberName ( typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4270:7: memberName ( typeArguments )?
            {
            pushFollow(FOLLOW_memberName_in_memberPathElement27843);
            memberName638=memberName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier =memberName638; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4272:7: ( typeArguments )?
            int alt355=2;
            int LA355_0 = input.LA(1);

            if ( (LA355_0==SMALLER_OP) ) {
                alt355=1;
            }
            switch (alt355) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4273:9: typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_memberPathElement27869);
                    typeArguments639=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList =typeArguments639; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "memberPathElement"



    // $ANTLR start "memberModelExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4279:1: memberModelExpression returns [MemberLiteral literal] : (e1= memberPathElement | PACKAGE o2= MEMBER_OP e2= memberPathElement |at= primaryType o3= MEMBER_OP e3= memberPathElement );
    public MemberLiteral memberModelExpression() throws RecognitionException {
        MemberLiteral literal = null;


        Token o2=null;
        Token o3=null;
        Token PACKAGE640=null;
        PsiCompatibleCeylonParser.memberPathElement_return e1 =null;

        PsiCompatibleCeylonParser.memberPathElement_return e2 =null;

        StaticType at =null;

        PsiCompatibleCeylonParser.memberPathElement_return e3 =null;


         literal = new MemberLiteral(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4281:5: (e1= memberPathElement | PACKAGE o2= MEMBER_OP e2= memberPathElement |at= primaryType o3= MEMBER_OP e3= memberPathElement )
            int alt356=3;
            switch ( input.LA(1) ) {
            case LIDENTIFIER:
                {
                alt356=1;
                }
                break;
            case PACKAGE:
                {
                int LA356_2 = input.LA(2);

                if ( (LA356_2==MEMBER_OP) ) {
                    int LA356_4 = input.LA(3);

                    if ( (LA356_4==LIDENTIFIER) ) {
                        alt356=2;
                    }
                    else if ( (LA356_4==UIDENTIFIER) ) {
                        alt356=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return literal;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 356, 4, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return literal;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 356, 2, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
            case LBRACKET:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt356=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return literal;}
                NoViableAltException nvae =
                    new NoViableAltException("", 356, 0, input);

                throw nvae;

            }

            switch (alt356) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4282:7: e1= memberPathElement
                    {
                    pushFollow(FOLLOW_memberPathElement_in_memberModelExpression27932);
                    e1=memberPathElement();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setIdentifier((e1!=null?e1.identifier:null));
                            literal.setTypeArgumentList((e1!=null?e1.typeArgumentList:null)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4286:7: PACKAGE o2= MEMBER_OP e2= memberPathElement
                    {
                    PACKAGE640=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_memberModelExpression27955); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setToken(PACKAGE640);
                            literal.setPackageQualified(true);  }

                    o2=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_memberModelExpression27973); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setEndToken(o2); }

                    pushFollow(FOLLOW_memberPathElement_in_memberModelExpression27991);
                    e2=memberPathElement();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setEndToken(null);
                            literal.setIdentifier((e2!=null?e2.identifier:null)); 
                            literal.setTypeArgumentList((e2!=null?e2.typeArgumentList:null)); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4296:7: at= primaryType o3= MEMBER_OP e3= memberPathElement
                    {
                    pushFollow(FOLLOW_primaryType_in_memberModelExpression28016);
                    at=primaryType();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(at); }

                    o3=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_memberModelExpression28034); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setEndToken(o3); }

                    pushFollow(FOLLOW_memberPathElement_in_memberModelExpression28052);
                    e3=memberPathElement();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setEndToken(null);
                            literal.setIdentifier((e3!=null?e3.identifier:null));
                            literal.setTypeArgumentList((e3!=null?e3.typeArgumentList:null)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "memberModelExpression"



    // $ANTLR start "typeModelExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4306:1: typeModelExpression returns [TypeLiteral literal] : type ;
    public TypeLiteral typeModelExpression() throws RecognitionException {
        TypeLiteral literal = null;


        StaticType type641 =null;


         literal = new TypeLiteral(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4308:5: ( type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4308:7: type
            {
            pushFollow(FOLLOW_type_in_typeModelExpression28091);
            type641=type();

            state._fsp--;
            if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal.setType(type641); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "typeModelExpression"



    // $ANTLR start "modelExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4312:1: modelExpression returns [MetaLiteral meta] : ( ( ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER )=> memberModelExpression | typeModelExpression );
    public MetaLiteral modelExpression() throws RecognitionException {
        MetaLiteral meta = null;


        MemberLiteral memberModelExpression642 =null;

        TypeLiteral typeModelExpression643 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4313:3: ( ( ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER )=> memberModelExpression | typeModelExpression )
            int alt357=2;
            int LA357_0 = input.LA(1);

            if ( (LA357_0==LIDENTIFIER) && (synpred50_Ceylon())) {
                alt357=1;
            }
            else if ( (LA357_0==PACKAGE) ) {
                int LA357_2 = input.LA(2);

                if ( (synpred50_Ceylon()) ) {
                    alt357=1;
                }
                else if ( (true) ) {
                    alt357=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 357, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA357_0==UIDENTIFIER) ) {
                int LA357_3 = input.LA(2);

                if ( (synpred50_Ceylon()) ) {
                    alt357=1;
                }
                else if ( (true) ) {
                    alt357=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 357, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA357_0==SMALLER_OP) ) {
                int LA357_4 = input.LA(2);

                if ( (synpred50_Ceylon()) ) {
                    alt357=1;
                }
                else if ( (true) ) {
                    alt357=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 357, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA357_0==LBRACKET) ) {
                int LA357_5 = input.LA(2);

                if ( (synpred50_Ceylon()) ) {
                    alt357=1;
                }
                else if ( (true) ) {
                    alt357=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 357, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA357_0==LBRACE) ) {
                int LA357_6 = input.LA(2);

                if ( (synpred50_Ceylon()) ) {
                    alt357=1;
                }
                else if ( (true) ) {
                    alt357=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 357, 6, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return meta;}
                NoViableAltException nvae =
                    new NoViableAltException("", 357, 0, input);

                throw nvae;

            }
            switch (alt357) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4314:5: ( ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER )=> memberModelExpression
                    {
                    pushFollow(FOLLOW_memberModelExpression_in_modelExpression28143);
                    memberModelExpression642=memberModelExpression();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =memberModelExpression642; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4318:5: typeModelExpression
                    {
                    pushFollow(FOLLOW_typeModelExpression_in_modelExpression28160);
                    typeModelExpression643=typeModelExpression();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta = typeModelExpression643; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return meta;
    }
    // $ANTLR end "modelExpression"



    // $ANTLR start "metaLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4322:1: metaLiteral returns [MetaLiteral meta] : d1= BACKTICK ( moduleLiteral | ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral | classLiteral | newLiteral | interfaceLiteral | aliasLiteral | typeParameterLiteral | valueLiteral | functionLiteral | modelExpression ) d2= BACKTICK ;
    public MetaLiteral metaLiteral() throws RecognitionException {
        MetaLiteral meta = null;


        Token d1=null;
        Token d2=null;
        ModuleLiteral moduleLiteral644 =null;

        PackageLiteral packageLiteral645 =null;

        ClassLiteral classLiteral646 =null;

        NewLiteral newLiteral647 =null;

        InterfaceLiteral interfaceLiteral648 =null;

        AliasLiteral aliasLiteral649 =null;

        TypeParameterLiteral typeParameterLiteral650 =null;

        ValueLiteral valueLiteral651 =null;

        FunctionLiteral functionLiteral652 =null;

        MetaLiteral modelExpression653 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4323:5: (d1= BACKTICK ( moduleLiteral | ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral | classLiteral | newLiteral | interfaceLiteral | aliasLiteral | typeParameterLiteral | valueLiteral | functionLiteral | modelExpression ) d2= BACKTICK )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4323:7: d1= BACKTICK ( moduleLiteral | ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral | classLiteral | newLiteral | interfaceLiteral | aliasLiteral | typeParameterLiteral | valueLiteral | functionLiteral | modelExpression ) d2= BACKTICK
            {
            d1=(Token)match(input,BACKTICK,FOLLOW_BACKTICK_in_metaLiteral28187); if (state.failed) return meta;

            if ( state.backtracking==0 ) { meta = new TypeLiteral(d1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4325:6: ( moduleLiteral | ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral | classLiteral | newLiteral | interfaceLiteral | aliasLiteral | typeParameterLiteral | valueLiteral | functionLiteral | modelExpression )
            int alt358=10;
            switch ( input.LA(1) ) {
            case MODULE:
                {
                alt358=1;
                }
                break;
            case PACKAGE:
                {
                int LA358_2 = input.LA(2);

                if ( (LA358_2==LIDENTIFIER) && (synpred51_Ceylon())) {
                    alt358=2;
                }
                else if ( (LA358_2==UIDENTIFIER) && (synpred51_Ceylon())) {
                    alt358=2;
                }
                else if ( (LA358_2==BACKTICK) && (synpred51_Ceylon())) {
                    alt358=2;
                }
                else if ( (LA358_2==MEMBER_OP) ) {
                    alt358=10;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 358, 2, input);

                    throw nvae;

                }
                }
                break;
            case CLASS_DEFINITION:
                {
                alt358=3;
                }
                break;
            case NEW:
                {
                alt358=4;
                }
                break;
            case INTERFACE_DEFINITION:
                {
                alt358=5;
                }
                break;
            case ALIAS:
                {
                alt358=6;
                }
                break;
            case TYPE_CONSTRAINT:
                {
                alt358=7;
                }
                break;
            case OBJECT_DEFINITION:
            case VALUE_MODIFIER:
                {
                alt358=8;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt358=9;
                }
                break;
            case LBRACE:
            case LBRACKET:
            case LIDENTIFIER:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt358=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return meta;}
                NoViableAltException nvae =
                    new NoViableAltException("", 358, 0, input);

                throw nvae;

            }

            switch (alt358) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4325:8: moduleLiteral
                    {
                    pushFollow(FOLLOW_moduleLiteral_in_metaLiteral28204);
                    moduleLiteral644=moduleLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =moduleLiteral644; 
                    	        meta.setToken(d1); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4328:8: ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral
                    {
                    pushFollow(FOLLOW_packageLiteral_in_metaLiteral28241);
                    packageLiteral645=packageLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =packageLiteral645; 
                    	        meta.setToken(d1); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4332:8: classLiteral
                    {
                    pushFollow(FOLLOW_classLiteral_in_metaLiteral28259);
                    classLiteral646=classLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =classLiteral646; 
                              meta.setToken(d1); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4335:8: newLiteral
                    {
                    pushFollow(FOLLOW_newLiteral_in_metaLiteral28277);
                    newLiteral647=newLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =newLiteral647; 
                              meta.setToken(d1); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4338:8: interfaceLiteral
                    {
                    pushFollow(FOLLOW_interfaceLiteral_in_metaLiteral28295);
                    interfaceLiteral648=interfaceLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =interfaceLiteral648; 
                              meta.setToken(d1); }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4341:8: aliasLiteral
                    {
                    pushFollow(FOLLOW_aliasLiteral_in_metaLiteral28313);
                    aliasLiteral649=aliasLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =aliasLiteral649; 
                              meta.setToken(d1); }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4344:8: typeParameterLiteral
                    {
                    pushFollow(FOLLOW_typeParameterLiteral_in_metaLiteral28331);
                    typeParameterLiteral650=typeParameterLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =typeParameterLiteral650; 
                              meta.setToken(d1); }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4347:8: valueLiteral
                    {
                    pushFollow(FOLLOW_valueLiteral_in_metaLiteral28349);
                    valueLiteral651=valueLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =valueLiteral651; 
                              meta.setToken(d1); }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4350:8: functionLiteral
                    {
                    pushFollow(FOLLOW_functionLiteral_in_metaLiteral28367);
                    functionLiteral652=functionLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =functionLiteral652; 
                              meta.setToken(d1); }

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4353:8: modelExpression
                    {
                    pushFollow(FOLLOW_modelExpression_in_metaLiteral28385);
                    modelExpression653=modelExpression();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =modelExpression653; 
                    	        meta.setToken(d1); }

                    }
                    break;

            }


            d2=(Token)match(input,BACKTICK,FOLLOW_BACKTICK_in_metaLiteral28416); if (state.failed) return meta;

            if ( state.backtracking==0 ) { meta.setEndToken(d2); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return meta;
    }
    // $ANTLR end "metaLiteral"

    // $ANTLR start synpred1_Ceylon
    public void synpred1_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:95:9: ( annotatedModuleDescriptorStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:95:10: annotatedModuleDescriptorStart
        {
        pushFollow(FOLLOW_annotatedModuleDescriptorStart_in_synpred1_Ceylon164);
        annotatedModuleDescriptorStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred1_Ceylon

    // $ANTLR start synpred2_Ceylon
    public void synpred2_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:99:9: ( annotatedPackageDescriptorStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:99:10: annotatedPackageDescriptorStart
        {
        pushFollow(FOLLOW_annotatedPackageDescriptorStart_in_synpred2_Ceylon207);
        annotatedPackageDescriptorStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred2_Ceylon

    // $ANTLR start synpred3_Ceylon
    public void synpred3_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:481:9: ( compilerAnnotations declarationStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:481:10: compilerAnnotations declarationStart
        {
        pushFollow(FOLLOW_compilerAnnotations_in_synpred3_Ceylon2810);
        compilerAnnotations();

        state._fsp--;
        if (state.failed) return ;

        pushFollow(FOLLOW_declarationStart_in_synpred3_Ceylon2812);
        declarationStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred3_Ceylon

    // $ANTLR start synpred4_Ceylon
    public void synpred4_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:490:7: ( tuplePatternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:490:8: tuplePatternStart
        {
        pushFollow(FOLLOW_tuplePatternStart_in_synpred4_Ceylon2885);
        tuplePatternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred4_Ceylon

    // $ANTLR start synpred5_Ceylon
    public void synpred5_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:499:7: ( variable ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:499:8: variable ENTRY_OP
        {
        pushFollow(FOLLOW_variable_in_synpred5_Ceylon2950);
        variable();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred5_Ceylon2952); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred5_Ceylon

    // $ANTLR start synpred6_Ceylon
    public void synpred6_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:503:7: ( tuplePattern ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:503:8: tuplePattern ENTRY_OP
        {
        pushFollow(FOLLOW_tuplePattern_in_synpred6_Ceylon2988);
        tuplePattern();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred6_Ceylon2990); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred6_Ceylon

    // $ANTLR start synpred7_Ceylon
    public void synpred7_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:507:7: ( tuplePatternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:507:8: tuplePatternStart
        {
        pushFollow(FOLLOW_tuplePatternStart_in_synpred7_Ceylon3026);
        tuplePatternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred7_Ceylon

    // $ANTLR start synpred8_Ceylon
    public void synpred8_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:517:7: ( variable ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:517:8: variable ENTRY_OP
        {
        pushFollow(FOLLOW_variable_in_synpred8_Ceylon3098);
        variable();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred8_Ceylon3100); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred8_Ceylon

    // $ANTLR start synpred9_Ceylon
    public void synpred9_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:521:7: ( tuplePattern ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:521:8: tuplePattern ENTRY_OP
        {
        pushFollow(FOLLOW_tuplePattern_in_synpred9_Ceylon3136);
        tuplePattern();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred9_Ceylon3138); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred9_Ceylon

    // $ANTLR start synpred10_Ceylon
    public void synpred10_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:557:9: ( compilerAnnotations ( unionType )? PRODUCT_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:557:10: compilerAnnotations ( unionType )? PRODUCT_OP
        {
        pushFollow(FOLLOW_compilerAnnotations_in_synpred10_Ceylon3427);
        compilerAnnotations();

        state._fsp--;
        if (state.failed) return ;

        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:557:30: ( unionType )?
        int alt359=2;
        int LA359_0 = input.LA(1);

        if ( ((LA359_0 >= LBRACE && LA359_0 <= LBRACKET)||LA359_0==PACKAGE||LA359_0==SMALLER_OP||LA359_0==UIDENTIFIER) ) {
            alt359=1;
        }
        switch (alt359) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:557:30: unionType
                {
                pushFollow(FOLLOW_unionType_in_synpred10_Ceylon3429);
                unionType();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_synpred10_Ceylon3432); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred10_Ceylon

    // $ANTLR start synpred11_Ceylon
    public void synpred11_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1400:9: ( destructureStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1400:10: destructureStart
        {
        pushFollow(FOLLOW_destructureStart_in_synpred11_Ceylon9265);
        destructureStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred11_Ceylon

    // $ANTLR start synpred12_Ceylon
    public void synpred12_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1402:9: ( annotatedDeclarationStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1402:10: annotatedDeclarationStart
        {
        pushFollow(FOLLOW_annotatedDeclarationStart_in_synpred12_Ceylon9291);
        annotatedDeclarationStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred12_Ceylon

    // $ANTLR start synpred13_Ceylon
    public void synpred13_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1404:9: ( annotatedAssertionStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1404:10: annotatedAssertionStart
        {
        pushFollow(FOLLOW_annotatedAssertionStart_in_synpred13_Ceylon9319);
        annotatedAssertionStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred13_Ceylon

    // $ANTLR start synpred14_Ceylon
    public void synpred14_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1406:9: ( annotationListStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1406:10: annotationListStart
        {
        pushFollow(FOLLOW_annotationListStart_in_synpred14_Ceylon9345);
        annotationListStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred14_Ceylon

    // $ANTLR start synpred15_Ceylon
    public void synpred15_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1423:7: ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )
        int alt360=2;
        int LA360_0 = input.LA(1);

        if ( (LA360_0==INTERFACE_DEFINITION) ) {
            alt360=1;
        }
        else if ( (LA360_0==DYNAMIC) ) {
            alt360=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 360, 0, input);

            throw nvae;

        }
        switch (alt360) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1423:8: INTERFACE_DEFINITION
                {
                match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_synpred15_Ceylon9470); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1423:29: DYNAMIC UIDENTIFIER
                {
                match(input,DYNAMIC,FOLLOW_DYNAMIC_in_synpred15_Ceylon9472); if (state.failed) return ;

                match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_synpred15_Ceylon9474); if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred15_Ceylon

    // $ANTLR start synpred16_Ceylon
    public void synpred16_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1450:8: ( unambiguousType )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1450:9: unambiguousType
        {
        pushFollow(FOLLOW_unambiguousType_in_synpred16_Ceylon9649);
        unambiguousType();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred16_Ceylon

    // $ANTLR start synpred17_Ceylon
    public void synpred17_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1740:9: ( specifierParametersStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1740:10: specifierParametersStart
        {
        pushFollow(FOLLOW_specifierParametersStart_in_synpred17_Ceylon11466);
        specifierParametersStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred17_Ceylon

    // $ANTLR start synpred18_Ceylon
    public void synpred18_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1787:9: (~ ( LIDENTIFIER | UIDENTIFIER ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:
        {
        if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= LET)||(input.LA(1) >= LINE_COMMENT && input.LA(1) <= TYPE_CONSTRAINT)||(input.LA(1) >= UIdentifierPrefix && input.LA(1) <= WS) ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred18_Ceylon

    // $ANTLR start synpred19_Ceylon
    public void synpred19_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1832:9: ( namedArgumentStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1832:10: namedArgumentStart
        {
        pushFollow(FOLLOW_namedArgumentStart_in_synpred19_Ceylon12008);
        namedArgumentStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred19_Ceylon

    // $ANTLR start synpred20_Ceylon
    public void synpred20_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1836:9: ( anonymousArgument )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1836:10: anonymousArgument
        {
        pushFollow(FOLLOW_anonymousArgument_in_synpred20_Ceylon12043);
        anonymousArgument();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred20_Ceylon

    // $ANTLR start synpred21_Ceylon
    public void synpred21_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1883:9: ( typeArgumentsStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1883:10: typeArgumentsStart
        {
        pushFollow(FOLLOW_typeArgumentsStart_in_synpred21_Ceylon12371);
        typeArgumentsStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred21_Ceylon

    // $ANTLR start synpred22_Ceylon
    public void synpred22_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1894:9: ( typeArgumentsStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1894:10: typeArgumentsStart
        {
        pushFollow(FOLLOW_typeArgumentsStart_in_synpred22_Ceylon12452);
        typeArgumentsStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred22_Ceylon

    // $ANTLR start synpred23_Ceylon
    public void synpred23_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1930:9: ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1930:10: index ( ELLIPSIS | RANGE_OP | SEGMENT_OP )
        {
        pushFollow(FOLLOW_index_in_synpred23_Ceylon12680);
        index();

        state._fsp--;
        if (state.failed) return ;

        if ( input.LA(1)==ELLIPSIS||input.LA(1)==RANGE_OP||input.LA(1)==SEGMENT_OP ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred23_Ceylon

    // $ANTLR start synpred24_Ceylon
    public void synpred24_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1979:9: ( namedArgumentStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1979:10: namedArgumentStart
        {
        pushFollow(FOLLOW_namedArgumentStart_in_synpred24_Ceylon13008);
        namedArgumentStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred24_Ceylon

    // $ANTLR start synpred25_Ceylon
    public void synpred25_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1983:9: ( anonymousArgument )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1983:10: anonymousArgument
        {
        pushFollow(FOLLOW_anonymousArgument_in_synpred25_Ceylon13043);
        anonymousArgument();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred25_Ceylon

    // $ANTLR start synpred26_Ceylon
    public void synpred26_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2001:11: ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )
        int alt361=2;
        int LA361_0 = input.LA(1);

        if ( (LA361_0==FOR_CLAUSE) ) {
            alt361=1;
        }
        else if ( (LA361_0==IF_CLAUSE) ) {
            alt361=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 361, 0, input);

            throw nvae;

        }
        switch (alt361) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2001:12: FOR_CLAUSE
                {
                match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_synpred26_Ceylon13181); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2001:25: IF_CLAUSE conditions ~ THEN_CLAUSE
                {
                match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_synpred26_Ceylon13185); if (state.failed) return ;

                pushFollow(FOLLOW_conditions_in_synpred26_Ceylon13187);
                conditions();

                state._fsp--;
                if (state.failed) return ;

                if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= StringPart)||(input.LA(1) >= THIS && input.LA(1) <= WS) ) {
                    input.consume();
                    state.errorRecovery=false;
                    state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


                }
                break;

        }
    }
    // $ANTLR end synpred26_Ceylon

    // $ANTLR start synpred27_Ceylon
    public void synpred27_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2018:13: ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )
        int alt362=2;
        int LA362_0 = input.LA(1);

        if ( (LA362_0==FOR_CLAUSE) ) {
            alt362=1;
        }
        else if ( (LA362_0==IF_CLAUSE) ) {
            alt362=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 362, 0, input);

            throw nvae;

        }
        switch (alt362) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2018:14: FOR_CLAUSE
                {
                match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_synpred27_Ceylon13364); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2018:27: IF_CLAUSE conditions ~ THEN_CLAUSE
                {
                match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_synpred27_Ceylon13368); if (state.failed) return ;

                pushFollow(FOLLOW_conditions_in_synpred27_Ceylon13370);
                conditions();

                state._fsp--;
                if (state.failed) return ;

                if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= StringPart)||(input.LA(1) >= THIS && input.LA(1) <= WS) ) {
                    input.consume();
                    state.errorRecovery=false;
                    state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


                }
                break;

        }
    }
    // $ANTLR end synpred27_Ceylon

    // $ANTLR start synpred28_Ceylon
    public void synpred28_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2273:15: ( namedArgumentStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2273:16: namedArgumentStart
        {
        pushFollow(FOLLOW_namedArgumentStart_in_synpred28_Ceylon15479);
        namedArgumentStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred28_Ceylon

    // $ANTLR start synpred29_Ceylon
    public void synpred29_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2341:7: ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )
        int alt363=3;
        switch ( input.LA(1) ) {
        case FUNCTION_MODIFIER:
            {
            alt363=1;
            }
            break;
        case VOID_MODIFIER:
            {
            alt363=2;
            }
            break;
        case LPAREN:
        case SMALLER_OP:
            {
            alt363=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 363, 0, input);

            throw nvae;

        }

        switch (alt363) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2341:8: FUNCTION_MODIFIER
                {
                match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_synpred29_Ceylon15908); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2341:26: VOID_MODIFIER
                {
                match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_synpred29_Ceylon15910); if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2341:40: anonParametersStart
                {
                pushFollow(FOLLOW_anonParametersStart_in_synpred29_Ceylon15912);
                anonParametersStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred29_Ceylon

    // $ANTLR start synpred30_Ceylon
    public void synpred30_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2365:7: ( variable ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2365:8: variable ENTRY_OP
        {
        pushFollow(FOLLOW_variable_in_synpred30_Ceylon16044);
        variable();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred30_Ceylon16046); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred30_Ceylon

    // $ANTLR start synpred31_Ceylon
    public void synpred31_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2371:9: ( patternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2371:10: patternStart
        {
        pushFollow(FOLLOW_patternStart_in_synpred31_Ceylon16096);
        patternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred31_Ceylon

    // $ANTLR start synpred32_Ceylon
    public void synpred32_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2624:7: ( IF_CLAUSE conditions ~ THEN_CLAUSE )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2624:8: IF_CLAUSE conditions ~ THEN_CLAUSE
        {
        match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_synpred32_Ceylon17228); if (state.failed) return ;

        pushFollow(FOLLOW_conditions_in_synpred32_Ceylon17230);
        conditions();

        state._fsp--;
        if (state.failed) return ;

        if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= StringPart)||(input.LA(1) >= THIS && input.LA(1) <= WS) ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred32_Ceylon

    // $ANTLR start synpred33_Ceylon
    public void synpred33_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3156:7: ( unionType ( PRODUCT_OP | SUM_OP ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3156:8: unionType ( PRODUCT_OP | SUM_OP )
        {
        pushFollow(FOLLOW_unionType_in_synpred33_Ceylon21035);
        unionType();

        state._fsp--;
        if (state.failed) return ;

        if ( input.LA(1)==PRODUCT_OP||input.LA(1)==SUM_OP ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred33_Ceylon

    // $ANTLR start synpred34_Ceylon
    public void synpred34_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3178:7: ( type ( SPECIFY ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3178:8: type ( SPECIFY )
        {
        pushFollow(FOLLOW_type_in_synpred34_Ceylon21166);
        type();

        state._fsp--;
        if (state.failed) return ;

        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3178:13: ( SPECIFY )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3178:14: SPECIFY
        {
        match(input,SPECIFY,FOLLOW_SPECIFY_in_synpred34_Ceylon21169); if (state.failed) return ;

        }


        }

    }
    // $ANTLR end synpred34_Ceylon

    // $ANTLR start synpred35_Ceylon
    public void synpred35_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3246:7: ( typeParameters ( TYPE_CONSTRAINT | COMPUTE ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3246:8: typeParameters ( TYPE_CONSTRAINT | COMPUTE )
        {
        pushFollow(FOLLOW_typeParameters_in_synpred35_Ceylon21676);
        typeParameters();

        state._fsp--;
        if (state.failed) return ;

        if ( input.LA(1)==COMPUTE||input.LA(1)==TYPE_CONSTRAINT ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred35_Ceylon

    // $ANTLR start synpred36_Ceylon
    public void synpred36_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3472:7: ( namedAnnotationArgumentsStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3472:8: namedAnnotationArgumentsStart
        {
        pushFollow(FOLLOW_namedAnnotationArgumentsStart_in_synpred36_Ceylon23134);
        namedAnnotationArgumentsStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred36_Ceylon

    // $ANTLR start synpred37_Ceylon
    public void synpred37_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3558:10: ( patternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3558:11: patternStart
        {
        pushFollow(FOLLOW_patternStart_in_synpred37_Ceylon23769);
        patternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred37_Ceylon

    // $ANTLR start synpred38_Ceylon
    public void synpred38_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3558:9: ( ( patternStart )=> patternStart | compilerAnnotations ( declarationStart | specificationStart ) )
        int alt365=2;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            int LA365_1 = input.LA(2);

            if ( (synpred37_Ceylon()) ) {
                alt365=1;
            }
            else if ( (true) ) {
                alt365=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 365, 1, input);

                throw nvae;

            }
            }
            break;
        case SMALLER_OP:
            {
            int LA365_2 = input.LA(2);

            if ( (synpred37_Ceylon()) ) {
                alt365=1;
            }
            else if ( (true) ) {
                alt365=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 365, 2, input);

                throw nvae;

            }
            }
            break;
        case UIDENTIFIER:
            {
            int LA365_3 = input.LA(2);

            if ( (synpred37_Ceylon()) ) {
                alt365=1;
            }
            else if ( (true) ) {
                alt365=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 365, 3, input);

                throw nvae;

            }
            }
            break;
        case PACKAGE:
            {
            int LA365_4 = input.LA(2);

            if ( (synpred37_Ceylon()) ) {
                alt365=1;
            }
            else if ( (true) ) {
                alt365=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 365, 4, input);

                throw nvae;

            }
            }
            break;
        case LBRACKET:
            {
            int LA365_5 = input.LA(2);

            if ( (synpred37_Ceylon()) ) {
                alt365=1;
            }
            else if ( (true) ) {
                alt365=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 365, 5, input);

                throw nvae;

            }
            }
            break;
        case LBRACE:
            {
            int LA365_6 = input.LA(2);

            if ( (synpred37_Ceylon()) ) {
                alt365=1;
            }
            else if ( (true) ) {
                alt365=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 365, 6, input);

                throw nvae;

            }
            }
            break;
        case VOID_MODIFIER:
            {
            int LA365_7 = input.LA(2);

            if ( (synpred37_Ceylon()) ) {
                alt365=1;
            }
            else if ( (true) ) {
                alt365=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 365, 7, input);

                throw nvae;

            }
            }
            break;
        case FUNCTION_MODIFIER:
            {
            int LA365_8 = input.LA(2);

            if ( (synpred37_Ceylon()) ) {
                alt365=1;
            }
            else if ( (true) ) {
                alt365=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 365, 8, input);

                throw nvae;

            }
            }
            break;
        case VALUE_MODIFIER:
            {
            int LA365_9 = input.LA(2);

            if ( (synpred37_Ceylon()) ) {
                alt365=1;
            }
            else if ( (true) ) {
                alt365=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 365, 9, input);

                throw nvae;

            }
            }
            break;
        case LIDENTIFIER:
            {
            int LA365_10 = input.LA(2);

            if ( (synpred37_Ceylon()) ) {
                alt365=1;
            }
            else if ( (true) ) {
                alt365=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 365, 10, input);

                throw nvae;

            }
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case INTERFACE_DEFINITION:
        case NEW:
        case OBJECT_DEFINITION:
            {
            alt365=2;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 365, 0, input);

            throw nvae;

        }

        switch (alt365) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3558:10: ( patternStart )=> patternStart
                {
                pushFollow(FOLLOW_patternStart_in_synpred38_Ceylon23774);
                patternStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3558:43: compilerAnnotations ( declarationStart | specificationStart )
                {
                pushFollow(FOLLOW_compilerAnnotations_in_synpred38_Ceylon23778);
                compilerAnnotations();

                state._fsp--;
                if (state.failed) return ;

                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3558:63: ( declarationStart | specificationStart )
                int alt364=2;
                int LA364_0 = input.LA(1);

                if ( (LA364_0==ALIAS||LA364_0==ASSIGN||LA364_0==CLASS_DEFINITION||LA364_0==DYNAMIC||LA364_0==FUNCTION_MODIFIER||LA364_0==INTERFACE_DEFINITION||(LA364_0 >= LBRACE && LA364_0 <= LBRACKET)||LA364_0==NEW||LA364_0==OBJECT_DEFINITION||LA364_0==PACKAGE||LA364_0==SMALLER_OP||LA364_0==UIDENTIFIER||LA364_0==VALUE_MODIFIER||LA364_0==VOID_MODIFIER) ) {
                    alt364=1;
                }
                else if ( (LA364_0==LIDENTIFIER) ) {
                    alt364=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 364, 0, input);

                    throw nvae;

                }
                switch (alt364) {
                    case 1 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3558:64: declarationStart
                        {
                        pushFollow(FOLLOW_declarationStart_in_synpred38_Ceylon23781);
                        declarationStart();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3558:81: specificationStart
                        {
                        pushFollow(FOLLOW_specificationStart_in_synpred38_Ceylon23783);
                        specificationStart();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;

                }


                }
                break;

        }
    }
    // $ANTLR end synpred38_Ceylon

    // $ANTLR start synpred39_Ceylon
    public void synpred39_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3562:9: ( LIDENTIFIER )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3562:10: LIDENTIFIER
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred39_Ceylon23827); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred39_Ceylon

    // $ANTLR start synpred40_Ceylon
    public void synpred40_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3579:10: ( patternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3579:11: patternStart
        {
        pushFollow(FOLLOW_patternStart_in_synpred40_Ceylon23961);
        patternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred40_Ceylon

    // $ANTLR start synpred41_Ceylon
    public void synpred41_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3579:9: ( ( patternStart )=> patternStart | compilerAnnotations ( declarationStart | specificationStart ) )
        int alt367=2;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            int LA367_1 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt367=1;
            }
            else if ( (true) ) {
                alt367=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 367, 1, input);

                throw nvae;

            }
            }
            break;
        case SMALLER_OP:
            {
            int LA367_2 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt367=1;
            }
            else if ( (true) ) {
                alt367=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 367, 2, input);

                throw nvae;

            }
            }
            break;
        case UIDENTIFIER:
            {
            int LA367_3 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt367=1;
            }
            else if ( (true) ) {
                alt367=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 367, 3, input);

                throw nvae;

            }
            }
            break;
        case PACKAGE:
            {
            int LA367_4 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt367=1;
            }
            else if ( (true) ) {
                alt367=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 367, 4, input);

                throw nvae;

            }
            }
            break;
        case LBRACKET:
            {
            int LA367_5 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt367=1;
            }
            else if ( (true) ) {
                alt367=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 367, 5, input);

                throw nvae;

            }
            }
            break;
        case LBRACE:
            {
            int LA367_6 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt367=1;
            }
            else if ( (true) ) {
                alt367=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 367, 6, input);

                throw nvae;

            }
            }
            break;
        case VOID_MODIFIER:
            {
            int LA367_7 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt367=1;
            }
            else if ( (true) ) {
                alt367=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 367, 7, input);

                throw nvae;

            }
            }
            break;
        case FUNCTION_MODIFIER:
            {
            int LA367_8 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt367=1;
            }
            else if ( (true) ) {
                alt367=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 367, 8, input);

                throw nvae;

            }
            }
            break;
        case VALUE_MODIFIER:
            {
            int LA367_9 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt367=1;
            }
            else if ( (true) ) {
                alt367=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 367, 9, input);

                throw nvae;

            }
            }
            break;
        case LIDENTIFIER:
            {
            int LA367_10 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt367=1;
            }
            else if ( (true) ) {
                alt367=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 367, 10, input);

                throw nvae;

            }
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case INTERFACE_DEFINITION:
        case NEW:
        case OBJECT_DEFINITION:
            {
            alt367=2;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 367, 0, input);

            throw nvae;

        }

        switch (alt367) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3579:10: ( patternStart )=> patternStart
                {
                pushFollow(FOLLOW_patternStart_in_synpred41_Ceylon23966);
                patternStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3579:43: compilerAnnotations ( declarationStart | specificationStart )
                {
                pushFollow(FOLLOW_compilerAnnotations_in_synpred41_Ceylon23970);
                compilerAnnotations();

                state._fsp--;
                if (state.failed) return ;

                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3579:63: ( declarationStart | specificationStart )
                int alt366=2;
                int LA366_0 = input.LA(1);

                if ( (LA366_0==ALIAS||LA366_0==ASSIGN||LA366_0==CLASS_DEFINITION||LA366_0==DYNAMIC||LA366_0==FUNCTION_MODIFIER||LA366_0==INTERFACE_DEFINITION||(LA366_0 >= LBRACE && LA366_0 <= LBRACKET)||LA366_0==NEW||LA366_0==OBJECT_DEFINITION||LA366_0==PACKAGE||LA366_0==SMALLER_OP||LA366_0==UIDENTIFIER||LA366_0==VALUE_MODIFIER||LA366_0==VOID_MODIFIER) ) {
                    alt366=1;
                }
                else if ( (LA366_0==LIDENTIFIER) ) {
                    alt366=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 366, 0, input);

                    throw nvae;

                }
                switch (alt366) {
                    case 1 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3579:64: declarationStart
                        {
                        pushFollow(FOLLOW_declarationStart_in_synpred41_Ceylon23973);
                        declarationStart();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3579:81: specificationStart
                        {
                        pushFollow(FOLLOW_specificationStart_in_synpred41_Ceylon23975);
                        specificationStart();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;

                }


                }
                break;

        }
    }
    // $ANTLR end synpred41_Ceylon

    // $ANTLR start synpred42_Ceylon
    public void synpred42_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3583:9: ( LIDENTIFIER )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3583:10: LIDENTIFIER
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred42_Ceylon24019); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred42_Ceylon

    // $ANTLR start synpred43_Ceylon
    public void synpred43_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3602:9: ( LIDENTIFIER SPECIFY )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3602:10: LIDENTIFIER SPECIFY
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred43_Ceylon24164); if (state.failed) return ;

        match(input,SPECIFY,FOLLOW_SPECIFY_in_synpred43_Ceylon24166); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred43_Ceylon

    // $ANTLR start synpred44_Ceylon
    public void synpred44_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3645:9: ( LBRACE )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3645:10: LBRACE
        {
        match(input,LBRACE,FOLLOW_LBRACE_in_synpred44_Ceylon24482); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred44_Ceylon

    // $ANTLR start synpred45_Ceylon
    public void synpred45_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3811:9: ( COMPILER_ANNOTATION | declarationStart | specificationStart )
        int alt368=3;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            alt368=1;
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case FUNCTION_MODIFIER:
        case INTERFACE_DEFINITION:
        case LBRACE:
        case LBRACKET:
        case NEW:
        case OBJECT_DEFINITION:
        case PACKAGE:
        case SMALLER_OP:
        case UIDENTIFIER:
        case VALUE_MODIFIER:
        case VOID_MODIFIER:
            {
            alt368=2;
            }
            break;
        case LIDENTIFIER:
            {
            alt368=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 368, 0, input);

            throw nvae;

        }

        switch (alt368) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3811:10: COMPILER_ANNOTATION
                {
                match(input,COMPILER_ANNOTATION,FOLLOW_COMPILER_ANNOTATION_in_synpred45_Ceylon25029); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3811:30: declarationStart
                {
                pushFollow(FOLLOW_declarationStart_in_synpred45_Ceylon25031);
                declarationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3811:47: specificationStart
                {
                pushFollow(FOLLOW_specificationStart_in_synpred45_Ceylon25033);
                specificationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred45_Ceylon

    // $ANTLR start synpred46_Ceylon
    public void synpred46_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3859:7: ( IS_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3859:8: IS_OP
        {
        match(input,IS_OP,FOLLOW_IS_OP_in_synpred46_Ceylon25392); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred46_Ceylon

    // $ANTLR start synpred47_Ceylon
    public void synpred47_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3861:7: ( SATISFIES )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3861:8: SATISFIES
        {
        match(input,SATISFIES,FOLLOW_SATISFIES_in_synpred47_Ceylon25413); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred47_Ceylon

    // $ANTLR start synpred48_Ceylon
    public void synpred48_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3922:10: ( patternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3922:11: patternStart
        {
        pushFollow(FOLLOW_patternStart_in_synpred48_Ceylon25811);
        patternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred48_Ceylon

    // $ANTLR start synpred49_Ceylon
    public void synpred49_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4037:7: ( COMPILER_ANNOTATION | declarationStart | specificationStart )
        int alt369=3;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            alt369=1;
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case FUNCTION_MODIFIER:
        case INTERFACE_DEFINITION:
        case LBRACE:
        case LBRACKET:
        case NEW:
        case OBJECT_DEFINITION:
        case PACKAGE:
        case SMALLER_OP:
        case UIDENTIFIER:
        case VALUE_MODIFIER:
        case VOID_MODIFIER:
            {
            alt369=2;
            }
            break;
        case LIDENTIFIER:
            {
            alt369=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 369, 0, input);

            throw nvae;

        }

        switch (alt369) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4037:8: COMPILER_ANNOTATION
                {
                match(input,COMPILER_ANNOTATION,FOLLOW_COMPILER_ANNOTATION_in_synpred49_Ceylon26687); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4037:28: declarationStart
                {
                pushFollow(FOLLOW_declarationStart_in_synpred49_Ceylon26689);
                declarationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4037:45: specificationStart
                {
                pushFollow(FOLLOW_specificationStart_in_synpred49_Ceylon26691);
                specificationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred49_Ceylon

    // $ANTLR start synpred50_Ceylon
    public void synpred50_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4314:5: ( ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4314:6: ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER
        {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4314:6: ( ( PACKAGE | primaryType ) MEMBER_OP )?
        int alt371=2;
        int LA371_0 = input.LA(1);

        if ( ((LA371_0 >= LBRACE && LA371_0 <= LBRACKET)||LA371_0==PACKAGE||LA371_0==SMALLER_OP||LA371_0==UIDENTIFIER) ) {
            alt371=1;
        }
        switch (alt371) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4314:7: ( PACKAGE | primaryType ) MEMBER_OP
                {
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4314:7: ( PACKAGE | primaryType )
                int alt370=2;
                int LA370_0 = input.LA(1);

                if ( (LA370_0==PACKAGE) ) {
                    int LA370_1 = input.LA(2);

                    if ( (LA370_1==MEMBER_OP) ) {
                        int LA370_3 = input.LA(3);

                        if ( (LA370_3==LIDENTIFIER) ) {
                            alt370=1;
                        }
                        else if ( (LA370_3==UIDENTIFIER) ) {
                            alt370=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 370, 3, input);

                            throw nvae;

                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 370, 1, input);

                        throw nvae;

                    }
                }
                else if ( ((LA370_0 >= LBRACE && LA370_0 <= LBRACKET)||LA370_0==SMALLER_OP||LA370_0==UIDENTIFIER) ) {
                    alt370=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 370, 0, input);

                    throw nvae;

                }
                switch (alt370) {
                    case 1 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4314:8: PACKAGE
                        {
                        match(input,PACKAGE,FOLLOW_PACKAGE_in_synpred50_Ceylon28125); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4314:16: primaryType
                        {
                        pushFollow(FOLLOW_primaryType_in_synpred50_Ceylon28127);
                        primaryType();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;

                }


                match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_synpred50_Ceylon28130); if (state.failed) return ;

                }
                break;

        }


        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred50_Ceylon28134); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred50_Ceylon

    // $ANTLR start synpred51_Ceylon
    public void synpred51_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4328:8: ( PACKAGE ( LIDENTIFIER | BACKTICK ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4328:9: PACKAGE ( LIDENTIFIER | BACKTICK )
        {
        match(input,PACKAGE,FOLLOW_PACKAGE_in_synpred51_Ceylon28223); if (state.failed) return ;

        if ( input.LA(1)==BACKTICK||input.LA(1)==LIDENTIFIER ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred51_Ceylon

    // Delegated rules

    public boolean synpred46_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred37_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred13_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred25_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred9_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred7_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred49_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred16_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred12_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred20_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred8_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred42_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred28_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred30_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred48_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred32_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred44_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred27_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred22_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred3_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred26_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred43_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred35_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred45_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred24_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred34_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred41_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred15_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred10_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred1_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred51_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred38_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred2_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred36_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred6_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred23_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred11_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred40_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred14_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred18_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred31_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred29_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred4_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred21_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred47_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred50_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred17_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred33_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred39_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred5_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred19_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA163 dfa163 = new DFA163(this);
    protected DFA166 dfa166 = new DFA166(this);
    protected DFA175 dfa175 = new DFA175(this);
    protected DFA176 dfa176 = new DFA176(this);
    static final String DFA1_eotS =
        "\10\uffff";
    static final String DFA1_eofS =
        "\1\3\7\uffff";
    static final String DFA1_minS =
        "\1\7\1\105\2\uffff\1\7\1\160\2\7";
    static final String DFA1_maxS =
        "\1\u0083\1\105\2\uffff\1\u0083\1\u0082\2\u0083";
    static final String DFA1_acceptS =
        "\2\uffff\1\1\1\2\4\uffff";
    static final String DFA1_specialS =
        "\10\uffff}>";
    static final String[] DFA1_transitionS = {
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\5\uffff\1\3\1\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff"+
            "\1\3\4\uffff\1\3\3\uffff\1\3\5\uffff\1\3\5\uffff\1\3\11\uffff"+
            "\1\2\1\3\4\uffff\1\3\14\uffff\1\3\3\uffff\3\3",
            "\1\4",
            "",
            "",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\4\uffff"+
            "\1\3\3\uffff\1\3\5\uffff\1\3\16\uffff\1\5\1\2\1\3\4\uffff\1"+
            "\3\14\uffff\1\3\3\uffff\3\3",
            "\1\6\21\uffff\1\7",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\4\uffff"+
            "\1\3\3\uffff\1\3\5\uffff\1\3\17\uffff\1\2\1\3\4\uffff\1\3\14"+
            "\uffff\1\3\3\uffff\3\3",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\4\uffff"+
            "\1\3\3\uffff\1\3\5\uffff\1\3\17\uffff\1\2\1\3\4\uffff\1\3\14"+
            "\uffff\1\3\3\uffff\3\3"
    };

    static final short[] DFA1_eot = DFA.unpackEncodedString(DFA1_eotS);
    static final short[] DFA1_eof = DFA.unpackEncodedString(DFA1_eofS);
    static final char[] DFA1_min = DFA.unpackEncodedStringToUnsignedChars(DFA1_minS);
    static final char[] DFA1_max = DFA.unpackEncodedStringToUnsignedChars(DFA1_maxS);
    static final short[] DFA1_accept = DFA.unpackEncodedString(DFA1_acceptS);
    static final short[] DFA1_special = DFA.unpackEncodedString(DFA1_specialS);
    static final short[][] DFA1_transition;

    static {
        int numStates = DFA1_transitionS.length;
        DFA1_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA1_transition[i] = DFA.unpackEncodedString(DFA1_transitionS[i]);
        }
    }

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "85:7: (ca= compilerAnnotations SEMICOLON )?";
        }
    }
    static final String DFA163_eotS =
        "\100\uffff";
    static final String DFA163_eofS =
        "\100\uffff";
    static final String DFA163_minS =
        "\1\5\73\uffff\1\0\3\uffff";
    static final String DFA163_maxS =
        "\1\u0080\73\uffff\1\0\3\uffff";
    static final String DFA163_acceptS =
        "\1\uffff\1\6\66\uffff\1\1\2\uffff\1\2\1\uffff\1\5\1\3\1\4";
    static final String DFA163_specialS =
        "\74\uffff\1\0\3\uffff}>";
    static final String[] DFA163_transitionS = {
            "\1\1\2\uffff\2\1\11\uffff\2\1\3\uffff\2\1\1\uffff\3\1\2\uffff"+
            "\3\1\3\uffff\6\1\11\uffff\1\1\2\uffff\1\1\1\uffff\4\1\2\uffff"+
            "\2\1\1\75\1\73\4\uffff\1\74\1\uffff\1\70\1\uffff\1\1\4\uffff"+
            "\2\1\3\uffff\2\1\4\uffff\10\1\1\uffff\1\1\1\70\7\1\1\70\1\1"+
            "\1\uffff\1\1\1\uffff\2\1\3\uffff\1\1\6\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] DFA163_eot = DFA.unpackEncodedString(DFA163_eotS);
    static final short[] DFA163_eof = DFA.unpackEncodedString(DFA163_eofS);
    static final char[] DFA163_min = DFA.unpackEncodedStringToUnsignedChars(DFA163_minS);
    static final char[] DFA163_max = DFA.unpackEncodedStringToUnsignedChars(DFA163_maxS);
    static final short[] DFA163_accept = DFA.unpackEncodedString(DFA163_acceptS);
    static final short[] DFA163_special = DFA.unpackEncodedString(DFA163_specialS);
    static final short[][] DFA163_transition;

    static {
        int numStates = DFA163_transitionS.length;
        DFA163_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA163_transition[i] = DFA.unpackEncodedString(DFA163_transitionS[i]);
        }
    }

    class DFA163 extends DFA {

        public DFA163(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 163;
            this.eot = DFA163_eot;
            this.eof = DFA163_eof;
            this.min = DFA163_min;
            this.max = DFA163_max;
            this.accept = DFA163_accept;
            this.special = DFA163_special;
            this.transition = DFA163_transition;
        }
        public String getDescription() {
            return "()* loopback of 1720:5: ( qualifiedReference | indexOrIndexRange | ( specifierParametersStart )=> parameters | positionalArguments | namedArguments )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA163_60 = input.LA(1);

                         
                        int index163_60 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred17_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 63;}

                         
                        input.seek(index163_60);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 163, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA166_eotS =
        "\100\uffff";
    static final String DFA166_eofS =
        "\100\uffff";
    static final String DFA166_minS =
        "\1\5\77\uffff";
    static final String DFA166_maxS =
        "\1\u0080\77\uffff";
    static final String DFA166_acceptS =
        "\1\uffff\1\1\1\2\75\3";
    static final String DFA166_specialS =
        "\1\0\77\uffff}>";
    static final String[] DFA166_transitionS = {
            "\1\60\2\uffff\1\46\1\70\11\uffff\1\55\1\42\3\uffff\1\7\1\31"+
            "\1\uffff\1\12\1\67\1\51\2\uffff\1\3\1\22\1\63\3\uffff\1\23\1"+
            "\54\1\26\1\43\1\27\1\40\11\uffff\1\45\2\uffff\1\4\1\uffff\1"+
            "\6\1\65\1\32\1\37\2\uffff\1\34\1\33\1\77\1\75\1\uffff\1\1\2"+
            "\uffff\1\76\1\uffff\1\72\1\uffff\1\62\4\uffff\1\30\1\44\3\uffff"+
            "\1\47\1\71\4\uffff\1\5\1\15\1\16\1\24\1\13\1\14\1\17\1\64\1"+
            "\uffff\1\11\1\73\1\41\1\20\1\25\1\50\1\36\1\35\1\57\1\74\1\53"+
            "\1\uffff\1\52\1\uffff\1\61\1\21\3\uffff\1\56\4\uffff\1\2\1\uffff"+
            "\1\10\1\66",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA166_eot = DFA.unpackEncodedString(DFA166_eotS);
    static final short[] DFA166_eof = DFA.unpackEncodedString(DFA166_eofS);
    static final char[] DFA166_min = DFA.unpackEncodedStringToUnsignedChars(DFA166_minS);
    static final char[] DFA166_max = DFA.unpackEncodedStringToUnsignedChars(DFA166_maxS);
    static final short[] DFA166_accept = DFA.unpackEncodedString(DFA166_acceptS);
    static final short[] DFA166_special = DFA.unpackEncodedString(DFA166_specialS);
    static final short[][] DFA166_transition;

    static {
        int numStates = DFA166_transitionS.length;
        DFA166_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA166_transition[i] = DFA.unpackEncodedString(DFA166_transitionS[i]);
        }
    }

    class DFA166 extends DFA {

        public DFA166(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 166;
            this.eot = DFA166_eot;
            this.eof = DFA166_eof;
            this.min = DFA166_min;
            this.max = DFA166_max;
            this.accept = DFA166_accept;
            this.special = DFA166_special;
            this.transition = DFA166_transition;
        }
        public String getDescription() {
            return "1779:7: ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA166_0 = input.LA(1);

                         
                        int index166_0 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (LA166_0==LIDENTIFIER) ) {s = 1;}

                        else if ( (LA166_0==UIDENTIFIER) ) {s = 2;}

                        else if ( (LA166_0==DECREMENT_OP) && (synpred18_Ceylon())) {s = 3;}

                        else if ( (LA166_0==INCREMENT_OP) && (synpred18_Ceylon())) {s = 4;}

                        else if ( (LA166_0==POWER_OP) && (synpred18_Ceylon())) {s = 5;}

                        else if ( (LA166_0==INTERSECTION_OP) && (synpred18_Ceylon())) {s = 6;}

                        else if ( (LA166_0==COMMA) && (synpred18_Ceylon())) {s = 7;}

                        else if ( (LA166_0==UNION_OP) && (synpred18_Ceylon())) {s = 8;}

                        else if ( (LA166_0==RPAREN) && (synpred18_Ceylon())) {s = 9;}

                        else if ( (LA166_0==COMPLEMENT_OP) && (synpred18_Ceylon())) {s = 10;}

                        else if ( (LA166_0==RBRACE) && (synpred18_Ceylon())) {s = 11;}

                        else if ( (LA166_0==RBRACKET) && (synpred18_Ceylon())) {s = 12;}

                        else if ( (LA166_0==PRODUCT_OP) && (synpred18_Ceylon())) {s = 13;}

                        else if ( (LA166_0==QUOTIENT_OP) && (synpred18_Ceylon())) {s = 14;}

                        else if ( (LA166_0==REMAINDER_OP) && (synpred18_Ceylon())) {s = 15;}

                        else if ( (LA166_0==SCALE_OP) && (synpred18_Ceylon())) {s = 16;}

                        else if ( (LA166_0==SUM_OP) && (synpred18_Ceylon())) {s = 17;}

                        else if ( (LA166_0==DIFFERENCE_OP) && (synpred18_Ceylon())) {s = 18;}

                        else if ( (LA166_0==ELLIPSIS) && (synpred18_Ceylon())) {s = 19;}

                        else if ( (LA166_0==RANGE_OP) && (synpred18_Ceylon())) {s = 20;}

                        else if ( (LA166_0==SEGMENT_OP) && (synpred18_Ceylon())) {s = 21;}

                        else if ( (LA166_0==ENTRY_OP) && (synpred18_Ceylon())) {s = 22;}

                        else if ( (LA166_0==EXISTS) && (synpred18_Ceylon())) {s = 23;}

                        else if ( (LA166_0==NONEMPTY) && (synpred18_Ceylon())) {s = 24;}

                        else if ( (LA166_0==COMPARE_OP) && (synpred18_Ceylon())) {s = 25;}

                        else if ( (LA166_0==IN_OP) && (synpred18_Ceylon())) {s = 26;}

                        else if ( (LA166_0==LARGE_AS_OP) && (synpred18_Ceylon())) {s = 27;}

                        else if ( (LA166_0==LARGER_OP) && (synpred18_Ceylon())) {s = 28;}

                        else if ( (LA166_0==SMALL_AS_OP) && (synpred18_Ceylon())) {s = 29;}

                        else if ( (LA166_0==SMALLER_OP) && (synpred18_Ceylon())) {s = 30;}

                        else if ( (LA166_0==IS_OP) && (synpred18_Ceylon())) {s = 31;}

                        else if ( (LA166_0==EXTENDS) && (synpred18_Ceylon())) {s = 32;}

                        else if ( (LA166_0==SATISFIES) && (synpred18_Ceylon())) {s = 33;}

                        else if ( (LA166_0==CASE_TYPES) && (synpred18_Ceylon())) {s = 34;}

                        else if ( (LA166_0==EQUAL_OP) && (synpred18_Ceylon())) {s = 35;}

                        else if ( (LA166_0==NOT_EQUAL_OP) && (synpred18_Ceylon())) {s = 36;}

                        else if ( (LA166_0==IDENTICAL_OP) && (synpred18_Ceylon())) {s = 37;}

                        else if ( (LA166_0==AND_OP) && (synpred18_Ceylon())) {s = 38;}

                        else if ( (LA166_0==OR_OP) && (synpred18_Ceylon())) {s = 39;}

                        else if ( (LA166_0==SEMICOLON) && (synpred18_Ceylon())) {s = 40;}

                        else if ( (LA166_0==COMPUTE) && (synpred18_Ceylon())) {s = 41;}

                        else if ( (LA166_0==STRING_MID) && (synpred18_Ceylon())) {s = 42;}

                        else if ( (LA166_0==STRING_END) && (synpred18_Ceylon())) {s = 43;}

                        else if ( (LA166_0==ELSE_CLAUSE) && (synpred18_Ceylon())) {s = 44;}

                        else if ( (LA166_0==CASE_CLAUSE) && (synpred18_Ceylon())) {s = 45;}

                        else if ( (LA166_0==THEN_CLAUSE) && (synpred18_Ceylon())) {s = 46;}

                        else if ( (LA166_0==SPECIFY) && (synpred18_Ceylon())) {s = 47;}

                        else if ( (LA166_0==ADD_SPECIFY) && (synpred18_Ceylon())) {s = 48;}

                        else if ( (LA166_0==SUBTRACT_SPECIFY) && (synpred18_Ceylon())) {s = 49;}

                        else if ( (LA166_0==MULTIPLY_SPECIFY) && (synpred18_Ceylon())) {s = 50;}

                        else if ( (LA166_0==DIVIDE_SPECIFY) && (synpred18_Ceylon())) {s = 51;}

                        else if ( (LA166_0==REMAINDER_SPECIFY) && (synpred18_Ceylon())) {s = 52;}

                        else if ( (LA166_0==INTERSECT_SPECIFY) && (synpred18_Ceylon())) {s = 53;}

                        else if ( (LA166_0==UNION_SPECIFY) && (synpred18_Ceylon())) {s = 54;}

                        else if ( (LA166_0==COMPLEMENT_SPECIFY) && (synpred18_Ceylon())) {s = 55;}

                        else if ( (LA166_0==AND_SPECIFY) && (synpred18_Ceylon())) {s = 56;}

                        else if ( (LA166_0==OR_SPECIFY) && (synpred18_Ceylon())) {s = 57;}

                        else if ( (LA166_0==MEMBER_OP) && (synpred18_Ceylon())) {s = 58;}

                        else if ( (LA166_0==SAFE_MEMBER_OP) && (synpred18_Ceylon())) {s = 59;}

                        else if ( (LA166_0==SPREAD_OP) && (synpred18_Ceylon())) {s = 60;}

                        else if ( (LA166_0==LBRACKET) && (synpred18_Ceylon())) {s = 61;}

                        else if ( (LA166_0==LPAREN) && (synpred18_Ceylon())) {s = 62;}

                        else if ( (LA166_0==LBRACE) && (synpred18_Ceylon())) {s = 63;}

                         
                        input.seek(index166_0);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 166, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA175_eotS =
        "\77\uffff";
    static final String DFA175_eofS =
        "\77\uffff";
    static final String DFA175_minS =
        "\1\5\1\0\75\uffff";
    static final String DFA175_maxS =
        "\1\u0080\1\0\75\uffff";
    static final String DFA175_acceptS =
        "\2\uffff\1\2\73\uffff\1\1";
    static final String DFA175_specialS =
        "\1\uffff\1\0\75\uffff}>";
    static final String[] DFA175_transitionS = {
            "\1\2\2\uffff\2\2\11\uffff\2\2\3\uffff\2\2\1\uffff\3\2\2\uffff"+
            "\3\2\3\uffff\6\2\11\uffff\1\2\2\uffff\1\2\1\uffff\4\2\2\uffff"+
            "\4\2\4\uffff\1\2\1\uffff\1\2\1\uffff\1\2\4\uffff\2\2\3\uffff"+
            "\2\2\4\uffff\10\2\1\uffff\6\2\1\1\4\2\1\uffff\1\2\1\uffff\2"+
            "\2\3\uffff\1\2\6\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA175_eot = DFA.unpackEncodedString(DFA175_eotS);
    static final short[] DFA175_eof = DFA.unpackEncodedString(DFA175_eofS);
    static final char[] DFA175_min = DFA.unpackEncodedStringToUnsignedChars(DFA175_minS);
    static final char[] DFA175_max = DFA.unpackEncodedStringToUnsignedChars(DFA175_maxS);
    static final short[] DFA175_accept = DFA.unpackEncodedString(DFA175_acceptS);
    static final short[] DFA175_special = DFA.unpackEncodedString(DFA175_specialS);
    static final short[][] DFA175_transition;

    static {
        int numStates = DFA175_transitionS.length;
        DFA175_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA175_transition[i] = DFA.unpackEncodedString(DFA175_transitionS[i]);
        }
    }

    class DFA175 extends DFA {

        public DFA175(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 175;
            this.eot = DFA175_eot;
            this.eof = DFA175_eof;
            this.min = DFA175_min;
            this.max = DFA175_max;
            this.accept = DFA175_accept;
            this.special = DFA175_special;
            this.transition = DFA175_transition;
        }
        public String getDescription() {
            return "1882:7: ( ( typeArgumentsStart )=> typeArguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA175_1 = input.LA(1);

                         
                        int index175_1 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred21_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index175_1);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 175, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA176_eotS =
        "\77\uffff";
    static final String DFA176_eofS =
        "\77\uffff";
    static final String DFA176_minS =
        "\1\5\1\0\75\uffff";
    static final String DFA176_maxS =
        "\1\u0080\1\0\75\uffff";
    static final String DFA176_acceptS =
        "\2\uffff\1\2\73\uffff\1\1";
    static final String DFA176_specialS =
        "\1\uffff\1\0\75\uffff}>";
    static final String[] DFA176_transitionS = {
            "\1\2\2\uffff\2\2\11\uffff\2\2\3\uffff\2\2\1\uffff\3\2\2\uffff"+
            "\3\2\3\uffff\6\2\11\uffff\1\2\2\uffff\1\2\1\uffff\4\2\2\uffff"+
            "\4\2\4\uffff\1\2\1\uffff\1\2\1\uffff\1\2\4\uffff\2\2\3\uffff"+
            "\2\2\4\uffff\10\2\1\uffff\6\2\1\1\4\2\1\uffff\1\2\1\uffff\2"+
            "\2\3\uffff\1\2\6\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA176_eot = DFA.unpackEncodedString(DFA176_eotS);
    static final short[] DFA176_eof = DFA.unpackEncodedString(DFA176_eofS);
    static final char[] DFA176_min = DFA.unpackEncodedStringToUnsignedChars(DFA176_minS);
    static final char[] DFA176_max = DFA.unpackEncodedStringToUnsignedChars(DFA176_maxS);
    static final short[] DFA176_accept = DFA.unpackEncodedString(DFA176_acceptS);
    static final short[] DFA176_special = DFA.unpackEncodedString(DFA176_specialS);
    static final short[][] DFA176_transition;

    static {
        int numStates = DFA176_transitionS.length;
        DFA176_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA176_transition[i] = DFA.unpackEncodedString(DFA176_transitionS[i]);
        }
    }

    class DFA176 extends DFA {

        public DFA176(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 176;
            this.eot = DFA176_eot;
            this.eof = DFA176_eof;
            this.min = DFA176_min;
            this.max = DFA176_max;
            this.accept = DFA176_accept;
            this.special = DFA176_special;
            this.transition = DFA176_transition;
        }
        public String getDescription() {
            return "1893:7: ( ( typeArgumentsStart )=> typeArguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA176_1 = input.LA(1);

                         
                        int index176_1 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred22_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index176_1);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 176, _s, input);
            error(nvae);
            throw nvae;
        }

    }
 

    public static final BitSet FOLLOW_compilerAnnotations_in_compilationUnit86 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_compilationUnit96 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_importDeclaration_in_compilationUnit134 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_moduleDescriptor_in_compilationUnit177 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_packageDescriptor_in_compilationUnit220 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_toplevelDeclaration_in_compilationUnit248 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_RBRACE_in_compilationUnit268 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_EOF_in_compilationUnit295 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_toplevelDeclaration318 = new BitSet(new long[]{0x0202000800801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_declaration_in_toplevelDeclaration329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_annotatedModuleDescriptorStart354 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000820L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_annotatedModuleDescriptorStart356 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_MODULE_in_annotatedModuleDescriptorStart358 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_annotatedPackageDescriptorStart375 = new BitSet(new long[]{0x0000000000000000L,0x0001000004000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_annotatedPackageDescriptorStart377 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_PACKAGE_in_annotatedPackageDescriptorStart379 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFBFFL,0x000000000000003FL});
    public static final BitSet FOLLOW_set_in_annotatedPackageDescriptorStart381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_moduleDescriptor403 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000820L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_moduleDescriptor405 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_MODULE_in_moduleDescriptor413 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_moduleDescriptor430 = new BitSet(new long[]{0x0000000000400000L,0x0001000000000000L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_moduleDescriptor456 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_moduleDescriptor484 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_importModuleList_in_moduleDescriptor510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_importModuleList539 = new BitSet(new long[]{0x0080000004000000L,0x0001000100000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_compilerAnnotations_in_importModuleList565 = new BitSet(new long[]{0x0080000000000000L,0x0001000000000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_importModuleList567 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_importModule_in_importModuleList577 = new BitSet(new long[]{0x0080000004000000L,0x0001000100000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_RBRACE_in_importModuleList604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_packageDescriptor633 = new BitSet(new long[]{0x0000000000000000L,0x0001000004000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_packageDescriptor635 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_PACKAGE_in_packageDescriptor643 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_packageDescriptor660 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_packageDescriptor676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPORT_in_importModule705 = new BitSet(new long[]{0x0000000000400000L,0x2001000000000020L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_importModule734 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_importModule764 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_packagePath_in_importModule792 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_importModule830 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_importModule860 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_importModule887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPORT_in_importDeclaration916 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000024L});
    public static final BitSet FOLLOW_packagePath_in_importDeclaration944 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_importElementList_in_importDeclaration980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_importElementList1022 = new BitSet(new long[]{0x0000004004000000L,0x2000000100000020L});
    public static final BitSet FOLLOW_importElement_in_importElementList1045 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_COMMA_in_importElementList1076 = new BitSet(new long[]{0x0000004005000000L,0x2000000100000020L});
    public static final BitSet FOLLOW_importElement_in_importElementList1111 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_importWildcard_in_importElementList1139 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_importWildcard_in_importElementList1193 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_importElementList1208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_importElement1244 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_importName_in_importElement1254 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000004L});
    public static final BitSet FOLLOW_SPECIFY_in_importElement1273 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000024L});
    public static final BitSet FOLLOW_importName_in_importElement1307 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_importElementList_in_importElement1371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELLIPSIS_in_importWildcard1423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_importName1452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_importName1462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_packageName_in_packagePath1496 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_packagePath1527 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000420L});
    public static final BitSet FOLLOW_packageName_in_packagePath1562 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_packageName1627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_packageName1651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_typeName1680 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_annotationName1709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_memberName1738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_memberNameDeclaration1771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_memberNameDeclaration1789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_typeNameDeclaration1819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_typeNameDeclaration1837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_objectDeclaration1867 = new BitSet(new long[]{0x0000080000000000L,0x2000048000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_objectDeclaration1893 = new BitSet(new long[]{0x0000080000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_extendedType_in_objectDeclaration1931 = new BitSet(new long[]{0x0000000000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_objectDeclaration1970 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_classBody_in_objectDeclaration2008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_objectDeclaration2038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_objectExpression2077 = new BitSet(new long[]{0x0000080000000000L,0x0000008000000004L});
    public static final BitSet FOLLOW_extendedType_in_objectExpression2104 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_objectExpression2143 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_classBody_in_objectExpression2171 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodDeclaration2219 = new BitSet(new long[]{0x0000000024000000L,0x30002C0000000124L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodDeclaration2239 = new BitSet(new long[]{0x0000000024000000L,0x30002C0000000124L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_voidOrInferredMethodDeclaration2275 = new BitSet(new long[]{0x0000000024000000L,0x10002C0000000104L});
    public static final BitSet FOLLOW_typeParameters_in_voidOrInferredMethodDeclaration2312 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_parameters_in_voidOrInferredMethodDeclaration2357 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_typeConstraints_in_voidOrInferredMethodDeclaration2401 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_voidOrInferredMethodDeclaration2449 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_voidOrInferredMethodDeclaration2491 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_voidOrInferredMethodDeclaration2534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSIGN_in_setterDeclaration2583 = new BitSet(new long[]{0x0000000020000000L,0x2000240000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_setterDeclaration2610 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_setterDeclaration2649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_setterDeclaration2690 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_setterDeclaration2733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tuplePatternStart2768 = new BitSet(new long[]{0x0202000804801080L,0x200008002411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_compilerAnnotations_in_tuplePatternStart2786 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000020L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_tuplePatternStart2788 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_tuplePatternStart2791 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_tuplePatternStart2827 = new BitSet(new long[]{0x0202000800801080L,0x200008000411000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_tuplePatternStart2829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePatternStart_in_tuplePatternStart2848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_variableOrTuplePattern2890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variablePattern_in_variableOrTuplePattern2913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyItemPattern_in_pattern2965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyItemPattern_in_pattern3003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_pattern3038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variablePattern_in_pattern3061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyItemPattern_in_tupleOrEntryPattern3113 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyItemPattern_in_tupleOrEntryPattern3151 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_tupleOrEntryPattern3173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_variablePattern3202 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tuplePattern3231 = new BitSet(new long[]{0x0002000004000000L,0x200008022400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variadicPattern_in_tuplePattern3259 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_COMMA_in_tuplePattern3293 = new BitSet(new long[]{0x0002000004000000L,0x200008002400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variadicPattern_in_tuplePattern3333 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_tuplePattern3387 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicVariable_in_variadicPattern3445 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_pattern_in_variadicPattern3474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_variadicVariable3521 = new BitSet(new long[]{0x0000000000000000L,0x200008002400000CL});
    public static final BitSet FOLLOW_unionType_in_variadicVariable3547 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_variadicVariable3584 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_variadicVariable3628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableOrTuplePattern_in_keyItemPattern3670 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_keyItemPattern3686 = new BitSet(new long[]{0x0002000004000002L,0x200008000400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variableOrTuplePattern_in_keyItemPattern3714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_destructure3754 = new BitSet(new long[]{0x0002000004000000L,0x200008000400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_tupleOrEntryPattern_in_destructure3770 = new BitSet(new long[]{0x0000000000000000L,0x0000240000000000L});
    public static final BitSet FOLLOW_specifier_in_destructure3796 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_destructure3833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_inferredAttributeDeclaration3871 = new BitSet(new long[]{0x0000000020000000L,0x2000240000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_inferredAttributeDeclaration3898 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_specifier_in_inferredAttributeDeclaration3948 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_inferredAttributeDeclaration3983 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_inferredAttributeDeclaration4026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_inferredAttributeDeclaration4065 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_typedMethodOrAttributeDeclaration4115 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_typedMethodOrAttributeDeclaration4135 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_typedMethodOrAttributeDeclaration4161 = new BitSet(new long[]{0x0000000020000000L,0x00002C0000000104L});
    public static final BitSet FOLLOW_typeParameters_in_typedMethodOrAttributeDeclaration4210 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_typedMethodOrAttributeDeclaration4255 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_typeConstraints_in_typedMethodOrAttributeDeclaration4310 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_typedMethodOrAttributeDeclaration4370 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_typedMethodOrAttributeDeclaration4420 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration4472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_in_typedMethodOrAttributeDeclaration4527 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_typedMethodOrAttributeDeclaration4565 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration4611 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_typedMethodOrAttributeDeclaration4652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_interfaceDeclaration4711 = new BitSet(new long[]{0x0000000024100000L,0x30002C8000000024L});
    public static final BitSet FOLLOW_DYNAMIC_in_interfaceDeclaration4740 = new BitSet(new long[]{0x0000000024100000L,0x30002C8000000024L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_interfaceDeclaration4776 = new BitSet(new long[]{0x0000000024100000L,0x10002C8000000004L});
    public static final BitSet FOLLOW_typeParameters_in_interfaceDeclaration4814 = new BitSet(new long[]{0x0000000024100000L,0x1000248000000004L});
    public static final BitSet FOLLOW_caseTypes_in_interfaceDeclaration4852 = new BitSet(new long[]{0x0000000024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_interfaceDeclaration4906 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000004L});
    public static final BitSet FOLLOW_typeConstraints_in_interfaceDeclaration4943 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_interfaceBody_in_interfaceDeclaration4990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeSpecifier_in_interfaceDeclaration5031 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interfaceDeclaration5075 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_classDeclaration5123 = new BitSet(new long[]{0x0000080024100000L,0x30002C8000000124L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_classDeclaration5150 = new BitSet(new long[]{0x0000080024100000L,0x10002C8000000104L});
    public static final BitSet FOLLOW_typeParameters_in_classDeclaration5187 = new BitSet(new long[]{0x0000080024100000L,0x1000248000000104L});
    public static final BitSet FOLLOW_parameters_in_classDeclaration5224 = new BitSet(new long[]{0x0000080024100000L,0x1000248000000004L});
    public static final BitSet FOLLOW_caseTypes_in_classDeclaration5261 = new BitSet(new long[]{0x0000080024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_extendedType_in_classDeclaration5307 = new BitSet(new long[]{0x0000000024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_classDeclaration5345 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000004L});
    public static final BitSet FOLLOW_typeConstraints_in_classDeclaration5382 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_classBody_in_classDeclaration5429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classSpecifier_in_classDeclaration5470 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_classDeclaration5513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_constructor5552 = new BitSet(new long[]{0x0000080000000000L,0x2000000000000124L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_constructor5578 = new BitSet(new long[]{0x0000080000000000L,0x0000000000000104L});
    public static final BitSet FOLLOW_parameters_in_constructor5615 = new BitSet(new long[]{0x0000080000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_delegatedConstructor_in_constructor5656 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_constructor5683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_delegatedConstructor5712 = new BitSet(new long[]{0x0000000000000002L,0x2020000004000000L});
    public static final BitSet FOLLOW_classInstantiation_in_delegatedConstructor5740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALIAS_in_aliasDeclaration5780 = new BitSet(new long[]{0x0000000024000000L,0x30002C0000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_aliasDeclaration5806 = new BitSet(new long[]{0x0000000024000000L,0x10002C0000000000L});
    public static final BitSet FOLLOW_typeParameters_in_aliasDeclaration5844 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000000L});
    public static final BitSet FOLLOW_typeConstraints_in_aliasDeclaration5882 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000000L});
    public static final BitSet FOLLOW_typeSpecifier_in_aliasDeclaration5919 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_aliasDeclaration5954 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotations_in_assertion5983 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_ASSERT_in_assertion5991 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_assertion6007 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_assertion6031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_block6060 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_block6087 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_block6114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_interfaceBody6147 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_interfaceBody6174 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_interfaceBody6201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_classBody6230 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_classBody6256 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_classBody6283 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_extendedType6312 = new BitSet(new long[]{0x0000000000000002L,0x2020000004000000L});
    public static final BitSet FOLLOW_classInstantiation_in_extendedType6342 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_classSpecifier6392 = new BitSet(new long[]{0x0000000000000002L,0x2020000004000000L});
    public static final BitSet FOLLOW_SPECIFY_in_classSpecifier6421 = new BitSet(new long[]{0x0000000000000002L,0x2020000004000000L});
    public static final BitSet FOLLOW_classInstantiation_in_classSpecifier6460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_packageQualifiedClass6509 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_packageQualifiedClass6537 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_packageQualifiedClass6571 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_packageQualifiedClass6612 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_packageQualifiedClass6642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_unqualifiedClass6720 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_unqualifiedClass6749 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_unqualifiedClass6783 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUPER_in_superQualifiedClass6845 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_superQualifiedClass6864 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_superQualifiedClass6892 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_packageQualifiedClass_in_classInstantiation6952 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_unqualifiedClass_in_classInstantiation6980 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_superQualifiedClass_in_classInstantiation7008 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_positionalArguments_in_classInstantiation7044 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiedTypes7094 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_primaryType_in_satisfiedTypes7124 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_satisfiedTypes7176 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_COMMA_in_satisfiedTypes7211 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_UNION_OP_in_satisfiedTypes7213 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_primaryType_in_satisfiedTypes7259 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_CASE_TYPES_in_caseTypes7311 = new BitSet(new long[]{0x0000000000000000L,0x200008000400002CL});
    public static final BitSet FOLLOW_caseType_in_caseTypes7329 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_caseTypes7371 = new BitSet(new long[]{0x0000000000000000L,0x200008000400002CL});
    public static final BitSet FOLLOW_COMMA_in_caseTypes7407 = new BitSet(new long[]{0x0000000000000000L,0x200008000400002CL});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_caseTypes7409 = new BitSet(new long[]{0x0000000000000000L,0x200008000400002CL});
    public static final BitSet FOLLOW_caseType_in_caseTypes7455 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_primaryType_in_caseType7509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_caseType7526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ABSTRACTED_TYPE_in_abstractedType7561 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_primaryType_in_abstractedType7577 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_parameters7606 = new BitSet(new long[]{0x0002000804000000L,0x200108200400002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_parameterDeclarationOrRef_in_parameters7634 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_parameters7669 = new BitSet(new long[]{0x0002000805000000L,0x200108200400002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_parameterDeclarationOrRef_in_parameters7709 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_parameters7789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_parameter7818 = new BitSet(new long[]{0x0002000800000000L,0x200108000400002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotations_in_parameter7826 = new BitSet(new long[]{0x0002000800000000L,0x200008000400000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_parameterDeclaration_in_parameter7834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_parameterDeclaration7887 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_parameterDeclaration7907 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_parameterDeclaration7927 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_parameterDeclaration7947 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_parameterDeclaration7967 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_parameterDeclaration7993 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000100L});
    public static final BitSet FOLLOW_specifier_in_parameterDeclaration8031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameters_in_parameterDeclaration8084 = new BitSet(new long[]{0x0000000020000002L,0x0000200000000100L});
    public static final BitSet FOLLOW_functionSpecifier_in_parameterDeclaration8129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_parameterRef8181 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_parameterRef8207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameterRef_in_parameterDeclarationOrRef8255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameter_in_parameterDeclarationOrRef8280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeParameters8309 = new BitSet(new long[]{0x1000000004000000L,0x2000000001000020L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters8327 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_COMMA_in_typeParameters8355 = new BitSet(new long[]{0x1000000005000000L,0x2000000001000021L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters8389 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeParameters8440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_typeParameter8477 = new BitSet(new long[]{0x1000000000000000L,0x2000000001000020L});
    public static final BitSet FOLLOW_variance_in_typeParameter8496 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_typeParameter8525 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_typeDefault_in_typeParameter8551 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_variance8599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OUT_in_variance8615 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_typeConstraint8648 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_TYPE_CONSTRAINT_in_typeConstraint8656 = new BitSet(new long[]{0x0000000000100012L,0x2000088000000120L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_typeConstraint8682 = new BitSet(new long[]{0x0000000000100012L,0x0000088000000100L});
    public static final BitSet FOLLOW_typeParameters_in_typeConstraint8720 = new BitSet(new long[]{0x0000000000100012L,0x0000008000000100L});
    public static final BitSet FOLLOW_parameters_in_typeConstraint8758 = new BitSet(new long[]{0x0000000000100012L,0x0000008000000000L});
    public static final BitSet FOLLOW_caseTypes_in_typeConstraint8795 = new BitSet(new long[]{0x0000000000000012L,0x0000008000000000L});
    public static final BitSet FOLLOW_satisfiedTypes_in_typeConstraint8839 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_abstractedType_in_typeConstraint8877 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TYPE_CONSTRAINT_in_anonymousTypeConstraint8917 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_anonymousTypeConstraint8933 = new BitSet(new long[]{0x0000000000100002L,0x0000008000000000L});
    public static final BitSet FOLLOW_caseTypes_in_anonymousTypeConstraint8960 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000000L});
    public static final BitSet FOLLOW_satisfiedTypes_in_anonymousTypeConstraint8997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeConstraint_in_typeConstraints9055 = new BitSet(new long[]{0x0000000004000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_anonymousTypeConstraint_in_anonymousTypeConstraints9113 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_stringLiteral_in_annotationListStart9150 = new BitSet(new long[]{0x0002000000000000L,0x2000000000000020L,0x000000000000000AL});
    public static final BitSet FOLLOW_annotation_in_annotationListStart9152 = new BitSet(new long[]{0x0002000000000000L,0x2000000000000020L,0x000000000000000AL});
    public static final BitSet FOLLOW_set_in_annotationListStart9162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_destructureStart9189 = new BitSet(new long[]{0x0002000004000000L,0x2000000000000028L,0x000000000000000AL});
    public static final BitSet FOLLOW_compilerAnnotations_in_destructureStart9191 = new BitSet(new long[]{0x0002000000000000L,0x2000000000000028L,0x000000000000000AL});
    public static final BitSet FOLLOW_LBRACKET_in_destructureStart9201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_destructureStart9203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_destructureStart9205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_destructureStart9207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_destructureStart9209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_destructureStart9211 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_destructureStart9213 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_declarationOrStatement9246 = new BitSet(new long[]{0x0343800B40C19880L,0x2E7508100619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_destructure_in_declarationOrStatement9270 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_declarationOrStatement9298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assertion_in_declarationOrStatement9324 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_declarationOrStatement9352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_declarationOrStatement9374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotations_in_declaration9430 = new BitSet(new long[]{0x0202000800801080L,0x200008000411000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_classDeclaration_in_declaration9453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceDeclaration_in_declaration9479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_aliasDeclaration_in_declaration9495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectDeclaration_in_declaration9511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_setterDeclaration_in_declaration9527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_voidOrInferredMethodDeclaration_in_declaration9543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_inferredAttributeDeclaration_in_declaration9559 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typedMethodOrAttributeDeclaration_in_declaration9575 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructor_in_declaration9591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotatedDeclarationStart9634 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_annotation_in_annotatedDeclarationStart9637 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_unambiguousType_in_annotatedDeclarationStart9654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_annotatedDeclarationStart9658 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotatedAssertionStart9676 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotation_in_annotatedAssertionStart9679 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000020L});
    public static final BitSet FOLLOW_ASSERT_in_annotatedAssertionStart9682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_declarationStart9702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_declarationStart9710 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart9712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_declarationStart9725 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart9727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSIGN_in_declarationStart9740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_declarationStart9748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_declarationStart9756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_declarationStart9764 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart9766 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_declarationStart9779 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALIAS_in_declarationStart9787 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_declarationStart9796 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_declarationStart9798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_declarationStart9806 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart9808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType9836 = new BitSet(new long[]{0x0000010000000000L,0x0000000000200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType9856 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType9860 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType9862 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType9875 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType9877 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType9895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType9899 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType9901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_unambiguousType9910 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType9919 = new BitSet(new long[]{0x0000010000000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType9922 = new BitSet(new long[]{0x0000010000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType9926 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType9928 = new BitSet(new long[]{0x0000010000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType9948 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType9950 = new BitSet(new long[]{0x0000000000000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType9962 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType9966 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType9968 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_set_in_unambiguousType9988 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_unambiguousType10001 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10009 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10018 = new BitSet(new long[]{0x0000010001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10021 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10025 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10027 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType10048 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10050 = new BitSet(new long[]{0x0000000001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10061 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10065 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10067 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_COMMA_in_unambiguousType10097 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10108 = new BitSet(new long[]{0x0000010001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10111 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10115 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10117 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType10142 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10144 = new BitSet(new long[]{0x0000000001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10158 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10162 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10164 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_set_in_unambiguousType10195 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_directiveStatement_in_statement10229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_controlStatement_in_statement10245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionOrSpecificationStatement_in_statement10261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_expressionOrSpecificationStatement10299 = new BitSet(new long[]{0x0000000021000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_expressionOrSpecificationStatement10335 = new BitSet(new long[]{0x0000000001000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_expressionOrSpecificationStatement10380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMMA_in_expressionOrSpecificationStatement10410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_directive_in_directiveStatement10459 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_directiveStatement10476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_returnDirective_in_directive10505 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_throwDirective_in_directive10521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_breakDirective_in_directive10537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_continueDirective_in_directive10553 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RETURN_in_returnDirective10582 = new BitSet(new long[]{0x0142800B00408002L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_returnDirective10609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THROW_in_throwDirective10649 = new BitSet(new long[]{0x0100800B00408002L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_throwDirective10676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BREAK_in_breakDirective10716 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CONTINUE_in_continueDirective10745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_typeSpecifier10784 = new BitSet(new long[]{0x0000000000000002L,0x200008000400000CL});
    public static final BitSet FOLLOW_SPECIFY_in_typeSpecifier10813 = new BitSet(new long[]{0x0000000000000002L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_typeSpecifier10850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_typeDefault10890 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_typeDefault10907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_specifier10936 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_specifier10952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_lazySpecifier10981 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_lazySpecifier10997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_functionSpecifier11036 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_SPECIFY_in_functionSpecifier11064 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_functionSpecifier11090 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assignmentExpression_in_expression11127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonstringLiteral_in_base11156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringExpression_in_base11172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaLiteral_in_base11188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumeration_in_base11204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuple_in_base11220 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dynamicObject_in_base11236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectExpression_in_base11252 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selfReference_in_base11268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parExpression_in_base11284 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_baseReference_in_base11300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberReference_in_baseReference11342 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeReference_in_baseReference11358 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_base_in_primary11393 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_qualifiedReference_in_primary11426 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_indexOrIndexRange_in_primary11444 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_parameters_in_primary11470 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_positionalArguments_in_primary11490 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_namedArguments_in_primary11511 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_LPAREN_in_specifierParametersStart11545 = new BitSet(new long[]{0x0202000804801080L,0x200108200411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_RPAREN_in_specifierParametersStart11561 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_SPECIFY_in_specifierParametersStart11564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_specifierParametersStart11566 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifierParametersStart_in_specifierParametersStart11568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_specifierParametersStart11584 = new BitSet(new long[]{0x0202000800801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_specifierParametersStart11586 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberSelectionOperator_in_qualifiedReference11613 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberReference_in_qualifiedReference11641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeReference_in_qualifiedReference11661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MEMBER_OP_in_memberSelectionOperator11728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SAFE_MEMBER_OP_in_memberSelectionOperator11744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPREAD_OP_in_memberSelectionOperator11760 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_enumeration11789 = new BitSet(new long[]{0x0143800B04408000L,0x227508012618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_sequencedArgument_in_enumeration11817 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_enumeration11844 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tuple11873 = new BitSet(new long[]{0x0143800B04408000L,0x227508022618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_sequencedArgument_in_tuple11900 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_tuple11927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_dynamicObject11969 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_LBRACKET_in_dynamicObject11971 = new BitSet(new long[]{0x0143800B04408000L,0x227508022618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgument_in_dynamicObject12022 = new BitSet(new long[]{0x0143800B04408000L,0x227508022618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_anonymousArgument_in_dynamicObject12056 = new BitSet(new long[]{0x0143800B04408000L,0x227508022618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_sequencedArgument_in_dynamicObject12094 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_dynamicObject12121 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionExpression_in_valueCaseList12164 = new BitSet(new long[]{0x0000000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_COMMA_in_valueCaseList12206 = new BitSet(new long[]{0x0100800B01408002L,0xA23500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_UNION_OP_in_valueCaseList12233 = new BitSet(new long[]{0x0100800B01408002L,0xA23500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_intersectionExpression_in_valueCaseList12279 = new BitSet(new long[]{0x0000000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_memberName_in_memberReference12344 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_memberReference12384 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_typeReference12424 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_typeReference12465 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArgumentsStart12504 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000DL});
    public static final BitSet FOLLOW_type_in_typeArgumentsStart12518 = new BitSet(new long[]{0x0000000001000000L,0x0000080000000001L});
    public static final BitSet FOLLOW_set_in_typeArgumentsStart12526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArgumentsStart12546 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeArgumentsStart12561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_indexOrIndexRange12609 = new BitSet(new long[]{0x0142804B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_ELLIPSIS_in_indexOrIndexRange12637 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange12659 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange12702 = new BitSet(new long[]{0x0000004000000000L,0x0000020280000000L});
    public static final BitSet FOLLOW_ELLIPSIS_in_indexOrIndexRange12736 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RANGE_OP_in_indexOrIndexRange12771 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange12798 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_indexOrIndexRange12823 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange12849 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_functionOrExpression_in_indexOrIndexRange12885 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_indexOrIndexRange12911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_additiveExpression_in_index12940 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_namedArguments12970 = new BitSet(new long[]{0x0143800B04408000L,0x227508012618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgument_in_namedArguments13022 = new BitSet(new long[]{0x0143800B04408000L,0x227508012618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_anonymousArgument_in_namedArguments13056 = new BitSet(new long[]{0x0143800B04408000L,0x227508012618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_sequencedArgument_in_namedArguments13094 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_namedArguments13121 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_sequencedArgument13150 = new BitSet(new long[]{0x0143800B00408000L,0x227508002618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehension_in_sequencedArgument13206 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_positionalArgument_in_sequencedArgument13243 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_spreadArgument_in_sequencedArgument13279 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_COMMA_in_sequencedArgument13325 = new BitSet(new long[]{0x0143800B01408002L,0x227508002618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehension_in_sequencedArgument13391 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_positionalArgument_in_sequencedArgument13434 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_spreadArgument_in_sequencedArgument13477 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_namedArgument13562 = new BitSet(new long[]{0x0002000800000000L,0x200008000410002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_namedSpecifiedArgument_in_namedArgument13579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentDeclaration_in_namedArgument13601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_namedSpecifiedArgument13642 = new BitSet(new long[]{0x0000000000000000L,0x0000240000000000L});
    public static final BitSet FOLLOW_specifier_in_namedSpecifiedArgument13668 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_namedSpecifiedArgument13704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_anonymousArgument13742 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_anonymousArgument13768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_objectArgument13797 = new BitSet(new long[]{0x0000080000000000L,0x2000048000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_objectArgument13824 = new BitSet(new long[]{0x0000080000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_extendedType_in_objectArgument13862 = new BitSet(new long[]{0x0000000000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_objectArgument13901 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_classBody_in_objectArgument13939 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_objectArgument13969 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodArgument14026 = new BitSet(new long[]{0x0000000020000000L,0x2000240000000124L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodArgument14054 = new BitSet(new long[]{0x0000000020000000L,0x2000240000000124L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_voidOrInferredMethodArgument14091 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_parameters_in_voidOrInferredMethodArgument14129 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_block_in_voidOrInferredMethodArgument14166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_voidOrInferredMethodArgument14207 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_voidOrInferredMethodArgument14250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_inferredGetterArgument14307 = new BitSet(new long[]{0x0000000020000000L,0x2000240000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_inferredGetterArgument14334 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_inferredGetterArgument14372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_in_inferredGetterArgument14413 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_inferredGetterArgument14449 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_inferredGetterArgument14493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typedMethodOrGetterArgument14561 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_typedMethodOrGetterArgument14590 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_typedMethodOrGetterArgument14616 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_parameters_in_typedMethodOrGetterArgument14664 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_block_in_typedMethodOrGetterArgument14711 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_typedMethodOrGetterArgument14760 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument14813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_typedMethodOrGetterArgument14879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_in_typedMethodOrGetterArgument14928 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_typedMethodOrGetterArgument14970 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument15024 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_untypedMethodOrGetterArgument15096 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_untypedMethodOrGetterArgument15145 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_functionSpecifier_in_untypedMethodOrGetterArgument15190 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_untypedMethodOrGetterArgument15268 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_untypedMethodOrGetterArgument15314 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectArgument_in_namedArgumentDeclaration15351 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typedMethodOrGetterArgument_in_namedArgumentDeclaration15367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_voidOrInferredMethodArgument_in_namedArgumentDeclaration15383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_inferredGetterArgument_in_namedArgumentDeclaration15399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_untypedMethodOrGetterArgument_in_namedArgumentDeclaration15415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_namedArgumentStart15443 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_specificationStart_in_namedArgumentStart15453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_namedArgumentStart15457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_namedAnnotationArgumentsStart15475 = new BitSet(new long[]{0x0302800B04C09080L,0x223508010619812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgumentStart_in_namedAnnotationArgumentsStart15482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_iterableArgumentStart_in_namedAnnotationArgumentsStart15486 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RBRACE_in_namedAnnotationArgumentsStart15490 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_iterableArgumentStart15508 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_iterableArgumentStart15510 = new BitSet(new long[]{0x0000000001000000L,0x0000040100000000L});
    public static final BitSet FOLLOW_set_in_iterableArgumentStart15512 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_specificationStart15536 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_parameters_in_specificationStart15538 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_set_in_specificationStart15541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_parExpression15567 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_parExpression15584 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_parExpression15600 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_positionalArguments15637 = new BitSet(new long[]{0x0143800B04408000L,0x227508202618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_sequencedArgument_in_positionalArguments15666 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_positionalArguments15693 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_positionalArgument15730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_spreadArgument15759 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_unionExpression_in_spreadArgument15775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_anonParametersStart15800 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_LPAREN_in_anonParametersStart15807 = new BitSet(new long[]{0x0202000804801080L,0x200108200411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_RPAREN_in_anonParametersStart15823 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_anonParametersStart15831 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_anonParametersStart15834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RPAREN_in_anonParametersStart15838 = new BitSet(new long[]{0x0000000020000000L,0x1000000000000004L});
    public static final BitSet FOLLOW_set_in_anonParametersStart15840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_anonParametersStart15856 = new BitSet(new long[]{0x0202000800801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_anonParametersStart15858 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_nonemptyParametersStart15882 = new BitSet(new long[]{0x0202000804801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_compilerAnnotations_in_nonemptyParametersStart15884 = new BitSet(new long[]{0x0202000800801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_nonemptyParametersStart15886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousFunction_in_functionOrExpression15923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_let_in_functionOrExpression15939 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifExpression_in_functionOrExpression15955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchExpression_in_functionOrExpression15971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_functionOrExpression15989 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_letClause_in_let16018 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_patternStart16051 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_patternStart16053 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePatternStart_in_patternStart16064 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_pattern_in_letVariable16101 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_variable_in_letVariable16129 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_letVariable16165 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LET_in_letClause16205 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_LPAREN_in_letClause16221 = new BitSet(new long[]{0x0002000004000000L,0x200008200400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_letVariable_in_letClause16249 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_letClause16281 = new BitSet(new long[]{0x0002000004000000L,0x200008000400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_letVariable_in_letClause16307 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_letClause16347 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_letClause16363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchHeader_in_switchExpression16392 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_caseExpressions_in_switchExpression16408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_caseExpression_in_caseExpressions16455 = new BitSet(new long[]{0x0000008000080002L});
    public static final BitSet FOLLOW_defaultCaseExpression_in_caseExpressions16492 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_CLAUSE_in_caseExpression16536 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_caseItemList_in_caseExpression16553 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_caseExpression16569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_defaultCaseExpression16598 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_defaultCaseExpression16615 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_ifExpression16644 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_thenElseClauses_in_ifExpression16660 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifExpression_in_conditionalBranch16689 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_let_in_conditionalBranch16705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_disjunctionExpression_in_conditionalBranch16721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditions_in_thenElseClauses16750 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_THEN_CLAUSE_in_thenElseClauses16766 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_thenElseClauses16784 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_thenElseClauses16800 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_thenElseClauses16818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_anonymousFunction16866 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000100L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_anonymousFunction16894 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000100L});
    public static final BitSet FOLLOW_typeParameters_in_anonymousFunction16933 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_anonymousFunction16962 = new BitSet(new long[]{0x0000000024000000L,0x1000000000000104L});
    public static final BitSet FOLLOW_parameters_in_anonymousFunction16991 = new BitSet(new long[]{0x0000000024000000L,0x1000000000000104L});
    public static final BitSet FOLLOW_typeConstraints_in_anonymousFunction17030 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_COMPUTE_in_anonymousFunction17068 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_anonymousFunction17089 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_anonymousFunction17117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forComprehensionClause_in_comprehension17165 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifComprehensionClause_in_comprehension17181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forComprehensionClause_in_comprehensionClause17210 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifComprehensionClause_in_comprehensionClause17245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionComprehensionClause_in_comprehensionClause17262 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_expressionComprehensionClause17292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_forComprehensionClause17329 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_forIterator_in_forComprehensionClause17345 = new BitSet(new long[]{0x0143800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehensionClause_in_forComprehensionClause17361 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_ifComprehensionClause17394 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_ifComprehensionClause17410 = new BitSet(new long[]{0x0143800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehensionClause_in_ifComprehensionClause17426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_thenElseExpression_in_assignmentExpression17470 = new BitSet(new long[]{0x0800000410000222L,0x0008200800801000L,0x0000000000000001L});
    public static final BitSet FOLLOW_assignmentOperator_in_assignmentExpression17496 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_assignmentExpression17519 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_assignmentOperator17559 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ADD_SPECIFY_in_assignmentOperator17569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUBTRACT_SPECIFY_in_assignmentOperator17579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MULTIPLY_SPECIFY_in_assignmentOperator17589 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIVIDE_SPECIFY_in_assignmentOperator17599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REMAINDER_SPECIFY_in_assignmentOperator17609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERSECT_SPECIFY_in_assignmentOperator17619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNION_SPECIFY_in_assignmentOperator17629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPLEMENT_SPECIFY_in_assignmentOperator17639 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AND_SPECIFY_in_assignmentOperator17649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OR_SPECIFY_in_assignmentOperator17659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_disjunctionExpression_in_thenElseExpression17684 = new BitSet(new long[]{0x0000008000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_thenElseOperator_in_thenElseExpression17710 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_disjunctionExpression_in_thenElseExpression17732 = new BitSet(new long[]{0x0000008000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_thenElseOperator17772 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THEN_CLAUSE_in_thenElseOperator17789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conjunctionExpression_in_disjunctionExpression17820 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_disjunctionOperator_in_disjunctionExpression17846 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conjunctionExpression_in_disjunctionExpression17869 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_OR_OP_in_disjunctionOperator17909 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_conjunctionExpression17941 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_conjunctionOperator_in_conjunctionExpression17967 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_conjunctionExpression17990 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_AND_OP_in_conjunctionOperator18030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_notOperator_in_logicalNegationExpression18060 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_logicalNegationExpression18079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_equalityExpression_in_logicalNegationExpression18095 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_notOperator18124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_comparisonExpression_in_equalityExpression18156 = new BitSet(new long[]{0x0020020000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_equalityOperator_in_equalityExpression18182 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_comparisonExpression_in_equalityExpression18205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EQUAL_OP_in_equalityOperator18245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_EQUAL_OP_in_equalityOperator18262 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTICAL_OP_in_equalityOperator18278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression18309 = new BitSet(new long[]{0x3000080002100002L,0x0000188000000003L});
    public static final BitSet FOLLOW_comparisonOperator_in_comparisonExpression18337 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression18360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_largerOperator_in_comparisonExpression18382 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression18405 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_smallerOperator_in_comparisonExpression18427 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression18450 = new BitSet(new long[]{0x0000000000000002L,0x0000180000000000L});
    public static final BitSet FOLLOW_smallerOperator_in_comparisonExpression18485 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression18499 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeOperator_in_comparisonExpression18534 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_comparisonExpression18556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALL_AS_OP_in_smallerOperator18602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_smallerOperator18618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGE_AS_OP_in_largerOperator18647 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGER_OP_in_largerOperator18663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPARE_OP_in_comparisonOperator18692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_comparisonOperator18709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_typeOperator18738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_typeOperator18754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_typeOperator18770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_TYPES_in_typeOperator18786 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_entryRangeExpression_in_existenceEmptinessExpression18817 = new BitSet(new long[]{0x0000040000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_existsNonemptyOperator_in_existenceEmptinessExpression18845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXISTS_in_existsNonemptyOperator18891 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NONEMPTY_in_existsNonemptyOperator18908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_additiveExpression_in_entryRangeExpression18939 = new BitSet(new long[]{0x0000010000000002L,0x0000020080000000L});
    public static final BitSet FOLLOW_rangeIntervalEntryOperator_in_entryRangeExpression18965 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_additiveExpression_in_entryRangeExpression18988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RANGE_OP_in_rangeIntervalEntryOperator19028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_rangeIntervalEntryOperator19045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ENTRY_OP_in_rangeIntervalEntryOperator19061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_scaleExpression_in_additiveExpression19092 = new BitSet(new long[]{0x0000000200000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_additiveOperator_in_additiveExpression19118 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_scaleExpression_in_additiveExpression19141 = new BitSet(new long[]{0x0000000200000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_SUM_OP_in_additiveOperator19181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIFFERENCE_OP_in_additiveOperator19198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_multiplicativeExpression_in_scaleExpression19227 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_scaleOperator_in_scaleExpression19253 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_scaleExpression_in_scaleExpression19275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionExpression_in_multiplicativeExpression19317 = new BitSet(new long[]{0x0000000000000002L,0x0000000460000000L});
    public static final BitSet FOLLOW_multiplicativeOperator_in_multiplicativeExpression19343 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_unionExpression_in_multiplicativeExpression19366 = new BitSet(new long[]{0x0000000000000002L,0x0000000460000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_multiplicativeOperator19406 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QUOTIENT_OP_in_multiplicativeOperator19423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REMAINDER_OP_in_multiplicativeOperator19439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionExpression_in_unionExpression19470 = new BitSet(new long[]{0x0000000008000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_unionOperator_in_unionExpression19496 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_intersectionExpression_in_unionExpression19519 = new BitSet(new long[]{0x0000000008000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_unionOperator19563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPLEMENT_OP_in_unionOperator19579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_negationComplementExpression_in_intersectionExpression19610 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_intersectionOperator_in_intersectionExpression19636 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_negationComplementExpression_in_intersectionExpression19659 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_intersectionOperator19703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unaryMinusOrComplementOperator_in_negationComplementExpression19732 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_negationComplementExpression_in_negationComplementExpression19751 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exponentiationExpression_in_negationComplementExpression19767 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIFFERENCE_OP_in_unaryMinusOrComplementOperator19796 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUM_OP_in_unaryMinusOrComplementOperator19813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_incrementDecrementExpression_in_exponentiationExpression19842 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_exponentiationOperator_in_exponentiationExpression19868 = new BitSet(new long[]{0x0100800900408000L,0x222500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_exponentiationExpression_in_exponentiationExpression19890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_POWER_OP_in_exponentiationOperator19930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SCALE_OP_in_scaleOperator19960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_prefixOperator_in_incrementDecrementExpression19990 = new BitSet(new long[]{0x0100800900408000L,0x222500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_incrementDecrementExpression_in_incrementDecrementExpression20008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_postfixIncrementDecrementExpression_in_incrementDecrementExpression20024 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DECREMENT_OP_in_prefixOperator20053 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INCREMENT_OP_in_prefixOperator20070 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_in_postfixIncrementDecrementExpression20100 = new BitSet(new long[]{0x0100000100000002L});
    public static final BitSet FOLLOW_postfixOperator_in_postfixIncrementDecrementExpression20128 = new BitSet(new long[]{0x0100000100000002L});
    public static final BitSet FOLLOW_DECREMENT_OP_in_postfixOperator20168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INCREMENT_OP_in_postfixOperator20185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THIS_in_selfReference20215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUPER_in_selfReference20231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OUTER_in_selfReference20248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_selfReference20264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NATURAL_LITERAL_in_nonstringLiteral20297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FLOAT_LITERAL_in_nonstringLiteral20314 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_nonstringLiteral20331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_stringLiteral20361 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VERBATIM_STRING_in_stringLiteral20378 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_stringExpression20418 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_START_in_stringExpression20434 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_stringExpression20452 = new BitSet(new long[]{0x0000000000000000L,0x0002800000000000L});
    public static final BitSet FOLLOW_STRING_MID_in_stringExpression20478 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_stringExpression20500 = new BitSet(new long[]{0x0000000000000000L,0x0002800000000000L});
    public static final BitSet FOLLOW_STRING_END_in_stringExpression20527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArguments20565 = new BitSet(new long[]{0x1000000000000000L,0x200008000500000DL});
    public static final BitSet FOLLOW_variance_in_typeArguments20605 = new BitSet(new long[]{0x0000000001000000L,0x200008000400000DL});
    public static final BitSet FOLLOW_type_in_typeArguments20645 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_typeArguments20696 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_COMMA_in_typeArguments20742 = new BitSet(new long[]{0x1000000001000000L,0x200008000500000DL});
    public static final BitSet FOLLOW_variance_in_typeArguments20782 = new BitSet(new long[]{0x0000000001000000L,0x200008000400000DL});
    public static final BitSet FOLLOW_type_in_typeArguments20828 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_typeArguments20919 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeArguments21005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_variadicType21053 = new BitSet(new long[]{0x0000000000000002L,0x0010000020000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_variadicType21079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUM_OP_in_variadicType21107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_variadicType21136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_defaultedType21182 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_defaultedType21208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_defaultedType21235 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_spreadType21273 = new BitSet(new long[]{0x0000000000000002L,0x200008000400000CL});
    public static final BitSet FOLLOW_unionType_in_spreadType21301 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tupleType21341 = new BitSet(new long[]{0x0000000000000000L,0x200008022400000CL});
    public static final BitSet FOLLOW_spreadType_in_tupleType21369 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_defaultedType_in_tupleType21399 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_COMMA_in_tupleType21433 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_defaultedType_in_tupleType21459 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_tupleType21499 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_groupedType21528 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_groupedType21546 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_groupedType21562 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_iterableType21590 = new BitSet(new long[]{0x0000000000000000L,0x200008010400000CL});
    public static final BitSet FOLLOW_variadicType_in_iterableType21615 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_iterableType21639 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_type21693 = new BitSet(new long[]{0x0000000020000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_anonymousTypeConstraints_in_type21720 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_COMPUTE_in_type21747 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_entryType_in_type21756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_entryType_in_type21772 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_entryType21812 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_ENTRY_OP_in_entryType21838 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_unionType_in_entryType21872 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionType_in_unionType21937 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_unionType21978 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_intersectionType_in_unionType22018 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_primaryType_in_intersectionType22108 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_intersectionType22149 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_primaryType_in_intersectionType22189 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_qualifiedType_in_atomicType22268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tupleType_in_atomicType22285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_iterableType_in_atomicType22302 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_atomicType_in_primaryType22340 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_OPTIONAL_in_primaryType22366 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_LBRACKET_in_primaryType22387 = new BitSet(new long[]{0x0000000000000000L,0x0000000200008000L});
    public static final BitSet FOLLOW_NATURAL_LITERAL_in_primaryType22419 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_primaryType22453 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_LPAREN_in_primaryType22474 = new BitSet(new long[]{0x0000000000000000L,0x200008202400000CL});
    public static final BitSet FOLLOW_spreadType_in_primaryType22512 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_defaultedType_in_primaryType22554 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_primaryType22598 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_defaultedType_in_primaryType22632 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_primaryType22686 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_baseType22744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_groupedType_in_baseType22766 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_baseType22782 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_baseType22798 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_baseType22816 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_baseType_in_qualifiedType22845 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_qualifiedType22871 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_qualifiedType22883 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_typeName_in_typeNameWithArguments22923 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_typeNameWithArguments22950 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotations23014 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotation_in_annotations23053 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotationName_in_annotation23094 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000104L});
    public static final BitSet FOLLOW_positionalArguments_in_annotation23117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArguments_in_annotation23146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotation_in_compilerAnnotations23250 = new BitSet(new long[]{0x0000000004000002L});
    public static final BitSet FOLLOW_COMPILER_ANNOTATION_in_compilerAnnotation23290 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotationName_in_compilerAnnotation23307 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_compilerAnnotation23337 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_stringLiteral_in_compilerAnnotation23349 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_conditions23391 = new BitSet(new long[]{0x2142840B00408000L,0x227508A0061A813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_condition_in_conditions23417 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_conditions23437 = new BitSet(new long[]{0x2142840B01408000L,0x227508A0061A813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_condition_in_conditions23472 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_conditions23534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_existsCondition_in_condition23563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonemptyCondition_in_condition23579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_isCondition_in_condition23595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_satisfiesCondition_in_condition23612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_booleanCondition_in_condition23628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_booleanCondition23669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_existsCondition23712 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_EXISTS_in_existsCondition23739 = new BitSet(new long[]{0x0102800B04408000L,0x223508000618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_letVariable_in_existsCondition23797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_existsCondition23831 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_existsCondition23851 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_nonemptyCondition23904 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_NONEMPTY_in_nonemptyCondition23931 = new BitSet(new long[]{0x0102800B04408000L,0x223508000618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_letVariable_in_nonemptyCondition23989 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_nonemptyCondition24023 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_nonemptyCondition24044 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_isCondition24093 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_IS_OP_in_isCondition24120 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_isCondition24137 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_isConditionVariable_in_isCondition24181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_isCondition24209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_isConditionVariable24258 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_isConditionVariable24274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiesCondition24303 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_satisfiesCondition24320 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeName_in_satisfiesCondition24337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifElse_in_controlStatement24366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchCaseElse_in_controlStatement24383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_whileLoop_in_controlStatement24400 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forElse_in_controlStatement24417 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tryCatchFinally_in_controlStatement24434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dynamic_in_controlStatement24450 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_controlBlock24488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_dynamic24554 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_dynamic24571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifBlock_in_ifElse24608 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_elseBlock_in_ifElse24636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_ifBlock24676 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_ifBlock24693 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_ifBlock24709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_elseBlock24738 = new BitSet(new long[]{0x0040000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_elseIf_in_elseBlock24765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_elseBlock24795 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifElse_in_elseIf24834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchHeader_in_switchCaseElse24871 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_cases_in_switchCaseElse24888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SWITCH_CLAUSE_in_switchHeader24917 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_LPAREN_in_switchHeader24934 = new BitSet(new long[]{0x0102800B04408000L,0x223508200618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_switched_in_switchHeader24960 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_switchHeader24988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifiedVariable_in_switched25047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_switched25067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_caseBlock_in_cases25124 = new BitSet(new long[]{0x0000008000080002L});
    public static final BitSet FOLLOW_defaultCaseBlock_in_cases25161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_CLAUSE_in_caseBlock25205 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_caseItemList_in_caseBlock25222 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_caseBlock25238 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_defaultCaseBlock25267 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_defaultCaseBlock25284 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_caseItemList25313 = new BitSet(new long[]{0x2100800B00408000L,0x223500A00610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_caseItem_in_caseItemList25334 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_caseItemList25361 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_isCaseCondition_in_caseItem25395 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_satisfiesCaseCondition_in_caseItem25416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_matchCaseCondition_in_caseItem25432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_valueCaseList_in_matchCaseCondition25461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_isCaseCondition25490 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_isCaseCondition25507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiesCaseCondition25536 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_satisfiesCaseCondition25553 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forBlock_in_forElse25590 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_failBlock_in_forElse25617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_forBlock25657 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_forIterator_in_forBlock25674 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_forBlock25691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_failBlock25720 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_failBlock25737 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_forIterator25775 = new BitSet(new long[]{0x0002000004000000L,0x200008200400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_pattern_in_forIterator25816 = new BitSet(new long[]{0x1000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_variable_in_forIterator25847 = new BitSet(new long[]{0x1000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_containment_in_forIterator25887 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_forIterator25923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_containment25955 = new BitSet(new long[]{0x0100800B00408002L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_containment25973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_whileBlock_in_whileLoop26016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_WHILE_CLAUSE_in_whileBlock26045 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_whileBlock26061 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_whileBlock26077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tryBlock_in_tryCatchFinally26114 = new BitSet(new long[]{0x0000400000200002L});
    public static final BitSet FOLLOW_catchBlock_in_tryCatchFinally26141 = new BitSet(new long[]{0x0000400000200002L});
    public static final BitSet FOLLOW_finallyBlock_in_tryCatchFinally26180 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TRY_CLAUSE_in_tryBlock26220 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000104L});
    public static final BitSet FOLLOW_resources_in_tryBlock26247 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_tryBlock26267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_tryBlock26295 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CATCH_CLAUSE_in_catchBlock26334 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_catchVariable_in_catchBlock26351 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_catchBlock26367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_catchVariable26396 = new BitSet(new long[]{0x0002000004000000L,0x200008200400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variable_in_catchVariable26421 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_catchVariable26447 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FINALLY_CLAUSE_in_finallyBlock26478 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_finallyBlock26495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_resources26524 = new BitSet(new long[]{0x0102800B04408000L,0x223508200618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_resource_in_resources26550 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_resources26581 = new BitSet(new long[]{0x0102800B04408000L,0x223508000618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_resource_in_resources26606 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_resources26642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifiedVariable_in_resource26703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_resource26726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_specifiedVariable26757 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_specifiedVariable26784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_variable26824 = new BitSet(new long[]{0x0002000000000000L,0x200008000400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_var_in_variable26832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_var26892 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_var26922 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_var26951 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_var26980 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_var27008 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_var27038 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_memberName_in_var27082 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_var27110 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_memberName_in_impliedVariable27150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_referencePathElement27180 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_referencePathElement27197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_referencePathElement_in_referencePath27242 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_PACKAGE_in_referencePath27272 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_referencePath27292 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_referencePathElement_in_referencePath27312 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_referencePath27349 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_referencePathElement_in_referencePath27361 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MODULE_in_moduleLiteral27399 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_moduleLiteral27418 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_packageLiteral27446 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_packageLiteral27465 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_classLiteral27493 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_classLiteral27512 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_interfaceLiteral27540 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_interfaceLiteral27559 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_newLiteral27587 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_newLiteral27606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALIAS_in_aliasLiteral27634 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_aliasLiteral27653 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TYPE_CONSTRAINT_in_typeParameterLiteral27681 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_typeParameterLiteral27700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_valueLiteral27737 = new BitSet(new long[]{0x0000000000000000L,0x2000000004000020L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_valueLiteral27759 = new BitSet(new long[]{0x0000000000000000L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_valueLiteral27781 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_functionLiteral27804 = new BitSet(new long[]{0x0000000000000000L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_functionLiteral27818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_memberPathElement27843 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_memberPathElement27869 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberPathElement_in_memberModelExpression27932 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_memberModelExpression27955 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_memberModelExpression27973 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberPathElement_in_memberModelExpression27991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primaryType_in_memberModelExpression28016 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_memberModelExpression28034 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberPathElement_in_memberModelExpression28052 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typeModelExpression28091 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberModelExpression_in_modelExpression28143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeModelExpression_in_modelExpression28160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BACKTICK_in_metaLiteral28187 = new BitSet(new long[]{0x0202000000800080L,0x300008000411082CL,0x0000000000000002L});
    public static final BitSet FOLLOW_moduleLiteral_in_metaLiteral28204 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_packageLiteral_in_metaLiteral28241 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_classLiteral_in_metaLiteral28259 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_newLiteral_in_metaLiteral28277 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_interfaceLiteral_in_metaLiteral28295 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_aliasLiteral_in_metaLiteral28313 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_typeParameterLiteral_in_metaLiteral28331 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_valueLiteral_in_metaLiteral28349 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_functionLiteral_in_metaLiteral28367 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_modelExpression_in_metaLiteral28385 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_BACKTICK_in_metaLiteral28416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedModuleDescriptorStart_in_synpred1_Ceylon164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedPackageDescriptorStart_in_synpred2_Ceylon207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred3_Ceylon2810 = new BitSet(new long[]{0x0202000800801080L,0x200008000411000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_synpred3_Ceylon2812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePatternStart_in_synpred4_Ceylon2885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_synpred5_Ceylon2950 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred5_Ceylon2952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_synpred6_Ceylon2988 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred6_Ceylon2990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePatternStart_in_synpred7_Ceylon3026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_synpred8_Ceylon3098 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred8_Ceylon3100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_synpred9_Ceylon3136 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred9_Ceylon3138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred10_Ceylon3427 = new BitSet(new long[]{0x0000000000000000L,0x200008002400000CL});
    public static final BitSet FOLLOW_unionType_in_synpred10_Ceylon3429 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_synpred10_Ceylon3432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_destructureStart_in_synpred11_Ceylon9265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_synpred12_Ceylon9291 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedAssertionStart_in_synpred13_Ceylon9319 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationListStart_in_synpred14_Ceylon9345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_synpred15_Ceylon9470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_synpred15_Ceylon9472 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_synpred15_Ceylon9474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unambiguousType_in_synpred16_Ceylon9649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifierParametersStart_in_synpred17_Ceylon11466 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred19_Ceylon12008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousArgument_in_synpred20_Ceylon12043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeArgumentsStart_in_synpred21_Ceylon12371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeArgumentsStart_in_synpred22_Ceylon12452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_index_in_synpred23_Ceylon12680 = new BitSet(new long[]{0x0000004000000000L,0x0000020080000000L});
    public static final BitSet FOLLOW_set_in_synpred23_Ceylon12682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred24_Ceylon13008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousArgument_in_synpred25_Ceylon13043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_synpred26_Ceylon13181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_synpred26_Ceylon13185 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_synpred26_Ceylon13187 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFEFFFFFFFFFFFFFFL,0x000000000000003FL});
    public static final BitSet FOLLOW_set_in_synpred26_Ceylon13189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_synpred27_Ceylon13364 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_synpred27_Ceylon13368 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_synpred27_Ceylon13370 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFEFFFFFFFFFFFFFFL,0x000000000000003FL});
    public static final BitSet FOLLOW_set_in_synpred27_Ceylon13372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred28_Ceylon15479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_synpred29_Ceylon15908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_synpred29_Ceylon15910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonParametersStart_in_synpred29_Ceylon15912 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_synpred30_Ceylon16044 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred30_Ceylon16046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred31_Ceylon16096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_synpred32_Ceylon17228 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_synpred32_Ceylon17230 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFEFFFFFFFFFFFFFFL,0x000000000000003FL});
    public static final BitSet FOLLOW_set_in_synpred32_Ceylon17232 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_synpred33_Ceylon21035 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_set_in_synpred33_Ceylon21037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_synpred34_Ceylon21166 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_synpred34_Ceylon21169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_synpred35_Ceylon21676 = new BitSet(new long[]{0x0000000020000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_set_in_synpred35_Ceylon21678 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedAnnotationArgumentsStart_in_synpred36_Ceylon23134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred37_Ceylon23769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred38_Ceylon23774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred38_Ceylon23778 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_synpred38_Ceylon23781 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred38_Ceylon23783 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred39_Ceylon23827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred40_Ceylon23961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred41_Ceylon23966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred41_Ceylon23970 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_synpred41_Ceylon23973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred41_Ceylon23975 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred42_Ceylon24019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred43_Ceylon24164 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_synpred43_Ceylon24166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_synpred44_Ceylon24482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPILER_ANNOTATION_in_synpred45_Ceylon25029 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_synpred45_Ceylon25031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred45_Ceylon25033 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_synpred46_Ceylon25392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_synpred47_Ceylon25413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred48_Ceylon25811 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPILER_ANNOTATION_in_synpred49_Ceylon26687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_synpred49_Ceylon26689 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred49_Ceylon26691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_synpred50_Ceylon28125 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_primaryType_in_synpred50_Ceylon28127 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_synpred50_Ceylon28130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred50_Ceylon28134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_synpred51_Ceylon28223 = new BitSet(new long[]{0x0000000000008000L,0x0000000000000020L});
    public static final BitSet FOLLOW_set_in_synpred51_Ceylon28225 = new BitSet(new long[]{0x0000000000000002L});

}