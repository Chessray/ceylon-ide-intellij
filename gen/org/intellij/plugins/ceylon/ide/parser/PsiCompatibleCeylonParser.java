// $ANTLR 3.4 /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g 2015-06-16 12:44:52
 package org.intellij.plugins.ceylon.ide.parser;
                  import com.redhat.ceylon.compiler.typechecker.tree.MissingToken;
                  import com.redhat.ceylon.compiler.typechecker.tree.Node;
                  import com.redhat.ceylon.compiler.typechecker.analyzer.Warning;
                  import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.MethodDeclaration;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.MethodDefinition;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.FunctionArgument;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.AttributeDeclaration;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.Variable;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.ClassDefinition;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.IsCase;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.ExtendedTypeExpression;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.*;

import com.redhat.ceylon.compiler.typechecker.parser.ParseError;
                
                  import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.Package; 

import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class PsiCompatibleCeylonParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "ABSTRACTED_TYPE", "ADD_SPECIFY", "AIDENTIFIER", "ALIAS", "AND_OP", "AND_SPECIFY", "ASSEMBLY", "ASSERT", "ASSIGN", "ASTRING_LITERAL", "AVERBATIM_STRING", "BACKTICK", "BREAK", "BinaryDigit", "BinaryDigits", "CASE_CLAUSE", "CASE_TYPES", "CATCH_CLAUSE", "CHAR_LITERAL", "CLASS_DEFINITION", "COMMA", "COMPARE_OP", "COMPILER_ANNOTATION", "COMPLEMENT_OP", "COMPLEMENT_SPECIFY", "COMPUTE", "CONTINUE", "CharPart", "DECREMENT_OP", "DIFFERENCE_OP", "DIVIDE_SPECIFY", "DYNAMIC", "Digit", "Digits", "ELLIPSIS", "ELSE_CLAUSE", "ENTRY_OP", "EQUAL_OP", "EXISTS", "EXTENDS", "EscapeSequence", "Exponent", "FINALLY_CLAUSE", "FLOAT_LITERAL", "FOR_CLAUSE", "FUNCTION_MODIFIER", "FractionalMagnitude", "HexDigit", "HexDigits", "IDENTICAL_OP", "IF_CLAUSE", "IMPORT", "INCREMENT_OP", "INTERFACE_DEFINITION", "INTERSECTION_OP", "INTERSECT_SPECIFY", "IN_OP", "IS_OP", "IdentifierPart", "IdentifierStart", "LARGER_OP", "LARGE_AS_OP", "LBRACE", "LBRACKET", "LET", "LIDENTIFIER", "LINE_COMMENT", "LIdentifierPrefix", "LPAREN", "Letter", "MEMBER_OP", "MODULE", "MULTIPLY_SPECIFY", "MULTI_COMMENT", "Magnitude", "NATURAL_LITERAL", "NEW", "NONEMPTY", "NOT_EQUAL_OP", "NOT_OP", "OBJECT_DEFINITION", "OPTIONAL", "OR_OP", "OR_SPECIFY", "OUT", "OUTER", "PACKAGE", "PIDENTIFIER", "POWER_OP", "PRODUCT_OP", "QUOTIENT_OP", "RANGE_OP", "RBRACE", "RBRACKET", "REMAINDER_OP", "REMAINDER_SPECIFY", "RETURN", "RPAREN", "SAFE_MEMBER_OP", "SATISFIES", "SCALE_OP", "SEGMENT_OP", "SEMICOLON", "SMALLER_OP", "SMALL_AS_OP", "SPECIFY", "SPREAD_OP", "STRING_END", "STRING_LITERAL", "STRING_MID", "STRING_START", "SUBTRACT_SPECIFY", "SUM_OP", "SUPER", "SWITCH_CLAUSE", "StringPart", "THEN_CLAUSE", "THIS", "THROW", "TRY_CLAUSE", "TYPE_CONSTRAINT", "UIDENTIFIER", "UIdentifierPrefix", "UNION_OP", "UNION_SPECIFY", "VALUE_MODIFIER", "VERBATIM_STRING", "VOID_MODIFIER", "WHILE_CLAUSE", "WS"
    };

    public static final int EOF=-1;
    public static final int ABSTRACTED_TYPE=4;
    public static final int ADD_SPECIFY=5;
    public static final int AIDENTIFIER=6;
    public static final int ALIAS=7;
    public static final int AND_OP=8;
    public static final int AND_SPECIFY=9;
    public static final int ASSEMBLY=10;
    public static final int ASSERT=11;
    public static final int ASSIGN=12;
    public static final int ASTRING_LITERAL=13;
    public static final int AVERBATIM_STRING=14;
    public static final int BACKTICK=15;
    public static final int BREAK=16;
    public static final int BinaryDigit=17;
    public static final int BinaryDigits=18;
    public static final int CASE_CLAUSE=19;
    public static final int CASE_TYPES=20;
    public static final int CATCH_CLAUSE=21;
    public static final int CHAR_LITERAL=22;
    public static final int CLASS_DEFINITION=23;
    public static final int COMMA=24;
    public static final int COMPARE_OP=25;
    public static final int COMPILER_ANNOTATION=26;
    public static final int COMPLEMENT_OP=27;
    public static final int COMPLEMENT_SPECIFY=28;
    public static final int COMPUTE=29;
    public static final int CONTINUE=30;
    public static final int CharPart=31;
    public static final int DECREMENT_OP=32;
    public static final int DIFFERENCE_OP=33;
    public static final int DIVIDE_SPECIFY=34;
    public static final int DYNAMIC=35;
    public static final int Digit=36;
    public static final int Digits=37;
    public static final int ELLIPSIS=38;
    public static final int ELSE_CLAUSE=39;
    public static final int ENTRY_OP=40;
    public static final int EQUAL_OP=41;
    public static final int EXISTS=42;
    public static final int EXTENDS=43;
    public static final int EscapeSequence=44;
    public static final int Exponent=45;
    public static final int FINALLY_CLAUSE=46;
    public static final int FLOAT_LITERAL=47;
    public static final int FOR_CLAUSE=48;
    public static final int FUNCTION_MODIFIER=49;
    public static final int FractionalMagnitude=50;
    public static final int HexDigit=51;
    public static final int HexDigits=52;
    public static final int IDENTICAL_OP=53;
    public static final int IF_CLAUSE=54;
    public static final int IMPORT=55;
    public static final int INCREMENT_OP=56;
    public static final int INTERFACE_DEFINITION=57;
    public static final int INTERSECTION_OP=58;
    public static final int INTERSECT_SPECIFY=59;
    public static final int IN_OP=60;
    public static final int IS_OP=61;
    public static final int IdentifierPart=62;
    public static final int IdentifierStart=63;
    public static final int LARGER_OP=64;
    public static final int LARGE_AS_OP=65;
    public static final int LBRACE=66;
    public static final int LBRACKET=67;
    public static final int LET=68;
    public static final int LIDENTIFIER=69;
    public static final int LINE_COMMENT=70;
    public static final int LIdentifierPrefix=71;
    public static final int LPAREN=72;
    public static final int Letter=73;
    public static final int MEMBER_OP=74;
    public static final int MODULE=75;
    public static final int MULTIPLY_SPECIFY=76;
    public static final int MULTI_COMMENT=77;
    public static final int Magnitude=78;
    public static final int NATURAL_LITERAL=79;
    public static final int NEW=80;
    public static final int NONEMPTY=81;
    public static final int NOT_EQUAL_OP=82;
    public static final int NOT_OP=83;
    public static final int OBJECT_DEFINITION=84;
    public static final int OPTIONAL=85;
    public static final int OR_OP=86;
    public static final int OR_SPECIFY=87;
    public static final int OUT=88;
    public static final int OUTER=89;
    public static final int PACKAGE=90;
    public static final int PIDENTIFIER=91;
    public static final int POWER_OP=92;
    public static final int PRODUCT_OP=93;
    public static final int QUOTIENT_OP=94;
    public static final int RANGE_OP=95;
    public static final int RBRACE=96;
    public static final int RBRACKET=97;
    public static final int REMAINDER_OP=98;
    public static final int REMAINDER_SPECIFY=99;
    public static final int RETURN=100;
    public static final int RPAREN=101;
    public static final int SAFE_MEMBER_OP=102;
    public static final int SATISFIES=103;
    public static final int SCALE_OP=104;
    public static final int SEGMENT_OP=105;
    public static final int SEMICOLON=106;
    public static final int SMALLER_OP=107;
    public static final int SMALL_AS_OP=108;
    public static final int SPECIFY=109;
    public static final int SPREAD_OP=110;
    public static final int STRING_END=111;
    public static final int STRING_LITERAL=112;
    public static final int STRING_MID=113;
    public static final int STRING_START=114;
    public static final int SUBTRACT_SPECIFY=115;
    public static final int SUM_OP=116;
    public static final int SUPER=117;
    public static final int SWITCH_CLAUSE=118;
    public static final int StringPart=119;
    public static final int THEN_CLAUSE=120;
    public static final int THIS=121;
    public static final int THROW=122;
    public static final int TRY_CLAUSE=123;
    public static final int TYPE_CONSTRAINT=124;
    public static final int UIDENTIFIER=125;
    public static final int UIdentifierPrefix=126;
    public static final int UNION_OP=127;
    public static final int UNION_SPECIFY=128;
    public static final int VALUE_MODIFIER=129;
    public static final int VERBATIM_STRING=130;
    public static final int VOID_MODIFIER=131;
    public static final int WHILE_CLAUSE=132;
    public static final int WS=133;

    // delegates
    public Parser[] getDelegates() {
        return new Parser[] {};
    }

    // delegators


    public PsiCompatibleCeylonParser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public PsiCompatibleCeylonParser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
        this.state.ruleMemo = new HashMap[322+1];
         

    }

    public String[] getTokenNames() { return PsiCompatibleCeylonParser.tokenNames; }
    public String getGrammarFileName() { return "/Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g"; }


        private java.util.List<ParseError> errors 
                = new java.util.ArrayList<ParseError>();

        public ParseError newParseError(String[] tn,
                RecognitionException re) {
            ParseError parseError = new ParseError(this, re, expecting, tn);
            expecting = -1;
            return parseError;
        }
        
        public ParseError newParseError(String[] tn, 
                RecognitionException re,
                int code) {
            ParseError parseError = new ParseError(this, re, tn, code);
            return parseError;
        }

        @Override public void displayRecognitionError(String[] tn,
                RecognitionException re) {
            errors.add(newParseError(tn, re));
        }
        public void displayRecognitionError(String[] tn,
                RecognitionException re, 
                int code) {
            errors.add(newParseError(tn, re, code));
        }
        public java.util.List<ParseError> getErrors() {
            return errors;
        }
        int expecting=-1;
      @Override
      protected Object getMissingSymbol(IntStream input,
                        RecognitionException e,
                        int expectedTokenType,
                        BitSet follow)
      {
        String tokenText;
        if ( expectedTokenType==Token.EOF ) tokenText = "<missing EOF>";
        else tokenText = "<missing "+getTokenNames()[expectedTokenType]+">";
        MissingToken t = new MissingToken(expectedTokenType, tokenText);
        Token current = ((TokenStream)input).LT(1);
        if ( current.getType() == Token.EOF ) {
          current = ((TokenStream)input).LT(-1);
        }
        t.setLine(current.getLine());
        t.setCharPositionInLine(current.getCharPositionInLine());
        t.setChannel(DEFAULT_TOKEN_CHANNEL);
        t.setInputStream(current.getInputStream());
        return t;
      }



    // $ANTLR start "compilationUnit"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:81:1: compilationUnit returns [CompilationUnit compilationUnit] : (ca= compilerAnnotations SEMICOLON )? ( importDeclaration | ( annotatedModuleDescriptorStart )=> moduleDescriptor | ( annotatedPackageDescriptorStart )=> packageDescriptor | toplevelDeclaration | RBRACE )* EOF ;
    public CompilationUnit compilationUnit() throws RecognitionException {
        CompilationUnit compilationUnit = null;


        List<CompilerAnnotation> ca =null;

        Import importDeclaration1 =null;

        ModuleDescriptor moduleDescriptor2 =null;

        PackageDescriptor packageDescriptor3 =null;

        Declaration toplevelDeclaration4 =null;


         compilationUnit = new CompilationUnit(null);
                    ImportList importList = new ImportList(null); 
                    compilationUnit.setImportList(importList); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:85:5: ( (ca= compilerAnnotations SEMICOLON )? ( importDeclaration | ( annotatedModuleDescriptorStart )=> moduleDescriptor | ( annotatedPackageDescriptorStart )=> packageDescriptor | toplevelDeclaration | RBRACE )* EOF )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:85:7: (ca= compilerAnnotations SEMICOLON )? ( importDeclaration | ( annotatedModuleDescriptorStart )=> moduleDescriptor | ( annotatedPackageDescriptorStart )=> packageDescriptor | toplevelDeclaration | RBRACE )* EOF
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:85:7: (ca= compilerAnnotations SEMICOLON )?
            int alt1=2;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:86:9: ca= compilerAnnotations SEMICOLON
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_compilationUnit86);
                    ca=compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return compilationUnit;

                    match(input,SEMICOLON,FOLLOW_SEMICOLON_in_compilationUnit96); if (state.failed) return compilationUnit;

                    if ( state.backtracking==0 ) { compilationUnit.getCompilerAnnotations().addAll(ca); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:90:7: ( importDeclaration | ( annotatedModuleDescriptorStart )=> moduleDescriptor | ( annotatedPackageDescriptorStart )=> packageDescriptor | toplevelDeclaration | RBRACE )*
            loop2:
            do {
                int alt2=6;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==IMPORT) ) {
                    alt2=1;
                }
                else if ( (LA2_0==COMPILER_ANNOTATION) ) {
                    int LA2_3 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==STRING_LITERAL) ) {
                    int LA2_4 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==VERBATIM_STRING) ) {
                    int LA2_5 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==LIDENTIFIER) ) {
                    int LA2_6 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==MODULE) && (synpred1_Ceylon())) {
                    alt2=2;
                }
                else if ( (LA2_0==PACKAGE) ) {
                    int LA2_8 = input.LA(2);

                    if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==ALIAS||LA2_0==ASSIGN||LA2_0==CLASS_DEFINITION||LA2_0==DYNAMIC||LA2_0==FUNCTION_MODIFIER||LA2_0==INTERFACE_DEFINITION||(LA2_0 >= LBRACE && LA2_0 <= LBRACKET)||LA2_0==NEW||LA2_0==OBJECT_DEFINITION||LA2_0==SMALLER_OP||LA2_0==UIDENTIFIER||LA2_0==VALUE_MODIFIER||LA2_0==VOID_MODIFIER) ) {
                    alt2=4;
                }
                else if ( (LA2_0==RBRACE) ) {
                    alt2=5;
                }


                switch (alt2) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:91:9: importDeclaration
            	    {
            	    pushFollow(FOLLOW_importDeclaration_in_compilationUnit134);
            	    importDeclaration1=importDeclaration();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { importList.addImport(importDeclaration1); 
            	              compilationUnit.connect(importList); }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:95:9: ( annotatedModuleDescriptorStart )=> moduleDescriptor
            	    {
            	    pushFollow(FOLLOW_moduleDescriptor_in_compilationUnit177);
            	    moduleDescriptor2=moduleDescriptor();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { compilationUnit.addModuleDescriptor(moduleDescriptor2); }

            	    }
            	    break;
            	case 3 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:99:9: ( annotatedPackageDescriptorStart )=> packageDescriptor
            	    {
            	    pushFollow(FOLLOW_packageDescriptor_in_compilationUnit220);
            	    packageDescriptor3=packageDescriptor();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { compilationUnit.addPackageDescriptor(packageDescriptor3); }

            	    }
            	    break;
            	case 4 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:103:9: toplevelDeclaration
            	    {
            	    pushFollow(FOLLOW_toplevelDeclaration_in_compilationUnit248);
            	    toplevelDeclaration4=toplevelDeclaration();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { if (toplevelDeclaration4!=null)
            	                  compilationUnit.addDeclaration(toplevelDeclaration4); }

            	    }
            	    break;
            	case 5 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:106:9: RBRACE
            	    {
            	    match(input,RBRACE,FOLLOW_RBRACE_in_compilationUnit268); if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
            	                  new MismatchedTokenException(EOF, input)); }

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            match(input,EOF,FOLLOW_EOF_in_compilationUnit295); if (state.failed) return compilationUnit;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return compilationUnit;
    }
    // $ANTLR end "compilationUnit"



    // $ANTLR start "toplevelDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:113:1: toplevelDeclaration returns [Declaration declaration] : ca= compilerAnnotations d= declaration ;
    public Declaration toplevelDeclaration() throws RecognitionException {
        Declaration declaration = null;


        List<CompilerAnnotation> ca =null;

        Declaration d =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:114:5: (ca= compilerAnnotations d= declaration )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:114:7: ca= compilerAnnotations d= declaration
            {
            pushFollow(FOLLOW_compilerAnnotations_in_toplevelDeclaration318);
            ca=compilerAnnotations();

            state._fsp--;
            if (state.failed) return declaration;

            pushFollow(FOLLOW_declaration_in_toplevelDeclaration329);
            d=declaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = d;
                    if (declaration!=null)
                        declaration.getCompilerAnnotations().addAll(ca); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "toplevelDeclaration"



    // $ANTLR start "annotatedModuleDescriptorStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:121:1: annotatedModuleDescriptorStart : compilerAnnotations annotations MODULE ;
    public void annotatedModuleDescriptorStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:122:5: ( compilerAnnotations annotations MODULE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:122:7: compilerAnnotations annotations MODULE
            {
            pushFollow(FOLLOW_compilerAnnotations_in_annotatedModuleDescriptorStart354);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_annotations_in_annotatedModuleDescriptorStart356);
            annotations();

            state._fsp--;
            if (state.failed) return ;

            match(input,MODULE,FOLLOW_MODULE_in_annotatedModuleDescriptorStart358); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedModuleDescriptorStart"



    // $ANTLR start "annotatedPackageDescriptorStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:125:1: annotatedPackageDescriptorStart : compilerAnnotations annotations PACKAGE ~ MEMBER_OP ;
    public void annotatedPackageDescriptorStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:126:5: ( compilerAnnotations annotations PACKAGE ~ MEMBER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:126:7: compilerAnnotations annotations PACKAGE ~ MEMBER_OP
            {
            pushFollow(FOLLOW_compilerAnnotations_in_annotatedPackageDescriptorStart375);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_annotations_in_annotatedPackageDescriptorStart377);
            annotations();

            state._fsp--;
            if (state.failed) return ;

            match(input,PACKAGE,FOLLOW_PACKAGE_in_annotatedPackageDescriptorStart379); if (state.failed) return ;

            if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= Letter)||(input.LA(1) >= MODULE && input.LA(1) <= WS) ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedPackageDescriptorStart"



    // $ANTLR start "moduleDescriptor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:129:1: moduleDescriptor returns [ModuleDescriptor moduleDescriptor] : compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList ;
    public ModuleDescriptor moduleDescriptor() throws RecognitionException {
        ModuleDescriptor moduleDescriptor = null;


        Token MODULE5=null;
        Token CHAR_LITERAL9=null;
        Token STRING_LITERAL10=null;
        AnnotationList annotations6 =null;

        List<CompilerAnnotation> compilerAnnotations7 =null;

        ImportPath packagePath8 =null;

        ImportModuleList importModuleList11 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:130:5: ( compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:130:7: compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList
            {
            pushFollow(FOLLOW_compilerAnnotations_in_moduleDescriptor403);
            compilerAnnotations7=compilerAnnotations();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            pushFollow(FOLLOW_annotations_in_moduleDescriptor405);
            annotations6=annotations();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            MODULE5=(Token)match(input,MODULE,FOLLOW_MODULE_in_moduleDescriptor413); if (state.failed) return moduleDescriptor;

            if ( state.backtracking==0 ) { moduleDescriptor = new ModuleDescriptor(MODULE5); 
                    moduleDescriptor.setAnnotationList(annotations6);
                    moduleDescriptor.getCompilerAnnotations().addAll(compilerAnnotations7); }

            pushFollow(FOLLOW_packagePath_in_moduleDescriptor430);
            packagePath8=packagePath();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            if ( state.backtracking==0 ) { moduleDescriptor.setImportPath(packagePath8); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:137:7: ( CHAR_LITERAL | STRING_LITERAL )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==CHAR_LITERAL) ) {
                alt3=1;
            }
            else if ( (LA3_0==STRING_LITERAL) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return moduleDescriptor;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;

            }
            switch (alt3) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:138:9: CHAR_LITERAL
                    {
                    CHAR_LITERAL9=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_moduleDescriptor456); if (state.failed) return moduleDescriptor;

                    if ( state.backtracking==0 ) { moduleDescriptor.setVersion(new QuotedLiteral(CHAR_LITERAL9)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:141:9: STRING_LITERAL
                    {
                    STRING_LITERAL10=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_moduleDescriptor484); if (state.failed) return moduleDescriptor;

                    if ( state.backtracking==0 ) { moduleDescriptor.setVersion(new QuotedLiteral(STRING_LITERAL10)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_importModuleList_in_moduleDescriptor510);
            importModuleList11=importModuleList();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            if ( state.backtracking==0 ) { moduleDescriptor.setImportModuleList(importModuleList11); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return moduleDescriptor;
    }
    // $ANTLR end "moduleDescriptor"



    // $ANTLR start "importModuleList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:148:1: importModuleList returns [ImportModuleList importModuleList] : LBRACE ( compilerAnnotations annotations importModule )* RBRACE ;
    public ImportModuleList importModuleList() throws RecognitionException {
        ImportModuleList importModuleList = null;


        Token LBRACE12=null;
        Token RBRACE16=null;
        ImportModule importModule13 =null;

        AnnotationList annotations14 =null;

        List<CompilerAnnotation> compilerAnnotations15 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:149:5: ( LBRACE ( compilerAnnotations annotations importModule )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:149:7: LBRACE ( compilerAnnotations annotations importModule )* RBRACE
            {
            LBRACE12=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_importModuleList539); if (state.failed) return importModuleList;

            if ( state.backtracking==0 ) { importModuleList = new ImportModuleList(LBRACE12); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:151:7: ( compilerAnnotations annotations importModule )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==ALIAS||(LA4_0 >= ASSERT && LA4_0 <= ASSIGN)||(LA4_0 >= BACKTICK && LA4_0 <= BREAK)||(LA4_0 >= CHAR_LITERAL && LA4_0 <= CLASS_DEFINITION)||LA4_0==COMPILER_ANNOTATION||LA4_0==CONTINUE||(LA4_0 >= DECREMENT_OP && LA4_0 <= DIFFERENCE_OP)||LA4_0==DYNAMIC||(LA4_0 >= FLOAT_LITERAL && LA4_0 <= FUNCTION_MODIFIER)||(LA4_0 >= IF_CLAUSE && LA4_0 <= INTERFACE_DEFINITION)||LA4_0==IN_OP||(LA4_0 >= LBRACE && LA4_0 <= LIDENTIFIER)||LA4_0==LPAREN||LA4_0==MODULE||(LA4_0 >= NATURAL_LITERAL && LA4_0 <= NEW)||(LA4_0 >= NOT_OP && LA4_0 <= OBJECT_DEFINITION)||(LA4_0 >= OUT && LA4_0 <= PACKAGE)||LA4_0==PRODUCT_OP||LA4_0==RETURN||(LA4_0 >= SEMICOLON && LA4_0 <= SMALLER_OP)||LA4_0==STRING_LITERAL||LA4_0==STRING_START||(LA4_0 >= SUM_OP && LA4_0 <= SWITCH_CLAUSE)||(LA4_0 >= THIS && LA4_0 <= UIDENTIFIER)||(LA4_0 >= VALUE_MODIFIER && LA4_0 <= WHILE_CLAUSE)) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:152:9: compilerAnnotations annotations importModule
            	    {
            	    pushFollow(FOLLOW_compilerAnnotations_in_importModuleList565);
            	    compilerAnnotations15=compilerAnnotations();

            	    state._fsp--;
            	    if (state.failed) return importModuleList;

            	    pushFollow(FOLLOW_annotations_in_importModuleList567);
            	    annotations14=annotations();

            	    state._fsp--;
            	    if (state.failed) return importModuleList;

            	    pushFollow(FOLLOW_importModule_in_importModuleList577);
            	    importModule13=importModule();

            	    state._fsp--;
            	    if (state.failed) return importModuleList;

            	    if ( state.backtracking==0 ) { if (importModule13!=null)
            	                  importModuleList.addImportModule(importModule13); 
            	              if (importModule13!=null)
            	                  importModule13.setAnnotationList(annotations14);
            	              if (importModule13!=null)
            	                  importModule13.getCompilerAnnotations().addAll(compilerAnnotations15); }

            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            RBRACE16=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_importModuleList604); if (state.failed) return importModuleList;

            if ( state.backtracking==0 ) { importModuleList.setEndToken(RBRACE16); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importModuleList;
    }
    // $ANTLR end "importModuleList"



    // $ANTLR start "packageDescriptor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:165:1: packageDescriptor returns [PackageDescriptor packageDescriptor] : compilerAnnotations annotations PACKAGE packagePath SEMICOLON ;
    public PackageDescriptor packageDescriptor() throws RecognitionException {
        PackageDescriptor packageDescriptor = null;


        Token PACKAGE17=null;
        Token SEMICOLON21=null;
        AnnotationList annotations18 =null;

        List<CompilerAnnotation> compilerAnnotations19 =null;

        ImportPath packagePath20 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:166:5: ( compilerAnnotations annotations PACKAGE packagePath SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:166:7: compilerAnnotations annotations PACKAGE packagePath SEMICOLON
            {
            pushFollow(FOLLOW_compilerAnnotations_in_packageDescriptor633);
            compilerAnnotations19=compilerAnnotations();

            state._fsp--;
            if (state.failed) return packageDescriptor;

            pushFollow(FOLLOW_annotations_in_packageDescriptor635);
            annotations18=annotations();

            state._fsp--;
            if (state.failed) return packageDescriptor;

            PACKAGE17=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_packageDescriptor643); if (state.failed) return packageDescriptor;

            if ( state.backtracking==0 ) { packageDescriptor = new PackageDescriptor(PACKAGE17); 
                    packageDescriptor.setAnnotationList(annotations18); 
                    packageDescriptor.getCompilerAnnotations().addAll(compilerAnnotations19); }

            pushFollow(FOLLOW_packagePath_in_packageDescriptor660);
            packagePath20=packagePath();

            state._fsp--;
            if (state.failed) return packageDescriptor;

            if ( state.backtracking==0 ) { packageDescriptor.setImportPath(packagePath20); 
                    expecting=SEMICOLON; }

            SEMICOLON21=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_packageDescriptor676); if (state.failed) return packageDescriptor;

            if ( state.backtracking==0 ) { packageDescriptor.setEndToken(SEMICOLON21); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return packageDescriptor;
    }
    // $ANTLR end "packageDescriptor"



    // $ANTLR start "importModule"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:179:1: importModule returns [ImportModule importModule] : IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON ;
    public ImportModule importModule() throws RecognitionException {
        ImportModule importModule = null;


        Token c1=null;
        Token s1=null;
        Token c2=null;
        Token s2=null;
        Token IMPORT22=null;
        Token SEMICOLON24=null;
        ImportPath packagePath23 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:180:5: ( IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:180:7: IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON
            {
            IMPORT22=(Token)match(input,IMPORT,FOLLOW_IMPORT_in_importModule705); if (state.failed) return importModule;

            if ( state.backtracking==0 ) { importModule = new ImportModule(IMPORT22); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:182:7: (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath )
            int alt5=3;
            switch ( input.LA(1) ) {
            case CHAR_LITERAL:
                {
                alt5=1;
                }
                break;
            case STRING_LITERAL:
                {
                alt5=2;
                }
                break;
            case LIDENTIFIER:
            case UIDENTIFIER:
                {
                alt5=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return importModule;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;

            }

            switch (alt5) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:183:9: c1= CHAR_LITERAL
                    {
                    c1=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_importModule734); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setQuotedLiteral(new QuotedLiteral(c1)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:186:9: s1= STRING_LITERAL
                    {
                    s1=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_importModule764); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setQuotedLiteral(new QuotedLiteral(s1)); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:189:9: packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_importModule792);
                    packagePath23=packagePath();

                    state._fsp--;
                    if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setImportPath(packagePath23); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:192:7: (c2= CHAR_LITERAL |s2= STRING_LITERAL )?
            int alt6=3;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==CHAR_LITERAL) ) {
                alt6=1;
            }
            else if ( (LA6_0==STRING_LITERAL) ) {
                alt6=2;
            }
            switch (alt6) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:193:9: c2= CHAR_LITERAL
                    {
                    c2=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_importModule830); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setVersion(new QuotedLiteral(c2)); 
                              expecting=SEMICOLON; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:197:9: s2= STRING_LITERAL
                    {
                    s2=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_importModule860); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setVersion(new QuotedLiteral(s2)); 
                              expecting=SEMICOLON; }

                    }
                    break;

            }


            SEMICOLON24=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_importModule887); if (state.failed) return importModule;

            if ( state.backtracking==0 ) { importModule.setEndToken(SEMICOLON24); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importModule;
    }
    // $ANTLR end "importModule"



    // $ANTLR start "importDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:206:1: importDeclaration returns [Import importDeclaration] : IMPORT ( packagePath |) importElementList ;
    public Import importDeclaration() throws RecognitionException {
        Import importDeclaration = null;


        Token IMPORT25=null;
        ImportPath packagePath26 =null;

        ImportMemberOrTypeList importElementList27 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:207:5: ( IMPORT ( packagePath |) importElementList )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:207:7: IMPORT ( packagePath |) importElementList
            {
            IMPORT25=(Token)match(input,IMPORT,FOLLOW_IMPORT_in_importDeclaration916); if (state.failed) return importDeclaration;

            if ( state.backtracking==0 ) { importDeclaration = new Import(IMPORT25); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:209:7: ( packagePath |)
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==LIDENTIFIER||LA7_0==UIDENTIFIER) ) {
                alt7=1;
            }
            else if ( (LA7_0==LBRACE) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return importDeclaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;

            }
            switch (alt7) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:210:9: packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_importDeclaration944);
                    packagePath26=packagePath();

                    state._fsp--;
                    if (state.failed) return importDeclaration;

                    if ( state.backtracking==0 ) { importDeclaration.setImportPath(packagePath26); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:212:9: 
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_importElementList_in_importDeclaration980);
            importElementList27=importElementList();

            state._fsp--;
            if (state.failed) return importDeclaration;

            if ( state.backtracking==0 ) { importDeclaration.setImportMemberOrTypeList(importElementList27); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importDeclaration;
    }
    // $ANTLR end "importDeclaration"



    // $ANTLR start "importElementList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:219:1: importElementList returns [ImportMemberOrTypeList importMemberOrTypeList] : LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE ;
    public ImportMemberOrTypeList importElementList() throws RecognitionException {
        ImportMemberOrTypeList importMemberOrTypeList = null;


        Token c1=null;
        Token LBRACE28=null;
        Token RBRACE29=null;
        ImportMemberOrType ie1 =null;

        ImportMemberOrType ie2 =null;

        ImportWildcard iw =null;


         ImportMemberOrTypeList il=null; 
                    boolean wildcarded = false; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:222:5: ( LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:223:5: LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE
            {
            LBRACE28=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_importElementList1022); if (state.failed) return importMemberOrTypeList;

            if ( state.backtracking==0 ) { il = new ImportMemberOrTypeList(LBRACE28);
                  importMemberOrTypeList = il; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:226:5: (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )?
            int alt10=3;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==ALIAS||(LA10_0 >= ASSERT && LA10_0 <= ASSIGN)||(LA10_0 >= BACKTICK && LA10_0 <= BREAK)||(LA10_0 >= CHAR_LITERAL && LA10_0 <= CLASS_DEFINITION)||LA10_0==COMPILER_ANNOTATION||LA10_0==CONTINUE||(LA10_0 >= DECREMENT_OP && LA10_0 <= DIFFERENCE_OP)||LA10_0==DYNAMIC||(LA10_0 >= FLOAT_LITERAL && LA10_0 <= FUNCTION_MODIFIER)||(LA10_0 >= IF_CLAUSE && LA10_0 <= INTERFACE_DEFINITION)||LA10_0==IN_OP||(LA10_0 >= LBRACE && LA10_0 <= LIDENTIFIER)||LA10_0==LPAREN||LA10_0==MODULE||(LA10_0 >= NATURAL_LITERAL && LA10_0 <= NEW)||(LA10_0 >= NOT_OP && LA10_0 <= OBJECT_DEFINITION)||(LA10_0 >= OUT && LA10_0 <= PACKAGE)||LA10_0==PRODUCT_OP||LA10_0==RETURN||(LA10_0 >= SEMICOLON && LA10_0 <= SMALLER_OP)||LA10_0==STRING_LITERAL||LA10_0==STRING_START||(LA10_0 >= SUM_OP && LA10_0 <= SWITCH_CLAUSE)||(LA10_0 >= THIS && LA10_0 <= UIDENTIFIER)||(LA10_0 >= VALUE_MODIFIER && LA10_0 <= WHILE_CLAUSE)) ) {
                alt10=1;
            }
            else if ( (LA10_0==ELLIPSIS) ) {
                alt10=2;
            }
            switch (alt10) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:227:7: ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )*
                    {
                    pushFollow(FOLLOW_importElement_in_importElementList1045);
                    ie1=importElement();

                    state._fsp--;
                    if (state.failed) return importMemberOrTypeList;

                    if ( state.backtracking==0 ) { if (ie1!=null)
                                il.addImportMemberOrType(ie1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:230:7: (c1= COMMA (ie2= importElement |iw= importWildcard |) )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==COMMA) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:231:9: c1= COMMA (ie2= importElement |iw= importWildcard |)
                    	    {
                    	    c1=(Token)match(input,COMMA,FOLLOW_COMMA_in_importElementList1076); if (state.failed) return importMemberOrTypeList;

                    	    if ( state.backtracking==0 ) { il.setEndToken(c1); 
                    	              if (wildcarded) 
                    	                  displayRecognitionError(getTokenNames(), 
                    	                      new MismatchedTokenException(RBRACE, input)); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:236:9: (ie2= importElement |iw= importWildcard |)
                    	    int alt8=3;
                    	    switch ( input.LA(1) ) {
                    	    case ALIAS:
                    	    case ASSERT:
                    	    case ASSIGN:
                    	    case BACKTICK:
                    	    case BREAK:
                    	    case CHAR_LITERAL:
                    	    case CLASS_DEFINITION:
                    	    case COMPILER_ANNOTATION:
                    	    case CONTINUE:
                    	    case DECREMENT_OP:
                    	    case DIFFERENCE_OP:
                    	    case DYNAMIC:
                    	    case FLOAT_LITERAL:
                    	    case FOR_CLAUSE:
                    	    case FUNCTION_MODIFIER:
                    	    case IF_CLAUSE:
                    	    case IMPORT:
                    	    case INCREMENT_OP:
                    	    case INTERFACE_DEFINITION:
                    	    case IN_OP:
                    	    case LBRACE:
                    	    case LBRACKET:
                    	    case LET:
                    	    case LIDENTIFIER:
                    	    case LPAREN:
                    	    case MODULE:
                    	    case NATURAL_LITERAL:
                    	    case NEW:
                    	    case NOT_OP:
                    	    case OBJECT_DEFINITION:
                    	    case OUT:
                    	    case OUTER:
                    	    case PACKAGE:
                    	    case PRODUCT_OP:
                    	    case RETURN:
                    	    case SEMICOLON:
                    	    case SMALLER_OP:
                    	    case STRING_LITERAL:
                    	    case STRING_START:
                    	    case SUM_OP:
                    	    case SUPER:
                    	    case SWITCH_CLAUSE:
                    	    case THIS:
                    	    case THROW:
                    	    case TRY_CLAUSE:
                    	    case TYPE_CONSTRAINT:
                    	    case UIDENTIFIER:
                    	    case VALUE_MODIFIER:
                    	    case VERBATIM_STRING:
                    	    case VOID_MODIFIER:
                    	    case WHILE_CLAUSE:
                    	        {
                    	        alt8=1;
                    	        }
                    	        break;
                    	    case ELLIPSIS:
                    	        {
                    	        alt8=2;
                    	        }
                    	        break;
                    	    case COMMA:
                    	    case RBRACE:
                    	        {
                    	        alt8=3;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return importMemberOrTypeList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 8, 0, input);

                    	        throw nvae;

                    	    }

                    	    switch (alt8) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:237:11: ie2= importElement
                    	            {
                    	            pushFollow(FOLLOW_importElement_in_importElementList1111);
                    	            ie2=importElement();

                    	            state._fsp--;
                    	            if (state.failed) return importMemberOrTypeList;

                    	            if ( state.backtracking==0 ) { if (ie2!=null)
                    	                            il.addImportMemberOrType(ie2);
                    	                        if (ie2!=null)
                    	                            il.setEndToken(null); }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:242:11: iw= importWildcard
                    	            {
                    	            pushFollow(FOLLOW_importWildcard_in_importElementList1139);
                    	            iw=importWildcard();

                    	            state._fsp--;
                    	            if (state.failed) return importMemberOrTypeList;

                    	            if ( state.backtracking==0 ) { wildcarded = true;
                    	                        if (iw!=null) 
                    	                            il.setImportWildcard(iw); 
                    	                        if (iw!=null) 
                    	                            il.setEndToken(null); }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:248:11: 
                    	            {
                    	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                            new MismatchedTokenException(ELLIPSIS, input)); }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:252:7: iw= importWildcard
                    {
                    pushFollow(FOLLOW_importWildcard_in_importElementList1193);
                    iw=importWildcard();

                    state._fsp--;
                    if (state.failed) return importMemberOrTypeList;

                    if ( state.backtracking==0 ) { il.setImportWildcard(iw); }

                    }
                    break;

            }


            RBRACE29=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_importElementList1208); if (state.failed) return importMemberOrTypeList;

            if ( state.backtracking==0 ) { il.setEndToken(RBRACE29); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importMemberOrTypeList;
    }
    // $ANTLR end "importElementList"



    // $ANTLR start "importElement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:258:1: importElement returns [ImportMemberOrType importMemberOrType] : compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? ) ;
    public ImportMemberOrType importElement() throws RecognitionException {
        ImportMemberOrType importMemberOrType = null;


        Token SPECIFY30=null;
        Identifier in1 =null;

        Identifier in2 =null;

        ImportMemberOrTypeList iel2 =null;

        List<CompilerAnnotation> compilerAnnotations31 =null;


         Alias alias = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:260:5: ( compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:260:7: compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_importElement1244);
            compilerAnnotations31=compilerAnnotations();

            state._fsp--;
            if (state.failed) return importMemberOrType;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:261:5: (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:261:7: in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )?
            {
            pushFollow(FOLLOW_importName_in_importElement1254);
            in1=importName();

            state._fsp--;
            if (state.failed) return importMemberOrType;

            if ( state.backtracking==0 ) { importMemberOrType = new ImportMember(null);
                    importMemberOrType.setIdentifier(in1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:264:7: ( SPECIFY (in2= importName |) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==SPECIFY) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:264:9: SPECIFY (in2= importName |)
                    {
                    SPECIFY30=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_importElement1273); if (state.failed) return importMemberOrType;

                    if ( state.backtracking==0 ) { alias = new Alias(SPECIFY30);
                              alias.setIdentifier(in1);
                              importMemberOrType.setAlias(alias); 
                              importMemberOrType.setIdentifier(null); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:269:9: (in2= importName |)
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==LIDENTIFIER||LA11_0==UIDENTIFIER) ) {
                        alt11=1;
                    }
                    else if ( (LA11_0==COMMA||LA11_0==LBRACE||LA11_0==RBRACE) ) {
                        alt11=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return importMemberOrType;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 11, 0, input);

                        throw nvae;

                    }
                    switch (alt11) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:270:11: in2= importName
                            {
                            pushFollow(FOLLOW_importName_in_importElement1307);
                            in2=importName();

                            state._fsp--;
                            if (state.failed) return importMemberOrType;

                            if ( state.backtracking==0 ) { importMemberOrType.setIdentifier(in2); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:272:11: 
                            {
                            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                              new MismatchedTokenException(in1.getToken().getType(), input)); }

                            }
                            break;

                    }


                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:276:7: (iel2= importElementList )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==LBRACE) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:277:9: iel2= importElementList
                    {
                    pushFollow(FOLLOW_importElementList_in_importElement1371);
                    iel2=importElementList();

                    state._fsp--;
                    if (state.failed) return importMemberOrType;

                    if ( state.backtracking==0 ) { importMemberOrType.setImportMemberOrTypeList(iel2); }

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) { if (importMemberOrType!=null)
                    importMemberOrType.getCompilerAnnotations().addAll(compilerAnnotations31); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importMemberOrType;
    }
    // $ANTLR end "importElement"



    // $ANTLR start "importWildcard"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:285:1: importWildcard returns [ImportWildcard importWildcard] : ELLIPSIS ;
    public ImportWildcard importWildcard() throws RecognitionException {
        ImportWildcard importWildcard = null;


        Token ELLIPSIS32=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:286:5: ( ELLIPSIS )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:286:7: ELLIPSIS
            {
            ELLIPSIS32=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_importWildcard1423); if (state.failed) return importWildcard;

            if ( state.backtracking==0 ) { importWildcard = new ImportWildcard(ELLIPSIS32); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importWildcard;
    }
    // $ANTLR end "importWildcard"



    // $ANTLR start "importName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:290:1: importName returns [Identifier identifier] : ( memberName | typeName );
    public Identifier importName() throws RecognitionException {
        Identifier identifier = null;


        Identifier memberName33 =null;

        Identifier typeName34 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:291:5: ( memberName | typeName )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==LIDENTIFIER) ) {
                alt14=1;
            }
            else if ( (LA14_0==UIDENTIFIER) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;

            }
            switch (alt14) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:291:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_importName1452);
                    memberName33=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =memberName33; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:292:7: typeName
                    {
                    pushFollow(FOLLOW_typeName_in_importName1462);
                    typeName34=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =typeName34; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "importName"



    // $ANTLR start "packagePath"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:295:1: packagePath returns [ImportPath importPath] : pn1= packageName (m= MEMBER_OP (pn2= packageName |) )* ;
    public ImportPath packagePath() throws RecognitionException {
        ImportPath importPath = null;


        Token m=null;
        Identifier pn1 =null;

        Identifier pn2 =null;


         importPath = new ImportPath(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:297:5: (pn1= packageName (m= MEMBER_OP (pn2= packageName |) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:297:7: pn1= packageName (m= MEMBER_OP (pn2= packageName |) )*
            {
            pushFollow(FOLLOW_packageName_in_packagePath1496);
            pn1=packageName();

            state._fsp--;
            if (state.failed) return importPath;

            if ( state.backtracking==0 ) { if (pn1!=null) 
                        importPath.addIdentifier(pn1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:300:7: (m= MEMBER_OP (pn2= packageName |) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==MEMBER_OP) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:301:9: m= MEMBER_OP (pn2= packageName |)
            	    {
            	    m=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_packagePath1527); if (state.failed) return importPath;

            	    if ( state.backtracking==0 ) { importPath.setEndToken(m); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:303:9: (pn2= packageName |)
            	    int alt15=2;
            	    int LA15_0 = input.LA(1);

            	    if ( (LA15_0==LIDENTIFIER||LA15_0==UIDENTIFIER) ) {
            	        alt15=1;
            	    }
            	    else if ( (LA15_0==BACKTICK||LA15_0==CHAR_LITERAL||LA15_0==LBRACE||LA15_0==MEMBER_OP||LA15_0==SEMICOLON||LA15_0==STRING_LITERAL) ) {
            	        alt15=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return importPath;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 15, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt15) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:304:11: pn2= packageName
            	            {
            	            pushFollow(FOLLOW_packageName_in_packagePath1562);
            	            pn2=packageName();

            	            state._fsp--;
            	            if (state.failed) return importPath;

            	            if ( state.backtracking==0 ) { importPath.addIdentifier(pn2); 
            	                        importPath.setEndToken(null); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:307:11: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                            new MismatchedTokenException(LIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importPath;
    }
    // $ANTLR end "packagePath"



    // $ANTLR start "packageName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:313:1: packageName returns [Identifier identifier] : ( LIDENTIFIER | UIDENTIFIER );
    public Identifier packageName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER35=null;
        Token UIDENTIFIER36=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:314:5: ( LIDENTIFIER | UIDENTIFIER )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==LIDENTIFIER) ) {
                alt17=1;
            }
            else if ( (LA17_0==UIDENTIFIER) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;

            }
            switch (alt17) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:314:7: LIDENTIFIER
                    {
                    LIDENTIFIER35=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_packageName1627); if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER35);
                            LIDENTIFIER35.setType(PIDENTIFIER);}

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:317:7: UIDENTIFIER
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                  new MismatchedTokenException(LIDENTIFIER, input), 5001); }

                    UIDENTIFIER36=(Token)match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_packageName1651); if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = new Identifier(UIDENTIFIER36);
                            UIDENTIFIER36.setType(PIDENTIFIER);}

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "packageName"



    // $ANTLR start "typeName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:324:1: typeName returns [Identifier identifier] : UIDENTIFIER ;
    public Identifier typeName() throws RecognitionException {
        Identifier identifier = null;


        Token UIDENTIFIER37=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:325:5: ( UIDENTIFIER )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:325:7: UIDENTIFIER
            {
            UIDENTIFIER37=(Token)match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_typeName1680); if (state.failed) return identifier;

            if ( state.backtracking==0 ) { identifier = new Identifier(UIDENTIFIER37); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "typeName"



    // $ANTLR start "annotationName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:329:1: annotationName returns [Identifier identifier] : LIDENTIFIER ;
    public Identifier annotationName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER38=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:330:5: ( LIDENTIFIER )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:330:7: LIDENTIFIER
            {
            LIDENTIFIER38=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_annotationName1709); if (state.failed) return identifier;

            if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER38); 
                    LIDENTIFIER38.setType(AIDENTIFIER); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "annotationName"



    // $ANTLR start "memberName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:335:1: memberName returns [Identifier identifier] : LIDENTIFIER ;
    public Identifier memberName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER39=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:336:5: ( LIDENTIFIER )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:336:7: LIDENTIFIER
            {
            LIDENTIFIER39=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_memberName1738); if (state.failed) return identifier;

            if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER39); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "memberName"



    // $ANTLR start "memberNameDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:340:1: memberNameDeclaration returns [Identifier identifier] : ( memberName | typeName );
    public Identifier memberNameDeclaration() throws RecognitionException {
        Identifier identifier = null;


        Identifier memberName40 =null;

        Identifier typeName41 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:341:5: ( memberName | typeName )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==LIDENTIFIER) ) {
                alt18=1;
            }
            else if ( (LA18_0==UIDENTIFIER) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;

            }
            switch (alt18) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:341:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_memberNameDeclaration1771);
                    memberName40=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = memberName40; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:342:7: typeName
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LIDENTIFIER, input), 5001); }

                    pushFollow(FOLLOW_typeName_in_memberNameDeclaration1789);
                    typeName41=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = typeName41; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "memberNameDeclaration"



    // $ANTLR start "typeNameDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:348:1: typeNameDeclaration returns [Identifier identifier] : ( typeName | memberName );
    public Identifier typeNameDeclaration() throws RecognitionException {
        Identifier identifier = null;


        Identifier typeName42 =null;

        Identifier memberName43 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:349:5: ( typeName | memberName )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==UIDENTIFIER) ) {
                alt19=1;
            }
            else if ( (LA19_0==LIDENTIFIER) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;

            }
            switch (alt19) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:349:7: typeName
                    {
                    pushFollow(FOLLOW_typeName_in_typeNameDeclaration1819);
                    typeName42=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = typeName42; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:350:7: memberName
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(UIDENTIFIER, input), 5002); }

                    pushFollow(FOLLOW_memberName_in_typeNameDeclaration1837);
                    memberName43=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = memberName43; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "typeNameDeclaration"



    // $ANTLR start "objectDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:356:1: objectDeclaration returns [ObjectDefinition declaration] : OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) ;
    public ObjectDefinition objectDeclaration() throws RecognitionException {
        ObjectDefinition declaration = null;


        Token OBJECT_DEFINITION44=null;
        Token SEMICOLON49=null;
        Identifier memberNameDeclaration45 =null;

        ExtendedType extendedType46 =null;

        SatisfiedTypes satisfiedTypes47 =null;

        ClassBody classBody48 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:357:5: ( OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:357:7: OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON )
            {
            OBJECT_DEFINITION44=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_objectDeclaration1867); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new ObjectDefinition(OBJECT_DEFINITION44); 
                    declaration.setType(new ValueModifier(null)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:360:7: ( memberNameDeclaration )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==LIDENTIFIER||LA20_0==UIDENTIFIER) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:361:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_objectDeclaration1893);
                    memberNameDeclaration45=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration45); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:364:7: ( extendedType )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==EXTENDS) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:365:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_objectDeclaration1931);
                    extendedType46=extendedType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setExtendedType(extendedType46); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:368:7: ( satisfiedTypes )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==SATISFIES) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:369:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_objectDeclaration1970);
                    satisfiedTypes47=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setSatisfiedTypes(satisfiedTypes47); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:372:7: ( classBody | SEMICOLON )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==LBRACE) ) {
                alt23=1;
            }
            else if ( (LA23_0==SEMICOLON) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;

            }
            switch (alt23) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:373:9: classBody
                    {
                    pushFollow(FOLLOW_classBody_in_objectDeclaration2008);
                    classBody48=classBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setClassBody(classBody48); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:375:9: SEMICOLON
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LBRACE, input)); }

                    SEMICOLON49=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_objectDeclaration2038); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON49); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "objectDeclaration"



    // $ANTLR start "objectExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:382:1: objectExpression returns [ObjectExpression objectExpression] : OBJECT_DEFINITION ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) ;
    public ObjectExpression objectExpression() throws RecognitionException {
        ObjectExpression objectExpression = null;


        Token OBJECT_DEFINITION50=null;
        Token SEMICOLON54=null;
        ExtendedType extendedType51 =null;

        SatisfiedTypes satisfiedTypes52 =null;

        ClassBody classBody53 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:383:5: ( OBJECT_DEFINITION ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:383:7: OBJECT_DEFINITION ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON )
            {
            OBJECT_DEFINITION50=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_objectExpression2077); if (state.failed) return objectExpression;

            if ( state.backtracking==0 ) { objectExpression = new ObjectExpression(OBJECT_DEFINITION50); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:385:7: ( extendedType )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==EXTENDS) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:386:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_objectExpression2104);
                    extendedType51=extendedType();

                    state._fsp--;
                    if (state.failed) return objectExpression;

                    if ( state.backtracking==0 ) { objectExpression.setExtendedType(extendedType51); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:389:7: ( satisfiedTypes )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==SATISFIES) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:390:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_objectExpression2143);
                    satisfiedTypes52=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return objectExpression;

                    if ( state.backtracking==0 ) { objectExpression.setSatisfiedTypes(satisfiedTypes52); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:393:7: ( classBody | SEMICOLON )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==LBRACE) ) {
                alt26=1;
            }
            else if ( (LA26_0==SEMICOLON) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return objectExpression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;

            }
            switch (alt26) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:394:9: classBody
                    {
                    pushFollow(FOLLOW_classBody_in_objectExpression2181);
                    classBody53=classBody();

                    state._fsp--;
                    if (state.failed) return objectExpression;

                    if ( state.backtracking==0 ) { objectExpression.setClassBody(classBody53); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:396:11: SEMICOLON
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LBRACE, input)); }

                    SEMICOLON54=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_objectExpression2213); if (state.failed) return objectExpression;

                    if ( state.backtracking==0 ) { objectExpression.setEndToken(SEMICOLON54); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return objectExpression;
    }
    // $ANTLR end "objectExpression"



    // $ANTLR start "voidOrInferredMethodDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:403:1: voidOrInferredMethodDeclaration returns [AnyMethod declaration] : ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON ) ;
    public AnyMethod voidOrInferredMethodDeclaration() throws RecognitionException {
        AnyMethod declaration = null;


        Token VOID_MODIFIER55=null;
        Token FUNCTION_MODIFIER56=null;
        Token SEMICOLON63=null;
        Identifier memberNameDeclaration57 =null;

        TypeParameterList typeParameters58 =null;

        ParameterList parameters59 =null;

        TypeConstraintList typeConstraints60 =null;

        Block block61 =null;

        SpecifierExpression functionSpecifier62 =null;


         MethodDefinition def=null;
                    MethodDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:406:5: ( ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:406:7: ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:406:7: ( VOID_MODIFIER | FUNCTION_MODIFIER )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==VOID_MODIFIER) ) {
                alt27=1;
            }
            else if ( (LA27_0==FUNCTION_MODIFIER) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;

            }
            switch (alt27) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:407:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER55=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodDeclaration2271); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { VoidModifier vm = new VoidModifier(VOID_MODIFIER55);
                              def = new MethodDefinition(VOID_MODIFIER55);
                              dec = new MethodDeclaration(VOID_MODIFIER55);
                              def.setType(vm);
                              dec.setType(vm);
                              declaration = dec; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:414:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER56=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodDeclaration2291); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { FunctionModifier fm = new FunctionModifier(FUNCTION_MODIFIER56);
                              def = new MethodDefinition(FUNCTION_MODIFIER56);
                              dec = new MethodDeclaration(FUNCTION_MODIFIER56);
                              def.setType(fm);
                              dec.setType(fm);
                              declaration = dec; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:422:7: ( memberNameDeclaration )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==LIDENTIFIER||LA28_0==UIDENTIFIER) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:423:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_voidOrInferredMethodDeclaration2327);
                    memberNameDeclaration57=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { dec.setIdentifier(memberNameDeclaration57); 
                              def.setIdentifier(memberNameDeclaration57); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:427:7: ( typeParameters )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==SMALLER_OP) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:428:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_voidOrInferredMethodDeclaration2364);
                    typeParameters58=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters58); 
                              dec.setTypeParameterList(typeParameters58); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:432:7: ( parameters )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==LPAREN) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:433:9: parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_voidOrInferredMethodDeclaration2409);
            	    parameters59=parameters();

            	    state._fsp--;
            	    if (state.failed) return declaration;

            	    if ( state.backtracking==0 ) { def.addParameterList(parameters59); 
            	              dec.addParameterList(parameters59); }

            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:438:7: ( typeConstraints )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==COMPILER_ANNOTATION||LA31_0==TYPE_CONSTRAINT) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:439:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_voidOrInferredMethodDeclaration2453);
                    typeConstraints60=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints60); 
                              dec.setTypeConstraintList(typeConstraints60); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:443:7: ( block | ( functionSpecifier )? SEMICOLON )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==LBRACE) ) {
                alt33=1;
            }
            else if ( (LA33_0==COMPUTE||LA33_0==SEMICOLON||LA33_0==SPECIFY) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;

            }
            switch (alt33) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:444:9: block
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_block_in_voidOrInferredMethodDeclaration2501);
                    block61=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setBlock(block61); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:448:9: ( functionSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:448:9: ( functionSpecifier )?
                    int alt32=2;
                    int LA32_0 = input.LA(1);

                    if ( (LA32_0==COMPUTE||LA32_0==SPECIFY) ) {
                        alt32=1;
                    }
                    switch (alt32) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:449:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_voidOrInferredMethodDeclaration2543);
                            functionSpecifier62=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setSpecifierExpression(functionSpecifier62); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON63=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_voidOrInferredMethodDeclaration2586); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { expecting=-1; }

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON63); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "voidOrInferredMethodDeclaration"



    // $ANTLR start "setterDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:459:1: setterDeclaration returns [AttributeSetterDefinition declaration] : ASSIGN ( memberNameDeclaration )? ( block | ( functionSpecifier )? SEMICOLON ) ;
    public AttributeSetterDefinition setterDeclaration() throws RecognitionException {
        AttributeSetterDefinition declaration = null;


        Token ASSIGN64=null;
        Token SEMICOLON68=null;
        Identifier memberNameDeclaration65 =null;

        Block block66 =null;

        SpecifierExpression functionSpecifier67 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:460:5: ( ASSIGN ( memberNameDeclaration )? ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:460:7: ASSIGN ( memberNameDeclaration )? ( block | ( functionSpecifier )? SEMICOLON )
            {
            ASSIGN64=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_setterDeclaration2635); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new AttributeSetterDefinition(ASSIGN64); 
                    declaration.setType( new VoidModifier(null) ); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:463:7: ( memberNameDeclaration )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==LIDENTIFIER||LA34_0==UIDENTIFIER) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:464:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_setterDeclaration2662);
                    memberNameDeclaration65=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration65); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:467:7: ( block | ( functionSpecifier )? SEMICOLON )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==LBRACE) ) {
                alt36=1;
            }
            else if ( (LA36_0==COMPUTE||LA36_0==SEMICOLON||LA36_0==SPECIFY) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;

            }
            switch (alt36) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:468:9: block
                    {
                    pushFollow(FOLLOW_block_in_setterDeclaration2701);
                    block66=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block66); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:471:9: ( functionSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:471:9: ( functionSpecifier )?
                    int alt35=2;
                    int LA35_0 = input.LA(1);

                    if ( (LA35_0==COMPUTE||LA35_0==SPECIFY) ) {
                        alt35=1;
                    }
                    switch (alt35) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:472:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_setterDeclaration2742);
                            functionSpecifier67=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(functionSpecifier67); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON68=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_setterDeclaration2785); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON68); 
                              expecting=-1; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "setterDeclaration"



    // $ANTLR start "tuplePatternStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:482:1: tuplePatternStart : LBRACKET ( compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER | ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart ) | tuplePatternStart ) ;
    public void tuplePatternStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:483:5: ( LBRACKET ( compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER | ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart ) | tuplePatternStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:483:7: LBRACKET ( compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER | ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart ) | tuplePatternStart )
            {
            match(input,LBRACKET,FOLLOW_LBRACKET_in_tuplePatternStart2820); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:484:7: ( compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER | ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart ) | tuplePatternStart )
            int alt38=3;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==COMPILER_ANNOTATION) ) {
                int LA38_1 = input.LA(2);

                if ( (true) ) {
                    alt38=1;
                }
                else if ( (synpred3_Ceylon()) ) {
                    alt38=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA38_0==LIDENTIFIER||LA38_0==PRODUCT_OP) ) {
                alt38=1;
            }
            else if ( (LA38_0==VALUE_MODIFIER) && (synpred3_Ceylon())) {
                alt38=2;
            }
            else if ( (LA38_0==FUNCTION_MODIFIER) && (synpred3_Ceylon())) {
                alt38=2;
            }
            else if ( (LA38_0==VOID_MODIFIER) && (synpred3_Ceylon())) {
                alt38=2;
            }
            else if ( (LA38_0==ASSIGN) && (synpred3_Ceylon())) {
                alt38=2;
            }
            else if ( (LA38_0==INTERFACE_DEFINITION) && (synpred3_Ceylon())) {
                alt38=2;
            }
            else if ( (LA38_0==CLASS_DEFINITION) && (synpred3_Ceylon())) {
                alt38=2;
            }
            else if ( (LA38_0==OBJECT_DEFINITION) && (synpred3_Ceylon())) {
                alt38=2;
            }
            else if ( (LA38_0==NEW) && (synpred3_Ceylon())) {
                alt38=2;
            }
            else if ( (LA38_0==ALIAS) && (synpred3_Ceylon())) {
                alt38=2;
            }
            else if ( (LA38_0==UIDENTIFIER) && (synpred3_Ceylon())) {
                alt38=2;
            }
            else if ( (LA38_0==SMALLER_OP) && (synpred3_Ceylon())) {
                alt38=2;
            }
            else if ( (LA38_0==PACKAGE) && (synpred3_Ceylon())) {
                alt38=2;
            }
            else if ( (LA38_0==LBRACKET) ) {
                int LA38_16 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt38=2;
                }
                else if ( (true) ) {
                    alt38=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 16, input);

                    throw nvae;

                }
            }
            else if ( (LA38_0==LBRACE) && (synpred3_Ceylon())) {
                alt38=2;
            }
            else if ( (LA38_0==DYNAMIC) && (synpred3_Ceylon())) {
                alt38=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;

            }
            switch (alt38) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:485:9: compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_tuplePatternStart2838);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:485:29: ( PRODUCT_OP )?
                    int alt37=2;
                    int LA37_0 = input.LA(1);

                    if ( (LA37_0==PRODUCT_OP) ) {
                        alt37=1;
                    }
                    switch (alt37) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:485:29: PRODUCT_OP
                            {
                            match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_tuplePatternStart2840); if (state.failed) return ;

                            }
                            break;

                    }


                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_tuplePatternStart2843); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:487:9: ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart )
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:488:9: ( compilerAnnotations declarationStart )
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:488:10: compilerAnnotations declarationStart
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_tuplePatternStart2879);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    pushFollow(FOLLOW_declarationStart_in_tuplePatternStart2881);
                    declarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:490:9: tuplePatternStart
                    {
                    pushFollow(FOLLOW_tuplePatternStart_in_tuplePatternStart2900);
                    tuplePatternStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "tuplePatternStart"



    // $ANTLR start "variableOrTuplePattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:494:1: variableOrTuplePattern returns [Pattern pattern] : ( ( tuplePatternStart )=> tuplePattern | variablePattern );
    public Pattern variableOrTuplePattern() throws RecognitionException {
        Pattern pattern = null;


        TuplePattern tuplePattern69 =null;

        VariablePattern variablePattern70 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:495:5: ( ( tuplePatternStart )=> tuplePattern | variablePattern )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==LBRACKET) ) {
                int LA39_1 = input.LA(2);

                if ( (synpred4_Ceylon()) ) {
                    alt39=1;
                }
                else if ( (true) ) {
                    alt39=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA39_0==COMPILER_ANNOTATION||LA39_0==FUNCTION_MODIFIER||LA39_0==LBRACE||LA39_0==LIDENTIFIER||LA39_0==PACKAGE||LA39_0==SMALLER_OP||LA39_0==UIDENTIFIER||LA39_0==VALUE_MODIFIER||LA39_0==VOID_MODIFIER) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return pattern;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;

            }
            switch (alt39) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:496:7: ( tuplePatternStart )=> tuplePattern
                    {
                    pushFollow(FOLLOW_tuplePattern_in_variableOrTuplePattern2942);
                    tuplePattern69=tuplePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = tuplePattern69; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:499:7: variablePattern
                    {
                    pushFollow(FOLLOW_variablePattern_in_variableOrTuplePattern2965);
                    variablePattern70=variablePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = variablePattern70; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "variableOrTuplePattern"



    // $ANTLR start "pattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:503:1: pattern returns [Pattern pattern] : ( ( variable ENTRY_OP )=>ki1= keyItemPattern | ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern | ( tuplePatternStart )=> tuplePattern | variablePattern );
    public Pattern pattern() throws RecognitionException {
        Pattern pattern = null;


        KeyValuePattern ki1 =null;

        KeyValuePattern ki2 =null;

        TuplePattern tuplePattern71 =null;

        VariablePattern variablePattern72 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:504:5: ( ( variable ENTRY_OP )=>ki1= keyItemPattern | ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern | ( tuplePatternStart )=> tuplePattern | variablePattern )
            int alt40=4;
            switch ( input.LA(1) ) {
            case LBRACKET:
                {
                int LA40_1 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt40=2;
                }
                else if ( (synpred7_Ceylon()) ) {
                    alt40=3;
                }
                else if ( (true) ) {
                    alt40=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 1, input);

                    throw nvae;

                }
                }
                break;
            case COMPILER_ANNOTATION:
                {
                int LA40_2 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt40=2;
                }
                else if ( (true) ) {
                    alt40=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 2, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA40_3 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt40=2;
                }
                else if ( (true) ) {
                    alt40=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 3, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA40_4 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt40=2;
                }
                else if ( (true) ) {
                    alt40=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 4, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA40_5 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt40=2;
                }
                else if ( (true) ) {
                    alt40=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 5, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA40_6 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt40=2;
                }
                else if ( (true) ) {
                    alt40=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 6, input);

                    throw nvae;

                }
                }
                break;
            case VOID_MODIFIER:
                {
                int LA40_7 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt40=2;
                }
                else if ( (true) ) {
                    alt40=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 7, input);

                    throw nvae;

                }
                }
                break;
            case FUNCTION_MODIFIER:
                {
                int LA40_8 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt40=2;
                }
                else if ( (true) ) {
                    alt40=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 8, input);

                    throw nvae;

                }
                }
                break;
            case VALUE_MODIFIER:
                {
                int LA40_9 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt40=2;
                }
                else if ( (true) ) {
                    alt40=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 9, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA40_10 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt40=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt40=2;
                }
                else if ( (true) ) {
                    alt40=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 10, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return pattern;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;

            }

            switch (alt40) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:505:7: ( variable ENTRY_OP )=>ki1= keyItemPattern
                    {
                    pushFollow(FOLLOW_keyItemPattern_in_pattern3017);
                    ki1=keyItemPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = ki1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:509:7: ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern
                    {
                    pushFollow(FOLLOW_keyItemPattern_in_pattern3055);
                    ki2=keyItemPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = ki2; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:513:7: ( tuplePatternStart )=> tuplePattern
                    {
                    pushFollow(FOLLOW_tuplePattern_in_pattern3090);
                    tuplePattern71=tuplePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = tuplePattern71; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:517:7: variablePattern
                    {
                    pushFollow(FOLLOW_variablePattern_in_pattern3113);
                    variablePattern72=variablePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = variablePattern72; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "pattern"



    // $ANTLR start "tupleOrEntryPattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:521:1: tupleOrEntryPattern returns [Pattern pattern] : ( ( variable ENTRY_OP )=>ki1= keyItemPattern | ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern | tuplePattern );
    public Pattern tupleOrEntryPattern() throws RecognitionException {
        Pattern pattern = null;


        KeyValuePattern ki1 =null;

        KeyValuePattern ki2 =null;

        TuplePattern tuplePattern73 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:522:5: ( ( variable ENTRY_OP )=>ki1= keyItemPattern | ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern | tuplePattern )
            int alt41=3;
            switch ( input.LA(1) ) {
            case LBRACKET:
                {
                int LA41_1 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt41=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt41=2;
                }
                else if ( (true) ) {
                    alt41=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 1, input);

                    throw nvae;

                }
                }
                break;
            case COMPILER_ANNOTATION:
                {
                int LA41_2 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt41=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 2, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA41_3 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt41=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 3, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA41_4 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt41=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 4, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA41_5 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt41=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 5, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA41_6 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt41=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 6, input);

                    throw nvae;

                }
                }
                break;
            case VOID_MODIFIER:
                {
                int LA41_7 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt41=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 7, input);

                    throw nvae;

                }
                }
                break;
            case FUNCTION_MODIFIER:
                {
                int LA41_8 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt41=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 8, input);

                    throw nvae;

                }
                }
                break;
            case VALUE_MODIFIER:
                {
                int LA41_9 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt41=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 9, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA41_10 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt41=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 10, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return pattern;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;

            }

            switch (alt41) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:523:7: ( variable ENTRY_OP )=>ki1= keyItemPattern
                    {
                    pushFollow(FOLLOW_keyItemPattern_in_tupleOrEntryPattern3165);
                    ki1=keyItemPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = ki1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:527:7: ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern
                    {
                    pushFollow(FOLLOW_keyItemPattern_in_tupleOrEntryPattern3203);
                    ki2=keyItemPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = ki2; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:531:7: tuplePattern
                    {
                    pushFollow(FOLLOW_tuplePattern_in_tupleOrEntryPattern3225);
                    tuplePattern73=tuplePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = tuplePattern73; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "tupleOrEntryPattern"



    // $ANTLR start "variablePattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:535:1: variablePattern returns [VariablePattern pattern] : variable ;
    public VariablePattern variablePattern() throws RecognitionException {
        VariablePattern pattern = null;


        Variable variable74 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:536:5: ( variable )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:536:7: variable
            {
            pushFollow(FOLLOW_variable_in_variablePattern3254);
            variable74=variable();

            state._fsp--;
            if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern = new VariablePattern(null);
                    pattern.setVariable(variable74); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "variablePattern"



    // $ANTLR start "tuplePattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:541:1: tuplePattern returns [TuplePattern pattern] : LBRACKET (v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )* )? RBRACKET ;
    public TuplePattern tuplePattern() throws RecognitionException {
        TuplePattern pattern = null;


        Token c1=null;
        Token LBRACKET75=null;
        Token RBRACKET76=null;
        Pattern v1 =null;

        Pattern v2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:542:5: ( LBRACKET (v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )* )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:542:7: LBRACKET (v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )* )? RBRACKET
            {
            LBRACKET75=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_tuplePattern3283); if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern = new TuplePattern(LBRACKET75); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:544:7: (v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )* )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==COMPILER_ANNOTATION||LA43_0==FUNCTION_MODIFIER||(LA43_0 >= LBRACE && LA43_0 <= LBRACKET)||LA43_0==LIDENTIFIER||LA43_0==PACKAGE||LA43_0==PRODUCT_OP||LA43_0==SMALLER_OP||LA43_0==UIDENTIFIER||LA43_0==VALUE_MODIFIER||LA43_0==VOID_MODIFIER) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:545:9: v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )*
                    {
                    pushFollow(FOLLOW_variadicPattern_in_tuplePattern3311);
                    v1=variadicPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern.addPattern(v1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:547:9: (c1= COMMA (v2= variadicPattern ) )*
                    loop42:
                    do {
                        int alt42=2;
                        int LA42_0 = input.LA(1);

                        if ( (LA42_0==COMMA) ) {
                            alt42=1;
                        }


                        switch (alt42) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:548:11: c1= COMMA (v2= variadicPattern )
                    	    {
                    	    c1=(Token)match(input,COMMA,FOLLOW_COMMA_in_tuplePattern3345); if (state.failed) return pattern;

                    	    if ( state.backtracking==0 ) { pattern.setEndToken(c1); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:550:11: (v2= variadicPattern )
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:551:13: v2= variadicPattern
                    	    {
                    	    pushFollow(FOLLOW_variadicPattern_in_tuplePattern3385);
                    	    v2=variadicPattern();

                    	    state._fsp--;
                    	    if (state.failed) return pattern;

                    	    if ( state.backtracking==0 ) { pattern.addPattern(v2);
                    	                  pattern.setEndToken(null); }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop42;
                        }
                    } while (true);


                    }
                    break;

            }


            RBRACKET76=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_tuplePattern3439); if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern.setEndToken(RBRACKET76); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "tuplePattern"



    // $ANTLR start "variadicPattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:561:1: variadicPattern returns [Pattern pattern] : ( ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable |p= pattern ) ;
    public Pattern variadicPattern() throws RecognitionException {
        Pattern pattern = null;


        Pattern p =null;

        Variable variadicVariable77 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:562:5: ( ( ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable |p= pattern ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:562:7: ( ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable |p= pattern )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:562:7: ( ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable |p= pattern )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==COMPILER_ANNOTATION) ) {
                int LA44_1 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt44=1;
                }
                else if ( (true) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA44_0==UIDENTIFIER) ) {
                int LA44_2 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt44=1;
                }
                else if ( (true) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA44_0==SMALLER_OP) ) {
                int LA44_3 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt44=1;
                }
                else if ( (true) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA44_0==PACKAGE) ) {
                int LA44_4 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt44=1;
                }
                else if ( (true) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA44_0==LBRACKET) ) {
                int LA44_5 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt44=1;
                }
                else if ( (true) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA44_0==LBRACE) ) {
                int LA44_6 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt44=1;
                }
                else if ( (true) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA44_0==PRODUCT_OP) && (synpred10_Ceylon())) {
                alt44=1;
            }
            else if ( (LA44_0==FUNCTION_MODIFIER||LA44_0==LIDENTIFIER||LA44_0==VALUE_MODIFIER||LA44_0==VOID_MODIFIER) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return pattern;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;

            }
            switch (alt44) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:563:9: ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable
                    {
                    pushFollow(FOLLOW_variadicVariable_in_variadicPattern3497);
                    variadicVariable77=variadicVariable();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { VariablePattern vp = new VariablePattern(null);
                              vp.setVariable(variadicVariable77); 
                              pattern = vp; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:569:9: p= pattern
                    {
                    pushFollow(FOLLOW_pattern_in_variadicPattern3526);
                    p=pattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = p; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "variadicPattern"



    // $ANTLR start "variadicVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:574:1: variadicVariable returns [Variable variable] : compilerAnnotations ( unionType )? ( PRODUCT_OP ) ( memberName )? ;
    public Variable variadicVariable() throws RecognitionException {
        Variable variable = null;


        Token PRODUCT_OP80=null;
        List<CompilerAnnotation> compilerAnnotations78 =null;

        StaticType unionType79 =null;

        Identifier memberName81 =null;


         variable = new Variable(null); 
                    Type t = new ValueModifier(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:577:5: ( compilerAnnotations ( unionType )? ( PRODUCT_OP ) ( memberName )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:577:7: compilerAnnotations ( unionType )? ( PRODUCT_OP ) ( memberName )?
            {
            pushFollow(FOLLOW_compilerAnnotations_in_variadicVariable3573);
            compilerAnnotations78=compilerAnnotations();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable.getCompilerAnnotations().addAll(compilerAnnotations78); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:579:7: ( unionType )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( ((LA45_0 >= LBRACE && LA45_0 <= LBRACKET)||LA45_0==PACKAGE||LA45_0==SMALLER_OP||LA45_0==UIDENTIFIER) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:580:9: unionType
                    {
                    pushFollow(FOLLOW_unionType_in_variadicVariable3599);
                    unionType79=unionType();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { t = unionType79; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:583:7: ( PRODUCT_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:584:9: PRODUCT_OP
            {
            PRODUCT_OP80=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_variadicVariable3636); if (state.failed) return variable;

            if ( state.backtracking==0 ) { SequencedType st = new SequencedType(PRODUCT_OP80);
                      st.setType(t);
                      st.setAtLeastOne(false);
                      variable.setType(st); }

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:596:7: ( memberName )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==LIDENTIFIER) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:597:9: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_variadicVariable3680);
                    memberName81=memberName();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setIdentifier(memberName81); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "variadicVariable"



    // $ANTLR start "keyItemPattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:602:1: keyItemPattern returns [KeyValuePattern pattern] : v1= variableOrTuplePattern ENTRY_OP (v2= variableOrTuplePattern )? ;
    public KeyValuePattern keyItemPattern() throws RecognitionException {
        KeyValuePattern pattern = null;


        Token ENTRY_OP82=null;
        Pattern v1 =null;

        Pattern v2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:603:5: (v1= variableOrTuplePattern ENTRY_OP (v2= variableOrTuplePattern )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:603:7: v1= variableOrTuplePattern ENTRY_OP (v2= variableOrTuplePattern )?
            {
            pushFollow(FOLLOW_variableOrTuplePattern_in_keyItemPattern3722);
            v1=variableOrTuplePattern();

            state._fsp--;
            if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern = new KeyValuePattern(null);
                    pattern.setKey(v1); }

            ENTRY_OP82=(Token)match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_keyItemPattern3738); if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern.setEndToken(ENTRY_OP82); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:608:7: (v2= variableOrTuplePattern )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==COMPILER_ANNOTATION||LA47_0==FUNCTION_MODIFIER||(LA47_0 >= LBRACE && LA47_0 <= LBRACKET)||LA47_0==LIDENTIFIER||LA47_0==PACKAGE||LA47_0==SMALLER_OP||LA47_0==UIDENTIFIER||LA47_0==VALUE_MODIFIER||LA47_0==VOID_MODIFIER) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:609:9: v2= variableOrTuplePattern
                    {
                    pushFollow(FOLLOW_variableOrTuplePattern_in_keyItemPattern3766);
                    v2=variableOrTuplePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern.setValue(v2); 
                              pattern.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "keyItemPattern"



    // $ANTLR start "destructure"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:615:1: destructure returns [Destructure destructure] : VALUE_MODIFIER tupleOrEntryPattern ( specifier )? SEMICOLON ;
    public Destructure destructure() throws RecognitionException {
        Destructure destructure = null;


        Token VALUE_MODIFIER83=null;
        Token SEMICOLON86=null;
        Pattern tupleOrEntryPattern84 =null;

        SpecifierExpression specifier85 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:616:5: ( VALUE_MODIFIER tupleOrEntryPattern ( specifier )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:616:7: VALUE_MODIFIER tupleOrEntryPattern ( specifier )? SEMICOLON
            {
            VALUE_MODIFIER83=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_destructure3806); if (state.failed) return destructure;

            if ( state.backtracking==0 ) { ValueModifier vm = new ValueModifier(VALUE_MODIFIER83);
                    destructure = new Destructure(null);
                    destructure.setType(vm); }

            pushFollow(FOLLOW_tupleOrEntryPattern_in_destructure3822);
            tupleOrEntryPattern84=tupleOrEntryPattern();

            state._fsp--;
            if (state.failed) return destructure;

            if ( state.backtracking==0 ) { destructure.setPattern(tupleOrEntryPattern84); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:622:7: ( specifier )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==SPECIFY) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:623:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_destructure3848);
                    specifier85=specifier();

                    state._fsp--;
                    if (state.failed) return destructure;

                    if ( state.backtracking==0 ) { destructure.setSpecifierExpression(specifier85); }

                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    }
                    break;

            }


            SEMICOLON86=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_destructure3885); if (state.failed) return destructure;

            if ( state.backtracking==0 ) { destructure.setEndToken(SEMICOLON86); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return destructure;
    }
    // $ANTLR end "destructure"



    // $ANTLR start "inferredAttributeDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:632:1: inferredAttributeDeclaration returns [AnyAttribute declaration] : VALUE_MODIFIER ( memberNameDeclaration )? ( ( specifier | lazySpecifier )? SEMICOLON | block ) ;
    public AnyAttribute inferredAttributeDeclaration() throws RecognitionException {
        AnyAttribute declaration = null;


        Token VALUE_MODIFIER87=null;
        Token SEMICOLON91=null;
        Identifier memberNameDeclaration88 =null;

        SpecifierExpression specifier89 =null;

        SpecifierExpression lazySpecifier90 =null;

        Block block92 =null;


         AttributeGetterDefinition def=null;
                    AttributeDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:635:5: ( VALUE_MODIFIER ( memberNameDeclaration )? ( ( specifier | lazySpecifier )? SEMICOLON | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:635:7: VALUE_MODIFIER ( memberNameDeclaration )? ( ( specifier | lazySpecifier )? SEMICOLON | block )
            {
            VALUE_MODIFIER87=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_inferredAttributeDeclaration3923); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { ValueModifier fm = new ValueModifier(VALUE_MODIFIER87);
                    def = new AttributeGetterDefinition(VALUE_MODIFIER87);
                    dec = new AttributeDeclaration(VALUE_MODIFIER87);
                    def.setType(fm);
                    dec.setType(fm);
                    declaration = dec; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:642:7: ( memberNameDeclaration )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==LIDENTIFIER||LA49_0==UIDENTIFIER) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:643:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_inferredAttributeDeclaration3950);
                    memberNameDeclaration88=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { dec.setIdentifier(memberNameDeclaration88); 
                              def.setIdentifier(memberNameDeclaration88); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:647:7: ( ( specifier | lazySpecifier )? SEMICOLON | block )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==COMPUTE||LA51_0==SEMICOLON||LA51_0==SPECIFY) ) {
                alt51=1;
            }
            else if ( (LA51_0==LBRACE) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;

            }
            switch (alt51) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:648:9: ( specifier | lazySpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:648:9: ( specifier | lazySpecifier )?
                    int alt50=3;
                    int LA50_0 = input.LA(1);

                    if ( (LA50_0==SPECIFY) ) {
                        alt50=1;
                    }
                    else if ( (LA50_0==COMPUTE) ) {
                        alt50=2;
                    }
                    switch (alt50) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:649:11: specifier
                            {
                            pushFollow(FOLLOW_specifier_in_inferredAttributeDeclaration4000);
                            specifier89=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setSpecifierOrInitializerExpression(specifier89); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:652:11: lazySpecifier
                            {
                            pushFollow(FOLLOW_lazySpecifier_in_inferredAttributeDeclaration4035);
                            lazySpecifier90=lazySpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setSpecifierOrInitializerExpression(lazySpecifier90); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON91=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_inferredAttributeDeclaration4078); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON91); 
                              expecting=-1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:660:9: block
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_block_in_inferredAttributeDeclaration4117);
                    block92=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setBlock(block92); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "inferredAttributeDeclaration"



    // $ANTLR start "typedMethodOrAttributeDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:666:1: typedMethodOrAttributeDeclaration returns [TypedDeclaration declaration] : ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block ) ;
    public TypedDeclaration typedMethodOrAttributeDeclaration() throws RecognitionException {
        TypedDeclaration declaration = null;


        Token s1=null;
        Token s2=null;
        Token DYNAMIC94=null;
        Block b1 =null;

        SpecifierExpression ms =null;

        SpecifierExpression as =null;

        SpecifierExpression ac =null;

        Block b2 =null;

        Type variadicType93 =null;

        Identifier memberNameDeclaration95 =null;

        TypeParameterList typeParameters96 =null;

        ParameterList parameters97 =null;

        TypeConstraintList typeConstraints98 =null;


         AttributeGetterDefinition adef=new AttributeGetterDefinition(null);
                    AttributeDeclaration adec=new AttributeDeclaration(null);
                    MethodDefinition mdef=new MethodDefinition(null);
                    MethodDeclaration mdec=new MethodDeclaration(null); 
                    declaration = adec; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:672:5: ( ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:672:7: ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:672:7: ( variadicType | DYNAMIC )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( ((LA52_0 >= LBRACE && LA52_0 <= LBRACKET)||LA52_0==PACKAGE||LA52_0==SMALLER_OP||LA52_0==UIDENTIFIER) ) {
                alt52=1;
            }
            else if ( (LA52_0==DYNAMIC) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;

            }
            switch (alt52) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:672:9: variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_typedMethodOrAttributeDeclaration4167);
                    variadicType93=variadicType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { adef.setType(variadicType93);
                              adec.setType(variadicType93); 
                              mdef.setType(variadicType93);
                              mdec.setType(variadicType93); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:677:9: DYNAMIC
                    {
                    DYNAMIC94=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_typedMethodOrAttributeDeclaration4187); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { DynamicModifier dm = new DynamicModifier(DYNAMIC94);
                              adef.setType(dm);
                              adec.setType(dm); 
                              mdef.setType(dm);
                              mdec.setType(dm); }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberNameDeclaration_in_typedMethodOrAttributeDeclaration4213);
            memberNameDeclaration95=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { adef.setIdentifier(memberNameDeclaration95);
                    adec.setIdentifier(memberNameDeclaration95); 
                    mdef.setIdentifier(memberNameDeclaration95);
                    mdec.setIdentifier(memberNameDeclaration95); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:689:7: ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block )
            int alt59=3;
            switch ( input.LA(1) ) {
            case LPAREN:
            case SMALLER_OP:
                {
                alt59=1;
                }
                break;
            case COMPUTE:
            case SEMICOLON:
            case SPECIFY:
                {
                alt59=2;
                }
                break;
            case LBRACE:
                {
                alt59=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;

            }

            switch (alt59) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:690:9: ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON )
                    {
                    if ( state.backtracking==0 ) { declaration = mdec; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:691:9: ( typeParameters )?
                    int alt53=2;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==SMALLER_OP) ) {
                        alt53=1;
                    }
                    switch (alt53) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:692:11: typeParameters
                            {
                            pushFollow(FOLLOW_typeParameters_in_typedMethodOrAttributeDeclaration4262);
                            typeParameters96=typeParameters();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { mdef.setTypeParameterList(typeParameters96);
                                        mdec.setTypeParameterList(typeParameters96); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:696:9: ( parameters )+
                    int cnt54=0;
                    loop54:
                    do {
                        int alt54=2;
                        int LA54_0 = input.LA(1);

                        if ( (LA54_0==LPAREN) ) {
                            alt54=1;
                        }


                        switch (alt54) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:697:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_typedMethodOrAttributeDeclaration4307);
                    	    parameters97=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { mdef.addParameterList(parameters97);
                    	                mdec.addParameterList(parameters97); }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt54 >= 1 ) break loop54;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(54, input);
                                throw eee;
                        }
                        cnt54++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:702:9: ( typeConstraints )?
                    int alt55=2;
                    int LA55_0 = input.LA(1);

                    if ( (LA55_0==COMPILER_ANNOTATION||LA55_0==TYPE_CONSTRAINT) ) {
                        alt55=1;
                    }
                    switch (alt55) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:703:11: typeConstraints
                            {
                            pushFollow(FOLLOW_typeConstraints_in_typedMethodOrAttributeDeclaration4362);
                            typeConstraints98=typeConstraints();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { mdef.setTypeConstraintList(typeConstraints98);
                                        mdec.setTypeConstraintList(typeConstraints98); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:707:9: (b1= block | (ms= functionSpecifier )? s1= SEMICOLON )
                    int alt57=2;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==LBRACE) ) {
                        alt57=1;
                    }
                    else if ( (LA57_0==COMPUTE||LA57_0==SEMICOLON||LA57_0==SPECIFY) ) {
                        alt57=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 57, 0, input);

                        throw nvae;

                    }
                    switch (alt57) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:708:11: b1= block
                            {
                            if ( state.backtracking==0 ) { declaration = mdef; }

                            pushFollow(FOLLOW_block_in_typedMethodOrAttributeDeclaration4422);
                            b1=block();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { mdef.setBlock(b1); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:712:11: (ms= functionSpecifier )? s1= SEMICOLON
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:712:11: (ms= functionSpecifier )?
                            int alt56=2;
                            int LA56_0 = input.LA(1);

                            if ( (LA56_0==COMPUTE||LA56_0==SPECIFY) ) {
                                alt56=1;
                            }
                            switch (alt56) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:713:13: ms= functionSpecifier
                                    {
                                    pushFollow(FOLLOW_functionSpecifier_in_typedMethodOrAttributeDeclaration4472);
                                    ms=functionSpecifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { mdec.setSpecifierExpression(ms); }

                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                            s1=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration4524); if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setEndToken(s1);
                                        expecting=-1; }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:722:9: (as= specifier |ac= lazySpecifier )? s2= SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:722:9: (as= specifier |ac= lazySpecifier )?
                    int alt58=3;
                    int LA58_0 = input.LA(1);

                    if ( (LA58_0==SPECIFY) ) {
                        alt58=1;
                    }
                    else if ( (LA58_0==COMPUTE) ) {
                        alt58=2;
                    }
                    switch (alt58) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:723:11: as= specifier
                            {
                            pushFollow(FOLLOW_specifier_in_typedMethodOrAttributeDeclaration4579);
                            as=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { adec.setSpecifierOrInitializerExpression(as); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:726:11: ac= lazySpecifier
                            {
                            pushFollow(FOLLOW_lazySpecifier_in_typedMethodOrAttributeDeclaration4617);
                            ac=lazySpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { adec.setSpecifierOrInitializerExpression(ac); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    s2=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration4663); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(s2); 
                            expecting=-1; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:734:9: b2= block
                    {
                    if ( state.backtracking==0 ) { declaration = adef; }

                    pushFollow(FOLLOW_block_in_typedMethodOrAttributeDeclaration4704);
                    b2=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { adef.setBlock(b2); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "typedMethodOrAttributeDeclaration"



    // $ANTLR start "interfaceDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:740:1: interfaceDeclaration returns [AnyInterface declaration] : ( INTERFACE_DEFINITION | DYNAMIC ) ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON ) ;
    public AnyInterface interfaceDeclaration() throws RecognitionException {
        AnyInterface declaration = null;


        Token INTERFACE_DEFINITION99=null;
        Token DYNAMIC100=null;
        Token SEMICOLON108=null;
        Identifier typeNameDeclaration101 =null;

        TypeParameterList typeParameters102 =null;

        CaseTypes caseTypes103 =null;

        SatisfiedTypes satisfiedTypes104 =null;

        TypeConstraintList typeConstraints105 =null;

        InterfaceBody interfaceBody106 =null;

        TypeSpecifier typeSpecifier107 =null;


         InterfaceDefinition def=null; 
                    InterfaceDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:743:5: ( ( INTERFACE_DEFINITION | DYNAMIC ) ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:743:7: ( INTERFACE_DEFINITION | DYNAMIC ) ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:743:7: ( INTERFACE_DEFINITION | DYNAMIC )
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==INTERFACE_DEFINITION) ) {
                alt60=1;
            }
            else if ( (LA60_0==DYNAMIC) ) {
                alt60=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;

            }
            switch (alt60) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:744:9: INTERFACE_DEFINITION
                    {
                    INTERFACE_DEFINITION99=(Token)match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_interfaceDeclaration4763); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def = new InterfaceDefinition(INTERFACE_DEFINITION99); 
                              dec = new InterfaceDeclaration(INTERFACE_DEFINITION99);
                              declaration = dec; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:749:9: DYNAMIC
                    {
                    DYNAMIC100=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_interfaceDeclaration4792); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def = new InterfaceDefinition(DYNAMIC100);
                              dec = new InterfaceDeclaration(DYNAMIC100);
                              def.setDynamic(true);
                              declaration = def; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:755:7: ( typeNameDeclaration )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==LIDENTIFIER||LA61_0==UIDENTIFIER) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:756:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_interfaceDeclaration4828);
                    typeNameDeclaration101=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { dec.setIdentifier(typeNameDeclaration101); 
                              def.setIdentifier(typeNameDeclaration101); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:760:7: ( typeParameters )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==SMALLER_OP) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:761:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_interfaceDeclaration4866);
                    typeParameters102=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters102); 
                              dec.setTypeParameterList(typeParameters102); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:765:7: ( caseTypes )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==CASE_TYPES) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:766:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_interfaceDeclaration4904);
                    caseTypes103=caseTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setCaseTypes(caseTypes103); 
                              dec.setCaseTypes(caseTypes103); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:775:7: ( satisfiedTypes )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==SATISFIES) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:776:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_interfaceDeclaration4958);
                    satisfiedTypes104=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setSatisfiedTypes(satisfiedTypes104); 
                              dec.setSatisfiedTypes(satisfiedTypes104); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:780:7: ( typeConstraints )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==COMPILER_ANNOTATION||LA65_0==TYPE_CONSTRAINT) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:781:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_interfaceDeclaration4995);
                    typeConstraints105=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints105); 
                              dec.setTypeConstraintList(typeConstraints105); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:785:7: ( interfaceBody | ( typeSpecifier )? SEMICOLON )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==LBRACE) ) {
                alt67=1;
            }
            else if ( (LA67_0==COMPUTE||LA67_0==SEMICOLON||LA67_0==SPECIFY) ) {
                alt67=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;

            }
            switch (alt67) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:786:9: interfaceBody
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_interfaceBody_in_interfaceDeclaration5042);
                    interfaceBody106=interfaceBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setInterfaceBody(interfaceBody106); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:790:9: ( typeSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:790:9: ( typeSpecifier )?
                    int alt66=2;
                    int LA66_0 = input.LA(1);

                    if ( (LA66_0==COMPUTE||LA66_0==SPECIFY) ) {
                        alt66=1;
                    }
                    switch (alt66) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:791:11: typeSpecifier
                            {
                            pushFollow(FOLLOW_typeSpecifier_in_interfaceDeclaration5083);
                            typeSpecifier107=typeSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setTypeSpecifier(typeSpecifier107); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON108=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interfaceDeclaration5127); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON108); 
                              expecting=-1; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "interfaceDeclaration"



    // $ANTLR start "classDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:801:1: classDeclaration returns [AnyClass declaration] : CLASS_DEFINITION ( typeNameDeclaration )? ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON ) ;
    public AnyClass classDeclaration() throws RecognitionException {
        AnyClass declaration = null;


        Token CLASS_DEFINITION109=null;
        Token SEMICOLON119=null;
        Identifier typeNameDeclaration110 =null;

        TypeParameterList typeParameters111 =null;

        ParameterList parameters112 =null;

        CaseTypes caseTypes113 =null;

        ExtendedType extendedType114 =null;

        SatisfiedTypes satisfiedTypes115 =null;

        TypeConstraintList typeConstraints116 =null;

        ClassBody classBody117 =null;

        ClassSpecifier classSpecifier118 =null;


         ClassDefinition def=null; 
                    ClassDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:804:5: ( CLASS_DEFINITION ( typeNameDeclaration )? ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:804:7: CLASS_DEFINITION ( typeNameDeclaration )? ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON )
            {
            CLASS_DEFINITION109=(Token)match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_classDeclaration5175); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { def = new ClassDefinition(CLASS_DEFINITION109); 
                    dec = new ClassDeclaration(CLASS_DEFINITION109);
                    declaration = dec; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:808:7: ( typeNameDeclaration )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==LIDENTIFIER||LA68_0==UIDENTIFIER) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:809:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_classDeclaration5202);
                    typeNameDeclaration110=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { dec.setIdentifier(typeNameDeclaration110); 
                              def.setIdentifier(typeNameDeclaration110); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:813:7: ( typeParameters )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==SMALLER_OP) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:814:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_classDeclaration5239);
                    typeParameters111=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters111); 
                              dec.setTypeParameterList(typeParameters111); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:818:7: ( parameters )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==LPAREN) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:819:9: parameters
                    {
                    pushFollow(FOLLOW_parameters_in_classDeclaration5276);
                    parameters112=parameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setParameterList(parameters112); 
                              dec.setParameterList(parameters112); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:823:7: ( caseTypes )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==CASE_TYPES) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:824:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_classDeclaration5313);
                    caseTypes113=caseTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setCaseTypes(caseTypes113); 
                              dec.setCaseTypes(caseTypes113); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:829:7: ( extendedType )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==EXTENDS) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:830:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_classDeclaration5359);
                    extendedType114=extendedType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setExtendedType(extendedType114); 
                              dec.setExtendedType(extendedType114); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:834:7: ( satisfiedTypes )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==SATISFIES) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:835:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_classDeclaration5397);
                    satisfiedTypes115=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setSatisfiedTypes(satisfiedTypes115); 
                              dec.setSatisfiedTypes(satisfiedTypes115); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:839:7: ( typeConstraints )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==COMPILER_ANNOTATION||LA74_0==TYPE_CONSTRAINT) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:840:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_classDeclaration5434);
                    typeConstraints116=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints116); 
                              dec.setTypeConstraintList(typeConstraints116); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:844:7: ( classBody | ( classSpecifier )? SEMICOLON )
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==LBRACE) ) {
                alt76=1;
            }
            else if ( (LA76_0==COMPUTE||LA76_0==SEMICOLON||LA76_0==SPECIFY) ) {
                alt76=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;

            }
            switch (alt76) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:845:9: classBody
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_classBody_in_classDeclaration5481);
                    classBody117=classBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setClassBody(classBody117); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:849:9: ( classSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:849:9: ( classSpecifier )?
                    int alt75=2;
                    int LA75_0 = input.LA(1);

                    if ( (LA75_0==COMPUTE||LA75_0==SPECIFY) ) {
                        alt75=1;
                    }
                    switch (alt75) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:850:11: classSpecifier
                            {
                            pushFollow(FOLLOW_classSpecifier_in_classDeclaration5522);
                            classSpecifier118=classSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setClassSpecifier(classSpecifier118); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON119=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_classDeclaration5565); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON119); 
                              expecting=-1; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "classDeclaration"



    // $ANTLR start "constructor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:860:1: constructor returns [Constructor declaration] : NEW ( typeNameDeclaration )? ( parameters )? (dc= delegatedConstructor )? block ;
    public Constructor constructor() throws RecognitionException {
        Constructor declaration = null;


        Token NEW120=null;
        DelegatedConstructor dc =null;

        Identifier typeNameDeclaration121 =null;

        ParameterList parameters122 =null;

        Block block123 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:861:5: ( NEW ( typeNameDeclaration )? ( parameters )? (dc= delegatedConstructor )? block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:861:7: NEW ( typeNameDeclaration )? ( parameters )? (dc= delegatedConstructor )? block
            {
            NEW120=(Token)match(input,NEW,FOLLOW_NEW_in_constructor5604); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new Constructor(NEW120); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:863:7: ( typeNameDeclaration )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==LIDENTIFIER||LA77_0==UIDENTIFIER) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:864:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_constructor5630);
                    typeNameDeclaration121=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(typeNameDeclaration121); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:867:7: ( parameters )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==LPAREN) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:868:9: parameters
                    {
                    pushFollow(FOLLOW_parameters_in_constructor5667);
                    parameters122=parameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setParameterList(parameters122); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:871:7: (dc= delegatedConstructor )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==EXTENDS) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:872:9: dc= delegatedConstructor
                    {
                    pushFollow(FOLLOW_delegatedConstructor_in_constructor5708);
                    dc=delegatedConstructor();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setDelegatedConstructor(dc); }

                    }
                    break;

            }


            pushFollow(FOLLOW_block_in_constructor5735);
            block123=block();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setBlock(block123); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "constructor"



    // $ANTLR start "delegatedConstructor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:879:1: delegatedConstructor returns [DelegatedConstructor delegatedConstructor] : EXTENDS (ci= classInstantiation )? ;
    public DelegatedConstructor delegatedConstructor() throws RecognitionException {
        DelegatedConstructor delegatedConstructor = null;


        Token EXTENDS124=null;
        PsiCompatibleCeylonParser.classInstantiation_return ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:880:5: ( EXTENDS (ci= classInstantiation )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:880:7: EXTENDS (ci= classInstantiation )?
            {
            EXTENDS124=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_delegatedConstructor5764); if (state.failed) return delegatedConstructor;

            if ( state.backtracking==0 ) { delegatedConstructor = new DelegatedConstructor(EXTENDS124); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:882:7: (ci= classInstantiation )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==PACKAGE||LA80_0==SUPER||LA80_0==UIDENTIFIER) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:883:9: ci= classInstantiation
                    {
                    pushFollow(FOLLOW_classInstantiation_in_delegatedConstructor5792);
                    ci=classInstantiation();

                    state._fsp--;
                    if (state.failed) return delegatedConstructor;

                    if ( state.backtracking==0 ) { delegatedConstructor.setType((ci!=null?ci.type:null));
                              delegatedConstructor.setInvocationExpression((ci!=null?ci.invocationExpression:null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return delegatedConstructor;
    }
    // $ANTLR end "delegatedConstructor"



    // $ANTLR start "aliasDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:889:1: aliasDeclaration returns [TypeAliasDeclaration declaration] : ALIAS ( typeNameDeclaration )? ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON ;
    public TypeAliasDeclaration aliasDeclaration() throws RecognitionException {
        TypeAliasDeclaration declaration = null;


        Token ALIAS125=null;
        Token SEMICOLON130=null;
        Identifier typeNameDeclaration126 =null;

        TypeParameterList typeParameters127 =null;

        TypeConstraintList typeConstraints128 =null;

        TypeSpecifier typeSpecifier129 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:890:5: ( ALIAS ( typeNameDeclaration )? ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:890:7: ALIAS ( typeNameDeclaration )? ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON
            {
            ALIAS125=(Token)match(input,ALIAS,FOLLOW_ALIAS_in_aliasDeclaration5832); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new TypeAliasDeclaration(ALIAS125);}

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:892:7: ( typeNameDeclaration )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==LIDENTIFIER||LA81_0==UIDENTIFIER) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:893:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_aliasDeclaration5858);
                    typeNameDeclaration126=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(typeNameDeclaration126); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:896:7: ( typeParameters )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==SMALLER_OP) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:897:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_aliasDeclaration5896);
                    typeParameters127=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeParameterList(typeParameters127); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:900:7: ( typeConstraints )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==COMPILER_ANNOTATION||LA83_0==TYPE_CONSTRAINT) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:901:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_aliasDeclaration5934);
                    typeConstraints128=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeConstraintList(typeConstraints128); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:904:7: ( typeSpecifier )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==COMPUTE||LA84_0==SPECIFY) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:905:9: typeSpecifier
                    {
                    pushFollow(FOLLOW_typeSpecifier_in_aliasDeclaration5971);
                    typeSpecifier129=typeSpecifier();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeSpecifier(typeSpecifier129); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON130=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_aliasDeclaration6006); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON130); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "aliasDeclaration"



    // $ANTLR start "assertion"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:914:1: assertion returns [Assertion assertion] : annotations ASSERT conditions SEMICOLON ;
    public Assertion assertion() throws RecognitionException {
        Assertion assertion = null;


        Token ASSERT131=null;
        Token SEMICOLON134=null;
        AnnotationList annotations132 =null;

        ConditionList conditions133 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:915:5: ( annotations ASSERT conditions SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:915:7: annotations ASSERT conditions SEMICOLON
            {
            pushFollow(FOLLOW_annotations_in_assertion6035);
            annotations132=annotations();

            state._fsp--;
            if (state.failed) return assertion;

            ASSERT131=(Token)match(input,ASSERT,FOLLOW_ASSERT_in_assertion6043); if (state.failed) return assertion;

            if ( state.backtracking==0 ) { assertion = new Assertion(ASSERT131); 
                    assertion.setAnnotationList(annotations132); }

            pushFollow(FOLLOW_conditions_in_assertion6059);
            conditions133=conditions();

            state._fsp--;
            if (state.failed) return assertion;

            if ( state.backtracking==0 ) { assertion.setConditionList(conditions133); }

            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON134=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_assertion6083); if (state.failed) return assertion;

            if ( state.backtracking==0 ) { assertion.setEndToken(SEMICOLON134); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return assertion;
    }
    // $ANTLR end "assertion"



    // $ANTLR start "block"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:927:1: block returns [Block block] : LBRACE ( declarationOrStatement )* RBRACE ;
    public Block block() throws RecognitionException {
        Block block = null;


        Token LBRACE135=null;
        Token RBRACE137=null;
        Statement declarationOrStatement136 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:928:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:928:7: LBRACE ( declarationOrStatement )* RBRACE
            {
            LBRACE135=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_block6112); if (state.failed) return block;

            if ( state.backtracking==0 ) { block = new Block(LBRACE135); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:930:7: ( declarationOrStatement )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==ALIAS||(LA85_0 >= ASSERT && LA85_0 <= ASSIGN)||(LA85_0 >= BACKTICK && LA85_0 <= BREAK)||(LA85_0 >= CHAR_LITERAL && LA85_0 <= CLASS_DEFINITION)||LA85_0==COMPILER_ANNOTATION||LA85_0==CONTINUE||(LA85_0 >= DECREMENT_OP && LA85_0 <= DIFFERENCE_OP)||LA85_0==DYNAMIC||(LA85_0 >= FLOAT_LITERAL && LA85_0 <= FUNCTION_MODIFIER)||(LA85_0 >= IF_CLAUSE && LA85_0 <= INTERFACE_DEFINITION)||LA85_0==IN_OP||(LA85_0 >= LBRACE && LA85_0 <= LIDENTIFIER)||LA85_0==LPAREN||LA85_0==MODULE||(LA85_0 >= NATURAL_LITERAL && LA85_0 <= NEW)||(LA85_0 >= NOT_OP && LA85_0 <= OBJECT_DEFINITION)||(LA85_0 >= OUT && LA85_0 <= PACKAGE)||LA85_0==PRODUCT_OP||LA85_0==RETURN||(LA85_0 >= SEMICOLON && LA85_0 <= SMALLER_OP)||LA85_0==STRING_LITERAL||LA85_0==STRING_START||(LA85_0 >= SUM_OP && LA85_0 <= SWITCH_CLAUSE)||(LA85_0 >= THIS && LA85_0 <= UIDENTIFIER)||(LA85_0 >= VALUE_MODIFIER && LA85_0 <= WHILE_CLAUSE)) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:931:9: declarationOrStatement
            	    {
            	    pushFollow(FOLLOW_declarationOrStatement_in_block6139);
            	    declarationOrStatement136=declarationOrStatement();

            	    state._fsp--;
            	    if (state.failed) return block;

            	    if ( state.backtracking==0 ) { if (declarationOrStatement136!=null)
            	                  block.addStatement(declarationOrStatement136); }

            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);


            RBRACE137=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_block6166); if (state.failed) return block;

            if ( state.backtracking==0 ) { block.setEndToken(RBRACE137); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "block"



    // $ANTLR start "interfaceBody"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:943:1: interfaceBody returns [InterfaceBody interfaceBody] : LBRACE ( declarationOrStatement )* RBRACE ;
    public InterfaceBody interfaceBody() throws RecognitionException {
        InterfaceBody interfaceBody = null;


        Token LBRACE138=null;
        Token RBRACE140=null;
        Statement declarationOrStatement139 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:944:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:944:7: LBRACE ( declarationOrStatement )* RBRACE
            {
            LBRACE138=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_interfaceBody6199); if (state.failed) return interfaceBody;

            if ( state.backtracking==0 ) { interfaceBody = new InterfaceBody(LBRACE138); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:946:7: ( declarationOrStatement )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==ALIAS||(LA86_0 >= ASSERT && LA86_0 <= ASSIGN)||(LA86_0 >= BACKTICK && LA86_0 <= BREAK)||(LA86_0 >= CHAR_LITERAL && LA86_0 <= CLASS_DEFINITION)||LA86_0==COMPILER_ANNOTATION||LA86_0==CONTINUE||(LA86_0 >= DECREMENT_OP && LA86_0 <= DIFFERENCE_OP)||LA86_0==DYNAMIC||(LA86_0 >= FLOAT_LITERAL && LA86_0 <= FUNCTION_MODIFIER)||(LA86_0 >= IF_CLAUSE && LA86_0 <= INTERFACE_DEFINITION)||LA86_0==IN_OP||(LA86_0 >= LBRACE && LA86_0 <= LIDENTIFIER)||LA86_0==LPAREN||LA86_0==MODULE||(LA86_0 >= NATURAL_LITERAL && LA86_0 <= NEW)||(LA86_0 >= NOT_OP && LA86_0 <= OBJECT_DEFINITION)||(LA86_0 >= OUT && LA86_0 <= PACKAGE)||LA86_0==PRODUCT_OP||LA86_0==RETURN||(LA86_0 >= SEMICOLON && LA86_0 <= SMALLER_OP)||LA86_0==STRING_LITERAL||LA86_0==STRING_START||(LA86_0 >= SUM_OP && LA86_0 <= SWITCH_CLAUSE)||(LA86_0 >= THIS && LA86_0 <= UIDENTIFIER)||(LA86_0 >= VALUE_MODIFIER && LA86_0 <= WHILE_CLAUSE)) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:947:9: declarationOrStatement
            	    {
            	    pushFollow(FOLLOW_declarationOrStatement_in_interfaceBody6226);
            	    declarationOrStatement139=declarationOrStatement();

            	    state._fsp--;
            	    if (state.failed) return interfaceBody;

            	    if ( state.backtracking==0 ) { if (declarationOrStatement139!=null)
            	                  interfaceBody.addStatement(declarationOrStatement139); }

            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);


            RBRACE140=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_interfaceBody6253); if (state.failed) return interfaceBody;

            if ( state.backtracking==0 ) { interfaceBody.setEndToken(RBRACE140); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return interfaceBody;
    }
    // $ANTLR end "interfaceBody"



    // $ANTLR start "classBody"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:955:1: classBody returns [ClassBody classBody] : LBRACE ( declarationOrStatement )* RBRACE ;
    public ClassBody classBody() throws RecognitionException {
        ClassBody classBody = null;


        Token LBRACE141=null;
        Token RBRACE143=null;
        Statement declarationOrStatement142 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:956:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:956:7: LBRACE ( declarationOrStatement )* RBRACE
            {
            LBRACE141=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_classBody6282); if (state.failed) return classBody;

            if ( state.backtracking==0 ) { classBody = new ClassBody(LBRACE141); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:958:7: ( declarationOrStatement )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==ALIAS||(LA87_0 >= ASSERT && LA87_0 <= ASSIGN)||(LA87_0 >= BACKTICK && LA87_0 <= BREAK)||(LA87_0 >= CHAR_LITERAL && LA87_0 <= CLASS_DEFINITION)||LA87_0==COMPILER_ANNOTATION||LA87_0==CONTINUE||(LA87_0 >= DECREMENT_OP && LA87_0 <= DIFFERENCE_OP)||LA87_0==DYNAMIC||(LA87_0 >= FLOAT_LITERAL && LA87_0 <= FUNCTION_MODIFIER)||(LA87_0 >= IF_CLAUSE && LA87_0 <= INTERFACE_DEFINITION)||LA87_0==IN_OP||(LA87_0 >= LBRACE && LA87_0 <= LIDENTIFIER)||LA87_0==LPAREN||LA87_0==MODULE||(LA87_0 >= NATURAL_LITERAL && LA87_0 <= NEW)||(LA87_0 >= NOT_OP && LA87_0 <= OBJECT_DEFINITION)||(LA87_0 >= OUT && LA87_0 <= PACKAGE)||LA87_0==PRODUCT_OP||LA87_0==RETURN||(LA87_0 >= SEMICOLON && LA87_0 <= SMALLER_OP)||LA87_0==STRING_LITERAL||LA87_0==STRING_START||(LA87_0 >= SUM_OP && LA87_0 <= SWITCH_CLAUSE)||(LA87_0 >= THIS && LA87_0 <= UIDENTIFIER)||(LA87_0 >= VALUE_MODIFIER && LA87_0 <= WHILE_CLAUSE)) ) {
                    alt87=1;
                }


                switch (alt87) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:959:9: declarationOrStatement
            	    {
            	    pushFollow(FOLLOW_declarationOrStatement_in_classBody6308);
            	    declarationOrStatement142=declarationOrStatement();

            	    state._fsp--;
            	    if (state.failed) return classBody;

            	    if ( state.backtracking==0 ) { if (declarationOrStatement142!=null)
            	                  classBody.addStatement(declarationOrStatement142); }

            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);


            RBRACE143=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_classBody6335); if (state.failed) return classBody;

            if ( state.backtracking==0 ) { classBody.setEndToken(RBRACE143); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return classBody;
    }
    // $ANTLR end "classBody"



    // $ANTLR start "extendedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:967:1: extendedType returns [ExtendedType extendedType] : EXTENDS (ci= classInstantiation )? ;
    public ExtendedType extendedType() throws RecognitionException {
        ExtendedType extendedType = null;


        Token EXTENDS144=null;
        PsiCompatibleCeylonParser.classInstantiation_return ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:968:5: ( EXTENDS (ci= classInstantiation )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:968:7: EXTENDS (ci= classInstantiation )?
            {
            EXTENDS144=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_extendedType6364); if (state.failed) return extendedType;

            if ( state.backtracking==0 ) { extendedType = new ExtendedType(EXTENDS144); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:970:7: (ci= classInstantiation )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==PACKAGE||LA88_0==SUPER||LA88_0==UIDENTIFIER) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:971:9: ci= classInstantiation
                    {
                    pushFollow(FOLLOW_classInstantiation_in_extendedType6394);
                    ci=classInstantiation();

                    state._fsp--;
                    if (state.failed) return extendedType;

                    if ( state.backtracking==0 ) { extendedType.setType((ci!=null?ci.type:null));
                              extendedType.setInvocationExpression((ci!=null?ci.invocationExpression:null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return extendedType;
    }
    // $ANTLR end "extendedType"



    // $ANTLR start "classSpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:977:1: classSpecifier returns [ClassSpecifier classSpecifier] : ( COMPUTE | SPECIFY ) (ci= classInstantiation )? ;
    public ClassSpecifier classSpecifier() throws RecognitionException {
        ClassSpecifier classSpecifier = null;


        Token COMPUTE145=null;
        Token SPECIFY146=null;
        PsiCompatibleCeylonParser.classInstantiation_return ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:978:5: ( ( COMPUTE | SPECIFY ) (ci= classInstantiation )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:978:7: ( COMPUTE | SPECIFY ) (ci= classInstantiation )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:978:7: ( COMPUTE | SPECIFY )
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==COMPUTE) ) {
                alt89=1;
            }
            else if ( (LA89_0==SPECIFY) ) {
                alt89=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return classSpecifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;

            }
            switch (alt89) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:979:9: COMPUTE
                    {
                    COMPUTE145=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_classSpecifier6444); if (state.failed) return classSpecifier;

                    if ( state.backtracking==0 ) { classSpecifier = new ClassSpecifier(COMPUTE145); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:982:9: SPECIFY
                    {
                    SPECIFY146=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_classSpecifier6473); if (state.failed) return classSpecifier;

                    if ( state.backtracking==0 ) { classSpecifier = new ClassSpecifier(SPECIFY146); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:985:7: (ci= classInstantiation )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==PACKAGE||LA90_0==SUPER||LA90_0==UIDENTIFIER) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:986:9: ci= classInstantiation
                    {
                    pushFollow(FOLLOW_classInstantiation_in_classSpecifier6512);
                    ci=classInstantiation();

                    state._fsp--;
                    if (state.failed) return classSpecifier;

                    if ( state.backtracking==0 ) { classSpecifier.setType((ci!=null?ci.type:null));
                              classSpecifier.setInvocationExpression((ci!=null?ci.invocationExpression:null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return classSpecifier;
    }
    // $ANTLR end "classSpecifier"


    public static class packageQualifiedClass_return extends ParserRuleReturnScope {
        public SimpleType type;
        public ExtendedTypeExpression expression;
    };


    // $ANTLR start "packageQualifiedClass"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:992:1: packageQualifiedClass returns [SimpleType type, ExtendedTypeExpression expression] : PACKAGE (m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )? )? ;
    public PsiCompatibleCeylonParser.packageQualifiedClass_return packageQualifiedClass() throws RecognitionException {
        PsiCompatibleCeylonParser.packageQualifiedClass_return retval = new PsiCompatibleCeylonParser.packageQualifiedClass_return();
        retval.start = input.LT(1);


        Token m1=null;
        Token m2=null;
        Token PACKAGE147=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return t1 =null;

        PsiCompatibleCeylonParser.typeNameWithArguments_return t2 =null;


         BaseType bt = null;
                    QualifiedType qt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:995:5: ( PACKAGE (m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )? )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:995:7: PACKAGE (m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )? )?
            {
            PACKAGE147=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_packageQualifiedClass6561); if (state.failed) return retval;

            if ( state.backtracking==0 ) { bt = new BaseType(PACKAGE147);
                    bt.setPackageQualified(true);
                    retval.type =bt; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:999:7: (m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )? )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==MEMBER_OP) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1000:9: m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )?
                    {
                    m1=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_packageQualifiedClass6589); if (state.failed) return retval;

                    if ( state.backtracking==0 ) { bt.setEndToken(m1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1002:9: (t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )? )?
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==UIDENTIFIER) ) {
                        alt92=1;
                    }
                    switch (alt92) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1003:11: t1= typeNameWithArguments (m2= MEMBER_OP t2= typeNameWithArguments )?
                            {
                            pushFollow(FOLLOW_typeNameWithArguments_in_packageQualifiedClass6623);
                            t1=typeNameWithArguments();

                            state._fsp--;
                            if (state.failed) return retval;

                            if ( state.backtracking==0 ) { if ((t1!=null?t1.identifier:null)!=null) {
                                          bt.setEndToken(null);
                                          bt.setIdentifier((t1!=null?t1.identifier:null));
                                        }
                                        if ((t1!=null?t1.typeArgumentList:null)!=null)
                                            bt.setTypeArgumentList((t1!=null?t1.typeArgumentList:null));
                                        retval.expression = new ExtendedTypeExpression(null);
                                        retval.expression.setExtendedType(retval.type); }

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1012:11: (m2= MEMBER_OP t2= typeNameWithArguments )?
                            int alt91=2;
                            int LA91_0 = input.LA(1);

                            if ( (LA91_0==MEMBER_OP) ) {
                                alt91=1;
                            }
                            switch (alt91) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1013:13: m2= MEMBER_OP t2= typeNameWithArguments
                                    {
                                    m2=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_packageQualifiedClass6664); if (state.failed) return retval;

                                    if ( state.backtracking==0 ) { qt = new QualifiedType(null);
                                                  qt.setOuterType(retval.type);
                                                  qt.setEndToken(m2); 
                                                  retval.type =qt; }

                                    pushFollow(FOLLOW_typeNameWithArguments_in_packageQualifiedClass6694);
                                    t2=typeNameWithArguments();

                                    state._fsp--;
                                    if (state.failed) return retval;

                                    if ( state.backtracking==0 ) { if ((t2!=null?t2.identifier:null)!=null) {
                                                    qt.setEndToken(null);
                                                    qt.setIdentifier((t2!=null?t2.identifier:null));
                                                  }
                                                  if ((t2!=null?t2.typeArgumentList:null)!=null)
                                                    qt.setTypeArgumentList((t2!=null?t2.typeArgumentList:null));
                                                  retval.expression = new ExtendedTypeExpression(null);
                                                  retval.expression.setExtendedType(retval.type); }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "packageQualifiedClass"


    public static class unqualifiedClass_return extends ParserRuleReturnScope {
        public SimpleType type;
        public ExtendedTypeExpression expression;
    };


    // $ANTLR start "unqualifiedClass"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1032:1: unqualifiedClass returns [SimpleType type, ExtendedTypeExpression expression] : t0= typeNameWithArguments (m3= MEMBER_OP (t3= typeNameWithArguments )? )? ;
    public PsiCompatibleCeylonParser.unqualifiedClass_return unqualifiedClass() throws RecognitionException {
        PsiCompatibleCeylonParser.unqualifiedClass_return retval = new PsiCompatibleCeylonParser.unqualifiedClass_return();
        retval.start = input.LT(1);


        Token m3=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return t0 =null;

        PsiCompatibleCeylonParser.typeNameWithArguments_return t3 =null;


         BaseType bt = null;
                    QualifiedType qt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1035:5: (t0= typeNameWithArguments (m3= MEMBER_OP (t3= typeNameWithArguments )? )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1035:7: t0= typeNameWithArguments (m3= MEMBER_OP (t3= typeNameWithArguments )? )?
            {
            pushFollow(FOLLOW_typeNameWithArguments_in_unqualifiedClass6772);
            t0=typeNameWithArguments();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { bt = new BaseType(null);
                    bt.setIdentifier((t0!=null?t0.identifier:null));
                    if ((t0!=null?t0.typeArgumentList:null)!=null)
                        bt.setTypeArgumentList((t0!=null?t0.typeArgumentList:null));
                    retval.type =bt; 
                    retval.expression = new ExtendedTypeExpression(null);
                    retval.expression.setExtendedType(retval.type); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1043:7: (m3= MEMBER_OP (t3= typeNameWithArguments )? )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==MEMBER_OP) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1044:9: m3= MEMBER_OP (t3= typeNameWithArguments )?
                    {
                    m3=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_unqualifiedClass6801); if (state.failed) return retval;

                    if ( state.backtracking==0 ) { qt = new QualifiedType(null);
                              qt.setOuterType(retval.type);
                              qt.setEndToken(m3); 
                              retval.type =qt; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1049:9: (t3= typeNameWithArguments )?
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==UIDENTIFIER) ) {
                        alt94=1;
                    }
                    switch (alt94) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1050:11: t3= typeNameWithArguments
                            {
                            pushFollow(FOLLOW_typeNameWithArguments_in_unqualifiedClass6835);
                            t3=typeNameWithArguments();

                            state._fsp--;
                            if (state.failed) return retval;

                            if ( state.backtracking==0 ) { if ((t3!=null?t3.identifier:null)!=null) {
                                          qt.setEndToken(null);
                                          qt.setIdentifier((t3!=null?t3.identifier:null));
                                        }
                                        if ((t3!=null?t3.typeArgumentList:null)!=null)
                                            qt.setTypeArgumentList((t3!=null?t3.typeArgumentList:null));
                                        retval.expression = new ExtendedTypeExpression(null);
                                        retval.expression.setExtendedType(retval.type); }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "unqualifiedClass"


    public static class superQualifiedClass_return extends ParserRuleReturnScope {
        public SimpleType type;
        public ExtendedTypeExpression expression;
    };


    // $ANTLR start "superQualifiedClass"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1063:1: superQualifiedClass returns [SimpleType type, ExtendedTypeExpression expression] : SUPER m4= MEMBER_OP (t4= typeNameWithArguments )? ;
    public PsiCompatibleCeylonParser.superQualifiedClass_return superQualifiedClass() throws RecognitionException {
        PsiCompatibleCeylonParser.superQualifiedClass_return retval = new PsiCompatibleCeylonParser.superQualifiedClass_return();
        retval.start = input.LT(1);


        Token m4=null;
        Token SUPER148=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return t4 =null;


         QualifiedType qt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1065:5: ( SUPER m4= MEMBER_OP (t4= typeNameWithArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1065:7: SUPER m4= MEMBER_OP (t4= typeNameWithArguments )?
            {
            SUPER148=(Token)match(input,SUPER,FOLLOW_SUPER_in_superQualifiedClass6897); if (state.failed) return retval;

            if ( state.backtracking==0 ) { SuperType st = new SuperType(SUPER148); 
                    qt = new QualifiedType(null); 
                    qt.setOuterType(st); 
                    retval.type =qt; }

            m4=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_superQualifiedClass6916); if (state.failed) return retval;

            if ( state.backtracking==0 ) { qt.setEndToken(m4); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1072:7: (t4= typeNameWithArguments )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==UIDENTIFIER) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1073:9: t4= typeNameWithArguments
                    {
                    pushFollow(FOLLOW_typeNameWithArguments_in_superQualifiedClass6944);
                    t4=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { if ((t4!=null?t4.identifier:null)!=null) {
                                qt.setEndToken(null);
                                qt.setIdentifier((t4!=null?t4.identifier:null));
                              }
                              if ((t4!=null?t4.typeArgumentList:null)!=null)
                                qt.setTypeArgumentList((t4!=null?t4.typeArgumentList:null));
                              retval.expression = new ExtendedTypeExpression(null);
                              retval.expression.setExtendedType(retval.type); }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "superQualifiedClass"


    public static class classInstantiation_return extends ParserRuleReturnScope {
        public SimpleType type;
        public InvocationExpression invocationExpression;
    };


    // $ANTLR start "classInstantiation"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1085:1: classInstantiation returns [SimpleType type, InvocationExpression invocationExpression] : (pq= packageQualifiedClass |uq= unqualifiedClass |sq= superQualifiedClass ) (pa= positionalArguments )? ;
    public PsiCompatibleCeylonParser.classInstantiation_return classInstantiation() throws RecognitionException {
        PsiCompatibleCeylonParser.classInstantiation_return retval = new PsiCompatibleCeylonParser.classInstantiation_return();
        retval.start = input.LT(1);


        PsiCompatibleCeylonParser.packageQualifiedClass_return pq =null;

        PsiCompatibleCeylonParser.unqualifiedClass_return uq =null;

        PsiCompatibleCeylonParser.superQualifiedClass_return sq =null;

        PositionalArgumentList pa =null;


         ExtendedTypeExpression ete = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1087:5: ( (pq= packageQualifiedClass |uq= unqualifiedClass |sq= superQualifiedClass ) (pa= positionalArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1087:7: (pq= packageQualifiedClass |uq= unqualifiedClass |sq= superQualifiedClass ) (pa= positionalArguments )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1087:7: (pq= packageQualifiedClass |uq= unqualifiedClass |sq= superQualifiedClass )
            int alt97=3;
            switch ( input.LA(1) ) {
            case PACKAGE:
                {
                alt97=1;
                }
                break;
            case UIDENTIFIER:
                {
                alt97=2;
                }
                break;
            case SUPER:
                {
                alt97=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 97, 0, input);

                throw nvae;

            }

            switch (alt97) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1088:8: pq= packageQualifiedClass
                    {
                    pushFollow(FOLLOW_packageQualifiedClass_in_classInstantiation7004);
                    pq=packageQualifiedClass();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =(pq!=null?pq.type:null); ete=(pq!=null?pq.expression:null); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1091:8: uq= unqualifiedClass
                    {
                    pushFollow(FOLLOW_unqualifiedClass_in_classInstantiation7032);
                    uq=unqualifiedClass();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =(uq!=null?uq.type:null); ete=(uq!=null?uq.expression:null); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1094:8: sq= superQualifiedClass
                    {
                    pushFollow(FOLLOW_superQualifiedClass_in_classInstantiation7060);
                    sq=superQualifiedClass();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =(sq!=null?sq.type:null); ete=(sq!=null?sq.expression:null); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1097:7: (pa= positionalArguments )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==LPAREN) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1098:9: pa= positionalArguments
                    {
                    pushFollow(FOLLOW_positionalArguments_in_classInstantiation7096);
                    pa=positionalArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.invocationExpression = new InvocationExpression(null);
                              retval.invocationExpression.setPrimary(ete);
                              retval.invocationExpression.setPositionalArgumentList(pa); }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "classInstantiation"



    // $ANTLR start "satisfiedTypes"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1110:1: satisfiedTypes returns [SatisfiedTypes satisfiedTypes] : SATISFIES (t1= primaryType ) ( (i= INTERSECTION_OP | ( COMMA | UNION_OP ) ) (t2= primaryType ) )* ;
    public SatisfiedTypes satisfiedTypes() throws RecognitionException {
        SatisfiedTypes satisfiedTypes = null;


        Token i=null;
        Token SATISFIES149=null;
        StaticType t1 =null;

        StaticType t2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1111:5: ( SATISFIES (t1= primaryType ) ( (i= INTERSECTION_OP | ( COMMA | UNION_OP ) ) (t2= primaryType ) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1111:7: SATISFIES (t1= primaryType ) ( (i= INTERSECTION_OP | ( COMMA | UNION_OP ) ) (t2= primaryType ) )*
            {
            SATISFIES149=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiedTypes7146); if (state.failed) return satisfiedTypes;

            if ( state.backtracking==0 ) { satisfiedTypes = new SatisfiedTypes(SATISFIES149); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1113:7: (t1= primaryType )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1114:9: t1= primaryType
            {
            pushFollow(FOLLOW_primaryType_in_satisfiedTypes7176);
            t1=primaryType();

            state._fsp--;
            if (state.failed) return satisfiedTypes;

            if ( state.backtracking==0 ) { if (t1!=null) satisfiedTypes.addType(t1); }

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1117:7: ( (i= INTERSECTION_OP | ( COMMA | UNION_OP ) ) (t2= primaryType ) )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==COMMA||LA100_0==INTERSECTION_OP||LA100_0==UNION_OP) ) {
                    alt100=1;
                }


                switch (alt100) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1118:9: (i= INTERSECTION_OP | ( COMMA | UNION_OP ) ) (t2= primaryType )
            	    {
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1118:9: (i= INTERSECTION_OP | ( COMMA | UNION_OP ) )
            	    int alt99=2;
            	    int LA99_0 = input.LA(1);

            	    if ( (LA99_0==INTERSECTION_OP) ) {
            	        alt99=1;
            	    }
            	    else if ( (LA99_0==COMMA||LA99_0==UNION_OP) ) {
            	        alt99=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return satisfiedTypes;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 99, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt99) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1119:11: i= INTERSECTION_OP
            	            {
            	            i=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_satisfiedTypes7228); if (state.failed) return satisfiedTypes;

            	            if ( state.backtracking==0 ) { satisfiedTypes.setEndToken(i); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1122:11: ( COMMA | UNION_OP )
            	            {
            	            if ( input.LA(1)==COMMA||input.LA(1)==UNION_OP ) {
            	                input.consume();
            	                state.errorRecovery=false;
            	                state.failed=false;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return satisfiedTypes;}
            	                MismatchedSetException mse = new MismatchedSetException(null,input);
            	                throw mse;
            	            }


            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                          new MismatchedTokenException(INTERSECTION_OP, input)); }

            	            }
            	            break;

            	    }


            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1126:9: (t2= primaryType )
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1127:11: t2= primaryType
            	    {
            	    pushFollow(FOLLOW_primaryType_in_satisfiedTypes7313);
            	    t2=primaryType();

            	    state._fsp--;
            	    if (state.failed) return satisfiedTypes;

            	    if ( state.backtracking==0 ) { if (t2!=null) {
            	                    satisfiedTypes.addType(t2); 
            	                    satisfiedTypes.setEndToken(null); } }

            	    }


            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return satisfiedTypes;
    }
    // $ANTLR end "satisfiedTypes"



    // $ANTLR start "caseTypes"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1135:1: caseTypes returns [CaseTypes caseTypes] : CASE_TYPES ct1= caseType ( (u= UNION_OP | ( COMMA | INTERSECTION_OP ) ) (ct2= caseType ) )* ;
    public CaseTypes caseTypes() throws RecognitionException {
        CaseTypes caseTypes = null;


        Token u=null;
        Token CASE_TYPES150=null;
        PsiCompatibleCeylonParser.caseType_return ct1 =null;

        PsiCompatibleCeylonParser.caseType_return ct2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1136:5: ( CASE_TYPES ct1= caseType ( (u= UNION_OP | ( COMMA | INTERSECTION_OP ) ) (ct2= caseType ) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1136:7: CASE_TYPES ct1= caseType ( (u= UNION_OP | ( COMMA | INTERSECTION_OP ) ) (ct2= caseType ) )*
            {
            CASE_TYPES150=(Token)match(input,CASE_TYPES,FOLLOW_CASE_TYPES_in_caseTypes7365); if (state.failed) return caseTypes;

            if ( state.backtracking==0 ) { caseTypes = new CaseTypes(CASE_TYPES150); }

            pushFollow(FOLLOW_caseType_in_caseTypes7383);
            ct1=caseType();

            state._fsp--;
            if (state.failed) return caseTypes;

            if ( state.backtracking==0 ) { if ((ct1!=null?ct1.type:null)!=null) caseTypes.addType((ct1!=null?ct1.type:null)); 
                    if ((ct1!=null?ct1.instance:null)!=null) caseTypes.addBaseMemberExpression((ct1!=null?ct1.instance:null)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1141:7: ( (u= UNION_OP | ( COMMA | INTERSECTION_OP ) ) (ct2= caseType ) )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==COMMA||LA102_0==INTERSECTION_OP||LA102_0==UNION_OP) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1142:9: (u= UNION_OP | ( COMMA | INTERSECTION_OP ) ) (ct2= caseType )
            	    {
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1142:9: (u= UNION_OP | ( COMMA | INTERSECTION_OP ) )
            	    int alt101=2;
            	    int LA101_0 = input.LA(1);

            	    if ( (LA101_0==UNION_OP) ) {
            	        alt101=1;
            	    }
            	    else if ( (LA101_0==COMMA||LA101_0==INTERSECTION_OP) ) {
            	        alt101=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return caseTypes;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 101, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt101) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1143:11: u= UNION_OP
            	            {
            	            u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_caseTypes7425); if (state.failed) return caseTypes;

            	            if ( state.backtracking==0 ) { caseTypes.setEndToken(u); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1146:11: ( COMMA | INTERSECTION_OP )
            	            {
            	            if ( input.LA(1)==COMMA||input.LA(1)==INTERSECTION_OP ) {
            	                input.consume();
            	                state.errorRecovery=false;
            	                state.failed=false;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return caseTypes;}
            	                MismatchedSetException mse = new MismatchedSetException(null,input);
            	                throw mse;
            	            }


            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                          new MismatchedTokenException(UNION_OP, input)); }

            	            }
            	            break;

            	    }


            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1150:9: (ct2= caseType )
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1151:11: ct2= caseType
            	    {
            	    pushFollow(FOLLOW_caseType_in_caseTypes7511);
            	    ct2=caseType();

            	    state._fsp--;
            	    if (state.failed) return caseTypes;

            	    if ( state.backtracking==0 ) { if ((ct2!=null?ct2.type:null)!=null) caseTypes.addType((ct2!=null?ct2.type:null)); 
            	                if ((ct2!=null?ct2.instance:null)!=null) caseTypes.addBaseMemberExpression((ct2!=null?ct2.instance:null)); 
            	                if ((ct2!=null?ct2.type:null)!=null||(ct2!=null?ct2.instance:null)!=null) caseTypes.setEndToken(null); }

            	    }


            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return caseTypes;
    }
    // $ANTLR end "caseTypes"


    public static class caseType_return extends ParserRuleReturnScope {
        public StaticType type;
        public BaseMemberExpression instance;
    };


    // $ANTLR start "caseType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1159:1: caseType returns [StaticType type, BaseMemberExpression instance] : (t= primaryType | memberName );
    public PsiCompatibleCeylonParser.caseType_return caseType() throws RecognitionException {
        PsiCompatibleCeylonParser.caseType_return retval = new PsiCompatibleCeylonParser.caseType_return();
        retval.start = input.LT(1);


        StaticType t =null;

        Identifier memberName151 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1160:5: (t= primaryType | memberName )
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( ((LA103_0 >= LBRACE && LA103_0 <= LBRACKET)||LA103_0==PACKAGE||LA103_0==SMALLER_OP||LA103_0==UIDENTIFIER) ) {
                alt103=1;
            }
            else if ( (LA103_0==LIDENTIFIER) ) {
                alt103=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;

            }
            switch (alt103) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1160:7: t= primaryType
                    {
                    pushFollow(FOLLOW_primaryType_in_caseType7565);
                    t=primaryType();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =t;}

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1162:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_caseType7582);
                    memberName151=memberName();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.instance = new BaseMemberExpression(null);
                            retval.instance.setIdentifier(memberName151);
                            retval.instance.setTypeArguments( new InferredTypeArguments(null) ); }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "caseType"



    // $ANTLR start "abstractedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1170:1: abstractedType returns [AbstractedType abstractedType] : ABSTRACTED_TYPE primaryType ;
    public AbstractedType abstractedType() throws RecognitionException {
        AbstractedType abstractedType = null;


        Token ABSTRACTED_TYPE152=null;
        StaticType primaryType153 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1171:5: ( ABSTRACTED_TYPE primaryType )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1171:7: ABSTRACTED_TYPE primaryType
            {
            ABSTRACTED_TYPE152=(Token)match(input,ABSTRACTED_TYPE,FOLLOW_ABSTRACTED_TYPE_in_abstractedType7617); if (state.failed) return abstractedType;

            if ( state.backtracking==0 ) { abstractedType = new AbstractedType(ABSTRACTED_TYPE152); }

            pushFollow(FOLLOW_primaryType_in_abstractedType7633);
            primaryType153=primaryType();

            state._fsp--;
            if (state.failed) return abstractedType;

            if ( state.backtracking==0 ) { abstractedType.setType(primaryType153); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return abstractedType;
    }
    // $ANTLR end "abstractedType"



    // $ANTLR start "parameters"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1177:1: parameters returns [ParameterList parameterList] : LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN ;
    public ParameterList parameters() throws RecognitionException {
        ParameterList parameterList = null;


        Token c=null;
        Token LPAREN154=null;
        Token RPAREN155=null;
        Parameter ap1 =null;

        Parameter ap2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1178:5: ( LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1178:7: LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN
            {
            LPAREN154=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parameters7662); if (state.failed) return parameterList;

            if ( state.backtracking==0 ) { parameterList =new ParameterList(LPAREN154); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1180:7: (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==ALIAS||(LA106_0 >= ASSERT && LA106_0 <= ASSIGN)||(LA106_0 >= BACKTICK && LA106_0 <= BREAK)||(LA106_0 >= CHAR_LITERAL && LA106_0 <= CLASS_DEFINITION)||LA106_0==COMPILER_ANNOTATION||LA106_0==CONTINUE||(LA106_0 >= DECREMENT_OP && LA106_0 <= DIFFERENCE_OP)||LA106_0==DYNAMIC||(LA106_0 >= FLOAT_LITERAL && LA106_0 <= FUNCTION_MODIFIER)||(LA106_0 >= IF_CLAUSE && LA106_0 <= INTERFACE_DEFINITION)||LA106_0==IN_OP||(LA106_0 >= LBRACE && LA106_0 <= LIDENTIFIER)||LA106_0==LPAREN||LA106_0==MODULE||(LA106_0 >= NATURAL_LITERAL && LA106_0 <= NEW)||(LA106_0 >= NOT_OP && LA106_0 <= OBJECT_DEFINITION)||(LA106_0 >= OUT && LA106_0 <= PACKAGE)||LA106_0==PRODUCT_OP||LA106_0==RETURN||(LA106_0 >= SEMICOLON && LA106_0 <= SMALLER_OP)||LA106_0==STRING_LITERAL||LA106_0==STRING_START||(LA106_0 >= SUM_OP && LA106_0 <= SWITCH_CLAUSE)||(LA106_0 >= THIS && LA106_0 <= UIDENTIFIER)||(LA106_0 >= VALUE_MODIFIER && LA106_0 <= WHILE_CLAUSE)) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1181:9: ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )*
                    {
                    pushFollow(FOLLOW_parameterDeclarationOrRef_in_parameters7690);
                    ap1=parameterDeclarationOrRef();

                    state._fsp--;
                    if (state.failed) return parameterList;

                    if ( state.backtracking==0 ) { if (ap1!=null)
                                  parameterList.addParameter(ap1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1184:9: (c= COMMA (ap2= parameterDeclarationOrRef |) )*
                    loop105:
                    do {
                        int alt105=2;
                        int LA105_0 = input.LA(1);

                        if ( (LA105_0==COMMA) ) {
                            alt105=1;
                        }


                        switch (alt105) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1185:11: c= COMMA (ap2= parameterDeclarationOrRef |)
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_parameters7725); if (state.failed) return parameterList;

                    	    if ( state.backtracking==0 ) { parameterList.setEndToken(c); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1187:11: (ap2= parameterDeclarationOrRef |)
                    	    int alt104=2;
                    	    int LA104_0 = input.LA(1);

                    	    if ( (LA104_0==ALIAS||(LA104_0 >= ASSERT && LA104_0 <= ASSIGN)||(LA104_0 >= BACKTICK && LA104_0 <= BREAK)||(LA104_0 >= CHAR_LITERAL && LA104_0 <= CLASS_DEFINITION)||LA104_0==COMPILER_ANNOTATION||LA104_0==CONTINUE||(LA104_0 >= DECREMENT_OP && LA104_0 <= DIFFERENCE_OP)||LA104_0==DYNAMIC||(LA104_0 >= FLOAT_LITERAL && LA104_0 <= FUNCTION_MODIFIER)||(LA104_0 >= IF_CLAUSE && LA104_0 <= INTERFACE_DEFINITION)||LA104_0==IN_OP||(LA104_0 >= LBRACE && LA104_0 <= LIDENTIFIER)||LA104_0==LPAREN||LA104_0==MODULE||(LA104_0 >= NATURAL_LITERAL && LA104_0 <= NEW)||(LA104_0 >= NOT_OP && LA104_0 <= OBJECT_DEFINITION)||(LA104_0 >= OUT && LA104_0 <= PACKAGE)||LA104_0==PRODUCT_OP||LA104_0==RETURN||(LA104_0 >= SEMICOLON && LA104_0 <= SMALLER_OP)||LA104_0==STRING_LITERAL||LA104_0==STRING_START||(LA104_0 >= SUM_OP && LA104_0 <= SWITCH_CLAUSE)||(LA104_0 >= THIS && LA104_0 <= UIDENTIFIER)||(LA104_0 >= VALUE_MODIFIER && LA104_0 <= WHILE_CLAUSE)) ) {
                    	        alt104=1;
                    	    }
                    	    else if ( (LA104_0==COMMA||LA104_0==RPAREN) ) {
                    	        alt104=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return parameterList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 104, 0, input);

                    	        throw nvae;

                    	    }
                    	    switch (alt104) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1188:13: ap2= parameterDeclarationOrRef
                    	            {
                    	            pushFollow(FOLLOW_parameterDeclarationOrRef_in_parameters7765);
                    	            ap2=parameterDeclarationOrRef();

                    	            state._fsp--;
                    	            if (state.failed) return parameterList;

                    	            if ( state.backtracking==0 ) { if (ap2!=null) {
                    	                              parameterList.addParameter(ap2); 
                    	                              parameterList.setEndToken(null); } }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1193:13: 
                    	            {
                    	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                    	                            new MismatchedTokenException(UIDENTIFIER, input)); }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop105;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN155=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parameters7845); if (state.failed) return parameterList;

            if ( state.backtracking==0 ) { parameterList.setEndToken(RPAREN155); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameterList;
    }
    // $ANTLR end "parameters"



    // $ANTLR start "parameter"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1202:1: parameter returns [ParameterDeclaration parameter] : compilerAnnotations annotations parameterDeclaration ;
    public ParameterDeclaration parameter() throws RecognitionException {
        ParameterDeclaration parameter = null;


        TypedDeclaration parameterDeclaration156 =null;

        List<CompilerAnnotation> compilerAnnotations157 =null;

        AnnotationList annotations158 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1203:5: ( compilerAnnotations annotations parameterDeclaration )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1203:7: compilerAnnotations annotations parameterDeclaration
            {
            pushFollow(FOLLOW_compilerAnnotations_in_parameter7874);
            compilerAnnotations157=compilerAnnotations();

            state._fsp--;
            if (state.failed) return parameter;

            pushFollow(FOLLOW_annotations_in_parameter7882);
            annotations158=annotations();

            state._fsp--;
            if (state.failed) return parameter;

            pushFollow(FOLLOW_parameterDeclaration_in_parameter7890);
            parameterDeclaration156=parameterDeclaration();

            state._fsp--;
            if (state.failed) return parameter;

            if ( state.backtracking==0 ) { TypedDeclaration d = parameterDeclaration156;
                    d.getCompilerAnnotations().addAll(compilerAnnotations157);
                    d.setAnnotationList(annotations158);
                    if (d instanceof AttributeDeclaration) {
                        ValueParameterDeclaration vp = new ValueParameterDeclaration(null);
                        vp.setTypedDeclaration(d);
                        parameter = vp;
                    }
                    else if (d instanceof MethodDeclaration) {
                        FunctionalParameterDeclaration fp = new FunctionalParameterDeclaration(null);
                        fp.setTypedDeclaration(d);
                        parameter = fp;
                    }
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameter"



    // $ANTLR start "parameterDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1222:1: parameterDeclaration returns [TypedDeclaration declaration] : ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( typeParameters )? ( parameters )+ ( functionSpecifier )? ) ;
    public TypedDeclaration parameterDeclaration() throws RecognitionException {
        TypedDeclaration declaration = null;


        Token VOID_MODIFIER160=null;
        Token FUNCTION_MODIFIER161=null;
        Token DYNAMIC162=null;
        Token VALUE_MODIFIER163=null;
        Type variadicType159 =null;

        Identifier memberName164 =null;

        SpecifierExpression specifier165 =null;

        TypeParameterList typeParameters166 =null;

        ParameterList parameters167 =null;

        SpecifierExpression functionSpecifier168 =null;


         AttributeDeclaration a = new AttributeDeclaration(null); 
                    MethodDeclaration m = new MethodDeclaration(null);
                    declaration = a; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1226:5: ( ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( typeParameters )? ( parameters )+ ( functionSpecifier )? ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1226:7: ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( typeParameters )? ( parameters )+ ( functionSpecifier )? )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1226:7: ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER )
            int alt107=5;
            switch ( input.LA(1) ) {
            case LBRACE:
            case LBRACKET:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt107=1;
                }
                break;
            case VOID_MODIFIER:
                {
                alt107=2;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt107=3;
                }
                break;
            case DYNAMIC:
                {
                alt107=4;
                }
                break;
            case VALUE_MODIFIER:
                {
                alt107=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 107, 0, input);

                throw nvae;

            }

            switch (alt107) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1227:9: variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_parameterDeclaration7943);
                    variadicType159=variadicType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { a.setType(variadicType159);
                              m.setType(variadicType159); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1230:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER160=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_parameterDeclaration7963); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { m.setType(new VoidModifier(VOID_MODIFIER160));
                              declaration =m; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1233:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER161=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_parameterDeclaration7983); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { m.setType(new FunctionModifier(FUNCTION_MODIFIER161));
                              declaration =m; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1236:9: DYNAMIC
                    {
                    DYNAMIC162=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_parameterDeclaration8003); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { a.setType(new DynamicModifier(DYNAMIC162));
                              m.setType(new DynamicModifier(DYNAMIC162)); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1239:9: VALUE_MODIFIER
                    {
                    VALUE_MODIFIER163=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_parameterDeclaration8023); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { a.setType(new ValueModifier(VALUE_MODIFIER163)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberName_in_parameterDeclaration8049);
            memberName164=memberName();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { a.setIdentifier(memberName164);
                    m.setIdentifier(memberName164); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1245:7: ( ( specifier )? | ( typeParameters )? ( parameters )+ ( functionSpecifier )? )
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==COMMA||LA112_0==RPAREN||LA112_0==SPECIFY) ) {
                alt112=1;
            }
            else if ( (LA112_0==LPAREN||LA112_0==SMALLER_OP) ) {
                alt112=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 112, 0, input);

                throw nvae;

            }
            switch (alt112) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1246:9: ( specifier )?
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1246:9: ( specifier )?
                    int alt108=2;
                    int LA108_0 = input.LA(1);

                    if ( (LA108_0==SPECIFY) ) {
                        alt108=1;
                    }
                    switch (alt108) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1247:11: specifier
                            {
                            pushFollow(FOLLOW_specifier_in_parameterDeclaration8087);
                            specifier165=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { a.setSpecifierOrInitializerExpression(specifier165); }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1251:9: ( typeParameters )? ( parameters )+ ( functionSpecifier )?
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1251:9: ( typeParameters )?
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==SMALLER_OP) ) {
                        alt109=1;
                    }
                    switch (alt109) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1252:11: typeParameters
                            {
                            pushFollow(FOLLOW_typeParameters_in_parameterDeclaration8140);
                            typeParameters166=typeParameters();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { m.setTypeParameterList(typeParameters166); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1255:9: ( parameters )+
                    int cnt110=0;
                    loop110:
                    do {
                        int alt110=2;
                        int LA110_0 = input.LA(1);

                        if ( (LA110_0==LPAREN) ) {
                            alt110=1;
                        }


                        switch (alt110) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1256:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_parameterDeclaration8185);
                    	    parameters167=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { m.addParameterList(parameters167);
                    	                declaration =m; }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt110 >= 1 ) break loop110;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(110, input);
                                throw eee;
                        }
                        cnt110++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1260:9: ( functionSpecifier )?
                    int alt111=2;
                    int LA111_0 = input.LA(1);

                    if ( (LA111_0==COMPUTE||LA111_0==SPECIFY) ) {
                        alt111=1;
                    }
                    switch (alt111) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1261:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_parameterDeclaration8230);
                            functionSpecifier168=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { m.setSpecifierExpression(functionSpecifier168); }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "parameterDeclaration"



    // $ANTLR start "parameterRef"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1267:1: parameterRef returns [InitializerParameter parameter] : memberName ( specifier )? ;
    public InitializerParameter parameterRef() throws RecognitionException {
        InitializerParameter parameter = null;


        Identifier memberName169 =null;

        SpecifierExpression specifier170 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1268:5: ( memberName ( specifier )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1268:7: memberName ( specifier )?
            {
            pushFollow(FOLLOW_memberName_in_parameterRef8282);
            memberName169=memberName();

            state._fsp--;
            if (state.failed) return parameter;

            if ( state.backtracking==0 ) { parameter = new InitializerParameter(null);
                    parameter.setIdentifier(memberName169); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1271:7: ( specifier )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==SPECIFY) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1272:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_parameterRef8308);
                    specifier170=specifier();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter.setSpecifierExpression(specifier170); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameterRef"



    // $ANTLR start "parameterDeclarationOrRef"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1277:1: parameterDeclarationOrRef returns [Parameter parameter] : (r= parameterRef |p= parameter );
    public Parameter parameterDeclarationOrRef() throws RecognitionException {
        Parameter parameter = null;


        InitializerParameter r =null;

        ParameterDeclaration p =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1278:5: (r= parameterRef |p= parameter )
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==LIDENTIFIER) ) {
                int LA114_1 = input.LA(2);

                if ( (LA114_1==COMMA||LA114_1==RPAREN||LA114_1==SPECIFY) ) {
                    alt114=1;
                }
                else if ( (LA114_1==DYNAMIC||LA114_1==FUNCTION_MODIFIER||(LA114_1 >= LBRACE && LA114_1 <= LBRACKET)||LA114_1==LIDENTIFIER||LA114_1==LPAREN||LA114_1==PACKAGE||LA114_1==SMALLER_OP||LA114_1==UIDENTIFIER||LA114_1==VALUE_MODIFIER||LA114_1==VOID_MODIFIER) ) {
                    alt114=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return parameter;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 114, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA114_0==COMPILER_ANNOTATION||LA114_0==DYNAMIC||LA114_0==FUNCTION_MODIFIER||(LA114_0 >= LBRACE && LA114_0 <= LBRACKET)||LA114_0==PACKAGE||LA114_0==SMALLER_OP||LA114_0==STRING_LITERAL||LA114_0==UIDENTIFIER||(LA114_0 >= VALUE_MODIFIER && LA114_0 <= VOID_MODIFIER)) ) {
                alt114=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return parameter;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;

            }
            switch (alt114) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1279:7: r= parameterRef
                    {
                    pushFollow(FOLLOW_parameterRef_in_parameterDeclarationOrRef8356);
                    r=parameterRef();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter =r; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1282:7: p= parameter
                    {
                    pushFollow(FOLLOW_parameter_in_parameterDeclarationOrRef8381);
                    p=parameter();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter =p; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameterDeclarationOrRef"



    // $ANTLR start "typeParameters"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1286:1: typeParameters returns [TypeParameterList typeParameterList] : SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP ;
    public TypeParameterList typeParameters() throws RecognitionException {
        TypeParameterList typeParameterList = null;


        Token c=null;
        Token SMALLER_OP171=null;
        Token LARGER_OP172=null;
        TypeParameterDeclaration tp1 =null;

        TypeParameterDeclaration tp2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1287:5: ( SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1287:7: SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP
            {
            SMALLER_OP171=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeParameters8410); if (state.failed) return typeParameterList;

            if ( state.backtracking==0 ) { typeParameterList = new TypeParameterList(SMALLER_OP171); }

            pushFollow(FOLLOW_typeParameter_in_typeParameters8428);
            tp1=typeParameter();

            state._fsp--;
            if (state.failed) return typeParameterList;

            if ( state.backtracking==0 ) { if (tp1 instanceof TypeParameterDeclaration)
                        typeParameterList.addTypeParameterDeclaration(tp1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1292:7: (c= COMMA (tp2= typeParameter |) )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==COMMA) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1293:9: c= COMMA (tp2= typeParameter |)
            	    {
            	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_typeParameters8456); if (state.failed) return typeParameterList;

            	    if ( state.backtracking==0 ) { typeParameterList.setEndToken(c); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1295:9: (tp2= typeParameter |)
            	    int alt115=2;
            	    int LA115_0 = input.LA(1);

            	    if ( (LA115_0==ALIAS||(LA115_0 >= ASSERT && LA115_0 <= ASSIGN)||(LA115_0 >= BACKTICK && LA115_0 <= BREAK)||(LA115_0 >= CHAR_LITERAL && LA115_0 <= CLASS_DEFINITION)||LA115_0==COMPILER_ANNOTATION||LA115_0==CONTINUE||(LA115_0 >= DECREMENT_OP && LA115_0 <= DIFFERENCE_OP)||LA115_0==DYNAMIC||(LA115_0 >= FLOAT_LITERAL && LA115_0 <= FUNCTION_MODIFIER)||(LA115_0 >= IF_CLAUSE && LA115_0 <= INTERFACE_DEFINITION)||LA115_0==IN_OP||(LA115_0 >= LBRACE && LA115_0 <= LIDENTIFIER)||LA115_0==LPAREN||LA115_0==MODULE||(LA115_0 >= NATURAL_LITERAL && LA115_0 <= NEW)||(LA115_0 >= NOT_OP && LA115_0 <= OBJECT_DEFINITION)||(LA115_0 >= OUT && LA115_0 <= PACKAGE)||LA115_0==PRODUCT_OP||LA115_0==RETURN||(LA115_0 >= SEMICOLON && LA115_0 <= SMALLER_OP)||LA115_0==STRING_LITERAL||LA115_0==STRING_START||(LA115_0 >= SUM_OP && LA115_0 <= SWITCH_CLAUSE)||(LA115_0 >= THIS && LA115_0 <= UIDENTIFIER)||(LA115_0 >= VALUE_MODIFIER && LA115_0 <= WHILE_CLAUSE)) ) {
            	        alt115=1;
            	    }
            	    else if ( (LA115_0==COMMA||LA115_0==LARGER_OP) ) {
            	        alt115=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return typeParameterList;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 115, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt115) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1296:11: tp2= typeParameter
            	            {
            	            pushFollow(FOLLOW_typeParameter_in_typeParameters8490);
            	            tp2=typeParameter();

            	            state._fsp--;
            	            if (state.failed) return typeParameterList;

            	            if ( state.backtracking==0 ) { if (tp2 instanceof TypeParameterDeclaration)
            	                            typeParameterList.addTypeParameterDeclaration(tp2);
            	                        typeParameterList.setEndToken(null); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1300:11: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                            new MismatchedTokenException(UIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);


            LARGER_OP172=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeParameters8541); if (state.failed) return typeParameterList;

            if ( state.backtracking==0 ) { typeParameterList.setEndToken(LARGER_OP172); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeParameterList;
    }
    // $ANTLR end "typeParameters"



    // $ANTLR start "typeParameter"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1308:1: typeParameter returns [TypeParameterDeclaration typeParameter] : compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )? ;
    public TypeParameterDeclaration typeParameter() throws RecognitionException {
        TypeParameterDeclaration typeParameter = null;


        TypeVariance variance173 =null;

        Identifier typeNameDeclaration174 =null;

        TypeSpecifier typeDefault175 =null;

        List<CompilerAnnotation> compilerAnnotations176 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1309:5: ( compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1309:7: compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )?
            {
            if ( state.backtracking==0 ) { typeParameter = new TypeParameterDeclaration(null); }

            pushFollow(FOLLOW_compilerAnnotations_in_typeParameter8578);
            compilerAnnotations176=compilerAnnotations();

            state._fsp--;
            if (state.failed) return typeParameter;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1311:7: ( variance )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==IN_OP||LA117_0==OUT) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1312:9: variance
                    {
                    pushFollow(FOLLOW_variance_in_typeParameter8597);
                    variance173=variance();

                    state._fsp--;
                    if (state.failed) return typeParameter;

                    if ( state.backtracking==0 ) { typeParameter.setTypeVariance(variance173); }

                    }
                    break;

            }


            pushFollow(FOLLOW_typeNameDeclaration_in_typeParameter8626);
            typeNameDeclaration174=typeNameDeclaration();

            state._fsp--;
            if (state.failed) return typeParameter;

            if ( state.backtracking==0 ) { typeParameter.setIdentifier(typeNameDeclaration174); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1317:7: ( typeDefault )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==SPECIFY) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1318:9: typeDefault
                    {
                    pushFollow(FOLLOW_typeDefault_in_typeParameter8652);
                    typeDefault175=typeDefault();

                    state._fsp--;
                    if (state.failed) return typeParameter;

                    if ( state.backtracking==0 ) { typeParameter.setTypeSpecifier(typeDefault175); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { typeParameter.getCompilerAnnotations().addAll(compilerAnnotations176); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeParameter;
    }
    // $ANTLR end "typeParameter"



    // $ANTLR start "variance"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1324:1: variance returns [TypeVariance typeVariance] : ( IN_OP | OUT );
    public TypeVariance variance() throws RecognitionException {
        TypeVariance typeVariance = null;


        Token IN_OP177=null;
        Token OUT178=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1325:5: ( IN_OP | OUT )
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==IN_OP) ) {
                alt119=1;
            }
            else if ( (LA119_0==OUT) ) {
                alt119=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return typeVariance;}
                NoViableAltException nvae =
                    new NoViableAltException("", 119, 0, input);

                throw nvae;

            }
            switch (alt119) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1325:7: IN_OP
                    {
                    IN_OP177=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_variance8700); if (state.failed) return typeVariance;

                    if ( state.backtracking==0 ) { typeVariance = new TypeVariance(IN_OP177); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1327:7: OUT
                    {
                    OUT178=(Token)match(input,OUT,FOLLOW_OUT_in_variance8716); if (state.failed) return typeVariance;

                    if ( state.backtracking==0 ) { typeVariance = new TypeVariance(OUT178); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeVariance;
    }
    // $ANTLR end "variance"



    // $ANTLR start "typeConstraint"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1331:1: typeConstraint returns [TypeConstraint typeConstraint] : compilerAnnotations TYPE_CONSTRAINT ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )? ;
    public TypeConstraint typeConstraint() throws RecognitionException {
        TypeConstraint typeConstraint = null;


        Token TYPE_CONSTRAINT179=null;
        List<CompilerAnnotation> compilerAnnotations180 =null;

        Identifier typeNameDeclaration181 =null;

        TypeParameterList typeParameters182 =null;

        CaseTypes caseTypes183 =null;

        SatisfiedTypes satisfiedTypes184 =null;

        AbstractedType abstractedType185 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1332:5: ( compilerAnnotations TYPE_CONSTRAINT ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1332:7: compilerAnnotations TYPE_CONSTRAINT ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )?
            {
            pushFollow(FOLLOW_compilerAnnotations_in_typeConstraint8749);
            compilerAnnotations180=compilerAnnotations();

            state._fsp--;
            if (state.failed) return typeConstraint;

            TYPE_CONSTRAINT179=(Token)match(input,TYPE_CONSTRAINT,FOLLOW_TYPE_CONSTRAINT_in_typeConstraint8757); if (state.failed) return typeConstraint;

            if ( state.backtracking==0 ) { typeConstraint = new TypeConstraint(TYPE_CONSTRAINT179); 
                    typeConstraint.getCompilerAnnotations().addAll(compilerAnnotations180); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1336:7: ( typeNameDeclaration )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==LIDENTIFIER||LA120_0==UIDENTIFIER) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1337:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_typeConstraint8783);
                    typeNameDeclaration181=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setIdentifier(typeNameDeclaration181); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1340:7: ( typeParameters )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==SMALLER_OP) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1341:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_typeConstraint8821);
                    typeParameters182=typeParameters();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setTypeParameterList(typeParameters182); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1344:7: ( caseTypes )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==CASE_TYPES) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1345:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_typeConstraint8859);
                    caseTypes183=caseTypes();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setCaseTypes(caseTypes183); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1349:7: ( satisfiedTypes )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==SATISFIES) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1350:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_typeConstraint8903);
                    satisfiedTypes184=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setSatisfiedTypes(satisfiedTypes184); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1353:7: ( abstractedType )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==ABSTRACTED_TYPE) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1354:9: abstractedType
                    {
                    pushFollow(FOLLOW_abstractedType_in_typeConstraint8941);
                    abstractedType185=abstractedType();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setAbstractedType(abstractedType185); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeConstraint;
    }
    // $ANTLR end "typeConstraint"



    // $ANTLR start "anonymousTypeConstraint"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1359:1: anonymousTypeConstraint returns [TypeConstraint typeConstraint] : TYPE_CONSTRAINT typeNameDeclaration ( caseTypes )? ( satisfiedTypes )? ;
    public TypeConstraint anonymousTypeConstraint() throws RecognitionException {
        TypeConstraint typeConstraint = null;


        Token TYPE_CONSTRAINT186=null;
        Identifier typeNameDeclaration187 =null;

        CaseTypes caseTypes188 =null;

        SatisfiedTypes satisfiedTypes189 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1360:5: ( TYPE_CONSTRAINT typeNameDeclaration ( caseTypes )? ( satisfiedTypes )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1360:7: TYPE_CONSTRAINT typeNameDeclaration ( caseTypes )? ( satisfiedTypes )?
            {
            TYPE_CONSTRAINT186=(Token)match(input,TYPE_CONSTRAINT,FOLLOW_TYPE_CONSTRAINT_in_anonymousTypeConstraint8981); if (state.failed) return typeConstraint;

            if ( state.backtracking==0 ) { typeConstraint = new TypeConstraint(TYPE_CONSTRAINT186); }

            pushFollow(FOLLOW_typeNameDeclaration_in_anonymousTypeConstraint8997);
            typeNameDeclaration187=typeNameDeclaration();

            state._fsp--;
            if (state.failed) return typeConstraint;

            if ( state.backtracking==0 ) { typeConstraint.setIdentifier(typeNameDeclaration187); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1364:7: ( caseTypes )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==CASE_TYPES) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1365:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_anonymousTypeConstraint9024);
                    caseTypes188=caseTypes();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setCaseTypes(caseTypes188); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1368:7: ( satisfiedTypes )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==SATISFIES) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1369:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_anonymousTypeConstraint9061);
                    satisfiedTypes189=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setSatisfiedTypes(satisfiedTypes189); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeConstraint;
    }
    // $ANTLR end "anonymousTypeConstraint"



    // $ANTLR start "typeConstraints"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1374:1: typeConstraints returns [TypeConstraintList typeConstraintList] : ( typeConstraint )+ ;
    public TypeConstraintList typeConstraints() throws RecognitionException {
        TypeConstraintList typeConstraintList = null;


        TypeConstraint typeConstraint190 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1375:5: ( ( typeConstraint )+ )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1375:7: ( typeConstraint )+
            {
            if ( state.backtracking==0 ) { typeConstraintList =new TypeConstraintList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1376:7: ( typeConstraint )+
            int cnt127=0;
            loop127:
            do {
                int alt127=2;
                int LA127_0 = input.LA(1);

                if ( (LA127_0==COMPILER_ANNOTATION||LA127_0==TYPE_CONSTRAINT) ) {
                    alt127=1;
                }


                switch (alt127) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1377:9: typeConstraint
            	    {
            	    pushFollow(FOLLOW_typeConstraint_in_typeConstraints9119);
            	    typeConstraint190=typeConstraint();

            	    state._fsp--;
            	    if (state.failed) return typeConstraintList;

            	    if ( state.backtracking==0 ) { if (typeConstraint190!=null)
            	                typeConstraintList.addTypeConstraint(typeConstraint190); }

            	    }
            	    break;

            	default :
            	    if ( cnt127 >= 1 ) break loop127;
            	    if (state.backtracking>0) {state.failed=true; return typeConstraintList;}
                        EarlyExitException eee =
                            new EarlyExitException(127, input);
                        throw eee;
                }
                cnt127++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeConstraintList;
    }
    // $ANTLR end "typeConstraints"



    // $ANTLR start "anonymousTypeConstraints"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1383:1: anonymousTypeConstraints returns [TypeConstraintList typeConstraintList] : ( anonymousTypeConstraint )+ ;
    public TypeConstraintList anonymousTypeConstraints() throws RecognitionException {
        TypeConstraintList typeConstraintList = null;


        TypeConstraint anonymousTypeConstraint191 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1384:5: ( ( anonymousTypeConstraint )+ )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1384:7: ( anonymousTypeConstraint )+
            {
            if ( state.backtracking==0 ) { typeConstraintList =new TypeConstraintList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1385:7: ( anonymousTypeConstraint )+
            int cnt128=0;
            loop128:
            do {
                int alt128=2;
                int LA128_0 = input.LA(1);

                if ( (LA128_0==TYPE_CONSTRAINT) ) {
                    alt128=1;
                }


                switch (alt128) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1386:9: anonymousTypeConstraint
            	    {
            	    pushFollow(FOLLOW_anonymousTypeConstraint_in_anonymousTypeConstraints9177);
            	    anonymousTypeConstraint191=anonymousTypeConstraint();

            	    state._fsp--;
            	    if (state.failed) return typeConstraintList;

            	    if ( state.backtracking==0 ) { if (anonymousTypeConstraint191!=null)
            	                typeConstraintList.addTypeConstraint(anonymousTypeConstraint191); }

            	    }
            	    break;

            	default :
            	    if ( cnt128 >= 1 ) break loop128;
            	    if (state.backtracking>0) {state.failed=true; return typeConstraintList;}
                        EarlyExitException eee =
                            new EarlyExitException(128, input);
                        throw eee;
                }
                cnt128++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeConstraintList;
    }
    // $ANTLR end "anonymousTypeConstraints"



    // $ANTLR start "annotationListStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1392:1: annotationListStart : ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER | VOID_MODIFIER ) ;
    public void annotationListStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1393:5: ( ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER | VOID_MODIFIER ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1393:7: ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER | VOID_MODIFIER )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1393:7: ( stringLiteral | annotation )
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==STRING_LITERAL||LA129_0==VERBATIM_STRING) ) {
                alt129=1;
            }
            else if ( (LA129_0==LIDENTIFIER) ) {
                alt129=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 129, 0, input);

                throw nvae;

            }
            switch (alt129) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1393:8: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotationListStart9214);
                    stringLiteral();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1393:22: annotation
                    {
                    pushFollow(FOLLOW_annotation_in_annotationListStart9216);
                    annotation();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            if ( input.LA(1)==FUNCTION_MODIFIER||input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER||input.LA(1)==VALUE_MODIFIER||input.LA(1)==VOID_MODIFIER ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotationListStart"



    // $ANTLR start "destructureStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1397:1: destructureStart : VALUE_MODIFIER compilerAnnotations ( LBRACKET | UIDENTIFIER | VOID_MODIFIER | VALUE_MODIFIER | FUNCTION_MODIFIER | LIDENTIFIER ENTRY_OP ) ;
    public void destructureStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1398:5: ( VALUE_MODIFIER compilerAnnotations ( LBRACKET | UIDENTIFIER | VOID_MODIFIER | VALUE_MODIFIER | FUNCTION_MODIFIER | LIDENTIFIER ENTRY_OP ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1398:7: VALUE_MODIFIER compilerAnnotations ( LBRACKET | UIDENTIFIER | VOID_MODIFIER | VALUE_MODIFIER | FUNCTION_MODIFIER | LIDENTIFIER ENTRY_OP )
            {
            match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_destructureStart9253); if (state.failed) return ;

            pushFollow(FOLLOW_compilerAnnotations_in_destructureStart9255);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1399:7: ( LBRACKET | UIDENTIFIER | VOID_MODIFIER | VALUE_MODIFIER | FUNCTION_MODIFIER | LIDENTIFIER ENTRY_OP )
            int alt130=6;
            switch ( input.LA(1) ) {
            case LBRACKET:
                {
                alt130=1;
                }
                break;
            case UIDENTIFIER:
                {
                alt130=2;
                }
                break;
            case VOID_MODIFIER:
                {
                alt130=3;
                }
                break;
            case VALUE_MODIFIER:
                {
                alt130=4;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt130=5;
                }
                break;
            case LIDENTIFIER:
                {
                alt130=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;

            }

            switch (alt130) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1399:8: LBRACKET
                    {
                    match(input,LBRACKET,FOLLOW_LBRACKET_in_destructureStart9265); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1399:17: UIDENTIFIER
                    {
                    match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_destructureStart9267); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1399:29: VOID_MODIFIER
                    {
                    match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_destructureStart9269); if (state.failed) return ;

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1399:43: VALUE_MODIFIER
                    {
                    match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_destructureStart9271); if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1399:58: FUNCTION_MODIFIER
                    {
                    match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_destructureStart9273); if (state.failed) return ;

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1399:76: LIDENTIFIER ENTRY_OP
                    {
                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_destructureStart9275); if (state.failed) return ;

                    match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_destructureStart9277); if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "destructureStart"



    // $ANTLR start "declarationOrStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1402:1: declarationOrStatement returns [Statement statement] options {memoize=true; } : compilerAnnotations ( ( destructureStart )=> destructure | ( annotatedDeclarationStart )=>d1= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d2= declaration |s= statement ) ;
    public Statement declarationOrStatement() throws RecognitionException {
        Statement statement = null;

        int declarationOrStatement_StartIndex = input.index();

        Declaration d1 =null;

        Declaration d2 =null;

        Statement s =null;

        Destructure destructure192 =null;

        Assertion assertion193 =null;

        List<CompilerAnnotation> compilerAnnotations194 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return statement; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1404:5: ( compilerAnnotations ( ( destructureStart )=> destructure | ( annotatedDeclarationStart )=>d1= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d2= declaration |s= statement ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1404:7: compilerAnnotations ( ( destructureStart )=> destructure | ( annotatedDeclarationStart )=>d1= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d2= declaration |s= statement )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_declarationOrStatement9310);
            compilerAnnotations194=compilerAnnotations();

            state._fsp--;
            if (state.failed) return statement;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1405:7: ( ( destructureStart )=> destructure | ( annotatedDeclarationStart )=>d1= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d2= declaration |s= statement )
            int alt131=5;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==VALUE_MODIFIER) ) {
                int LA131_1 = input.LA(2);

                if ( (synpred11_Ceylon()) ) {
                    alt131=1;
                }
                else if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==STRING_LITERAL) ) {
                int LA131_2 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred13_Ceylon()) ) {
                    alt131=3;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else if ( (true) ) {
                    alt131=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==VERBATIM_STRING) ) {
                int LA131_3 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred13_Ceylon()) ) {
                    alt131=3;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else if ( (true) ) {
                    alt131=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==LIDENTIFIER) ) {
                int LA131_4 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred13_Ceylon()) ) {
                    alt131=3;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else if ( (true) ) {
                    alt131=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==CLASS_DEFINITION) ) {
                int LA131_5 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==INTERFACE_DEFINITION) ) {
                int LA131_6 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==DYNAMIC) ) {
                int LA131_7 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else if ( (true) ) {
                    alt131=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 7, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==ALIAS) ) {
                int LA131_8 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 8, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==OBJECT_DEFINITION) ) {
                int LA131_9 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else if ( (true) ) {
                    alt131=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 9, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==ASSIGN) ) {
                int LA131_10 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==VOID_MODIFIER) ) {
                int LA131_11 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 11, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==FUNCTION_MODIFIER) ) {
                int LA131_12 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 12, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==UIDENTIFIER) ) {
                int LA131_13 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else if ( (true) ) {
                    alt131=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 13, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==SMALLER_OP) ) {
                int LA131_14 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 14, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==PACKAGE) ) {
                int LA131_15 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else if ( (true) ) {
                    alt131=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 15, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==LBRACKET) ) {
                int LA131_16 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else if ( (true) ) {
                    alt131=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 16, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==LBRACE) ) {
                int LA131_17 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else if ( (true) ) {
                    alt131=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 17, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==NEW) ) {
                int LA131_18 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt131=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt131=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 131, 18, input);

                    throw nvae;

                }
            }
            else if ( (LA131_0==ASSERT) && (synpred13_Ceylon())) {
                alt131=3;
            }
            else if ( ((LA131_0 >= BACKTICK && LA131_0 <= BREAK)||LA131_0==CHAR_LITERAL||LA131_0==CONTINUE||(LA131_0 >= DECREMENT_OP && LA131_0 <= DIFFERENCE_OP)||(LA131_0 >= FLOAT_LITERAL && LA131_0 <= FOR_CLAUSE)||LA131_0==IF_CLAUSE||LA131_0==INCREMENT_OP||LA131_0==LPAREN||LA131_0==NATURAL_LITERAL||LA131_0==NOT_OP||LA131_0==OUTER||LA131_0==RETURN||LA131_0==STRING_START||(LA131_0 >= SUM_OP && LA131_0 <= SWITCH_CLAUSE)||(LA131_0 >= THIS && LA131_0 <= TRY_CLAUSE)||LA131_0==WHILE_CLAUSE) ) {
                alt131=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 131, 0, input);

                throw nvae;

            }
            switch (alt131) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1406:9: ( destructureStart )=> destructure
                    {
                    pushFollow(FOLLOW_destructure_in_declarationOrStatement9334);
                    destructure192=destructure();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =destructure192; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1408:9: ( annotatedDeclarationStart )=>d1= declaration
                    {
                    pushFollow(FOLLOW_declaration_in_declarationOrStatement9362);
                    d1=declaration();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =d1; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1410:9: ( annotatedAssertionStart )=> assertion
                    {
                    pushFollow(FOLLOW_assertion_in_declarationOrStatement9388);
                    assertion193=assertion();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = assertion193; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1412:9: ( annotationListStart )=>d2= declaration
                    {
                    pushFollow(FOLLOW_declaration_in_declarationOrStatement9416);
                    d2=declaration();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =d2; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1414:9: s= statement
                    {
                    pushFollow(FOLLOW_statement_in_declarationOrStatement9438);
                    s=statement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =s; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { if (statement!=null)
                        statement.getCompilerAnnotations().addAll(compilerAnnotations194); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 70, declarationOrStatement_StartIndex); }

        }
        return statement;
    }
    // $ANTLR end "declarationOrStatement"



    // $ANTLR start "declaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1421:1: declaration returns [Declaration declaration] : annotations ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | constructor ) ;
    public Declaration declaration() throws RecognitionException {
        Declaration declaration = null;


        AnnotationList annotations195 =null;

        AnyClass classDeclaration196 =null;

        AnyInterface interfaceDeclaration197 =null;

        TypeAliasDeclaration aliasDeclaration198 =null;

        ObjectDefinition objectDeclaration199 =null;

        AttributeSetterDefinition setterDeclaration200 =null;

        AnyMethod voidOrInferredMethodDeclaration201 =null;

        AnyAttribute inferredAttributeDeclaration202 =null;

        TypedDeclaration typedMethodOrAttributeDeclaration203 =null;

        Constructor constructor204 =null;


         MissingDeclaration md = new MissingDeclaration(null); 
                    declaration = md; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1424:5: ( annotations ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | constructor ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1424:7: annotations ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | constructor )
            {
            pushFollow(FOLLOW_annotations_in_declaration9494);
            annotations195=annotations();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { md.setAnnotationList(annotations195); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1426:5: ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | constructor )
            int alt132=9;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==CLASS_DEFINITION) ) {
                alt132=1;
            }
            else if ( (LA132_0==INTERFACE_DEFINITION) && (synpred15_Ceylon())) {
                alt132=2;
            }
            else if ( (LA132_0==DYNAMIC) ) {
                int LA132_3 = input.LA(2);

                if ( (synpred15_Ceylon()) ) {
                    alt132=2;
                }
                else if ( (true) ) {
                    alt132=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 132, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA132_0==ALIAS) ) {
                alt132=3;
            }
            else if ( (LA132_0==OBJECT_DEFINITION) ) {
                alt132=4;
            }
            else if ( (LA132_0==ASSIGN) ) {
                alt132=5;
            }
            else if ( (LA132_0==FUNCTION_MODIFIER||LA132_0==VOID_MODIFIER) ) {
                alt132=6;
            }
            else if ( (LA132_0==VALUE_MODIFIER) ) {
                alt132=7;
            }
            else if ( ((LA132_0 >= LBRACE && LA132_0 <= LBRACKET)||LA132_0==PACKAGE||LA132_0==SMALLER_OP||LA132_0==UIDENTIFIER) ) {
                alt132=8;
            }
            else if ( (LA132_0==NEW) ) {
                alt132=9;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 132, 0, input);

                throw nvae;

            }
            switch (alt132) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1427:7: classDeclaration
                    {
                    pushFollow(FOLLOW_classDeclaration_in_declaration9517);
                    classDeclaration196=classDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =classDeclaration196; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1429:7: ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration
                    {
                    pushFollow(FOLLOW_interfaceDeclaration_in_declaration9543);
                    interfaceDeclaration197=interfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =interfaceDeclaration197; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1431:7: aliasDeclaration
                    {
                    pushFollow(FOLLOW_aliasDeclaration_in_declaration9559);
                    aliasDeclaration198=aliasDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =aliasDeclaration198; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1433:7: objectDeclaration
                    {
                    pushFollow(FOLLOW_objectDeclaration_in_declaration9575);
                    objectDeclaration199=objectDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =objectDeclaration199; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1435:7: setterDeclaration
                    {
                    pushFollow(FOLLOW_setterDeclaration_in_declaration9591);
                    setterDeclaration200=setterDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =setterDeclaration200; }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1437:7: voidOrInferredMethodDeclaration
                    {
                    pushFollow(FOLLOW_voidOrInferredMethodDeclaration_in_declaration9607);
                    voidOrInferredMethodDeclaration201=voidOrInferredMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =voidOrInferredMethodDeclaration201; }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1439:7: inferredAttributeDeclaration
                    {
                    pushFollow(FOLLOW_inferredAttributeDeclaration_in_declaration9623);
                    inferredAttributeDeclaration202=inferredAttributeDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =inferredAttributeDeclaration202; }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1441:7: typedMethodOrAttributeDeclaration
                    {
                    pushFollow(FOLLOW_typedMethodOrAttributeDeclaration_in_declaration9639);
                    typedMethodOrAttributeDeclaration203=typedMethodOrAttributeDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =typedMethodOrAttributeDeclaration203; }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1443:7: constructor
                    {
                    pushFollow(FOLLOW_constructor_in_declaration9655);
                    constructor204=constructor();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =constructor204; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { if (declaration!=null)
                      declaration.setAnnotationList(annotations195); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "declaration"



    // $ANTLR start "annotatedDeclarationStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1454:1: annotatedDeclarationStart : ( stringLiteral )? ( annotation )* ( ( unambiguousType )=> unambiguousType | declarationStart ) ;
    public void annotatedDeclarationStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1455:5: ( ( stringLiteral )? ( annotation )* ( ( unambiguousType )=> unambiguousType | declarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1455:7: ( stringLiteral )? ( annotation )* ( ( unambiguousType )=> unambiguousType | declarationStart )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1455:7: ( stringLiteral )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==STRING_LITERAL||LA133_0==VERBATIM_STRING) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1455:7: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotatedDeclarationStart9698);
                    stringLiteral();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1455:22: ( annotation )*
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==LIDENTIFIER) ) {
                    alt134=1;
                }


                switch (alt134) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1455:22: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotatedDeclarationStart9701);
            	    annotation();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1456:7: ( ( unambiguousType )=> unambiguousType | declarationStart )
            int alt135=2;
            switch ( input.LA(1) ) {
            case UIDENTIFIER:
                {
                int LA135_1 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt135=1;
                }
                else if ( (true) ) {
                    alt135=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 135, 1, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA135_2 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt135=1;
                }
                else if ( (true) ) {
                    alt135=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 135, 2, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA135_3 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt135=1;
                }
                else if ( (true) ) {
                    alt135=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 135, 3, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA135_4 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt135=1;
                }
                else if ( (true) ) {
                    alt135=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 135, 4, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA135_5 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt135=1;
                }
                else if ( (true) ) {
                    alt135=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 135, 5, input);

                    throw nvae;

                }
                }
                break;
            case ALIAS:
            case ASSIGN:
            case CLASS_DEFINITION:
            case DYNAMIC:
            case FUNCTION_MODIFIER:
            case INTERFACE_DEFINITION:
            case NEW:
            case OBJECT_DEFINITION:
            case VALUE_MODIFIER:
            case VOID_MODIFIER:
                {
                alt135=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 135, 0, input);

                throw nvae;

            }

            switch (alt135) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1456:8: ( unambiguousType )=> unambiguousType
                    {
                    pushFollow(FOLLOW_unambiguousType_in_annotatedDeclarationStart9718);
                    unambiguousType();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1456:47: declarationStart
                    {
                    pushFollow(FOLLOW_declarationStart_in_annotatedDeclarationStart9722);
                    declarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedDeclarationStart"



    // $ANTLR start "annotatedAssertionStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1459:1: annotatedAssertionStart : ( stringLiteral )? ( annotation )* ASSERT ;
    public void annotatedAssertionStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1460:5: ( ( stringLiteral )? ( annotation )* ASSERT )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1460:7: ( stringLiteral )? ( annotation )* ASSERT
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1460:7: ( stringLiteral )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==STRING_LITERAL||LA136_0==VERBATIM_STRING) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1460:7: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotatedAssertionStart9740);
                    stringLiteral();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1460:22: ( annotation )*
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==LIDENTIFIER) ) {
                    alt137=1;
                }


                switch (alt137) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1460:22: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotatedAssertionStart9743);
            	    annotation();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);


            match(input,ASSERT,FOLLOW_ASSERT_in_annotatedAssertionStart9746); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedAssertionStart"



    // $ANTLR start "declarationStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1466:1: declarationStart : ( VALUE_MODIFIER | FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | ASSIGN | INTERFACE_DEFINITION | CLASS_DEFINITION | OBJECT_DEFINITION ( LIDENTIFIER | UIDENTIFIER ) | NEW | ALIAS | variadicType LIDENTIFIER | DYNAMIC ( LIDENTIFIER | UIDENTIFIER ) );
    public void declarationStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1467:5: ( VALUE_MODIFIER | FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | ASSIGN | INTERFACE_DEFINITION | CLASS_DEFINITION | OBJECT_DEFINITION ( LIDENTIFIER | UIDENTIFIER ) | NEW | ALIAS | variadicType LIDENTIFIER | DYNAMIC ( LIDENTIFIER | UIDENTIFIER ) )
            int alt138=11;
            switch ( input.LA(1) ) {
            case VALUE_MODIFIER:
                {
                alt138=1;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt138=2;
                }
                break;
            case VOID_MODIFIER:
                {
                alt138=3;
                }
                break;
            case ASSIGN:
                {
                alt138=4;
                }
                break;
            case INTERFACE_DEFINITION:
                {
                alt138=5;
                }
                break;
            case CLASS_DEFINITION:
                {
                alt138=6;
                }
                break;
            case OBJECT_DEFINITION:
                {
                alt138=7;
                }
                break;
            case NEW:
                {
                alt138=8;
                }
                break;
            case ALIAS:
                {
                alt138=9;
                }
                break;
            case LBRACE:
            case LBRACKET:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt138=10;
                }
                break;
            case DYNAMIC:
                {
                alt138=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 138, 0, input);

                throw nvae;

            }

            switch (alt138) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1467:7: VALUE_MODIFIER
                    {
                    match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_declarationStart9766); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1468:7: FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_declarationStart9774); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1469:7: VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_declarationStart9789); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1470:7: ASSIGN
                    {
                    match(input,ASSIGN,FOLLOW_ASSIGN_in_declarationStart9804); if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1471:7: INTERFACE_DEFINITION
                    {
                    match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_declarationStart9812); if (state.failed) return ;

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1472:7: CLASS_DEFINITION
                    {
                    match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_declarationStart9820); if (state.failed) return ;

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1473:7: OBJECT_DEFINITION ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_declarationStart9828); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1474:7: NEW
                    {
                    match(input,NEW,FOLLOW_NEW_in_declarationStart9843); if (state.failed) return ;

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1475:7: ALIAS
                    {
                    match(input,ALIAS,FOLLOW_ALIAS_in_declarationStart9851); if (state.failed) return ;

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1476:7: variadicType LIDENTIFIER
                    {
                    pushFollow(FOLLOW_variadicType_in_declarationStart9860);
                    variadicType();

                    state._fsp--;
                    if (state.failed) return ;

                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_declarationStart9862); if (state.failed) return ;

                    }
                    break;
                case 11 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1477:7: DYNAMIC ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,DYNAMIC,FOLLOW_DYNAMIC_in_declarationStart9870); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "declarationStart"



    // $ANTLR start "unambiguousType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1483:1: unambiguousType : ( qualifiedType ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )? ( OPTIONAL | LBRACKET RBRACKET ) | LBRACE qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( PRODUCT_OP | SUM_OP ) RBRACE | LBRACKET qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )* ( PRODUCT_OP | SUM_OP ) RBRACKET );
    public void unambiguousType() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1484:5: ( qualifiedType ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )? ( OPTIONAL | LBRACKET RBRACKET ) | LBRACE qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( PRODUCT_OP | SUM_OP ) RBRACE | LBRACKET qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )* ( PRODUCT_OP | SUM_OP ) RBRACKET )
            int alt152=3;
            switch ( input.LA(1) ) {
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt152=1;
                }
                break;
            case LBRACE:
                {
                alt152=2;
                }
                break;
            case LBRACKET:
                {
                alt152=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;

            }

            switch (alt152) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1484:7: qualifiedType ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )? ( OPTIONAL | LBRACKET RBRACKET )
                    {
                    pushFollow(FOLLOW_qualifiedType_in_unambiguousType9900);
                    qualifiedType();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1485:7: ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )?
                    int alt140=2;
                    switch ( input.LA(1) ) {
                        case OPTIONAL:
                            {
                            int LA140_1 = input.LA(2);

                            if ( (LA140_1==ENTRY_OP) ) {
                                alt140=1;
                            }
                            }
                            break;
                        case LBRACKET:
                            {
                            int LA140_2 = input.LA(2);

                            if ( (LA140_2==RBRACKET) ) {
                                int LA140_5 = input.LA(3);

                                if ( (LA140_5==ENTRY_OP) ) {
                                    alt140=1;
                                }
                            }
                            }
                            break;
                        case ENTRY_OP:
                            {
                            alt140=1;
                            }
                            break;
                    }

                    switch (alt140) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1486:9: ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1486:9: ( OPTIONAL | LBRACKET RBRACKET )?
                            int alt139=3;
                            int LA139_0 = input.LA(1);

                            if ( (LA139_0==OPTIONAL) ) {
                                alt139=1;
                            }
                            else if ( (LA139_0==LBRACKET) ) {
                                alt139=2;
                            }
                            switch (alt139) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1486:10: OPTIONAL
                                    {
                                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType9920); if (state.failed) return ;

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1486:21: LBRACKET RBRACKET
                                    {
                                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType9924); if (state.failed) return ;

                                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType9926); if (state.failed) return ;

                                    }
                                    break;

                            }


                            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType9939); if (state.failed) return ;

                            pushFollow(FOLLOW_qualifiedType_in_unambiguousType9941);
                            qualifiedType();

                            state._fsp--;
                            if (state.failed) return ;

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1489:7: ( OPTIONAL | LBRACKET RBRACKET )
                    int alt141=2;
                    int LA141_0 = input.LA(1);

                    if ( (LA141_0==OPTIONAL) ) {
                        alt141=1;
                    }
                    else if ( (LA141_0==LBRACKET) ) {
                        alt141=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 141, 0, input);

                        throw nvae;

                    }
                    switch (alt141) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1489:8: OPTIONAL
                            {
                            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType9959); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1489:19: LBRACKET RBRACKET
                            {
                            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType9963); if (state.failed) return ;

                            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType9965); if (state.failed) return ;

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1490:7: LBRACE qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( PRODUCT_OP | SUM_OP ) RBRACE
                    {
                    match(input,LBRACE,FOLLOW_LBRACE_in_unambiguousType9974); if (state.failed) return ;

                    pushFollow(FOLLOW_qualifiedType_in_unambiguousType9983);
                    qualifiedType();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1491:21: ( OPTIONAL | LBRACKET RBRACKET )?
                    int alt142=3;
                    int LA142_0 = input.LA(1);

                    if ( (LA142_0==OPTIONAL) ) {
                        alt142=1;
                    }
                    else if ( (LA142_0==LBRACKET) ) {
                        alt142=2;
                    }
                    switch (alt142) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1491:22: OPTIONAL
                            {
                            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType9986); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1491:33: LBRACKET RBRACKET
                            {
                            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType9990); if (state.failed) return ;

                            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType9992); if (state.failed) return ;

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1492:7: ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    int alt144=2;
                    int LA144_0 = input.LA(1);

                    if ( (LA144_0==ENTRY_OP) ) {
                        alt144=1;
                    }
                    switch (alt144) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1493:9: ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )?
                            {
                            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType10012); if (state.failed) return ;

                            pushFollow(FOLLOW_qualifiedType_in_unambiguousType10014);
                            qualifiedType();

                            state._fsp--;
                            if (state.failed) return ;

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1494:9: ( OPTIONAL | LBRACKET RBRACKET )?
                            int alt143=3;
                            int LA143_0 = input.LA(1);

                            if ( (LA143_0==OPTIONAL) ) {
                                alt143=1;
                            }
                            else if ( (LA143_0==LBRACKET) ) {
                                alt143=2;
                            }
                            switch (alt143) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1494:10: OPTIONAL
                                    {
                                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10026); if (state.failed) return ;

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1494:21: LBRACKET RBRACKET
                                    {
                                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10030); if (state.failed) return ;

                                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10032); if (state.failed) return ;

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    if ( input.LA(1)==PRODUCT_OP||input.LA(1)==SUM_OP ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    match(input,RBRACE,FOLLOW_RBRACE_in_unambiguousType10065); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1498:7: LBRACKET qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )* ( PRODUCT_OP | SUM_OP ) RBRACKET
                    {
                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10073); if (state.failed) return ;

                    pushFollow(FOLLOW_qualifiedType_in_unambiguousType10082);
                    qualifiedType();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1499:21: ( OPTIONAL | LBRACKET RBRACKET )?
                    int alt145=3;
                    int LA145_0 = input.LA(1);

                    if ( (LA145_0==OPTIONAL) ) {
                        alt145=1;
                    }
                    else if ( (LA145_0==LBRACKET) ) {
                        alt145=2;
                    }
                    switch (alt145) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1499:22: OPTIONAL
                            {
                            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10085); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1499:33: LBRACKET RBRACKET
                            {
                            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10089); if (state.failed) return ;

                            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10091); if (state.failed) return ;

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1500:7: ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    int alt147=2;
                    int LA147_0 = input.LA(1);

                    if ( (LA147_0==ENTRY_OP) ) {
                        alt147=1;
                    }
                    switch (alt147) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1501:9: ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )?
                            {
                            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType10112); if (state.failed) return ;

                            pushFollow(FOLLOW_qualifiedType_in_unambiguousType10114);
                            qualifiedType();

                            state._fsp--;
                            if (state.failed) return ;

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1502:9: ( OPTIONAL | LBRACKET RBRACKET )?
                            int alt146=3;
                            int LA146_0 = input.LA(1);

                            if ( (LA146_0==OPTIONAL) ) {
                                alt146=1;
                            }
                            else if ( (LA146_0==LBRACKET) ) {
                                alt146=2;
                            }
                            switch (alt146) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1502:10: OPTIONAL
                                    {
                                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10125); if (state.failed) return ;

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1502:21: LBRACKET RBRACKET
                                    {
                                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10129); if (state.failed) return ;

                                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10131); if (state.failed) return ;

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1504:7: ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )*
                    loop151:
                    do {
                        int alt151=2;
                        int LA151_0 = input.LA(1);

                        if ( (LA151_0==COMMA) ) {
                            alt151=1;
                        }


                        switch (alt151) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1505:9: COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_unambiguousType10161); if (state.failed) return ;

                    	    pushFollow(FOLLOW_qualifiedType_in_unambiguousType10172);
                    	    qualifiedType();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1506:23: ( OPTIONAL | LBRACKET RBRACKET )?
                    	    int alt148=3;
                    	    int LA148_0 = input.LA(1);

                    	    if ( (LA148_0==OPTIONAL) ) {
                    	        alt148=1;
                    	    }
                    	    else if ( (LA148_0==LBRACKET) ) {
                    	        alt148=2;
                    	    }
                    	    switch (alt148) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1506:24: OPTIONAL
                    	            {
                    	            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10175); if (state.failed) return ;

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1506:35: LBRACKET RBRACKET
                    	            {
                    	            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10179); if (state.failed) return ;

                    	            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10181); if (state.failed) return ;

                    	            }
                    	            break;

                    	    }


                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1507:9: ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    	    int alt150=2;
                    	    int LA150_0 = input.LA(1);

                    	    if ( (LA150_0==ENTRY_OP) ) {
                    	        alt150=1;
                    	    }
                    	    switch (alt150) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1508:11: ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )?
                    	            {
                    	            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType10206); if (state.failed) return ;

                    	            pushFollow(FOLLOW_qualifiedType_in_unambiguousType10208);
                    	            qualifiedType();

                    	            state._fsp--;
                    	            if (state.failed) return ;

                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1509:11: ( OPTIONAL | LBRACKET RBRACKET )?
                    	            int alt149=3;
                    	            int LA149_0 = input.LA(1);

                    	            if ( (LA149_0==OPTIONAL) ) {
                    	                alt149=1;
                    	            }
                    	            else if ( (LA149_0==LBRACKET) ) {
                    	                alt149=2;
                    	            }
                    	            switch (alt149) {
                    	                case 1 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1509:12: OPTIONAL
                    	                    {
                    	                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10222); if (state.failed) return ;

                    	                    }
                    	                    break;
                    	                case 2 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1509:23: LBRACKET RBRACKET
                    	                    {
                    	                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10226); if (state.failed) return ;

                    	                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10228); if (state.failed) return ;

                    	                    }
                    	                    break;

                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop151;
                        }
                    } while (true);


                    if ( input.LA(1)==PRODUCT_OP||input.LA(1)==SUM_OP ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10272); if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "unambiguousType"



    // $ANTLR start "statement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1516:1: statement returns [Statement statement] : ( directiveStatement | controlStatement | expressionOrSpecificationStatement );
    public Statement statement() throws RecognitionException {
        Statement statement = null;


        Directive directiveStatement205 =null;

        ControlStatement controlStatement206 =null;

        Statement expressionOrSpecificationStatement207 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1517:5: ( directiveStatement | controlStatement | expressionOrSpecificationStatement )
            int alt153=3;
            switch ( input.LA(1) ) {
            case BREAK:
            case CONTINUE:
            case RETURN:
            case THROW:
                {
                alt153=1;
                }
                break;
            case FOR_CLAUSE:
            case IF_CLAUSE:
            case SWITCH_CLAUSE:
            case TRY_CLAUSE:
            case WHILE_CLAUSE:
                {
                alt153=2;
                }
                break;
            case DYNAMIC:
                {
                int LA153_3 = input.LA(2);

                if ( (LA153_3==LBRACKET) ) {
                    alt153=3;
                }
                else if ( (LA153_3==LBRACE) ) {
                    alt153=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 153, 3, input);

                    throw nvae;

                }
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case FLOAT_LITERAL:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case NOT_OP:
            case OBJECT_DEFINITION:
            case OUTER:
            case PACKAGE:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
                {
                alt153=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;

            }

            switch (alt153) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1517:7: directiveStatement
                    {
                    pushFollow(FOLLOW_directiveStatement_in_statement10293);
                    directiveStatement205=directiveStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = directiveStatement205; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1519:7: controlStatement
                    {
                    pushFollow(FOLLOW_controlStatement_in_statement10309);
                    controlStatement206=controlStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = controlStatement206; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1521:7: expressionOrSpecificationStatement
                    {
                    pushFollow(FOLLOW_expressionOrSpecificationStatement_in_statement10325);
                    expressionOrSpecificationStatement207=expressionOrSpecificationStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = expressionOrSpecificationStatement207; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "statement"



    // $ANTLR start "expressionOrSpecificationStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1525:1: expressionOrSpecificationStatement returns [Statement statement] : expression ( lazySpecifier )? ( SEMICOLON | COMMA ) ;
    public Statement expressionOrSpecificationStatement() throws RecognitionException {
        Statement statement = null;


        Token SEMICOLON210=null;
        Token COMMA211=null;
        Expression expression208 =null;

        SpecifierExpression lazySpecifier209 =null;


         SpecifierStatement ss=new SpecifierStatement(null); 
                    ExpressionStatement es=new ExpressionStatement(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1528:5: ( expression ( lazySpecifier )? ( SEMICOLON | COMMA ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1528:7: expression ( lazySpecifier )? ( SEMICOLON | COMMA )
            {
            pushFollow(FOLLOW_expression_in_expressionOrSpecificationStatement10363);
            expression208=expression();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement = es;
                    if (expression208!=null)
                        es.setExpression(expression208);
                    if (expression208.getTerm() instanceof AssignOp) {
                        AssignOp a = (AssignOp) expression208.getTerm();
                        Term lt = a.getLeftTerm();
                        if (lt instanceof BaseMemberExpression ||
                            lt instanceof ParameterizedExpression ||
                            lt instanceof QualifiedMemberExpression &&
                                ((QualifiedMemberExpression) lt).getPrimary() instanceof This &&
                                ((QualifiedMemberExpression) lt).getMemberOperator() instanceof MemberOp) {
                            Expression e = new Expression(null);
                            e.setTerm(a.getRightTerm());
                            SpecifierExpression se = new SpecifierExpression(null);
                            se.setExpression(e);
                            ss.setSpecifierExpression(se);
                            ss.setBaseMemberExpression(a.getLeftTerm());
                            statement = ss;
                        }
                    }
                  }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1550:7: ( lazySpecifier )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==COMPUTE) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1556:9: lazySpecifier
                    {
                    pushFollow(FOLLOW_lazySpecifier_in_expressionOrSpecificationStatement10399);
                    lazySpecifier209=lazySpecifier();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { ss.setSpecifierExpression(lazySpecifier209);
                              ss.setBaseMemberExpression(expression208.getTerm()); 
                              statement = ss; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1562:7: ( SEMICOLON | COMMA )
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==SEMICOLON) ) {
                alt155=1;
            }
            else if ( (LA155_0==COMMA) ) {
                alt155=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 155, 0, input);

                throw nvae;

            }
            switch (alt155) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1563:9: SEMICOLON
                    {
                    SEMICOLON210=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_expressionOrSpecificationStatement10444); if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setEndToken(SEMICOLON210); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1565:9: COMMA
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(SEMICOLON, input)); }

                    COMMA211=(Token)match(input,COMMA,FOLLOW_COMMA_in_expressionOrSpecificationStatement10474); if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setEndToken(COMMA211); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "expressionOrSpecificationStatement"



    // $ANTLR start "directiveStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1573:1: directiveStatement returns [Directive directive] : d= directive SEMICOLON ;
    public Directive directiveStatement() throws RecognitionException {
        Directive directive = null;


        Token SEMICOLON212=null;
        Directive d =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1574:5: (d= directive SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1574:7: d= directive SEMICOLON
            {
            pushFollow(FOLLOW_directive_in_directiveStatement10523);
            d=directive();

            state._fsp--;
            if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive =d;
                    expecting=SEMICOLON; }

            SEMICOLON212=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_directiveStatement10540); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive.setEndToken(SEMICOLON212);
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "directiveStatement"



    // $ANTLR start "directive"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1582:1: directive returns [Directive directive] : ( returnDirective | throwDirective | breakDirective | continueDirective );
    public Directive directive() throws RecognitionException {
        Directive directive = null;


        Return returnDirective213 =null;

        Throw throwDirective214 =null;

        Break breakDirective215 =null;

        Continue continueDirective216 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1583:5: ( returnDirective | throwDirective | breakDirective | continueDirective )
            int alt156=4;
            switch ( input.LA(1) ) {
            case RETURN:
                {
                alt156=1;
                }
                break;
            case THROW:
                {
                alt156=2;
                }
                break;
            case BREAK:
                {
                alt156=3;
                }
                break;
            case CONTINUE:
                {
                alt156=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return directive;}
                NoViableAltException nvae =
                    new NoViableAltException("", 156, 0, input);

                throw nvae;

            }

            switch (alt156) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1583:7: returnDirective
                    {
                    pushFollow(FOLLOW_returnDirective_in_directive10569);
                    returnDirective213=returnDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = returnDirective213; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1585:7: throwDirective
                    {
                    pushFollow(FOLLOW_throwDirective_in_directive10585);
                    throwDirective214=throwDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = throwDirective214; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1587:7: breakDirective
                    {
                    pushFollow(FOLLOW_breakDirective_in_directive10601);
                    breakDirective215=breakDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = breakDirective215; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1589:7: continueDirective
                    {
                    pushFollow(FOLLOW_continueDirective_in_directive10617);
                    continueDirective216=continueDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = continueDirective216; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "directive"



    // $ANTLR start "returnDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1593:1: returnDirective returns [Return directive] : RETURN ( functionOrExpression )? ;
    public Return returnDirective() throws RecognitionException {
        Return directive = null;


        Token RETURN217=null;
        Expression functionOrExpression218 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1594:5: ( RETURN ( functionOrExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1594:7: RETURN ( functionOrExpression )?
            {
            RETURN217=(Token)match(input,RETURN,FOLLOW_RETURN_in_returnDirective10646); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Return(RETURN217); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1596:7: ( functionOrExpression )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==BACKTICK||LA157_0==CHAR_LITERAL||(LA157_0 >= DECREMENT_OP && LA157_0 <= DIFFERENCE_OP)||LA157_0==DYNAMIC||LA157_0==FLOAT_LITERAL||LA157_0==FUNCTION_MODIFIER||LA157_0==IF_CLAUSE||LA157_0==INCREMENT_OP||(LA157_0 >= LBRACE && LA157_0 <= LIDENTIFIER)||LA157_0==LPAREN||LA157_0==NATURAL_LITERAL||(LA157_0 >= NOT_OP && LA157_0 <= OBJECT_DEFINITION)||(LA157_0 >= OUTER && LA157_0 <= PACKAGE)||LA157_0==SMALLER_OP||LA157_0==STRING_LITERAL||LA157_0==STRING_START||(LA157_0 >= SUM_OP && LA157_0 <= SWITCH_CLAUSE)||LA157_0==THIS||LA157_0==UIDENTIFIER||(LA157_0 >= VERBATIM_STRING && LA157_0 <= VOID_MODIFIER)) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1597:9: functionOrExpression
                    {
                    pushFollow(FOLLOW_functionOrExpression_in_returnDirective10673);
                    functionOrExpression218=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive.setExpression(functionOrExpression218); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "returnDirective"



    // $ANTLR start "throwDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1602:1: throwDirective returns [Throw directive] : THROW ( expression )? ;
    public Throw throwDirective() throws RecognitionException {
        Throw directive = null;


        Token THROW219=null;
        Expression expression220 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1603:5: ( THROW ( expression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1603:7: THROW ( expression )?
            {
            THROW219=(Token)match(input,THROW,FOLLOW_THROW_in_throwDirective10713); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Throw(THROW219); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1605:7: ( expression )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==BACKTICK||LA158_0==CHAR_LITERAL||(LA158_0 >= DECREMENT_OP && LA158_0 <= DIFFERENCE_OP)||LA158_0==DYNAMIC||LA158_0==FLOAT_LITERAL||LA158_0==INCREMENT_OP||(LA158_0 >= LBRACE && LA158_0 <= LBRACKET)||LA158_0==LIDENTIFIER||LA158_0==LPAREN||LA158_0==NATURAL_LITERAL||(LA158_0 >= NOT_OP && LA158_0 <= OBJECT_DEFINITION)||(LA158_0 >= OUTER && LA158_0 <= PACKAGE)||LA158_0==STRING_LITERAL||LA158_0==STRING_START||(LA158_0 >= SUM_OP && LA158_0 <= SUPER)||LA158_0==THIS||LA158_0==UIDENTIFIER||LA158_0==VERBATIM_STRING) ) {
                alt158=1;
            }
            switch (alt158) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1606:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_throwDirective10740);
                    expression220=expression();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive.setExpression(expression220); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "throwDirective"



    // $ANTLR start "breakDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1611:1: breakDirective returns [Break directive] : BREAK ;
    public Break breakDirective() throws RecognitionException {
        Break directive = null;


        Token BREAK221=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1612:5: ( BREAK )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1612:7: BREAK
            {
            BREAK221=(Token)match(input,BREAK,FOLLOW_BREAK_in_breakDirective10780); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Break(BREAK221); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "breakDirective"



    // $ANTLR start "continueDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1616:1: continueDirective returns [Continue directive] : CONTINUE ;
    public Continue continueDirective() throws RecognitionException {
        Continue directive = null;


        Token CONTINUE222=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1617:5: ( CONTINUE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1617:7: CONTINUE
            {
            CONTINUE222=(Token)match(input,CONTINUE,FOLLOW_CONTINUE_in_continueDirective10809); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Continue(CONTINUE222); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "continueDirective"



    // $ANTLR start "typeSpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1621:1: typeSpecifier returns [TypeSpecifier typeSpecifier] : ( COMPUTE | SPECIFY ) ( type )? ;
    public TypeSpecifier typeSpecifier() throws RecognitionException {
        TypeSpecifier typeSpecifier = null;


        Token COMPUTE223=null;
        Token SPECIFY224=null;
        StaticType type225 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1622:5: ( ( COMPUTE | SPECIFY ) ( type )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1622:7: ( COMPUTE | SPECIFY ) ( type )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1622:7: ( COMPUTE | SPECIFY )
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==COMPUTE) ) {
                alt159=1;
            }
            else if ( (LA159_0==SPECIFY) ) {
                alt159=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return typeSpecifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 159, 0, input);

                throw nvae;

            }
            switch (alt159) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1623:9: COMPUTE
                    {
                    COMPUTE223=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_typeSpecifier10848); if (state.failed) return typeSpecifier;

                    if ( state.backtracking==0 ) { typeSpecifier = new TypeSpecifier(COMPUTE223); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1626:9: SPECIFY
                    {
                    SPECIFY224=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_typeSpecifier10877); if (state.failed) return typeSpecifier;

                    if ( state.backtracking==0 ) { typeSpecifier = new TypeSpecifier(SPECIFY224); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1629:7: ( type )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( ((LA160_0 >= LBRACE && LA160_0 <= LBRACKET)||LA160_0==PACKAGE||LA160_0==SMALLER_OP||LA160_0==UIDENTIFIER) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1630:9: type
                    {
                    pushFollow(FOLLOW_type_in_typeSpecifier10914);
                    type225=type();

                    state._fsp--;
                    if (state.failed) return typeSpecifier;

                    if ( state.backtracking==0 ) { typeSpecifier.setType(type225); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeSpecifier;
    }
    // $ANTLR end "typeSpecifier"



    // $ANTLR start "typeDefault"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1635:1: typeDefault returns [TypeSpecifier typeSpecifier] : SPECIFY type ;
    public TypeSpecifier typeDefault() throws RecognitionException {
        TypeSpecifier typeSpecifier = null;


        Token SPECIFY226=null;
        StaticType type227 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1636:5: ( SPECIFY type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1636:7: SPECIFY type
            {
            SPECIFY226=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_typeDefault10954); if (state.failed) return typeSpecifier;

            if ( state.backtracking==0 ) { typeSpecifier = new DefaultTypeArgument(SPECIFY226); }

            pushFollow(FOLLOW_type_in_typeDefault10971);
            type227=type();

            state._fsp--;
            if (state.failed) return typeSpecifier;

            if ( state.backtracking==0 ) { typeSpecifier.setType(type227); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeSpecifier;
    }
    // $ANTLR end "typeDefault"



    // $ANTLR start "specifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1642:1: specifier returns [SpecifierExpression specifierExpression] : SPECIFY functionOrExpression ;
    public SpecifierExpression specifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token SPECIFY228=null;
        Expression functionOrExpression229 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1643:5: ( SPECIFY functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1643:7: SPECIFY functionOrExpression
            {
            SPECIFY228=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_specifier11000); if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression = new SpecifierExpression(SPECIFY228); }

            pushFollow(FOLLOW_functionOrExpression_in_specifier11016);
            functionOrExpression229=functionOrExpression();

            state._fsp--;
            if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression229); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "specifier"



    // $ANTLR start "lazySpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1649:1: lazySpecifier returns [SpecifierExpression specifierExpression] : COMPUTE functionOrExpression ;
    public SpecifierExpression lazySpecifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token COMPUTE230=null;
        Expression functionOrExpression231 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1650:5: ( COMPUTE functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1650:7: COMPUTE functionOrExpression
            {
            COMPUTE230=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_lazySpecifier11045); if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(COMPUTE230); }

            pushFollow(FOLLOW_functionOrExpression_in_lazySpecifier11061);
            functionOrExpression231=functionOrExpression();

            state._fsp--;
            if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression231); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "lazySpecifier"



    // $ANTLR start "functionSpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1656:1: functionSpecifier returns [SpecifierExpression specifierExpression] : ( COMPUTE | SPECIFY ) functionOrExpression ;
    public SpecifierExpression functionSpecifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token COMPUTE232=null;
        Token SPECIFY233=null;
        Expression functionOrExpression234 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1657:5: ( ( COMPUTE | SPECIFY ) functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1657:7: ( COMPUTE | SPECIFY ) functionOrExpression
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1657:7: ( COMPUTE | SPECIFY )
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==COMPUTE) ) {
                alt161=1;
            }
            else if ( (LA161_0==SPECIFY) ) {
                alt161=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return specifierExpression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 161, 0, input);

                throw nvae;

            }
            switch (alt161) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1658:9: COMPUTE
                    {
                    COMPUTE232=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_functionSpecifier11100); if (state.failed) return specifierExpression;

                    if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(COMPUTE232); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1661:9: SPECIFY
                    {
                    SPECIFY233=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_functionSpecifier11128); if (state.failed) return specifierExpression;

                    if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(SPECIFY233); }

                    }
                    break;

            }


            pushFollow(FOLLOW_functionOrExpression_in_functionSpecifier11154);
            functionOrExpression234=functionOrExpression();

            state._fsp--;
            if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression234); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "functionSpecifier"



    // $ANTLR start "expression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1668:1: expression returns [Expression expression] : assignmentExpression ;
    public Expression expression() throws RecognitionException {
        Expression expression = null;


        Term assignmentExpression235 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1669:5: ( assignmentExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1669:7: assignmentExpression
            {
            if ( state.backtracking==0 ) { expression = new Expression(null); }

            pushFollow(FOLLOW_assignmentExpression_in_expression11191);
            assignmentExpression235=assignmentExpression();

            state._fsp--;
            if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression.setTerm(assignmentExpression235); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "expression"



    // $ANTLR start "base"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1674:1: base returns [Primary primary] : ( nonstringLiteral | stringExpression | metaLiteral | enumeration | tuple | dynamicObject | objectExpression | parExpression | baseReferenceOrParameterized );
    public Primary base() throws RecognitionException {
        Primary primary = null;


        Literal nonstringLiteral236 =null;

        Atom stringExpression237 =null;

        MetaLiteral metaLiteral238 =null;

        SequenceEnumeration enumeration239 =null;

        Tuple tuple240 =null;

        Dynamic dynamicObject241 =null;

        ObjectExpression objectExpression242 =null;

        Expression parExpression243 =null;

        Primary baseReferenceOrParameterized244 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1675:5: ( nonstringLiteral | stringExpression | metaLiteral | enumeration | tuple | dynamicObject | objectExpression | parExpression | baseReferenceOrParameterized )
            int alt162=9;
            switch ( input.LA(1) ) {
            case CHAR_LITERAL:
            case FLOAT_LITERAL:
            case NATURAL_LITERAL:
                {
                alt162=1;
                }
                break;
            case STRING_LITERAL:
            case STRING_START:
            case VERBATIM_STRING:
                {
                alt162=2;
                }
                break;
            case BACKTICK:
                {
                alt162=3;
                }
                break;
            case LBRACE:
                {
                alt162=4;
                }
                break;
            case LBRACKET:
                {
                alt162=5;
                }
                break;
            case DYNAMIC:
                {
                alt162=6;
                }
                break;
            case OBJECT_DEFINITION:
                {
                alt162=7;
                }
                break;
            case LPAREN:
                {
                alt162=8;
                }
                break;
            case LIDENTIFIER:
            case OUTER:
            case PACKAGE:
            case SUPER:
            case THIS:
            case UIDENTIFIER:
                {
                alt162=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return primary;}
                NoViableAltException nvae =
                    new NoViableAltException("", 162, 0, input);

                throw nvae;

            }

            switch (alt162) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1675:7: nonstringLiteral
                    {
                    pushFollow(FOLLOW_nonstringLiteral_in_base11220);
                    nonstringLiteral236=nonstringLiteral();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =nonstringLiteral236; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1677:7: stringExpression
                    {
                    pushFollow(FOLLOW_stringExpression_in_base11236);
                    stringExpression237=stringExpression();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =stringExpression237; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1679:7: metaLiteral
                    {
                    pushFollow(FOLLOW_metaLiteral_in_base11252);
                    metaLiteral238=metaLiteral();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =metaLiteral238; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1681:7: enumeration
                    {
                    pushFollow(FOLLOW_enumeration_in_base11268);
                    enumeration239=enumeration();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =enumeration239; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1683:7: tuple
                    {
                    pushFollow(FOLLOW_tuple_in_base11284);
                    tuple240=tuple();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =tuple240; }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1685:7: dynamicObject
                    {
                    pushFollow(FOLLOW_dynamicObject_in_base11300);
                    dynamicObject241=dynamicObject();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =dynamicObject241; }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1687:7: objectExpression
                    {
                    pushFollow(FOLLOW_objectExpression_in_base11316);
                    objectExpression242=objectExpression();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary = objectExpression242; }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1689:7: parExpression
                    {
                    pushFollow(FOLLOW_parExpression_in_base11332);
                    parExpression243=parExpression();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =parExpression243; }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1691:7: baseReferenceOrParameterized
                    {
                    pushFollow(FOLLOW_baseReferenceOrParameterized_in_base11348);
                    baseReferenceOrParameterized244=baseReferenceOrParameterized();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =baseReferenceOrParameterized244; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return primary;
    }
    // $ANTLR end "base"



    // $ANTLR start "baseReferenceOrParameterized"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1695:1: baseReferenceOrParameterized returns [Primary primary] : ( ( LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+ | baseReference | selfReference ( ( MEMBER_OP LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberSelectionOperator memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+ )? );
    public Primary baseReferenceOrParameterized() throws RecognitionException {
        Primary primary = null;


        Identifier memberName245 =null;

        TypeParameterList typeParameters246 =null;

        ParameterList parameters247 =null;

        PsiCompatibleCeylonParser.baseReference_return baseReference248 =null;

        Atom selfReference249 =null;

        MemberOperator memberSelectionOperator250 =null;

        Identifier memberName251 =null;

        TypeParameterList typeParameters252 =null;

        ParameterList parameters253 =null;


         BaseMemberOrTypeExpression be=null;
                    QualifiedMemberOrTypeExpression qe=null;
                    ParameterizedExpression pe=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1699:5: ( ( LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+ | baseReference | selfReference ( ( MEMBER_OP LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberSelectionOperator memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+ )? )
            int alt168=3;
            switch ( input.LA(1) ) {
            case LIDENTIFIER:
                {
                int LA168_1 = input.LA(2);

                if ( (synpred17_Ceylon()) ) {
                    alt168=1;
                }
                else if ( (true) ) {
                    alt168=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return primary;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 168, 1, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                alt168=2;
                }
                break;
            case OUTER:
            case PACKAGE:
            case SUPER:
            case THIS:
                {
                alt168=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return primary;}
                NoViableAltException nvae =
                    new NoViableAltException("", 168, 0, input);

                throw nvae;

            }

            switch (alt168) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1699:7: ( LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+
                    {
                    pushFollow(FOLLOW_memberName_in_baseReferenceOrParameterized11404);
                    memberName245=memberName();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { be = new BaseMemberExpression(null);
                            be.setTypeArguments(new InferredTypeArguments(null)); //yew!!
                            be.setIdentifier(memberName245); 
                            pe = new ParameterizedExpression(null);
                            pe.setPrimary(be); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1706:7: ( typeParameters )?
                    int alt163=2;
                    int LA163_0 = input.LA(1);

                    if ( (LA163_0==SMALLER_OP) ) {
                        alt163=1;
                    }
                    switch (alt163) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1707:9: typeParameters
                            {
                            pushFollow(FOLLOW_typeParameters_in_baseReferenceOrParameterized11430);
                            typeParameters246=typeParameters();

                            state._fsp--;
                            if (state.failed) return primary;

                            if ( state.backtracking==0 ) { pe.setTypeParameterList(typeParameters246); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1710:7: ( ( specifierParametersStart )=> parameters )+
                    int cnt164=0;
                    loop164:
                    do {
                        int alt164=2;
                        alt164 = dfa164.predict(input);
                        switch (alt164) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1711:9: ( specifierParametersStart )=> parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_baseReferenceOrParameterized11473);
                    	    parameters247=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return primary;

                    	    if ( state.backtracking==0 ) { pe.addParameterList(parameters247);
                    	              primary = pe; }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt164 >= 1 ) break loop164;
                    	    if (state.backtracking>0) {state.failed=true; return primary;}
                                EarlyExitException eee =
                                    new EarlyExitException(164, input);
                                throw eee;
                        }
                        cnt164++;
                    } while (true);


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1715:7: baseReference
                    {
                    pushFollow(FOLLOW_baseReference_in_baseReferenceOrParameterized11500);
                    baseReference248=baseReference();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { if ((baseReference248!=null?baseReference248.isMember:false))
                                be = new BaseMemberExpression(null);
                            else
                                be = new BaseTypeExpression(null);
                            be.setIdentifier((baseReference248!=null?baseReference248.identifier:null));
                            if ((baseReference248!=null?baseReference248.typeArgumentList:null)!=null)
                                be.setTypeArguments((baseReference248!=null?baseReference248.typeArgumentList:null));
                            else
                                be.setTypeArguments(new InferredTypeArguments(null));
                            primary =be; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1726:7: selfReference ( ( MEMBER_OP LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberSelectionOperator memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+ )?
                    {
                    pushFollow(FOLLOW_selfReference_in_baseReferenceOrParameterized11516);
                    selfReference249=selfReference();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =selfReference249; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1728:7: ( ( MEMBER_OP LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberSelectionOperator memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+ )?
                    int alt167=2;
                    alt167 = dfa167.predict(input);
                    switch (alt167) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1729:9: ( MEMBER_OP LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberSelectionOperator memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+
                            {
                            pushFollow(FOLLOW_memberSelectionOperator_in_baseReferenceOrParameterized11564);
                            memberSelectionOperator250=memberSelectionOperator();

                            state._fsp--;
                            if (state.failed) return primary;

                            if ( state.backtracking==0 ) { qe = new QualifiedMemberExpression(null); 
                                      qe.setMemberOperator(memberSelectionOperator250);
                                      qe.setTypeArguments(new InferredTypeArguments(null)); }

                            pushFollow(FOLLOW_memberName_in_baseReferenceOrParameterized11584);
                            memberName251=memberName();

                            state._fsp--;
                            if (state.failed) return primary;

                            if ( state.backtracking==0 ) { qe.setIdentifier(memberName251); 
                                      qe.setPrimary(primary);
                                      pe = new ParameterizedExpression(null);
                                      pe.setPrimary(qe); }

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1739:9: ( typeParameters )?
                            int alt165=2;
                            int LA165_0 = input.LA(1);

                            if ( (LA165_0==SMALLER_OP) ) {
                                alt165=1;
                            }
                            switch (alt165) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1740:11: typeParameters
                                    {
                                    pushFollow(FOLLOW_typeParameters_in_baseReferenceOrParameterized11616);
                                    typeParameters252=typeParameters();

                                    state._fsp--;
                                    if (state.failed) return primary;

                                    if ( state.backtracking==0 ) { pe.setTypeParameterList(typeParameters252); }

                                    }
                                    break;

                            }


                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1743:9: ( ( specifierParametersStart )=> parameters )+
                            int cnt166=0;
                            loop166:
                            do {
                                int alt166=2;
                                alt166 = dfa166.predict(input);
                                switch (alt166) {
                            	case 1 :
                            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1744:11: ( specifierParametersStart )=> parameters
                            	    {
                            	    pushFollow(FOLLOW_parameters_in_baseReferenceOrParameterized11667);
                            	    parameters253=parameters();

                            	    state._fsp--;
                            	    if (state.failed) return primary;

                            	    if ( state.backtracking==0 ) { pe.addParameterList(parameters253);
                            	                primary = pe; }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt166 >= 1 ) break loop166;
                            	    if (state.backtracking>0) {state.failed=true; return primary;}
                                        EarlyExitException eee =
                                            new EarlyExitException(166, input);
                                        throw eee;
                                }
                                cnt166++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return primary;
    }
    // $ANTLR end "baseReferenceOrParameterized"


    public static class baseReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
        public boolean isMember;
    };


    // $ANTLR start "baseReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1751:1: baseReference returns [Identifier identifier, \n TypeArgumentList typeArgumentList, \n boolean isMember] : ( memberReference | typeReference ) ;
    public PsiCompatibleCeylonParser.baseReference_return baseReference() throws RecognitionException {
        PsiCompatibleCeylonParser.baseReference_return retval = new PsiCompatibleCeylonParser.baseReference_return();
        retval.start = input.LT(1);


        PsiCompatibleCeylonParser.memberReference_return memberReference254 =null;

        PsiCompatibleCeylonParser.typeReference_return typeReference255 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1754:5: ( ( memberReference | typeReference ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1755:5: ( memberReference | typeReference )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1755:5: ( memberReference | typeReference )
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==LIDENTIFIER) ) {
                alt169=1;
            }
            else if ( (LA169_0==UIDENTIFIER) ) {
                alt169=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 169, 0, input);

                throw nvae;

            }
            switch (alt169) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1756:7: memberReference
                    {
                    pushFollow(FOLLOW_memberReference_in_baseReference11733);
                    memberReference254=memberReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (memberReference254!=null?memberReference254.identifier:null);
                            retval.typeArgumentList = (memberReference254!=null?memberReference254.typeArgumentList:null);
                            retval.isMember = true; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1760:7: typeReference
                    {
                    pushFollow(FOLLOW_typeReference_in_baseReference11749);
                    typeReference255=typeReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (typeReference255!=null?typeReference255.identifier:null);
                            retval.typeArgumentList = (typeReference255!=null?typeReference255.typeArgumentList:null);
                            retval.isMember = false; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "baseReference"



    // $ANTLR start "primary"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1767:1: primary returns [Primary primary] : base ( qualifiedReference | indexOrIndexRange | positionalArguments | namedArguments )* ;
    public Primary primary() throws RecognitionException {
        Primary primary = null;


        Primary base256 =null;

        PsiCompatibleCeylonParser.qualifiedReference_return qualifiedReference257 =null;

        IndexExpression indexOrIndexRange258 =null;

        PositionalArgumentList positionalArguments259 =null;

        NamedArgumentList namedArguments260 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1768:5: ( base ( qualifiedReference | indexOrIndexRange | positionalArguments | namedArguments )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1768:7: base ( qualifiedReference | indexOrIndexRange | positionalArguments | namedArguments )*
            {
            pushFollow(FOLLOW_base_in_primary11784);
            base256=base();

            state._fsp--;
            if (state.failed) return primary;

            if ( state.backtracking==0 ) { primary =base256; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1770:5: ( qualifiedReference | indexOrIndexRange | positionalArguments | namedArguments )*
            loop170:
            do {
                int alt170=5;
                switch ( input.LA(1) ) {
                case MEMBER_OP:
                case SAFE_MEMBER_OP:
                case SPREAD_OP:
                    {
                    alt170=1;
                    }
                    break;
                case LBRACKET:
                    {
                    alt170=2;
                    }
                    break;
                case LPAREN:
                    {
                    alt170=3;
                    }
                    break;
                case LBRACE:
                    {
                    alt170=4;
                    }
                    break;

                }

                switch (alt170) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1771:7: qualifiedReference
            	    {
            	    pushFollow(FOLLOW_qualifiedReference_in_primary11806);
            	    qualifiedReference257=qualifiedReference();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { QualifiedMemberOrTypeExpression qe;
            	            if ((qualifiedReference257!=null?qualifiedReference257.isMember:false))
            	                qe = new QualifiedMemberExpression(null);
            	            else
            	                qe = new QualifiedTypeExpression(null);
            	            qe.setPrimary(primary);
            	            qe.setMemberOperator((qualifiedReference257!=null?qualifiedReference257.operator:null));
            	            qe.setIdentifier((qualifiedReference257!=null?qualifiedReference257.identifier:null));
            	            if ((qualifiedReference257!=null?qualifiedReference257.typeArgumentList:null)!=null)
            	                qe.setTypeArguments((qualifiedReference257!=null?qualifiedReference257.typeArgumentList:null));
            	            else 
            	                qe.setTypeArguments( new InferredTypeArguments(null) );
            	            primary =qe; }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1785:9: indexOrIndexRange
            	    {
            	    pushFollow(FOLLOW_indexOrIndexRange_in_primary11824);
            	    indexOrIndexRange258=indexOrIndexRange();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { indexOrIndexRange258.setPrimary(primary);
            	              primary = indexOrIndexRange258; }

            	    }
            	    break;
            	case 3 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1788:9: positionalArguments
            	    {
            	    pushFollow(FOLLOW_positionalArguments_in_primary11845);
            	    positionalArguments259=positionalArguments();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { InvocationExpression ie = new InvocationExpression(null);
            	              ie.setPrimary(primary);
            	              ie.setPositionalArgumentList(positionalArguments259); 
            	              primary =ie; }

            	    }
            	    break;
            	case 4 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1793:9: namedArguments
            	    {
            	    pushFollow(FOLLOW_namedArguments_in_primary11866);
            	    namedArguments260=namedArguments();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { InvocationExpression ie = new InvocationExpression(null);
            	              ie.setPrimary(primary);
            	              ie.setNamedArgumentList(namedArguments260);
            	              primary =ie; }

            	    }
            	    break;

            	default :
            	    break loop170;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return primary;
    }
    // $ANTLR end "primary"



    // $ANTLR start "specifierParametersStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1801:1: specifierParametersStart : LPAREN ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart ) ;
    public void specifierParametersStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1802:5: ( LPAREN ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1802:7: LPAREN ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart )
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_specifierParametersStart11900); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1803:5: ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart )
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==RPAREN) ) {
                alt172=1;
            }
            else if ( (LA172_0==ALIAS||(LA172_0 >= ASSERT && LA172_0 <= ASSIGN)||(LA172_0 >= BACKTICK && LA172_0 <= BREAK)||(LA172_0 >= CHAR_LITERAL && LA172_0 <= CLASS_DEFINITION)||LA172_0==COMPILER_ANNOTATION||LA172_0==CONTINUE||(LA172_0 >= DECREMENT_OP && LA172_0 <= DIFFERENCE_OP)||LA172_0==DYNAMIC||(LA172_0 >= FLOAT_LITERAL && LA172_0 <= FUNCTION_MODIFIER)||(LA172_0 >= IF_CLAUSE && LA172_0 <= INTERFACE_DEFINITION)||LA172_0==IN_OP||(LA172_0 >= LBRACE && LA172_0 <= LIDENTIFIER)||LA172_0==LPAREN||LA172_0==MODULE||(LA172_0 >= NATURAL_LITERAL && LA172_0 <= NEW)||(LA172_0 >= NOT_OP && LA172_0 <= OBJECT_DEFINITION)||(LA172_0 >= OUT && LA172_0 <= PACKAGE)||LA172_0==PRODUCT_OP||LA172_0==RETURN||(LA172_0 >= SEMICOLON && LA172_0 <= SMALLER_OP)||LA172_0==STRING_LITERAL||LA172_0==STRING_START||(LA172_0 >= SUM_OP && LA172_0 <= SWITCH_CLAUSE)||(LA172_0 >= THIS && LA172_0 <= UIDENTIFIER)||(LA172_0 >= VALUE_MODIFIER && LA172_0 <= WHILE_CLAUSE)) ) {
                alt172=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 172, 0, input);

                throw nvae;

            }
            switch (alt172) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1804:7: RPAREN ( SPECIFY | COMPUTE | specifierParametersStart )
                    {
                    match(input,RPAREN,FOLLOW_RPAREN_in_specifierParametersStart11916); if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1804:14: ( SPECIFY | COMPUTE | specifierParametersStart )
                    int alt171=3;
                    switch ( input.LA(1) ) {
                    case SPECIFY:
                        {
                        alt171=1;
                        }
                        break;
                    case COMPUTE:
                        {
                        alt171=2;
                        }
                        break;
                    case LPAREN:
                        {
                        alt171=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 171, 0, input);

                        throw nvae;

                    }

                    switch (alt171) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1804:15: SPECIFY
                            {
                            match(input,SPECIFY,FOLLOW_SPECIFY_in_specifierParametersStart11919); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1804:23: COMPUTE
                            {
                            match(input,COMPUTE,FOLLOW_COMPUTE_in_specifierParametersStart11921); if (state.failed) return ;

                            }
                            break;
                        case 3 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1804:31: specifierParametersStart
                            {
                            pushFollow(FOLLOW_specifierParametersStart_in_specifierParametersStart11923);
                            specifierParametersStart();

                            state._fsp--;
                            if (state.failed) return ;

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1806:7: compilerAnnotations annotatedDeclarationStart
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_specifierParametersStart11939);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    pushFollow(FOLLOW_annotatedDeclarationStart_in_specifierParametersStart11941);
                    annotatedDeclarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "specifierParametersStart"


    public static class qualifiedReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public MemberOperator operator;
        public TypeArgumentList typeArgumentList;
        public boolean isMember;
    };


    // $ANTLR start "qualifiedReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1810:1: qualifiedReference returns [Identifier identifier, MemberOperator operator, \n TypeArgumentList typeArgumentList, boolean isMember] : memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>) ;
    public PsiCompatibleCeylonParser.qualifiedReference_return qualifiedReference() throws RecognitionException {
        PsiCompatibleCeylonParser.qualifiedReference_return retval = new PsiCompatibleCeylonParser.qualifiedReference_return();
        retval.start = input.LT(1);


        MemberOperator memberSelectionOperator261 =null;

        PsiCompatibleCeylonParser.memberReference_return memberReference262 =null;

        PsiCompatibleCeylonParser.typeReference_return typeReference263 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1812:5: ( memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1812:7: memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)
            {
            pushFollow(FOLLOW_memberSelectionOperator_in_qualifiedReference11968);
            memberSelectionOperator261=memberSelectionOperator();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.operator = memberSelectionOperator261;
                    retval.identifier = new Identifier(retval.operator.getToken());
                    retval.identifier.setText("");
                    retval.isMember =true; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1817:7: ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)
            int alt173=3;
            alt173 = dfa173.predict(input);
            switch (alt173) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1818:9: memberReference
                    {
                    pushFollow(FOLLOW_memberReference_in_qualifiedReference11996);
                    memberReference262=memberReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (memberReference262!=null?memberReference262.identifier:null);
                              retval.typeArgumentList = (memberReference262!=null?memberReference262.typeArgumentList:null); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1821:9: typeReference
                    {
                    pushFollow(FOLLOW_typeReference_in_qualifiedReference12016);
                    typeReference263=typeReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (typeReference263!=null?typeReference263.identifier:null);
                              retval.typeArgumentList = (typeReference263!=null?typeReference263.typeArgumentList:null);  
                              retval.isMember =false; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1825:9: (~ ( LIDENTIFIER | UIDENTIFIER ) )=>
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "qualifiedReference"



    // $ANTLR start "memberSelectionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1831:1: memberSelectionOperator returns [MemberOperator operator] : ( MEMBER_OP | SAFE_MEMBER_OP | SPREAD_OP );
    public MemberOperator memberSelectionOperator() throws RecognitionException {
        MemberOperator operator = null;


        Token MEMBER_OP264=null;
        Token SAFE_MEMBER_OP265=null;
        Token SPREAD_OP266=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1832:5: ( MEMBER_OP | SAFE_MEMBER_OP | SPREAD_OP )
            int alt174=3;
            switch ( input.LA(1) ) {
            case MEMBER_OP:
                {
                alt174=1;
                }
                break;
            case SAFE_MEMBER_OP:
                {
                alt174=2;
                }
                break;
            case SPREAD_OP:
                {
                alt174=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 174, 0, input);

                throw nvae;

            }

            switch (alt174) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1832:7: MEMBER_OP
                    {
                    MEMBER_OP264=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_memberSelectionOperator12083); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new MemberOp(MEMBER_OP264); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1834:7: SAFE_MEMBER_OP
                    {
                    SAFE_MEMBER_OP265=(Token)match(input,SAFE_MEMBER_OP,FOLLOW_SAFE_MEMBER_OP_in_memberSelectionOperator12099); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new SafeMemberOp(SAFE_MEMBER_OP265); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1836:7: SPREAD_OP
                    {
                    SPREAD_OP266=(Token)match(input,SPREAD_OP,FOLLOW_SPREAD_OP_in_memberSelectionOperator12115); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new SpreadOp(SPREAD_OP266); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "memberSelectionOperator"



    // $ANTLR start "enumeration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1840:1: enumeration returns [SequenceEnumeration sequenceEnumeration] : LBRACE ( sequencedArgument )? RBRACE ;
    public SequenceEnumeration enumeration() throws RecognitionException {
        SequenceEnumeration sequenceEnumeration = null;


        Token LBRACE267=null;
        Token RBRACE269=null;
        SequencedArgument sequencedArgument268 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1841:5: ( LBRACE ( sequencedArgument )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1841:7: LBRACE ( sequencedArgument )? RBRACE
            {
            LBRACE267=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_enumeration12144); if (state.failed) return sequenceEnumeration;

            if ( state.backtracking==0 ) { sequenceEnumeration = new SequenceEnumeration(LBRACE267); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1843:7: ( sequencedArgument )?
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==ALIAS||(LA175_0 >= ASSERT && LA175_0 <= ASSIGN)||(LA175_0 >= BACKTICK && LA175_0 <= BREAK)||(LA175_0 >= CHAR_LITERAL && LA175_0 <= CLASS_DEFINITION)||LA175_0==COMPILER_ANNOTATION||LA175_0==CONTINUE||(LA175_0 >= DECREMENT_OP && LA175_0 <= DIFFERENCE_OP)||LA175_0==DYNAMIC||(LA175_0 >= FLOAT_LITERAL && LA175_0 <= FUNCTION_MODIFIER)||(LA175_0 >= IF_CLAUSE && LA175_0 <= INTERFACE_DEFINITION)||LA175_0==IN_OP||(LA175_0 >= LBRACE && LA175_0 <= LIDENTIFIER)||LA175_0==LPAREN||LA175_0==MODULE||(LA175_0 >= NATURAL_LITERAL && LA175_0 <= NEW)||(LA175_0 >= NOT_OP && LA175_0 <= OBJECT_DEFINITION)||(LA175_0 >= OUT && LA175_0 <= PACKAGE)||LA175_0==PRODUCT_OP||LA175_0==RETURN||(LA175_0 >= SEMICOLON && LA175_0 <= SMALLER_OP)||LA175_0==STRING_LITERAL||LA175_0==STRING_START||(LA175_0 >= SUM_OP && LA175_0 <= SWITCH_CLAUSE)||(LA175_0 >= THIS && LA175_0 <= UIDENTIFIER)||(LA175_0 >= VALUE_MODIFIER && LA175_0 <= WHILE_CLAUSE)) ) {
                alt175=1;
            }
            switch (alt175) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1844:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_enumeration12172);
                    sequencedArgument268=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return sequenceEnumeration;

                    if ( state.backtracking==0 ) { sequenceEnumeration.setSequencedArgument(sequencedArgument268); }

                    }
                    break;

            }


            RBRACE269=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_enumeration12199); if (state.failed) return sequenceEnumeration;

            if ( state.backtracking==0 ) { sequenceEnumeration.setEndToken(RBRACE269); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return sequenceEnumeration;
    }
    // $ANTLR end "enumeration"



    // $ANTLR start "tuple"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1851:1: tuple returns [Tuple tuple] : LBRACKET ( sequencedArgument )? RBRACKET ;
    public Tuple tuple() throws RecognitionException {
        Tuple tuple = null;


        Token LBRACKET270=null;
        Token RBRACKET272=null;
        SequencedArgument sequencedArgument271 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1852:5: ( LBRACKET ( sequencedArgument )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1852:7: LBRACKET ( sequencedArgument )? RBRACKET
            {
            LBRACKET270=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_tuple12228); if (state.failed) return tuple;

            if ( state.backtracking==0 ) { tuple = new Tuple(LBRACKET270); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1854:7: ( sequencedArgument )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==ALIAS||(LA176_0 >= ASSERT && LA176_0 <= ASSIGN)||(LA176_0 >= BACKTICK && LA176_0 <= BREAK)||(LA176_0 >= CHAR_LITERAL && LA176_0 <= CLASS_DEFINITION)||LA176_0==COMPILER_ANNOTATION||LA176_0==CONTINUE||(LA176_0 >= DECREMENT_OP && LA176_0 <= DIFFERENCE_OP)||LA176_0==DYNAMIC||(LA176_0 >= FLOAT_LITERAL && LA176_0 <= FUNCTION_MODIFIER)||(LA176_0 >= IF_CLAUSE && LA176_0 <= INTERFACE_DEFINITION)||LA176_0==IN_OP||(LA176_0 >= LBRACE && LA176_0 <= LIDENTIFIER)||LA176_0==LPAREN||LA176_0==MODULE||(LA176_0 >= NATURAL_LITERAL && LA176_0 <= NEW)||(LA176_0 >= NOT_OP && LA176_0 <= OBJECT_DEFINITION)||(LA176_0 >= OUT && LA176_0 <= PACKAGE)||LA176_0==PRODUCT_OP||LA176_0==RETURN||(LA176_0 >= SEMICOLON && LA176_0 <= SMALLER_OP)||LA176_0==STRING_LITERAL||LA176_0==STRING_START||(LA176_0 >= SUM_OP && LA176_0 <= SWITCH_CLAUSE)||(LA176_0 >= THIS && LA176_0 <= UIDENTIFIER)||(LA176_0 >= VALUE_MODIFIER && LA176_0 <= WHILE_CLAUSE)) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1855:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_tuple12255);
                    sequencedArgument271=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return tuple;

                    if ( state.backtracking==0 ) { tuple.setSequencedArgument(sequencedArgument271); }

                    }
                    break;

            }


            RBRACKET272=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_tuple12282); if (state.failed) return tuple;

            if ( state.backtracking==0 ) { tuple.setEndToken(RBRACKET272); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return tuple;
    }
    // $ANTLR end "tuple"



    // $ANTLR start "dynamicObject"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1862:1: dynamicObject returns [Dynamic dynamic] : DYNAMIC LBRACKET ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACKET ;
    public Dynamic dynamicObject() throws RecognitionException {
        Dynamic dynamic = null;


        Token DYNAMIC273=null;
        Token LBRACKET274=null;
        Token RBRACKET278=null;
        NamedArgument namedArgument275 =null;

        SpecifiedArgument anonymousArgument276 =null;

        SequencedArgument sequencedArgument277 =null;


         NamedArgumentList nal=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1864:5: ( DYNAMIC LBRACKET ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1864:7: DYNAMIC LBRACKET ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACKET
            {
            DYNAMIC273=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_dynamicObject12324); if (state.failed) return dynamic;

            LBRACKET274=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_dynamicObject12326); if (state.failed) return dynamic;

            if ( state.backtracking==0 ) { dynamic = new Dynamic(DYNAMIC273);
                    nal = new NamedArgumentList(LBRACKET274); 
                    dynamic.setNamedArgumentList(nal); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1868:7: ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )*
            loop177:
            do {
                int alt177=3;
                int LA177_0 = input.LA(1);

                if ( (LA177_0==COMPILER_ANNOTATION) ) {
                    int LA177_1 = input.LA(2);

                    if ( (synpred22_Ceylon()) ) {
                        alt177=1;
                    }


                }
                else if ( (LA177_0==IF_CLAUSE) ) {
                    int LA177_3 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==FUNCTION_MODIFIER) ) {
                    int LA177_4 = input.LA(2);

                    if ( (synpred22_Ceylon()) ) {
                        alt177=1;
                    }
                    else if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==VOID_MODIFIER) ) {
                    int LA177_5 = input.LA(2);

                    if ( (synpred22_Ceylon()) ) {
                        alt177=1;
                    }
                    else if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==SMALLER_OP) ) {
                    int LA177_6 = input.LA(2);

                    if ( (synpred22_Ceylon()) ) {
                        alt177=1;
                    }
                    else if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==LPAREN) ) {
                    int LA177_7 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==LET) ) {
                    int LA177_8 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==SWITCH_CLAUSE) ) {
                    int LA177_9 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==NOT_OP) ) {
                    int LA177_10 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==DIFFERENCE_OP) ) {
                    int LA177_11 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==SUM_OP) ) {
                    int LA177_12 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==DECREMENT_OP) ) {
                    int LA177_13 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==INCREMENT_OP) ) {
                    int LA177_14 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==NATURAL_LITERAL) ) {
                    int LA177_15 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==FLOAT_LITERAL) ) {
                    int LA177_16 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==CHAR_LITERAL) ) {
                    int LA177_17 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==STRING_LITERAL) ) {
                    int LA177_18 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==VERBATIM_STRING) ) {
                    int LA177_19 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==STRING_START) ) {
                    int LA177_20 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==BACKTICK) ) {
                    int LA177_21 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==LBRACE) ) {
                    int LA177_22 = input.LA(2);

                    if ( (synpred22_Ceylon()) ) {
                        alt177=1;
                    }
                    else if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==LBRACKET) ) {
                    int LA177_23 = input.LA(2);

                    if ( (synpred22_Ceylon()) ) {
                        alt177=1;
                    }
                    else if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==DYNAMIC) ) {
                    int LA177_24 = input.LA(2);

                    if ( (synpred22_Ceylon()) ) {
                        alt177=1;
                    }
                    else if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==OBJECT_DEFINITION) ) {
                    int LA177_25 = input.LA(2);

                    if ( (synpred22_Ceylon()) ) {
                        alt177=1;
                    }
                    else if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==LIDENTIFIER) ) {
                    int LA177_26 = input.LA(2);

                    if ( (synpred22_Ceylon()) ) {
                        alt177=1;
                    }
                    else if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==UIDENTIFIER) ) {
                    int LA177_27 = input.LA(2);

                    if ( (synpred22_Ceylon()) ) {
                        alt177=1;
                    }
                    else if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==THIS) ) {
                    int LA177_28 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==SUPER) ) {
                    int LA177_29 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==OUTER) ) {
                    int LA177_30 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==PACKAGE) ) {
                    int LA177_31 = input.LA(2);

                    if ( (synpred22_Ceylon()) ) {
                        alt177=1;
                    }
                    else if ( (synpred23_Ceylon()) ) {
                        alt177=2;
                    }


                }
                else if ( (LA177_0==VALUE_MODIFIER) && (synpred22_Ceylon())) {
                    alt177=1;
                }


                switch (alt177) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1870:9: ( namedArgumentStart )=> namedArgument
            	    {
            	    pushFollow(FOLLOW_namedArgument_in_dynamicObject12377);
            	    namedArgument275=namedArgument();

            	    state._fsp--;
            	    if (state.failed) return dynamic;

            	    if ( state.backtracking==0 ) { if (namedArgument275!=null) 
            	                  nal.addNamedArgument(namedArgument275); }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1874:9: ( anonymousArgument )=> anonymousArgument
            	    {
            	    pushFollow(FOLLOW_anonymousArgument_in_dynamicObject12411);
            	    anonymousArgument276=anonymousArgument();

            	    state._fsp--;
            	    if (state.failed) return dynamic;

            	    if ( state.backtracking==0 ) { if (anonymousArgument276!=null) 
            	                  nal.addNamedArgument(anonymousArgument276); }

            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1879:7: ( sequencedArgument )?
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==ALIAS||(LA178_0 >= ASSERT && LA178_0 <= ASSIGN)||(LA178_0 >= BACKTICK && LA178_0 <= BREAK)||(LA178_0 >= CHAR_LITERAL && LA178_0 <= CLASS_DEFINITION)||LA178_0==COMPILER_ANNOTATION||LA178_0==CONTINUE||(LA178_0 >= DECREMENT_OP && LA178_0 <= DIFFERENCE_OP)||LA178_0==DYNAMIC||(LA178_0 >= FLOAT_LITERAL && LA178_0 <= FUNCTION_MODIFIER)||(LA178_0 >= IF_CLAUSE && LA178_0 <= INTERFACE_DEFINITION)||LA178_0==IN_OP||(LA178_0 >= LBRACE && LA178_0 <= LIDENTIFIER)||LA178_0==LPAREN||LA178_0==MODULE||(LA178_0 >= NATURAL_LITERAL && LA178_0 <= NEW)||(LA178_0 >= NOT_OP && LA178_0 <= OBJECT_DEFINITION)||(LA178_0 >= OUT && LA178_0 <= PACKAGE)||LA178_0==PRODUCT_OP||LA178_0==RETURN||(LA178_0 >= SEMICOLON && LA178_0 <= SMALLER_OP)||LA178_0==STRING_LITERAL||LA178_0==STRING_START||(LA178_0 >= SUM_OP && LA178_0 <= SWITCH_CLAUSE)||(LA178_0 >= THIS && LA178_0 <= UIDENTIFIER)||(LA178_0 >= VALUE_MODIFIER && LA178_0 <= WHILE_CLAUSE)) ) {
                alt178=1;
            }
            switch (alt178) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1880:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_dynamicObject12449);
                    sequencedArgument277=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return dynamic;

                    if ( state.backtracking==0 ) { nal.setSequencedArgument(sequencedArgument277); }

                    }
                    break;

            }


            RBRACKET278=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_dynamicObject12476); if (state.failed) return dynamic;

            if ( state.backtracking==0 ) { nal.setEndToken(RBRACKET278); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return dynamic;
    }
    // $ANTLR end "dynamicObject"



    // $ANTLR start "valueCaseList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1887:1: valueCaseList returns [ExpressionList expressionList] :ie1= intersectionExpression ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )* ;
    public ExpressionList valueCaseList() throws RecognitionException {
        ExpressionList expressionList = null;


        Token c=null;
        Token u=null;
        Term ie1 =null;

        Term ie2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1888:5: (ie1= intersectionExpression ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1888:7: ie1= intersectionExpression ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )*
            {
            if ( state.backtracking==0 ) { expressionList = new ExpressionList(null); }

            pushFollow(FOLLOW_intersectionExpression_in_valueCaseList12519);
            ie1=intersectionExpression();

            state._fsp--;
            if (state.failed) return expressionList;

            if ( state.backtracking==0 ) { Expression e = new Expression(null);
                    e.setTerm(ie1);
                    expressionList.addExpression(e); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1893:7: ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )*
            loop181:
            do {
                int alt181=2;
                int LA181_0 = input.LA(1);

                if ( (LA181_0==COMMA||LA181_0==UNION_OP) ) {
                    alt181=1;
                }


                switch (alt181) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1894:9: (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |)
            	    {
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1894:9: (c= COMMA |u= UNION_OP )
            	    int alt179=2;
            	    int LA179_0 = input.LA(1);

            	    if ( (LA179_0==COMMA) ) {
            	        alt179=1;
            	    }
            	    else if ( (LA179_0==UNION_OP) ) {
            	        alt179=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return expressionList;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 179, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt179) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1895:11: c= COMMA
            	            {
            	            c=(Token)match(input,COMMA,FOLLOW_COMMA_in_valueCaseList12561); if (state.failed) return expressionList;

            	            if ( state.backtracking==0 ) { expressionList.setEndToken(c);
            	                        if (expressionList.getErrors().isEmpty())
            	                            expressionList.addUsageWarning(Warning.syntaxDeprecation,
            	                                "use of ',' in case conditions is deprecated (change to '|')"); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1900:11: u= UNION_OP
            	            {
            	            u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_valueCaseList12588); if (state.failed) return expressionList;

            	            if ( state.backtracking==0 ) { expressionList.setEndToken(u); }

            	            }
            	            break;

            	    }


            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1903:9: (ie2= intersectionExpression |)
            	    int alt180=2;
            	    int LA180_0 = input.LA(1);

            	    if ( (LA180_0==BACKTICK||LA180_0==CHAR_LITERAL||(LA180_0 >= DECREMENT_OP && LA180_0 <= DIFFERENCE_OP)||LA180_0==DYNAMIC||LA180_0==FLOAT_LITERAL||LA180_0==INCREMENT_OP||(LA180_0 >= LBRACE && LA180_0 <= LBRACKET)||LA180_0==LIDENTIFIER||LA180_0==LPAREN||LA180_0==NATURAL_LITERAL||LA180_0==OBJECT_DEFINITION||(LA180_0 >= OUTER && LA180_0 <= PACKAGE)||LA180_0==STRING_LITERAL||LA180_0==STRING_START||(LA180_0 >= SUM_OP && LA180_0 <= SUPER)||LA180_0==THIS||LA180_0==UIDENTIFIER||LA180_0==VERBATIM_STRING) ) {
            	        alt180=1;
            	    }
            	    else if ( (LA180_0==COMMA||LA180_0==RPAREN||LA180_0==UNION_OP) ) {
            	        alt180=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return expressionList;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 180, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt180) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1904:11: ie2= intersectionExpression
            	            {
            	            pushFollow(FOLLOW_intersectionExpression_in_valueCaseList12634);
            	            ie2=intersectionExpression();

            	            state._fsp--;
            	            if (state.failed) return expressionList;

            	            if ( state.backtracking==0 ) { if (ie2!=null) {
            	                            Expression e = new Expression(null);
            	                            e.setTerm(ie2);
            	                            expressionList.addExpression(e);
            	                            expressionList.setEndToken(null); } }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1910:11: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                          new MismatchedTokenException(LIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop181;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expressionList;
    }
    // $ANTLR end "valueCaseList"


    public static class memberReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "memberReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1916:1: memberReference returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : memberName ( ( typeArgumentsStart )=> typeArguments )? ;
    public PsiCompatibleCeylonParser.memberReference_return memberReference() throws RecognitionException {
        PsiCompatibleCeylonParser.memberReference_return retval = new PsiCompatibleCeylonParser.memberReference_return();
        retval.start = input.LT(1);


        Identifier memberName279 =null;

        TypeArgumentList typeArguments280 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1918:5: ( memberName ( ( typeArgumentsStart )=> typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1918:7: memberName ( ( typeArgumentsStart )=> typeArguments )?
            {
            pushFollow(FOLLOW_memberName_in_memberReference12699);
            memberName279=memberName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier = memberName279; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1920:7: ( ( typeArgumentsStart )=> typeArguments )?
            int alt182=2;
            alt182 = dfa182.predict(input);
            switch (alt182) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1921:9: ( typeArgumentsStart )=> typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_memberReference12739);
                    typeArguments280=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments280; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "memberReference"


    public static class typeReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "typeReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1927:1: typeReference returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : typeName ( ( typeArgumentsStart )=> typeArguments )? ;
    public PsiCompatibleCeylonParser.typeReference_return typeReference() throws RecognitionException {
        PsiCompatibleCeylonParser.typeReference_return retval = new PsiCompatibleCeylonParser.typeReference_return();
        retval.start = input.LT(1);


        Identifier typeName281 =null;

        TypeArgumentList typeArguments282 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1929:5: ( typeName ( ( typeArgumentsStart )=> typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1929:7: typeName ( ( typeArgumentsStart )=> typeArguments )?
            {
            pushFollow(FOLLOW_typeName_in_typeReference12779);
            typeName281=typeName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier = typeName281; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1931:7: ( ( typeArgumentsStart )=> typeArguments )?
            int alt183=2;
            alt183 = dfa183.predict(input);
            switch (alt183) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1932:9: ( typeArgumentsStart )=> typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_typeReference12820);
                    typeArguments282=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments282; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "typeReference"



    // $ANTLR start "typeArgumentsStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1941:1: typeArgumentsStart : SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP ) ;
    public void typeArgumentsStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1942:5: ( SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1942:7: SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP )
            {
            match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArgumentsStart12859); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1943:5: ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP )
            int alt184=3;
            switch ( input.LA(1) ) {
            case SMALLER_OP:
                {
                int LA184_1 = input.LA(2);

                if ( (LA184_1==COMPILER_ANNOTATION||LA184_1==IN_OP||(LA184_1 >= LBRACE && LA184_1 <= LBRACKET)||LA184_1==LIDENTIFIER||LA184_1==OUT||LA184_1==PACKAGE||LA184_1==SMALLER_OP||LA184_1==UIDENTIFIER) ) {
                    alt184=1;
                }
                else if ( (LA184_1==EOF) ) {
                    alt184=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 184, 1, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
            case LBRACKET:
            case PACKAGE:
            case UIDENTIFIER:
                {
                alt184=1;
                }
                break;
            case LARGER_OP:
                {
                alt184=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 184, 0, input);

                throw nvae;

            }

            switch (alt184) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1944:7: type ( LARGER_OP | SMALLER_OP | COMMA )
                    {
                    pushFollow(FOLLOW_type_in_typeArgumentsStart12873);
                    type();

                    state._fsp--;
                    if (state.failed) return ;

                    if ( input.LA(1)==COMMA||input.LA(1)==LARGER_OP||input.LA(1)==SMALLER_OP ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1947:7: SMALLER_OP
                    {
                    match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArgumentsStart12901); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1949:7: LARGER_OP
                    {
                    match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeArgumentsStart12916); if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "typeArgumentsStart"



    // $ANTLR start "indexOrIndexRange"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1953:1: indexOrIndexRange returns [IndexExpression indexExpression] : LBRACKET (e1= ELLIPSIS i= index | ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? |fe= functionOrExpression ) RBRACKET ;
    public IndexExpression indexOrIndexRange() throws RecognitionException {
        IndexExpression indexExpression = null;


        Token e1=null;
        Token e2=null;
        Token LBRACKET283=null;
        Token RANGE_OP284=null;
        Token SEGMENT_OP285=null;
        Token RBRACKET286=null;
        Expression i =null;

        Expression l =null;

        Expression u =null;

        Expression s =null;

        Expression fe =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1958:5: ( LBRACKET (e1= ELLIPSIS i= index | ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? |fe= functionOrExpression ) RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1958:7: LBRACKET (e1= ELLIPSIS i= index | ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? |fe= functionOrExpression ) RBRACKET
            {
            LBRACKET283=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_indexOrIndexRange12964); if (state.failed) return indexExpression;

            if ( state.backtracking==0 ) { indexExpression = new IndexExpression(LBRACKET283); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1960:7: (e1= ELLIPSIS i= index | ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? |fe= functionOrExpression )
            int alt186=3;
            switch ( input.LA(1) ) {
            case ELLIPSIS:
                {
                alt186=1;
                }
                break;
            case DIFFERENCE_OP:
                {
                int LA186_2 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 2, input);

                    throw nvae;

                }
                }
                break;
            case SUM_OP:
                {
                int LA186_3 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 3, input);

                    throw nvae;

                }
                }
                break;
            case DECREMENT_OP:
                {
                int LA186_4 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 4, input);

                    throw nvae;

                }
                }
                break;
            case INCREMENT_OP:
                {
                int LA186_5 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 5, input);

                    throw nvae;

                }
                }
                break;
            case NATURAL_LITERAL:
                {
                int LA186_6 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 6, input);

                    throw nvae;

                }
                }
                break;
            case FLOAT_LITERAL:
                {
                int LA186_7 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 7, input);

                    throw nvae;

                }
                }
                break;
            case CHAR_LITERAL:
                {
                int LA186_8 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 8, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA186_9 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 9, input);

                    throw nvae;

                }
                }
                break;
            case VERBATIM_STRING:
                {
                int LA186_10 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 10, input);

                    throw nvae;

                }
                }
                break;
            case STRING_START:
                {
                int LA186_11 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 11, input);

                    throw nvae;

                }
                }
                break;
            case BACKTICK:
                {
                int LA186_12 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 12, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA186_13 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 13, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA186_14 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 14, input);

                    throw nvae;

                }
                }
                break;
            case DYNAMIC:
                {
                int LA186_15 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 15, input);

                    throw nvae;

                }
                }
                break;
            case OBJECT_DEFINITION:
                {
                int LA186_16 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 16, input);

                    throw nvae;

                }
                }
                break;
            case LPAREN:
                {
                int LA186_17 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 17, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA186_18 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 18, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA186_19 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 19, input);

                    throw nvae;

                }
                }
                break;
            case THIS:
                {
                int LA186_20 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 20, input);

                    throw nvae;

                }
                }
                break;
            case SUPER:
                {
                int LA186_21 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 21, input);

                    throw nvae;

                }
                }
                break;
            case OUTER:
                {
                int LA186_22 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 22, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA186_23 = input.LA(2);

                if ( (synpred26_Ceylon()) ) {
                    alt186=2;
                }
                else if ( (true) ) {
                    alt186=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 186, 23, input);

                    throw nvae;

                }
                }
                break;
            case FUNCTION_MODIFIER:
            case IF_CLAUSE:
            case LET:
            case NOT_OP:
            case SMALLER_OP:
            case SWITCH_CLAUSE:
            case VOID_MODIFIER:
                {
                alt186=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return indexExpression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 186, 0, input);

                throw nvae;

            }

            switch (alt186) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1961:9: e1= ELLIPSIS i= index
                    {
                    e1=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_indexOrIndexRange12992); if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { indexExpression.setEndToken(e1); }

                    pushFollow(FOLLOW_index_in_indexOrIndexRange13014);
                    i=index();

                    state._fsp--;
                    if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { ElementRange er0 = new ElementRange(null);
                              er0.setUpperBound(i);
                              indexExpression.setElementOrRange(er0); 
                              indexExpression.setEndToken(null); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1968:9: ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )?
                    {
                    pushFollow(FOLLOW_index_in_indexOrIndexRange13057);
                    l=index();

                    state._fsp--;
                    if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { Element e = new Element(null);
                              e.setExpression(l); 
                              indexExpression.setElementOrRange(e); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1973:9: (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )?
                    int alt185=4;
                    switch ( input.LA(1) ) {
                        case ELLIPSIS:
                            {
                            alt185=1;
                            }
                            break;
                        case RANGE_OP:
                            {
                            alt185=2;
                            }
                            break;
                        case SEGMENT_OP:
                            {
                            alt185=3;
                            }
                            break;
                    }

                    switch (alt185) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1974:11: e2= ELLIPSIS
                            {
                            e2=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_indexOrIndexRange13091); if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { indexExpression.setEndToken(e2);
                                        ElementRange er1 = new ElementRange(null);
                                        er1.setLowerBound(l);
                                        indexExpression.setElementOrRange(er1); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1980:11: RANGE_OP u= index
                            {
                            RANGE_OP284=(Token)match(input,RANGE_OP,FOLLOW_RANGE_OP_in_indexOrIndexRange13126); if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { indexExpression.setEndToken(RANGE_OP284); }

                            pushFollow(FOLLOW_index_in_indexOrIndexRange13153);
                            u=index();

                            state._fsp--;
                            if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { ElementRange er2 = new ElementRange(null);
                                        er2.setLowerBound(l); 
                                        er2.setUpperBound(u); 
                                        indexExpression.setElementOrRange(er2);
                                        indexExpression.setEndToken(null); }

                            }
                            break;
                        case 3 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1988:11: SEGMENT_OP s= index
                            {
                            SEGMENT_OP285=(Token)match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_indexOrIndexRange13178); if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { indexExpression.setEndToken(SEGMENT_OP285); }

                            pushFollow(FOLLOW_index_in_indexOrIndexRange13204);
                            s=index();

                            state._fsp--;
                            if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { ElementRange er3 = new ElementRange(null);
                                        er3.setLowerBound(l); 
                                        er3.setLength(s); 
                                        indexExpression.setElementOrRange(er3);
                                        indexExpression.setEndToken(null); }

                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1997:9: fe= functionOrExpression
                    {
                    pushFollow(FOLLOW_functionOrExpression_in_indexOrIndexRange13240);
                    fe=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { Element e = new Element(null);
                              e.setExpression(fe); 
                              indexExpression.setElementOrRange(e); }

                    }
                    break;

            }


            RBRACKET286=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_indexOrIndexRange13266); if (state.failed) return indexExpression;

            if ( state.backtracking==0 ) { indexExpression.setEndToken(RBRACKET286); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return indexExpression;
    }
    // $ANTLR end "indexOrIndexRange"



    // $ANTLR start "index"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2006:1: index returns [Expression expression] : additiveExpression ;
    public Expression index() throws RecognitionException {
        Expression expression = null;


        Term additiveExpression287 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2007:5: ( additiveExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2007:7: additiveExpression
            {
            pushFollow(FOLLOW_additiveExpression_in_index13295);
            additiveExpression287=additiveExpression();

            state._fsp--;
            if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression = new Expression(null);
                    expression.setTerm(additiveExpression287); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "index"



    // $ANTLR start "namedArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2012:1: namedArguments returns [NamedArgumentList namedArgumentList] : LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE ;
    public NamedArgumentList namedArguments() throws RecognitionException {
        NamedArgumentList namedArgumentList = null;


        Token LBRACE288=null;
        Token RBRACE292=null;
        NamedArgument namedArgument289 =null;

        SpecifiedArgument anonymousArgument290 =null;

        SequencedArgument sequencedArgument291 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2013:5: ( LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2013:7: LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE
            {
            LBRACE288=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_namedArguments13325); if (state.failed) return namedArgumentList;

            if ( state.backtracking==0 ) { namedArgumentList = new NamedArgumentList(LBRACE288); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2015:7: ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )*
            loop187:
            do {
                int alt187=3;
                int LA187_0 = input.LA(1);

                if ( (LA187_0==COMPILER_ANNOTATION) ) {
                    int LA187_1 = input.LA(2);

                    if ( (synpred27_Ceylon()) ) {
                        alt187=1;
                    }


                }
                else if ( (LA187_0==IF_CLAUSE) ) {
                    int LA187_3 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==FUNCTION_MODIFIER) ) {
                    int LA187_4 = input.LA(2);

                    if ( (synpred27_Ceylon()) ) {
                        alt187=1;
                    }
                    else if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==VOID_MODIFIER) ) {
                    int LA187_5 = input.LA(2);

                    if ( (synpred27_Ceylon()) ) {
                        alt187=1;
                    }
                    else if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==SMALLER_OP) ) {
                    int LA187_6 = input.LA(2);

                    if ( (synpred27_Ceylon()) ) {
                        alt187=1;
                    }
                    else if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==LPAREN) ) {
                    int LA187_7 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==LET) ) {
                    int LA187_8 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==SWITCH_CLAUSE) ) {
                    int LA187_9 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==NOT_OP) ) {
                    int LA187_10 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==DIFFERENCE_OP) ) {
                    int LA187_11 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==SUM_OP) ) {
                    int LA187_12 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==DECREMENT_OP) ) {
                    int LA187_13 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==INCREMENT_OP) ) {
                    int LA187_14 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==NATURAL_LITERAL) ) {
                    int LA187_15 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==FLOAT_LITERAL) ) {
                    int LA187_16 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==CHAR_LITERAL) ) {
                    int LA187_17 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==STRING_LITERAL) ) {
                    int LA187_18 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==VERBATIM_STRING) ) {
                    int LA187_19 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==STRING_START) ) {
                    int LA187_20 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==BACKTICK) ) {
                    int LA187_21 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==LBRACE) ) {
                    int LA187_22 = input.LA(2);

                    if ( (synpred27_Ceylon()) ) {
                        alt187=1;
                    }
                    else if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==LBRACKET) ) {
                    int LA187_23 = input.LA(2);

                    if ( (synpred27_Ceylon()) ) {
                        alt187=1;
                    }
                    else if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==DYNAMIC) ) {
                    int LA187_24 = input.LA(2);

                    if ( (synpred27_Ceylon()) ) {
                        alt187=1;
                    }
                    else if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==OBJECT_DEFINITION) ) {
                    int LA187_25 = input.LA(2);

                    if ( (synpred27_Ceylon()) ) {
                        alt187=1;
                    }
                    else if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==LIDENTIFIER) ) {
                    int LA187_26 = input.LA(2);

                    if ( (synpred27_Ceylon()) ) {
                        alt187=1;
                    }
                    else if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==UIDENTIFIER) ) {
                    int LA187_27 = input.LA(2);

                    if ( (synpred27_Ceylon()) ) {
                        alt187=1;
                    }
                    else if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==THIS) ) {
                    int LA187_28 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==SUPER) ) {
                    int LA187_29 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==OUTER) ) {
                    int LA187_30 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==PACKAGE) ) {
                    int LA187_31 = input.LA(2);

                    if ( (synpred27_Ceylon()) ) {
                        alt187=1;
                    }
                    else if ( (synpred28_Ceylon()) ) {
                        alt187=2;
                    }


                }
                else if ( (LA187_0==VALUE_MODIFIER) && (synpred27_Ceylon())) {
                    alt187=1;
                }


                switch (alt187) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2017:9: ( namedArgumentStart )=> namedArgument
            	    {
            	    pushFollow(FOLLOW_namedArgument_in_namedArguments13377);
            	    namedArgument289=namedArgument();

            	    state._fsp--;
            	    if (state.failed) return namedArgumentList;

            	    if ( state.backtracking==0 ) { if (namedArgument289!=null) 
            	                  namedArgumentList.addNamedArgument(namedArgument289); }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2021:9: ( anonymousArgument )=> anonymousArgument
            	    {
            	    pushFollow(FOLLOW_anonymousArgument_in_namedArguments13411);
            	    anonymousArgument290=anonymousArgument();

            	    state._fsp--;
            	    if (state.failed) return namedArgumentList;

            	    if ( state.backtracking==0 ) { if (anonymousArgument290!=null) 
            	                  namedArgumentList.addNamedArgument(anonymousArgument290); }

            	    }
            	    break;

            	default :
            	    break loop187;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2026:7: ( sequencedArgument )?
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==ALIAS||(LA188_0 >= ASSERT && LA188_0 <= ASSIGN)||(LA188_0 >= BACKTICK && LA188_0 <= BREAK)||(LA188_0 >= CHAR_LITERAL && LA188_0 <= CLASS_DEFINITION)||LA188_0==COMPILER_ANNOTATION||LA188_0==CONTINUE||(LA188_0 >= DECREMENT_OP && LA188_0 <= DIFFERENCE_OP)||LA188_0==DYNAMIC||(LA188_0 >= FLOAT_LITERAL && LA188_0 <= FUNCTION_MODIFIER)||(LA188_0 >= IF_CLAUSE && LA188_0 <= INTERFACE_DEFINITION)||LA188_0==IN_OP||(LA188_0 >= LBRACE && LA188_0 <= LIDENTIFIER)||LA188_0==LPAREN||LA188_0==MODULE||(LA188_0 >= NATURAL_LITERAL && LA188_0 <= NEW)||(LA188_0 >= NOT_OP && LA188_0 <= OBJECT_DEFINITION)||(LA188_0 >= OUT && LA188_0 <= PACKAGE)||LA188_0==PRODUCT_OP||LA188_0==RETURN||(LA188_0 >= SEMICOLON && LA188_0 <= SMALLER_OP)||LA188_0==STRING_LITERAL||LA188_0==STRING_START||(LA188_0 >= SUM_OP && LA188_0 <= SWITCH_CLAUSE)||(LA188_0 >= THIS && LA188_0 <= UIDENTIFIER)||(LA188_0 >= VALUE_MODIFIER && LA188_0 <= WHILE_CLAUSE)) ) {
                alt188=1;
            }
            switch (alt188) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2027:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_namedArguments13449);
                    sequencedArgument291=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return namedArgumentList;

                    if ( state.backtracking==0 ) { namedArgumentList.setSequencedArgument(sequencedArgument291); }

                    }
                    break;

            }


            RBRACE292=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_namedArguments13476); if (state.failed) return namedArgumentList;

            if ( state.backtracking==0 ) { namedArgumentList.setEndToken(RBRACE292); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return namedArgumentList;
    }
    // $ANTLR end "namedArguments"



    // $ANTLR start "sequencedArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2034:1: sequencedArgument returns [SequencedArgument sequencedArgument] : compilerAnnotations ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension |pa1= positionalArgument |sa1= spreadArgument ) (c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |) )* ;
    public SequencedArgument sequencedArgument() throws RecognitionException {
        SequencedArgument sequencedArgument = null;


        Token c=null;
        Comprehension c1 =null;

        ListedArgument pa1 =null;

        SpreadArgument sa1 =null;

        Comprehension c2 =null;

        ListedArgument pa2 =null;

        SpreadArgument sa2 =null;

        List<CompilerAnnotation> compilerAnnotations293 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2035:5: ( compilerAnnotations ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension |pa1= positionalArgument |sa1= spreadArgument ) (c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2035:7: compilerAnnotations ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension |pa1= positionalArgument |sa1= spreadArgument ) (c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |) )*
            {
            pushFollow(FOLLOW_compilerAnnotations_in_sequencedArgument13505);
            compilerAnnotations293=compilerAnnotations();

            state._fsp--;
            if (state.failed) return sequencedArgument;

            if ( state.backtracking==0 ) { sequencedArgument = new SequencedArgument(null);
                    sequencedArgument.getCompilerAnnotations().addAll(compilerAnnotations293); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2038:9: ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension |pa1= positionalArgument |sa1= spreadArgument )
            int alt189=3;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==FOR_CLAUSE) && (synpred29_Ceylon())) {
                alt189=1;
            }
            else if ( (LA189_0==IF_CLAUSE) ) {
                int LA189_2 = input.LA(2);

                if ( (synpred29_Ceylon()) ) {
                    alt189=1;
                }
                else if ( (true) ) {
                    alt189=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 189, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA189_0==BACKTICK||LA189_0==CHAR_LITERAL||(LA189_0 >= DECREMENT_OP && LA189_0 <= DIFFERENCE_OP)||LA189_0==DYNAMIC||LA189_0==FLOAT_LITERAL||LA189_0==FUNCTION_MODIFIER||LA189_0==INCREMENT_OP||(LA189_0 >= LBRACE && LA189_0 <= LIDENTIFIER)||LA189_0==LPAREN||LA189_0==NATURAL_LITERAL||(LA189_0 >= NOT_OP && LA189_0 <= OBJECT_DEFINITION)||(LA189_0 >= OUTER && LA189_0 <= PACKAGE)||LA189_0==SMALLER_OP||LA189_0==STRING_LITERAL||LA189_0==STRING_START||(LA189_0 >= SUM_OP && LA189_0 <= SWITCH_CLAUSE)||LA189_0==THIS||LA189_0==UIDENTIFIER||(LA189_0 >= VERBATIM_STRING && LA189_0 <= VOID_MODIFIER)) ) {
                alt189=2;
            }
            else if ( (LA189_0==PRODUCT_OP) ) {
                alt189=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
                NoViableAltException nvae =
                    new NoViableAltException("", 189, 0, input);

                throw nvae;

            }
            switch (alt189) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2039:11: ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension
                    {
                    pushFollow(FOLLOW_comprehension_in_sequencedArgument13561);
                    c1=comprehension();

                    state._fsp--;
                    if (state.failed) return sequencedArgument;

                    if ( state.backtracking==0 ) { if (c1!=null)
                                    sequencedArgument.addPositionalArgument(c1); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2044:11: pa1= positionalArgument
                    {
                    pushFollow(FOLLOW_positionalArgument_in_sequencedArgument13598);
                    pa1=positionalArgument();

                    state._fsp--;
                    if (state.failed) return sequencedArgument;

                    if ( state.backtracking==0 ) { if (pa1!=null)
                                    sequencedArgument.addPositionalArgument(pa1); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2048:11: sa1= spreadArgument
                    {
                    pushFollow(FOLLOW_spreadArgument_in_sequencedArgument13634);
                    sa1=spreadArgument();

                    state._fsp--;
                    if (state.failed) return sequencedArgument;

                    if ( state.backtracking==0 ) { if (sa1!=null)
                                    sequencedArgument.addPositionalArgument(sa1); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2052:9: (c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |) )*
            loop191:
            do {
                int alt191=2;
                int LA191_0 = input.LA(1);

                if ( (LA191_0==COMMA) ) {
                    alt191=1;
                }


                switch (alt191) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2053:11: c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |)
            	    {
            	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_sequencedArgument13680); if (state.failed) return sequencedArgument;

            	    if ( state.backtracking==0 ) { sequencedArgument.setEndToken(c); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2055:11: ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |)
            	    int alt190=4;
            	    int LA190_0 = input.LA(1);

            	    if ( (LA190_0==FOR_CLAUSE) && (synpred30_Ceylon())) {
            	        alt190=1;
            	    }
            	    else if ( (LA190_0==IF_CLAUSE) ) {
            	        int LA190_2 = input.LA(2);

            	        if ( (synpred30_Ceylon()) ) {
            	            alt190=1;
            	        }
            	        else if ( (true) ) {
            	            alt190=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 190, 2, input);

            	            throw nvae;

            	        }
            	    }
            	    else if ( (LA190_0==BACKTICK||LA190_0==CHAR_LITERAL||(LA190_0 >= DECREMENT_OP && LA190_0 <= DIFFERENCE_OP)||LA190_0==DYNAMIC||LA190_0==FLOAT_LITERAL||LA190_0==FUNCTION_MODIFIER||LA190_0==INCREMENT_OP||(LA190_0 >= LBRACE && LA190_0 <= LIDENTIFIER)||LA190_0==LPAREN||LA190_0==NATURAL_LITERAL||(LA190_0 >= NOT_OP && LA190_0 <= OBJECT_DEFINITION)||(LA190_0 >= OUTER && LA190_0 <= PACKAGE)||LA190_0==SMALLER_OP||LA190_0==STRING_LITERAL||LA190_0==STRING_START||(LA190_0 >= SUM_OP && LA190_0 <= SWITCH_CLAUSE)||LA190_0==THIS||LA190_0==UIDENTIFIER||(LA190_0 >= VERBATIM_STRING && LA190_0 <= VOID_MODIFIER)) ) {
            	        alt190=2;
            	    }
            	    else if ( (LA190_0==PRODUCT_OP) ) {
            	        alt190=3;
            	    }
            	    else if ( (LA190_0==COMMA||(LA190_0 >= RBRACE && LA190_0 <= RBRACKET)||LA190_0==RPAREN) ) {
            	        alt190=4;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 190, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt190) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2056:13: ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension
            	            {
            	            pushFollow(FOLLOW_comprehension_in_sequencedArgument13746);
            	            c2=comprehension();

            	            state._fsp--;
            	            if (state.failed) return sequencedArgument;

            	            if ( state.backtracking==0 ) { if (c2!=null) {
            	                              sequencedArgument.addPositionalArgument(c2);
            	                              sequencedArgument.setEndToken(null); } }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2062:13: pa2= positionalArgument
            	            {
            	            pushFollow(FOLLOW_positionalArgument_in_sequencedArgument13789);
            	            pa2=positionalArgument();

            	            state._fsp--;
            	            if (state.failed) return sequencedArgument;

            	            if ( state.backtracking==0 ) { if (pa2!=null) {
            	                              sequencedArgument.addPositionalArgument(pa2); 
            	                              sequencedArgument.setEndToken(null); } }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2067:13: sa2= spreadArgument
            	            {
            	            pushFollow(FOLLOW_spreadArgument_in_sequencedArgument13832);
            	            sa2=spreadArgument();

            	            state._fsp--;
            	            if (state.failed) return sequencedArgument;

            	            if ( state.backtracking==0 ) { if (sa2!=null) {
            	                              sequencedArgument.addPositionalArgument(sa2); 
            	                              sequencedArgument.setEndToken(null); } }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2072:13: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                            new MismatchedTokenException(LIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop191;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return sequencedArgument;
    }
    // $ANTLR end "sequencedArgument"



    // $ANTLR start "namedArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2078:1: namedArgument returns [NamedArgument namedArgument] : compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration ) ;
    public NamedArgument namedArgument() throws RecognitionException {
        NamedArgument namedArgument = null;


        SpecifiedArgument namedSpecifiedArgument294 =null;

        NamedArgument namedArgumentDeclaration295 =null;

        List<CompilerAnnotation> compilerAnnotations296 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2079:5: ( compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2079:7: compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_namedArgument13917);
            compilerAnnotations296=compilerAnnotations();

            state._fsp--;
            if (state.failed) return namedArgument;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2080:5: ( namedSpecifiedArgument | namedArgumentDeclaration )
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==LIDENTIFIER) ) {
                int LA192_1 = input.LA(2);

                if ( (LA192_1==SEMICOLON||LA192_1==SPECIFY) ) {
                    alt192=1;
                }
                else if ( (LA192_1==COMPUTE||LA192_1==LPAREN) ) {
                    alt192=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return namedArgument;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 192, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA192_0==DYNAMIC||LA192_0==FUNCTION_MODIFIER||(LA192_0 >= LBRACE && LA192_0 <= LBRACKET)||LA192_0==OBJECT_DEFINITION||LA192_0==PACKAGE||LA192_0==SMALLER_OP||LA192_0==UIDENTIFIER||LA192_0==VALUE_MODIFIER||LA192_0==VOID_MODIFIER) ) {
                alt192=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return namedArgument;}
                NoViableAltException nvae =
                    new NoViableAltException("", 192, 0, input);

                throw nvae;

            }
            switch (alt192) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2081:7: namedSpecifiedArgument
                    {
                    pushFollow(FOLLOW_namedSpecifiedArgument_in_namedArgument13934);
                    namedSpecifiedArgument294=namedSpecifiedArgument();

                    state._fsp--;
                    if (state.failed) return namedArgument;

                    if ( state.backtracking==0 ) { namedArgument = namedSpecifiedArgument294; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2084:7: namedArgumentDeclaration
                    {
                    pushFollow(FOLLOW_namedArgumentDeclaration_in_namedArgument13956);
                    namedArgumentDeclaration295=namedArgumentDeclaration();

                    state._fsp--;
                    if (state.failed) return namedArgument;

                    if ( state.backtracking==0 ) { namedArgument = namedArgumentDeclaration295; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { if (namedArgument!=null)
                      namedArgument.getCompilerAnnotations().addAll(compilerAnnotations296); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return namedArgument;
    }
    // $ANTLR end "namedArgument"



    // $ANTLR start "namedSpecifiedArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2091:1: namedSpecifiedArgument returns [SpecifiedArgument specifiedArgument] : memberName ( specifier )? SEMICOLON ;
    public SpecifiedArgument namedSpecifiedArgument() throws RecognitionException {
        SpecifiedArgument specifiedArgument = null;


        Token SEMICOLON299=null;
        Identifier memberName297 =null;

        SpecifierExpression specifier298 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2092:5: ( memberName ( specifier )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2092:7: memberName ( specifier )? SEMICOLON
            {
            pushFollow(FOLLOW_memberName_in_namedSpecifiedArgument13997);
            memberName297=memberName();

            state._fsp--;
            if (state.failed) return specifiedArgument;

            if ( state.backtracking==0 ) { specifiedArgument = new SpecifiedArgument(null); 
                    specifiedArgument.setIdentifier(memberName297); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2095:7: ( specifier )?
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( (LA193_0==SPECIFY) ) {
                alt193=1;
            }
            switch (alt193) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2096:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_namedSpecifiedArgument14023);
                    specifier298=specifier();

                    state._fsp--;
                    if (state.failed) return specifiedArgument;

                    if ( state.backtracking==0 ) { specifiedArgument.setSpecifierExpression(specifier298); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON299=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_namedSpecifiedArgument14059); if (state.failed) return specifiedArgument;

            if ( state.backtracking==0 ) { specifiedArgument.setEndToken(SEMICOLON299); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifiedArgument;
    }
    // $ANTLR end "namedSpecifiedArgument"



    // $ANTLR start "anonymousArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2104:1: anonymousArgument returns [SpecifiedArgument namedArgument] : functionOrExpression SEMICOLON ;
    public SpecifiedArgument anonymousArgument() throws RecognitionException {
        SpecifiedArgument namedArgument = null;


        Token SEMICOLON301=null;
        Expression functionOrExpression300 =null;


         namedArgument = new SpecifiedArgument(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2106:5: ( functionOrExpression SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2106:7: functionOrExpression SEMICOLON
            {
            pushFollow(FOLLOW_functionOrExpression_in_anonymousArgument14097);
            functionOrExpression300=functionOrExpression();

            state._fsp--;
            if (state.failed) return namedArgument;

            if ( state.backtracking==0 ) { SpecifierExpression se = new SpecifierExpression(null);
                   se.setExpression(functionOrExpression300);
                   namedArgument.setSpecifierExpression(se); }

            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON301=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_anonymousArgument14123); if (state.failed) return namedArgument;

            if ( state.backtracking==0 ) { namedArgument.setEndToken(SEMICOLON301); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return namedArgument;
    }
    // $ANTLR end "anonymousArgument"



    // $ANTLR start "objectArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2115:1: objectArgument returns [ObjectArgument declaration] : OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) ;
    public ObjectArgument objectArgument() throws RecognitionException {
        ObjectArgument declaration = null;


        Token OBJECT_DEFINITION302=null;
        Token SEMICOLON307=null;
        Identifier memberNameDeclaration303 =null;

        ExtendedType extendedType304 =null;

        SatisfiedTypes satisfiedTypes305 =null;

        ClassBody classBody306 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2116:5: ( OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2116:7: OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON )
            {
            OBJECT_DEFINITION302=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_objectArgument14152); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new ObjectArgument(OBJECT_DEFINITION302); 
                    declaration.setType(new ValueModifier(null)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2119:7: ( memberNameDeclaration )?
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==LIDENTIFIER||LA194_0==UIDENTIFIER) ) {
                alt194=1;
            }
            switch (alt194) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2120:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_objectArgument14179);
                    memberNameDeclaration303=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration303); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2123:7: ( extendedType )?
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( (LA195_0==EXTENDS) ) {
                alt195=1;
            }
            switch (alt195) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2124:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_objectArgument14217);
                    extendedType304=extendedType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setExtendedType(extendedType304); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2127:7: ( satisfiedTypes )?
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( (LA196_0==SATISFIES) ) {
                alt196=1;
            }
            switch (alt196) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2128:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_objectArgument14256);
                    satisfiedTypes305=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setSatisfiedTypes(satisfiedTypes305); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2131:7: ( classBody | SEMICOLON )
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==LBRACE) ) {
                alt197=1;
            }
            else if ( (LA197_0==SEMICOLON) ) {
                alt197=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 197, 0, input);

                throw nvae;

            }
            switch (alt197) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2132:9: classBody
                    {
                    pushFollow(FOLLOW_classBody_in_objectArgument14294);
                    classBody306=classBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setClassBody(classBody306); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2134:9: SEMICOLON
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LBRACE, input)); }

                    SEMICOLON307=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_objectArgument14324); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON307); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "objectArgument"



    // $ANTLR start "voidOrInferredMethodArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2141:1: voidOrInferredMethodArgument returns [MethodArgument declaration] : ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( block | ( functionSpecifier )? SEMICOLON ) ;
    public MethodArgument voidOrInferredMethodArgument() throws RecognitionException {
        MethodArgument declaration = null;


        Token VOID_MODIFIER308=null;
        Token FUNCTION_MODIFIER309=null;
        Token SEMICOLON315=null;
        Identifier memberNameDeclaration310 =null;

        TypeParameterList typeParameters311 =null;

        ParameterList parameters312 =null;

        Block block313 =null;

        SpecifierExpression functionSpecifier314 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2142:5: ( ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2142:7: ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( block | ( functionSpecifier )? SEMICOLON )
            {
            if ( state.backtracking==0 ) { declaration =new MethodArgument(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2143:7: ( VOID_MODIFIER | FUNCTION_MODIFIER )
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==VOID_MODIFIER) ) {
                alt198=1;
            }
            else if ( (LA198_0==FUNCTION_MODIFIER) ) {
                alt198=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 198, 0, input);

                throw nvae;

            }
            switch (alt198) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2144:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER308=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodArgument14381); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setType(new VoidModifier(VOID_MODIFIER308)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2147:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER309=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodArgument14409); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setType(new FunctionModifier(FUNCTION_MODIFIER309)); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2150:7: ( memberNameDeclaration )?
            int alt199=2;
            int LA199_0 = input.LA(1);

            if ( (LA199_0==LIDENTIFIER||LA199_0==UIDENTIFIER) ) {
                alt199=1;
            }
            switch (alt199) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2151:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_voidOrInferredMethodArgument14446);
                    memberNameDeclaration310=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration310); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2154:7: ( typeParameters )?
            int alt200=2;
            int LA200_0 = input.LA(1);

            if ( (LA200_0==SMALLER_OP) ) {
                alt200=1;
            }
            switch (alt200) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2155:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_voidOrInferredMethodArgument14484);
                    typeParameters311=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeParameterList(typeParameters311); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2158:7: ( parameters )*
            loop201:
            do {
                int alt201=2;
                int LA201_0 = input.LA(1);

                if ( (LA201_0==LPAREN) ) {
                    alt201=1;
                }


                switch (alt201) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2159:9: parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_voidOrInferredMethodArgument14521);
            	    parameters312=parameters();

            	    state._fsp--;
            	    if (state.failed) return declaration;

            	    if ( state.backtracking==0 ) { declaration.addParameterList(parameters312); }

            	    }
            	    break;

            	default :
            	    break loop201;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2162:7: ( block | ( functionSpecifier )? SEMICOLON )
            int alt203=2;
            int LA203_0 = input.LA(1);

            if ( (LA203_0==LBRACE) ) {
                alt203=1;
            }
            else if ( (LA203_0==COMPUTE||LA203_0==SEMICOLON||LA203_0==SPECIFY) ) {
                alt203=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 203, 0, input);

                throw nvae;

            }
            switch (alt203) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2163:9: block
                    {
                    pushFollow(FOLLOW_block_in_voidOrInferredMethodArgument14558);
                    block313=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block313); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2166:9: ( functionSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2166:9: ( functionSpecifier )?
                    int alt202=2;
                    int LA202_0 = input.LA(1);

                    if ( (LA202_0==COMPUTE||LA202_0==SPECIFY) ) {
                        alt202=1;
                    }
                    switch (alt202) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2167:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_voidOrInferredMethodArgument14599);
                            functionSpecifier314=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(functionSpecifier314); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON315=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_voidOrInferredMethodArgument14642); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { expecting=-1; }

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON315); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "voidOrInferredMethodArgument"



    // $ANTLR start "inferredGetterArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2177:1: inferredGetterArgument returns [AttributeArgument declaration] : VALUE_MODIFIER ( memberNameDeclaration )? ( block | ( specifier | lazySpecifier )? SEMICOLON ) ;
    public AttributeArgument inferredGetterArgument() throws RecognitionException {
        AttributeArgument declaration = null;


        Token VALUE_MODIFIER316=null;
        Token SEMICOLON321=null;
        Identifier memberNameDeclaration317 =null;

        Block block318 =null;

        SpecifierExpression specifier319 =null;

        SpecifierExpression lazySpecifier320 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2178:5: ( VALUE_MODIFIER ( memberNameDeclaration )? ( block | ( specifier | lazySpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2178:7: VALUE_MODIFIER ( memberNameDeclaration )? ( block | ( specifier | lazySpecifier )? SEMICOLON )
            {
            if ( state.backtracking==0 ) { declaration =new AttributeArgument(null); }

            VALUE_MODIFIER316=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_inferredGetterArgument14699); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setType(new ValueModifier(VALUE_MODIFIER316)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2181:7: ( memberNameDeclaration )?
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==LIDENTIFIER||LA204_0==UIDENTIFIER) ) {
                alt204=1;
            }
            switch (alt204) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2182:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_inferredGetterArgument14726);
                    memberNameDeclaration317=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration317); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2185:7: ( block | ( specifier | lazySpecifier )? SEMICOLON )
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( (LA206_0==LBRACE) ) {
                alt206=1;
            }
            else if ( (LA206_0==COMPUTE||LA206_0==SEMICOLON||LA206_0==SPECIFY) ) {
                alt206=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 206, 0, input);

                throw nvae;

            }
            switch (alt206) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2186:9: block
                    {
                    pushFollow(FOLLOW_block_in_inferredGetterArgument14764);
                    block318=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block318); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2189:9: ( specifier | lazySpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2189:9: ( specifier | lazySpecifier )?
                    int alt205=3;
                    int LA205_0 = input.LA(1);

                    if ( (LA205_0==SPECIFY) ) {
                        alt205=1;
                    }
                    else if ( (LA205_0==COMPUTE) ) {
                        alt205=2;
                    }
                    switch (alt205) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2190:11: specifier
                            {
                            pushFollow(FOLLOW_specifier_in_inferredGetterArgument14805);
                            specifier319=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(specifier319); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2193:11: lazySpecifier
                            {
                            pushFollow(FOLLOW_lazySpecifier_in_inferredGetterArgument14841);
                            lazySpecifier320=lazySpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(lazySpecifier320); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON321=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_inferredGetterArgument14885); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { expecting=-1; }

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON321); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "inferredGetterArgument"



    // $ANTLR start "typedMethodOrGetterArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2203:1: typedMethodOrGetterArgument returns [TypedArgument declaration] : ( type | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) ) ;
    public TypedArgument typedMethodOrGetterArgument() throws RecognitionException {
        TypedArgument declaration = null;


        Token s1=null;
        Token s2=null;
        Token DYNAMIC323=null;
        Block b1 =null;

        Block b2 =null;

        StaticType type322 =null;

        Identifier memberNameDeclaration324 =null;

        TypeParameterList typeParameters325 =null;

        ParameterList parameters326 =null;

        SpecifierExpression functionSpecifier327 =null;

        SpecifierExpression specifier328 =null;

        SpecifierExpression lazySpecifier329 =null;


         MethodArgument marg = new MethodArgument(null);
                    AttributeArgument aarg = new AttributeArgument(null); 
                    declaration =aarg; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2207:5: ( ( type | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2207:7: ( type | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2207:7: ( type | DYNAMIC )
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( ((LA207_0 >= LBRACE && LA207_0 <= LBRACKET)||LA207_0==PACKAGE||LA207_0==SMALLER_OP||LA207_0==UIDENTIFIER) ) {
                alt207=1;
            }
            else if ( (LA207_0==DYNAMIC) ) {
                alt207=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 207, 0, input);

                throw nvae;

            }
            switch (alt207) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2208:9: type
                    {
                    pushFollow(FOLLOW_type_in_typedMethodOrGetterArgument14953);
                    type322=type();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { marg.setType(type322);
                              aarg.setType(type322); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2212:9: DYNAMIC
                    {
                    DYNAMIC323=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_typedMethodOrGetterArgument14982); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { DynamicModifier dm = new DynamicModifier(DYNAMIC323);
                              marg.setType(dm);
                              aarg.setType(dm); }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberNameDeclaration_in_typedMethodOrGetterArgument15008);
            memberNameDeclaration324=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { marg.setIdentifier(memberNameDeclaration324);
                    aarg.setIdentifier(memberNameDeclaration324); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2220:7: ( ( typeParameters )? ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) )
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==LPAREN||LA214_0==SMALLER_OP) ) {
                alt214=1;
            }
            else if ( (LA214_0==COMPUTE||LA214_0==LBRACE||LA214_0==SEMICOLON||LA214_0==SPECIFY) ) {
                alt214=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 214, 0, input);

                throw nvae;

            }
            switch (alt214) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2221:9: ( typeParameters )? ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON )
                    {
                    if ( state.backtracking==0 ) { declaration = marg; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2222:9: ( typeParameters )?
                    int alt208=2;
                    int LA208_0 = input.LA(1);

                    if ( (LA208_0==SMALLER_OP) ) {
                        alt208=1;
                    }
                    switch (alt208) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2223:11: typeParameters
                            {
                            pushFollow(FOLLOW_typeParameters_in_typedMethodOrGetterArgument15056);
                            typeParameters325=typeParameters();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { marg.setTypeParameterList(typeParameters325); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2226:9: ( parameters )+
                    int cnt209=0;
                    loop209:
                    do {
                        int alt209=2;
                        int LA209_0 = input.LA(1);

                        if ( (LA209_0==LPAREN) ) {
                            alt209=1;
                        }


                        switch (alt209) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2227:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_typedMethodOrGetterArgument15101);
                    	    parameters326=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { marg.addParameterList(parameters326); }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt209 >= 1 ) break loop209;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(209, input);
                                throw eee;
                        }
                        cnt209++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2230:9: (b1= block | ( functionSpecifier )? s1= SEMICOLON )
                    int alt211=2;
                    int LA211_0 = input.LA(1);

                    if ( (LA211_0==LBRACE) ) {
                        alt211=1;
                    }
                    else if ( (LA211_0==COMPUTE||LA211_0==SEMICOLON||LA211_0==SPECIFY) ) {
                        alt211=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 211, 0, input);

                        throw nvae;

                    }
                    switch (alt211) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2231:11: b1= block
                            {
                            pushFollow(FOLLOW_block_in_typedMethodOrGetterArgument15148);
                            b1=block();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { marg.setBlock(b1); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2234:11: ( functionSpecifier )? s1= SEMICOLON
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2234:11: ( functionSpecifier )?
                            int alt210=2;
                            int LA210_0 = input.LA(1);

                            if ( (LA210_0==COMPUTE||LA210_0==SPECIFY) ) {
                                alt210=1;
                            }
                            switch (alt210) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2235:13: functionSpecifier
                                    {
                                    pushFollow(FOLLOW_functionSpecifier_in_typedMethodOrGetterArgument15197);
                                    functionSpecifier327=functionSpecifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { marg.setSpecifierExpression(functionSpecifier327); }

                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                            s1=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument15250); if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { expecting=-1; }

                            if ( state.backtracking==0 ) { declaration.setEndToken(s1); }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2244:9: (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON )
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2244:9: (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON )
                    int alt213=2;
                    int LA213_0 = input.LA(1);

                    if ( (LA213_0==LBRACE) ) {
                        alt213=1;
                    }
                    else if ( (LA213_0==COMPUTE||LA213_0==SEMICOLON||LA213_0==SPECIFY) ) {
                        alt213=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 213, 0, input);

                        throw nvae;

                    }
                    switch (alt213) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2245:11: b2= block
                            {
                            pushFollow(FOLLOW_block_in_typedMethodOrGetterArgument15316);
                            b2=block();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { aarg.setBlock(b2); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2248:11: ( specifier | lazySpecifier )? s2= SEMICOLON
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2248:11: ( specifier | lazySpecifier )?
                            int alt212=3;
                            int LA212_0 = input.LA(1);

                            if ( (LA212_0==SPECIFY) ) {
                                alt212=1;
                            }
                            else if ( (LA212_0==COMPUTE) ) {
                                alt212=2;
                            }
                            switch (alt212) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2249:13: specifier
                                    {
                                    pushFollow(FOLLOW_specifier_in_typedMethodOrGetterArgument15365);
                                    specifier328=specifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { aarg.setSpecifierExpression(specifier328); }

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2252:13: lazySpecifier
                                    {
                                    pushFollow(FOLLOW_lazySpecifier_in_typedMethodOrGetterArgument15407);
                                    lazySpecifier329=lazySpecifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { aarg.setSpecifierExpression(lazySpecifier329); }

                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                            s2=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument15461); if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { expecting=-1; }

                            if ( state.backtracking==0 ) { declaration.setEndToken(s2); }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "typedMethodOrGetterArgument"



    // $ANTLR start "untypedMethodOrGetterArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2263:1: untypedMethodOrGetterArgument returns [TypedArgument declaration] : memberName ( ( parameters )+ ( functionSpecifier ) | lazySpecifier ) SEMICOLON ;
    public TypedArgument untypedMethodOrGetterArgument() throws RecognitionException {
        TypedArgument declaration = null;


        Token SEMICOLON334=null;
        Identifier memberName330 =null;

        ParameterList parameters331 =null;

        SpecifierExpression functionSpecifier332 =null;

        SpecifierExpression lazySpecifier333 =null;


         MethodArgument marg = new MethodArgument(null);
                    marg.setType(new FunctionModifier(null));
                    AttributeArgument aarg = new AttributeArgument(null);
                    aarg.setType(new ValueModifier(null));
                    declaration =aarg; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2269:5: ( memberName ( ( parameters )+ ( functionSpecifier ) | lazySpecifier ) SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2269:7: memberName ( ( parameters )+ ( functionSpecifier ) | lazySpecifier ) SEMICOLON
            {
            pushFollow(FOLLOW_memberName_in_untypedMethodOrGetterArgument15533);
            memberName330=memberName();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { marg.setIdentifier(memberName330);
                    aarg.setIdentifier(memberName330); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2272:7: ( ( parameters )+ ( functionSpecifier ) | lazySpecifier )
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==LPAREN) ) {
                alt216=1;
            }
            else if ( (LA216_0==COMPUTE) ) {
                alt216=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 216, 0, input);

                throw nvae;

            }
            switch (alt216) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2273:9: ( parameters )+ ( functionSpecifier )
                    {
                    if ( state.backtracking==0 ) { declaration = marg; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2274:9: ( parameters )+
                    int cnt215=0;
                    loop215:
                    do {
                        int alt215=2;
                        int LA215_0 = input.LA(1);

                        if ( (LA215_0==LPAREN) ) {
                            alt215=1;
                        }


                        switch (alt215) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2275:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_untypedMethodOrGetterArgument15582);
                    	    parameters331=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { marg.addParameterList(parameters331); }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt215 >= 1 ) break loop215;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(215, input);
                                throw eee;
                        }
                        cnt215++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2278:9: ( functionSpecifier )
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2279:11: functionSpecifier
                    {
                    pushFollow(FOLLOW_functionSpecifier_in_untypedMethodOrGetterArgument15627);
                    functionSpecifier332=functionSpecifier();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { marg.setSpecifierExpression(functionSpecifier332); }

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2287:11: lazySpecifier
                    {
                    pushFollow(FOLLOW_lazySpecifier_in_untypedMethodOrGetterArgument15705);
                    lazySpecifier333=lazySpecifier();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { aarg.setSpecifierExpression(lazySpecifier333); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON334=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_untypedMethodOrGetterArgument15751); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { expecting=-1; }

            if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON334); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "untypedMethodOrGetterArgument"



    // $ANTLR start "namedArgumentDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2297:1: namedArgumentDeclaration returns [NamedArgument declaration] : ( objectArgument | typedMethodOrGetterArgument | voidOrInferredMethodArgument | inferredGetterArgument | untypedMethodOrGetterArgument );
    public NamedArgument namedArgumentDeclaration() throws RecognitionException {
        NamedArgument declaration = null;


        ObjectArgument objectArgument335 =null;

        TypedArgument typedMethodOrGetterArgument336 =null;

        MethodArgument voidOrInferredMethodArgument337 =null;

        AttributeArgument inferredGetterArgument338 =null;

        TypedArgument untypedMethodOrGetterArgument339 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2298:5: ( objectArgument | typedMethodOrGetterArgument | voidOrInferredMethodArgument | inferredGetterArgument | untypedMethodOrGetterArgument )
            int alt217=5;
            switch ( input.LA(1) ) {
            case OBJECT_DEFINITION:
                {
                alt217=1;
                }
                break;
            case DYNAMIC:
            case LBRACE:
            case LBRACKET:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt217=2;
                }
                break;
            case FUNCTION_MODIFIER:
            case VOID_MODIFIER:
                {
                alt217=3;
                }
                break;
            case VALUE_MODIFIER:
                {
                alt217=4;
                }
                break;
            case LIDENTIFIER:
                {
                alt217=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 217, 0, input);

                throw nvae;

            }

            switch (alt217) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2298:7: objectArgument
                    {
                    pushFollow(FOLLOW_objectArgument_in_namedArgumentDeclaration15788);
                    objectArgument335=objectArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =objectArgument335; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2300:7: typedMethodOrGetterArgument
                    {
                    pushFollow(FOLLOW_typedMethodOrGetterArgument_in_namedArgumentDeclaration15804);
                    typedMethodOrGetterArgument336=typedMethodOrGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =typedMethodOrGetterArgument336; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2302:7: voidOrInferredMethodArgument
                    {
                    pushFollow(FOLLOW_voidOrInferredMethodArgument_in_namedArgumentDeclaration15820);
                    voidOrInferredMethodArgument337=voidOrInferredMethodArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =voidOrInferredMethodArgument337; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2304:7: inferredGetterArgument
                    {
                    pushFollow(FOLLOW_inferredGetterArgument_in_namedArgumentDeclaration15836);
                    inferredGetterArgument338=inferredGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =inferredGetterArgument338; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2306:7: untypedMethodOrGetterArgument
                    {
                    pushFollow(FOLLOW_untypedMethodOrGetterArgument_in_namedArgumentDeclaration15852);
                    untypedMethodOrGetterArgument339=untypedMethodOrGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =untypedMethodOrGetterArgument339; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "namedArgumentDeclaration"



    // $ANTLR start "namedArgumentStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2313:1: namedArgumentStart : compilerAnnotations ( specificationStart | declarationStart ) ;
    public void namedArgumentStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2314:5: ( compilerAnnotations ( specificationStart | declarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2314:7: compilerAnnotations ( specificationStart | declarationStart )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_namedArgumentStart15880);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2315:7: ( specificationStart | declarationStart )
            int alt218=2;
            int LA218_0 = input.LA(1);

            if ( (LA218_0==LIDENTIFIER) ) {
                alt218=1;
            }
            else if ( (LA218_0==ALIAS||LA218_0==ASSIGN||LA218_0==CLASS_DEFINITION||LA218_0==DYNAMIC||LA218_0==FUNCTION_MODIFIER||LA218_0==INTERFACE_DEFINITION||(LA218_0 >= LBRACE && LA218_0 <= LBRACKET)||LA218_0==NEW||LA218_0==OBJECT_DEFINITION||LA218_0==PACKAGE||LA218_0==SMALLER_OP||LA218_0==UIDENTIFIER||LA218_0==VALUE_MODIFIER||LA218_0==VOID_MODIFIER) ) {
                alt218=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 218, 0, input);

                throw nvae;

            }
            switch (alt218) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2315:8: specificationStart
                    {
                    pushFollow(FOLLOW_specificationStart_in_namedArgumentStart15890);
                    specificationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2315:29: declarationStart
                    {
                    pushFollow(FOLLOW_declarationStart_in_namedArgumentStart15894);
                    declarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "namedArgumentStart"



    // $ANTLR start "namedAnnotationArgumentsStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2318:1: namedAnnotationArgumentsStart : LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE ) ;
    public void namedAnnotationArgumentsStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2319:5: ( LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2319:7: LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE )
            {
            match(input,LBRACE,FOLLOW_LBRACE_in_namedAnnotationArgumentsStart15912); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2319:14: ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE )
            int alt219=3;
            int LA219_0 = input.LA(1);

            if ( (LA219_0==COMPILER_ANNOTATION) ) {
                int LA219_1 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt219=1;
                }
                else if ( (true) ) {
                    alt219=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 219, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA219_0==LIDENTIFIER) ) {
                int LA219_2 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt219=1;
                }
                else if ( (true) ) {
                    alt219=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 219, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA219_0==VALUE_MODIFIER) && (synpred31_Ceylon())) {
                alt219=1;
            }
            else if ( (LA219_0==FUNCTION_MODIFIER) && (synpred31_Ceylon())) {
                alt219=1;
            }
            else if ( (LA219_0==VOID_MODIFIER) && (synpred31_Ceylon())) {
                alt219=1;
            }
            else if ( (LA219_0==ASSIGN) && (synpred31_Ceylon())) {
                alt219=1;
            }
            else if ( (LA219_0==INTERFACE_DEFINITION) && (synpred31_Ceylon())) {
                alt219=1;
            }
            else if ( (LA219_0==CLASS_DEFINITION) && (synpred31_Ceylon())) {
                alt219=1;
            }
            else if ( (LA219_0==OBJECT_DEFINITION) ) {
                int LA219_9 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt219=1;
                }
                else if ( (true) ) {
                    alt219=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 219, 9, input);

                    throw nvae;

                }
            }
            else if ( (LA219_0==NEW) && (synpred31_Ceylon())) {
                alt219=1;
            }
            else if ( (LA219_0==ALIAS) && (synpred31_Ceylon())) {
                alt219=1;
            }
            else if ( (LA219_0==UIDENTIFIER) ) {
                int LA219_12 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt219=1;
                }
                else if ( (true) ) {
                    alt219=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 219, 12, input);

                    throw nvae;

                }
            }
            else if ( (LA219_0==SMALLER_OP) && (synpred31_Ceylon())) {
                alt219=1;
            }
            else if ( (LA219_0==PACKAGE) ) {
                int LA219_14 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt219=1;
                }
                else if ( (true) ) {
                    alt219=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 219, 14, input);

                    throw nvae;

                }
            }
            else if ( (LA219_0==LBRACKET) ) {
                int LA219_15 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt219=1;
                }
                else if ( (true) ) {
                    alt219=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 219, 15, input);

                    throw nvae;

                }
            }
            else if ( (LA219_0==LBRACE) ) {
                int LA219_16 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt219=1;
                }
                else if ( (true) ) {
                    alt219=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 219, 16, input);

                    throw nvae;

                }
            }
            else if ( (LA219_0==DYNAMIC) ) {
                int LA219_17 = input.LA(2);

                if ( (synpred31_Ceylon()) ) {
                    alt219=1;
                }
                else if ( (true) ) {
                    alt219=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 219, 17, input);

                    throw nvae;

                }
            }
            else if ( (LA219_0==BACKTICK||LA219_0==CHAR_LITERAL||(LA219_0 >= DECREMENT_OP && LA219_0 <= DIFFERENCE_OP)||LA219_0==FLOAT_LITERAL||LA219_0==INCREMENT_OP||LA219_0==LPAREN||LA219_0==NATURAL_LITERAL||LA219_0==NOT_OP||LA219_0==OUTER||LA219_0==STRING_LITERAL||LA219_0==STRING_START||(LA219_0 >= SUM_OP && LA219_0 <= SUPER)||LA219_0==THIS||LA219_0==VERBATIM_STRING) ) {
                alt219=2;
            }
            else if ( (LA219_0==RBRACE) ) {
                alt219=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 219, 0, input);

                throw nvae;

            }
            switch (alt219) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2319:15: ( namedArgumentStart )=> namedArgumentStart
                    {
                    pushFollow(FOLLOW_namedArgumentStart_in_namedAnnotationArgumentsStart15919);
                    namedArgumentStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2319:58: iterableArgumentStart
                    {
                    pushFollow(FOLLOW_iterableArgumentStart_in_namedAnnotationArgumentsStart15923);
                    iterableArgumentStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2319:82: RBRACE
                    {
                    match(input,RBRACE,FOLLOW_RBRACE_in_namedAnnotationArgumentsStart15927); if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "namedAnnotationArgumentsStart"



    // $ANTLR start "iterableArgumentStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2322:1: iterableArgumentStart : compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE ) ;
    public void iterableArgumentStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2323:5: ( compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2323:7: compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_iterableArgumentStart15945);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_expression_in_iterableArgumentStart15947);
            expression();

            state._fsp--;
            if (state.failed) return ;

            if ( input.LA(1)==COMMA||input.LA(1)==RBRACE||input.LA(1)==SEMICOLON ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "iterableArgumentStart"



    // $ANTLR start "specificationStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2327:1: specificationStart : LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE ) ;
    public void specificationStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2328:5: ( LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2328:7: LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE )
            {
            match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_specificationStart15973); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2328:19: ( parameters )*
            loop220:
            do {
                int alt220=2;
                int LA220_0 = input.LA(1);

                if ( (LA220_0==LPAREN) ) {
                    alt220=1;
                }


                switch (alt220) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2328:19: parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_specificationStart15975);
            	    parameters();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop220;
                }
            } while (true);


            if ( input.LA(1)==COMPUTE||input.LA(1)==SPECIFY ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "specificationStart"



    // $ANTLR start "parExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2331:1: parExpression returns [Expression expression] : LPAREN functionOrExpression RPAREN ;
    public Expression parExpression() throws RecognitionException {
        Expression expression = null;


        Token LPAREN340=null;
        Token RPAREN342=null;
        Expression functionOrExpression341 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2332:5: ( LPAREN functionOrExpression RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2332:7: LPAREN functionOrExpression RPAREN
            {
            LPAREN340=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parExpression16004); if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression = new Expression(LPAREN340); }

            pushFollow(FOLLOW_functionOrExpression_in_parExpression16021);
            functionOrExpression341=functionOrExpression();

            state._fsp--;
            if (state.failed) return expression;

            if ( state.backtracking==0 ) { if (functionOrExpression341!=null)
                        expression.setTerm(functionOrExpression341.getTerm()); }

            RPAREN342=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parExpression16037); if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression.setEndToken(RPAREN342); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "parExpression"



    // $ANTLR start "positionalArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2341:1: positionalArguments returns [PositionalArgumentList positionalArgumentList] : LPAREN (sa= sequencedArgument )? RPAREN ;
    public PositionalArgumentList positionalArguments() throws RecognitionException {
        PositionalArgumentList positionalArgumentList = null;


        Token LPAREN343=null;
        Token RPAREN344=null;
        SequencedArgument sa =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2342:5: ( LPAREN (sa= sequencedArgument )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2342:7: LPAREN (sa= sequencedArgument )? RPAREN
            {
            LPAREN343=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_positionalArguments16074); if (state.failed) return positionalArgumentList;

            if ( state.backtracking==0 ) { positionalArgumentList = new PositionalArgumentList(LPAREN343); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2344:7: (sa= sequencedArgument )?
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==ALIAS||(LA221_0 >= ASSERT && LA221_0 <= ASSIGN)||(LA221_0 >= BACKTICK && LA221_0 <= BREAK)||(LA221_0 >= CHAR_LITERAL && LA221_0 <= CLASS_DEFINITION)||LA221_0==COMPILER_ANNOTATION||LA221_0==CONTINUE||(LA221_0 >= DECREMENT_OP && LA221_0 <= DIFFERENCE_OP)||LA221_0==DYNAMIC||(LA221_0 >= FLOAT_LITERAL && LA221_0 <= FUNCTION_MODIFIER)||(LA221_0 >= IF_CLAUSE && LA221_0 <= INTERFACE_DEFINITION)||LA221_0==IN_OP||(LA221_0 >= LBRACE && LA221_0 <= LIDENTIFIER)||LA221_0==LPAREN||LA221_0==MODULE||(LA221_0 >= NATURAL_LITERAL && LA221_0 <= NEW)||(LA221_0 >= NOT_OP && LA221_0 <= OBJECT_DEFINITION)||(LA221_0 >= OUT && LA221_0 <= PACKAGE)||LA221_0==PRODUCT_OP||LA221_0==RETURN||(LA221_0 >= SEMICOLON && LA221_0 <= SMALLER_OP)||LA221_0==STRING_LITERAL||LA221_0==STRING_START||(LA221_0 >= SUM_OP && LA221_0 <= SWITCH_CLAUSE)||(LA221_0 >= THIS && LA221_0 <= UIDENTIFIER)||(LA221_0 >= VALUE_MODIFIER && LA221_0 <= WHILE_CLAUSE)) ) {
                alt221=1;
            }
            switch (alt221) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2345:9: sa= sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_positionalArguments16103);
                    sa=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return positionalArgumentList;

                    if ( state.backtracking==0 ) { if (sa!=null) {
                                  for (PositionalArgument pa: sa.getPositionalArguments())
                                      positionalArgumentList.addPositionalArgument(pa);
                                  //TODO: this is really nasty, PositionalArgumentList should have
                                  //      or be a SequencedArgument, not copy its PositionalArguments!
                                  positionalArgumentList.setEndToken(sa.getMainEndToken()); } }

                    }
                    break;

            }


            RPAREN344=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_positionalArguments16130); if (state.failed) return positionalArgumentList;

            if ( state.backtracking==0 ) { positionalArgumentList.setEndToken(RPAREN344); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return positionalArgumentList;
    }
    // $ANTLR end "positionalArguments"



    // $ANTLR start "positionalArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2357:1: positionalArgument returns [ListedArgument positionalArgument] : functionOrExpression ;
    public ListedArgument positionalArgument() throws RecognitionException {
        ListedArgument positionalArgument = null;


        Expression functionOrExpression345 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2358:5: ( functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2358:7: functionOrExpression
            {
            if ( state.backtracking==0 ) { positionalArgument = new ListedArgument(null); }

            pushFollow(FOLLOW_functionOrExpression_in_positionalArgument16167);
            functionOrExpression345=functionOrExpression();

            state._fsp--;
            if (state.failed) return positionalArgument;

            if ( state.backtracking==0 ) { positionalArgument.setExpression(functionOrExpression345); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return positionalArgument;
    }
    // $ANTLR end "positionalArgument"



    // $ANTLR start "spreadArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2363:1: spreadArgument returns [SpreadArgument positionalArgument] : PRODUCT_OP unionExpression ;
    public SpreadArgument spreadArgument() throws RecognitionException {
        SpreadArgument positionalArgument = null;


        Token PRODUCT_OP346=null;
        Term unionExpression347 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2364:5: ( PRODUCT_OP unionExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2364:7: PRODUCT_OP unionExpression
            {
            PRODUCT_OP346=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_spreadArgument16196); if (state.failed) return positionalArgument;

            if ( state.backtracking==0 ) { positionalArgument = new SpreadArgument(PRODUCT_OP346); }

            pushFollow(FOLLOW_unionExpression_in_spreadArgument16212);
            unionExpression347=unionExpression();

            state._fsp--;
            if (state.failed) return positionalArgument;

            if ( state.backtracking==0 ) { Expression e = new Expression(null);
                    e.setTerm(unionExpression347);
                    positionalArgument.setExpression(e); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return positionalArgument;
    }
    // $ANTLR end "spreadArgument"



    // $ANTLR start "anonParametersStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2372:1: anonParametersStart : ( typeParameters )? LPAREN ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) ) | compilerAnnotations annotatedDeclarationStart ) ;
    public void anonParametersStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2373:5: ( ( typeParameters )? LPAREN ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) ) | compilerAnnotations annotatedDeclarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2373:7: ( typeParameters )? LPAREN ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) ) | compilerAnnotations annotatedDeclarationStart )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2373:7: ( typeParameters )?
            int alt222=2;
            int LA222_0 = input.LA(1);

            if ( (LA222_0==SMALLER_OP) ) {
                alt222=1;
            }
            switch (alt222) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2373:7: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_anonParametersStart16237);
                    typeParameters();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            match(input,LPAREN,FOLLOW_LPAREN_in_anonParametersStart16244); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2375:5: ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) ) | compilerAnnotations annotatedDeclarationStart )
            int alt224=3;
            switch ( input.LA(1) ) {
            case RPAREN:
                {
                alt224=1;
                }
                break;
            case LIDENTIFIER:
                {
                int LA224_2 = input.LA(2);

                if ( (LA224_2==COMMA||LA224_2==RPAREN) ) {
                    alt224=2;
                }
                else if ( (LA224_2==ALIAS||LA224_2==ASSIGN||LA224_2==CLASS_DEFINITION||LA224_2==DYNAMIC||LA224_2==FUNCTION_MODIFIER||LA224_2==INTERFACE_DEFINITION||(LA224_2 >= LBRACE && LA224_2 <= LBRACKET)||LA224_2==LIDENTIFIER||LA224_2==LPAREN||LA224_2==NEW||LA224_2==OBJECT_DEFINITION||LA224_2==PACKAGE||LA224_2==SMALLER_OP||LA224_2==UIDENTIFIER||LA224_2==VALUE_MODIFIER||LA224_2==VOID_MODIFIER) ) {
                    alt224=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 224, 2, input);

                    throw nvae;

                }
                }
                break;
            case ALIAS:
            case ASSIGN:
            case CLASS_DEFINITION:
            case COMPILER_ANNOTATION:
            case DYNAMIC:
            case FUNCTION_MODIFIER:
            case INTERFACE_DEFINITION:
            case LBRACE:
            case LBRACKET:
            case NEW:
            case OBJECT_DEFINITION:
            case PACKAGE:
            case SMALLER_OP:
            case STRING_LITERAL:
            case UIDENTIFIER:
            case VALUE_MODIFIER:
            case VERBATIM_STRING:
            case VOID_MODIFIER:
                {
                alt224=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 224, 0, input);

                throw nvae;

            }

            switch (alt224) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2376:7: RPAREN
                    {
                    match(input,RPAREN,FOLLOW_RPAREN_in_anonParametersStart16260); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2377:7: LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) )
                    {
                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_anonParametersStart16268); if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2377:19: ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) )
                    int alt223=2;
                    int LA223_0 = input.LA(1);

                    if ( (LA223_0==COMMA) ) {
                        alt223=1;
                    }
                    else if ( (LA223_0==RPAREN) ) {
                        alt223=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 223, 0, input);

                        throw nvae;

                    }
                    switch (alt223) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2377:20: COMMA
                            {
                            match(input,COMMA,FOLLOW_COMMA_in_anonParametersStart16271); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2377:28: RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT )
                            {
                            match(input,RPAREN,FOLLOW_RPAREN_in_anonParametersStart16275); if (state.failed) return ;

                            if ( input.LA(1)==COMPUTE||input.LA(1)==LBRACE||input.LA(1)==TYPE_CONSTRAINT ) {
                                input.consume();
                                state.errorRecovery=false;
                                state.failed=false;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return ;}
                                MismatchedSetException mse = new MismatchedSetException(null,input);
                                throw mse;
                            }


                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2378:7: compilerAnnotations annotatedDeclarationStart
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_anonParametersStart16293);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    pushFollow(FOLLOW_annotatedDeclarationStart_in_anonParametersStart16295);
                    annotatedDeclarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "anonParametersStart"



    // $ANTLR start "nonemptyParametersStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2382:1: nonemptyParametersStart : LPAREN compilerAnnotations annotatedDeclarationStart ;
    public void nonemptyParametersStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2383:5: ( LPAREN compilerAnnotations annotatedDeclarationStart )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2383:7: LPAREN compilerAnnotations annotatedDeclarationStart
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_nonemptyParametersStart16319); if (state.failed) return ;

            pushFollow(FOLLOW_compilerAnnotations_in_nonemptyParametersStart16321);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_annotatedDeclarationStart_in_nonemptyParametersStart16323);
            annotatedDeclarationStart();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "nonemptyParametersStart"



    // $ANTLR start "functionOrExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2386:1: functionOrExpression returns [Expression expression] : ( ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=> anonymousFunction | let | ifExpression | switchExpression |e= expression );
    public Expression functionOrExpression() throws RecognitionException {
        Expression expression = null;


        Expression e =null;

        FunctionArgument anonymousFunction348 =null;

        LetExpression let349 =null;

        IfExpression ifExpression350 =null;

        SwitchExpression switchExpression351 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2387:5: ( ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=> anonymousFunction | let | ifExpression | switchExpression |e= expression )
            int alt225=5;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==FUNCTION_MODIFIER) && (synpred32_Ceylon())) {
                alt225=1;
            }
            else if ( (LA225_0==VOID_MODIFIER) && (synpred32_Ceylon())) {
                alt225=1;
            }
            else if ( (LA225_0==SMALLER_OP) && (synpred32_Ceylon())) {
                alt225=1;
            }
            else if ( (LA225_0==LPAREN) ) {
                int LA225_4 = input.LA(2);

                if ( (synpred32_Ceylon()) ) {
                    alt225=1;
                }
                else if ( (true) ) {
                    alt225=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return expression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 225, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA225_0==LET) ) {
                alt225=2;
            }
            else if ( (LA225_0==IF_CLAUSE) ) {
                alt225=3;
            }
            else if ( (LA225_0==SWITCH_CLAUSE) ) {
                alt225=4;
            }
            else if ( (LA225_0==BACKTICK||LA225_0==CHAR_LITERAL||(LA225_0 >= DECREMENT_OP && LA225_0 <= DIFFERENCE_OP)||LA225_0==DYNAMIC||LA225_0==FLOAT_LITERAL||LA225_0==INCREMENT_OP||(LA225_0 >= LBRACE && LA225_0 <= LBRACKET)||LA225_0==LIDENTIFIER||LA225_0==NATURAL_LITERAL||(LA225_0 >= NOT_OP && LA225_0 <= OBJECT_DEFINITION)||(LA225_0 >= OUTER && LA225_0 <= PACKAGE)||LA225_0==STRING_LITERAL||LA225_0==STRING_START||(LA225_0 >= SUM_OP && LA225_0 <= SUPER)||LA225_0==THIS||LA225_0==UIDENTIFIER||LA225_0==VERBATIM_STRING) ) {
                alt225=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return expression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 225, 0, input);

                throw nvae;

            }
            switch (alt225) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2387:7: ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=> anonymousFunction
                    {
                    pushFollow(FOLLOW_anonymousFunction_in_functionOrExpression16360);
                    anonymousFunction348=anonymousFunction();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(anonymousFunction348); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2391:7: let
                    {
                    pushFollow(FOLLOW_let_in_functionOrExpression16376);
                    let349=let();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(let349); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2394:7: ifExpression
                    {
                    pushFollow(FOLLOW_ifExpression_in_functionOrExpression16392);
                    ifExpression350=ifExpression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(ifExpression350); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2397:7: switchExpression
                    {
                    pushFollow(FOLLOW_switchExpression_in_functionOrExpression16408);
                    switchExpression351=switchExpression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null); 
                            expression.setTerm(switchExpression351); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2400:7: e= expression
                    {
                    pushFollow(FOLLOW_expression_in_functionOrExpression16426);
                    e=expression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = e; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "functionOrExpression"



    // $ANTLR start "let"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2404:1: let returns [LetExpression let] : letClause ;
    public LetExpression let() throws RecognitionException {
        LetExpression let = null;


        LetClause letClause352 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2405:5: ( letClause )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2405:7: letClause
            {
            pushFollow(FOLLOW_letClause_in_let16455);
            letClause352=letClause();

            state._fsp--;
            if (state.failed) return let;

            if ( state.backtracking==0 ) { let = new LetExpression(null);
                    let.setLetClause(letClause352); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return let;
    }
    // $ANTLR end "let"



    // $ANTLR start "patternStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2410:1: patternStart : ( ( variable ENTRY_OP )=> variable ENTRY_OP | tuplePatternStart );
    public void patternStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2411:5: ( ( variable ENTRY_OP )=> variable ENTRY_OP | tuplePatternStart )
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( (LA226_0==COMPILER_ANNOTATION) && (synpred33_Ceylon())) {
                alt226=1;
            }
            else if ( (LA226_0==SMALLER_OP) && (synpred33_Ceylon())) {
                alt226=1;
            }
            else if ( (LA226_0==UIDENTIFIER) && (synpred33_Ceylon())) {
                alt226=1;
            }
            else if ( (LA226_0==PACKAGE) && (synpred33_Ceylon())) {
                alt226=1;
            }
            else if ( (LA226_0==LBRACKET) ) {
                int LA226_5 = input.LA(2);

                if ( (synpred33_Ceylon()) ) {
                    alt226=1;
                }
                else if ( (true) ) {
                    alt226=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 226, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA226_0==LBRACE) && (synpred33_Ceylon())) {
                alt226=1;
            }
            else if ( (LA226_0==VOID_MODIFIER) && (synpred33_Ceylon())) {
                alt226=1;
            }
            else if ( (LA226_0==FUNCTION_MODIFIER) && (synpred33_Ceylon())) {
                alt226=1;
            }
            else if ( (LA226_0==VALUE_MODIFIER) && (synpred33_Ceylon())) {
                alt226=1;
            }
            else if ( (LA226_0==LIDENTIFIER) && (synpred33_Ceylon())) {
                alt226=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 226, 0, input);

                throw nvae;

            }
            switch (alt226) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2411:7: ( variable ENTRY_OP )=> variable ENTRY_OP
                    {
                    pushFollow(FOLLOW_variable_in_patternStart16488);
                    variable();

                    state._fsp--;
                    if (state.failed) return ;

                    match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_patternStart16490); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2412:7: tuplePatternStart
                    {
                    pushFollow(FOLLOW_tuplePatternStart_in_patternStart16501);
                    tuplePatternStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "patternStart"



    // $ANTLR start "letVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2415:1: letVariable returns [Statement statement] : ( ( patternStart )=> pattern | variable ) ( specifier )? ;
    public Statement letVariable() throws RecognitionException {
        Statement statement = null;


        Pattern pattern353 =null;

        Variable variable354 =null;

        SpecifierExpression specifier355 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2416:5: ( ( ( patternStart )=> pattern | variable ) ( specifier )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2416:7: ( ( patternStart )=> pattern | variable ) ( specifier )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2416:7: ( ( patternStart )=> pattern | variable )
            int alt227=2;
            switch ( input.LA(1) ) {
            case LBRACKET:
                {
                int LA227_1 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt227=1;
                }
                else if ( (true) ) {
                    alt227=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 227, 1, input);

                    throw nvae;

                }
                }
                break;
            case COMPILER_ANNOTATION:
                {
                int LA227_2 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt227=1;
                }
                else if ( (true) ) {
                    alt227=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 227, 2, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA227_3 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt227=1;
                }
                else if ( (true) ) {
                    alt227=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 227, 3, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA227_4 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt227=1;
                }
                else if ( (true) ) {
                    alt227=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 227, 4, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA227_5 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt227=1;
                }
                else if ( (true) ) {
                    alt227=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 227, 5, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA227_6 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt227=1;
                }
                else if ( (true) ) {
                    alt227=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 227, 6, input);

                    throw nvae;

                }
                }
                break;
            case VOID_MODIFIER:
                {
                int LA227_7 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt227=1;
                }
                else if ( (true) ) {
                    alt227=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 227, 7, input);

                    throw nvae;

                }
                }
                break;
            case FUNCTION_MODIFIER:
                {
                int LA227_8 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt227=1;
                }
                else if ( (true) ) {
                    alt227=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 227, 8, input);

                    throw nvae;

                }
                }
                break;
            case VALUE_MODIFIER:
                {
                int LA227_9 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt227=1;
                }
                else if ( (true) ) {
                    alt227=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 227, 9, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA227_10 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt227=1;
                }
                else if ( (true) ) {
                    alt227=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 227, 10, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 227, 0, input);

                throw nvae;

            }

            switch (alt227) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2417:9: ( patternStart )=> pattern
                    {
                    pushFollow(FOLLOW_pattern_in_letVariable16538);
                    pattern353=pattern();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { Destructure d = new Destructure(null);
                              d.setPattern(pattern353);
                              statement = d; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2422:9: variable
                    {
                    pushFollow(FOLLOW_variable_in_letVariable16566);
                    variable354=variable();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =variable354; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2425:7: ( specifier )?
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( (LA228_0==SPECIFY) ) {
                alt228=1;
            }
            switch (alt228) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2426:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_letVariable16602);
                    specifier355=specifier();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { if (statement instanceof Destructure)
                                ((Destructure) statement).setSpecifierExpression(specifier355);
                              else if (statement instanceof Variable)
                                ((Variable) statement).setSpecifierExpression(specifier355); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "letVariable"



    // $ANTLR start "letClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2434:1: letClause returns [LetClause letClause] : LET LPAREN (v1= letVariable ( COMMA v2= letVariable )* )? RPAREN conditionalBranch ;
    public LetClause letClause() throws RecognitionException {
        LetClause letClause = null;


        Token LET356=null;
        Token LPAREN357=null;
        Token COMMA358=null;
        Token RPAREN359=null;
        Statement v1 =null;

        Statement v2 =null;

        Expression conditionalBranch360 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2435:5: ( LET LPAREN (v1= letVariable ( COMMA v2= letVariable )* )? RPAREN conditionalBranch )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2435:7: LET LPAREN (v1= letVariable ( COMMA v2= letVariable )* )? RPAREN conditionalBranch
            {
            LET356=(Token)match(input,LET,FOLLOW_LET_in_letClause16642); if (state.failed) return letClause;

            if ( state.backtracking==0 ) { letClause = new LetClause(LET356); }

            LPAREN357=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_letClause16658); if (state.failed) return letClause;

            if ( state.backtracking==0 ) { letClause.setEndToken(LPAREN357); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2439:7: (v1= letVariable ( COMMA v2= letVariable )* )?
            int alt230=2;
            int LA230_0 = input.LA(1);

            if ( (LA230_0==COMPILER_ANNOTATION||LA230_0==FUNCTION_MODIFIER||(LA230_0 >= LBRACE && LA230_0 <= LBRACKET)||LA230_0==LIDENTIFIER||LA230_0==PACKAGE||LA230_0==SMALLER_OP||LA230_0==UIDENTIFIER||LA230_0==VALUE_MODIFIER||LA230_0==VOID_MODIFIER) ) {
                alt230=1;
            }
            switch (alt230) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2440:9: v1= letVariable ( COMMA v2= letVariable )*
                    {
                    pushFollow(FOLLOW_letVariable_in_letClause16686);
                    v1=letVariable();

                    state._fsp--;
                    if (state.failed) return letClause;

                    if ( state.backtracking==0 ) { letClause.setEndToken(null);
                              letClause.addVariable(v1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2443:9: ( COMMA v2= letVariable )*
                    loop229:
                    do {
                        int alt229=2;
                        int LA229_0 = input.LA(1);

                        if ( (LA229_0==COMMA) ) {
                            alt229=1;
                        }


                        switch (alt229) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2444:11: COMMA v2= letVariable
                    	    {
                    	    COMMA358=(Token)match(input,COMMA,FOLLOW_COMMA_in_letClause16718); if (state.failed) return letClause;

                    	    if ( state.backtracking==0 ) { letClause.setEndToken(COMMA358); }

                    	    pushFollow(FOLLOW_letVariable_in_letClause16744);
                    	    v2=letVariable();

                    	    state._fsp--;
                    	    if (state.failed) return letClause;

                    	    if ( state.backtracking==0 ) { letClause.setEndToken(null); 
                    	                letClause.addVariable(v2); }

                    	    }
                    	    break;

                    	default :
                    	    break loop229;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN359=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_letClause16784); if (state.failed) return letClause;

            if ( state.backtracking==0 ) { letClause.setEndToken(RPAREN359); }

            pushFollow(FOLLOW_conditionalBranch_in_letClause16800);
            conditionalBranch360=conditionalBranch();

            state._fsp--;
            if (state.failed) return letClause;

            if ( state.backtracking==0 ) { letClause.setExpression(conditionalBranch360); 
                    letClause.setEndToken(null); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return letClause;
    }
    // $ANTLR end "letClause"



    // $ANTLR start "switchExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2458:1: switchExpression returns [SwitchExpression term] : switchHeader caseExpressions ;
    public SwitchExpression switchExpression() throws RecognitionException {
        SwitchExpression term = null;


        SwitchClause switchHeader361 =null;

        SwitchCaseList caseExpressions362 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2459:5: ( switchHeader caseExpressions )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2459:7: switchHeader caseExpressions
            {
            pushFollow(FOLLOW_switchHeader_in_switchExpression16829);
            switchHeader361=switchHeader();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = new SwitchExpression(null);
                    term.setSwitchClause(switchHeader361); }

            pushFollow(FOLLOW_caseExpressions_in_switchExpression16845);
            caseExpressions362=caseExpressions();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term.setSwitchCaseList(caseExpressions362);
                    //TODO: huge copy/paste job from switchCaseElse 
                    Identifier id = null;
                    Switched sw = switchHeader361.getSwitched();
                    if (sw!=null) {
                      Expression ex = sw.getExpression();
                      if (ex!=null && ex.getTerm() instanceof BaseMemberExpression) {
                        id = ((BaseMemberExpression) ex.getTerm()).getIdentifier();
                      }
                      TypedDeclaration var = switchHeader361.getSwitched().getVariable();
                      if (var!=null) {
                        id = var.getIdentifier();
                      }
                    }
                    if (id!=null) {
                      for (CaseClause cc: caseExpressions362.getCaseClauses()) {
                        CaseItem item = cc.getCaseItem();
                        if (item instanceof IsCase) {
                          IsCase ic = (IsCase) item;
                          Variable v = new Variable(null);
                          v.setType(new SyntheticVariable(null));
                          v.setIdentifier(id);
                          SpecifierExpression se = new SpecifierExpression(null);
                          Expression e = new Expression(null);
                          BaseMemberExpression bme = new BaseMemberExpression(null);
                          bme.setIdentifier(id);
                          bme.setTypeArguments( new InferredTypeArguments(null) );
                          e.setTerm(bme);
                          se.setExpression(e);
                          v.setSpecifierExpression(se);
                          ic.setVariable(v);
                        }
                      } 
                      ElseClause ec = caseExpressions362.getElseClause();
                      if (ec!=null) {
                        Variable ev = new Variable(null);
                        ev.setType(new SyntheticVariable(null));
                        SpecifierExpression ese = new SpecifierExpression(null);
                        Expression ee = new Expression(null);
                        BaseMemberExpression ebme = new BaseMemberExpression(null);
                        ebme.setTypeArguments( new InferredTypeArguments(null) );
                        ee.setTerm(ebme);
                        ese.setExpression(ee);
                        ev.setSpecifierExpression(ese);
                        ec.setVariable(ev);
                        ebme.setIdentifier(id);
                        ev.setIdentifier(id);
                      }
                    } 
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "switchExpression"



    // $ANTLR start "caseExpressions"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2515:1: caseExpressions returns [SwitchCaseList switchCaseList] : ( caseExpression )+ ( defaultCaseExpression )? ;
    public SwitchCaseList caseExpressions() throws RecognitionException {
        SwitchCaseList switchCaseList = null;


        CaseClause caseExpression363 =null;

        ElseClause defaultCaseExpression364 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2516:5: ( ( caseExpression )+ ( defaultCaseExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2516:7: ( caseExpression )+ ( defaultCaseExpression )?
            {
            if ( state.backtracking==0 ) { switchCaseList = new SwitchCaseList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2517:7: ( caseExpression )+
            int cnt231=0;
            loop231:
            do {
                int alt231=2;
                int LA231_0 = input.LA(1);

                if ( (LA231_0==CASE_CLAUSE) ) {
                    alt231=1;
                }


                switch (alt231) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2518:9: caseExpression
            	    {
            	    pushFollow(FOLLOW_caseExpression_in_caseExpressions16892);
            	    caseExpression363=caseExpression();

            	    state._fsp--;
            	    if (state.failed) return switchCaseList;

            	    if ( state.backtracking==0 ) { switchCaseList.addCaseClause(caseExpression363); }

            	    }
            	    break;

            	default :
            	    if ( cnt231 >= 1 ) break loop231;
            	    if (state.backtracking>0) {state.failed=true; return switchCaseList;}
                        EarlyExitException eee =
                            new EarlyExitException(231, input);
                        throw eee;
                }
                cnt231++;
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2521:7: ( defaultCaseExpression )?
            int alt232=2;
            int LA232_0 = input.LA(1);

            if ( (LA232_0==ELSE_CLAUSE) ) {
                alt232=1;
            }
            switch (alt232) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2522:9: defaultCaseExpression
                    {
                    pushFollow(FOLLOW_defaultCaseExpression_in_caseExpressions16929);
                    defaultCaseExpression364=defaultCaseExpression();

                    state._fsp--;
                    if (state.failed) return switchCaseList;

                    if ( state.backtracking==0 ) { switchCaseList.setElseClause(defaultCaseExpression364); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return switchCaseList;
    }
    // $ANTLR end "caseExpressions"



    // $ANTLR start "caseExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2527:1: caseExpression returns [CaseClause clause] : CASE_CLAUSE caseItemList conditionalBranch ;
    public CaseClause caseExpression() throws RecognitionException {
        CaseClause clause = null;


        Token CASE_CLAUSE365=null;
        CaseItem caseItemList366 =null;

        Expression conditionalBranch367 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2528:5: ( CASE_CLAUSE caseItemList conditionalBranch )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2528:7: CASE_CLAUSE caseItemList conditionalBranch
            {
            CASE_CLAUSE365=(Token)match(input,CASE_CLAUSE,FOLLOW_CASE_CLAUSE_in_caseExpression16973); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new CaseClause(CASE_CLAUSE365); }

            pushFollow(FOLLOW_caseItemList_in_caseExpression16990);
            caseItemList366=caseItemList();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setCaseItem(caseItemList366); }

            pushFollow(FOLLOW_conditionalBranch_in_caseExpression17006);
            conditionalBranch367=conditionalBranch();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setExpression(conditionalBranch367); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "caseExpression"



    // $ANTLR start "defaultCaseExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2536:1: defaultCaseExpression returns [ElseClause clause] : ELSE_CLAUSE conditionalBranch ;
    public ElseClause defaultCaseExpression() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE368=null;
        Expression conditionalBranch369 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2537:5: ( ELSE_CLAUSE conditionalBranch )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2537:7: ELSE_CLAUSE conditionalBranch
            {
            ELSE_CLAUSE368=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_defaultCaseExpression17035); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE368); }

            pushFollow(FOLLOW_conditionalBranch_in_defaultCaseExpression17052);
            conditionalBranch369=conditionalBranch();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setExpression(conditionalBranch369); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "defaultCaseExpression"



    // $ANTLR start "ifExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2543:1: ifExpression returns [IfExpression term] : IF_CLAUSE thenElseClauses ;
    public IfExpression ifExpression() throws RecognitionException {
        IfExpression term = null;


        Token IF_CLAUSE370=null;
        PsiCompatibleCeylonParser.thenElseClauses_return thenElseClauses371 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2544:5: ( IF_CLAUSE thenElseClauses )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2544:7: IF_CLAUSE thenElseClauses
            {
            IF_CLAUSE370=(Token)match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_ifExpression17081); if (state.failed) return term;

            if ( state.backtracking==0 ) { term = new IfExpression(IF_CLAUSE370); }

            pushFollow(FOLLOW_thenElseClauses_in_ifExpression17097);
            thenElseClauses371=thenElseClauses();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { IfClause ic = (thenElseClauses371!=null?thenElseClauses371.ifClause:null);
                    ElseClause ec = (thenElseClauses371!=null?thenElseClauses371.elseClause:null);
                    ConditionList cl = (thenElseClauses371!=null?thenElseClauses371.conditionList:null);
                    term.setIfClause(ic);
                    term.setElseClause(ec);
                    if (cl!=null) {
                      if (ic==null) {
                        ic = new IfClause(null);
                        term.setIfClause(ic);
                      }
                      ic.setConditionList(cl); 
                      if (cl!=null) {
                        List<Condition> conditions = cl.getConditions();
                        if (conditions.size()==1) {
                          Condition c = conditions.get(0);
                          Identifier id = null;
                          Type t = null;
                          if (c instanceof ExistsOrNonemptyCondition) {
                            Statement s = ((ExistsOrNonemptyCondition)c).getVariable();
                            if (s instanceof Variable) {
                              Variable v = (Variable) s;
                              t = v.getType();
                              id = v.getIdentifier();
                            }
                          }
                          else if (c instanceof IsCondition) {
                            Variable v = (Variable) ((IsCondition)c).getVariable();
                            if (v!=null) {
                              t = v.getType();
                              id = v.getIdentifier();
                            }
                          }
                          if (id!=null && ec!=null && t instanceof SyntheticVariable) { 
                            Variable ev = new Variable(null);
                            ev.setType(new SyntheticVariable(null));
                            SpecifierExpression ese = new SpecifierExpression(null);
                            Expression ee = new Expression(null);
                            BaseMemberExpression ebme = new BaseMemberExpression(null);
                            ebme.setTypeArguments( new InferredTypeArguments(null) );
                            ee.setTerm(ebme);
                            ese.setExpression(ee);
                            ev.setSpecifierExpression(ese);
                            ec.setVariable(ev);
                            ev.setIdentifier(id);
                            ebme.setIdentifier(id);
                          }
                        }
                      }        
                    } 
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "ifExpression"



    // $ANTLR start "conditionalBranch"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2599:1: conditionalBranch returns [Expression expression] : ( ifExpression | let | disjunctionExpression );
    public Expression conditionalBranch() throws RecognitionException {
        Expression expression = null;


        IfExpression ifExpression372 =null;

        LetExpression let373 =null;

        Term disjunctionExpression374 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2600:5: ( ifExpression | let | disjunctionExpression )
            int alt233=3;
            switch ( input.LA(1) ) {
            case IF_CLAUSE:
                {
                alt233=1;
                }
                break;
            case LET:
                {
                alt233=2;
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case DYNAMIC:
            case FLOAT_LITERAL:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case NOT_OP:
            case OBJECT_DEFINITION:
            case OUTER:
            case PACKAGE:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
                {
                alt233=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return expression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 233, 0, input);

                throw nvae;

            }

            switch (alt233) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2600:7: ifExpression
                    {
                    pushFollow(FOLLOW_ifExpression_in_conditionalBranch17126);
                    ifExpression372=ifExpression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(ifExpression372); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2603:7: let
                    {
                    pushFollow(FOLLOW_let_in_conditionalBranch17142);
                    let373=let();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(let373); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2606:7: disjunctionExpression
                    {
                    pushFollow(FOLLOW_disjunctionExpression_in_conditionalBranch17158);
                    disjunctionExpression374=disjunctionExpression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(disjunctionExpression374); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "conditionalBranch"


    public static class thenElseClauses_return extends ParserRuleReturnScope {
        public IfClause ifClause;
        public ElseClause elseClause;
        public ConditionList conditionList;
    };


    // $ANTLR start "thenElseClauses"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2611:1: thenElseClauses returns [IfClause ifClause, ElseClause elseClause, ConditionList conditionList] : conditions THEN_CLAUSE cb1= conditionalBranch ELSE_CLAUSE cb2= conditionalBranch ;
    public PsiCompatibleCeylonParser.thenElseClauses_return thenElseClauses() throws RecognitionException {
        PsiCompatibleCeylonParser.thenElseClauses_return retval = new PsiCompatibleCeylonParser.thenElseClauses_return();
        retval.start = input.LT(1);


        Token THEN_CLAUSE376=null;
        Token ELSE_CLAUSE377=null;
        Expression cb1 =null;

        Expression cb2 =null;

        ConditionList conditions375 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2612:5: ( conditions THEN_CLAUSE cb1= conditionalBranch ELSE_CLAUSE cb2= conditionalBranch )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2612:7: conditions THEN_CLAUSE cb1= conditionalBranch ELSE_CLAUSE cb2= conditionalBranch
            {
            pushFollow(FOLLOW_conditions_in_thenElseClauses17187);
            conditions375=conditions();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.conditionList = conditions375; }

            THEN_CLAUSE376=(Token)match(input,THEN_CLAUSE,FOLLOW_THEN_CLAUSE_in_thenElseClauses17203); if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.ifClause = new IfClause(THEN_CLAUSE376); }

            pushFollow(FOLLOW_conditionalBranch_in_thenElseClauses17221);
            cb1=conditionalBranch();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.ifClause.setExpression(cb1); }

            ELSE_CLAUSE377=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_thenElseClauses17237); if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.elseClause = new ElseClause(ELSE_CLAUSE377); }

            pushFollow(FOLLOW_conditionalBranch_in_thenElseClauses17255);
            cb2=conditionalBranch();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.elseClause.setExpression(cb2); }

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "thenElseClauses"



    // $ANTLR start "anonymousFunction"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2624:1: anonymousFunction returns [FunctionArgument function] : ( FUNCTION_MODIFIER | VOID_MODIFIER )? (tp= typeParameters )? p1= parameters (p2= parameters )* (tc= typeConstraints )? ( COMPUTE fe= functionOrExpression | block ) ;
    public FunctionArgument anonymousFunction() throws RecognitionException {
        FunctionArgument function = null;


        Token FUNCTION_MODIFIER378=null;
        Token VOID_MODIFIER379=null;
        TypeParameterList tp =null;

        ParameterList p1 =null;

        ParameterList p2 =null;

        TypeConstraintList tc =null;

        Expression fe =null;

        Block block380 =null;


         function = new FunctionArgument(null);
                    function.setType(new FunctionModifier(null)); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2627:5: ( ( FUNCTION_MODIFIER | VOID_MODIFIER )? (tp= typeParameters )? p1= parameters (p2= parameters )* (tc= typeConstraints )? ( COMPUTE fe= functionOrExpression | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2627:7: ( FUNCTION_MODIFIER | VOID_MODIFIER )? (tp= typeParameters )? p1= parameters (p2= parameters )* (tc= typeConstraints )? ( COMPUTE fe= functionOrExpression | block )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2627:7: ( FUNCTION_MODIFIER | VOID_MODIFIER )?
            int alt234=3;
            int LA234_0 = input.LA(1);

            if ( (LA234_0==FUNCTION_MODIFIER) ) {
                alt234=1;
            }
            else if ( (LA234_0==VOID_MODIFIER) ) {
                alt234=2;
            }
            switch (alt234) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2628:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER378=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_anonymousFunction17303); if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setType(new FunctionModifier(FUNCTION_MODIFIER378)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2631:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER379=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_anonymousFunction17331); if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setType(new VoidModifier(VOID_MODIFIER379)); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2634:7: (tp= typeParameters )?
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==SMALLER_OP) ) {
                alt235=1;
            }
            switch (alt235) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2635:9: tp= typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_anonymousFunction17370);
                    tp=typeParameters();

                    state._fsp--;
                    if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setTypeParameterList(tp); }

                    }
                    break;

            }


            pushFollow(FOLLOW_parameters_in_anonymousFunction17399);
            p1=parameters();

            state._fsp--;
            if (state.failed) return function;

            if ( state.backtracking==0 ) { function.addParameterList(p1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2640:7: (p2= parameters )*
            loop236:
            do {
                int alt236=2;
                int LA236_0 = input.LA(1);

                if ( (LA236_0==LPAREN) ) {
                    alt236=1;
                }


                switch (alt236) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2641:9: p2= parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_anonymousFunction17428);
            	    p2=parameters();

            	    state._fsp--;
            	    if (state.failed) return function;

            	    if ( state.backtracking==0 ) { function.addParameterList(p2); }

            	    }
            	    break;

            	default :
            	    break loop236;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2644:7: (tc= typeConstraints )?
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==COMPILER_ANNOTATION||LA237_0==TYPE_CONSTRAINT) ) {
                alt237=1;
            }
            switch (alt237) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2645:9: tc= typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_anonymousFunction17467);
                    tc=typeConstraints();

                    state._fsp--;
                    if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setTypeConstraintList(tc); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2648:7: ( COMPUTE fe= functionOrExpression | block )
            int alt238=2;
            int LA238_0 = input.LA(1);

            if ( (LA238_0==COMPUTE) ) {
                alt238=1;
            }
            else if ( (LA238_0==LBRACE) ) {
                alt238=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return function;}
                NoViableAltException nvae =
                    new NoViableAltException("", 238, 0, input);

                throw nvae;

            }
            switch (alt238) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2649:9: COMPUTE fe= functionOrExpression
                    {
                    match(input,COMPUTE,FOLLOW_COMPUTE_in_anonymousFunction17505); if (state.failed) return function;

                    pushFollow(FOLLOW_functionOrExpression_in_anonymousFunction17526);
                    fe=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setExpression(fe); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2654:9: block
                    {
                    pushFollow(FOLLOW_block_in_anonymousFunction17554);
                    block380=block();

                    state._fsp--;
                    if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setBlock(block380); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return function;
    }
    // $ANTLR end "anonymousFunction"



    // $ANTLR start "comprehension"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2659:1: comprehension returns [Comprehension comprehension] : ( forComprehensionClause | ifComprehensionClause );
    public Comprehension comprehension() throws RecognitionException {
        Comprehension comprehension = null;


        ForComprehensionClause forComprehensionClause381 =null;

        IfComprehensionClause ifComprehensionClause382 =null;


         comprehension = new Comprehension(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2661:5: ( forComprehensionClause | ifComprehensionClause )
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==FOR_CLAUSE) ) {
                alt239=1;
            }
            else if ( (LA239_0==IF_CLAUSE) ) {
                alt239=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return comprehension;}
                NoViableAltException nvae =
                    new NoViableAltException("", 239, 0, input);

                throw nvae;

            }
            switch (alt239) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2661:7: forComprehensionClause
                    {
                    pushFollow(FOLLOW_forComprehensionClause_in_comprehension17602);
                    forComprehensionClause381=forComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehension;

                    if ( state.backtracking==0 ) { comprehension.setInitialComprehensionClause(forComprehensionClause381); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2663:7: ifComprehensionClause
                    {
                    pushFollow(FOLLOW_ifComprehensionClause_in_comprehension17618);
                    ifComprehensionClause382=ifComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehension;

                    if ( state.backtracking==0 ) { comprehension.setInitialComprehensionClause(ifComprehensionClause382); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehension;
    }
    // $ANTLR end "comprehension"



    // $ANTLR start "comprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2667:1: comprehensionClause returns [ComprehensionClause comprehensionClause] : ( forComprehensionClause | ( IF_CLAUSE conditions ~ THEN_CLAUSE )=> ifComprehensionClause | expressionComprehensionClause );
    public ComprehensionClause comprehensionClause() throws RecognitionException {
        ComprehensionClause comprehensionClause = null;


        ForComprehensionClause forComprehensionClause383 =null;

        IfComprehensionClause ifComprehensionClause384 =null;

        ExpressionComprehensionClause expressionComprehensionClause385 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2668:5: ( forComprehensionClause | ( IF_CLAUSE conditions ~ THEN_CLAUSE )=> ifComprehensionClause | expressionComprehensionClause )
            int alt240=3;
            switch ( input.LA(1) ) {
            case FOR_CLAUSE:
                {
                alt240=1;
                }
                break;
            case IF_CLAUSE:
                {
                int LA240_2 = input.LA(2);

                if ( (synpred35_Ceylon()) ) {
                    alt240=2;
                }
                else if ( (true) ) {
                    alt240=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return comprehensionClause;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 240, 2, input);

                    throw nvae;

                }
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case COMMA:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case DYNAMIC:
            case FLOAT_LITERAL:
            case FUNCTION_MODIFIER:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case NOT_OP:
            case OBJECT_DEFINITION:
            case OUTER:
            case PACKAGE:
            case RBRACE:
            case RBRACKET:
            case RPAREN:
            case SMALLER_OP:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case SWITCH_CLAUSE:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
            case VOID_MODIFIER:
                {
                alt240=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return comprehensionClause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 240, 0, input);

                throw nvae;

            }

            switch (alt240) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2668:7: forComprehensionClause
                    {
                    pushFollow(FOLLOW_forComprehensionClause_in_comprehensionClause17647);
                    forComprehensionClause383=forComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = forComprehensionClause383; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2670:7: ( IF_CLAUSE conditions ~ THEN_CLAUSE )=> ifComprehensionClause
                    {
                    pushFollow(FOLLOW_ifComprehensionClause_in_comprehensionClause17682);
                    ifComprehensionClause384=ifComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = ifComprehensionClause384; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2673:7: expressionComprehensionClause
                    {
                    pushFollow(FOLLOW_expressionComprehensionClause_in_comprehensionClause17699);
                    expressionComprehensionClause385=expressionComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = expressionComprehensionClause385; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "comprehensionClause"



    // $ANTLR start "expressionComprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2677:1: expressionComprehensionClause returns [ExpressionComprehensionClause comprehensionClause] : ( functionOrExpression |);
    public ExpressionComprehensionClause expressionComprehensionClause() throws RecognitionException {
        ExpressionComprehensionClause comprehensionClause = null;


        Expression functionOrExpression386 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2678:5: ( functionOrExpression |)
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==BACKTICK||LA241_0==CHAR_LITERAL||(LA241_0 >= DECREMENT_OP && LA241_0 <= DIFFERENCE_OP)||LA241_0==DYNAMIC||LA241_0==FLOAT_LITERAL||LA241_0==FUNCTION_MODIFIER||LA241_0==IF_CLAUSE||LA241_0==INCREMENT_OP||(LA241_0 >= LBRACE && LA241_0 <= LIDENTIFIER)||LA241_0==LPAREN||LA241_0==NATURAL_LITERAL||(LA241_0 >= NOT_OP && LA241_0 <= OBJECT_DEFINITION)||(LA241_0 >= OUTER && LA241_0 <= PACKAGE)||LA241_0==SMALLER_OP||LA241_0==STRING_LITERAL||LA241_0==STRING_START||(LA241_0 >= SUM_OP && LA241_0 <= SWITCH_CLAUSE)||LA241_0==THIS||LA241_0==UIDENTIFIER||(LA241_0 >= VERBATIM_STRING && LA241_0 <= VOID_MODIFIER)) ) {
                alt241=1;
            }
            else if ( (LA241_0==COMMA||(LA241_0 >= RBRACE && LA241_0 <= RBRACKET)||LA241_0==RPAREN) ) {
                alt241=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return comprehensionClause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 241, 0, input);

                throw nvae;

            }
            switch (alt241) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2678:7: functionOrExpression
                    {
                    pushFollow(FOLLOW_functionOrExpression_in_expressionComprehensionClause17729);
                    functionOrExpression386=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = new ExpressionComprehensionClause(null);
                            comprehensionClause.setExpression(functionOrExpression386); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2681:7: 
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                              new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "expressionComprehensionClause"



    // $ANTLR start "forComprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2685:1: forComprehensionClause returns [ForComprehensionClause comprehensionClause] : FOR_CLAUSE forIterator comprehensionClause ;
    public ForComprehensionClause forComprehensionClause() throws RecognitionException {
        ForComprehensionClause comprehensionClause = null;


        Token FOR_CLAUSE387=null;
        ForIterator forIterator388 =null;

        ComprehensionClause comprehensionClause389 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2686:5: ( FOR_CLAUSE forIterator comprehensionClause )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2686:7: FOR_CLAUSE forIterator comprehensionClause
            {
            FOR_CLAUSE387=(Token)match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_forComprehensionClause17766); if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause = new ForComprehensionClause(FOR_CLAUSE387); }

            pushFollow(FOLLOW_forIterator_in_forComprehensionClause17782);
            forIterator388=forIterator();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setForIterator(forIterator388); }

            pushFollow(FOLLOW_comprehensionClause_in_forComprehensionClause17798);
            comprehensionClause389=comprehensionClause();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setComprehensionClause(comprehensionClause389); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "forComprehensionClause"



    // $ANTLR start "ifComprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2694:1: ifComprehensionClause returns [IfComprehensionClause comprehensionClause] : IF_CLAUSE conditions comprehensionClause ;
    public IfComprehensionClause ifComprehensionClause() throws RecognitionException {
        IfComprehensionClause comprehensionClause = null;


        Token IF_CLAUSE390=null;
        ConditionList conditions391 =null;

        ComprehensionClause comprehensionClause392 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2695:5: ( IF_CLAUSE conditions comprehensionClause )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2695:7: IF_CLAUSE conditions comprehensionClause
            {
            IF_CLAUSE390=(Token)match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_ifComprehensionClause17831); if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause = new IfComprehensionClause(IF_CLAUSE390); }

            pushFollow(FOLLOW_conditions_in_ifComprehensionClause17847);
            conditions391=conditions();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setConditionList(conditions391); }

            pushFollow(FOLLOW_comprehensionClause_in_ifComprehensionClause17863);
            comprehensionClause392=comprehensionClause();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setComprehensionClause(comprehensionClause392); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "ifComprehensionClause"



    // $ANTLR start "assignmentExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2703:1: assignmentExpression returns [Term term] : ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression )? ;
    public Term assignmentExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        Expression ee2 =null;

        AssignmentOp assignmentOperator393 =null;


         QualifiedMemberOrTypeExpression qe=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2705:5: (ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2705:7: ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression )?
            {
            pushFollow(FOLLOW_thenElseExpression_in_assignmentExpression17907);
            ee1=thenElseExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ee1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2707:7: ( assignmentOperator ee2= functionOrExpression )?
            int alt242=2;
            int LA242_0 = input.LA(1);

            if ( (LA242_0==ADD_SPECIFY||LA242_0==AND_SPECIFY||LA242_0==COMPLEMENT_SPECIFY||LA242_0==DIVIDE_SPECIFY||LA242_0==INTERSECT_SPECIFY||LA242_0==MULTIPLY_SPECIFY||LA242_0==OR_SPECIFY||LA242_0==REMAINDER_SPECIFY||LA242_0==SPECIFY||LA242_0==SUBTRACT_SPECIFY||LA242_0==UNION_SPECIFY) ) {
                alt242=1;
            }
            switch (alt242) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2708:9: assignmentOperator ee2= functionOrExpression
                    {
                    pushFollow(FOLLOW_assignmentOperator_in_assignmentExpression17933);
                    assignmentOperator393=assignmentOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { assignmentOperator393.setLeftTerm(term);
                              term = assignmentOperator393; }

                    pushFollow(FOLLOW_functionOrExpression_in_assignmentExpression17956);
                    ee2=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { if (ee2!=null)
                                  assignmentOperator393.setRightTerm(ee2.getTerm()); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "assignmentExpression"



    // $ANTLR start "assignmentOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2717:1: assignmentOperator returns [AssignmentOp operator] : ( SPECIFY | ADD_SPECIFY | SUBTRACT_SPECIFY | MULTIPLY_SPECIFY | DIVIDE_SPECIFY | REMAINDER_SPECIFY | INTERSECT_SPECIFY | UNION_SPECIFY | COMPLEMENT_SPECIFY | AND_SPECIFY | OR_SPECIFY );
    public AssignmentOp assignmentOperator() throws RecognitionException {
        AssignmentOp operator = null;


        Token SPECIFY394=null;
        Token ADD_SPECIFY395=null;
        Token SUBTRACT_SPECIFY396=null;
        Token MULTIPLY_SPECIFY397=null;
        Token DIVIDE_SPECIFY398=null;
        Token REMAINDER_SPECIFY399=null;
        Token INTERSECT_SPECIFY400=null;
        Token UNION_SPECIFY401=null;
        Token COMPLEMENT_SPECIFY402=null;
        Token AND_SPECIFY403=null;
        Token OR_SPECIFY404=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2718:5: ( SPECIFY | ADD_SPECIFY | SUBTRACT_SPECIFY | MULTIPLY_SPECIFY | DIVIDE_SPECIFY | REMAINDER_SPECIFY | INTERSECT_SPECIFY | UNION_SPECIFY | COMPLEMENT_SPECIFY | AND_SPECIFY | OR_SPECIFY )
            int alt243=11;
            switch ( input.LA(1) ) {
            case SPECIFY:
                {
                alt243=1;
                }
                break;
            case ADD_SPECIFY:
                {
                alt243=2;
                }
                break;
            case SUBTRACT_SPECIFY:
                {
                alt243=3;
                }
                break;
            case MULTIPLY_SPECIFY:
                {
                alt243=4;
                }
                break;
            case DIVIDE_SPECIFY:
                {
                alt243=5;
                }
                break;
            case REMAINDER_SPECIFY:
                {
                alt243=6;
                }
                break;
            case INTERSECT_SPECIFY:
                {
                alt243=7;
                }
                break;
            case UNION_SPECIFY:
                {
                alt243=8;
                }
                break;
            case COMPLEMENT_SPECIFY:
                {
                alt243=9;
                }
                break;
            case AND_SPECIFY:
                {
                alt243=10;
                }
                break;
            case OR_SPECIFY:
                {
                alt243=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 243, 0, input);

                throw nvae;

            }

            switch (alt243) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2718:7: SPECIFY
                    {
                    SPECIFY394=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_assignmentOperator17996); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AssignOp(SPECIFY394); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2719:7: ADD_SPECIFY
                    {
                    ADD_SPECIFY395=(Token)match(input,ADD_SPECIFY,FOLLOW_ADD_SPECIFY_in_assignmentOperator18006); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AddAssignOp(ADD_SPECIFY395); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2720:7: SUBTRACT_SPECIFY
                    {
                    SUBTRACT_SPECIFY396=(Token)match(input,SUBTRACT_SPECIFY,FOLLOW_SUBTRACT_SPECIFY_in_assignmentOperator18016); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SubtractAssignOp(SUBTRACT_SPECIFY396); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2721:7: MULTIPLY_SPECIFY
                    {
                    MULTIPLY_SPECIFY397=(Token)match(input,MULTIPLY_SPECIFY,FOLLOW_MULTIPLY_SPECIFY_in_assignmentOperator18026); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new MultiplyAssignOp(MULTIPLY_SPECIFY397); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2722:7: DIVIDE_SPECIFY
                    {
                    DIVIDE_SPECIFY398=(Token)match(input,DIVIDE_SPECIFY,FOLLOW_DIVIDE_SPECIFY_in_assignmentOperator18036); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DivideAssignOp(DIVIDE_SPECIFY398); }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2723:7: REMAINDER_SPECIFY
                    {
                    REMAINDER_SPECIFY399=(Token)match(input,REMAINDER_SPECIFY,FOLLOW_REMAINDER_SPECIFY_in_assignmentOperator18046); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RemainderAssignOp(REMAINDER_SPECIFY399); }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2724:7: INTERSECT_SPECIFY
                    {
                    INTERSECT_SPECIFY400=(Token)match(input,INTERSECT_SPECIFY,FOLLOW_INTERSECT_SPECIFY_in_assignmentOperator18056); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IntersectAssignOp(INTERSECT_SPECIFY400); }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2725:7: UNION_SPECIFY
                    {
                    UNION_SPECIFY401=(Token)match(input,UNION_SPECIFY,FOLLOW_UNION_SPECIFY_in_assignmentOperator18066); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new UnionAssignOp(UNION_SPECIFY401); }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2726:7: COMPLEMENT_SPECIFY
                    {
                    COMPLEMENT_SPECIFY402=(Token)match(input,COMPLEMENT_SPECIFY,FOLLOW_COMPLEMENT_SPECIFY_in_assignmentOperator18076); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ComplementAssignOp(COMPLEMENT_SPECIFY402); }

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2727:7: AND_SPECIFY
                    {
                    AND_SPECIFY403=(Token)match(input,AND_SPECIFY,FOLLOW_AND_SPECIFY_in_assignmentOperator18086); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AndAssignOp(AND_SPECIFY403); }

                    }
                    break;
                case 11 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2728:7: OR_SPECIFY
                    {
                    OR_SPECIFY404=(Token)match(input,OR_SPECIFY,FOLLOW_OR_SPECIFY_in_assignmentOperator18096); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new OrAssignOp(OR_SPECIFY404); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "assignmentOperator"



    // $ANTLR start "thenElseExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2731:1: thenElseExpression returns [Term term] : de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )* ;
    public Term thenElseExpression() throws RecognitionException {
        Term term = null;


        Term de1 =null;

        Term de2 =null;

        BinaryOperatorExpression thenElseOperator405 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2732:5: (de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2732:7: de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )*
            {
            pushFollow(FOLLOW_disjunctionExpression_in_thenElseExpression18121);
            de1=disjunctionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = de1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2734:7: ( thenElseOperator de2= disjunctionExpression )*
            loop244:
            do {
                int alt244=2;
                int LA244_0 = input.LA(1);

                if ( (LA244_0==ELSE_CLAUSE||LA244_0==THEN_CLAUSE) ) {
                    alt244=1;
                }


                switch (alt244) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2735:9: thenElseOperator de2= disjunctionExpression
            	    {
            	    pushFollow(FOLLOW_thenElseOperator_in_thenElseExpression18147);
            	    thenElseOperator405=thenElseOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { thenElseOperator405.setLeftTerm(term);
            	              term = thenElseOperator405; }

            	    pushFollow(FOLLOW_disjunctionExpression_in_thenElseExpression18169);
            	    de2=disjunctionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { thenElseOperator405.setRightTerm(de2); }

            	    }
            	    break;

            	default :
            	    break loop244;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "thenElseExpression"



    // $ANTLR start "thenElseOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2743:1: thenElseOperator returns [BinaryOperatorExpression operator] : ( ELSE_CLAUSE | THEN_CLAUSE );
    public BinaryOperatorExpression thenElseOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token ELSE_CLAUSE406=null;
        Token THEN_CLAUSE407=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2744:5: ( ELSE_CLAUSE | THEN_CLAUSE )
            int alt245=2;
            int LA245_0 = input.LA(1);

            if ( (LA245_0==ELSE_CLAUSE) ) {
                alt245=1;
            }
            else if ( (LA245_0==THEN_CLAUSE) ) {
                alt245=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 245, 0, input);

                throw nvae;

            }
            switch (alt245) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2744:7: ELSE_CLAUSE
                    {
                    ELSE_CLAUSE406=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_thenElseOperator18209); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DefaultOp(ELSE_CLAUSE406); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2746:7: THEN_CLAUSE
                    {
                    THEN_CLAUSE407=(Token)match(input,THEN_CLAUSE,FOLLOW_THEN_CLAUSE_in_thenElseOperator18226); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ThenOp(THEN_CLAUSE407); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "thenElseOperator"



    // $ANTLR start "disjunctionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2750:1: disjunctionExpression returns [Term term] : me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )* ;
    public Term disjunctionExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        OrOp disjunctionOperator408 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2751:5: (me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2751:7: me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )*
            {
            pushFollow(FOLLOW_conjunctionExpression_in_disjunctionExpression18257);
            me1=conjunctionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = me1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2753:7: ( disjunctionOperator me2= conjunctionExpression )*
            loop246:
            do {
                int alt246=2;
                int LA246_0 = input.LA(1);

                if ( (LA246_0==OR_OP) ) {
                    alt246=1;
                }


                switch (alt246) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2754:9: disjunctionOperator me2= conjunctionExpression
            	    {
            	    pushFollow(FOLLOW_disjunctionOperator_in_disjunctionExpression18283);
            	    disjunctionOperator408=disjunctionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { disjunctionOperator408.setLeftTerm(term);
            	              term = disjunctionOperator408; }

            	    pushFollow(FOLLOW_conjunctionExpression_in_disjunctionExpression18306);
            	    me2=conjunctionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { disjunctionOperator408.setRightTerm(me2); }

            	    }
            	    break;

            	default :
            	    break loop246;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "disjunctionExpression"



    // $ANTLR start "disjunctionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2762:1: disjunctionOperator returns [OrOp operator] : OR_OP ;
    public OrOp disjunctionOperator() throws RecognitionException {
        OrOp operator = null;


        Token OR_OP409=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2763:5: ( OR_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2763:7: OR_OP
            {
            OR_OP409=(Token)match(input,OR_OP,FOLLOW_OR_OP_in_disjunctionOperator18346); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new OrOp(OR_OP409); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "disjunctionOperator"



    // $ANTLR start "conjunctionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2767:1: conjunctionExpression returns [Term term] : me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )* ;
    public Term conjunctionExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        AndOp conjunctionOperator410 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2768:5: (me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2768:7: me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )*
            {
            pushFollow(FOLLOW_logicalNegationExpression_in_conjunctionExpression18378);
            me1=logicalNegationExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = me1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2770:7: ( conjunctionOperator me2= logicalNegationExpression )*
            loop247:
            do {
                int alt247=2;
                int LA247_0 = input.LA(1);

                if ( (LA247_0==AND_OP) ) {
                    alt247=1;
                }


                switch (alt247) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2771:9: conjunctionOperator me2= logicalNegationExpression
            	    {
            	    pushFollow(FOLLOW_conjunctionOperator_in_conjunctionExpression18404);
            	    conjunctionOperator410=conjunctionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { conjunctionOperator410.setLeftTerm(term);
            	              term = conjunctionOperator410; }

            	    pushFollow(FOLLOW_logicalNegationExpression_in_conjunctionExpression18427);
            	    me2=logicalNegationExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { conjunctionOperator410.setRightTerm(me2); }

            	    }
            	    break;

            	default :
            	    break loop247;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "conjunctionExpression"



    // $ANTLR start "conjunctionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2779:1: conjunctionOperator returns [AndOp operator] : AND_OP ;
    public AndOp conjunctionOperator() throws RecognitionException {
        AndOp operator = null;


        Token AND_OP411=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2780:5: ( AND_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2780:7: AND_OP
            {
            AND_OP411=(Token)match(input,AND_OP,FOLLOW_AND_OP_in_conjunctionOperator18467); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new AndOp(AND_OP411); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "conjunctionOperator"



    // $ANTLR start "logicalNegationExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2784:1: logicalNegationExpression returns [Term term] : ( notOperator le= logicalNegationExpression | equalityExpression );
    public Term logicalNegationExpression() throws RecognitionException {
        Term term = null;


        Term le =null;

        NotOp notOperator412 =null;

        Term equalityExpression413 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2785:5: ( notOperator le= logicalNegationExpression | equalityExpression )
            int alt248=2;
            int LA248_0 = input.LA(1);

            if ( (LA248_0==NOT_OP) ) {
                alt248=1;
            }
            else if ( (LA248_0==BACKTICK||LA248_0==CHAR_LITERAL||(LA248_0 >= DECREMENT_OP && LA248_0 <= DIFFERENCE_OP)||LA248_0==DYNAMIC||LA248_0==FLOAT_LITERAL||LA248_0==INCREMENT_OP||(LA248_0 >= LBRACE && LA248_0 <= LBRACKET)||LA248_0==LIDENTIFIER||LA248_0==LPAREN||LA248_0==NATURAL_LITERAL||LA248_0==OBJECT_DEFINITION||(LA248_0 >= OUTER && LA248_0 <= PACKAGE)||LA248_0==STRING_LITERAL||LA248_0==STRING_START||(LA248_0 >= SUM_OP && LA248_0 <= SUPER)||LA248_0==THIS||LA248_0==UIDENTIFIER||LA248_0==VERBATIM_STRING) ) {
                alt248=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                    new NoViableAltException("", 248, 0, input);

                throw nvae;

            }
            switch (alt248) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2785:7: notOperator le= logicalNegationExpression
                    {
                    pushFollow(FOLLOW_notOperator_in_logicalNegationExpression18497);
                    notOperator412=notOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = notOperator412; }

                    pushFollow(FOLLOW_logicalNegationExpression_in_logicalNegationExpression18516);
                    le=logicalNegationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { notOperator412.setTerm(le); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2789:7: equalityExpression
                    {
                    pushFollow(FOLLOW_equalityExpression_in_logicalNegationExpression18532);
                    equalityExpression413=equalityExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = equalityExpression413; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "logicalNegationExpression"



    // $ANTLR start "notOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2793:1: notOperator returns [NotOp operator] : NOT_OP ;
    public NotOp notOperator() throws RecognitionException {
        NotOp operator = null;


        Token NOT_OP414=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2794:5: ( NOT_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2794:7: NOT_OP
            {
            NOT_OP414=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_notOperator18561); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new NotOp(NOT_OP414); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "notOperator"



    // $ANTLR start "equalityExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2798:1: equalityExpression returns [Term term] : ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )? ;
    public Term equalityExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        Term ee2 =null;

        BinaryOperatorExpression equalityOperator415 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2799:5: (ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2799:7: ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )?
            {
            pushFollow(FOLLOW_comparisonExpression_in_equalityExpression18593);
            ee1=comparisonExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ee1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2801:7: ( equalityOperator ee2= comparisonExpression )?
            int alt249=2;
            int LA249_0 = input.LA(1);

            if ( (LA249_0==EQUAL_OP||LA249_0==IDENTICAL_OP||LA249_0==NOT_EQUAL_OP) ) {
                alt249=1;
            }
            switch (alt249) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2802:9: equalityOperator ee2= comparisonExpression
                    {
                    pushFollow(FOLLOW_equalityOperator_in_equalityExpression18619);
                    equalityOperator415=equalityOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { equalityOperator415.setLeftTerm(term);
                              term = equalityOperator415; }

                    pushFollow(FOLLOW_comparisonExpression_in_equalityExpression18642);
                    ee2=comparisonExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { equalityOperator415.setRightTerm(ee2); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "equalityExpression"



    // $ANTLR start "equalityOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2810:1: equalityOperator returns [BinaryOperatorExpression operator] : ( EQUAL_OP | NOT_EQUAL_OP | IDENTICAL_OP );
    public BinaryOperatorExpression equalityOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token EQUAL_OP416=null;
        Token NOT_EQUAL_OP417=null;
        Token IDENTICAL_OP418=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2811:5: ( EQUAL_OP | NOT_EQUAL_OP | IDENTICAL_OP )
            int alt250=3;
            switch ( input.LA(1) ) {
            case EQUAL_OP:
                {
                alt250=1;
                }
                break;
            case NOT_EQUAL_OP:
                {
                alt250=2;
                }
                break;
            case IDENTICAL_OP:
                {
                alt250=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 250, 0, input);

                throw nvae;

            }

            switch (alt250) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2811:7: EQUAL_OP
                    {
                    EQUAL_OP416=(Token)match(input,EQUAL_OP,FOLLOW_EQUAL_OP_in_equalityOperator18682); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new EqualOp(EQUAL_OP416); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2813:7: NOT_EQUAL_OP
                    {
                    NOT_EQUAL_OP417=(Token)match(input,NOT_EQUAL_OP,FOLLOW_NOT_EQUAL_OP_in_equalityOperator18699); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new NotEqualOp(NOT_EQUAL_OP417); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2815:7: IDENTICAL_OP
                    {
                    IDENTICAL_OP418=(Token)match(input,IDENTICAL_OP,FOLLOW_IDENTICAL_OP_in_equalityOperator18715); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IdenticalOp(IDENTICAL_OP418); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "equalityOperator"



    // $ANTLR start "comparisonExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2819:1: comparisonExpression returns [Term term] : ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )? ;
    public Term comparisonExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        BinaryOperatorExpression co1 =null;

        Term ee2 =null;

        ComparisonOp lo1 =null;

        Term ee3 =null;

        ComparisonOp so1 =null;

        Term ee4 =null;

        ComparisonOp so2 =null;

        Term ee5 =null;

        TypeOperatorExpression to1 =null;

        StaticType t1 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2820:5: (ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2820:7: ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )?
            {
            pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression18746);
            ee1=existenceEmptinessExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ee1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2822:7: (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )?
            int alt252=5;
            switch ( input.LA(1) ) {
                case COMPARE_OP:
                case IN_OP:
                    {
                    alt252=1;
                    }
                    break;
                case LARGER_OP:
                case LARGE_AS_OP:
                    {
                    alt252=2;
                    }
                    break;
                case SMALLER_OP:
                case SMALL_AS_OP:
                    {
                    alt252=3;
                    }
                    break;
                case CASE_TYPES:
                case EXTENDS:
                case IS_OP:
                case SATISFIES:
                    {
                    alt252=4;
                    }
                    break;
            }

            switch (alt252) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2823:9: co1= comparisonOperator ee2= existenceEmptinessExpression
                    {
                    pushFollow(FOLLOW_comparisonOperator_in_comparisonExpression18774);
                    co1=comparisonOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { co1.setLeftTerm(term);
                              term = co1; }

                    pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression18797);
                    ee2=existenceEmptinessExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { co1.setRightTerm(ee2); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2828:9: lo1= largerOperator ee3= existenceEmptinessExpression
                    {
                    pushFollow(FOLLOW_largerOperator_in_comparisonExpression18819);
                    lo1=largerOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { lo1.setLeftTerm(term);
                              term = lo1; }

                    pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression18842);
                    ee3=existenceEmptinessExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { lo1.setRightTerm(ee3); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2833:9: so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )?
                    {
                    pushFollow(FOLLOW_smallerOperator_in_comparisonExpression18864);
                    so1=smallerOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { so1.setLeftTerm(term);
                              term = so1; }

                    pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression18887);
                    ee4=existenceEmptinessExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { so1.setRightTerm(ee4); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2838:9: (so2= smallerOperator ee5= existenceEmptinessExpression )?
                    int alt251=2;
                    int LA251_0 = input.LA(1);

                    if ( ((LA251_0 >= SMALLER_OP && LA251_0 <= SMALL_AS_OP)) ) {
                        alt251=1;
                    }
                    switch (alt251) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2839:11: so2= smallerOperator ee5= existenceEmptinessExpression
                            {
                            pushFollow(FOLLOW_smallerOperator_in_comparisonExpression18922);
                            so2=smallerOperator();

                            state._fsp--;
                            if (state.failed) return term;

                            pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression18936);
                            ee5=existenceEmptinessExpression();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { WithinOp w = new WithinOp(null); 
                                        Bound lb = so1 instanceof SmallerOp ?
                                            new OpenBound(null) : new ClosedBound(null);
                                        lb.setTerm(ee1);
                                        Bound ub = so2 instanceof SmallerOp ?
                                            new OpenBound(null) : new ClosedBound(null);
                                        ub.setTerm(ee5);
                                        w.setLowerBound(lb);
                                        w.setUpperBound(ub);
                                        w.setTerm(ee4);
                                        term = w; }

                            }
                            break;

                    }


                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2853:9: to1= typeOperator t1= type
                    {
                    pushFollow(FOLLOW_typeOperator_in_comparisonExpression18971);
                    to1=typeOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { to1.setTerm(ee1); 
                              term = to1; }

                    pushFollow(FOLLOW_type_in_comparisonExpression18993);
                    t1=type();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { to1.setType(t1); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "comparisonExpression"



    // $ANTLR start "smallerOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2867:1: smallerOperator returns [ComparisonOp operator] : ( SMALL_AS_OP | SMALLER_OP );
    public ComparisonOp smallerOperator() throws RecognitionException {
        ComparisonOp operator = null;


        Token SMALL_AS_OP419=null;
        Token SMALLER_OP420=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2868:5: ( SMALL_AS_OP | SMALLER_OP )
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==SMALL_AS_OP) ) {
                alt253=1;
            }
            else if ( (LA253_0==SMALLER_OP) ) {
                alt253=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 253, 0, input);

                throw nvae;

            }
            switch (alt253) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2868:7: SMALL_AS_OP
                    {
                    SMALL_AS_OP419=(Token)match(input,SMALL_AS_OP,FOLLOW_SMALL_AS_OP_in_smallerOperator19039); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SmallAsOp(SMALL_AS_OP419); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2870:7: SMALLER_OP
                    {
                    SMALLER_OP420=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_smallerOperator19055); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SmallerOp(SMALLER_OP420); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "smallerOperator"



    // $ANTLR start "largerOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2874:1: largerOperator returns [ComparisonOp operator] : ( LARGE_AS_OP | LARGER_OP );
    public ComparisonOp largerOperator() throws RecognitionException {
        ComparisonOp operator = null;


        Token LARGE_AS_OP421=null;
        Token LARGER_OP422=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2875:5: ( LARGE_AS_OP | LARGER_OP )
            int alt254=2;
            int LA254_0 = input.LA(1);

            if ( (LA254_0==LARGE_AS_OP) ) {
                alt254=1;
            }
            else if ( (LA254_0==LARGER_OP) ) {
                alt254=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 254, 0, input);

                throw nvae;

            }
            switch (alt254) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2875:7: LARGE_AS_OP
                    {
                    LARGE_AS_OP421=(Token)match(input,LARGE_AS_OP,FOLLOW_LARGE_AS_OP_in_largerOperator19084); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new LargeAsOp(LARGE_AS_OP421); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2877:7: LARGER_OP
                    {
                    LARGER_OP422=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_largerOperator19100); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new LargerOp(LARGER_OP422); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "largerOperator"



    // $ANTLR start "comparisonOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2881:1: comparisonOperator returns [BinaryOperatorExpression operator] : ( COMPARE_OP | IN_OP );
    public BinaryOperatorExpression comparisonOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token COMPARE_OP423=null;
        Token IN_OP424=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2882:5: ( COMPARE_OP | IN_OP )
            int alt255=2;
            int LA255_0 = input.LA(1);

            if ( (LA255_0==COMPARE_OP) ) {
                alt255=1;
            }
            else if ( (LA255_0==IN_OP) ) {
                alt255=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 255, 0, input);

                throw nvae;

            }
            switch (alt255) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2882:7: COMPARE_OP
                    {
                    COMPARE_OP423=(Token)match(input,COMPARE_OP,FOLLOW_COMPARE_OP_in_comparisonOperator19129); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new CompareOp(COMPARE_OP423); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2884:7: IN_OP
                    {
                    IN_OP424=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_comparisonOperator19146); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new InOp(IN_OP424); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "comparisonOperator"



    // $ANTLR start "typeOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2888:1: typeOperator returns [TypeOperatorExpression operator] : ( IS_OP | EXTENDS | SATISFIES | CASE_TYPES );
    public TypeOperatorExpression typeOperator() throws RecognitionException {
        TypeOperatorExpression operator = null;


        Token IS_OP425=null;
        Token EXTENDS426=null;
        Token SATISFIES427=null;
        Token CASE_TYPES428=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2889:5: ( IS_OP | EXTENDS | SATISFIES | CASE_TYPES )
            int alt256=4;
            switch ( input.LA(1) ) {
            case IS_OP:
                {
                alt256=1;
                }
                break;
            case EXTENDS:
                {
                alt256=2;
                }
                break;
            case SATISFIES:
                {
                alt256=3;
                }
                break;
            case CASE_TYPES:
                {
                alt256=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 256, 0, input);

                throw nvae;

            }

            switch (alt256) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2889:7: IS_OP
                    {
                    IS_OP425=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_typeOperator19175); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IsOp(IS_OP425); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2891:7: EXTENDS
                    {
                    EXTENDS426=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_typeOperator19191); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Extends(EXTENDS426); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2893:7: SATISFIES
                    {
                    SATISFIES427=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_typeOperator19207); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Satisfies(SATISFIES427); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2895:7: CASE_TYPES
                    {
                    CASE_TYPES428=(Token)match(input,CASE_TYPES,FOLLOW_CASE_TYPES_in_typeOperator19223); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new OfOp(CASE_TYPES428); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "typeOperator"



    // $ANTLR start "existenceEmptinessExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2899:1: existenceEmptinessExpression returns [Term term] : de1= entryRangeExpression (eno1= existsNonemptyOperator )? ;
    public Term existenceEmptinessExpression() throws RecognitionException {
        Term term = null;


        Term de1 =null;

        UnaryOperatorExpression eno1 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2900:5: (de1= entryRangeExpression (eno1= existsNonemptyOperator )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2900:7: de1= entryRangeExpression (eno1= existsNonemptyOperator )?
            {
            pushFollow(FOLLOW_entryRangeExpression_in_existenceEmptinessExpression19254);
            de1=entryRangeExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = de1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2902:7: (eno1= existsNonemptyOperator )?
            int alt257=2;
            int LA257_0 = input.LA(1);

            if ( (LA257_0==EXISTS||LA257_0==NONEMPTY) ) {
                alt257=1;
            }
            switch (alt257) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2903:9: eno1= existsNonemptyOperator
                    {
                    pushFollow(FOLLOW_existsNonemptyOperator_in_existenceEmptinessExpression19282);
                    eno1=existsNonemptyOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = eno1;
                              eno1.setTerm(de1); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "existenceEmptinessExpression"



    // $ANTLR start "existsNonemptyOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2913:1: existsNonemptyOperator returns [UnaryOperatorExpression operator] : ( EXISTS | NONEMPTY );
    public UnaryOperatorExpression existsNonemptyOperator() throws RecognitionException {
        UnaryOperatorExpression operator = null;


        Token EXISTS429=null;
        Token NONEMPTY430=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2914:5: ( EXISTS | NONEMPTY )
            int alt258=2;
            int LA258_0 = input.LA(1);

            if ( (LA258_0==EXISTS) ) {
                alt258=1;
            }
            else if ( (LA258_0==NONEMPTY) ) {
                alt258=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 258, 0, input);

                throw nvae;

            }
            switch (alt258) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2914:7: EXISTS
                    {
                    EXISTS429=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_existsNonemptyOperator19328); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Exists(EXISTS429); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2916:7: NONEMPTY
                    {
                    NONEMPTY430=(Token)match(input,NONEMPTY,FOLLOW_NONEMPTY_in_existsNonemptyOperator19345); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Nonempty(NONEMPTY430); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "existsNonemptyOperator"



    // $ANTLR start "entryRangeExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2920:1: entryRangeExpression returns [Term term] : ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )? ;
    public Term entryRangeExpression() throws RecognitionException {
        Term term = null;


        Term ae1 =null;

        Term ae2 =null;

        BinaryOperatorExpression rangeIntervalEntryOperator431 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2921:5: (ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2921:7: ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )?
            {
            pushFollow(FOLLOW_additiveExpression_in_entryRangeExpression19376);
            ae1=additiveExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ae1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2923:7: ( rangeIntervalEntryOperator ae2= additiveExpression )?
            int alt259=2;
            int LA259_0 = input.LA(1);

            if ( (LA259_0==ENTRY_OP||LA259_0==RANGE_OP||LA259_0==SEGMENT_OP) ) {
                alt259=1;
            }
            switch (alt259) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2924:9: rangeIntervalEntryOperator ae2= additiveExpression
                    {
                    pushFollow(FOLLOW_rangeIntervalEntryOperator_in_entryRangeExpression19402);
                    rangeIntervalEntryOperator431=rangeIntervalEntryOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { rangeIntervalEntryOperator431.setLeftTerm(term);
                              term = rangeIntervalEntryOperator431; }

                    pushFollow(FOLLOW_additiveExpression_in_entryRangeExpression19425);
                    ae2=additiveExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { rangeIntervalEntryOperator431.setRightTerm(ae2); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "entryRangeExpression"



    // $ANTLR start "rangeIntervalEntryOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2932:1: rangeIntervalEntryOperator returns [BinaryOperatorExpression operator] : ( RANGE_OP | SEGMENT_OP | ENTRY_OP );
    public BinaryOperatorExpression rangeIntervalEntryOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token RANGE_OP432=null;
        Token SEGMENT_OP433=null;
        Token ENTRY_OP434=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2933:5: ( RANGE_OP | SEGMENT_OP | ENTRY_OP )
            int alt260=3;
            switch ( input.LA(1) ) {
            case RANGE_OP:
                {
                alt260=1;
                }
                break;
            case SEGMENT_OP:
                {
                alt260=2;
                }
                break;
            case ENTRY_OP:
                {
                alt260=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 260, 0, input);

                throw nvae;

            }

            switch (alt260) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2933:7: RANGE_OP
                    {
                    RANGE_OP432=(Token)match(input,RANGE_OP,FOLLOW_RANGE_OP_in_rangeIntervalEntryOperator19465); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RangeOp(RANGE_OP432); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2935:7: SEGMENT_OP
                    {
                    SEGMENT_OP433=(Token)match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_rangeIntervalEntryOperator19482); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SegmentOp(SEGMENT_OP433); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2937:7: ENTRY_OP
                    {
                    ENTRY_OP434=(Token)match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_rangeIntervalEntryOperator19498); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new EntryOp(ENTRY_OP434); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "rangeIntervalEntryOperator"



    // $ANTLR start "additiveExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2941:1: additiveExpression returns [Term term] : me1= scaleExpression ( additiveOperator me2= scaleExpression )* ;
    public Term additiveExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        BinaryOperatorExpression additiveOperator435 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2942:5: (me1= scaleExpression ( additiveOperator me2= scaleExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2942:7: me1= scaleExpression ( additiveOperator me2= scaleExpression )*
            {
            pushFollow(FOLLOW_scaleExpression_in_additiveExpression19529);
            me1=scaleExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = me1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2944:7: ( additiveOperator me2= scaleExpression )*
            loop261:
            do {
                int alt261=2;
                int LA261_0 = input.LA(1);

                if ( (LA261_0==DIFFERENCE_OP||LA261_0==SUM_OP) ) {
                    alt261=1;
                }


                switch (alt261) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2945:9: additiveOperator me2= scaleExpression
            	    {
            	    pushFollow(FOLLOW_additiveOperator_in_additiveExpression19555);
            	    additiveOperator435=additiveOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { additiveOperator435.setLeftTerm(term);
            	              term = additiveOperator435; }

            	    pushFollow(FOLLOW_scaleExpression_in_additiveExpression19578);
            	    me2=scaleExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { additiveOperator435.setRightTerm(me2); }

            	    }
            	    break;

            	default :
            	    break loop261;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "additiveExpression"



    // $ANTLR start "additiveOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2953:1: additiveOperator returns [BinaryOperatorExpression operator] : ( SUM_OP | DIFFERENCE_OP );
    public BinaryOperatorExpression additiveOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token SUM_OP436=null;
        Token DIFFERENCE_OP437=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2954:5: ( SUM_OP | DIFFERENCE_OP )
            int alt262=2;
            int LA262_0 = input.LA(1);

            if ( (LA262_0==SUM_OP) ) {
                alt262=1;
            }
            else if ( (LA262_0==DIFFERENCE_OP) ) {
                alt262=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 262, 0, input);

                throw nvae;

            }
            switch (alt262) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2954:7: SUM_OP
                    {
                    SUM_OP436=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_additiveOperator19618); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SumOp(SUM_OP436); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2956:7: DIFFERENCE_OP
                    {
                    DIFFERENCE_OP437=(Token)match(input,DIFFERENCE_OP,FOLLOW_DIFFERENCE_OP_in_additiveOperator19635); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DifferenceOp(DIFFERENCE_OP437); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "additiveOperator"



    // $ANTLR start "scaleExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2960:1: scaleExpression returns [Term term] : multiplicativeExpression ( scaleOperator se= scaleExpression )? ;
    public Term scaleExpression() throws RecognitionException {
        Term term = null;


        Term se =null;

        Term multiplicativeExpression438 =null;

        ScaleOp scaleOperator439 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2961:5: ( multiplicativeExpression ( scaleOperator se= scaleExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2961:7: multiplicativeExpression ( scaleOperator se= scaleExpression )?
            {
            pushFollow(FOLLOW_multiplicativeExpression_in_scaleExpression19664);
            multiplicativeExpression438=multiplicativeExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = multiplicativeExpression438; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2963:7: ( scaleOperator se= scaleExpression )?
            int alt263=2;
            int LA263_0 = input.LA(1);

            if ( (LA263_0==SCALE_OP) ) {
                alt263=1;
            }
            switch (alt263) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2964:9: scaleOperator se= scaleExpression
                    {
                    pushFollow(FOLLOW_scaleOperator_in_scaleExpression19690);
                    scaleOperator439=scaleOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { scaleOperator439.setLeftTerm(term);
                              term = scaleOperator439; }

                    pushFollow(FOLLOW_scaleExpression_in_scaleExpression19712);
                    se=scaleExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { scaleOperator439.setRightTerm(se); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "scaleExpression"



    // $ANTLR start "multiplicativeExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2972:1: multiplicativeExpression returns [Term term] : ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )* ;
    public Term multiplicativeExpression() throws RecognitionException {
        Term term = null;


        Term ue1 =null;

        Term ue2 =null;

        BinaryOperatorExpression multiplicativeOperator440 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2973:5: (ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2973:7: ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )*
            {
            pushFollow(FOLLOW_unionExpression_in_multiplicativeExpression19754);
            ue1=unionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ue1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2975:7: ( multiplicativeOperator ue2= unionExpression )*
            loop264:
            do {
                int alt264=2;
                int LA264_0 = input.LA(1);

                if ( ((LA264_0 >= PRODUCT_OP && LA264_0 <= QUOTIENT_OP)||LA264_0==REMAINDER_OP) ) {
                    alt264=1;
                }


                switch (alt264) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2976:9: multiplicativeOperator ue2= unionExpression
            	    {
            	    pushFollow(FOLLOW_multiplicativeOperator_in_multiplicativeExpression19780);
            	    multiplicativeOperator440=multiplicativeOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { multiplicativeOperator440.setLeftTerm(term);
            	              term = multiplicativeOperator440; }

            	    pushFollow(FOLLOW_unionExpression_in_multiplicativeExpression19803);
            	    ue2=unionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { multiplicativeOperator440.setRightTerm(ue2); }

            	    }
            	    break;

            	default :
            	    break loop264;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "multiplicativeExpression"



    // $ANTLR start "multiplicativeOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2984:1: multiplicativeOperator returns [BinaryOperatorExpression operator] : ( PRODUCT_OP | QUOTIENT_OP | REMAINDER_OP );
    public BinaryOperatorExpression multiplicativeOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token PRODUCT_OP441=null;
        Token QUOTIENT_OP442=null;
        Token REMAINDER_OP443=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2985:5: ( PRODUCT_OP | QUOTIENT_OP | REMAINDER_OP )
            int alt265=3;
            switch ( input.LA(1) ) {
            case PRODUCT_OP:
                {
                alt265=1;
                }
                break;
            case QUOTIENT_OP:
                {
                alt265=2;
                }
                break;
            case REMAINDER_OP:
                {
                alt265=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 265, 0, input);

                throw nvae;

            }

            switch (alt265) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2985:7: PRODUCT_OP
                    {
                    PRODUCT_OP441=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_multiplicativeOperator19843); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ProductOp(PRODUCT_OP441); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2987:7: QUOTIENT_OP
                    {
                    QUOTIENT_OP442=(Token)match(input,QUOTIENT_OP,FOLLOW_QUOTIENT_OP_in_multiplicativeOperator19860); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new QuotientOp(QUOTIENT_OP442); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2989:7: REMAINDER_OP
                    {
                    REMAINDER_OP443=(Token)match(input,REMAINDER_OP,FOLLOW_REMAINDER_OP_in_multiplicativeOperator19876); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RemainderOp(REMAINDER_OP443); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "multiplicativeOperator"



    // $ANTLR start "unionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2993:1: unionExpression returns [Term term] : ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )* ;
    public Term unionExpression() throws RecognitionException {
        Term term = null;


        Term ie1 =null;

        Term ie2 =null;

        BinaryOperatorExpression unionOperator444 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2994:5: (ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2994:7: ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )*
            {
            pushFollow(FOLLOW_intersectionExpression_in_unionExpression19907);
            ie1=intersectionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ie1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2996:7: ( unionOperator ie2= intersectionExpression )*
            loop266:
            do {
                int alt266=2;
                int LA266_0 = input.LA(1);

                if ( (LA266_0==COMPLEMENT_OP||LA266_0==UNION_OP) ) {
                    alt266=1;
                }


                switch (alt266) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2997:9: unionOperator ie2= intersectionExpression
            	    {
            	    pushFollow(FOLLOW_unionOperator_in_unionExpression19933);
            	    unionOperator444=unionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { unionOperator444.setLeftTerm(term);
            	              term = unionOperator444; }

            	    pushFollow(FOLLOW_intersectionExpression_in_unionExpression19956);
            	    ie2=intersectionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { unionOperator444.setRightTerm(ie2); }

            	    }
            	    break;

            	default :
            	    break loop266;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "unionExpression"



    // $ANTLR start "unionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3005:1: unionOperator returns [BinaryOperatorExpression operator] : ( UNION_OP | COMPLEMENT_OP );
    public BinaryOperatorExpression unionOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token UNION_OP445=null;
        Token COMPLEMENT_OP446=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3006:5: ( UNION_OP | COMPLEMENT_OP )
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==UNION_OP) ) {
                alt267=1;
            }
            else if ( (LA267_0==COMPLEMENT_OP) ) {
                alt267=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 267, 0, input);

                throw nvae;

            }
            switch (alt267) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3006:7: UNION_OP
                    {
                    UNION_OP445=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_unionOperator20000); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new UnionOp(UNION_OP445); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3008:7: COMPLEMENT_OP
                    {
                    COMPLEMENT_OP446=(Token)match(input,COMPLEMENT_OP,FOLLOW_COMPLEMENT_OP_in_unionOperator20016); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ComplementOp(COMPLEMENT_OP446); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "unionOperator"



    // $ANTLR start "intersectionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3012:1: intersectionExpression returns [Term term] : ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )* ;
    public Term intersectionExpression() throws RecognitionException {
        Term term = null;


        Term ne1 =null;

        Term ne2 =null;

        BinaryOperatorExpression intersectionOperator447 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3013:5: (ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3013:7: ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )*
            {
            pushFollow(FOLLOW_negationComplementExpression_in_intersectionExpression20047);
            ne1=negationComplementExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ne1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3015:7: ( intersectionOperator ne2= negationComplementExpression )*
            loop268:
            do {
                int alt268=2;
                int LA268_0 = input.LA(1);

                if ( (LA268_0==INTERSECTION_OP) ) {
                    alt268=1;
                }


                switch (alt268) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3016:9: intersectionOperator ne2= negationComplementExpression
            	    {
            	    pushFollow(FOLLOW_intersectionOperator_in_intersectionExpression20073);
            	    intersectionOperator447=intersectionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { intersectionOperator447.setLeftTerm(term);
            	              term = intersectionOperator447; }

            	    pushFollow(FOLLOW_negationComplementExpression_in_intersectionExpression20096);
            	    ne2=negationComplementExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { intersectionOperator447.setRightTerm(ne2); }

            	    }
            	    break;

            	default :
            	    break loop268;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "intersectionExpression"



    // $ANTLR start "intersectionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3024:1: intersectionOperator returns [BinaryOperatorExpression operator] : INTERSECTION_OP ;
    public BinaryOperatorExpression intersectionOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token INTERSECTION_OP448=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3025:5: ( INTERSECTION_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3025:7: INTERSECTION_OP
            {
            INTERSECTION_OP448=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_intersectionOperator20140); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new IntersectionOp(INTERSECTION_OP448); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "intersectionOperator"



    // $ANTLR start "negationComplementExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3029:1: negationComplementExpression returns [Term term] : ( unaryMinusOrComplementOperator ne= negationComplementExpression | exponentiationExpression );
    public Term negationComplementExpression() throws RecognitionException {
        Term term = null;


        Term ne =null;

        UnaryOperatorExpression unaryMinusOrComplementOperator449 =null;

        Term exponentiationExpression450 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3030:5: ( unaryMinusOrComplementOperator ne= negationComplementExpression | exponentiationExpression )
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==DIFFERENCE_OP||LA269_0==SUM_OP) ) {
                alt269=1;
            }
            else if ( (LA269_0==BACKTICK||LA269_0==CHAR_LITERAL||LA269_0==DECREMENT_OP||LA269_0==DYNAMIC||LA269_0==FLOAT_LITERAL||LA269_0==INCREMENT_OP||(LA269_0 >= LBRACE && LA269_0 <= LBRACKET)||LA269_0==LIDENTIFIER||LA269_0==LPAREN||LA269_0==NATURAL_LITERAL||LA269_0==OBJECT_DEFINITION||(LA269_0 >= OUTER && LA269_0 <= PACKAGE)||LA269_0==STRING_LITERAL||LA269_0==STRING_START||LA269_0==SUPER||LA269_0==THIS||LA269_0==UIDENTIFIER||LA269_0==VERBATIM_STRING) ) {
                alt269=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                    new NoViableAltException("", 269, 0, input);

                throw nvae;

            }
            switch (alt269) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3030:7: unaryMinusOrComplementOperator ne= negationComplementExpression
                    {
                    pushFollow(FOLLOW_unaryMinusOrComplementOperator_in_negationComplementExpression20169);
                    unaryMinusOrComplementOperator449=unaryMinusOrComplementOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = unaryMinusOrComplementOperator449; }

                    pushFollow(FOLLOW_negationComplementExpression_in_negationComplementExpression20188);
                    ne=negationComplementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { unaryMinusOrComplementOperator449.setTerm(ne); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3034:7: exponentiationExpression
                    {
                    pushFollow(FOLLOW_exponentiationExpression_in_negationComplementExpression20204);
                    exponentiationExpression450=exponentiationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = exponentiationExpression450; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "negationComplementExpression"



    // $ANTLR start "unaryMinusOrComplementOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3038:1: unaryMinusOrComplementOperator returns [UnaryOperatorExpression operator] : ( DIFFERENCE_OP | SUM_OP );
    public UnaryOperatorExpression unaryMinusOrComplementOperator() throws RecognitionException {
        UnaryOperatorExpression operator = null;


        Token DIFFERENCE_OP451=null;
        Token SUM_OP452=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3039:5: ( DIFFERENCE_OP | SUM_OP )
            int alt270=2;
            int LA270_0 = input.LA(1);

            if ( (LA270_0==DIFFERENCE_OP) ) {
                alt270=1;
            }
            else if ( (LA270_0==SUM_OP) ) {
                alt270=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 270, 0, input);

                throw nvae;

            }
            switch (alt270) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3039:7: DIFFERENCE_OP
                    {
                    DIFFERENCE_OP451=(Token)match(input,DIFFERENCE_OP,FOLLOW_DIFFERENCE_OP_in_unaryMinusOrComplementOperator20233); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new NegativeOp(DIFFERENCE_OP451); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3041:7: SUM_OP
                    {
                    SUM_OP452=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_unaryMinusOrComplementOperator20250); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PositiveOp(SUM_OP452); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "unaryMinusOrComplementOperator"



    // $ANTLR start "exponentiationExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3045:1: exponentiationExpression returns [Term term] : incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )? ;
    public Term exponentiationExpression() throws RecognitionException {
        Term term = null;


        Term ee =null;

        Term incrementDecrementExpression453 =null;

        PowerOp exponentiationOperator454 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3046:5: ( incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3046:7: incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )?
            {
            pushFollow(FOLLOW_incrementDecrementExpression_in_exponentiationExpression20279);
            incrementDecrementExpression453=incrementDecrementExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = incrementDecrementExpression453; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3048:7: ( exponentiationOperator ee= exponentiationExpression )?
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==POWER_OP) ) {
                alt271=1;
            }
            switch (alt271) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3049:9: exponentiationOperator ee= exponentiationExpression
                    {
                    pushFollow(FOLLOW_exponentiationOperator_in_exponentiationExpression20305);
                    exponentiationOperator454=exponentiationOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { exponentiationOperator454.setLeftTerm(term);
                              term = exponentiationOperator454; }

                    pushFollow(FOLLOW_exponentiationExpression_in_exponentiationExpression20327);
                    ee=exponentiationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { exponentiationOperator454.setRightTerm(ee); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "exponentiationExpression"



    // $ANTLR start "exponentiationOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3057:1: exponentiationOperator returns [PowerOp operator] : POWER_OP ;
    public PowerOp exponentiationOperator() throws RecognitionException {
        PowerOp operator = null;


        Token POWER_OP455=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3058:5: ( POWER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3058:7: POWER_OP
            {
            POWER_OP455=(Token)match(input,POWER_OP,FOLLOW_POWER_OP_in_exponentiationOperator20367); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new PowerOp(POWER_OP455); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "exponentiationOperator"



    // $ANTLR start "scaleOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3062:1: scaleOperator returns [ScaleOp operator] : SCALE_OP ;
    public ScaleOp scaleOperator() throws RecognitionException {
        ScaleOp operator = null;


        Token SCALE_OP456=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3063:5: ( SCALE_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3063:7: SCALE_OP
            {
            SCALE_OP456=(Token)match(input,SCALE_OP,FOLLOW_SCALE_OP_in_scaleOperator20397); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new ScaleOp(SCALE_OP456); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "scaleOperator"



    // $ANTLR start "incrementDecrementExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3067:1: incrementDecrementExpression returns [Term term] : ( prefixOperator ie= incrementDecrementExpression | postfixIncrementDecrementExpression );
    public Term incrementDecrementExpression() throws RecognitionException {
        Term term = null;


        Term ie =null;

        PrefixOperatorExpression prefixOperator457 =null;

        Term postfixIncrementDecrementExpression458 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3068:5: ( prefixOperator ie= incrementDecrementExpression | postfixIncrementDecrementExpression )
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( (LA272_0==DECREMENT_OP||LA272_0==INCREMENT_OP) ) {
                alt272=1;
            }
            else if ( (LA272_0==BACKTICK||LA272_0==CHAR_LITERAL||LA272_0==DYNAMIC||LA272_0==FLOAT_LITERAL||(LA272_0 >= LBRACE && LA272_0 <= LBRACKET)||LA272_0==LIDENTIFIER||LA272_0==LPAREN||LA272_0==NATURAL_LITERAL||LA272_0==OBJECT_DEFINITION||(LA272_0 >= OUTER && LA272_0 <= PACKAGE)||LA272_0==STRING_LITERAL||LA272_0==STRING_START||LA272_0==SUPER||LA272_0==THIS||LA272_0==UIDENTIFIER||LA272_0==VERBATIM_STRING) ) {
                alt272=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                    new NoViableAltException("", 272, 0, input);

                throw nvae;

            }
            switch (alt272) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3068:7: prefixOperator ie= incrementDecrementExpression
                    {
                    pushFollow(FOLLOW_prefixOperator_in_incrementDecrementExpression20427);
                    prefixOperator457=prefixOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = prefixOperator457; }

                    pushFollow(FOLLOW_incrementDecrementExpression_in_incrementDecrementExpression20445);
                    ie=incrementDecrementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { prefixOperator457.setTerm(ie); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3072:7: postfixIncrementDecrementExpression
                    {
                    pushFollow(FOLLOW_postfixIncrementDecrementExpression_in_incrementDecrementExpression20461);
                    postfixIncrementDecrementExpression458=postfixIncrementDecrementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = postfixIncrementDecrementExpression458; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "incrementDecrementExpression"



    // $ANTLR start "prefixOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3076:1: prefixOperator returns [PrefixOperatorExpression operator] : ( DECREMENT_OP | INCREMENT_OP );
    public PrefixOperatorExpression prefixOperator() throws RecognitionException {
        PrefixOperatorExpression operator = null;


        Token DECREMENT_OP459=null;
        Token INCREMENT_OP460=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3077:5: ( DECREMENT_OP | INCREMENT_OP )
            int alt273=2;
            int LA273_0 = input.LA(1);

            if ( (LA273_0==DECREMENT_OP) ) {
                alt273=1;
            }
            else if ( (LA273_0==INCREMENT_OP) ) {
                alt273=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 273, 0, input);

                throw nvae;

            }
            switch (alt273) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3077:7: DECREMENT_OP
                    {
                    DECREMENT_OP459=(Token)match(input,DECREMENT_OP,FOLLOW_DECREMENT_OP_in_prefixOperator20490); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DecrementOp(DECREMENT_OP459); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3079:7: INCREMENT_OP
                    {
                    INCREMENT_OP460=(Token)match(input,INCREMENT_OP,FOLLOW_INCREMENT_OP_in_prefixOperator20507); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IncrementOp(INCREMENT_OP460); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "prefixOperator"



    // $ANTLR start "postfixIncrementDecrementExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3083:1: postfixIncrementDecrementExpression returns [Term term] : primary ( postfixOperator )* ;
    public Term postfixIncrementDecrementExpression() throws RecognitionException {
        Term term = null;


        Primary primary461 =null;

        PostfixOperatorExpression postfixOperator462 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3084:5: ( primary ( postfixOperator )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3084:7: primary ( postfixOperator )*
            {
            pushFollow(FOLLOW_primary_in_postfixIncrementDecrementExpression20537);
            primary461=primary();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = primary461; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3086:7: ( postfixOperator )*
            loop274:
            do {
                int alt274=2;
                int LA274_0 = input.LA(1);

                if ( (LA274_0==DECREMENT_OP||LA274_0==INCREMENT_OP) ) {
                    alt274=1;
                }


                switch (alt274) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3087:9: postfixOperator
            	    {
            	    pushFollow(FOLLOW_postfixOperator_in_postfixIncrementDecrementExpression20565);
            	    postfixOperator462=postfixOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { postfixOperator462.setTerm(term);
            	              term = postfixOperator462; }

            	    }
            	    break;

            	default :
            	    break loop274;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "postfixIncrementDecrementExpression"



    // $ANTLR start "postfixOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3093:1: postfixOperator returns [PostfixOperatorExpression operator] : ( DECREMENT_OP | INCREMENT_OP );
    public PostfixOperatorExpression postfixOperator() throws RecognitionException {
        PostfixOperatorExpression operator = null;


        Token DECREMENT_OP463=null;
        Token INCREMENT_OP464=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3094:5: ( DECREMENT_OP | INCREMENT_OP )
            int alt275=2;
            int LA275_0 = input.LA(1);

            if ( (LA275_0==DECREMENT_OP) ) {
                alt275=1;
            }
            else if ( (LA275_0==INCREMENT_OP) ) {
                alt275=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 275, 0, input);

                throw nvae;

            }
            switch (alt275) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3094:7: DECREMENT_OP
                    {
                    DECREMENT_OP463=(Token)match(input,DECREMENT_OP,FOLLOW_DECREMENT_OP_in_postfixOperator20605); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PostfixDecrementOp(DECREMENT_OP463); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3096:7: INCREMENT_OP
                    {
                    INCREMENT_OP464=(Token)match(input,INCREMENT_OP,FOLLOW_INCREMENT_OP_in_postfixOperator20622); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PostfixIncrementOp(INCREMENT_OP464); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "postfixOperator"



    // $ANTLR start "selfReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3100:1: selfReference returns [Atom atom] : ( THIS | SUPER | OUTER | PACKAGE );
    public Atom selfReference() throws RecognitionException {
        Atom atom = null;


        Token THIS465=null;
        Token SUPER466=null;
        Token OUTER467=null;
        Token PACKAGE468=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3101:5: ( THIS | SUPER | OUTER | PACKAGE )
            int alt276=4;
            switch ( input.LA(1) ) {
            case THIS:
                {
                alt276=1;
                }
                break;
            case SUPER:
                {
                alt276=2;
                }
                break;
            case OUTER:
                {
                alt276=3;
                }
                break;
            case PACKAGE:
                {
                alt276=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return atom;}
                NoViableAltException nvae =
                    new NoViableAltException("", 276, 0, input);

                throw nvae;

            }

            switch (alt276) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3101:7: THIS
                    {
                    THIS465=(Token)match(input,THIS,FOLLOW_THIS_in_selfReference20652); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new This(THIS465); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3103:7: SUPER
                    {
                    SUPER466=(Token)match(input,SUPER,FOLLOW_SUPER_in_selfReference20668); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Super(SUPER466); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3105:7: OUTER
                    {
                    OUTER467=(Token)match(input,OUTER,FOLLOW_OUTER_in_selfReference20685); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Outer(OUTER467); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3107:7: PACKAGE
                    {
                    PACKAGE468=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_selfReference20701); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Package(PACKAGE468); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return atom;
    }
    // $ANTLR end "selfReference"



    // $ANTLR start "nonstringLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3111:1: nonstringLiteral returns [Literal literal] : ( NATURAL_LITERAL | FLOAT_LITERAL | CHAR_LITERAL );
    public Literal nonstringLiteral() throws RecognitionException {
        Literal literal = null;


        Token NATURAL_LITERAL469=null;
        Token FLOAT_LITERAL470=null;
        Token CHAR_LITERAL471=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3112:5: ( NATURAL_LITERAL | FLOAT_LITERAL | CHAR_LITERAL )
            int alt277=3;
            switch ( input.LA(1) ) {
            case NATURAL_LITERAL:
                {
                alt277=1;
                }
                break;
            case FLOAT_LITERAL:
                {
                alt277=2;
                }
                break;
            case CHAR_LITERAL:
                {
                alt277=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return literal;}
                NoViableAltException nvae =
                    new NoViableAltException("", 277, 0, input);

                throw nvae;

            }

            switch (alt277) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3112:7: NATURAL_LITERAL
                    {
                    NATURAL_LITERAL469=(Token)match(input,NATURAL_LITERAL,FOLLOW_NATURAL_LITERAL_in_nonstringLiteral20734); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new NaturalLiteral(NATURAL_LITERAL469); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3114:7: FLOAT_LITERAL
                    {
                    FLOAT_LITERAL470=(Token)match(input,FLOAT_LITERAL,FOLLOW_FLOAT_LITERAL_in_nonstringLiteral20751); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new FloatLiteral(FLOAT_LITERAL470); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3116:7: CHAR_LITERAL
                    {
                    CHAR_LITERAL471=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_nonstringLiteral20768); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new CharLiteral(CHAR_LITERAL471); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "nonstringLiteral"



    // $ANTLR start "stringLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3120:1: stringLiteral returns [StringLiteral stringLiteral] : ( STRING_LITERAL | VERBATIM_STRING );
    public StringLiteral stringLiteral() throws RecognitionException {
        StringLiteral stringLiteral = null;


        Token STRING_LITERAL472=null;
        Token VERBATIM_STRING473=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3121:5: ( STRING_LITERAL | VERBATIM_STRING )
            int alt278=2;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==STRING_LITERAL) ) {
                alt278=1;
            }
            else if ( (LA278_0==VERBATIM_STRING) ) {
                alt278=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return stringLiteral;}
                NoViableAltException nvae =
                    new NoViableAltException("", 278, 0, input);

                throw nvae;

            }
            switch (alt278) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3121:7: STRING_LITERAL
                    {
                    STRING_LITERAL472=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_stringLiteral20798); if (state.failed) return stringLiteral;

                    if ( state.backtracking==0 ) { stringLiteral = new StringLiteral(STRING_LITERAL472); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3123:7: VERBATIM_STRING
                    {
                    VERBATIM_STRING473=(Token)match(input,VERBATIM_STRING,FOLLOW_VERBATIM_STRING_in_stringLiteral20815); if (state.failed) return stringLiteral;

                    if ( state.backtracking==0 ) { stringLiteral = new StringLiteral(VERBATIM_STRING473); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return stringLiteral;
    }
    // $ANTLR end "stringLiteral"



    // $ANTLR start "stringExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3127:1: stringExpression returns [Atom atom] : (sl1= stringLiteral | STRING_START e1= functionOrExpression ( STRING_MID e2= functionOrExpression )* STRING_END );
    public Atom stringExpression() throws RecognitionException {
        Atom atom = null;


        Token STRING_START474=null;
        Token STRING_MID475=null;
        Token STRING_END476=null;
        StringLiteral sl1 =null;

        Expression e1 =null;

        Expression e2 =null;


         StringTemplate st=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3129:5: (sl1= stringLiteral | STRING_START e1= functionOrExpression ( STRING_MID e2= functionOrExpression )* STRING_END )
            int alt280=2;
            int LA280_0 = input.LA(1);

            if ( (LA280_0==STRING_LITERAL||LA280_0==VERBATIM_STRING) ) {
                alt280=1;
            }
            else if ( (LA280_0==STRING_START) ) {
                alt280=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return atom;}
                NoViableAltException nvae =
                    new NoViableAltException("", 280, 0, input);

                throw nvae;

            }
            switch (alt280) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3129:7: sl1= stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_stringExpression20855);
                    sl1=stringLiteral();

                    state._fsp--;
                    if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom =sl1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3131:7: STRING_START e1= functionOrExpression ( STRING_MID e2= functionOrExpression )* STRING_END
                    {
                    STRING_START474=(Token)match(input,STRING_START,FOLLOW_STRING_START_in_stringExpression20871); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { st = new StringTemplate(null);
                            st.addStringLiteral(new StringLiteral(STRING_START474));
                            atom =st; }

                    pushFollow(FOLLOW_functionOrExpression_in_stringExpression20889);
                    e1=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return atom;

                    if ( state.backtracking==0 ) { if (e1!=null) 
                                st.addExpression(e1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3138:7: ( STRING_MID e2= functionOrExpression )*
                    loop279:
                    do {
                        int alt279=2;
                        int LA279_0 = input.LA(1);

                        if ( (LA279_0==STRING_MID) ) {
                            alt279=1;
                        }


                        switch (alt279) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3139:9: STRING_MID e2= functionOrExpression
                    	    {
                    	    STRING_MID475=(Token)match(input,STRING_MID,FOLLOW_STRING_MID_in_stringExpression20915); if (state.failed) return atom;

                    	    if ( state.backtracking==0 ) { st.addStringLiteral(new StringLiteral(STRING_MID475)); }

                    	    pushFollow(FOLLOW_functionOrExpression_in_stringExpression20937);
                    	    e2=functionOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return atom;

                    	    if ( state.backtracking==0 ) { if (e2!=null) 
                    	                  st.addExpression(e2); }

                    	    }
                    	    break;

                    	default :
                    	    break loop279;
                        }
                    } while (true);


                    STRING_END476=(Token)match(input,STRING_END,FOLLOW_STRING_END_in_stringExpression20964); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { st.addStringLiteral(new StringLiteral(STRING_END476)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return atom;
    }
    // $ANTLR end "stringExpression"



    // $ANTLR start "typeArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3149:1: typeArguments returns [TypeArgumentList typeArgumentList] : SMALLER_OP ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )? LARGER_OP ;
    public TypeArgumentList typeArguments() throws RecognitionException {
        TypeArgumentList typeArgumentList = null;


        Token c=null;
        Token SMALLER_OP477=null;
        Token LARGER_OP478=null;
        TypeVariance v1 =null;

        StaticType ta1 =null;

        StaticType ta0 =null;

        TypeVariance v2 =null;

        StaticType ta2 =null;

        StaticType ta3 =null;


         TypeVariance v=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3151:5: ( SMALLER_OP ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )? LARGER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3151:7: SMALLER_OP ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )? LARGER_OP
            {
            SMALLER_OP477=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArguments21002); if (state.failed) return typeArgumentList;

            if ( state.backtracking==0 ) { typeArgumentList = new TypeArgumentList(SMALLER_OP477); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3153:7: ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )?
            int alt287=2;
            int LA287_0 = input.LA(1);

            if ( (LA287_0==IN_OP||(LA287_0 >= LBRACE && LA287_0 <= LBRACKET)||LA287_0==OUT||LA287_0==PACKAGE||LA287_0==SMALLER_OP||LA287_0==UIDENTIFIER) ) {
                alt287=1;
            }
            switch (alt287) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3154:9: (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )*
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3154:9: (v1= variance (ta1= type )? |ta0= type )
                    int alt282=2;
                    int LA282_0 = input.LA(1);

                    if ( (LA282_0==IN_OP||LA282_0==OUT) ) {
                        alt282=1;
                    }
                    else if ( ((LA282_0 >= LBRACE && LA282_0 <= LBRACKET)||LA282_0==PACKAGE||LA282_0==SMALLER_OP||LA282_0==UIDENTIFIER) ) {
                        alt282=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 282, 0, input);

                        throw nvae;

                    }
                    switch (alt282) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3155:11: v1= variance (ta1= type )?
                            {
                            pushFollow(FOLLOW_variance_in_typeArguments21042);
                            v1=variance();

                            state._fsp--;
                            if (state.failed) return typeArgumentList;

                            if ( state.backtracking==0 ) { v = v1; }

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3157:11: (ta1= type )?
                            int alt281=2;
                            int LA281_0 = input.LA(1);

                            if ( ((LA281_0 >= LBRACE && LA281_0 <= LBRACKET)||LA281_0==PACKAGE||LA281_0==SMALLER_OP||LA281_0==UIDENTIFIER) ) {
                                alt281=1;
                            }
                            switch (alt281) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3158:13: ta1= type
                                    {
                                    pushFollow(FOLLOW_type_in_typeArguments21082);
                                    ta1=type();

                                    state._fsp--;
                                    if (state.failed) return typeArgumentList;

                                    if ( state.backtracking==0 ) { if (ta1!=null)
                                                      typeArgumentList.addType(ta1);
                                                  if (v!=null && ta1!=null) 
                                                      ta1.setTypeVariance(v); }

                                    }
                                    break;

                            }


                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3165:11: ta0= type
                            {
                            pushFollow(FOLLOW_type_in_typeArguments21133);
                            ta0=type();

                            state._fsp--;
                            if (state.failed) return typeArgumentList;

                            if ( state.backtracking==0 ) { if (ta0!=null)
                                            typeArgumentList.addType(ta0); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3169:9: (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )*
                    loop286:
                    do {
                        int alt286=2;
                        int LA286_0 = input.LA(1);

                        if ( (LA286_0==COMMA) ) {
                            alt286=1;
                        }


                        switch (alt286) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3170:11: c= COMMA (v2= variance (ta2= type |) | (ta3= type |) )
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_typeArguments21179); if (state.failed) return typeArgumentList;

                    	    if ( state.backtracking==0 ) { typeArgumentList.setEndToken(c); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3172:11: (v2= variance (ta2= type |) | (ta3= type |) )
                    	    int alt285=2;
                    	    int LA285_0 = input.LA(1);

                    	    if ( (LA285_0==IN_OP||LA285_0==OUT) ) {
                    	        alt285=1;
                    	    }
                    	    else if ( (LA285_0==COMMA||LA285_0==LARGER_OP||(LA285_0 >= LBRACE && LA285_0 <= LBRACKET)||LA285_0==PACKAGE||LA285_0==SMALLER_OP||LA285_0==UIDENTIFIER) ) {
                    	        alt285=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 285, 0, input);

                    	        throw nvae;

                    	    }
                    	    switch (alt285) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3173:13: v2= variance (ta2= type |)
                    	            {
                    	            pushFollow(FOLLOW_variance_in_typeArguments21219);
                    	            v2=variance();

                    	            state._fsp--;
                    	            if (state.failed) return typeArgumentList;

                    	            if ( state.backtracking==0 ) { v = v2; }

                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3175:13: (ta2= type |)
                    	            int alt283=2;
                    	            int LA283_0 = input.LA(1);

                    	            if ( ((LA283_0 >= LBRACE && LA283_0 <= LBRACKET)||LA283_0==PACKAGE||LA283_0==SMALLER_OP||LA283_0==UIDENTIFIER) ) {
                    	                alt283=1;
                    	            }
                    	            else if ( (LA283_0==COMMA||LA283_0==LARGER_OP) ) {
                    	                alt283=2;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 283, 0, input);

                    	                throw nvae;

                    	            }
                    	            switch (alt283) {
                    	                case 1 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3176:15: ta2= type
                    	                    {
                    	                    pushFollow(FOLLOW_type_in_typeArguments21265);
                    	                    ta2=type();

                    	                    state._fsp--;
                    	                    if (state.failed) return typeArgumentList;

                    	                    if ( state.backtracking==0 ) { if (ta2!=null) {
                    	                                        typeArgumentList.addType(ta2);
                    	                                        if (v!=null && ta2!=null) 
                    	                                            ta2.setTypeVariance(v);
                    	                                        typeArgumentList.setEndToken(null); } }

                    	                    }
                    	                    break;
                    	                case 2 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3182:15: 
                    	                    {
                    	                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                                          new MismatchedTokenException(UIDENTIFIER, input)); }

                    	                    }
                    	                    break;

                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3186:13: (ta3= type |)
                    	            {
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3186:13: (ta3= type |)
                    	            int alt284=2;
                    	            int LA284_0 = input.LA(1);

                    	            if ( ((LA284_0 >= LBRACE && LA284_0 <= LBRACKET)||LA284_0==PACKAGE||LA284_0==SMALLER_OP||LA284_0==UIDENTIFIER) ) {
                    	                alt284=1;
                    	            }
                    	            else if ( (LA284_0==COMMA||LA284_0==LARGER_OP) ) {
                    	                alt284=2;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 284, 0, input);

                    	                throw nvae;

                    	            }
                    	            switch (alt284) {
                    	                case 1 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3187:15: ta3= type
                    	                    {
                    	                    pushFollow(FOLLOW_type_in_typeArguments21356);
                    	                    ta3=type();

                    	                    state._fsp--;
                    	                    if (state.failed) return typeArgumentList;

                    	                    if ( state.backtracking==0 ) { if (ta3!=null) {
                    	                                        typeArgumentList.addType(ta3);
                    	                                        typeArgumentList.setEndToken(null); } }

                    	                    }
                    	                    break;
                    	                case 2 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3191:15: 
                    	                    {
                    	                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                                      new MismatchedTokenException(UIDENTIFIER, input)); }

                    	                    }
                    	                    break;

                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop286;
                        }
                    } while (true);


                    }
                    break;

            }


            LARGER_OP478=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeArguments21442); if (state.failed) return typeArgumentList;

            if ( state.backtracking==0 ) { typeArgumentList.setEndToken(LARGER_OP478); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeArgumentList;
    }
    // $ANTLR end "typeArguments"



    // $ANTLR start "variadicType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3201:1: variadicType returns [Type type] : ( ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )? |t= type );
    public Type variadicType() throws RecognitionException {
        Type type = null;


        Token PRODUCT_OP479=null;
        Token SUM_OP480=null;
        StaticType at =null;

        StaticType t =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3202:5: ( ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )? |t= type )
            int alt289=2;
            switch ( input.LA(1) ) {
            case UIDENTIFIER:
                {
                int LA289_1 = input.LA(2);

                if ( (synpred36_Ceylon()) ) {
                    alt289=1;
                }
                else if ( (true) ) {
                    alt289=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 289, 1, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA289_2 = input.LA(2);

                if ( (synpred36_Ceylon()) ) {
                    alt289=1;
                }
                else if ( (true) ) {
                    alt289=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 289, 2, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA289_3 = input.LA(2);

                if ( (synpred36_Ceylon()) ) {
                    alt289=1;
                }
                else if ( (true) ) {
                    alt289=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 289, 3, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA289_4 = input.LA(2);

                if ( (synpred36_Ceylon()) ) {
                    alt289=1;
                }
                else if ( (true) ) {
                    alt289=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 289, 4, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA289_5 = input.LA(2);

                if ( (synpred36_Ceylon()) ) {
                    alt289=1;
                }
                else if ( (true) ) {
                    alt289=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 289, 5, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 289, 0, input);

                throw nvae;

            }

            switch (alt289) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3202:7: ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )?
                    {
                    pushFollow(FOLLOW_unionType_in_variadicType21490);
                    at=unionType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = at; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3205:7: ( PRODUCT_OP | SUM_OP )?
                    int alt288=3;
                    int LA288_0 = input.LA(1);

                    if ( (LA288_0==PRODUCT_OP) ) {
                        alt288=1;
                    }
                    else if ( (LA288_0==SUM_OP) ) {
                        alt288=2;
                    }
                    switch (alt288) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3206:9: PRODUCT_OP
                            {
                            PRODUCT_OP479=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_variadicType21516); if (state.failed) return type;

                            if ( state.backtracking==0 ) { SequencedType st = new SequencedType(null);
                                      st.setType(at); 
                                      st.setEndToken(PRODUCT_OP479);
                                      type = st; }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3212:9: SUM_OP
                            {
                            SUM_OP480=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_variadicType21544); if (state.failed) return type;

                            if ( state.backtracking==0 ) { SequencedType st = new SequencedType(null);
                                      st.setType(at); 
                                      st.setEndToken(SUM_OP480);
                                      st.setAtLeastOne(true);
                                      type = st; }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3219:7: t= type
                    {
                    pushFollow(FOLLOW_type_in_variadicType21573);
                    t=type();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = t; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "variadicType"



    // $ANTLR start "defaultedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3223:1: defaultedType returns [Type type] : ( ( type ( SPECIFY ) )=>t= type ( SPECIFY )? | variadicType );
    public Type defaultedType() throws RecognitionException {
        Type type = null;


        Token SPECIFY481=null;
        StaticType t =null;

        Type variadicType482 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3224:5: ( ( type ( SPECIFY ) )=>t= type ( SPECIFY )? | variadicType )
            int alt291=2;
            switch ( input.LA(1) ) {
            case SMALLER_OP:
                {
                int LA291_1 = input.LA(2);

                if ( (synpred37_Ceylon()) ) {
                    alt291=1;
                }
                else if ( (true) ) {
                    alt291=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 291, 1, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA291_2 = input.LA(2);

                if ( (synpred37_Ceylon()) ) {
                    alt291=1;
                }
                else if ( (true) ) {
                    alt291=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 291, 2, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA291_3 = input.LA(2);

                if ( (synpred37_Ceylon()) ) {
                    alt291=1;
                }
                else if ( (true) ) {
                    alt291=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 291, 3, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA291_4 = input.LA(2);

                if ( (synpred37_Ceylon()) ) {
                    alt291=1;
                }
                else if ( (true) ) {
                    alt291=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 291, 4, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA291_5 = input.LA(2);

                if ( (synpred37_Ceylon()) ) {
                    alt291=1;
                }
                else if ( (true) ) {
                    alt291=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 291, 5, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 291, 0, input);

                throw nvae;

            }

            switch (alt291) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3224:7: ( type ( SPECIFY ) )=>t= type ( SPECIFY )?
                    {
                    pushFollow(FOLLOW_type_in_defaultedType21619);
                    t=type();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = t; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3227:7: ( SPECIFY )?
                    int alt290=2;
                    int LA290_0 = input.LA(1);

                    if ( (LA290_0==SPECIFY) ) {
                        alt290=1;
                    }
                    switch (alt290) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3228:9: SPECIFY
                            {
                            SPECIFY481=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_defaultedType21645); if (state.failed) return type;

                            if ( state.backtracking==0 ) { DefaultedType st = new DefaultedType(null);
                                      st.setType(t); 
                                      st.setEndToken(SPECIFY481);
                                      type = st; }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3234:7: variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_defaultedType21672);
                    variadicType482=variadicType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =variadicType482; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "defaultedType"



    // $ANTLR start "spreadType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3238:1: spreadType returns [Type type] : PRODUCT_OP (sp= unionType )? ;
    public Type spreadType() throws RecognitionException {
        Type type = null;


        Token PRODUCT_OP483=null;
        StaticType sp =null;


         SpreadType spt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3240:5: ( PRODUCT_OP (sp= unionType )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3240:7: PRODUCT_OP (sp= unionType )?
            {
            PRODUCT_OP483=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_spreadType21710); if (state.failed) return type;

            if ( state.backtracking==0 ) { spt = new SpreadType(PRODUCT_OP483);
                    type =spt; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3243:7: (sp= unionType )?
            int alt292=2;
            int LA292_0 = input.LA(1);

            if ( ((LA292_0 >= LBRACE && LA292_0 <= LBRACKET)||LA292_0==PACKAGE||LA292_0==SMALLER_OP||LA292_0==UIDENTIFIER) ) {
                alt292=1;
            }
            switch (alt292) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3244:9: sp= unionType
                    {
                    pushFollow(FOLLOW_unionType_in_spreadType21738);
                    sp=unionType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { spt.setType(sp); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "spreadType"



    // $ANTLR start "tupleType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3249:1: tupleType returns [TupleType type] : LBRACKET (spt= spreadType |t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET ;
    public TupleType tupleType() throws RecognitionException {
        TupleType type = null;


        Token c=null;
        Token LBRACKET484=null;
        Token RBRACKET485=null;
        Type spt =null;

        Type t1 =null;

        Type t2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3250:5: ( LBRACKET (spt= spreadType |t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3250:7: LBRACKET (spt= spreadType |t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET
            {
            LBRACKET484=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_tupleType21778); if (state.failed) return type;

            if ( state.backtracking==0 ) { type = new TupleType(LBRACKET484); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3252:7: (spt= spreadType |t1= defaultedType (c= COMMA t2= defaultedType )* )?
            int alt294=3;
            int LA294_0 = input.LA(1);

            if ( (LA294_0==PRODUCT_OP) ) {
                alt294=1;
            }
            else if ( ((LA294_0 >= LBRACE && LA294_0 <= LBRACKET)||LA294_0==PACKAGE||LA294_0==SMALLER_OP||LA294_0==UIDENTIFIER) ) {
                alt294=2;
            }
            switch (alt294) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3253:9: spt= spreadType
                    {
                    pushFollow(FOLLOW_spreadType_in_tupleType21806);
                    spt=spreadType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.addElementType(spt); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3256:9: t1= defaultedType (c= COMMA t2= defaultedType )*
                    {
                    pushFollow(FOLLOW_defaultedType_in_tupleType21836);
                    t1=defaultedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.addElementType(t1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3258:9: (c= COMMA t2= defaultedType )*
                    loop293:
                    do {
                        int alt293=2;
                        int LA293_0 = input.LA(1);

                        if ( (LA293_0==COMMA) ) {
                            alt293=1;
                        }


                        switch (alt293) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3259:11: c= COMMA t2= defaultedType
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_tupleType21870); if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { type.setEndToken(c); }

                    	    pushFollow(FOLLOW_defaultedType_in_tupleType21896);
                    	    t2=defaultedType();

                    	    state._fsp--;
                    	    if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { type.addElementType(t2);
                    	                type.setEndToken(null); }

                    	    }
                    	    break;

                    	default :
                    	    break loop293;
                        }
                    } while (true);


                    }
                    break;

            }


            RBRACKET485=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_tupleType21936); if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setEndToken(RBRACKET485); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "tupleType"



    // $ANTLR start "groupedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3270:1: groupedType returns [GroupedType type] : SMALLER_OP t= type LARGER_OP ;
    public GroupedType groupedType() throws RecognitionException {
        GroupedType type = null;


        Token SMALLER_OP486=null;
        Token LARGER_OP487=null;
        StaticType t =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3271:5: ( SMALLER_OP t= type LARGER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3271:7: SMALLER_OP t= type LARGER_OP
            {
            SMALLER_OP486=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_groupedType21965); if (state.failed) return type;

            if ( state.backtracking==0 ) { type = new GroupedType(SMALLER_OP486); }

            pushFollow(FOLLOW_type_in_groupedType21983);
            t=type();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setType(t); }

            LARGER_OP487=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_groupedType21999); if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setEndToken(LARGER_OP487); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "groupedType"



    // $ANTLR start "iterableType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3279:1: iterableType returns [IterableType type] : LBRACE (t= variadicType )? RBRACE ;
    public IterableType iterableType() throws RecognitionException {
        IterableType type = null;


        Token LBRACE488=null;
        Token RBRACE489=null;
        Type t =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3280:4: ( LBRACE (t= variadicType )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3280:6: LBRACE (t= variadicType )? RBRACE
            {
            LBRACE488=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_iterableType22027); if (state.failed) return type;

            if ( state.backtracking==0 ) { type = new IterableType(LBRACE488); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3282:6: (t= variadicType )?
            int alt295=2;
            int LA295_0 = input.LA(1);

            if ( ((LA295_0 >= LBRACE && LA295_0 <= LBRACKET)||LA295_0==PACKAGE||LA295_0==SMALLER_OP||LA295_0==UIDENTIFIER) ) {
                alt295=1;
            }
            switch (alt295) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3283:8: t= variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_iterableType22052);
                    t=variadicType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.setElementType(t); }

                    }
                    break;

            }


            RBRACE489=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_iterableType22076); if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setEndToken(RBRACE489); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "iterableType"



    // $ANTLR start "type"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3290:1: type returns [StaticType type] : ( ( typeParameters ( TYPE_CONSTRAINT | COMPUTE ) )=> typeParameters ( anonymousTypeConstraints )? COMPUTE entryType | entryType );
    public StaticType type() throws RecognitionException {
        StaticType type = null;


        TypeParameterList typeParameters490 =null;

        TypeConstraintList anonymousTypeConstraints491 =null;

        StaticType entryType492 =null;

        StaticType entryType493 =null;


         TypeConstructor ct=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3292:5: ( ( typeParameters ( TYPE_CONSTRAINT | COMPUTE ) )=> typeParameters ( anonymousTypeConstraints )? COMPUTE entryType | entryType )
            int alt297=2;
            int LA297_0 = input.LA(1);

            if ( (LA297_0==SMALLER_OP) ) {
                int LA297_1 = input.LA(2);

                if ( (synpred38_Ceylon()) ) {
                    alt297=1;
                }
                else if ( (true) ) {
                    alt297=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 297, 1, input);

                    throw nvae;

                }
            }
            else if ( ((LA297_0 >= LBRACE && LA297_0 <= LBRACKET)||LA297_0==PACKAGE||LA297_0==UIDENTIFIER) ) {
                alt297=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 297, 0, input);

                throw nvae;

            }
            switch (alt297) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3292:7: ( typeParameters ( TYPE_CONSTRAINT | COMPUTE ) )=> typeParameters ( anonymousTypeConstraints )? COMPUTE entryType
                    {
                    pushFollow(FOLLOW_typeParameters_in_type22130);
                    typeParameters490=typeParameters();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { ct = new TypeConstructor(null);
                            ct.setTypeParameterList(typeParameters490);
                            type = ct; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3297:7: ( anonymousTypeConstraints )?
                    int alt296=2;
                    int LA296_0 = input.LA(1);

                    if ( (LA296_0==TYPE_CONSTRAINT) ) {
                        alt296=1;
                    }
                    switch (alt296) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3298:9: anonymousTypeConstraints
                            {
                            pushFollow(FOLLOW_anonymousTypeConstraints_in_type22157);
                            anonymousTypeConstraints491=anonymousTypeConstraints();

                            state._fsp--;
                            if (state.failed) return type;

                            if ( state.backtracking==0 ) { ct.setTypeConstraintList(anonymousTypeConstraints491); }

                            }
                            break;

                    }


                    match(input,COMPUTE,FOLLOW_COMPUTE_in_type22184); if (state.failed) return type;

                    pushFollow(FOLLOW_entryType_in_type22193);
                    entryType492=entryType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { ct.setType(entryType492); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3304:7: entryType
                    {
                    pushFollow(FOLLOW_entryType_in_type22209);
                    entryType493=entryType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =entryType493; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "type"



    // $ANTLR start "entryType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3308:1: entryType returns [StaticType type] : t1= unionType ( ENTRY_OP (t2= unionType ) )? ;
    public StaticType entryType() throws RecognitionException {
        StaticType type = null;


        Token ENTRY_OP494=null;
        StaticType t1 =null;

        StaticType t2 =null;


         EntryType bt=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3310:5: (t1= unionType ( ENTRY_OP (t2= unionType ) )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3310:7: t1= unionType ( ENTRY_OP (t2= unionType ) )?
            {
            pushFollow(FOLLOW_unionType_in_entryType22249);
            t1=unionType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type =t1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3312:7: ( ENTRY_OP (t2= unionType ) )?
            int alt298=2;
            int LA298_0 = input.LA(1);

            if ( (LA298_0==ENTRY_OP) ) {
                alt298=1;
            }
            switch (alt298) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3313:9: ENTRY_OP (t2= unionType )
                    {
                    ENTRY_OP494=(Token)match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_entryType22275); if (state.failed) return type;

                    if ( state.backtracking==0 ) { bt=new EntryType(null);
                              bt.setKeyType(type);
                              bt.setEndToken(ENTRY_OP494); 
                              type =bt; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3318:9: (t2= unionType )
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3319:11: t2= unionType
                    {
                    pushFollow(FOLLOW_unionType_in_entryType22309);
                    t2=unionType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { bt.setValueType(t2);
                                bt.setEndToken(null); }

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "entryType"



    // $ANTLR start "unionType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3328:1: unionType returns [StaticType type] : it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )? ;
    public StaticType unionType() throws RecognitionException {
        StaticType type = null;


        Token u=null;
        StaticType it1 =null;

        StaticType it2 =null;


         UnionType ut=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3330:5: (it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3330:7: it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )?
            {
            pushFollow(FOLLOW_intersectionType_in_unionType22374);
            it1=intersectionType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type = it1;
                    ut = new UnionType(null);
                    ut.addStaticType(type); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3334:7: ( (u= UNION_OP (it2= intersectionType ) )+ )?
            int alt300=2;
            int LA300_0 = input.LA(1);

            if ( (LA300_0==UNION_OP) ) {
                alt300=1;
            }
            switch (alt300) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3335:9: (u= UNION_OP (it2= intersectionType ) )+
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3335:9: (u= UNION_OP (it2= intersectionType ) )+
                    int cnt299=0;
                    loop299:
                    do {
                        int alt299=2;
                        int LA299_0 = input.LA(1);

                        if ( (LA299_0==UNION_OP) ) {
                            alt299=1;
                        }


                        switch (alt299) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3336:11: u= UNION_OP (it2= intersectionType )
                    	    {
                    	    u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_unionType22415); if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { ut.setEndToken(u); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3338:11: (it2= intersectionType )
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3339:13: it2= intersectionType
                    	    {
                    	    pushFollow(FOLLOW_intersectionType_in_unionType22455);
                    	    it2=intersectionType();

                    	    state._fsp--;
                    	    if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { if (it2!=null) {
                    	                      ut.addStaticType(it2);
                    	                      ut.setEndToken(null); 
                    	                  } }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt299 >= 1 ) break loop299;
                    	    if (state.backtracking>0) {state.failed=true; return type;}
                                EarlyExitException eee =
                                    new EarlyExitException(299, input);
                                throw eee;
                        }
                        cnt299++;
                    } while (true);


                    if ( state.backtracking==0 ) { type = ut; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "unionType"



    // $ANTLR start "intersectionType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3352:1: intersectionType returns [StaticType type] : at1= primaryType ( (i= INTERSECTION_OP (at2= primaryType ) )+ )? ;
    public StaticType intersectionType() throws RecognitionException {
        StaticType type = null;


        Token i=null;
        StaticType at1 =null;

        StaticType at2 =null;


         IntersectionType it=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3354:5: (at1= primaryType ( (i= INTERSECTION_OP (at2= primaryType ) )+ )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3354:7: at1= primaryType ( (i= INTERSECTION_OP (at2= primaryType ) )+ )?
            {
            pushFollow(FOLLOW_primaryType_in_intersectionType22545);
            at1=primaryType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type = at1;
                    it = new IntersectionType(null);
                    it.addStaticType(type); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3358:7: ( (i= INTERSECTION_OP (at2= primaryType ) )+ )?
            int alt302=2;
            int LA302_0 = input.LA(1);

            if ( (LA302_0==INTERSECTION_OP) ) {
                alt302=1;
            }
            switch (alt302) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3359:9: (i= INTERSECTION_OP (at2= primaryType ) )+
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3359:9: (i= INTERSECTION_OP (at2= primaryType ) )+
                    int cnt301=0;
                    loop301:
                    do {
                        int alt301=2;
                        int LA301_0 = input.LA(1);

                        if ( (LA301_0==INTERSECTION_OP) ) {
                            alt301=1;
                        }


                        switch (alt301) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3360:11: i= INTERSECTION_OP (at2= primaryType )
                    	    {
                    	    i=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_intersectionType22586); if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { it.setEndToken(i); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3362:11: (at2= primaryType )
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3363:13: at2= primaryType
                    	    {
                    	    pushFollow(FOLLOW_primaryType_in_intersectionType22626);
                    	    at2=primaryType();

                    	    state._fsp--;
                    	    if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { if (at2!=null) {
                    	                      it.addStaticType(at2);
                    	                      it.setEndToken(null); 
                    	                  } }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt301 >= 1 ) break loop301;
                    	    if (state.backtracking>0) {state.failed=true; return type;}
                                EarlyExitException eee =
                                    new EarlyExitException(301, input);
                                throw eee;
                        }
                        cnt301++;
                    } while (true);


                    if ( state.backtracking==0 ) { type = it; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "intersectionType"



    // $ANTLR start "atomicType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3376:1: atomicType returns [StaticType type] : ( qualifiedType | tupleType | iterableType );
    public StaticType atomicType() throws RecognitionException {
        StaticType type = null;


        StaticType qualifiedType495 =null;

        TupleType tupleType496 =null;

        IterableType iterableType497 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3377:5: ( qualifiedType | tupleType | iterableType )
            int alt303=3;
            switch ( input.LA(1) ) {
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt303=1;
                }
                break;
            case LBRACKET:
                {
                alt303=2;
                }
                break;
            case LBRACE:
                {
                alt303=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 303, 0, input);

                throw nvae;

            }

            switch (alt303) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3377:7: qualifiedType
                    {
                    pushFollow(FOLLOW_qualifiedType_in_atomicType22705);
                    qualifiedType495=qualifiedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =qualifiedType495; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3379:7: tupleType
                    {
                    pushFollow(FOLLOW_tupleType_in_atomicType22722);
                    tupleType496=tupleType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =tupleType496; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3381:7: iterableType
                    {
                    pushFollow(FOLLOW_iterableType_in_atomicType22739);
                    iterableType497=iterableType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =iterableType497; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "atomicType"



    // $ANTLR start "primaryType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3385:1: primaryType returns [StaticType type] : atomicType ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )* ;
    public StaticType primaryType() throws RecognitionException {
        StaticType type = null;


        Token OPTIONAL499=null;
        Token LBRACKET500=null;
        Token NATURAL_LITERAL501=null;
        Token RBRACKET502=null;
        Token LPAREN503=null;
        Token COMMA504=null;
        Token RPAREN505=null;
        Type spt =null;

        Type t1 =null;

        Type t2 =null;

        StaticType atomicType498 =null;


         FunctionType bt=null; SequenceType st=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3387:5: ( atomicType ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3387:7: atomicType ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )*
            {
            pushFollow(FOLLOW_atomicType_in_primaryType22777);
            atomicType498=atomicType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type =atomicType498; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3389:7: ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )*
            loop307:
            do {
                int alt307=4;
                switch ( input.LA(1) ) {
                case OPTIONAL:
                    {
                    alt307=1;
                    }
                    break;
                case LBRACKET:
                    {
                    alt307=2;
                    }
                    break;
                case LPAREN:
                    {
                    alt307=3;
                    }
                    break;

                }

                switch (alt307) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3390:9: OPTIONAL
            	    {
            	    OPTIONAL499=(Token)match(input,OPTIONAL,FOLLOW_OPTIONAL_in_primaryType22803); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { OptionalType ot = new OptionalType(null);
            	              ot.setDefiniteType(type);
            	              ot.setEndToken(OPTIONAL499);
            	              type =ot; }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3395:9: LBRACKET ( NATURAL_LITERAL )? RBRACKET
            	    {
            	    LBRACKET500=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_primaryType22824); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { st = new SequenceType(null);
            	              st.setElementType(type);
            	              st.setEndToken(LBRACKET500); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3399:9: ( NATURAL_LITERAL )?
            	    int alt304=2;
            	    int LA304_0 = input.LA(1);

            	    if ( (LA304_0==NATURAL_LITERAL) ) {
            	        alt304=1;
            	    }
            	    switch (alt304) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3400:11: NATURAL_LITERAL
            	            {
            	            NATURAL_LITERAL501=(Token)match(input,NATURAL_LITERAL,FOLLOW_NATURAL_LITERAL_in_primaryType22856); if (state.failed) return type;

            	            if ( state.backtracking==0 ) { st.setLength(new NaturalLiteral(NATURAL_LITERAL501)); 
            	                        st.setEndToken(NATURAL_LITERAL501); }

            	            }
            	            break;

            	    }


            	    RBRACKET502=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_primaryType22890); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { st.setEndToken(RBRACKET502);
            	              type =st; }

            	    }
            	    break;
            	case 3 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3407:9: LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN
            	    {
            	    LPAREN503=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_primaryType22911); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { bt = new FunctionType(null);
            	              bt.setEndToken(LPAREN503);
            	              bt.setReturnType(type);
            	              type =bt; }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3412:11: (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )?
            	    int alt306=3;
            	    int LA306_0 = input.LA(1);

            	    if ( (LA306_0==PRODUCT_OP) ) {
            	        alt306=1;
            	    }
            	    else if ( ((LA306_0 >= LBRACE && LA306_0 <= LBRACKET)||LA306_0==PACKAGE||LA306_0==SMALLER_OP||LA306_0==UIDENTIFIER) ) {
            	        alt306=2;
            	    }
            	    switch (alt306) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3413:13: spt= spreadType
            	            {
            	            pushFollow(FOLLOW_spreadType_in_primaryType22949);
            	            spt=spreadType();

            	            state._fsp--;
            	            if (state.failed) return type;

            	            if ( state.backtracking==0 ) { bt.addArgumentType(spt); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3416:13: t1= defaultedType ( COMMA t2= defaultedType )*
            	            {
            	            pushFollow(FOLLOW_defaultedType_in_primaryType22991);
            	            t1=defaultedType();

            	            state._fsp--;
            	            if (state.failed) return type;

            	            if ( state.backtracking==0 ) { if (t1!=null)
            	                              bt.addArgumentType(t1); }

            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3419:13: ( COMMA t2= defaultedType )*
            	            loop305:
            	            do {
            	                int alt305=2;
            	                int LA305_0 = input.LA(1);

            	                if ( (LA305_0==COMMA) ) {
            	                    alt305=1;
            	                }


            	                switch (alt305) {
            	            	case 1 :
            	            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3420:15: COMMA t2= defaultedType
            	            	    {
            	            	    COMMA504=(Token)match(input,COMMA,FOLLOW_COMMA_in_primaryType23035); if (state.failed) return type;

            	            	    if ( state.backtracking==0 ) { bt.setEndToken(COMMA504); }

            	            	    pushFollow(FOLLOW_defaultedType_in_primaryType23069);
            	            	    t2=defaultedType();

            	            	    state._fsp--;
            	            	    if (state.failed) return type;

            	            	    if ( state.backtracking==0 ) { if (t2!=null)
            	            	                        bt.addArgumentType(t2); }

            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop305;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }


            	    RPAREN505=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_primaryType23123); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { bt.setEndToken(RPAREN505); }

            	    }
            	    break;

            	default :
            	    break loop307;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "primaryType"



    // $ANTLR start "baseType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3432:1: baseType returns [StaticType type] : (tna1= typeNameWithArguments | groupedType | PACKAGE MEMBER_OP tna2= typeNameWithArguments );
    public StaticType baseType() throws RecognitionException {
        StaticType type = null;


        Token PACKAGE507=null;
        Token MEMBER_OP508=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return tna1 =null;

        PsiCompatibleCeylonParser.typeNameWithArguments_return tna2 =null;

        GroupedType groupedType506 =null;


         BaseType pt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3434:5: (tna1= typeNameWithArguments | groupedType | PACKAGE MEMBER_OP tna2= typeNameWithArguments )
            int alt308=3;
            switch ( input.LA(1) ) {
            case UIDENTIFIER:
                {
                alt308=1;
                }
                break;
            case SMALLER_OP:
                {
                alt308=2;
                }
                break;
            case PACKAGE:
                {
                alt308=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 308, 0, input);

                throw nvae;

            }

            switch (alt308) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3435:7: tna1= typeNameWithArguments
                    {
                    pushFollow(FOLLOW_typeNameWithArguments_in_baseType23181);
                    tna1=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { BaseType bt = new BaseType(null);
                            bt.setIdentifier((tna1!=null?tna1.identifier:null));
                            if ((tna1!=null?tna1.typeArgumentList:null)!=null)
                                bt.setTypeArgumentList((tna1!=null?tna1.typeArgumentList:null));
                            type =bt; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3442:7: groupedType
                    {
                    pushFollow(FOLLOW_groupedType_in_baseType23203);
                    groupedType506=groupedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =groupedType506; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3444:7: PACKAGE MEMBER_OP tna2= typeNameWithArguments
                    {
                    PACKAGE507=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_baseType23219); if (state.failed) return type;

                    if ( state.backtracking==0 ) { pt = new BaseType(PACKAGE507); 
                            pt.setPackageQualified(true);
                            type =pt; }

                    MEMBER_OP508=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_baseType23235); if (state.failed) return type;

                    if ( state.backtracking==0 ) { pt.setEndToken(MEMBER_OP508); }

                    pushFollow(FOLLOW_typeNameWithArguments_in_baseType23253);
                    tna2=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { pt.setEndToken(null);
                            pt.setIdentifier((tna2!=null?tna2.identifier:null));
                            if ((tna2!=null?tna2.typeArgumentList:null)!=null)
                                pt.setTypeArgumentList((tna2!=null?tna2.typeArgumentList:null)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "baseType"



    // $ANTLR start "qualifiedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3457:1: qualifiedType returns [StaticType type] : baseType ( MEMBER_OP it= typeNameWithArguments )* ;
    public StaticType qualifiedType() throws RecognitionException {
        StaticType type = null;


        Token MEMBER_OP510=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return it =null;

        StaticType baseType509 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3458:5: ( baseType ( MEMBER_OP it= typeNameWithArguments )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3458:7: baseType ( MEMBER_OP it= typeNameWithArguments )*
            {
            pushFollow(FOLLOW_baseType_in_qualifiedType23282);
            baseType509=baseType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type =baseType509; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3460:7: ( MEMBER_OP it= typeNameWithArguments )*
            loop309:
            do {
                int alt309=2;
                int LA309_0 = input.LA(1);

                if ( (LA309_0==MEMBER_OP) ) {
                    int LA309_2 = input.LA(2);

                    if ( (LA309_2==UIDENTIFIER) ) {
                        alt309=1;
                    }


                }


                switch (alt309) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3461:9: MEMBER_OP it= typeNameWithArguments
            	    {
            	    MEMBER_OP510=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_qualifiedType23308); if (state.failed) return type;

            	    pushFollow(FOLLOW_typeNameWithArguments_in_qualifiedType23320);
            	    it=typeNameWithArguments();

            	    state._fsp--;
            	    if (state.failed) return type;

            	    if ( state.backtracking==0 ) { QualifiedType qt = new QualifiedType(MEMBER_OP510);
            	              qt.setIdentifier((it!=null?it.identifier:null));
            	              if ((it!=null?it.typeArgumentList:null)!=null)
            	                  qt.setTypeArgumentList((it!=null?it.typeArgumentList:null));
            	              qt.setOuterType(type);
            	              type =qt; }

            	    }
            	    break;

            	default :
            	    break loop309;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "qualifiedType"


    public static class typeNameWithArguments_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "typeNameWithArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3472:1: typeNameWithArguments returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : typeName ( typeArguments )? ;
    public PsiCompatibleCeylonParser.typeNameWithArguments_return typeNameWithArguments() throws RecognitionException {
        PsiCompatibleCeylonParser.typeNameWithArguments_return retval = new PsiCompatibleCeylonParser.typeNameWithArguments_return();
        retval.start = input.LT(1);


        Identifier typeName511 =null;

        TypeArgumentList typeArguments512 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3474:5: ( typeName ( typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3474:7: typeName ( typeArguments )?
            {
            pushFollow(FOLLOW_typeName_in_typeNameWithArguments23360);
            typeName511=typeName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier = typeName511; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3476:7: ( typeArguments )?
            int alt310=2;
            int LA310_0 = input.LA(1);

            if ( (LA310_0==SMALLER_OP) ) {
                int LA310_1 = input.LA(2);

                if ( (LA310_1==IN_OP||LA310_1==LARGER_OP||(LA310_1 >= LBRACE && LA310_1 <= LBRACKET)||LA310_1==OUT||LA310_1==PACKAGE||LA310_1==SMALLER_OP||LA310_1==UIDENTIFIER) ) {
                    alt310=1;
                }
            }
            switch (alt310) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3477:9: typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_typeNameWithArguments23387);
                    typeArguments512=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments512; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "typeNameWithArguments"



    // $ANTLR start "annotations"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3482:1: annotations returns [AnnotationList annotationList] : ( stringLiteral )? ( annotation )* ;
    public AnnotationList annotations() throws RecognitionException {
        AnnotationList annotationList = null;


        StringLiteral stringLiteral513 =null;

        Annotation annotation514 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3483:5: ( ( stringLiteral )? ( annotation )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3483:7: ( stringLiteral )? ( annotation )*
            {
            if ( state.backtracking==0 ) { annotationList = new AnnotationList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3484:7: ( stringLiteral )?
            int alt311=2;
            int LA311_0 = input.LA(1);

            if ( (LA311_0==STRING_LITERAL||LA311_0==VERBATIM_STRING) ) {
                alt311=1;
            }
            switch (alt311) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3485:11: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotations23451);
                    stringLiteral513=stringLiteral();

                    state._fsp--;
                    if (state.failed) return annotationList;

                    if ( state.backtracking==0 ) { if (stringLiteral513.getToken().getType()==VERBATIM_STRING)
                                    stringLiteral513.getToken().setType(AVERBATIM_STRING);
                                else
                                    stringLiteral513.getToken().setType(ASTRING_LITERAL);
                                AnonymousAnnotation aa = new AnonymousAnnotation(null);
                                aa.setStringLiteral(stringLiteral513);
                                annotationList.setAnonymousAnnotation(aa); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3494:7: ( annotation )*
            loop312:
            do {
                int alt312=2;
                int LA312_0 = input.LA(1);

                if ( (LA312_0==LIDENTIFIER) ) {
                    alt312=1;
                }


                switch (alt312) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3495:9: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotations23490);
            	    annotation514=annotation();

            	    state._fsp--;
            	    if (state.failed) return annotationList;

            	    if ( state.backtracking==0 ) { annotationList.addAnnotation(annotation514); 
            	              new com.redhat.ceylon.compiler.typechecker.tree.Visitor() { 
            	                  public void visit(StringLiteral that) {
            	                      if (that.getToken().getType()==VERBATIM_STRING)
            	                          that.getToken().setType(AVERBATIM_STRING);
            	                      else
            	                          that.getToken().setType(ASTRING_LITERAL);
            	                  }
            	              }.visit(annotation514); }

            	    }
            	    break;

            	default :
            	    break loop312;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotationList;
    }
    // $ANTLR end "annotations"



    // $ANTLR start "annotation"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3508:1: annotation returns [Annotation annotation] : annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |) ;
    public Annotation annotation() throws RecognitionException {
        Annotation annotation = null;


        Identifier annotationName515 =null;

        PositionalArgumentList positionalArguments516 =null;

        NamedArgumentList namedArguments517 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3509:5: ( annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3509:7: annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |)
            {
            pushFollow(FOLLOW_annotationName_in_annotation23531);
            annotationName515=annotationName();

            state._fsp--;
            if (state.failed) return annotation;

            if ( state.backtracking==0 ) { annotation = new Annotation(null);
                    BaseMemberExpression bme = new BaseMemberExpression(null);
                    bme.setIdentifier(annotationName515);
                    bme.setTypeArguments( new InferredTypeArguments(null) );
                    annotation.setPrimary(bme); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3515:5: ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |)
            int alt313=3;
            switch ( input.LA(1) ) {
            case LPAREN:
                {
                alt313=1;
                }
                break;
            case LBRACE:
                {
                int LA313_2 = input.LA(2);

                if ( (synpred39_Ceylon()) ) {
                    alt313=2;
                }
                else if ( (true) ) {
                    alt313=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return annotation;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 313, 2, input);

                    throw nvae;

                }
                }
                break;
            case ALIAS:
            case ASSERT:
            case ASSIGN:
            case CLASS_DEFINITION:
            case DYNAMIC:
            case FUNCTION_MODIFIER:
            case IMPORT:
            case INTERFACE_DEFINITION:
            case LBRACKET:
            case LIDENTIFIER:
            case MODULE:
            case NEW:
            case OBJECT_DEFINITION:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
            case VALUE_MODIFIER:
            case VOID_MODIFIER:
                {
                alt313=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return annotation;}
                NoViableAltException nvae =
                    new NoViableAltException("", 313, 0, input);

                throw nvae;

            }

            switch (alt313) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3516:7: positionalArguments
                    {
                    pushFollow(FOLLOW_positionalArguments_in_annotation23554);
                    positionalArguments516=positionalArguments();

                    state._fsp--;
                    if (state.failed) return annotation;

                    if ( state.backtracking==0 ) { annotation.setPositionalArgumentList(positionalArguments516); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3518:7: ( namedAnnotationArgumentsStart )=> namedArguments
                    {
                    pushFollow(FOLLOW_namedArguments_in_annotation23583);
                    namedArguments517=namedArguments();

                    state._fsp--;
                    if (state.failed) return annotation;

                    if ( state.backtracking==0 ) { annotation.setNamedArgumentList(namedArguments517); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3521:7: 
                    {
                    if ( state.backtracking==0 ) { annotation.setPositionalArgumentList(new PositionalArgumentList(null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotation;
    }
    // $ANTLR end "annotation"



    // $ANTLR start "prefixOperatorStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3525:1: prefixOperatorStart : ( DIFFERENCE_OP | INCREMENT_OP | DECREMENT_OP | COMPLEMENT_OP );
    public void prefixOperatorStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3526:5: ( DIFFERENCE_OP | INCREMENT_OP | DECREMENT_OP | COMPLEMENT_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:
            {
            if ( input.LA(1)==COMPLEMENT_OP||(input.LA(1) >= DECREMENT_OP && input.LA(1) <= DIFFERENCE_OP)||input.LA(1)==INCREMENT_OP ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "prefixOperatorStart"



    // $ANTLR start "compilerAnnotations"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3532:1: compilerAnnotations returns [List<CompilerAnnotation> annotations] : ( compilerAnnotation )* ;
    public List<CompilerAnnotation> compilerAnnotations() throws RecognitionException {
        List<CompilerAnnotation> annotations = null;


        CompilerAnnotation compilerAnnotation518 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3533:5: ( ( compilerAnnotation )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3533:7: ( compilerAnnotation )*
            {
            if ( state.backtracking==0 ) { annotations = new ArrayList<CompilerAnnotation>(); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3534:5: ( compilerAnnotation )*
            loop314:
            do {
                int alt314=2;
                int LA314_0 = input.LA(1);

                if ( (LA314_0==COMPILER_ANNOTATION) ) {
                    alt314=1;
                }


                switch (alt314) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3535:7: compilerAnnotation
            	    {
            	    pushFollow(FOLLOW_compilerAnnotation_in_compilerAnnotations23687);
            	    compilerAnnotation518=compilerAnnotation();

            	    state._fsp--;
            	    if (state.failed) return annotations;

            	    if ( state.backtracking==0 ) { annotations.add(compilerAnnotation518); }

            	    }
            	    break;

            	default :
            	    break loop314;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotations;
    }
    // $ANTLR end "compilerAnnotations"



    // $ANTLR start "compilerAnnotation"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3540:1: compilerAnnotation returns [CompilerAnnotation annotation] : COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )? ;
    public CompilerAnnotation compilerAnnotation() throws RecognitionException {
        CompilerAnnotation annotation = null;


        Token COMPILER_ANNOTATION519=null;
        Identifier annotationName520 =null;

        StringLiteral stringLiteral521 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3541:5: ( COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3541:7: COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )?
            {
            COMPILER_ANNOTATION519=(Token)match(input,COMPILER_ANNOTATION,FOLLOW_COMPILER_ANNOTATION_in_compilerAnnotation23727); if (state.failed) return annotation;

            if ( state.backtracking==0 ) { annotation =new CompilerAnnotation(COMPILER_ANNOTATION519); }

            pushFollow(FOLLOW_annotationName_in_compilerAnnotation23744);
            annotationName520=annotationName();

            state._fsp--;
            if (state.failed) return annotation;

            if ( state.backtracking==0 ) { annotation.setIdentifier(annotationName520); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3545:7: ( SEGMENT_OP stringLiteral )?
            int alt315=2;
            int LA315_0 = input.LA(1);

            if ( (LA315_0==SEGMENT_OP) ) {
                alt315=1;
            }
            switch (alt315) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3546:11: SEGMENT_OP stringLiteral
                    {
                    match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_compilerAnnotation23774); if (state.failed) return annotation;

                    pushFollow(FOLLOW_stringLiteral_in_compilerAnnotation23786);
                    stringLiteral521=stringLiteral();

                    state._fsp--;
                    if (state.failed) return annotation;

                    if ( state.backtracking==0 ) { annotation.setStringLiteral(stringLiteral521); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotation;
    }
    // $ANTLR end "compilerAnnotation"



    // $ANTLR start "conditions"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3552:1: conditions returns [ConditionList conditionList] : LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN ;
    public ConditionList conditions() throws RecognitionException {
        ConditionList conditionList = null;


        Token c=null;
        Token LPAREN522=null;
        Token RPAREN523=null;
        Condition c1 =null;

        Condition c2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3553:5: ( LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3553:7: LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN
            {
            LPAREN522=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_conditions23828); if (state.failed) return conditionList;

            if ( state.backtracking==0 ) { conditionList = new ConditionList(LPAREN522); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3555:7: (c1= condition (c= COMMA (c2= condition |) )* )?
            int alt318=2;
            int LA318_0 = input.LA(1);

            if ( (LA318_0==BACKTICK||LA318_0==CHAR_LITERAL||(LA318_0 >= DECREMENT_OP && LA318_0 <= DIFFERENCE_OP)||LA318_0==DYNAMIC||LA318_0==EXISTS||LA318_0==FLOAT_LITERAL||LA318_0==FUNCTION_MODIFIER||LA318_0==IF_CLAUSE||LA318_0==INCREMENT_OP||LA318_0==IS_OP||(LA318_0 >= LBRACE && LA318_0 <= LIDENTIFIER)||LA318_0==LPAREN||LA318_0==NATURAL_LITERAL||LA318_0==NONEMPTY||(LA318_0 >= NOT_OP && LA318_0 <= OBJECT_DEFINITION)||(LA318_0 >= OUTER && LA318_0 <= PACKAGE)||LA318_0==SATISFIES||LA318_0==SMALLER_OP||LA318_0==STRING_LITERAL||LA318_0==STRING_START||(LA318_0 >= SUM_OP && LA318_0 <= SWITCH_CLAUSE)||LA318_0==THIS||LA318_0==UIDENTIFIER||(LA318_0 >= VERBATIM_STRING && LA318_0 <= VOID_MODIFIER)) ) {
                alt318=1;
            }
            switch (alt318) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3556:7: c1= condition (c= COMMA (c2= condition |) )*
                    {
                    pushFollow(FOLLOW_condition_in_conditions23854);
                    c1=condition();

                    state._fsp--;
                    if (state.failed) return conditionList;

                    if ( state.backtracking==0 ) { if (c1!=null) 
                                conditionList.addCondition(c1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3559:7: (c= COMMA (c2= condition |) )*
                    loop317:
                    do {
                        int alt317=2;
                        int LA317_0 = input.LA(1);

                        if ( (LA317_0==COMMA) ) {
                            alt317=1;
                        }


                        switch (alt317) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3559:9: c= COMMA (c2= condition |)
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_conditions23874); if (state.failed) return conditionList;

                    	    if ( state.backtracking==0 ) { conditionList.setEndToken(c); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3561:9: (c2= condition |)
                    	    int alt316=2;
                    	    int LA316_0 = input.LA(1);

                    	    if ( (LA316_0==BACKTICK||LA316_0==CHAR_LITERAL||(LA316_0 >= DECREMENT_OP && LA316_0 <= DIFFERENCE_OP)||LA316_0==DYNAMIC||LA316_0==EXISTS||LA316_0==FLOAT_LITERAL||LA316_0==FUNCTION_MODIFIER||LA316_0==IF_CLAUSE||LA316_0==INCREMENT_OP||LA316_0==IS_OP||(LA316_0 >= LBRACE && LA316_0 <= LIDENTIFIER)||LA316_0==LPAREN||LA316_0==NATURAL_LITERAL||LA316_0==NONEMPTY||(LA316_0 >= NOT_OP && LA316_0 <= OBJECT_DEFINITION)||(LA316_0 >= OUTER && LA316_0 <= PACKAGE)||LA316_0==SATISFIES||LA316_0==SMALLER_OP||LA316_0==STRING_LITERAL||LA316_0==STRING_START||(LA316_0 >= SUM_OP && LA316_0 <= SWITCH_CLAUSE)||LA316_0==THIS||LA316_0==UIDENTIFIER||(LA316_0 >= VERBATIM_STRING && LA316_0 <= VOID_MODIFIER)) ) {
                    	        alt316=1;
                    	    }
                    	    else if ( (LA316_0==COMMA||LA316_0==RPAREN) ) {
                    	        alt316=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return conditionList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 316, 0, input);

                    	        throw nvae;

                    	    }
                    	    switch (alt316) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3562:11: c2= condition
                    	            {
                    	            pushFollow(FOLLOW_condition_in_conditions23909);
                    	            c2=condition();

                    	            state._fsp--;
                    	            if (state.failed) return conditionList;

                    	            if ( state.backtracking==0 ) { if (c2!=null) 
                    	                            conditionList.addCondition(c2);
                    	                        conditionList.setEndToken(null); }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3566:11: 
                    	            {
                    	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                          new MismatchedTokenException(LIDENTIFIER, input)); }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop317;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN523=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_conditions23971); if (state.failed) return conditionList;

            if ( state.backtracking==0 ) { conditionList.setEndToken(RPAREN523); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return conditionList;
    }
    // $ANTLR end "conditions"



    // $ANTLR start "condition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3575:1: condition returns [Condition condition] : ( existsCondition | nonemptyCondition | isCondition | satisfiesCondition | booleanCondition );
    public Condition condition() throws RecognitionException {
        Condition condition = null;


        ExistsCondition existsCondition524 =null;

        NonemptyCondition nonemptyCondition525 =null;

        IsCondition isCondition526 =null;

        SatisfiesCondition satisfiesCondition527 =null;

        BooleanCondition booleanCondition528 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3576:5: ( existsCondition | nonemptyCondition | isCondition | satisfiesCondition | booleanCondition )
            int alt319=5;
            switch ( input.LA(1) ) {
            case NOT_OP:
                {
                switch ( input.LA(2) ) {
                case EXISTS:
                    {
                    alt319=1;
                    }
                    break;
                case NONEMPTY:
                    {
                    alt319=2;
                    }
                    break;
                case IS_OP:
                    {
                    alt319=3;
                    }
                    break;
                case BACKTICK:
                case CHAR_LITERAL:
                case DECREMENT_OP:
                case DIFFERENCE_OP:
                case DYNAMIC:
                case FLOAT_LITERAL:
                case INCREMENT_OP:
                case LBRACE:
                case LBRACKET:
                case LIDENTIFIER:
                case LPAREN:
                case NATURAL_LITERAL:
                case NOT_OP:
                case OBJECT_DEFINITION:
                case OUTER:
                case PACKAGE:
                case STRING_LITERAL:
                case STRING_START:
                case SUM_OP:
                case SUPER:
                case THIS:
                case UIDENTIFIER:
                case VERBATIM_STRING:
                    {
                    alt319=5;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 319, 1, input);

                    throw nvae;

                }

                }
                break;
            case EXISTS:
                {
                alt319=1;
                }
                break;
            case NONEMPTY:
                {
                alt319=2;
                }
                break;
            case IS_OP:
                {
                alt319=3;
                }
                break;
            case SATISFIES:
                {
                alt319=4;
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case DYNAMIC:
            case FLOAT_LITERAL:
            case FUNCTION_MODIFIER:
            case IF_CLAUSE:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case OBJECT_DEFINITION:
            case OUTER:
            case PACKAGE:
            case SMALLER_OP:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case SWITCH_CLAUSE:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
            case VOID_MODIFIER:
                {
                alt319=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 319, 0, input);

                throw nvae;

            }

            switch (alt319) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3576:7: existsCondition
                    {
                    pushFollow(FOLLOW_existsCondition_in_condition24000);
                    existsCondition524=existsCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =existsCondition524; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3578:7: nonemptyCondition
                    {
                    pushFollow(FOLLOW_nonemptyCondition_in_condition24016);
                    nonemptyCondition525=nonemptyCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =nonemptyCondition525; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3580:7: isCondition
                    {
                    pushFollow(FOLLOW_isCondition_in_condition24032);
                    isCondition526=isCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =isCondition526; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3582:7: satisfiesCondition
                    {
                    pushFollow(FOLLOW_satisfiesCondition_in_condition24049);
                    satisfiesCondition527=satisfiesCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =satisfiesCondition527; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3584:7: booleanCondition
                    {
                    pushFollow(FOLLOW_booleanCondition_in_condition24065);
                    booleanCondition528=booleanCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =booleanCondition528; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "condition"



    // $ANTLR start "booleanCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3588:1: booleanCondition returns [BooleanCondition condition] : functionOrExpression ;
    public BooleanCondition booleanCondition() throws RecognitionException {
        BooleanCondition condition = null;


        Expression functionOrExpression529 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3589:5: ( functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3589:7: functionOrExpression
            {
            if ( state.backtracking==0 ) { condition = new BooleanCondition(null); }

            pushFollow(FOLLOW_functionOrExpression_in_booleanCondition24106);
            functionOrExpression529=functionOrExpression();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setExpression(functionOrExpression529); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "booleanCondition"



    // $ANTLR start "existsCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
    public ExistsCondition existsCondition() throws RecognitionException {
        ExistsCondition condition = null;


        Token NOT_OP530=null;
        Token EXISTS531=null;
        Statement letVariable532 =null;

        Variable impliedVariable533 =null;

        Expression expression534 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3595:7: ( NOT_OP )?
            int alt320=2;
            int LA320_0 = input.LA(1);

            if ( (LA320_0==NOT_OP) ) {
                alt320=1;
            }
            switch (alt320) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3596:9: NOT_OP
                    {
                    NOT_OP530=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_existsCondition24149); if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition = new ExistsCondition(NOT_OP530);
                              condition.setNot(true); }

                    }
                    break;

            }


            EXISTS531=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_existsCondition24176); if (state.failed) return condition;

            if ( state.backtracking==0 ) { if (condition==null)
                        condition = new ExistsCondition(EXISTS531); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            int alt321=3;
            int LA321_0 = input.LA(1);

            if ( (LA321_0==LBRACKET) ) {
                int LA321_1 = input.LA(2);

                if ( (synpred41_Ceylon()) ) {
                    alt321=1;
                }
                else if ( (true) ) {
                    alt321=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 321, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA321_0==COMPILER_ANNOTATION) && (synpred41_Ceylon())) {
                alt321=1;
            }
            else if ( (LA321_0==SMALLER_OP) && (synpred41_Ceylon())) {
                alt321=1;
            }
            else if ( (LA321_0==UIDENTIFIER) ) {
                int LA321_4 = input.LA(2);

                if ( (synpred41_Ceylon()) ) {
                    alt321=1;
                }
                else if ( (true) ) {
                    alt321=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 321, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA321_0==PACKAGE) ) {
                int LA321_5 = input.LA(2);

                if ( (synpred41_Ceylon()) ) {
                    alt321=1;
                }
                else if ( (true) ) {
                    alt321=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 321, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA321_0==LBRACE) ) {
                int LA321_6 = input.LA(2);

                if ( (synpred41_Ceylon()) ) {
                    alt321=1;
                }
                else if ( (true) ) {
                    alt321=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 321, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA321_0==VOID_MODIFIER) && (synpred41_Ceylon())) {
                alt321=1;
            }
            else if ( (LA321_0==FUNCTION_MODIFIER) && (synpred41_Ceylon())) {
                alt321=1;
            }
            else if ( (LA321_0==VALUE_MODIFIER) && (synpred41_Ceylon())) {
                alt321=1;
            }
            else if ( (LA321_0==LIDENTIFIER) ) {
                int LA321_10 = input.LA(2);

                if ( (synpred41_Ceylon()) ) {
                    alt321=1;
                }
                else if ( (synpred42_Ceylon()) ) {
                    alt321=2;
                }
                else if ( (true) ) {
                    alt321=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 321, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA321_0==BACKTICK||LA321_0==CHAR_LITERAL||(LA321_0 >= DECREMENT_OP && LA321_0 <= DIFFERENCE_OP)||LA321_0==DYNAMIC||LA321_0==FLOAT_LITERAL||LA321_0==INCREMENT_OP||LA321_0==LPAREN||LA321_0==NATURAL_LITERAL||(LA321_0 >= NOT_OP && LA321_0 <= OBJECT_DEFINITION)||LA321_0==OUTER||LA321_0==STRING_LITERAL||LA321_0==STRING_START||(LA321_0 >= SUM_OP && LA321_0 <= SUPER)||LA321_0==THIS||LA321_0==VERBATIM_STRING) ) {
                alt321=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 321, 0, input);

                throw nvae;

            }
            switch (alt321) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
                    {
                    pushFollow(FOLLOW_letVariable_in_existsCondition24234);
                    letVariable532=letVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(letVariable532); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3608:9: ( LIDENTIFIER )=> impliedVariable
                    {
                    pushFollow(FOLLOW_impliedVariable_in_existsCondition24268);
                    impliedVariable533=impliedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(impliedVariable533); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3610:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_existsCondition24288);
                    expression534=expression();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setBrokenExpression(expression534); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "existsCondition"



    // $ANTLR start "nonemptyCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
    public NonemptyCondition nonemptyCondition() throws RecognitionException {
        NonemptyCondition condition = null;


        Token NOT_OP535=null;
        Token NONEMPTY536=null;
        Statement letVariable537 =null;

        Variable impliedVariable538 =null;

        Expression expression539 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3616:7: ( NOT_OP )?
            int alt322=2;
            int LA322_0 = input.LA(1);

            if ( (LA322_0==NOT_OP) ) {
                alt322=1;
            }
            switch (alt322) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3617:9: NOT_OP
                    {
                    NOT_OP535=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_nonemptyCondition24341); if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition = new NonemptyCondition(NOT_OP535);
                              condition.setNot(true); }

                    }
                    break;

            }


            NONEMPTY536=(Token)match(input,NONEMPTY,FOLLOW_NONEMPTY_in_nonemptyCondition24368); if (state.failed) return condition;

            if ( state.backtracking==0 ) { if (condition==null)
                        condition = new NonemptyCondition(NONEMPTY536); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            int alt323=3;
            int LA323_0 = input.LA(1);

            if ( (LA323_0==LBRACKET) ) {
                int LA323_1 = input.LA(2);

                if ( (synpred44_Ceylon()) ) {
                    alt323=1;
                }
                else if ( (true) ) {
                    alt323=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 323, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA323_0==COMPILER_ANNOTATION) && (synpred44_Ceylon())) {
                alt323=1;
            }
            else if ( (LA323_0==SMALLER_OP) && (synpred44_Ceylon())) {
                alt323=1;
            }
            else if ( (LA323_0==UIDENTIFIER) ) {
                int LA323_4 = input.LA(2);

                if ( (synpred44_Ceylon()) ) {
                    alt323=1;
                }
                else if ( (true) ) {
                    alt323=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 323, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA323_0==PACKAGE) ) {
                int LA323_5 = input.LA(2);

                if ( (synpred44_Ceylon()) ) {
                    alt323=1;
                }
                else if ( (true) ) {
                    alt323=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 323, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA323_0==LBRACE) ) {
                int LA323_6 = input.LA(2);

                if ( (synpred44_Ceylon()) ) {
                    alt323=1;
                }
                else if ( (true) ) {
                    alt323=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 323, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA323_0==VOID_MODIFIER) && (synpred44_Ceylon())) {
                alt323=1;
            }
            else if ( (LA323_0==FUNCTION_MODIFIER) && (synpred44_Ceylon())) {
                alt323=1;
            }
            else if ( (LA323_0==VALUE_MODIFIER) && (synpred44_Ceylon())) {
                alt323=1;
            }
            else if ( (LA323_0==LIDENTIFIER) ) {
                int LA323_10 = input.LA(2);

                if ( (synpred44_Ceylon()) ) {
                    alt323=1;
                }
                else if ( (synpred45_Ceylon()) ) {
                    alt323=2;
                }
                else if ( (true) ) {
                    alt323=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 323, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA323_0==BACKTICK||LA323_0==CHAR_LITERAL||(LA323_0 >= DECREMENT_OP && LA323_0 <= DIFFERENCE_OP)||LA323_0==DYNAMIC||LA323_0==FLOAT_LITERAL||LA323_0==INCREMENT_OP||LA323_0==LPAREN||LA323_0==NATURAL_LITERAL||(LA323_0 >= NOT_OP && LA323_0 <= OBJECT_DEFINITION)||LA323_0==OUTER||LA323_0==STRING_LITERAL||LA323_0==STRING_START||(LA323_0 >= SUM_OP && LA323_0 <= SUPER)||LA323_0==THIS||LA323_0==VERBATIM_STRING) ) {
                alt323=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 323, 0, input);

                throw nvae;

            }
            switch (alt323) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
                    {
                    pushFollow(FOLLOW_letVariable_in_nonemptyCondition24426);
                    letVariable537=letVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(letVariable537); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3629:9: ( LIDENTIFIER )=> impliedVariable
                    {
                    pushFollow(FOLLOW_impliedVariable_in_nonemptyCondition24460);
                    impliedVariable538=impliedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(impliedVariable538); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3631:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_nonemptyCondition24481);
                    expression539=expression();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setBrokenExpression(expression539); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "nonemptyCondition"



    // $ANTLR start "isCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3636:1: isCondition returns [IsCondition condition] : ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable ) ;
    public IsCondition isCondition() throws RecognitionException {
        IsCondition condition = null;


        Token NOT_OP540=null;
        Token IS_OP541=null;
        Variable v =null;

        StaticType type542 =null;

        Variable impliedVariable543 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3637:5: ( ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3637:7: ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3637:7: ( NOT_OP )?
            int alt324=2;
            int LA324_0 = input.LA(1);

            if ( (LA324_0==NOT_OP) ) {
                alt324=1;
            }
            switch (alt324) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3638:9: NOT_OP
                    {
                    NOT_OP540=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_isCondition24530); if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition = new IsCondition(NOT_OP540);
                              condition.setNot(true); }

                    }
                    break;

            }


            IS_OP541=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_isCondition24557); if (state.failed) return condition;

            if ( state.backtracking==0 ) { if (condition==null)
                        condition = new IsCondition(IS_OP541); }

            pushFollow(FOLLOW_type_in_isCondition24574);
            type542=type();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setType(type542); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3647:7: ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable )
            int alt325=2;
            int LA325_0 = input.LA(1);

            if ( (LA325_0==LIDENTIFIER) ) {
                int LA325_1 = input.LA(2);

                if ( (LA325_1==SPECIFY) && (synpred46_Ceylon())) {
                    alt325=1;
                }
                else if ( (LA325_1==COMMA||LA325_1==RPAREN) ) {
                    alt325=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 325, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 325, 0, input);

                throw nvae;

            }
            switch (alt325) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3648:9: ( LIDENTIFIER SPECIFY )=>v= isConditionVariable
                    {
                    pushFollow(FOLLOW_isConditionVariable_in_isCondition24618);
                    v=isConditionVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(v); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3652:9: impliedVariable
                    {
                    pushFollow(FOLLOW_impliedVariable_in_isCondition24646);
                    impliedVariable543=impliedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(impliedVariable543); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "isCondition"



    // $ANTLR start "isConditionVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3657:1: isConditionVariable returns [Variable variable] : memberName specifier ;
    public Variable isConditionVariable() throws RecognitionException {
        Variable variable = null;


        Identifier memberName544 =null;

        SpecifierExpression specifier545 =null;


         variable = new Variable(null);
                    variable.setType(new ValueModifier(null));  
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3660:5: ( memberName specifier )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3660:7: memberName specifier
            {
            pushFollow(FOLLOW_memberName_in_isConditionVariable24695);
            memberName544=memberName();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable.setIdentifier(memberName544); }

            pushFollow(FOLLOW_specifier_in_isConditionVariable24711);
            specifier545=specifier();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable.setSpecifierExpression(specifier545); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "isConditionVariable"



    // $ANTLR start "satisfiesCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3666:1: satisfiesCondition returns [SatisfiesCondition condition] : SATISFIES type typeName ;
    public SatisfiesCondition satisfiesCondition() throws RecognitionException {
        SatisfiesCondition condition = null;


        Token SATISFIES546=null;
        StaticType type547 =null;

        Identifier typeName548 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3667:5: ( SATISFIES type typeName )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3667:7: SATISFIES type typeName
            {
            SATISFIES546=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiesCondition24740); if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition = new SatisfiesCondition(SATISFIES546); }

            pushFollow(FOLLOW_type_in_satisfiesCondition24757);
            type547=type();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setType(type547); }

            pushFollow(FOLLOW_typeName_in_satisfiesCondition24774);
            typeName548=typeName();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setIdentifier(typeName548); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "satisfiesCondition"



    // $ANTLR start "controlStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3675:1: controlStatement returns [ControlStatement controlStatement] : ( ifElse | switchCaseElse | whileLoop | forElse | tryCatchFinally | dynamic );
    public ControlStatement controlStatement() throws RecognitionException {
        ControlStatement controlStatement = null;


        IfStatement ifElse549 =null;

        SwitchStatement switchCaseElse550 =null;

        WhileStatement whileLoop551 =null;

        ForStatement forElse552 =null;

        TryCatchStatement tryCatchFinally553 =null;

        DynamicStatement dynamic554 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3676:5: ( ifElse | switchCaseElse | whileLoop | forElse | tryCatchFinally | dynamic )
            int alt326=6;
            switch ( input.LA(1) ) {
            case IF_CLAUSE:
                {
                alt326=1;
                }
                break;
            case SWITCH_CLAUSE:
                {
                alt326=2;
                }
                break;
            case WHILE_CLAUSE:
                {
                alt326=3;
                }
                break;
            case FOR_CLAUSE:
                {
                alt326=4;
                }
                break;
            case TRY_CLAUSE:
                {
                alt326=5;
                }
                break;
            case DYNAMIC:
                {
                alt326=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return controlStatement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 326, 0, input);

                throw nvae;

            }

            switch (alt326) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3676:7: ifElse
                    {
                    pushFollow(FOLLOW_ifElse_in_controlStatement24803);
                    ifElse549=ifElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =ifElse549; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3678:7: switchCaseElse
                    {
                    pushFollow(FOLLOW_switchCaseElse_in_controlStatement24820);
                    switchCaseElse550=switchCaseElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =switchCaseElse550; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3680:7: whileLoop
                    {
                    pushFollow(FOLLOW_whileLoop_in_controlStatement24837);
                    whileLoop551=whileLoop();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =whileLoop551; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3682:7: forElse
                    {
                    pushFollow(FOLLOW_forElse_in_controlStatement24854);
                    forElse552=forElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =forElse552; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3684:7: tryCatchFinally
                    {
                    pushFollow(FOLLOW_tryCatchFinally_in_controlStatement24871);
                    tryCatchFinally553=tryCatchFinally();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =tryCatchFinally553; }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3686:7: dynamic
                    {
                    pushFollow(FOLLOW_dynamic_in_controlStatement24887);
                    dynamic554=dynamic();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =dynamic554; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return controlStatement;
    }
    // $ANTLR end "controlStatement"



    // $ANTLR start "controlBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3690:1: controlBlock returns [Block block] : ( ( LBRACE )=>b= block |) ;
    public Block controlBlock() throws RecognitionException {
        Block block = null;


        Block b =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3691:5: ( ( ( LBRACE )=>b= block |) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3691:7: ( ( LBRACE )=>b= block |)
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3691:7: ( ( LBRACE )=>b= block |)
            int alt327=2;
            int LA327_0 = input.LA(1);

            if ( (LA327_0==LBRACE) ) {
                int LA327_1 = input.LA(2);

                if ( (synpred47_Ceylon()) ) {
                    alt327=1;
                }
                else if ( (true) ) {
                    alt327=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return block;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 327, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA327_0==ALIAS||(LA327_0 >= ASSERT && LA327_0 <= ASSIGN)||(LA327_0 >= BACKTICK && LA327_0 <= BREAK)||(LA327_0 >= CATCH_CLAUSE && LA327_0 <= CLASS_DEFINITION)||LA327_0==COMPILER_ANNOTATION||LA327_0==CONTINUE||(LA327_0 >= DECREMENT_OP && LA327_0 <= DIFFERENCE_OP)||LA327_0==DYNAMIC||LA327_0==ELSE_CLAUSE||(LA327_0 >= FINALLY_CLAUSE && LA327_0 <= FUNCTION_MODIFIER)||LA327_0==IF_CLAUSE||(LA327_0 >= INCREMENT_OP && LA327_0 <= INTERFACE_DEFINITION)||LA327_0==LBRACKET||LA327_0==LIDENTIFIER||LA327_0==LPAREN||(LA327_0 >= NATURAL_LITERAL && LA327_0 <= NEW)||(LA327_0 >= NOT_OP && LA327_0 <= OBJECT_DEFINITION)||(LA327_0 >= OUTER && LA327_0 <= PACKAGE)||LA327_0==RBRACE||LA327_0==RETURN||LA327_0==SMALLER_OP||LA327_0==STRING_LITERAL||LA327_0==STRING_START||(LA327_0 >= SUM_OP && LA327_0 <= SWITCH_CLAUSE)||(LA327_0 >= THIS && LA327_0 <= TRY_CLAUSE)||LA327_0==UIDENTIFIER||(LA327_0 >= VALUE_MODIFIER && LA327_0 <= WHILE_CLAUSE)) ) {
                alt327=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return block;}
                NoViableAltException nvae =
                    new NoViableAltException("", 327, 0, input);

                throw nvae;

            }
            switch (alt327) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3691:9: ( LBRACE )=>b= block
                    {
                    pushFollow(FOLLOW_block_in_controlBlock24925);
                    b=block();

                    state._fsp--;
                    if (state.failed) return block;

                    if ( state.backtracking==0 ) { block =b; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3693:9: 
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                    new MismatchedTokenException(LBRACE, input)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "controlBlock"



    // $ANTLR start "dynamic"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3698:1: dynamic returns [DynamicStatement statement] : DYNAMIC block ;
    public DynamicStatement dynamic() throws RecognitionException {
        DynamicStatement statement = null;


        Token DYNAMIC555=null;
        Block block556 =null;


         DynamicClause dc = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3700:5: ( DYNAMIC block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3700:7: DYNAMIC block
            {
            if ( state.backtracking==0 ) { statement =new DynamicStatement(null); }

            DYNAMIC555=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_dynamic24991); if (state.failed) return statement;

            if ( state.backtracking==0 ) { dc = new DynamicClause(DYNAMIC555);
                    statement.setDynamicClause(dc); }

            pushFollow(FOLLOW_block_in_dynamic25008);
            block556=block();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { dc.setBlock(block556); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "dynamic"



    // $ANTLR start "ifElse"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3708:1: ifElse returns [IfStatement statement] : ifBlock ( elseBlock )? ;
    public IfStatement ifElse() throws RecognitionException {
        IfStatement statement = null;


        IfClause ifBlock557 =null;

        ElseClause elseBlock558 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3709:5: ( ifBlock ( elseBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3709:7: ifBlock ( elseBlock )?
            {
            if ( state.backtracking==0 ) { statement =new IfStatement(null); }

            pushFollow(FOLLOW_ifBlock_in_ifElse25045);
            ifBlock557=ifBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setIfClause(ifBlock557); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3712:7: ( elseBlock )?
            int alt328=2;
            int LA328_0 = input.LA(1);

            if ( (LA328_0==ELSE_CLAUSE) ) {
                alt328=1;
            }
            switch (alt328) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3713:9: elseBlock
                    {
                    pushFollow(FOLLOW_elseBlock_in_ifElse25073);
                    elseBlock558=elseBlock();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { ElseClause ec = elseBlock558;
                              statement.setElseClause(ec);
                              ConditionList cl = ifBlock557.getConditionList();
                              if (cl!=null) {
                                List<Condition> conditions = cl.getConditions();
                                if (conditions.size()==1) {
                                  Condition c = conditions.get(0);
                                  Identifier id = null;
                                  Type t = null;
                                  if (c instanceof ExistsOrNonemptyCondition) {
                                    Statement s = ((ExistsOrNonemptyCondition)c).getVariable();
                                    if (s instanceof Variable) {
                                      Variable v = (Variable) s;
                                      t = v.getType();
                                      id = v.getIdentifier();
                                    }
                                  }
                                  else if (c instanceof IsCondition) {
                                    Variable v = (Variable) ((IsCondition)c).getVariable();
                                    if (v!=null) {
                                      t = v.getType();
                                      id = v.getIdentifier();
                                    }
                                  }
                                  if (id!=null && ec!=null && t instanceof SyntheticVariable) { 
                                    Variable ev = new Variable(null);
                                    ev.setType(new SyntheticVariable(null));
                                    SpecifierExpression ese = new SpecifierExpression(null);
                                    Expression ee = new Expression(null);
                                    BaseMemberExpression ebme = new BaseMemberExpression(null);
                                    ebme.setTypeArguments( new InferredTypeArguments(null) );
                                    ee.setTerm(ebme);
                                    ese.setExpression(ee);
                                    ev.setSpecifierExpression(ese);
                                    ec.setVariable(ev);
                                    ev.setIdentifier(id);
                                    ebme.setIdentifier(id);
                                  }
                                }
                              }
                            }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "ifElse"



    // $ANTLR start "ifBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3758:1: ifBlock returns [IfClause clause] : IF_CLAUSE conditions controlBlock ;
    public IfClause ifBlock() throws RecognitionException {
        IfClause clause = null;


        Token IF_CLAUSE559=null;
        ConditionList conditions560 =null;

        Block controlBlock561 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3759:5: ( IF_CLAUSE conditions controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3759:7: IF_CLAUSE conditions controlBlock
            {
            IF_CLAUSE559=(Token)match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_ifBlock25113); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new IfClause(IF_CLAUSE559); }

            pushFollow(FOLLOW_conditions_in_ifBlock25130);
            conditions560=conditions();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setConditionList(conditions560); }

            pushFollow(FOLLOW_controlBlock_in_ifBlock25146);
            controlBlock561=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock561); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "ifBlock"



    // $ANTLR start "elseBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3767:1: elseBlock returns [ElseClause clause] : ELSE_CLAUSE ( elseIf | block ) ;
    public ElseClause elseBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE562=null;
        Block elseIf563 =null;

        Block block564 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3768:5: ( ELSE_CLAUSE ( elseIf | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3768:7: ELSE_CLAUSE ( elseIf | block )
            {
            ELSE_CLAUSE562=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_elseBlock25175); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE562); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3770:7: ( elseIf | block )
            int alt329=2;
            int LA329_0 = input.LA(1);

            if ( (LA329_0==IF_CLAUSE) ) {
                alt329=1;
            }
            else if ( (LA329_0==LBRACE) ) {
                alt329=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return clause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 329, 0, input);

                throw nvae;

            }
            switch (alt329) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3771:9: elseIf
                    {
                    pushFollow(FOLLOW_elseIf_in_elseBlock25202);
                    elseIf563=elseIf();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(elseIf563); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3774:9: block
                    {
                    pushFollow(FOLLOW_block_in_elseBlock25232);
                    block564=block();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(block564); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "elseBlock"



    // $ANTLR start "elseIf"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3779:1: elseIf returns [Block block] : ifElse ;
    public Block elseIf() throws RecognitionException {
        Block block = null;


        IfStatement ifElse565 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3780:5: ( ifElse )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3780:7: ifElse
            {
            pushFollow(FOLLOW_ifElse_in_elseIf25271);
            ifElse565=ifElse();

            state._fsp--;
            if (state.failed) return block;

            if ( state.backtracking==0 ) { block = new Block(null);
                    block.addStatement(ifElse565); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "elseIf"



    // $ANTLR start "switchCaseElse"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3785:1: switchCaseElse returns [SwitchStatement statement] : switchHeader cases ;
    public SwitchStatement switchCaseElse() throws RecognitionException {
        SwitchStatement statement = null;


        SwitchClause switchHeader566 =null;

        SwitchCaseList cases567 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3786:5: ( switchHeader cases )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3786:7: switchHeader cases
            {
            if ( state.backtracking==0 ) { statement = new SwitchStatement(null); }

            pushFollow(FOLLOW_switchHeader_in_switchCaseElse25308);
            switchHeader566=switchHeader();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setSwitchClause(switchHeader566); }

            pushFollow(FOLLOW_cases_in_switchCaseElse25325);
            cases567=cases();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setSwitchCaseList(cases567);
                    Identifier id = null;
                    Switched sw = switchHeader566.getSwitched();
                    if (sw!=null) {
                      Expression ex = sw.getExpression();
                      if (ex!=null && ex.getTerm() instanceof BaseMemberExpression) {
                        id = ((BaseMemberExpression) ex.getTerm()).getIdentifier();
                      }
                      TypedDeclaration var = sw.getVariable();
                      if (var!=null) {
                        id = var.getIdentifier();
                      }
                    }
                    if (id!=null) {
                      for (CaseClause cc: cases567.getCaseClauses()) {
                        CaseItem item = cc.getCaseItem();
                        if (item instanceof IsCase) {
                          IsCase ic = (IsCase) item;
                          Variable v = new Variable(null);
                          v.setType(new SyntheticVariable(null));
                          SpecifierExpression se = new SpecifierExpression(null);
                          Expression e = new Expression(null);
                          BaseMemberExpression bme = new BaseMemberExpression(null);
                          bme.setTypeArguments( new InferredTypeArguments(null) );
                          e.setTerm(bme);
                          se.setExpression(e);
                          v.setSpecifierExpression(se);
                          ic.setVariable(v);
                          bme.setIdentifier(id);
                          v.setIdentifier(id);
                        }
                      }
                      ElseClause ec = cases567.getElseClause();
                      if (ec!=null) {
                        Variable ev = new Variable(null);
                        ev.setType(new SyntheticVariable(null));
                        SpecifierExpression ese = new SpecifierExpression(null);
                        Expression ee = new Expression(null);
                        BaseMemberExpression ebme = new BaseMemberExpression(null);
                        ebme.setTypeArguments( new InferredTypeArguments(null) );
                        ee.setTerm(ebme);
                        ese.setExpression(ee);
                        ev.setSpecifierExpression(ese);
                        ec.setVariable(ev);
                        ebme.setIdentifier(id);
                        ev.setIdentifier(id);
                      }
                    }
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "switchCaseElse"



    // $ANTLR start "switchHeader"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3841:1: switchHeader returns [SwitchClause clause] : SWITCH_CLAUSE LPAREN ( switched )? RPAREN ;
    public SwitchClause switchHeader() throws RecognitionException {
        SwitchClause clause = null;


        Token SWITCH_CLAUSE568=null;
        Token LPAREN569=null;
        Token RPAREN571=null;
        Switched switched570 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3842:5: ( SWITCH_CLAUSE LPAREN ( switched )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3842:7: SWITCH_CLAUSE LPAREN ( switched )? RPAREN
            {
            SWITCH_CLAUSE568=(Token)match(input,SWITCH_CLAUSE,FOLLOW_SWITCH_CLAUSE_in_switchHeader25354); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new SwitchClause(SWITCH_CLAUSE568); }

            LPAREN569=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_switchHeader25371); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setEndToken(LPAREN569); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3846:7: ( switched )?
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==BACKTICK||LA330_0==CHAR_LITERAL||LA330_0==COMPILER_ANNOTATION||(LA330_0 >= DECREMENT_OP && LA330_0 <= DIFFERENCE_OP)||LA330_0==DYNAMIC||LA330_0==FLOAT_LITERAL||LA330_0==FUNCTION_MODIFIER||LA330_0==INCREMENT_OP||(LA330_0 >= LBRACE && LA330_0 <= LBRACKET)||LA330_0==LIDENTIFIER||LA330_0==LPAREN||LA330_0==NATURAL_LITERAL||(LA330_0 >= NOT_OP && LA330_0 <= OBJECT_DEFINITION)||(LA330_0 >= OUTER && LA330_0 <= PACKAGE)||LA330_0==SMALLER_OP||LA330_0==STRING_LITERAL||LA330_0==STRING_START||(LA330_0 >= SUM_OP && LA330_0 <= SUPER)||LA330_0==THIS||LA330_0==UIDENTIFIER||(LA330_0 >= VALUE_MODIFIER && LA330_0 <= VOID_MODIFIER)) ) {
                alt330=1;
            }
            switch (alt330) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3847:9: switched
                    {
                    pushFollow(FOLLOW_switched_in_switchHeader25397);
                    switched570=switched();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setSwitched(switched570); 
                              clause.setEndToken(null); }

                    }
                    break;

            }


            RPAREN571=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_switchHeader25425); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setEndToken(RPAREN571); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "switchHeader"



    // $ANTLR start "switched"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3855:1: switched returns [Switched switched] : ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression ) ;
    public Switched switched() throws RecognitionException {
        Switched switched = null;


        Variable specifiedVariable572 =null;

        Expression expression573 =null;


         switched = new Switched(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3857:5: ( ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3857:7: ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3857:7: ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression )
            int alt331=2;
            int LA331_0 = input.LA(1);

            if ( (LA331_0==COMPILER_ANNOTATION) && (synpred48_Ceylon())) {
                alt331=1;
            }
            else if ( (LA331_0==SMALLER_OP) && (synpred48_Ceylon())) {
                alt331=1;
            }
            else if ( (LA331_0==UIDENTIFIER) ) {
                int LA331_3 = input.LA(2);

                if ( (synpred48_Ceylon()) ) {
                    alt331=1;
                }
                else if ( (true) ) {
                    alt331=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 331, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA331_0==PACKAGE) ) {
                int LA331_4 = input.LA(2);

                if ( (synpred48_Ceylon()) ) {
                    alt331=1;
                }
                else if ( (true) ) {
                    alt331=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 331, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA331_0==LBRACKET) ) {
                int LA331_5 = input.LA(2);

                if ( (synpred48_Ceylon()) ) {
                    alt331=1;
                }
                else if ( (true) ) {
                    alt331=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 331, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA331_0==LBRACE) ) {
                int LA331_6 = input.LA(2);

                if ( (synpred48_Ceylon()) ) {
                    alt331=1;
                }
                else if ( (true) ) {
                    alt331=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 331, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA331_0==VOID_MODIFIER) && (synpred48_Ceylon())) {
                alt331=1;
            }
            else if ( (LA331_0==FUNCTION_MODIFIER) && (synpred48_Ceylon())) {
                alt331=1;
            }
            else if ( (LA331_0==VALUE_MODIFIER) && (synpred48_Ceylon())) {
                alt331=1;
            }
            else if ( (LA331_0==LIDENTIFIER) ) {
                int LA331_10 = input.LA(2);

                if ( (synpred48_Ceylon()) ) {
                    alt331=1;
                }
                else if ( (true) ) {
                    alt331=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 331, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA331_0==BACKTICK||LA331_0==CHAR_LITERAL||(LA331_0 >= DECREMENT_OP && LA331_0 <= DIFFERENCE_OP)||LA331_0==DYNAMIC||LA331_0==FLOAT_LITERAL||LA331_0==INCREMENT_OP||LA331_0==LPAREN||LA331_0==NATURAL_LITERAL||(LA331_0 >= NOT_OP && LA331_0 <= OBJECT_DEFINITION)||LA331_0==OUTER||LA331_0==STRING_LITERAL||LA331_0==STRING_START||(LA331_0 >= SUM_OP && LA331_0 <= SUPER)||LA331_0==THIS||LA331_0==VERBATIM_STRING) ) {
                alt331=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return switched;}
                NoViableAltException nvae =
                    new NoViableAltException("", 331, 0, input);

                throw nvae;

            }
            switch (alt331) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3857:9: ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable
                    {
                    pushFollow(FOLLOW_specifiedVariable_in_switched25484);
                    specifiedVariable572=specifiedVariable();

                    state._fsp--;
                    if (state.failed) return switched;

                    if ( state.backtracking==0 ) { switched.setVariable(specifiedVariable572); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3860:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_switched25504);
                    expression573=expression();

                    state._fsp--;
                    if (state.failed) return switched;

                    if ( state.backtracking==0 ) { switched.setExpression(expression573); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return switched;
    }
    // $ANTLR end "switched"



    // $ANTLR start "cases"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3865:1: cases returns [SwitchCaseList switchCaseList] : ( caseBlock )+ ( defaultCaseBlock )? ;
    public SwitchCaseList cases() throws RecognitionException {
        SwitchCaseList switchCaseList = null;


        CaseClause caseBlock574 =null;

        ElseClause defaultCaseBlock575 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3866:5: ( ( caseBlock )+ ( defaultCaseBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3866:7: ( caseBlock )+ ( defaultCaseBlock )?
            {
            if ( state.backtracking==0 ) { switchCaseList = new SwitchCaseList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3867:7: ( caseBlock )+
            int cnt332=0;
            loop332:
            do {
                int alt332=2;
                int LA332_0 = input.LA(1);

                if ( (LA332_0==CASE_CLAUSE) ) {
                    alt332=1;
                }


                switch (alt332) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3868:9: caseBlock
            	    {
            	    pushFollow(FOLLOW_caseBlock_in_cases25561);
            	    caseBlock574=caseBlock();

            	    state._fsp--;
            	    if (state.failed) return switchCaseList;

            	    if ( state.backtracking==0 ) { switchCaseList.addCaseClause(caseBlock574); }

            	    }
            	    break;

            	default :
            	    if ( cnt332 >= 1 ) break loop332;
            	    if (state.backtracking>0) {state.failed=true; return switchCaseList;}
                        EarlyExitException eee =
                            new EarlyExitException(332, input);
                        throw eee;
                }
                cnt332++;
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3871:7: ( defaultCaseBlock )?
            int alt333=2;
            int LA333_0 = input.LA(1);

            if ( (LA333_0==ELSE_CLAUSE) ) {
                alt333=1;
            }
            switch (alt333) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3872:9: defaultCaseBlock
                    {
                    pushFollow(FOLLOW_defaultCaseBlock_in_cases25598);
                    defaultCaseBlock575=defaultCaseBlock();

                    state._fsp--;
                    if (state.failed) return switchCaseList;

                    if ( state.backtracking==0 ) { switchCaseList.setElseClause(defaultCaseBlock575); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return switchCaseList;
    }
    // $ANTLR end "cases"



    // $ANTLR start "caseBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3877:1: caseBlock returns [CaseClause clause] : CASE_CLAUSE caseItemList block ;
    public CaseClause caseBlock() throws RecognitionException {
        CaseClause clause = null;


        Token CASE_CLAUSE576=null;
        CaseItem caseItemList577 =null;

        Block block578 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3878:5: ( CASE_CLAUSE caseItemList block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3878:7: CASE_CLAUSE caseItemList block
            {
            CASE_CLAUSE576=(Token)match(input,CASE_CLAUSE,FOLLOW_CASE_CLAUSE_in_caseBlock25642); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new CaseClause(CASE_CLAUSE576); }

            pushFollow(FOLLOW_caseItemList_in_caseBlock25659);
            caseItemList577=caseItemList();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setCaseItem(caseItemList577); }

            pushFollow(FOLLOW_block_in_caseBlock25675);
            block578=block();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(block578); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "caseBlock"



    // $ANTLR start "defaultCaseBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3886:1: defaultCaseBlock returns [ElseClause clause] : ELSE_CLAUSE block ;
    public ElseClause defaultCaseBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE579=null;
        Block block580 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3887:5: ( ELSE_CLAUSE block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3887:7: ELSE_CLAUSE block
            {
            ELSE_CLAUSE579=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_defaultCaseBlock25704); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE579); }

            pushFollow(FOLLOW_block_in_defaultCaseBlock25721);
            block580=block();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(block580); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "defaultCaseBlock"



    // $ANTLR start "caseItemList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3893:1: caseItemList returns [CaseItem item] : LPAREN (ci= caseItem )? RPAREN ;
    public CaseItem caseItemList() throws RecognitionException {
        CaseItem item = null;


        Token RPAREN581=null;
        CaseItem ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3894:5: ( LPAREN (ci= caseItem )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3894:7: LPAREN (ci= caseItem )? RPAREN
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_caseItemList25750); if (state.failed) return item;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3895:7: (ci= caseItem )?
            int alt334=2;
            int LA334_0 = input.LA(1);

            if ( (LA334_0==BACKTICK||LA334_0==CHAR_LITERAL||(LA334_0 >= DECREMENT_OP && LA334_0 <= DIFFERENCE_OP)||LA334_0==DYNAMIC||LA334_0==FLOAT_LITERAL||LA334_0==INCREMENT_OP||LA334_0==IS_OP||(LA334_0 >= LBRACE && LA334_0 <= LBRACKET)||LA334_0==LIDENTIFIER||LA334_0==LPAREN||LA334_0==NATURAL_LITERAL||LA334_0==OBJECT_DEFINITION||(LA334_0 >= OUTER && LA334_0 <= PACKAGE)||LA334_0==SATISFIES||LA334_0==STRING_LITERAL||LA334_0==STRING_START||(LA334_0 >= SUM_OP && LA334_0 <= SUPER)||LA334_0==THIS||LA334_0==UIDENTIFIER||LA334_0==VERBATIM_STRING) ) {
                alt334=1;
            }
            switch (alt334) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3896:9: ci= caseItem
                    {
                    pushFollow(FOLLOW_caseItem_in_caseItemList25771);
                    ci=caseItem();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item = ci; }

                    }
                    break;

            }


            RPAREN581=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_caseItemList25798); if (state.failed) return item;

            if ( state.backtracking==0 ) { if (item!=null) 
                        item.setEndToken(RPAREN581); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "caseItemList"



    // $ANTLR start "caseItem"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3904:1: caseItem returns [CaseItem item] : ( ( IS_OP )=> isCaseCondition | ( SATISFIES )=> satisfiesCaseCondition | matchCaseCondition );
    public CaseItem caseItem() throws RecognitionException {
        CaseItem item = null;


        IsCase isCaseCondition582 =null;

        SatisfiesCase satisfiesCaseCondition583 =null;

        MatchCase matchCaseCondition584 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3905:5: ( ( IS_OP )=> isCaseCondition | ( SATISFIES )=> satisfiesCaseCondition | matchCaseCondition )
            int alt335=3;
            int LA335_0 = input.LA(1);

            if ( (LA335_0==IS_OP) && (synpred49_Ceylon())) {
                alt335=1;
            }
            else if ( (LA335_0==SATISFIES) && (synpred50_Ceylon())) {
                alt335=2;
            }
            else if ( (LA335_0==BACKTICK||LA335_0==CHAR_LITERAL||(LA335_0 >= DECREMENT_OP && LA335_0 <= DIFFERENCE_OP)||LA335_0==DYNAMIC||LA335_0==FLOAT_LITERAL||LA335_0==INCREMENT_OP||(LA335_0 >= LBRACE && LA335_0 <= LBRACKET)||LA335_0==LIDENTIFIER||LA335_0==LPAREN||LA335_0==NATURAL_LITERAL||LA335_0==OBJECT_DEFINITION||(LA335_0 >= OUTER && LA335_0 <= PACKAGE)||LA335_0==STRING_LITERAL||LA335_0==STRING_START||(LA335_0 >= SUM_OP && LA335_0 <= SUPER)||LA335_0==THIS||LA335_0==UIDENTIFIER||LA335_0==VERBATIM_STRING) ) {
                alt335=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return item;}
                NoViableAltException nvae =
                    new NoViableAltException("", 335, 0, input);

                throw nvae;

            }
            switch (alt335) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3905:7: ( IS_OP )=> isCaseCondition
                    {
                    pushFollow(FOLLOW_isCaseCondition_in_caseItem25832);
                    isCaseCondition582=isCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =isCaseCondition582; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3907:7: ( SATISFIES )=> satisfiesCaseCondition
                    {
                    pushFollow(FOLLOW_satisfiesCaseCondition_in_caseItem25853);
                    satisfiesCaseCondition583=satisfiesCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =satisfiesCaseCondition583; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3909:7: matchCaseCondition
                    {
                    pushFollow(FOLLOW_matchCaseCondition_in_caseItem25869);
                    matchCaseCondition584=matchCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =matchCaseCondition584; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "caseItem"



    // $ANTLR start "matchCaseCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3913:1: matchCaseCondition returns [MatchCase item] : valueCaseList ;
    public MatchCase matchCaseCondition() throws RecognitionException {
        MatchCase item = null;


        ExpressionList valueCaseList585 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3914:5: ( valueCaseList )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3914:7: valueCaseList
            {
            pushFollow(FOLLOW_valueCaseList_in_matchCaseCondition25898);
            valueCaseList585=valueCaseList();

            state._fsp--;
            if (state.failed) return item;

            if ( state.backtracking==0 ) { item = new MatchCase(null);
                    item.setExpressionList(valueCaseList585); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "matchCaseCondition"



    // $ANTLR start "isCaseCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3919:1: isCaseCondition returns [IsCase item] : IS_OP type ;
    public IsCase isCaseCondition() throws RecognitionException {
        IsCase item = null;


        Token IS_OP586=null;
        StaticType type587 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3920:5: ( IS_OP type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3920:7: IS_OP type
            {
            IS_OP586=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_isCaseCondition25927); if (state.failed) return item;

            if ( state.backtracking==0 ) { item = new IsCase(IS_OP586); }

            pushFollow(FOLLOW_type_in_isCaseCondition25944);
            type587=type();

            state._fsp--;
            if (state.failed) return item;

            if ( state.backtracking==0 ) { item.setType(type587); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "isCaseCondition"



    // $ANTLR start "satisfiesCaseCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3926:1: satisfiesCaseCondition returns [SatisfiesCase item] : SATISFIES type ;
    public SatisfiesCase satisfiesCaseCondition() throws RecognitionException {
        SatisfiesCase item = null;


        Token SATISFIES588=null;
        StaticType type589 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3927:5: ( SATISFIES type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3927:7: SATISFIES type
            {
            SATISFIES588=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiesCaseCondition25973); if (state.failed) return item;

            if ( state.backtracking==0 ) { item = new SatisfiesCase(SATISFIES588); }

            pushFollow(FOLLOW_type_in_satisfiesCaseCondition25990);
            type589=type();

            state._fsp--;
            if (state.failed) return item;

            if ( state.backtracking==0 ) { item.setType(type589); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "satisfiesCaseCondition"



    // $ANTLR start "forElse"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3933:1: forElse returns [ForStatement statement] : forBlock ( failBlock )? ;
    public ForStatement forElse() throws RecognitionException {
        ForStatement statement = null;


        ForClause forBlock590 =null;

        ElseClause failBlock591 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3934:5: ( forBlock ( failBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3934:7: forBlock ( failBlock )?
            {
            if ( state.backtracking==0 ) { statement =new ForStatement(null); }

            pushFollow(FOLLOW_forBlock_in_forElse26027);
            forBlock590=forBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setForClause(forBlock590); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3937:7: ( failBlock )?
            int alt336=2;
            int LA336_0 = input.LA(1);

            if ( (LA336_0==ELSE_CLAUSE) ) {
                alt336=1;
            }
            switch (alt336) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3938:9: failBlock
                    {
                    pushFollow(FOLLOW_failBlock_in_forElse26054);
                    failBlock591=failBlock();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setElseClause(failBlock591); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "forElse"



    // $ANTLR start "forBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3943:1: forBlock returns [ForClause clause] : FOR_CLAUSE forIterator controlBlock ;
    public ForClause forBlock() throws RecognitionException {
        ForClause clause = null;


        Token FOR_CLAUSE592=null;
        ForIterator forIterator593 =null;

        Block controlBlock594 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3944:5: ( FOR_CLAUSE forIterator controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3944:7: FOR_CLAUSE forIterator controlBlock
            {
            FOR_CLAUSE592=(Token)match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_forBlock26094); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ForClause(FOR_CLAUSE592); }

            pushFollow(FOLLOW_forIterator_in_forBlock26111);
            forIterator593=forIterator();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setForIterator(forIterator593); }

            pushFollow(FOLLOW_controlBlock_in_forBlock26128);
            controlBlock594=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock594); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "forBlock"



    // $ANTLR start "failBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3952:1: failBlock returns [ElseClause clause] : ELSE_CLAUSE controlBlock ;
    public ElseClause failBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE595=null;
        Block controlBlock596 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3953:5: ( ELSE_CLAUSE controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3953:7: ELSE_CLAUSE controlBlock
            {
            ELSE_CLAUSE595=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_failBlock26157); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE595); }

            pushFollow(FOLLOW_controlBlock_in_failBlock26174);
            controlBlock596=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock596); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "failBlock"



    // $ANTLR start "forIterator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3959:1: forIterator returns [ForIterator iterator] : LPAREN ( ( ( patternStart )=> pattern | variable ) ( containment )? )? RPAREN ;
    public ForIterator forIterator() throws RecognitionException {
        ForIterator iterator = null;


        Token LPAREN597=null;
        Token RPAREN601=null;
        Pattern pattern598 =null;

        Variable variable599 =null;

        SpecifierExpression containment600 =null;


         ValueIterator vi = null;
                    PatternIterator pi = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3962:5: ( LPAREN ( ( ( patternStart )=> pattern | variable ) ( containment )? )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3962:7: LPAREN ( ( ( patternStart )=> pattern | variable ) ( containment )? )? RPAREN
            {
            LPAREN597=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_forIterator26212); if (state.failed) return iterator;

            if ( state.backtracking==0 ) { vi = new ValueIterator(LPAREN597); 
            	      pi = new PatternIterator(LPAREN597); 
            	      iterator = vi; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3966:6: ( ( ( patternStart )=> pattern | variable ) ( containment )? )?
            int alt339=2;
            int LA339_0 = input.LA(1);

            if ( (LA339_0==COMPILER_ANNOTATION||LA339_0==FUNCTION_MODIFIER||(LA339_0 >= LBRACE && LA339_0 <= LBRACKET)||LA339_0==LIDENTIFIER||LA339_0==PACKAGE||LA339_0==SMALLER_OP||LA339_0==UIDENTIFIER||LA339_0==VALUE_MODIFIER||LA339_0==VOID_MODIFIER) ) {
                alt339=1;
            }
            switch (alt339) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3967:8: ( ( patternStart )=> pattern | variable ) ( containment )?
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3967:8: ( ( patternStart )=> pattern | variable )
                    int alt337=2;
                    switch ( input.LA(1) ) {
                    case LBRACKET:
                        {
                        int LA337_1 = input.LA(2);

                        if ( (synpred51_Ceylon()) ) {
                            alt337=1;
                        }
                        else if ( (true) ) {
                            alt337=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 337, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case COMPILER_ANNOTATION:
                        {
                        int LA337_2 = input.LA(2);

                        if ( (synpred51_Ceylon()) ) {
                            alt337=1;
                        }
                        else if ( (true) ) {
                            alt337=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 337, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case SMALLER_OP:
                        {
                        int LA337_3 = input.LA(2);

                        if ( (synpred51_Ceylon()) ) {
                            alt337=1;
                        }
                        else if ( (true) ) {
                            alt337=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 337, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case UIDENTIFIER:
                        {
                        int LA337_4 = input.LA(2);

                        if ( (synpred51_Ceylon()) ) {
                            alt337=1;
                        }
                        else if ( (true) ) {
                            alt337=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 337, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case PACKAGE:
                        {
                        int LA337_5 = input.LA(2);

                        if ( (synpred51_Ceylon()) ) {
                            alt337=1;
                        }
                        else if ( (true) ) {
                            alt337=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 337, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case LBRACE:
                        {
                        int LA337_6 = input.LA(2);

                        if ( (synpred51_Ceylon()) ) {
                            alt337=1;
                        }
                        else if ( (true) ) {
                            alt337=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 337, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case VOID_MODIFIER:
                        {
                        int LA337_7 = input.LA(2);

                        if ( (synpred51_Ceylon()) ) {
                            alt337=1;
                        }
                        else if ( (true) ) {
                            alt337=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 337, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case FUNCTION_MODIFIER:
                        {
                        int LA337_8 = input.LA(2);

                        if ( (synpred51_Ceylon()) ) {
                            alt337=1;
                        }
                        else if ( (true) ) {
                            alt337=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 337, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case VALUE_MODIFIER:
                        {
                        int LA337_9 = input.LA(2);

                        if ( (synpred51_Ceylon()) ) {
                            alt337=1;
                        }
                        else if ( (true) ) {
                            alt337=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 337, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case LIDENTIFIER:
                        {
                        int LA337_10 = input.LA(2);

                        if ( (synpred51_Ceylon()) ) {
                            alt337=1;
                        }
                        else if ( (true) ) {
                            alt337=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 337, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return iterator;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 337, 0, input);

                        throw nvae;

                    }

                    switch (alt337) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3968:10: ( patternStart )=> pattern
                            {
                            pushFollow(FOLLOW_pattern_in_forIterator26253);
                            pattern598=pattern();

                            state._fsp--;
                            if (state.failed) return iterator;

                            if ( state.backtracking==0 ) { pi.setPattern(pattern598);
                            	          iterator = pi; }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3972:10: variable
                            {
                            pushFollow(FOLLOW_variable_in_forIterator26284);
                            variable599=variable();

                            state._fsp--;
                            if (state.failed) return iterator;

                            if ( state.backtracking==0 ) { vi.setVariable(variable599); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3975:8: ( containment )?
                    int alt338=2;
                    int LA338_0 = input.LA(1);

                    if ( (LA338_0==IN_OP) ) {
                        alt338=1;
                    }
                    switch (alt338) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3976:10: containment
                            {
                            pushFollow(FOLLOW_containment_in_forIterator26324);
                            containment600=containment();

                            state._fsp--;
                            if (state.failed) return iterator;

                            if ( state.backtracking==0 ) { iterator.setSpecifierExpression(containment600); }

                            }
                            break;

                    }


                    }
                    break;

            }


            RPAREN601=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_forIterator26360); if (state.failed) return iterator;

            if ( state.backtracking==0 ) { iterator.setEndToken(RPAREN601); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return iterator;
    }
    // $ANTLR end "forIterator"



    // $ANTLR start "containment"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3984:1: containment returns [SpecifierExpression specifierExpression] : IN_OP ( expression )? ;
    public SpecifierExpression containment() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token IN_OP602=null;
        Expression expression603 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3985:5: ( IN_OP ( expression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3985:7: IN_OP ( expression )?
            {
            IN_OP602=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_containment26392); if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression = new SpecifierExpression(IN_OP602); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3987:7: ( expression )?
            int alt340=2;
            int LA340_0 = input.LA(1);

            if ( (LA340_0==BACKTICK||LA340_0==CHAR_LITERAL||(LA340_0 >= DECREMENT_OP && LA340_0 <= DIFFERENCE_OP)||LA340_0==DYNAMIC||LA340_0==FLOAT_LITERAL||LA340_0==INCREMENT_OP||(LA340_0 >= LBRACE && LA340_0 <= LBRACKET)||LA340_0==LIDENTIFIER||LA340_0==LPAREN||LA340_0==NATURAL_LITERAL||(LA340_0 >= NOT_OP && LA340_0 <= OBJECT_DEFINITION)||(LA340_0 >= OUTER && LA340_0 <= PACKAGE)||LA340_0==STRING_LITERAL||LA340_0==STRING_START||(LA340_0 >= SUM_OP && LA340_0 <= SUPER)||LA340_0==THIS||LA340_0==UIDENTIFIER||LA340_0==VERBATIM_STRING) ) {
                alt340=1;
            }
            switch (alt340) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3987:8: expression
                    {
                    pushFollow(FOLLOW_expression_in_containment26410);
                    expression603=expression();

                    state._fsp--;
                    if (state.failed) return specifierExpression;

                    if ( state.backtracking==0 ) { specifierExpression.setExpression(expression603); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "containment"



    // $ANTLR start "whileLoop"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3991:1: whileLoop returns [WhileStatement statement] : whileBlock ;
    public WhileStatement whileLoop() throws RecognitionException {
        WhileStatement statement = null;


        WhileClause whileBlock604 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3992:5: ( whileBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3992:7: whileBlock
            {
            if ( state.backtracking==0 ) { statement = new WhileStatement(null); }

            pushFollow(FOLLOW_whileBlock_in_whileLoop26453);
            whileBlock604=whileBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setWhileClause(whileBlock604); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "whileLoop"



    // $ANTLR start "whileBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3997:1: whileBlock returns [WhileClause clause] : WHILE_CLAUSE conditions controlBlock ;
    public WhileClause whileBlock() throws RecognitionException {
        WhileClause clause = null;


        Token WHILE_CLAUSE605=null;
        ConditionList conditions606 =null;

        Block controlBlock607 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3998:5: ( WHILE_CLAUSE conditions controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3998:7: WHILE_CLAUSE conditions controlBlock
            {
            WHILE_CLAUSE605=(Token)match(input,WHILE_CLAUSE,FOLLOW_WHILE_CLAUSE_in_whileBlock26482); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new WhileClause(WHILE_CLAUSE605); }

            pushFollow(FOLLOW_conditions_in_whileBlock26498);
            conditions606=conditions();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setConditionList(conditions606); }

            pushFollow(FOLLOW_controlBlock_in_whileBlock26514);
            controlBlock607=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock607); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "whileBlock"



    // $ANTLR start "tryCatchFinally"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4006:1: tryCatchFinally returns [TryCatchStatement statement] : tryBlock ( catchBlock )* ( finallyBlock )? ;
    public TryCatchStatement tryCatchFinally() throws RecognitionException {
        TryCatchStatement statement = null;


        TryClause tryBlock608 =null;

        CatchClause catchBlock609 =null;

        FinallyClause finallyBlock610 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4007:5: ( tryBlock ( catchBlock )* ( finallyBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4007:7: tryBlock ( catchBlock )* ( finallyBlock )?
            {
            if ( state.backtracking==0 ) { statement = new TryCatchStatement(null); }

            pushFollow(FOLLOW_tryBlock_in_tryCatchFinally26551);
            tryBlock608=tryBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setTryClause(tryBlock608); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4010:7: ( catchBlock )*
            loop341:
            do {
                int alt341=2;
                int LA341_0 = input.LA(1);

                if ( (LA341_0==CATCH_CLAUSE) ) {
                    alt341=1;
                }


                switch (alt341) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4011:9: catchBlock
            	    {
            	    pushFollow(FOLLOW_catchBlock_in_tryCatchFinally26578);
            	    catchBlock609=catchBlock();

            	    state._fsp--;
            	    if (state.failed) return statement;

            	    if ( state.backtracking==0 ) { statement.addCatchClause(catchBlock609); }

            	    }
            	    break;

            	default :
            	    break loop341;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4014:7: ( finallyBlock )?
            int alt342=2;
            int LA342_0 = input.LA(1);

            if ( (LA342_0==FINALLY_CLAUSE) ) {
                alt342=1;
            }
            switch (alt342) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4015:9: finallyBlock
                    {
                    pushFollow(FOLLOW_finallyBlock_in_tryCatchFinally26617);
                    finallyBlock610=finallyBlock();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setFinallyClause(finallyBlock610); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "tryCatchFinally"



    // $ANTLR start "tryBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4020:1: tryBlock returns [TryClause clause] : TRY_CLAUSE ( resources controlBlock | block ) ;
    public TryClause tryBlock() throws RecognitionException {
        TryClause clause = null;


        Token TRY_CLAUSE611=null;
        ResourceList resources612 =null;

        Block controlBlock613 =null;

        Block block614 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4021:5: ( TRY_CLAUSE ( resources controlBlock | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4021:7: TRY_CLAUSE ( resources controlBlock | block )
            {
            TRY_CLAUSE611=(Token)match(input,TRY_CLAUSE,FOLLOW_TRY_CLAUSE_in_tryBlock26657); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new TryClause(TRY_CLAUSE611); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4023:7: ( resources controlBlock | block )
            int alt343=2;
            int LA343_0 = input.LA(1);

            if ( (LA343_0==LPAREN) ) {
                alt343=1;
            }
            else if ( (LA343_0==LBRACE) ) {
                alt343=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return clause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 343, 0, input);

                throw nvae;

            }
            switch (alt343) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4024:9: resources controlBlock
                    {
                    pushFollow(FOLLOW_resources_in_tryBlock26684);
                    resources612=resources();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setResourceList(resources612); }

                    pushFollow(FOLLOW_controlBlock_in_tryBlock26704);
                    controlBlock613=controlBlock();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(controlBlock613); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4029:9: block
                    {
                    pushFollow(FOLLOW_block_in_tryBlock26732);
                    block614=block();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(block614); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "tryBlock"



    // $ANTLR start "catchBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4034:1: catchBlock returns [CatchClause clause] : CATCH_CLAUSE catchVariable controlBlock ;
    public CatchClause catchBlock() throws RecognitionException {
        CatchClause clause = null;


        Token CATCH_CLAUSE615=null;
        CatchVariable catchVariable616 =null;

        Block controlBlock617 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4035:5: ( CATCH_CLAUSE catchVariable controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4035:7: CATCH_CLAUSE catchVariable controlBlock
            {
            CATCH_CLAUSE615=(Token)match(input,CATCH_CLAUSE,FOLLOW_CATCH_CLAUSE_in_catchBlock26771); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new CatchClause(CATCH_CLAUSE615); }

            pushFollow(FOLLOW_catchVariable_in_catchBlock26788);
            catchVariable616=catchVariable();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setCatchVariable(catchVariable616); }

            pushFollow(FOLLOW_controlBlock_in_catchBlock26804);
            controlBlock617=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock617); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "catchBlock"



    // $ANTLR start "catchVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4043:1: catchVariable returns [CatchVariable catchVariable] : LPAREN ( variable )? RPAREN ;
    public CatchVariable catchVariable() throws RecognitionException {
        CatchVariable catchVariable = null;


        Token LPAREN618=null;
        Token RPAREN620=null;
        Variable variable619 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4044:5: ( LPAREN ( variable )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4044:7: LPAREN ( variable )? RPAREN
            {
            LPAREN618=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_catchVariable26833); if (state.failed) return catchVariable;

            if ( state.backtracking==0 ) { catchVariable =new CatchVariable(LPAREN618); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4046:7: ( variable )?
            int alt344=2;
            int LA344_0 = input.LA(1);

            if ( (LA344_0==ALIAS||(LA344_0 >= ASSERT && LA344_0 <= ASSIGN)||(LA344_0 >= BACKTICK && LA344_0 <= BREAK)||(LA344_0 >= CHAR_LITERAL && LA344_0 <= CLASS_DEFINITION)||LA344_0==COMPILER_ANNOTATION||LA344_0==CONTINUE||(LA344_0 >= DECREMENT_OP && LA344_0 <= DIFFERENCE_OP)||LA344_0==DYNAMIC||(LA344_0 >= FLOAT_LITERAL && LA344_0 <= FUNCTION_MODIFIER)||(LA344_0 >= IF_CLAUSE && LA344_0 <= INTERFACE_DEFINITION)||LA344_0==IN_OP||(LA344_0 >= LBRACE && LA344_0 <= LIDENTIFIER)||LA344_0==LPAREN||LA344_0==MODULE||(LA344_0 >= NATURAL_LITERAL && LA344_0 <= NEW)||(LA344_0 >= NOT_OP && LA344_0 <= OBJECT_DEFINITION)||(LA344_0 >= OUT && LA344_0 <= PACKAGE)||LA344_0==PRODUCT_OP||LA344_0==RETURN||(LA344_0 >= SEMICOLON && LA344_0 <= SMALLER_OP)||LA344_0==STRING_LITERAL||LA344_0==STRING_START||(LA344_0 >= SUM_OP && LA344_0 <= SWITCH_CLAUSE)||(LA344_0 >= THIS && LA344_0 <= UIDENTIFIER)||(LA344_0 >= VALUE_MODIFIER && LA344_0 <= WHILE_CLAUSE)) ) {
                alt344=1;
            }
            switch (alt344) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4047:7: variable
                    {
                    pushFollow(FOLLOW_variable_in_catchVariable26858);
                    variable619=variable();

                    state._fsp--;
                    if (state.failed) return catchVariable;

                    if ( state.backtracking==0 ) { catchVariable.setVariable(variable619); }

                    }
                    break;

            }


            RPAREN620=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_catchVariable26884); if (state.failed) return catchVariable;

            if ( state.backtracking==0 ) { catchVariable.setEndToken(RPAREN620); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return catchVariable;
    }
    // $ANTLR end "catchVariable"



    // $ANTLR start "finallyBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4055:1: finallyBlock returns [FinallyClause clause] : FINALLY_CLAUSE controlBlock ;
    public FinallyClause finallyBlock() throws RecognitionException {
        FinallyClause clause = null;


        Token FINALLY_CLAUSE621=null;
        Block controlBlock622 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4056:5: ( FINALLY_CLAUSE controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4056:7: FINALLY_CLAUSE controlBlock
            {
            FINALLY_CLAUSE621=(Token)match(input,FINALLY_CLAUSE,FOLLOW_FINALLY_CLAUSE_in_finallyBlock26915); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new FinallyClause(FINALLY_CLAUSE621); }

            pushFollow(FOLLOW_controlBlock_in_finallyBlock26932);
            controlBlock622=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock622); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "finallyBlock"



    // $ANTLR start "resources"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4062:1: resources returns [ResourceList resources] : LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN ;
    public ResourceList resources() throws RecognitionException {
        ResourceList resources = null;


        Token c=null;
        Token LPAREN623=null;
        Token RPAREN624=null;
        Resource r1 =null;

        Resource r2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4063:5: ( LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4063:7: LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN
            {
            LPAREN623=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_resources26961); if (state.failed) return resources;

            if ( state.backtracking==0 ) { resources = new ResourceList(LPAREN623); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4065:6: (r1= resource (c= COMMA r2= resource )* )?
            int alt346=2;
            int LA346_0 = input.LA(1);

            if ( (LA346_0==BACKTICK||LA346_0==CHAR_LITERAL||LA346_0==COMPILER_ANNOTATION||(LA346_0 >= DECREMENT_OP && LA346_0 <= DIFFERENCE_OP)||LA346_0==DYNAMIC||LA346_0==FLOAT_LITERAL||LA346_0==FUNCTION_MODIFIER||LA346_0==INCREMENT_OP||(LA346_0 >= LBRACE && LA346_0 <= LBRACKET)||LA346_0==LIDENTIFIER||LA346_0==LPAREN||LA346_0==NATURAL_LITERAL||(LA346_0 >= NOT_OP && LA346_0 <= OBJECT_DEFINITION)||(LA346_0 >= OUTER && LA346_0 <= PACKAGE)||LA346_0==SMALLER_OP||LA346_0==STRING_LITERAL||LA346_0==STRING_START||(LA346_0 >= SUM_OP && LA346_0 <= SUPER)||LA346_0==THIS||LA346_0==UIDENTIFIER||(LA346_0 >= VALUE_MODIFIER && LA346_0 <= VOID_MODIFIER)) ) {
                alt346=1;
            }
            switch (alt346) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4066:8: r1= resource (c= COMMA r2= resource )*
                    {
                    pushFollow(FOLLOW_resource_in_resources26987);
                    r1=resource();

                    state._fsp--;
                    if (state.failed) return resources;

                    if ( state.backtracking==0 ) { resources.addResource(r1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4068:8: (c= COMMA r2= resource )*
                    loop345:
                    do {
                        int alt345=2;
                        int LA345_0 = input.LA(1);

                        if ( (LA345_0==COMMA) ) {
                            alt345=1;
                        }


                        switch (alt345) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4069:10: c= COMMA r2= resource
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_resources27018); if (state.failed) return resources;

                    	    if ( state.backtracking==0 ) { resources.setEndToken(c); }

                    	    pushFollow(FOLLOW_resource_in_resources27043);
                    	    r2=resource();

                    	    state._fsp--;
                    	    if (state.failed) return resources;

                    	    if ( state.backtracking==0 ) { resources.addResource(r2);
                    	    	          resources.setEndToken(null); }

                    	    }
                    	    break;

                    	default :
                    	    break loop345;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN624=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_resources27079); if (state.failed) return resources;

            if ( state.backtracking==0 ) { resources.setEndToken(RPAREN624); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return resources;
    }
    // $ANTLR end "resources"



    // $ANTLR start "resource"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4080:1: resource returns [Resource resource] : ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression );
    public Resource resource() throws RecognitionException {
        Resource resource = null;


        Variable specifiedVariable625 =null;

        Expression expression626 =null;


         resource = new Resource(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4082:5: ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression )
            int alt347=2;
            int LA347_0 = input.LA(1);

            if ( (LA347_0==COMPILER_ANNOTATION) && (synpred52_Ceylon())) {
                alt347=1;
            }
            else if ( (LA347_0==SMALLER_OP) && (synpred52_Ceylon())) {
                alt347=1;
            }
            else if ( (LA347_0==UIDENTIFIER) ) {
                int LA347_3 = input.LA(2);

                if ( (synpred52_Ceylon()) ) {
                    alt347=1;
                }
                else if ( (true) ) {
                    alt347=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 347, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA347_0==PACKAGE) ) {
                int LA347_4 = input.LA(2);

                if ( (synpred52_Ceylon()) ) {
                    alt347=1;
                }
                else if ( (true) ) {
                    alt347=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 347, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA347_0==LBRACKET) ) {
                int LA347_5 = input.LA(2);

                if ( (synpred52_Ceylon()) ) {
                    alt347=1;
                }
                else if ( (true) ) {
                    alt347=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 347, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA347_0==LBRACE) ) {
                int LA347_6 = input.LA(2);

                if ( (synpred52_Ceylon()) ) {
                    alt347=1;
                }
                else if ( (true) ) {
                    alt347=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 347, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA347_0==VOID_MODIFIER) && (synpred52_Ceylon())) {
                alt347=1;
            }
            else if ( (LA347_0==FUNCTION_MODIFIER) && (synpred52_Ceylon())) {
                alt347=1;
            }
            else if ( (LA347_0==VALUE_MODIFIER) && (synpred52_Ceylon())) {
                alt347=1;
            }
            else if ( (LA347_0==LIDENTIFIER) ) {
                int LA347_10 = input.LA(2);

                if ( (synpred52_Ceylon()) ) {
                    alt347=1;
                }
                else if ( (true) ) {
                    alt347=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 347, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA347_0==BACKTICK||LA347_0==CHAR_LITERAL||(LA347_0 >= DECREMENT_OP && LA347_0 <= DIFFERENCE_OP)||LA347_0==DYNAMIC||LA347_0==FLOAT_LITERAL||LA347_0==INCREMENT_OP||LA347_0==LPAREN||LA347_0==NATURAL_LITERAL||(LA347_0 >= NOT_OP && LA347_0 <= OBJECT_DEFINITION)||LA347_0==OUTER||LA347_0==STRING_LITERAL||LA347_0==STRING_START||(LA347_0 >= SUM_OP && LA347_0 <= SUPER)||LA347_0==THIS||LA347_0==VERBATIM_STRING) ) {
                alt347=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return resource;}
                NoViableAltException nvae =
                    new NoViableAltException("", 347, 0, input);

                throw nvae;

            }
            switch (alt347) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4083:7: ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable
                    {
                    pushFollow(FOLLOW_specifiedVariable_in_resource27140);
                    specifiedVariable625=specifiedVariable();

                    state._fsp--;
                    if (state.failed) return resource;

                    if ( state.backtracking==0 ) { resource.setVariable(specifiedVariable625); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4087:7: expression
                    {
                    pushFollow(FOLLOW_expression_in_resource27163);
                    expression626=expression();

                    state._fsp--;
                    if (state.failed) return resource;

                    if ( state.backtracking==0 ) { resource.setExpression(expression626); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return resource;
    }
    // $ANTLR end "resource"



    // $ANTLR start "specifiedVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4091:1: specifiedVariable returns [Variable variable] : v= variable ( specifier )? ;
    public Variable specifiedVariable() throws RecognitionException {
        Variable variable = null;


        Variable v =null;

        SpecifierExpression specifier627 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4092:5: (v= variable ( specifier )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4092:7: v= variable ( specifier )?
            {
            pushFollow(FOLLOW_variable_in_specifiedVariable27194);
            v=variable();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable = v; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4094:7: ( specifier )?
            int alt348=2;
            int LA348_0 = input.LA(1);

            if ( (LA348_0==SPECIFY) ) {
                alt348=1;
            }
            switch (alt348) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4095:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_specifiedVariable27221);
                    specifier627=specifier();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setSpecifierExpression(specifier627); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "specifiedVariable"



    // $ANTLR start "variable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4100:1: variable returns [Variable variable] : compilerAnnotations var ;
    public Variable variable() throws RecognitionException {
        Variable variable = null;


        Variable var628 =null;

        List<CompilerAnnotation> compilerAnnotations629 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4101:5: ( compilerAnnotations var )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4101:7: compilerAnnotations var
            {
            pushFollow(FOLLOW_compilerAnnotations_in_variable27261);
            compilerAnnotations629=compilerAnnotations();

            state._fsp--;
            if (state.failed) return variable;

            pushFollow(FOLLOW_var_in_variable27269);
            var628=var();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable =var628;
                    variable.getCompilerAnnotations().addAll(compilerAnnotations629); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "variable"



    // $ANTLR start "var"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4107:1: var returns [Variable variable] : ( ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )* |mn2= memberName (p2= parameters )* );
    public Variable var() throws RecognitionException {
        Variable variable = null;


        Token VOID_MODIFIER631=null;
        Token FUNCTION_MODIFIER632=null;
        Token VALUE_MODIFIER633=null;
        Identifier mn1 =null;

        ParameterList p1 =null;

        Identifier mn2 =null;

        ParameterList p2 =null;

        StaticType type630 =null;


         variable = new Variable(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4109:5: ( ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )* |mn2= memberName (p2= parameters )* )
            int alt352=2;
            int LA352_0 = input.LA(1);

            if ( (LA352_0==FUNCTION_MODIFIER||(LA352_0 >= LBRACE && LA352_0 <= LBRACKET)||LA352_0==PACKAGE||LA352_0==SMALLER_OP||LA352_0==UIDENTIFIER||LA352_0==VALUE_MODIFIER||LA352_0==VOID_MODIFIER) ) {
                alt352=1;
            }
            else if ( (LA352_0==LIDENTIFIER) ) {
                alt352=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return variable;}
                NoViableAltException nvae =
                    new NoViableAltException("", 352, 0, input);

                throw nvae;

            }
            switch (alt352) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4110:7: ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )*
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4110:7: ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER )
                    int alt349=4;
                    switch ( input.LA(1) ) {
                    case LBRACE:
                    case LBRACKET:
                    case PACKAGE:
                    case SMALLER_OP:
                    case UIDENTIFIER:
                        {
                        alt349=1;
                        }
                        break;
                    case VOID_MODIFIER:
                        {
                        alt349=2;
                        }
                        break;
                    case FUNCTION_MODIFIER:
                        {
                        alt349=3;
                        }
                        break;
                    case VALUE_MODIFIER:
                        {
                        alt349=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return variable;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 349, 0, input);

                        throw nvae;

                    }

                    switch (alt349) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4111:9: type
                            {
                            pushFollow(FOLLOW_type_in_var27329);
                            type630=type();

                            state._fsp--;
                            if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(type630); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4114:9: VOID_MODIFIER
                            {
                            VOID_MODIFIER631=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_var27359); if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(new VoidModifier(VOID_MODIFIER631)); }

                            }
                            break;
                        case 3 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4117:9: FUNCTION_MODIFIER
                            {
                            FUNCTION_MODIFIER632=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_var27388); if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(new FunctionModifier(FUNCTION_MODIFIER632)); }

                            }
                            break;
                        case 4 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4120:9: VALUE_MODIFIER
                            {
                            VALUE_MODIFIER633=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_var27417); if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(new ValueModifier(VALUE_MODIFIER633)); }

                            }
                            break;

                    }


                    pushFollow(FOLLOW_memberName_in_var27445);
                    mn1=memberName();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setIdentifier(mn1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4125:7: (p1= parameters )*
                    loop350:
                    do {
                        int alt350=2;
                        int LA350_0 = input.LA(1);

                        if ( (LA350_0==LPAREN) ) {
                            alt350=1;
                        }


                        switch (alt350) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4126:9: p1= parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_var27475);
                    	    p1=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return variable;

                    	    if ( state.backtracking==0 ) { variable.addParameterList(p1); }

                    	    }
                    	    break;

                    	default :
                    	    break loop350;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4130:7: mn2= memberName (p2= parameters )*
                    {
                    if ( state.backtracking==0 ) { variable.setType( new ValueModifier(null) ); }

                    pushFollow(FOLLOW_memberName_in_var27519);
                    mn2=memberName();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setIdentifier(mn2); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4133:7: (p2= parameters )*
                    loop351:
                    do {
                        int alt351=2;
                        int LA351_0 = input.LA(1);

                        if ( (LA351_0==LPAREN) ) {
                            alt351=1;
                        }


                        switch (alt351) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4134:9: p2= parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_var27547);
                    	    p2=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return variable;

                    	    if ( state.backtracking==0 ) { variable.setType( new FunctionModifier(null) );
                    	              variable.addParameterList(p2); }

                    	    }
                    	    break;

                    	default :
                    	    break loop351;
                        }
                    } while (true);


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "var"



    // $ANTLR start "impliedVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4140:1: impliedVariable returns [Variable variable] : memberName ;
    public Variable impliedVariable() throws RecognitionException {
        Variable variable = null;


        Identifier memberName634 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4141:5: ( memberName )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4141:7: memberName
            {
            pushFollow(FOLLOW_memberName_in_impliedVariable27587);
            memberName634=memberName();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { Variable v = new Variable(null);
                    v.setType(new SyntheticVariable(null));
                    v.setIdentifier(memberName634);
                    SpecifierExpression se = new SpecifierExpression(null);
                    Expression e = new Expression(null);
                    BaseMemberExpression bme = new BaseMemberExpression(null);
                    bme.setIdentifier(memberName634);
                    bme.setTypeArguments( new InferredTypeArguments(null) );
                    e.setTerm(bme);
                    se.setExpression(e);
                    v.setSpecifierExpression(se); 
                    variable = v; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "impliedVariable"



    // $ANTLR start "referencePathElement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4156:1: referencePathElement returns [Identifier identifier] : ( typeName | memberName );
    public Identifier referencePathElement() throws RecognitionException {
        Identifier identifier = null;


        Identifier typeName635 =null;

        Identifier memberName636 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4157:5: ( typeName | memberName )
            int alt353=2;
            int LA353_0 = input.LA(1);

            if ( (LA353_0==UIDENTIFIER) ) {
                alt353=1;
            }
            else if ( (LA353_0==LIDENTIFIER) ) {
                alt353=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 353, 0, input);

                throw nvae;

            }
            switch (alt353) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4157:7: typeName
                    {
                    pushFollow(FOLLOW_typeName_in_referencePathElement27617);
                    typeName635=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =typeName635; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4159:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_referencePathElement27634);
                    memberName636=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =memberName636; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "referencePathElement"



    // $ANTLR start "referencePath"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4163:1: referencePath returns [SimpleType type] : (e1= referencePathElement | PACKAGE o1= MEMBER_OP e2= referencePathElement ) (o2= MEMBER_OP e3= referencePathElement )* ;
    public SimpleType referencePath() throws RecognitionException {
        SimpleType type = null;


        Token o1=null;
        Token o2=null;
        Token PACKAGE637=null;
        Identifier e1 =null;

        Identifier e2 =null;

        Identifier e3 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4164:5: ( (e1= referencePathElement | PACKAGE o1= MEMBER_OP e2= referencePathElement ) (o2= MEMBER_OP e3= referencePathElement )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4164:7: (e1= referencePathElement | PACKAGE o1= MEMBER_OP e2= referencePathElement ) (o2= MEMBER_OP e3= referencePathElement )*
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4164:7: (e1= referencePathElement | PACKAGE o1= MEMBER_OP e2= referencePathElement )
            int alt354=2;
            int LA354_0 = input.LA(1);

            if ( (LA354_0==LIDENTIFIER||LA354_0==UIDENTIFIER) ) {
                alt354=1;
            }
            else if ( (LA354_0==PACKAGE) ) {
                alt354=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 354, 0, input);

                throw nvae;

            }
            switch (alt354) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4165:9: e1= referencePathElement
                    {
                    pushFollow(FOLLOW_referencePathElement_in_referencePath27679);
                    e1=referencePathElement();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { BaseType bt = new BaseType(null);
                              bt.setIdentifier(e1);
                              type = bt; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4170:9: PACKAGE o1= MEMBER_OP e2= referencePathElement
                    {
                    PACKAGE637=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_referencePath27709); if (state.failed) return type;

                    if ( state.backtracking==0 ) { BaseType pbt = new BaseType(PACKAGE637);
                    	        pbt.setPackageQualified(true);
                    	        type = pbt; }

                    o1=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_referencePath27729); if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.setEndToken(o1); }

                    pushFollow(FOLLOW_referencePathElement_in_referencePath27749);
                    e2=referencePathElement();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.setEndToken(null);
                    	        type.setIdentifier(e2); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4180:7: (o2= MEMBER_OP e3= referencePathElement )*
            loop355:
            do {
                int alt355=2;
                int LA355_0 = input.LA(1);

                if ( (LA355_0==MEMBER_OP) ) {
                    alt355=1;
                }


                switch (alt355) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4181:9: o2= MEMBER_OP e3= referencePathElement
            	    {
            	    o2=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_referencePath27786); if (state.failed) return type;

            	    pushFollow(FOLLOW_referencePathElement_in_referencePath27798);
            	    e3=referencePathElement();

            	    state._fsp--;
            	    if (state.failed) return type;

            	    if ( state.backtracking==0 ) { QualifiedType qt = new QualifiedType(o2);
            	              qt.setIdentifier(e3);
            	              qt.setOuterType(type);
            	              type = qt; }

            	    }
            	    break;

            	default :
            	    break loop355;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "referencePath"



    // $ANTLR start "moduleLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4190:1: moduleLiteral returns [ModuleLiteral literal] : MODULE (p1= packagePath )? ;
    public ModuleLiteral moduleLiteral() throws RecognitionException {
        ModuleLiteral literal = null;


        Token MODULE638=null;
        ImportPath p1 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4191:2: ( MODULE (p1= packagePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4191:4: MODULE (p1= packagePath )?
            {
            MODULE638=(Token)match(input,MODULE,FOLLOW_MODULE_in_moduleLiteral27836); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new ModuleLiteral(null);
                 literal.setEndToken(MODULE638); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4194:4: (p1= packagePath )?
            int alt356=2;
            int LA356_0 = input.LA(1);

            if ( (LA356_0==LIDENTIFIER||LA356_0==UIDENTIFIER) ) {
                alt356=1;
            }
            switch (alt356) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4195:6: p1= packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_moduleLiteral27855);
                    p1=packagePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setImportPath(p1); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "moduleLiteral"



    // $ANTLR start "packageLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4201:1: packageLiteral returns [PackageLiteral literal] : PACKAGE (p2= packagePath )? ;
    public PackageLiteral packageLiteral() throws RecognitionException {
        PackageLiteral literal = null;


        Token PACKAGE639=null;
        ImportPath p2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4202:2: ( PACKAGE (p2= packagePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4202:4: PACKAGE (p2= packagePath )?
            {
            PACKAGE639=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_packageLiteral27883); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new PackageLiteral(null);
                 literal.setEndToken(PACKAGE639); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4205:4: (p2= packagePath )?
            int alt357=2;
            int LA357_0 = input.LA(1);

            if ( (LA357_0==LIDENTIFIER||LA357_0==UIDENTIFIER) ) {
                alt357=1;
            }
            switch (alt357) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4206:6: p2= packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_packageLiteral27902);
                    p2=packagePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setImportPath(p2); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "packageLiteral"



    // $ANTLR start "classLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4212:1: classLiteral returns [ClassLiteral literal] : CLASS_DEFINITION (ct= referencePath )? ;
    public ClassLiteral classLiteral() throws RecognitionException {
        ClassLiteral literal = null;


        Token CLASS_DEFINITION640=null;
        SimpleType ct =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4213:2: ( CLASS_DEFINITION (ct= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4213:4: CLASS_DEFINITION (ct= referencePath )?
            {
            CLASS_DEFINITION640=(Token)match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_classLiteral27930); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new ClassLiteral(null);
                 literal.setEndToken(CLASS_DEFINITION640); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4216:4: (ct= referencePath )?
            int alt358=2;
            int LA358_0 = input.LA(1);

            if ( (LA358_0==LIDENTIFIER||LA358_0==PACKAGE||LA358_0==UIDENTIFIER) ) {
                alt358=1;
            }
            switch (alt358) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4217:6: ct= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_classLiteral27949);
                    ct=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(ct); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "classLiteral"



    // $ANTLR start "interfaceLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4223:1: interfaceLiteral returns [InterfaceLiteral literal] : INTERFACE_DEFINITION (it= referencePath )? ;
    public InterfaceLiteral interfaceLiteral() throws RecognitionException {
        InterfaceLiteral literal = null;


        Token INTERFACE_DEFINITION641=null;
        SimpleType it =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4224:2: ( INTERFACE_DEFINITION (it= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4224:4: INTERFACE_DEFINITION (it= referencePath )?
            {
            INTERFACE_DEFINITION641=(Token)match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_interfaceLiteral27977); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new InterfaceLiteral(null);
                 literal.setEndToken(INTERFACE_DEFINITION641); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4227:4: (it= referencePath )?
            int alt359=2;
            int LA359_0 = input.LA(1);

            if ( (LA359_0==LIDENTIFIER||LA359_0==PACKAGE||LA359_0==UIDENTIFIER) ) {
                alt359=1;
            }
            switch (alt359) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4228:6: it= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_interfaceLiteral27996);
                    it=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(it); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "interfaceLiteral"



    // $ANTLR start "newLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4234:1: newLiteral returns [NewLiteral literal] : NEW (nt= referencePath )? ;
    public NewLiteral newLiteral() throws RecognitionException {
        NewLiteral literal = null;


        Token NEW642=null;
        SimpleType nt =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4235:2: ( NEW (nt= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4235:4: NEW (nt= referencePath )?
            {
            NEW642=(Token)match(input,NEW,FOLLOW_NEW_in_newLiteral28024); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new NewLiteral(null);
                 literal.setEndToken(NEW642); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4238:4: (nt= referencePath )?
            int alt360=2;
            int LA360_0 = input.LA(1);

            if ( (LA360_0==LIDENTIFIER||LA360_0==PACKAGE||LA360_0==UIDENTIFIER) ) {
                alt360=1;
            }
            switch (alt360) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4239:6: nt= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_newLiteral28043);
                    nt=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(nt); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "newLiteral"



    // $ANTLR start "aliasLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4245:1: aliasLiteral returns [AliasLiteral literal] : ALIAS (at= referencePath )? ;
    public AliasLiteral aliasLiteral() throws RecognitionException {
        AliasLiteral literal = null;


        Token ALIAS643=null;
        SimpleType at =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4246:2: ( ALIAS (at= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4246:4: ALIAS (at= referencePath )?
            {
            ALIAS643=(Token)match(input,ALIAS,FOLLOW_ALIAS_in_aliasLiteral28071); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new AliasLiteral(null);
                 literal.setEndToken(ALIAS643); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4249:4: (at= referencePath )?
            int alt361=2;
            int LA361_0 = input.LA(1);

            if ( (LA361_0==LIDENTIFIER||LA361_0==PACKAGE||LA361_0==UIDENTIFIER) ) {
                alt361=1;
            }
            switch (alt361) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4250:6: at= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_aliasLiteral28090);
                    at=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(at); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "aliasLiteral"



    // $ANTLR start "typeParameterLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4256:1: typeParameterLiteral returns [TypeParameterLiteral literal] : TYPE_CONSTRAINT (tt= referencePath )? ;
    public TypeParameterLiteral typeParameterLiteral() throws RecognitionException {
        TypeParameterLiteral literal = null;


        Token TYPE_CONSTRAINT644=null;
        SimpleType tt =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4257:2: ( TYPE_CONSTRAINT (tt= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4257:4: TYPE_CONSTRAINT (tt= referencePath )?
            {
            TYPE_CONSTRAINT644=(Token)match(input,TYPE_CONSTRAINT,FOLLOW_TYPE_CONSTRAINT_in_typeParameterLiteral28118); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new TypeParameterLiteral(null);
                 literal.setEndToken(TYPE_CONSTRAINT644); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4260:4: (tt= referencePath )?
            int alt362=2;
            int LA362_0 = input.LA(1);

            if ( (LA362_0==LIDENTIFIER||LA362_0==PACKAGE||LA362_0==UIDENTIFIER) ) {
                alt362=1;
            }
            switch (alt362) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4261:6: tt= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_typeParameterLiteral28137);
                    tt=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(tt); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "typeParameterLiteral"



    // $ANTLR start "valueLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4267:1: valueLiteral returns [ValueLiteral literal] : ( VALUE_MODIFIER | OBJECT_DEFINITION ) vt= referencePath ;
    public ValueLiteral valueLiteral() throws RecognitionException {
        ValueLiteral literal = null;


        Token VALUE_MODIFIER645=null;
        Token OBJECT_DEFINITION646=null;
        SimpleType vt =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4268:3: ( ( VALUE_MODIFIER | OBJECT_DEFINITION ) vt= referencePath )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4268:5: ( VALUE_MODIFIER | OBJECT_DEFINITION ) vt= referencePath
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4268:5: ( VALUE_MODIFIER | OBJECT_DEFINITION )
            int alt363=2;
            int LA363_0 = input.LA(1);

            if ( (LA363_0==VALUE_MODIFIER) ) {
                alt363=1;
            }
            else if ( (LA363_0==OBJECT_DEFINITION) ) {
                alt363=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return literal;}
                NoViableAltException nvae =
                    new NoViableAltException("", 363, 0, input);

                throw nvae;

            }
            switch (alt363) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4269:7: VALUE_MODIFIER
                    {
                    VALUE_MODIFIER645=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_valueLiteral28174); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new ValueLiteral(null);
                            literal.setEndToken(VALUE_MODIFIER645); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4273:7: OBJECT_DEFINITION
                    {
                    OBJECT_DEFINITION646=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_valueLiteral28196); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new ValueLiteral(null);
                            literal.setEndToken(OBJECT_DEFINITION646);
                            literal.setBroken(true); }

                    }
                    break;

            }


            pushFollow(FOLLOW_referencePath_in_valueLiteral28218);
            vt=referencePath();

            state._fsp--;
            if (state.failed) return literal;

            if ( state.backtracking==0 ) {
                  if (vt instanceof QualifiedType) {
                    literal.setType(((QualifiedType)vt).getOuterType());
                    literal.setIdentifier(vt.getIdentifier());
                    literal.setTypeArgumentList(vt.getTypeArgumentList());
                    literal.setEndToken(null);
                  }
                  else if (vt instanceof BaseType) {
                    literal.setIdentifier(vt.getIdentifier());
                    literal.setTypeArgumentList(vt.getTypeArgumentList());
                    literal.setEndToken(null);
                  }
                }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "valueLiteral"



    // $ANTLR start "functionLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4294:1: functionLiteral returns [FunctionLiteral literal] : FUNCTION_MODIFIER ft= referencePath ;
    public FunctionLiteral functionLiteral() throws RecognitionException {
        FunctionLiteral literal = null;


        Token FUNCTION_MODIFIER647=null;
        SimpleType ft =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4295:3: ( FUNCTION_MODIFIER ft= referencePath )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4295:5: FUNCTION_MODIFIER ft= referencePath
            {
            FUNCTION_MODIFIER647=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_functionLiteral28241); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new FunctionLiteral(null);
                  literal.setEndToken(FUNCTION_MODIFIER647); }

            pushFollow(FOLLOW_referencePath_in_functionLiteral28255);
            ft=referencePath();

            state._fsp--;
            if (state.failed) return literal;

            if ( state.backtracking==0 ) {
                  if (ft instanceof QualifiedType) {
                    literal.setType(((QualifiedType)ft).getOuterType());
                    literal.setIdentifier(ft.getIdentifier());
                    literal.setTypeArgumentList(ft.getTypeArgumentList());
                    literal.setEndToken(null);
                  }
                  else if (ft instanceof BaseType) {
                    literal.setIdentifier(ft.getIdentifier());
                    literal.setTypeArgumentList(ft.getTypeArgumentList());
                    literal.setEndToken(null);
                  }
                }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "functionLiteral"


    public static class memberPathElement_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "memberPathElement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4314:1: memberPathElement returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : memberName ( typeArguments )? ;
    public PsiCompatibleCeylonParser.memberPathElement_return memberPathElement() throws RecognitionException {
        PsiCompatibleCeylonParser.memberPathElement_return retval = new PsiCompatibleCeylonParser.memberPathElement_return();
        retval.start = input.LT(1);


        Identifier memberName648 =null;

        TypeArgumentList typeArguments649 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4316:5: ( memberName ( typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4316:7: memberName ( typeArguments )?
            {
            pushFollow(FOLLOW_memberName_in_memberPathElement28280);
            memberName648=memberName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier =memberName648; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4318:7: ( typeArguments )?
            int alt364=2;
            int LA364_0 = input.LA(1);

            if ( (LA364_0==SMALLER_OP) ) {
                alt364=1;
            }
            switch (alt364) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4319:9: typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_memberPathElement28306);
                    typeArguments649=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList =typeArguments649; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "memberPathElement"



    // $ANTLR start "memberModelExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4325:1: memberModelExpression returns [MemberLiteral literal] : (e1= memberPathElement | PACKAGE o2= MEMBER_OP e2= memberPathElement |at= primaryType o3= MEMBER_OP e3= memberPathElement );
    public MemberLiteral memberModelExpression() throws RecognitionException {
        MemberLiteral literal = null;


        Token o2=null;
        Token o3=null;
        Token PACKAGE650=null;
        PsiCompatibleCeylonParser.memberPathElement_return e1 =null;

        PsiCompatibleCeylonParser.memberPathElement_return e2 =null;

        StaticType at =null;

        PsiCompatibleCeylonParser.memberPathElement_return e3 =null;


         literal = new MemberLiteral(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4327:5: (e1= memberPathElement | PACKAGE o2= MEMBER_OP e2= memberPathElement |at= primaryType o3= MEMBER_OP e3= memberPathElement )
            int alt365=3;
            switch ( input.LA(1) ) {
            case LIDENTIFIER:
                {
                alt365=1;
                }
                break;
            case PACKAGE:
                {
                int LA365_2 = input.LA(2);

                if ( (LA365_2==MEMBER_OP) ) {
                    int LA365_4 = input.LA(3);

                    if ( (LA365_4==LIDENTIFIER) ) {
                        alt365=2;
                    }
                    else if ( (LA365_4==UIDENTIFIER) ) {
                        alt365=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return literal;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 365, 4, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return literal;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 365, 2, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
            case LBRACKET:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt365=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return literal;}
                NoViableAltException nvae =
                    new NoViableAltException("", 365, 0, input);

                throw nvae;

            }

            switch (alt365) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4328:7: e1= memberPathElement
                    {
                    pushFollow(FOLLOW_memberPathElement_in_memberModelExpression28369);
                    e1=memberPathElement();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setIdentifier((e1!=null?e1.identifier:null));
                            literal.setTypeArgumentList((e1!=null?e1.typeArgumentList:null)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4332:7: PACKAGE o2= MEMBER_OP e2= memberPathElement
                    {
                    PACKAGE650=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_memberModelExpression28392); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setToken(PACKAGE650);
                            literal.setPackageQualified(true);  }

                    o2=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_memberModelExpression28410); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setEndToken(o2); }

                    pushFollow(FOLLOW_memberPathElement_in_memberModelExpression28428);
                    e2=memberPathElement();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setEndToken(null);
                            literal.setIdentifier((e2!=null?e2.identifier:null)); 
                            literal.setTypeArgumentList((e2!=null?e2.typeArgumentList:null)); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4342:7: at= primaryType o3= MEMBER_OP e3= memberPathElement
                    {
                    pushFollow(FOLLOW_primaryType_in_memberModelExpression28453);
                    at=primaryType();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(at); }

                    o3=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_memberModelExpression28471); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setEndToken(o3); }

                    pushFollow(FOLLOW_memberPathElement_in_memberModelExpression28489);
                    e3=memberPathElement();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setEndToken(null);
                            literal.setIdentifier((e3!=null?e3.identifier:null));
                            literal.setTypeArgumentList((e3!=null?e3.typeArgumentList:null)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "memberModelExpression"



    // $ANTLR start "typeModelExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4352:1: typeModelExpression returns [TypeLiteral literal] : type ;
    public TypeLiteral typeModelExpression() throws RecognitionException {
        TypeLiteral literal = null;


        StaticType type651 =null;


         literal = new TypeLiteral(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4354:5: ( type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4354:7: type
            {
            pushFollow(FOLLOW_type_in_typeModelExpression28528);
            type651=type();

            state._fsp--;
            if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal.setType(type651); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "typeModelExpression"



    // $ANTLR start "modelExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4358:1: modelExpression returns [MetaLiteral meta] : ( ( ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER )=> memberModelExpression | typeModelExpression );
    public MetaLiteral modelExpression() throws RecognitionException {
        MetaLiteral meta = null;


        MemberLiteral memberModelExpression652 =null;

        TypeLiteral typeModelExpression653 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4359:3: ( ( ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER )=> memberModelExpression | typeModelExpression )
            int alt366=2;
            int LA366_0 = input.LA(1);

            if ( (LA366_0==LIDENTIFIER) && (synpred53_Ceylon())) {
                alt366=1;
            }
            else if ( (LA366_0==PACKAGE) ) {
                int LA366_2 = input.LA(2);

                if ( (synpred53_Ceylon()) ) {
                    alt366=1;
                }
                else if ( (true) ) {
                    alt366=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 366, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA366_0==UIDENTIFIER) ) {
                int LA366_3 = input.LA(2);

                if ( (synpred53_Ceylon()) ) {
                    alt366=1;
                }
                else if ( (true) ) {
                    alt366=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 366, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA366_0==SMALLER_OP) ) {
                int LA366_4 = input.LA(2);

                if ( (synpred53_Ceylon()) ) {
                    alt366=1;
                }
                else if ( (true) ) {
                    alt366=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 366, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA366_0==LBRACKET) ) {
                int LA366_5 = input.LA(2);

                if ( (synpred53_Ceylon()) ) {
                    alt366=1;
                }
                else if ( (true) ) {
                    alt366=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 366, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA366_0==LBRACE) ) {
                int LA366_6 = input.LA(2);

                if ( (synpred53_Ceylon()) ) {
                    alt366=1;
                }
                else if ( (true) ) {
                    alt366=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 366, 6, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return meta;}
                NoViableAltException nvae =
                    new NoViableAltException("", 366, 0, input);

                throw nvae;

            }
            switch (alt366) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4360:5: ( ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER )=> memberModelExpression
                    {
                    pushFollow(FOLLOW_memberModelExpression_in_modelExpression28580);
                    memberModelExpression652=memberModelExpression();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =memberModelExpression652; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4364:5: typeModelExpression
                    {
                    pushFollow(FOLLOW_typeModelExpression_in_modelExpression28597);
                    typeModelExpression653=typeModelExpression();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta = typeModelExpression653; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return meta;
    }
    // $ANTLR end "modelExpression"



    // $ANTLR start "metaLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4368:1: metaLiteral returns [MetaLiteral meta] : d1= BACKTICK ( moduleLiteral | ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral | classLiteral | newLiteral | interfaceLiteral | aliasLiteral | typeParameterLiteral | valueLiteral | functionLiteral | modelExpression ) d2= BACKTICK ;
    public MetaLiteral metaLiteral() throws RecognitionException {
        MetaLiteral meta = null;


        Token d1=null;
        Token d2=null;
        ModuleLiteral moduleLiteral654 =null;

        PackageLiteral packageLiteral655 =null;

        ClassLiteral classLiteral656 =null;

        NewLiteral newLiteral657 =null;

        InterfaceLiteral interfaceLiteral658 =null;

        AliasLiteral aliasLiteral659 =null;

        TypeParameterLiteral typeParameterLiteral660 =null;

        ValueLiteral valueLiteral661 =null;

        FunctionLiteral functionLiteral662 =null;

        MetaLiteral modelExpression663 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4369:5: (d1= BACKTICK ( moduleLiteral | ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral | classLiteral | newLiteral | interfaceLiteral | aliasLiteral | typeParameterLiteral | valueLiteral | functionLiteral | modelExpression ) d2= BACKTICK )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4369:7: d1= BACKTICK ( moduleLiteral | ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral | classLiteral | newLiteral | interfaceLiteral | aliasLiteral | typeParameterLiteral | valueLiteral | functionLiteral | modelExpression ) d2= BACKTICK
            {
            d1=(Token)match(input,BACKTICK,FOLLOW_BACKTICK_in_metaLiteral28624); if (state.failed) return meta;

            if ( state.backtracking==0 ) { meta = new TypeLiteral(d1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4371:6: ( moduleLiteral | ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral | classLiteral | newLiteral | interfaceLiteral | aliasLiteral | typeParameterLiteral | valueLiteral | functionLiteral | modelExpression )
            int alt367=10;
            switch ( input.LA(1) ) {
            case MODULE:
                {
                alt367=1;
                }
                break;
            case PACKAGE:
                {
                int LA367_2 = input.LA(2);

                if ( (LA367_2==LIDENTIFIER) && (synpred54_Ceylon())) {
                    alt367=2;
                }
                else if ( (LA367_2==UIDENTIFIER) && (synpred54_Ceylon())) {
                    alt367=2;
                }
                else if ( (LA367_2==BACKTICK) && (synpred54_Ceylon())) {
                    alt367=2;
                }
                else if ( (LA367_2==MEMBER_OP) ) {
                    alt367=10;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 367, 2, input);

                    throw nvae;

                }
                }
                break;
            case CLASS_DEFINITION:
                {
                alt367=3;
                }
                break;
            case NEW:
                {
                alt367=4;
                }
                break;
            case INTERFACE_DEFINITION:
                {
                alt367=5;
                }
                break;
            case ALIAS:
                {
                alt367=6;
                }
                break;
            case TYPE_CONSTRAINT:
                {
                alt367=7;
                }
                break;
            case OBJECT_DEFINITION:
            case VALUE_MODIFIER:
                {
                alt367=8;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt367=9;
                }
                break;
            case LBRACE:
            case LBRACKET:
            case LIDENTIFIER:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt367=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return meta;}
                NoViableAltException nvae =
                    new NoViableAltException("", 367, 0, input);

                throw nvae;

            }

            switch (alt367) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4371:8: moduleLiteral
                    {
                    pushFollow(FOLLOW_moduleLiteral_in_metaLiteral28641);
                    moduleLiteral654=moduleLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =moduleLiteral654; 
                    	        meta.setToken(d1); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4374:8: ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral
                    {
                    pushFollow(FOLLOW_packageLiteral_in_metaLiteral28678);
                    packageLiteral655=packageLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =packageLiteral655; 
                    	        meta.setToken(d1); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4378:8: classLiteral
                    {
                    pushFollow(FOLLOW_classLiteral_in_metaLiteral28696);
                    classLiteral656=classLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =classLiteral656; 
                              meta.setToken(d1); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4381:8: newLiteral
                    {
                    pushFollow(FOLLOW_newLiteral_in_metaLiteral28714);
                    newLiteral657=newLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =newLiteral657; 
                              meta.setToken(d1); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4384:8: interfaceLiteral
                    {
                    pushFollow(FOLLOW_interfaceLiteral_in_metaLiteral28732);
                    interfaceLiteral658=interfaceLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =interfaceLiteral658; 
                              meta.setToken(d1); }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4387:8: aliasLiteral
                    {
                    pushFollow(FOLLOW_aliasLiteral_in_metaLiteral28750);
                    aliasLiteral659=aliasLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =aliasLiteral659; 
                              meta.setToken(d1); }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4390:8: typeParameterLiteral
                    {
                    pushFollow(FOLLOW_typeParameterLiteral_in_metaLiteral28768);
                    typeParameterLiteral660=typeParameterLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =typeParameterLiteral660; 
                              meta.setToken(d1); }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4393:8: valueLiteral
                    {
                    pushFollow(FOLLOW_valueLiteral_in_metaLiteral28786);
                    valueLiteral661=valueLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =valueLiteral661; 
                              meta.setToken(d1); }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4396:8: functionLiteral
                    {
                    pushFollow(FOLLOW_functionLiteral_in_metaLiteral28804);
                    functionLiteral662=functionLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =functionLiteral662; 
                              meta.setToken(d1); }

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4399:8: modelExpression
                    {
                    pushFollow(FOLLOW_modelExpression_in_metaLiteral28822);
                    modelExpression663=modelExpression();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =modelExpression663; 
                    	        meta.setToken(d1); }

                    }
                    break;

            }


            d2=(Token)match(input,BACKTICK,FOLLOW_BACKTICK_in_metaLiteral28853); if (state.failed) return meta;

            if ( state.backtracking==0 ) { meta.setEndToken(d2); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return meta;
    }
    // $ANTLR end "metaLiteral"

    // $ANTLR start synpred1_Ceylon
    public void synpred1_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:95:9: ( annotatedModuleDescriptorStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:95:10: annotatedModuleDescriptorStart
        {
        pushFollow(FOLLOW_annotatedModuleDescriptorStart_in_synpred1_Ceylon164);
        annotatedModuleDescriptorStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred1_Ceylon

    // $ANTLR start synpred2_Ceylon
    public void synpred2_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:99:9: ( annotatedPackageDescriptorStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:99:10: annotatedPackageDescriptorStart
        {
        pushFollow(FOLLOW_annotatedPackageDescriptorStart_in_synpred2_Ceylon207);
        annotatedPackageDescriptorStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred2_Ceylon

    // $ANTLR start synpred3_Ceylon
    public void synpred3_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:487:9: ( compilerAnnotations declarationStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:487:10: compilerAnnotations declarationStart
        {
        pushFollow(FOLLOW_compilerAnnotations_in_synpred3_Ceylon2862);
        compilerAnnotations();

        state._fsp--;
        if (state.failed) return ;

        pushFollow(FOLLOW_declarationStart_in_synpred3_Ceylon2864);
        declarationStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred3_Ceylon

    // $ANTLR start synpred4_Ceylon
    public void synpred4_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:496:7: ( tuplePatternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:496:8: tuplePatternStart
        {
        pushFollow(FOLLOW_tuplePatternStart_in_synpred4_Ceylon2937);
        tuplePatternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred4_Ceylon

    // $ANTLR start synpred5_Ceylon
    public void synpred5_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:505:7: ( variable ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:505:8: variable ENTRY_OP
        {
        pushFollow(FOLLOW_variable_in_synpred5_Ceylon3002);
        variable();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred5_Ceylon3004); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred5_Ceylon

    // $ANTLR start synpred6_Ceylon
    public void synpred6_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:509:7: ( tuplePattern ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:509:8: tuplePattern ENTRY_OP
        {
        pushFollow(FOLLOW_tuplePattern_in_synpred6_Ceylon3040);
        tuplePattern();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred6_Ceylon3042); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred6_Ceylon

    // $ANTLR start synpred7_Ceylon
    public void synpred7_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:513:7: ( tuplePatternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:513:8: tuplePatternStart
        {
        pushFollow(FOLLOW_tuplePatternStart_in_synpred7_Ceylon3078);
        tuplePatternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred7_Ceylon

    // $ANTLR start synpred8_Ceylon
    public void synpred8_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:523:7: ( variable ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:523:8: variable ENTRY_OP
        {
        pushFollow(FOLLOW_variable_in_synpred8_Ceylon3150);
        variable();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred8_Ceylon3152); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred8_Ceylon

    // $ANTLR start synpred9_Ceylon
    public void synpred9_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:527:7: ( tuplePattern ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:527:8: tuplePattern ENTRY_OP
        {
        pushFollow(FOLLOW_tuplePattern_in_synpred9_Ceylon3188);
        tuplePattern();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred9_Ceylon3190); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred9_Ceylon

    // $ANTLR start synpred10_Ceylon
    public void synpred10_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:563:9: ( compilerAnnotations ( unionType )? PRODUCT_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:563:10: compilerAnnotations ( unionType )? PRODUCT_OP
        {
        pushFollow(FOLLOW_compilerAnnotations_in_synpred10_Ceylon3479);
        compilerAnnotations();

        state._fsp--;
        if (state.failed) return ;

        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:563:30: ( unionType )?
        int alt368=2;
        int LA368_0 = input.LA(1);

        if ( ((LA368_0 >= LBRACE && LA368_0 <= LBRACKET)||LA368_0==PACKAGE||LA368_0==SMALLER_OP||LA368_0==UIDENTIFIER) ) {
            alt368=1;
        }
        switch (alt368) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:563:30: unionType
                {
                pushFollow(FOLLOW_unionType_in_synpred10_Ceylon3481);
                unionType();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_synpred10_Ceylon3484); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred10_Ceylon

    // $ANTLR start synpred11_Ceylon
    public void synpred11_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1406:9: ( destructureStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1406:10: destructureStart
        {
        pushFollow(FOLLOW_destructureStart_in_synpred11_Ceylon9329);
        destructureStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred11_Ceylon

    // $ANTLR start synpred12_Ceylon
    public void synpred12_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1408:9: ( annotatedDeclarationStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1408:10: annotatedDeclarationStart
        {
        pushFollow(FOLLOW_annotatedDeclarationStart_in_synpred12_Ceylon9355);
        annotatedDeclarationStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred12_Ceylon

    // $ANTLR start synpred13_Ceylon
    public void synpred13_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1410:9: ( annotatedAssertionStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1410:10: annotatedAssertionStart
        {
        pushFollow(FOLLOW_annotatedAssertionStart_in_synpred13_Ceylon9383);
        annotatedAssertionStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred13_Ceylon

    // $ANTLR start synpred14_Ceylon
    public void synpred14_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1412:9: ( annotationListStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1412:10: annotationListStart
        {
        pushFollow(FOLLOW_annotationListStart_in_synpred14_Ceylon9409);
        annotationListStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred14_Ceylon

    // $ANTLR start synpred15_Ceylon
    public void synpred15_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1429:7: ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )
        int alt369=2;
        int LA369_0 = input.LA(1);

        if ( (LA369_0==INTERFACE_DEFINITION) ) {
            alt369=1;
        }
        else if ( (LA369_0==DYNAMIC) ) {
            alt369=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 369, 0, input);

            throw nvae;

        }
        switch (alt369) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1429:8: INTERFACE_DEFINITION
                {
                match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_synpred15_Ceylon9534); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1429:29: DYNAMIC UIDENTIFIER
                {
                match(input,DYNAMIC,FOLLOW_DYNAMIC_in_synpred15_Ceylon9536); if (state.failed) return ;

                match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_synpred15_Ceylon9538); if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred15_Ceylon

    // $ANTLR start synpred16_Ceylon
    public void synpred16_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1456:8: ( unambiguousType )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1456:9: unambiguousType
        {
        pushFollow(FOLLOW_unambiguousType_in_synpred16_Ceylon9713);
        unambiguousType();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred16_Ceylon

    // $ANTLR start synpred17_Ceylon
    public void synpred17_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1699:7: ( LIDENTIFIER ( typeParameters )? specifierParametersStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1699:8: LIDENTIFIER ( typeParameters )? specifierParametersStart
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred17_Ceylon11387); if (state.failed) return ;

        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1699:20: ( typeParameters )?
        int alt370=2;
        int LA370_0 = input.LA(1);

        if ( (LA370_0==SMALLER_OP) ) {
            alt370=1;
        }
        switch (alt370) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1699:20: typeParameters
                {
                pushFollow(FOLLOW_typeParameters_in_synpred17_Ceylon11389);
                typeParameters();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        pushFollow(FOLLOW_specifierParametersStart_in_synpred17_Ceylon11392);
        specifierParametersStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred17_Ceylon

    // $ANTLR start synpred18_Ceylon
    public void synpred18_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1711:9: ( specifierParametersStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1711:10: specifierParametersStart
        {
        pushFollow(FOLLOW_specifierParametersStart_in_synpred18_Ceylon11468);
        specifierParametersStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred18_Ceylon

    // $ANTLR start synpred19_Ceylon
    public void synpred19_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1729:9: ( MEMBER_OP LIDENTIFIER ( typeParameters )? specifierParametersStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1729:10: MEMBER_OP LIDENTIFIER ( typeParameters )? specifierParametersStart
        {
        match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_synpred19_Ceylon11543); if (state.failed) return ;

        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred19_Ceylon11545); if (state.failed) return ;

        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1729:32: ( typeParameters )?
        int alt371=2;
        int LA371_0 = input.LA(1);

        if ( (LA371_0==SMALLER_OP) ) {
            alt371=1;
        }
        switch (alt371) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1729:32: typeParameters
                {
                pushFollow(FOLLOW_typeParameters_in_synpred19_Ceylon11547);
                typeParameters();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        pushFollow(FOLLOW_specifierParametersStart_in_synpred19_Ceylon11550);
        specifierParametersStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred19_Ceylon

    // $ANTLR start synpred20_Ceylon
    public void synpred20_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1744:11: ( specifierParametersStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1744:12: specifierParametersStart
        {
        pushFollow(FOLLOW_specifierParametersStart_in_synpred20_Ceylon11662);
        specifierParametersStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred20_Ceylon

    // $ANTLR start synpred21_Ceylon
    public void synpred21_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1825:9: (~ ( LIDENTIFIER | UIDENTIFIER ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:
        {
        if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= LET)||(input.LA(1) >= LINE_COMMENT && input.LA(1) <= TYPE_CONSTRAINT)||(input.LA(1) >= UIdentifierPrefix && input.LA(1) <= WS) ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred21_Ceylon

    // $ANTLR start synpred22_Ceylon
    public void synpred22_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1870:9: ( namedArgumentStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1870:10: namedArgumentStart
        {
        pushFollow(FOLLOW_namedArgumentStart_in_synpred22_Ceylon12363);
        namedArgumentStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred22_Ceylon

    // $ANTLR start synpred23_Ceylon
    public void synpred23_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1874:9: ( anonymousArgument )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1874:10: anonymousArgument
        {
        pushFollow(FOLLOW_anonymousArgument_in_synpred23_Ceylon12398);
        anonymousArgument();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred23_Ceylon

    // $ANTLR start synpred24_Ceylon
    public void synpred24_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1921:9: ( typeArgumentsStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1921:10: typeArgumentsStart
        {
        pushFollow(FOLLOW_typeArgumentsStart_in_synpred24_Ceylon12726);
        typeArgumentsStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred24_Ceylon

    // $ANTLR start synpred25_Ceylon
    public void synpred25_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1932:9: ( typeArgumentsStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1932:10: typeArgumentsStart
        {
        pushFollow(FOLLOW_typeArgumentsStart_in_synpred25_Ceylon12807);
        typeArgumentsStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred25_Ceylon

    // $ANTLR start synpred26_Ceylon
    public void synpred26_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1968:9: ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1968:10: index ( ELLIPSIS | RANGE_OP | SEGMENT_OP )
        {
        pushFollow(FOLLOW_index_in_synpred26_Ceylon13035);
        index();

        state._fsp--;
        if (state.failed) return ;

        if ( input.LA(1)==ELLIPSIS||input.LA(1)==RANGE_OP||input.LA(1)==SEGMENT_OP ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred26_Ceylon

    // $ANTLR start synpred27_Ceylon
    public void synpred27_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2017:9: ( namedArgumentStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2017:10: namedArgumentStart
        {
        pushFollow(FOLLOW_namedArgumentStart_in_synpred27_Ceylon13363);
        namedArgumentStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred27_Ceylon

    // $ANTLR start synpred28_Ceylon
    public void synpred28_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2021:9: ( anonymousArgument )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2021:10: anonymousArgument
        {
        pushFollow(FOLLOW_anonymousArgument_in_synpred28_Ceylon13398);
        anonymousArgument();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred28_Ceylon

    // $ANTLR start synpred29_Ceylon
    public void synpred29_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2039:11: ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )
        int alt372=2;
        int LA372_0 = input.LA(1);

        if ( (LA372_0==FOR_CLAUSE) ) {
            alt372=1;
        }
        else if ( (LA372_0==IF_CLAUSE) ) {
            alt372=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 372, 0, input);

            throw nvae;

        }
        switch (alt372) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2039:12: FOR_CLAUSE
                {
                match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_synpred29_Ceylon13536); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2039:25: IF_CLAUSE conditions ~ THEN_CLAUSE
                {
                match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_synpred29_Ceylon13540); if (state.failed) return ;

                pushFollow(FOLLOW_conditions_in_synpred29_Ceylon13542);
                conditions();

                state._fsp--;
                if (state.failed) return ;

                if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= StringPart)||(input.LA(1) >= THIS && input.LA(1) <= WS) ) {
                    input.consume();
                    state.errorRecovery=false;
                    state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


                }
                break;

        }
    }
    // $ANTLR end synpred29_Ceylon

    // $ANTLR start synpred30_Ceylon
    public void synpred30_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2056:13: ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )
        int alt373=2;
        int LA373_0 = input.LA(1);

        if ( (LA373_0==FOR_CLAUSE) ) {
            alt373=1;
        }
        else if ( (LA373_0==IF_CLAUSE) ) {
            alt373=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 373, 0, input);

            throw nvae;

        }
        switch (alt373) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2056:14: FOR_CLAUSE
                {
                match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_synpred30_Ceylon13719); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2056:27: IF_CLAUSE conditions ~ THEN_CLAUSE
                {
                match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_synpred30_Ceylon13723); if (state.failed) return ;

                pushFollow(FOLLOW_conditions_in_synpred30_Ceylon13725);
                conditions();

                state._fsp--;
                if (state.failed) return ;

                if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= StringPart)||(input.LA(1) >= THIS && input.LA(1) <= WS) ) {
                    input.consume();
                    state.errorRecovery=false;
                    state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


                }
                break;

        }
    }
    // $ANTLR end synpred30_Ceylon

    // $ANTLR start synpred31_Ceylon
    public void synpred31_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2319:15: ( namedArgumentStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2319:16: namedArgumentStart
        {
        pushFollow(FOLLOW_namedArgumentStart_in_synpred31_Ceylon15916);
        namedArgumentStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred31_Ceylon

    // $ANTLR start synpred32_Ceylon
    public void synpred32_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2387:7: ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )
        int alt374=3;
        switch ( input.LA(1) ) {
        case FUNCTION_MODIFIER:
            {
            alt374=1;
            }
            break;
        case VOID_MODIFIER:
            {
            alt374=2;
            }
            break;
        case LPAREN:
        case SMALLER_OP:
            {
            alt374=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 374, 0, input);

            throw nvae;

        }

        switch (alt374) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2387:8: FUNCTION_MODIFIER
                {
                match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_synpred32_Ceylon16345); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2387:26: VOID_MODIFIER
                {
                match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_synpred32_Ceylon16347); if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2387:40: anonParametersStart
                {
                pushFollow(FOLLOW_anonParametersStart_in_synpred32_Ceylon16349);
                anonParametersStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred32_Ceylon

    // $ANTLR start synpred33_Ceylon
    public void synpred33_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2411:7: ( variable ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2411:8: variable ENTRY_OP
        {
        pushFollow(FOLLOW_variable_in_synpred33_Ceylon16481);
        variable();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred33_Ceylon16483); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred33_Ceylon

    // $ANTLR start synpred34_Ceylon
    public void synpred34_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2417:9: ( patternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2417:10: patternStart
        {
        pushFollow(FOLLOW_patternStart_in_synpred34_Ceylon16533);
        patternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred34_Ceylon

    // $ANTLR start synpred35_Ceylon
    public void synpred35_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2670:7: ( IF_CLAUSE conditions ~ THEN_CLAUSE )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2670:8: IF_CLAUSE conditions ~ THEN_CLAUSE
        {
        match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_synpred35_Ceylon17665); if (state.failed) return ;

        pushFollow(FOLLOW_conditions_in_synpred35_Ceylon17667);
        conditions();

        state._fsp--;
        if (state.failed) return ;

        if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= StringPart)||(input.LA(1) >= THIS && input.LA(1) <= WS) ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred35_Ceylon

    // $ANTLR start synpred36_Ceylon
    public void synpred36_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3202:7: ( unionType ( PRODUCT_OP | SUM_OP ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3202:8: unionType ( PRODUCT_OP | SUM_OP )
        {
        pushFollow(FOLLOW_unionType_in_synpred36_Ceylon21472);
        unionType();

        state._fsp--;
        if (state.failed) return ;

        if ( input.LA(1)==PRODUCT_OP||input.LA(1)==SUM_OP ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred36_Ceylon

    // $ANTLR start synpred37_Ceylon
    public void synpred37_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3224:7: ( type ( SPECIFY ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3224:8: type ( SPECIFY )
        {
        pushFollow(FOLLOW_type_in_synpred37_Ceylon21603);
        type();

        state._fsp--;
        if (state.failed) return ;

        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3224:13: ( SPECIFY )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3224:14: SPECIFY
        {
        match(input,SPECIFY,FOLLOW_SPECIFY_in_synpred37_Ceylon21606); if (state.failed) return ;

        }


        }

    }
    // $ANTLR end synpred37_Ceylon

    // $ANTLR start synpred38_Ceylon
    public void synpred38_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3292:7: ( typeParameters ( TYPE_CONSTRAINT | COMPUTE ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3292:8: typeParameters ( TYPE_CONSTRAINT | COMPUTE )
        {
        pushFollow(FOLLOW_typeParameters_in_synpred38_Ceylon22113);
        typeParameters();

        state._fsp--;
        if (state.failed) return ;

        if ( input.LA(1)==COMPUTE||input.LA(1)==TYPE_CONSTRAINT ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred38_Ceylon

    // $ANTLR start synpred39_Ceylon
    public void synpred39_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3518:7: ( namedAnnotationArgumentsStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3518:8: namedAnnotationArgumentsStart
        {
        pushFollow(FOLLOW_namedAnnotationArgumentsStart_in_synpred39_Ceylon23571);
        namedAnnotationArgumentsStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred39_Ceylon

    // $ANTLR start synpred40_Ceylon
    public void synpred40_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3604:10: ( patternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3604:11: patternStart
        {
        pushFollow(FOLLOW_patternStart_in_synpred40_Ceylon24206);
        patternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred40_Ceylon

    // $ANTLR start synpred41_Ceylon
    public void synpred41_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3604:9: ( ( patternStart )=> patternStart | compilerAnnotations ( declarationStart | specificationStart ) )
        int alt376=2;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            int LA376_1 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt376=1;
            }
            else if ( (true) ) {
                alt376=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 376, 1, input);

                throw nvae;

            }
            }
            break;
        case SMALLER_OP:
            {
            int LA376_2 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt376=1;
            }
            else if ( (true) ) {
                alt376=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 376, 2, input);

                throw nvae;

            }
            }
            break;
        case UIDENTIFIER:
            {
            int LA376_3 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt376=1;
            }
            else if ( (true) ) {
                alt376=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 376, 3, input);

                throw nvae;

            }
            }
            break;
        case PACKAGE:
            {
            int LA376_4 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt376=1;
            }
            else if ( (true) ) {
                alt376=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 376, 4, input);

                throw nvae;

            }
            }
            break;
        case LBRACKET:
            {
            int LA376_5 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt376=1;
            }
            else if ( (true) ) {
                alt376=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 376, 5, input);

                throw nvae;

            }
            }
            break;
        case LBRACE:
            {
            int LA376_6 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt376=1;
            }
            else if ( (true) ) {
                alt376=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 376, 6, input);

                throw nvae;

            }
            }
            break;
        case VOID_MODIFIER:
            {
            int LA376_7 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt376=1;
            }
            else if ( (true) ) {
                alt376=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 376, 7, input);

                throw nvae;

            }
            }
            break;
        case FUNCTION_MODIFIER:
            {
            int LA376_8 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt376=1;
            }
            else if ( (true) ) {
                alt376=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 376, 8, input);

                throw nvae;

            }
            }
            break;
        case VALUE_MODIFIER:
            {
            int LA376_9 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt376=1;
            }
            else if ( (true) ) {
                alt376=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 376, 9, input);

                throw nvae;

            }
            }
            break;
        case LIDENTIFIER:
            {
            int LA376_10 = input.LA(2);

            if ( (synpred40_Ceylon()) ) {
                alt376=1;
            }
            else if ( (true) ) {
                alt376=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 376, 10, input);

                throw nvae;

            }
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case INTERFACE_DEFINITION:
        case NEW:
        case OBJECT_DEFINITION:
            {
            alt376=2;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 376, 0, input);

            throw nvae;

        }

        switch (alt376) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3604:10: ( patternStart )=> patternStart
                {
                pushFollow(FOLLOW_patternStart_in_synpred41_Ceylon24211);
                patternStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3604:43: compilerAnnotations ( declarationStart | specificationStart )
                {
                pushFollow(FOLLOW_compilerAnnotations_in_synpred41_Ceylon24215);
                compilerAnnotations();

                state._fsp--;
                if (state.failed) return ;

                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3604:63: ( declarationStart | specificationStart )
                int alt375=2;
                int LA375_0 = input.LA(1);

                if ( (LA375_0==ALIAS||LA375_0==ASSIGN||LA375_0==CLASS_DEFINITION||LA375_0==DYNAMIC||LA375_0==FUNCTION_MODIFIER||LA375_0==INTERFACE_DEFINITION||(LA375_0 >= LBRACE && LA375_0 <= LBRACKET)||LA375_0==NEW||LA375_0==OBJECT_DEFINITION||LA375_0==PACKAGE||LA375_0==SMALLER_OP||LA375_0==UIDENTIFIER||LA375_0==VALUE_MODIFIER||LA375_0==VOID_MODIFIER) ) {
                    alt375=1;
                }
                else if ( (LA375_0==LIDENTIFIER) ) {
                    alt375=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 375, 0, input);

                    throw nvae;

                }
                switch (alt375) {
                    case 1 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3604:64: declarationStart
                        {
                        pushFollow(FOLLOW_declarationStart_in_synpred41_Ceylon24218);
                        declarationStart();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3604:81: specificationStart
                        {
                        pushFollow(FOLLOW_specificationStart_in_synpred41_Ceylon24220);
                        specificationStart();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;

                }


                }
                break;

        }
    }
    // $ANTLR end synpred41_Ceylon

    // $ANTLR start synpred42_Ceylon
    public void synpred42_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3608:9: ( LIDENTIFIER )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3608:10: LIDENTIFIER
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred42_Ceylon24264); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred42_Ceylon

    // $ANTLR start synpred43_Ceylon
    public void synpred43_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3625:10: ( patternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3625:11: patternStart
        {
        pushFollow(FOLLOW_patternStart_in_synpred43_Ceylon24398);
        patternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred43_Ceylon

    // $ANTLR start synpred44_Ceylon
    public void synpred44_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3625:9: ( ( patternStart )=> patternStart | compilerAnnotations ( declarationStart | specificationStart ) )
        int alt378=2;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            int LA378_1 = input.LA(2);

            if ( (synpred43_Ceylon()) ) {
                alt378=1;
            }
            else if ( (true) ) {
                alt378=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 378, 1, input);

                throw nvae;

            }
            }
            break;
        case SMALLER_OP:
            {
            int LA378_2 = input.LA(2);

            if ( (synpred43_Ceylon()) ) {
                alt378=1;
            }
            else if ( (true) ) {
                alt378=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 378, 2, input);

                throw nvae;

            }
            }
            break;
        case UIDENTIFIER:
            {
            int LA378_3 = input.LA(2);

            if ( (synpred43_Ceylon()) ) {
                alt378=1;
            }
            else if ( (true) ) {
                alt378=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 378, 3, input);

                throw nvae;

            }
            }
            break;
        case PACKAGE:
            {
            int LA378_4 = input.LA(2);

            if ( (synpred43_Ceylon()) ) {
                alt378=1;
            }
            else if ( (true) ) {
                alt378=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 378, 4, input);

                throw nvae;

            }
            }
            break;
        case LBRACKET:
            {
            int LA378_5 = input.LA(2);

            if ( (synpred43_Ceylon()) ) {
                alt378=1;
            }
            else if ( (true) ) {
                alt378=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 378, 5, input);

                throw nvae;

            }
            }
            break;
        case LBRACE:
            {
            int LA378_6 = input.LA(2);

            if ( (synpred43_Ceylon()) ) {
                alt378=1;
            }
            else if ( (true) ) {
                alt378=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 378, 6, input);

                throw nvae;

            }
            }
            break;
        case VOID_MODIFIER:
            {
            int LA378_7 = input.LA(2);

            if ( (synpred43_Ceylon()) ) {
                alt378=1;
            }
            else if ( (true) ) {
                alt378=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 378, 7, input);

                throw nvae;

            }
            }
            break;
        case FUNCTION_MODIFIER:
            {
            int LA378_8 = input.LA(2);

            if ( (synpred43_Ceylon()) ) {
                alt378=1;
            }
            else if ( (true) ) {
                alt378=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 378, 8, input);

                throw nvae;

            }
            }
            break;
        case VALUE_MODIFIER:
            {
            int LA378_9 = input.LA(2);

            if ( (synpred43_Ceylon()) ) {
                alt378=1;
            }
            else if ( (true) ) {
                alt378=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 378, 9, input);

                throw nvae;

            }
            }
            break;
        case LIDENTIFIER:
            {
            int LA378_10 = input.LA(2);

            if ( (synpred43_Ceylon()) ) {
                alt378=1;
            }
            else if ( (true) ) {
                alt378=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 378, 10, input);

                throw nvae;

            }
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case INTERFACE_DEFINITION:
        case NEW:
        case OBJECT_DEFINITION:
            {
            alt378=2;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 378, 0, input);

            throw nvae;

        }

        switch (alt378) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3625:10: ( patternStart )=> patternStart
                {
                pushFollow(FOLLOW_patternStart_in_synpred44_Ceylon24403);
                patternStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3625:43: compilerAnnotations ( declarationStart | specificationStart )
                {
                pushFollow(FOLLOW_compilerAnnotations_in_synpred44_Ceylon24407);
                compilerAnnotations();

                state._fsp--;
                if (state.failed) return ;

                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3625:63: ( declarationStart | specificationStart )
                int alt377=2;
                int LA377_0 = input.LA(1);

                if ( (LA377_0==ALIAS||LA377_0==ASSIGN||LA377_0==CLASS_DEFINITION||LA377_0==DYNAMIC||LA377_0==FUNCTION_MODIFIER||LA377_0==INTERFACE_DEFINITION||(LA377_0 >= LBRACE && LA377_0 <= LBRACKET)||LA377_0==NEW||LA377_0==OBJECT_DEFINITION||LA377_0==PACKAGE||LA377_0==SMALLER_OP||LA377_0==UIDENTIFIER||LA377_0==VALUE_MODIFIER||LA377_0==VOID_MODIFIER) ) {
                    alt377=1;
                }
                else if ( (LA377_0==LIDENTIFIER) ) {
                    alt377=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 377, 0, input);

                    throw nvae;

                }
                switch (alt377) {
                    case 1 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3625:64: declarationStart
                        {
                        pushFollow(FOLLOW_declarationStart_in_synpred44_Ceylon24410);
                        declarationStart();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3625:81: specificationStart
                        {
                        pushFollow(FOLLOW_specificationStart_in_synpred44_Ceylon24412);
                        specificationStart();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;

                }


                }
                break;

        }
    }
    // $ANTLR end synpred44_Ceylon

    // $ANTLR start synpred45_Ceylon
    public void synpred45_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3629:9: ( LIDENTIFIER )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3629:10: LIDENTIFIER
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred45_Ceylon24456); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred45_Ceylon

    // $ANTLR start synpred46_Ceylon
    public void synpred46_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3648:9: ( LIDENTIFIER SPECIFY )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3648:10: LIDENTIFIER SPECIFY
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred46_Ceylon24601); if (state.failed) return ;

        match(input,SPECIFY,FOLLOW_SPECIFY_in_synpred46_Ceylon24603); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred46_Ceylon

    // $ANTLR start synpred47_Ceylon
    public void synpred47_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3691:9: ( LBRACE )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3691:10: LBRACE
        {
        match(input,LBRACE,FOLLOW_LBRACE_in_synpred47_Ceylon24919); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred47_Ceylon

    // $ANTLR start synpred48_Ceylon
    public void synpred48_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3857:9: ( COMPILER_ANNOTATION | declarationStart | specificationStart )
        int alt379=3;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            alt379=1;
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case FUNCTION_MODIFIER:
        case INTERFACE_DEFINITION:
        case LBRACE:
        case LBRACKET:
        case NEW:
        case OBJECT_DEFINITION:
        case PACKAGE:
        case SMALLER_OP:
        case UIDENTIFIER:
        case VALUE_MODIFIER:
        case VOID_MODIFIER:
            {
            alt379=2;
            }
            break;
        case LIDENTIFIER:
            {
            alt379=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 379, 0, input);

            throw nvae;

        }

        switch (alt379) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3857:10: COMPILER_ANNOTATION
                {
                match(input,COMPILER_ANNOTATION,FOLLOW_COMPILER_ANNOTATION_in_synpred48_Ceylon25466); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3857:30: declarationStart
                {
                pushFollow(FOLLOW_declarationStart_in_synpred48_Ceylon25468);
                declarationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3857:47: specificationStart
                {
                pushFollow(FOLLOW_specificationStart_in_synpred48_Ceylon25470);
                specificationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred48_Ceylon

    // $ANTLR start synpred49_Ceylon
    public void synpred49_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3905:7: ( IS_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3905:8: IS_OP
        {
        match(input,IS_OP,FOLLOW_IS_OP_in_synpred49_Ceylon25829); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred49_Ceylon

    // $ANTLR start synpred50_Ceylon
    public void synpred50_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3907:7: ( SATISFIES )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3907:8: SATISFIES
        {
        match(input,SATISFIES,FOLLOW_SATISFIES_in_synpred50_Ceylon25850); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred50_Ceylon

    // $ANTLR start synpred51_Ceylon
    public void synpred51_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3968:10: ( patternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3968:11: patternStart
        {
        pushFollow(FOLLOW_patternStart_in_synpred51_Ceylon26248);
        patternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred51_Ceylon

    // $ANTLR start synpred52_Ceylon
    public void synpred52_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4083:7: ( COMPILER_ANNOTATION | declarationStart | specificationStart )
        int alt380=3;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            alt380=1;
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case FUNCTION_MODIFIER:
        case INTERFACE_DEFINITION:
        case LBRACE:
        case LBRACKET:
        case NEW:
        case OBJECT_DEFINITION:
        case PACKAGE:
        case SMALLER_OP:
        case UIDENTIFIER:
        case VALUE_MODIFIER:
        case VOID_MODIFIER:
            {
            alt380=2;
            }
            break;
        case LIDENTIFIER:
            {
            alt380=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 380, 0, input);

            throw nvae;

        }

        switch (alt380) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4083:8: COMPILER_ANNOTATION
                {
                match(input,COMPILER_ANNOTATION,FOLLOW_COMPILER_ANNOTATION_in_synpred52_Ceylon27124); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4083:28: declarationStart
                {
                pushFollow(FOLLOW_declarationStart_in_synpred52_Ceylon27126);
                declarationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4083:45: specificationStart
                {
                pushFollow(FOLLOW_specificationStart_in_synpred52_Ceylon27128);
                specificationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred52_Ceylon

    // $ANTLR start synpred53_Ceylon
    public void synpred53_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4360:5: ( ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4360:6: ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER
        {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4360:6: ( ( PACKAGE | primaryType ) MEMBER_OP )?
        int alt382=2;
        int LA382_0 = input.LA(1);

        if ( ((LA382_0 >= LBRACE && LA382_0 <= LBRACKET)||LA382_0==PACKAGE||LA382_0==SMALLER_OP||LA382_0==UIDENTIFIER) ) {
            alt382=1;
        }
        switch (alt382) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4360:7: ( PACKAGE | primaryType ) MEMBER_OP
                {
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4360:7: ( PACKAGE | primaryType )
                int alt381=2;
                int LA381_0 = input.LA(1);

                if ( (LA381_0==PACKAGE) ) {
                    int LA381_1 = input.LA(2);

                    if ( (LA381_1==MEMBER_OP) ) {
                        int LA381_3 = input.LA(3);

                        if ( (LA381_3==LIDENTIFIER) ) {
                            alt381=1;
                        }
                        else if ( (LA381_3==UIDENTIFIER) ) {
                            alt381=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 381, 3, input);

                            throw nvae;

                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 381, 1, input);

                        throw nvae;

                    }
                }
                else if ( ((LA381_0 >= LBRACE && LA381_0 <= LBRACKET)||LA381_0==SMALLER_OP||LA381_0==UIDENTIFIER) ) {
                    alt381=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 381, 0, input);

                    throw nvae;

                }
                switch (alt381) {
                    case 1 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4360:8: PACKAGE
                        {
                        match(input,PACKAGE,FOLLOW_PACKAGE_in_synpred53_Ceylon28562); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4360:16: primaryType
                        {
                        pushFollow(FOLLOW_primaryType_in_synpred53_Ceylon28564);
                        primaryType();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;

                }


                match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_synpred53_Ceylon28567); if (state.failed) return ;

                }
                break;

        }


        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred53_Ceylon28571); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred53_Ceylon

    // $ANTLR start synpred54_Ceylon
    public void synpred54_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4374:8: ( PACKAGE ( LIDENTIFIER | BACKTICK ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4374:9: PACKAGE ( LIDENTIFIER | BACKTICK )
        {
        match(input,PACKAGE,FOLLOW_PACKAGE_in_synpred54_Ceylon28660); if (state.failed) return ;

        if ( input.LA(1)==BACKTICK||input.LA(1)==LIDENTIFIER ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred54_Ceylon

    // Delegated rules

    public boolean synpred46_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred37_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred13_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred25_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred9_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred7_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred49_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred16_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred12_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred20_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred8_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred42_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred28_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred30_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred48_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred32_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred44_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred27_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred22_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred3_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred26_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred43_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred35_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred45_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred24_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred34_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred41_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred15_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred10_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred1_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred51_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred38_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred53_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred2_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred36_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred6_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred23_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred11_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred40_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred14_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred18_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred54_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred31_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred29_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred52_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred4_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred21_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred47_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred50_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred17_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred33_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred39_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred5_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred19_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA164 dfa164 = new DFA164(this);
    protected DFA167 dfa167 = new DFA167(this);
    protected DFA166 dfa166 = new DFA166(this);
    protected DFA173 dfa173 = new DFA173(this);
    protected DFA182 dfa182 = new DFA182(this);
    protected DFA183 dfa183 = new DFA183(this);
    static final String DFA1_eotS =
        "\10\uffff";
    static final String DFA1_eofS =
        "\1\3\7\uffff";
    static final String DFA1_minS =
        "\1\7\1\105\2\uffff\1\7\1\160\2\7";
    static final String DFA1_maxS =
        "\1\u0083\1\105\2\uffff\1\u0083\1\u0082\2\u0083";
    static final String DFA1_acceptS =
        "\2\uffff\1\1\1\2\4\uffff";
    static final String DFA1_specialS =
        "\10\uffff}>";
    static final String[] DFA1_transitionS = {
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\5\uffff\1\3\1\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff"+
            "\1\3\4\uffff\1\3\3\uffff\1\3\5\uffff\1\3\5\uffff\1\3\11\uffff"+
            "\1\2\1\3\4\uffff\1\3\14\uffff\1\3\3\uffff\3\3",
            "\1\4",
            "",
            "",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\4\uffff"+
            "\1\3\3\uffff\1\3\5\uffff\1\3\16\uffff\1\5\1\2\1\3\4\uffff\1"+
            "\3\14\uffff\1\3\3\uffff\3\3",
            "\1\6\21\uffff\1\7",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\4\uffff"+
            "\1\3\3\uffff\1\3\5\uffff\1\3\17\uffff\1\2\1\3\4\uffff\1\3\14"+
            "\uffff\1\3\3\uffff\3\3",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\4\uffff"+
            "\1\3\3\uffff\1\3\5\uffff\1\3\17\uffff\1\2\1\3\4\uffff\1\3\14"+
            "\uffff\1\3\3\uffff\3\3"
    };

    static final short[] DFA1_eot = DFA.unpackEncodedString(DFA1_eotS);
    static final short[] DFA1_eof = DFA.unpackEncodedString(DFA1_eofS);
    static final char[] DFA1_min = DFA.unpackEncodedStringToUnsignedChars(DFA1_minS);
    static final char[] DFA1_max = DFA.unpackEncodedStringToUnsignedChars(DFA1_maxS);
    static final short[] DFA1_accept = DFA.unpackEncodedString(DFA1_acceptS);
    static final short[] DFA1_special = DFA.unpackEncodedString(DFA1_specialS);
    static final short[][] DFA1_transition;

    static {
        int numStates = DFA1_transitionS.length;
        DFA1_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA1_transition[i] = DFA.unpackEncodedString(DFA1_transitionS[i]);
        }
    }

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "85:7: (ca= compilerAnnotations SEMICOLON )?";
        }
    }
    static final String DFA164_eotS =
        "\77\uffff";
    static final String DFA164_eofS =
        "\77\uffff";
    static final String DFA164_minS =
        "\1\5\4\uffff\1\0\71\uffff";
    static final String DFA164_maxS =
        "\1\u0080\4\uffff\1\0\71\uffff";
    static final String DFA164_acceptS =
        "\1\uffff\1\2\74\uffff\1\1";
    static final String DFA164_specialS =
        "\5\uffff\1\0\71\uffff}>";
    static final String[] DFA164_transitionS = {
            "\1\1\2\uffff\2\1\11\uffff\2\1\3\uffff\2\1\1\uffff\3\1\2\uffff"+
            "\3\1\3\uffff\6\1\11\uffff\1\1\2\uffff\1\1\1\uffff\4\1\2\uffff"+
            "\4\1\4\uffff\1\5\1\uffff\1\1\1\uffff\1\1\4\uffff\2\1\3\uffff"+
            "\2\1\4\uffff\10\1\1\uffff\13\1\1\uffff\1\1\1\uffff\2\1\3\uffff"+
            "\1\1\6\uffff\2\1",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA164_eot = DFA.unpackEncodedString(DFA164_eotS);
    static final short[] DFA164_eof = DFA.unpackEncodedString(DFA164_eofS);
    static final char[] DFA164_min = DFA.unpackEncodedStringToUnsignedChars(DFA164_minS);
    static final char[] DFA164_max = DFA.unpackEncodedStringToUnsignedChars(DFA164_maxS);
    static final short[] DFA164_accept = DFA.unpackEncodedString(DFA164_acceptS);
    static final short[] DFA164_special = DFA.unpackEncodedString(DFA164_specialS);
    static final short[][] DFA164_transition;

    static {
        int numStates = DFA164_transitionS.length;
        DFA164_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA164_transition[i] = DFA.unpackEncodedString(DFA164_transitionS[i]);
        }
    }

    class DFA164 extends DFA {

        public DFA164(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 164;
            this.eot = DFA164_eot;
            this.eof = DFA164_eof;
            this.min = DFA164_min;
            this.max = DFA164_max;
            this.accept = DFA164_accept;
            this.special = DFA164_special;
            this.transition = DFA164_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1710:7: ( ( specifierParametersStart )=> parameters )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA164_5 = input.LA(1);

                         
                        int index164_5 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred18_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index164_5);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 164, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA167_eotS =
        "\77\uffff";
    static final String DFA167_eofS =
        "\77\uffff";
    static final String DFA167_minS =
        "\1\5\3\0\73\uffff";
    static final String DFA167_maxS =
        "\1\u0080\3\0\73\uffff";
    static final String DFA167_acceptS =
        "\4\uffff\1\2\71\uffff\1\1";
    static final String DFA167_specialS =
        "\1\uffff\1\0\1\1\1\2\73\uffff}>";
    static final String[] DFA167_transitionS = {
            "\1\4\2\uffff\2\4\11\uffff\2\4\3\uffff\2\4\1\uffff\3\4\2\uffff"+
            "\3\4\3\uffff\6\4\11\uffff\1\4\2\uffff\1\4\1\uffff\4\4\2\uffff"+
            "\4\4\4\uffff\1\4\1\uffff\1\1\1\uffff\1\4\4\uffff\2\4\3\uffff"+
            "\2\4\4\uffff\10\4\1\uffff\1\4\1\2\7\4\1\3\1\4\1\uffff\1\4\1"+
            "\uffff\2\4\3\uffff\1\4\6\uffff\2\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA167_eot = DFA.unpackEncodedString(DFA167_eotS);
    static final short[] DFA167_eof = DFA.unpackEncodedString(DFA167_eofS);
    static final char[] DFA167_min = DFA.unpackEncodedStringToUnsignedChars(DFA167_minS);
    static final char[] DFA167_max = DFA.unpackEncodedStringToUnsignedChars(DFA167_maxS);
    static final short[] DFA167_accept = DFA.unpackEncodedString(DFA167_acceptS);
    static final short[] DFA167_special = DFA.unpackEncodedString(DFA167_specialS);
    static final short[][] DFA167_transition;

    static {
        int numStates = DFA167_transitionS.length;
        DFA167_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA167_transition[i] = DFA.unpackEncodedString(DFA167_transitionS[i]);
        }
    }

    class DFA167 extends DFA {

        public DFA167(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 167;
            this.eot = DFA167_eot;
            this.eof = DFA167_eof;
            this.min = DFA167_min;
            this.max = DFA167_max;
            this.accept = DFA167_accept;
            this.special = DFA167_special;
            this.transition = DFA167_transition;
        }
        public String getDescription() {
            return "1728:7: ( ( MEMBER_OP LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberSelectionOperator memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+ )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA167_1 = input.LA(1);

                         
                        int index167_1 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred19_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index167_1);

                        if ( s>=0 ) return s;
                        break;

                    case 1 : 
                        int LA167_2 = input.LA(1);

                         
                        int index167_2 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred19_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index167_2);

                        if ( s>=0 ) return s;
                        break;

                    case 2 : 
                        int LA167_3 = input.LA(1);

                         
                        int index167_3 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred19_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index167_3);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 167, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA166_eotS =
        "\77\uffff";
    static final String DFA166_eofS =
        "\77\uffff";
    static final String DFA166_minS =
        "\1\5\4\uffff\1\0\71\uffff";
    static final String DFA166_maxS =
        "\1\u0080\4\uffff\1\0\71\uffff";
    static final String DFA166_acceptS =
        "\1\uffff\1\2\74\uffff\1\1";
    static final String DFA166_specialS =
        "\5\uffff\1\0\71\uffff}>";
    static final String[] DFA166_transitionS = {
            "\1\1\2\uffff\2\1\11\uffff\2\1\3\uffff\2\1\1\uffff\3\1\2\uffff"+
            "\3\1\3\uffff\6\1\11\uffff\1\1\2\uffff\1\1\1\uffff\4\1\2\uffff"+
            "\4\1\4\uffff\1\5\1\uffff\1\1\1\uffff\1\1\4\uffff\2\1\3\uffff"+
            "\2\1\4\uffff\10\1\1\uffff\13\1\1\uffff\1\1\1\uffff\2\1\3\uffff"+
            "\1\1\6\uffff\2\1",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA166_eot = DFA.unpackEncodedString(DFA166_eotS);
    static final short[] DFA166_eof = DFA.unpackEncodedString(DFA166_eofS);
    static final char[] DFA166_min = DFA.unpackEncodedStringToUnsignedChars(DFA166_minS);
    static final char[] DFA166_max = DFA.unpackEncodedStringToUnsignedChars(DFA166_maxS);
    static final short[] DFA166_accept = DFA.unpackEncodedString(DFA166_acceptS);
    static final short[] DFA166_special = DFA.unpackEncodedString(DFA166_specialS);
    static final short[][] DFA166_transition;

    static {
        int numStates = DFA166_transitionS.length;
        DFA166_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA166_transition[i] = DFA.unpackEncodedString(DFA166_transitionS[i]);
        }
    }

    class DFA166 extends DFA {

        public DFA166(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 166;
            this.eot = DFA166_eot;
            this.eof = DFA166_eof;
            this.min = DFA166_min;
            this.max = DFA166_max;
            this.accept = DFA166_accept;
            this.special = DFA166_special;
            this.transition = DFA166_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1743:9: ( ( specifierParametersStart )=> parameters )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA166_5 = input.LA(1);

                         
                        int index166_5 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred20_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_5);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 166, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA173_eotS =
        "\100\uffff";
    static final String DFA173_eofS =
        "\100\uffff";
    static final String DFA173_minS =
        "\1\5\77\uffff";
    static final String DFA173_maxS =
        "\1\u0080\77\uffff";
    static final String DFA173_acceptS =
        "\1\uffff\1\1\1\2\75\3";
    static final String DFA173_specialS =
        "\1\0\77\uffff}>";
    static final String[] DFA173_transitionS = {
            "\1\60\2\uffff\1\46\1\70\11\uffff\1\55\1\42\3\uffff\1\7\1\31"+
            "\1\uffff\1\12\1\67\1\51\2\uffff\1\3\1\22\1\63\3\uffff\1\23\1"+
            "\54\1\26\1\43\1\27\1\40\11\uffff\1\45\2\uffff\1\4\1\uffff\1"+
            "\6\1\65\1\32\1\37\2\uffff\1\34\1\33\1\77\1\75\1\uffff\1\1\2"+
            "\uffff\1\76\1\uffff\1\72\1\uffff\1\62\4\uffff\1\30\1\44\3\uffff"+
            "\1\47\1\71\4\uffff\1\5\1\15\1\16\1\24\1\13\1\14\1\17\1\64\1"+
            "\uffff\1\11\1\73\1\41\1\20\1\25\1\50\1\36\1\35\1\57\1\74\1\53"+
            "\1\uffff\1\52\1\uffff\1\61\1\21\3\uffff\1\56\4\uffff\1\2\1\uffff"+
            "\1\10\1\66",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA173_eot = DFA.unpackEncodedString(DFA173_eotS);
    static final short[] DFA173_eof = DFA.unpackEncodedString(DFA173_eofS);
    static final char[] DFA173_min = DFA.unpackEncodedStringToUnsignedChars(DFA173_minS);
    static final char[] DFA173_max = DFA.unpackEncodedStringToUnsignedChars(DFA173_maxS);
    static final short[] DFA173_accept = DFA.unpackEncodedString(DFA173_acceptS);
    static final short[] DFA173_special = DFA.unpackEncodedString(DFA173_specialS);
    static final short[][] DFA173_transition;

    static {
        int numStates = DFA173_transitionS.length;
        DFA173_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA173_transition[i] = DFA.unpackEncodedString(DFA173_transitionS[i]);
        }
    }

    class DFA173 extends DFA {

        public DFA173(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 173;
            this.eot = DFA173_eot;
            this.eof = DFA173_eof;
            this.min = DFA173_min;
            this.max = DFA173_max;
            this.accept = DFA173_accept;
            this.special = DFA173_special;
            this.transition = DFA173_transition;
        }
        public String getDescription() {
            return "1817:7: ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA173_0 = input.LA(1);

                         
                        int index173_0 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (LA173_0==LIDENTIFIER) ) {s = 1;}

                        else if ( (LA173_0==UIDENTIFIER) ) {s = 2;}

                        else if ( (LA173_0==DECREMENT_OP) && (synpred21_Ceylon())) {s = 3;}

                        else if ( (LA173_0==INCREMENT_OP) && (synpred21_Ceylon())) {s = 4;}

                        else if ( (LA173_0==POWER_OP) && (synpred21_Ceylon())) {s = 5;}

                        else if ( (LA173_0==INTERSECTION_OP) && (synpred21_Ceylon())) {s = 6;}

                        else if ( (LA173_0==COMMA) && (synpred21_Ceylon())) {s = 7;}

                        else if ( (LA173_0==UNION_OP) && (synpred21_Ceylon())) {s = 8;}

                        else if ( (LA173_0==RPAREN) && (synpred21_Ceylon())) {s = 9;}

                        else if ( (LA173_0==COMPLEMENT_OP) && (synpred21_Ceylon())) {s = 10;}

                        else if ( (LA173_0==RBRACE) && (synpred21_Ceylon())) {s = 11;}

                        else if ( (LA173_0==RBRACKET) && (synpred21_Ceylon())) {s = 12;}

                        else if ( (LA173_0==PRODUCT_OP) && (synpred21_Ceylon())) {s = 13;}

                        else if ( (LA173_0==QUOTIENT_OP) && (synpred21_Ceylon())) {s = 14;}

                        else if ( (LA173_0==REMAINDER_OP) && (synpred21_Ceylon())) {s = 15;}

                        else if ( (LA173_0==SCALE_OP) && (synpred21_Ceylon())) {s = 16;}

                        else if ( (LA173_0==SUM_OP) && (synpred21_Ceylon())) {s = 17;}

                        else if ( (LA173_0==DIFFERENCE_OP) && (synpred21_Ceylon())) {s = 18;}

                        else if ( (LA173_0==ELLIPSIS) && (synpred21_Ceylon())) {s = 19;}

                        else if ( (LA173_0==RANGE_OP) && (synpred21_Ceylon())) {s = 20;}

                        else if ( (LA173_0==SEGMENT_OP) && (synpred21_Ceylon())) {s = 21;}

                        else if ( (LA173_0==ENTRY_OP) && (synpred21_Ceylon())) {s = 22;}

                        else if ( (LA173_0==EXISTS) && (synpred21_Ceylon())) {s = 23;}

                        else if ( (LA173_0==NONEMPTY) && (synpred21_Ceylon())) {s = 24;}

                        else if ( (LA173_0==COMPARE_OP) && (synpred21_Ceylon())) {s = 25;}

                        else if ( (LA173_0==IN_OP) && (synpred21_Ceylon())) {s = 26;}

                        else if ( (LA173_0==LARGE_AS_OP) && (synpred21_Ceylon())) {s = 27;}

                        else if ( (LA173_0==LARGER_OP) && (synpred21_Ceylon())) {s = 28;}

                        else if ( (LA173_0==SMALL_AS_OP) && (synpred21_Ceylon())) {s = 29;}

                        else if ( (LA173_0==SMALLER_OP) && (synpred21_Ceylon())) {s = 30;}

                        else if ( (LA173_0==IS_OP) && (synpred21_Ceylon())) {s = 31;}

                        else if ( (LA173_0==EXTENDS) && (synpred21_Ceylon())) {s = 32;}

                        else if ( (LA173_0==SATISFIES) && (synpred21_Ceylon())) {s = 33;}

                        else if ( (LA173_0==CASE_TYPES) && (synpred21_Ceylon())) {s = 34;}

                        else if ( (LA173_0==EQUAL_OP) && (synpred21_Ceylon())) {s = 35;}

                        else if ( (LA173_0==NOT_EQUAL_OP) && (synpred21_Ceylon())) {s = 36;}

                        else if ( (LA173_0==IDENTICAL_OP) && (synpred21_Ceylon())) {s = 37;}

                        else if ( (LA173_0==AND_OP) && (synpred21_Ceylon())) {s = 38;}

                        else if ( (LA173_0==OR_OP) && (synpred21_Ceylon())) {s = 39;}

                        else if ( (LA173_0==SEMICOLON) && (synpred21_Ceylon())) {s = 40;}

                        else if ( (LA173_0==COMPUTE) && (synpred21_Ceylon())) {s = 41;}

                        else if ( (LA173_0==STRING_MID) && (synpred21_Ceylon())) {s = 42;}

                        else if ( (LA173_0==STRING_END) && (synpred21_Ceylon())) {s = 43;}

                        else if ( (LA173_0==ELSE_CLAUSE) && (synpred21_Ceylon())) {s = 44;}

                        else if ( (LA173_0==CASE_CLAUSE) && (synpred21_Ceylon())) {s = 45;}

                        else if ( (LA173_0==THEN_CLAUSE) && (synpred21_Ceylon())) {s = 46;}

                        else if ( (LA173_0==SPECIFY) && (synpred21_Ceylon())) {s = 47;}

                        else if ( (LA173_0==ADD_SPECIFY) && (synpred21_Ceylon())) {s = 48;}

                        else if ( (LA173_0==SUBTRACT_SPECIFY) && (synpred21_Ceylon())) {s = 49;}

                        else if ( (LA173_0==MULTIPLY_SPECIFY) && (synpred21_Ceylon())) {s = 50;}

                        else if ( (LA173_0==DIVIDE_SPECIFY) && (synpred21_Ceylon())) {s = 51;}

                        else if ( (LA173_0==REMAINDER_SPECIFY) && (synpred21_Ceylon())) {s = 52;}

                        else if ( (LA173_0==INTERSECT_SPECIFY) && (synpred21_Ceylon())) {s = 53;}

                        else if ( (LA173_0==UNION_SPECIFY) && (synpred21_Ceylon())) {s = 54;}

                        else if ( (LA173_0==COMPLEMENT_SPECIFY) && (synpred21_Ceylon())) {s = 55;}

                        else if ( (LA173_0==AND_SPECIFY) && (synpred21_Ceylon())) {s = 56;}

                        else if ( (LA173_0==OR_SPECIFY) && (synpred21_Ceylon())) {s = 57;}

                        else if ( (LA173_0==MEMBER_OP) && (synpred21_Ceylon())) {s = 58;}

                        else if ( (LA173_0==SAFE_MEMBER_OP) && (synpred21_Ceylon())) {s = 59;}

                        else if ( (LA173_0==SPREAD_OP) && (synpred21_Ceylon())) {s = 60;}

                        else if ( (LA173_0==LBRACKET) && (synpred21_Ceylon())) {s = 61;}

                        else if ( (LA173_0==LPAREN) && (synpred21_Ceylon())) {s = 62;}

                        else if ( (LA173_0==LBRACE) && (synpred21_Ceylon())) {s = 63;}

                         
                        input.seek(index173_0);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 173, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA182_eotS =
        "\77\uffff";
    static final String DFA182_eofS =
        "\77\uffff";
    static final String DFA182_minS =
        "\1\5\1\0\75\uffff";
    static final String DFA182_maxS =
        "\1\u0080\1\0\75\uffff";
    static final String DFA182_acceptS =
        "\2\uffff\1\2\73\uffff\1\1";
    static final String DFA182_specialS =
        "\1\uffff\1\0\75\uffff}>";
    static final String[] DFA182_transitionS = {
            "\1\2\2\uffff\2\2\11\uffff\2\2\3\uffff\2\2\1\uffff\3\2\2\uffff"+
            "\3\2\3\uffff\6\2\11\uffff\1\2\2\uffff\1\2\1\uffff\4\2\2\uffff"+
            "\4\2\4\uffff\1\2\1\uffff\1\2\1\uffff\1\2\4\uffff\2\2\3\uffff"+
            "\2\2\4\uffff\10\2\1\uffff\6\2\1\1\4\2\1\uffff\1\2\1\uffff\2"+
            "\2\3\uffff\1\2\6\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA182_eot = DFA.unpackEncodedString(DFA182_eotS);
    static final short[] DFA182_eof = DFA.unpackEncodedString(DFA182_eofS);
    static final char[] DFA182_min = DFA.unpackEncodedStringToUnsignedChars(DFA182_minS);
    static final char[] DFA182_max = DFA.unpackEncodedStringToUnsignedChars(DFA182_maxS);
    static final short[] DFA182_accept = DFA.unpackEncodedString(DFA182_acceptS);
    static final short[] DFA182_special = DFA.unpackEncodedString(DFA182_specialS);
    static final short[][] DFA182_transition;

    static {
        int numStates = DFA182_transitionS.length;
        DFA182_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA182_transition[i] = DFA.unpackEncodedString(DFA182_transitionS[i]);
        }
    }

    class DFA182 extends DFA {

        public DFA182(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 182;
            this.eot = DFA182_eot;
            this.eof = DFA182_eof;
            this.min = DFA182_min;
            this.max = DFA182_max;
            this.accept = DFA182_accept;
            this.special = DFA182_special;
            this.transition = DFA182_transition;
        }
        public String getDescription() {
            return "1920:7: ( ( typeArgumentsStart )=> typeArguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA182_1 = input.LA(1);

                         
                        int index182_1 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred24_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index182_1);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 182, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA183_eotS =
        "\77\uffff";
    static final String DFA183_eofS =
        "\77\uffff";
    static final String DFA183_minS =
        "\1\5\1\0\75\uffff";
    static final String DFA183_maxS =
        "\1\u0080\1\0\75\uffff";
    static final String DFA183_acceptS =
        "\2\uffff\1\2\73\uffff\1\1";
    static final String DFA183_specialS =
        "\1\uffff\1\0\75\uffff}>";
    static final String[] DFA183_transitionS = {
            "\1\2\2\uffff\2\2\11\uffff\2\2\3\uffff\2\2\1\uffff\3\2\2\uffff"+
            "\3\2\3\uffff\6\2\11\uffff\1\2\2\uffff\1\2\1\uffff\4\2\2\uffff"+
            "\4\2\4\uffff\1\2\1\uffff\1\2\1\uffff\1\2\4\uffff\2\2\3\uffff"+
            "\2\2\4\uffff\10\2\1\uffff\6\2\1\1\4\2\1\uffff\1\2\1\uffff\2"+
            "\2\3\uffff\1\2\6\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA183_eot = DFA.unpackEncodedString(DFA183_eotS);
    static final short[] DFA183_eof = DFA.unpackEncodedString(DFA183_eofS);
    static final char[] DFA183_min = DFA.unpackEncodedStringToUnsignedChars(DFA183_minS);
    static final char[] DFA183_max = DFA.unpackEncodedStringToUnsignedChars(DFA183_maxS);
    static final short[] DFA183_accept = DFA.unpackEncodedString(DFA183_acceptS);
    static final short[] DFA183_special = DFA.unpackEncodedString(DFA183_specialS);
    static final short[][] DFA183_transition;

    static {
        int numStates = DFA183_transitionS.length;
        DFA183_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA183_transition[i] = DFA.unpackEncodedString(DFA183_transitionS[i]);
        }
    }

    class DFA183 extends DFA {

        public DFA183(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 183;
            this.eot = DFA183_eot;
            this.eof = DFA183_eof;
            this.min = DFA183_min;
            this.max = DFA183_max;
            this.accept = DFA183_accept;
            this.special = DFA183_special;
            this.transition = DFA183_transition;
        }
        public String getDescription() {
            return "1931:7: ( ( typeArgumentsStart )=> typeArguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA183_1 = input.LA(1);

                         
                        int index183_1 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred25_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index183_1);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 183, _s, input);
            error(nvae);
            throw nvae;
        }

    }
 

    public static final BitSet FOLLOW_compilerAnnotations_in_compilationUnit86 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_compilationUnit96 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_importDeclaration_in_compilationUnit134 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_moduleDescriptor_in_compilationUnit177 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_packageDescriptor_in_compilationUnit220 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_toplevelDeclaration_in_compilationUnit248 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_RBRACE_in_compilationUnit268 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_EOF_in_compilationUnit295 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_toplevelDeclaration318 = new BitSet(new long[]{0x0202000800801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_declaration_in_toplevelDeclaration329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_annotatedModuleDescriptorStart354 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000820L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_annotatedModuleDescriptorStart356 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_MODULE_in_annotatedModuleDescriptorStart358 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_annotatedPackageDescriptorStart375 = new BitSet(new long[]{0x0000000000000000L,0x0001000004000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_annotatedPackageDescriptorStart377 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_PACKAGE_in_annotatedPackageDescriptorStart379 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFBFFL,0x000000000000003FL});
    public static final BitSet FOLLOW_set_in_annotatedPackageDescriptorStart381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_moduleDescriptor403 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000820L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_moduleDescriptor405 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_MODULE_in_moduleDescriptor413 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_moduleDescriptor430 = new BitSet(new long[]{0x0000000000400000L,0x0001000000000000L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_moduleDescriptor456 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_moduleDescriptor484 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_importModuleList_in_moduleDescriptor510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_importModuleList539 = new BitSet(new long[]{0x0080000004000000L,0x0001000100000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_compilerAnnotations_in_importModuleList565 = new BitSet(new long[]{0x0080000000000000L,0x0001000000000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_importModuleList567 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_importModule_in_importModuleList577 = new BitSet(new long[]{0x0080000004000000L,0x0001000100000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_RBRACE_in_importModuleList604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_packageDescriptor633 = new BitSet(new long[]{0x0000000000000000L,0x0001000004000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_packageDescriptor635 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_PACKAGE_in_packageDescriptor643 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_packageDescriptor660 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_packageDescriptor676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPORT_in_importModule705 = new BitSet(new long[]{0x0000000000400000L,0x2001000000000020L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_importModule734 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_importModule764 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_packagePath_in_importModule792 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_importModule830 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_importModule860 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_importModule887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPORT_in_importDeclaration916 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000024L});
    public static final BitSet FOLLOW_packagePath_in_importDeclaration944 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_importElementList_in_importDeclaration980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_importElementList1022 = new BitSet(new long[]{0x0000004004000000L,0x2000000100000020L});
    public static final BitSet FOLLOW_importElement_in_importElementList1045 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_COMMA_in_importElementList1076 = new BitSet(new long[]{0x0000004005000000L,0x2000000100000020L});
    public static final BitSet FOLLOW_importElement_in_importElementList1111 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_importWildcard_in_importElementList1139 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_importWildcard_in_importElementList1193 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_importElementList1208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_importElement1244 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_importName_in_importElement1254 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000004L});
    public static final BitSet FOLLOW_SPECIFY_in_importElement1273 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000024L});
    public static final BitSet FOLLOW_importName_in_importElement1307 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_importElementList_in_importElement1371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELLIPSIS_in_importWildcard1423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_importName1452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_importName1462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_packageName_in_packagePath1496 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_packagePath1527 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000420L});
    public static final BitSet FOLLOW_packageName_in_packagePath1562 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_packageName1627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_packageName1651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_typeName1680 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_annotationName1709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_memberName1738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_memberNameDeclaration1771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_memberNameDeclaration1789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_typeNameDeclaration1819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_typeNameDeclaration1837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_objectDeclaration1867 = new BitSet(new long[]{0x0000080000000000L,0x2000048000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_objectDeclaration1893 = new BitSet(new long[]{0x0000080000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_extendedType_in_objectDeclaration1931 = new BitSet(new long[]{0x0000000000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_objectDeclaration1970 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_classBody_in_objectDeclaration2008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_objectDeclaration2038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_objectExpression2077 = new BitSet(new long[]{0x0000080000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_extendedType_in_objectExpression2104 = new BitSet(new long[]{0x0000000000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_objectExpression2143 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_classBody_in_objectExpression2181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_objectExpression2213 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodDeclaration2271 = new BitSet(new long[]{0x0000000024000000L,0x30002C0000000124L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodDeclaration2291 = new BitSet(new long[]{0x0000000024000000L,0x30002C0000000124L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_voidOrInferredMethodDeclaration2327 = new BitSet(new long[]{0x0000000024000000L,0x10002C0000000104L});
    public static final BitSet FOLLOW_typeParameters_in_voidOrInferredMethodDeclaration2364 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_parameters_in_voidOrInferredMethodDeclaration2409 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_typeConstraints_in_voidOrInferredMethodDeclaration2453 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_voidOrInferredMethodDeclaration2501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_voidOrInferredMethodDeclaration2543 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_voidOrInferredMethodDeclaration2586 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSIGN_in_setterDeclaration2635 = new BitSet(new long[]{0x0000000020000000L,0x2000240000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_setterDeclaration2662 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_setterDeclaration2701 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_setterDeclaration2742 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_setterDeclaration2785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tuplePatternStart2820 = new BitSet(new long[]{0x0202000804801080L,0x200008002411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_compilerAnnotations_in_tuplePatternStart2838 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000020L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_tuplePatternStart2840 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_tuplePatternStart2843 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_tuplePatternStart2879 = new BitSet(new long[]{0x0202000800801080L,0x200008000411000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_tuplePatternStart2881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePatternStart_in_tuplePatternStart2900 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_variableOrTuplePattern2942 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variablePattern_in_variableOrTuplePattern2965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyItemPattern_in_pattern3017 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyItemPattern_in_pattern3055 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_pattern3090 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variablePattern_in_pattern3113 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyItemPattern_in_tupleOrEntryPattern3165 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyItemPattern_in_tupleOrEntryPattern3203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_tupleOrEntryPattern3225 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_variablePattern3254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tuplePattern3283 = new BitSet(new long[]{0x0002000004000000L,0x200008022400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variadicPattern_in_tuplePattern3311 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_COMMA_in_tuplePattern3345 = new BitSet(new long[]{0x0002000004000000L,0x200008002400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variadicPattern_in_tuplePattern3385 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_tuplePattern3439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicVariable_in_variadicPattern3497 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_pattern_in_variadicPattern3526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_variadicVariable3573 = new BitSet(new long[]{0x0000000000000000L,0x200008002400000CL});
    public static final BitSet FOLLOW_unionType_in_variadicVariable3599 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_variadicVariable3636 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_variadicVariable3680 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableOrTuplePattern_in_keyItemPattern3722 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_keyItemPattern3738 = new BitSet(new long[]{0x0002000004000002L,0x200008000400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variableOrTuplePattern_in_keyItemPattern3766 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_destructure3806 = new BitSet(new long[]{0x0002000004000000L,0x200008000400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_tupleOrEntryPattern_in_destructure3822 = new BitSet(new long[]{0x0000000000000000L,0x0000240000000000L});
    public static final BitSet FOLLOW_specifier_in_destructure3848 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_destructure3885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_inferredAttributeDeclaration3923 = new BitSet(new long[]{0x0000000020000000L,0x2000240000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_inferredAttributeDeclaration3950 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_specifier_in_inferredAttributeDeclaration4000 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_inferredAttributeDeclaration4035 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_inferredAttributeDeclaration4078 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_inferredAttributeDeclaration4117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_typedMethodOrAttributeDeclaration4167 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_typedMethodOrAttributeDeclaration4187 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_typedMethodOrAttributeDeclaration4213 = new BitSet(new long[]{0x0000000020000000L,0x00002C0000000104L});
    public static final BitSet FOLLOW_typeParameters_in_typedMethodOrAttributeDeclaration4262 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_typedMethodOrAttributeDeclaration4307 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_typeConstraints_in_typedMethodOrAttributeDeclaration4362 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_typedMethodOrAttributeDeclaration4422 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_typedMethodOrAttributeDeclaration4472 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration4524 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_in_typedMethodOrAttributeDeclaration4579 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_typedMethodOrAttributeDeclaration4617 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration4663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_typedMethodOrAttributeDeclaration4704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_interfaceDeclaration4763 = new BitSet(new long[]{0x0000000024100000L,0x30002C8000000024L});
    public static final BitSet FOLLOW_DYNAMIC_in_interfaceDeclaration4792 = new BitSet(new long[]{0x0000000024100000L,0x30002C8000000024L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_interfaceDeclaration4828 = new BitSet(new long[]{0x0000000024100000L,0x10002C8000000004L});
    public static final BitSet FOLLOW_typeParameters_in_interfaceDeclaration4866 = new BitSet(new long[]{0x0000000024100000L,0x1000248000000004L});
    public static final BitSet FOLLOW_caseTypes_in_interfaceDeclaration4904 = new BitSet(new long[]{0x0000000024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_interfaceDeclaration4958 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000004L});
    public static final BitSet FOLLOW_typeConstraints_in_interfaceDeclaration4995 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_interfaceBody_in_interfaceDeclaration5042 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeSpecifier_in_interfaceDeclaration5083 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interfaceDeclaration5127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_classDeclaration5175 = new BitSet(new long[]{0x0000080024100000L,0x30002C8000000124L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_classDeclaration5202 = new BitSet(new long[]{0x0000080024100000L,0x10002C8000000104L});
    public static final BitSet FOLLOW_typeParameters_in_classDeclaration5239 = new BitSet(new long[]{0x0000080024100000L,0x1000248000000104L});
    public static final BitSet FOLLOW_parameters_in_classDeclaration5276 = new BitSet(new long[]{0x0000080024100000L,0x1000248000000004L});
    public static final BitSet FOLLOW_caseTypes_in_classDeclaration5313 = new BitSet(new long[]{0x0000080024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_extendedType_in_classDeclaration5359 = new BitSet(new long[]{0x0000000024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_classDeclaration5397 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000004L});
    public static final BitSet FOLLOW_typeConstraints_in_classDeclaration5434 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_classBody_in_classDeclaration5481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classSpecifier_in_classDeclaration5522 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_classDeclaration5565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_constructor5604 = new BitSet(new long[]{0x0000080000000000L,0x2000000000000124L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_constructor5630 = new BitSet(new long[]{0x0000080000000000L,0x0000000000000104L});
    public static final BitSet FOLLOW_parameters_in_constructor5667 = new BitSet(new long[]{0x0000080000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_delegatedConstructor_in_constructor5708 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_constructor5735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_delegatedConstructor5764 = new BitSet(new long[]{0x0000000000000002L,0x2020000004000000L});
    public static final BitSet FOLLOW_classInstantiation_in_delegatedConstructor5792 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALIAS_in_aliasDeclaration5832 = new BitSet(new long[]{0x0000000024000000L,0x30002C0000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_aliasDeclaration5858 = new BitSet(new long[]{0x0000000024000000L,0x10002C0000000000L});
    public static final BitSet FOLLOW_typeParameters_in_aliasDeclaration5896 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000000L});
    public static final BitSet FOLLOW_typeConstraints_in_aliasDeclaration5934 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000000L});
    public static final BitSet FOLLOW_typeSpecifier_in_aliasDeclaration5971 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_aliasDeclaration6006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotations_in_assertion6035 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_ASSERT_in_assertion6043 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_assertion6059 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_assertion6083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_block6112 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_block6139 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_block6166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_interfaceBody6199 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_interfaceBody6226 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_interfaceBody6253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_classBody6282 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_classBody6308 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_classBody6335 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_extendedType6364 = new BitSet(new long[]{0x0000000000000002L,0x2020000004000000L});
    public static final BitSet FOLLOW_classInstantiation_in_extendedType6394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_classSpecifier6444 = new BitSet(new long[]{0x0000000000000002L,0x2020000004000000L});
    public static final BitSet FOLLOW_SPECIFY_in_classSpecifier6473 = new BitSet(new long[]{0x0000000000000002L,0x2020000004000000L});
    public static final BitSet FOLLOW_classInstantiation_in_classSpecifier6512 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_packageQualifiedClass6561 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_packageQualifiedClass6589 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_packageQualifiedClass6623 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_packageQualifiedClass6664 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_packageQualifiedClass6694 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_unqualifiedClass6772 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_unqualifiedClass6801 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_unqualifiedClass6835 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUPER_in_superQualifiedClass6897 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_superQualifiedClass6916 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_superQualifiedClass6944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_packageQualifiedClass_in_classInstantiation7004 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_unqualifiedClass_in_classInstantiation7032 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_superQualifiedClass_in_classInstantiation7060 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_positionalArguments_in_classInstantiation7096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiedTypes7146 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_primaryType_in_satisfiedTypes7176 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_satisfiedTypes7228 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_set_in_satisfiedTypes7263 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_primaryType_in_satisfiedTypes7313 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_CASE_TYPES_in_caseTypes7365 = new BitSet(new long[]{0x0000000000000000L,0x200008000400002CL});
    public static final BitSet FOLLOW_caseType_in_caseTypes7383 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_caseTypes7425 = new BitSet(new long[]{0x0000000000000000L,0x200008000400002CL});
    public static final BitSet FOLLOW_set_in_caseTypes7461 = new BitSet(new long[]{0x0000000000000000L,0x200008000400002CL});
    public static final BitSet FOLLOW_caseType_in_caseTypes7511 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_primaryType_in_caseType7565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_caseType7582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ABSTRACTED_TYPE_in_abstractedType7617 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_primaryType_in_abstractedType7633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_parameters7662 = new BitSet(new long[]{0x0002000804000000L,0x200108200400002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_parameterDeclarationOrRef_in_parameters7690 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_parameters7725 = new BitSet(new long[]{0x0002000805000000L,0x200108200400002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_parameterDeclarationOrRef_in_parameters7765 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_parameters7845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_parameter7874 = new BitSet(new long[]{0x0002000800000000L,0x200108000400002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotations_in_parameter7882 = new BitSet(new long[]{0x0002000800000000L,0x200008000400000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_parameterDeclaration_in_parameter7890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_parameterDeclaration7943 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_parameterDeclaration7963 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_parameterDeclaration7983 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_parameterDeclaration8003 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_parameterDeclaration8023 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_parameterDeclaration8049 = new BitSet(new long[]{0x0000000000000002L,0x0000280000000100L});
    public static final BitSet FOLLOW_specifier_in_parameterDeclaration8087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_parameterDeclaration8140 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_parameterDeclaration8185 = new BitSet(new long[]{0x0000000020000002L,0x0000200000000100L});
    public static final BitSet FOLLOW_functionSpecifier_in_parameterDeclaration8230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_parameterRef8282 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_parameterRef8308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameterRef_in_parameterDeclarationOrRef8356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameter_in_parameterDeclarationOrRef8381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeParameters8410 = new BitSet(new long[]{0x1000000004000000L,0x2000000001000020L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters8428 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_COMMA_in_typeParameters8456 = new BitSet(new long[]{0x1000000005000000L,0x2000000001000021L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters8490 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeParameters8541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_typeParameter8578 = new BitSet(new long[]{0x1000000000000000L,0x2000000001000020L});
    public static final BitSet FOLLOW_variance_in_typeParameter8597 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_typeParameter8626 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_typeDefault_in_typeParameter8652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_variance8700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OUT_in_variance8716 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_typeConstraint8749 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_TYPE_CONSTRAINT_in_typeConstraint8757 = new BitSet(new long[]{0x0000000000100012L,0x2000088000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_typeConstraint8783 = new BitSet(new long[]{0x0000000000100012L,0x0000088000000000L});
    public static final BitSet FOLLOW_typeParameters_in_typeConstraint8821 = new BitSet(new long[]{0x0000000000100012L,0x0000008000000000L});
    public static final BitSet FOLLOW_caseTypes_in_typeConstraint8859 = new BitSet(new long[]{0x0000000000000012L,0x0000008000000000L});
    public static final BitSet FOLLOW_satisfiedTypes_in_typeConstraint8903 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_abstractedType_in_typeConstraint8941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TYPE_CONSTRAINT_in_anonymousTypeConstraint8981 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_anonymousTypeConstraint8997 = new BitSet(new long[]{0x0000000000100002L,0x0000008000000000L});
    public static final BitSet FOLLOW_caseTypes_in_anonymousTypeConstraint9024 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000000L});
    public static final BitSet FOLLOW_satisfiedTypes_in_anonymousTypeConstraint9061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeConstraint_in_typeConstraints9119 = new BitSet(new long[]{0x0000000004000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_anonymousTypeConstraint_in_anonymousTypeConstraints9177 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_stringLiteral_in_annotationListStart9214 = new BitSet(new long[]{0x0002000000000000L,0x2000000000000020L,0x000000000000000AL});
    public static final BitSet FOLLOW_annotation_in_annotationListStart9216 = new BitSet(new long[]{0x0002000000000000L,0x2000000000000020L,0x000000000000000AL});
    public static final BitSet FOLLOW_set_in_annotationListStart9226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_destructureStart9253 = new BitSet(new long[]{0x0002000004000000L,0x2000000000000028L,0x000000000000000AL});
    public static final BitSet FOLLOW_compilerAnnotations_in_destructureStart9255 = new BitSet(new long[]{0x0002000000000000L,0x2000000000000028L,0x000000000000000AL});
    public static final BitSet FOLLOW_LBRACKET_in_destructureStart9265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_destructureStart9267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_destructureStart9269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_destructureStart9271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_destructureStart9273 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_destructureStart9275 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_destructureStart9277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_declarationOrStatement9310 = new BitSet(new long[]{0x0343800B40C19880L,0x2E7508100619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_destructure_in_declarationOrStatement9334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_declarationOrStatement9362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assertion_in_declarationOrStatement9388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_declarationOrStatement9416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_declarationOrStatement9438 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotations_in_declaration9494 = new BitSet(new long[]{0x0202000800801080L,0x200008000411000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_classDeclaration_in_declaration9517 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceDeclaration_in_declaration9543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_aliasDeclaration_in_declaration9559 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectDeclaration_in_declaration9575 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_setterDeclaration_in_declaration9591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_voidOrInferredMethodDeclaration_in_declaration9607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_inferredAttributeDeclaration_in_declaration9623 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typedMethodOrAttributeDeclaration_in_declaration9639 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructor_in_declaration9655 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotatedDeclarationStart9698 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_annotation_in_annotatedDeclarationStart9701 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_unambiguousType_in_annotatedDeclarationStart9718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_annotatedDeclarationStart9722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotatedAssertionStart9740 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotation_in_annotatedAssertionStart9743 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000020L});
    public static final BitSet FOLLOW_ASSERT_in_annotatedAssertionStart9746 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_declarationStart9766 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_declarationStart9774 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart9776 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_declarationStart9789 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart9791 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSIGN_in_declarationStart9804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_declarationStart9812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_declarationStart9820 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_declarationStart9828 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart9830 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_declarationStart9843 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALIAS_in_declarationStart9851 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_declarationStart9860 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_declarationStart9862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_declarationStart9870 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart9872 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType9900 = new BitSet(new long[]{0x0000010000000000L,0x0000000000200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType9920 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType9924 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType9926 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType9939 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType9941 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType9959 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType9963 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType9965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_unambiguousType9974 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType9983 = new BitSet(new long[]{0x0000010000000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType9986 = new BitSet(new long[]{0x0000010000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType9990 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType9992 = new BitSet(new long[]{0x0000010000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType10012 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10014 = new BitSet(new long[]{0x0000000000000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10026 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10030 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10032 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_set_in_unambiguousType10052 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_unambiguousType10065 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10073 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10082 = new BitSet(new long[]{0x0000010001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10085 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10089 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10091 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType10112 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10114 = new BitSet(new long[]{0x0000000001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10125 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10129 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10131 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_COMMA_in_unambiguousType10161 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10172 = new BitSet(new long[]{0x0000010001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10175 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10179 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10181 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType10206 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10208 = new BitSet(new long[]{0x0000000001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10222 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10226 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10228 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_set_in_unambiguousType10259 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10272 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_directiveStatement_in_statement10293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_controlStatement_in_statement10309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionOrSpecificationStatement_in_statement10325 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_expressionOrSpecificationStatement10363 = new BitSet(new long[]{0x0000000021000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_expressionOrSpecificationStatement10399 = new BitSet(new long[]{0x0000000001000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_expressionOrSpecificationStatement10444 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMMA_in_expressionOrSpecificationStatement10474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_directive_in_directiveStatement10523 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_directiveStatement10540 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_returnDirective_in_directive10569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_throwDirective_in_directive10585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_breakDirective_in_directive10601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_continueDirective_in_directive10617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RETURN_in_returnDirective10646 = new BitSet(new long[]{0x0142800B00408002L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_returnDirective10673 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THROW_in_throwDirective10713 = new BitSet(new long[]{0x0100800B00408002L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_throwDirective10740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BREAK_in_breakDirective10780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CONTINUE_in_continueDirective10809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_typeSpecifier10848 = new BitSet(new long[]{0x0000000000000002L,0x200008000400000CL});
    public static final BitSet FOLLOW_SPECIFY_in_typeSpecifier10877 = new BitSet(new long[]{0x0000000000000002L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_typeSpecifier10914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_typeDefault10954 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_typeDefault10971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_specifier11000 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_specifier11016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_lazySpecifier11045 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_lazySpecifier11061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_functionSpecifier11100 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_SPECIFY_in_functionSpecifier11128 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_functionSpecifier11154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assignmentExpression_in_expression11191 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonstringLiteral_in_base11220 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringExpression_in_base11236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaLiteral_in_base11252 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumeration_in_base11268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuple_in_base11284 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dynamicObject_in_base11300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectExpression_in_base11316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parExpression_in_base11332 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_baseReferenceOrParameterized_in_base11348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_baseReferenceOrParameterized11404 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000100L});
    public static final BitSet FOLLOW_typeParameters_in_baseReferenceOrParameterized11430 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_baseReferenceOrParameterized11473 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_baseReference_in_baseReferenceOrParameterized11500 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selfReference_in_baseReferenceOrParameterized11516 = new BitSet(new long[]{0x0000000000000002L,0x0000404000000400L});
    public static final BitSet FOLLOW_memberSelectionOperator_in_baseReferenceOrParameterized11564 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_baseReferenceOrParameterized11584 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000100L});
    public static final BitSet FOLLOW_typeParameters_in_baseReferenceOrParameterized11616 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_baseReferenceOrParameterized11667 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_memberReference_in_baseReference11733 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeReference_in_baseReference11749 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_base_in_primary11784 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_qualifiedReference_in_primary11806 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_indexOrIndexRange_in_primary11824 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_positionalArguments_in_primary11845 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_namedArguments_in_primary11866 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_LPAREN_in_specifierParametersStart11900 = new BitSet(new long[]{0x0202000804801080L,0x200108200411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_RPAREN_in_specifierParametersStart11916 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_SPECIFY_in_specifierParametersStart11919 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_specifierParametersStart11921 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifierParametersStart_in_specifierParametersStart11923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_specifierParametersStart11939 = new BitSet(new long[]{0x0202000800801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_specifierParametersStart11941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberSelectionOperator_in_qualifiedReference11968 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberReference_in_qualifiedReference11996 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeReference_in_qualifiedReference12016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MEMBER_OP_in_memberSelectionOperator12083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SAFE_MEMBER_OP_in_memberSelectionOperator12099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPREAD_OP_in_memberSelectionOperator12115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_enumeration12144 = new BitSet(new long[]{0x0143800B04408000L,0x227508012618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_sequencedArgument_in_enumeration12172 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_enumeration12199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tuple12228 = new BitSet(new long[]{0x0143800B04408000L,0x227508022618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_sequencedArgument_in_tuple12255 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_tuple12282 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_dynamicObject12324 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_LBRACKET_in_dynamicObject12326 = new BitSet(new long[]{0x0143800B04408000L,0x227508022618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgument_in_dynamicObject12377 = new BitSet(new long[]{0x0143800B04408000L,0x227508022618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_anonymousArgument_in_dynamicObject12411 = new BitSet(new long[]{0x0143800B04408000L,0x227508022618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_sequencedArgument_in_dynamicObject12449 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_dynamicObject12476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionExpression_in_valueCaseList12519 = new BitSet(new long[]{0x0000000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_COMMA_in_valueCaseList12561 = new BitSet(new long[]{0x0100800B01408002L,0xA23500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_UNION_OP_in_valueCaseList12588 = new BitSet(new long[]{0x0100800B01408002L,0xA23500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_intersectionExpression_in_valueCaseList12634 = new BitSet(new long[]{0x0000000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_memberName_in_memberReference12699 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_memberReference12739 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_typeReference12779 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_typeReference12820 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArgumentsStart12859 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000DL});
    public static final BitSet FOLLOW_type_in_typeArgumentsStart12873 = new BitSet(new long[]{0x0000000001000000L,0x0000080000000001L});
    public static final BitSet FOLLOW_set_in_typeArgumentsStart12881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArgumentsStart12901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeArgumentsStart12916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_indexOrIndexRange12964 = new BitSet(new long[]{0x0142804B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_ELLIPSIS_in_indexOrIndexRange12992 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange13014 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange13057 = new BitSet(new long[]{0x0000004000000000L,0x0000020280000000L});
    public static final BitSet FOLLOW_ELLIPSIS_in_indexOrIndexRange13091 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RANGE_OP_in_indexOrIndexRange13126 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange13153 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_indexOrIndexRange13178 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange13204 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_functionOrExpression_in_indexOrIndexRange13240 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_indexOrIndexRange13266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_additiveExpression_in_index13295 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_namedArguments13325 = new BitSet(new long[]{0x0143800B04408000L,0x227508012618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgument_in_namedArguments13377 = new BitSet(new long[]{0x0143800B04408000L,0x227508012618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_anonymousArgument_in_namedArguments13411 = new BitSet(new long[]{0x0143800B04408000L,0x227508012618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_sequencedArgument_in_namedArguments13449 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_namedArguments13476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_sequencedArgument13505 = new BitSet(new long[]{0x0143800B00408000L,0x227508002618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehension_in_sequencedArgument13561 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_positionalArgument_in_sequencedArgument13598 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_spreadArgument_in_sequencedArgument13634 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_COMMA_in_sequencedArgument13680 = new BitSet(new long[]{0x0143800B01408002L,0x227508002618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehension_in_sequencedArgument13746 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_positionalArgument_in_sequencedArgument13789 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_spreadArgument_in_sequencedArgument13832 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_namedArgument13917 = new BitSet(new long[]{0x0002000800000000L,0x200008000410002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_namedSpecifiedArgument_in_namedArgument13934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentDeclaration_in_namedArgument13956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_namedSpecifiedArgument13997 = new BitSet(new long[]{0x0000000000000000L,0x0000240000000000L});
    public static final BitSet FOLLOW_specifier_in_namedSpecifiedArgument14023 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_namedSpecifiedArgument14059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_anonymousArgument14097 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_anonymousArgument14123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_objectArgument14152 = new BitSet(new long[]{0x0000080000000000L,0x2000048000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_objectArgument14179 = new BitSet(new long[]{0x0000080000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_extendedType_in_objectArgument14217 = new BitSet(new long[]{0x0000000000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_objectArgument14256 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_classBody_in_objectArgument14294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_objectArgument14324 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodArgument14381 = new BitSet(new long[]{0x0000000020000000L,0x20002C0000000124L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodArgument14409 = new BitSet(new long[]{0x0000000020000000L,0x20002C0000000124L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_voidOrInferredMethodArgument14446 = new BitSet(new long[]{0x0000000020000000L,0x00002C0000000104L});
    public static final BitSet FOLLOW_typeParameters_in_voidOrInferredMethodArgument14484 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_parameters_in_voidOrInferredMethodArgument14521 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_block_in_voidOrInferredMethodArgument14558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_voidOrInferredMethodArgument14599 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_voidOrInferredMethodArgument14642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_inferredGetterArgument14699 = new BitSet(new long[]{0x0000000020000000L,0x2000240000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_inferredGetterArgument14726 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_inferredGetterArgument14764 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_in_inferredGetterArgument14805 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_inferredGetterArgument14841 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_inferredGetterArgument14885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typedMethodOrGetterArgument14953 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_typedMethodOrGetterArgument14982 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_typedMethodOrGetterArgument15008 = new BitSet(new long[]{0x0000000020000000L,0x00002C0000000104L});
    public static final BitSet FOLLOW_typeParameters_in_typedMethodOrGetterArgument15056 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_typedMethodOrGetterArgument15101 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_block_in_typedMethodOrGetterArgument15148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_typedMethodOrGetterArgument15197 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument15250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_typedMethodOrGetterArgument15316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_in_typedMethodOrGetterArgument15365 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_typedMethodOrGetterArgument15407 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument15461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_untypedMethodOrGetterArgument15533 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_untypedMethodOrGetterArgument15582 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_functionSpecifier_in_untypedMethodOrGetterArgument15627 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_untypedMethodOrGetterArgument15705 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_untypedMethodOrGetterArgument15751 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectArgument_in_namedArgumentDeclaration15788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typedMethodOrGetterArgument_in_namedArgumentDeclaration15804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_voidOrInferredMethodArgument_in_namedArgumentDeclaration15820 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_inferredGetterArgument_in_namedArgumentDeclaration15836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_untypedMethodOrGetterArgument_in_namedArgumentDeclaration15852 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_namedArgumentStart15880 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_specificationStart_in_namedArgumentStart15890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_namedArgumentStart15894 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_namedAnnotationArgumentsStart15912 = new BitSet(new long[]{0x0302800B04C09080L,0x223508010619812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgumentStart_in_namedAnnotationArgumentsStart15919 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_iterableArgumentStart_in_namedAnnotationArgumentsStart15923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RBRACE_in_namedAnnotationArgumentsStart15927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_iterableArgumentStart15945 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_iterableArgumentStart15947 = new BitSet(new long[]{0x0000000001000000L,0x0000040100000000L});
    public static final BitSet FOLLOW_set_in_iterableArgumentStart15949 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_specificationStart15973 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_parameters_in_specificationStart15975 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_set_in_specificationStart15978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_parExpression16004 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_parExpression16021 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_parExpression16037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_positionalArguments16074 = new BitSet(new long[]{0x0143800B04408000L,0x227508202618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_sequencedArgument_in_positionalArguments16103 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_positionalArguments16130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_positionalArgument16167 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_spreadArgument16196 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_unionExpression_in_spreadArgument16212 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_anonParametersStart16237 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_LPAREN_in_anonParametersStart16244 = new BitSet(new long[]{0x0202000804801080L,0x200108200411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_RPAREN_in_anonParametersStart16260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_anonParametersStart16268 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_anonParametersStart16271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RPAREN_in_anonParametersStart16275 = new BitSet(new long[]{0x0000000020000000L,0x1000000000000004L});
    public static final BitSet FOLLOW_set_in_anonParametersStart16277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_anonParametersStart16293 = new BitSet(new long[]{0x0202000800801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_anonParametersStart16295 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_nonemptyParametersStart16319 = new BitSet(new long[]{0x0202000804801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_compilerAnnotations_in_nonemptyParametersStart16321 = new BitSet(new long[]{0x0202000800801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_nonemptyParametersStart16323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousFunction_in_functionOrExpression16360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_let_in_functionOrExpression16376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifExpression_in_functionOrExpression16392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchExpression_in_functionOrExpression16408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_functionOrExpression16426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_letClause_in_let16455 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_patternStart16488 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_patternStart16490 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePatternStart_in_patternStart16501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_pattern_in_letVariable16538 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_variable_in_letVariable16566 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_letVariable16602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LET_in_letClause16642 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_LPAREN_in_letClause16658 = new BitSet(new long[]{0x0002000004000000L,0x200008200400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_letVariable_in_letClause16686 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_letClause16718 = new BitSet(new long[]{0x0002000004000000L,0x200008000400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_letVariable_in_letClause16744 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_letClause16784 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_letClause16800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchHeader_in_switchExpression16829 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_caseExpressions_in_switchExpression16845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_caseExpression_in_caseExpressions16892 = new BitSet(new long[]{0x0000008000080002L});
    public static final BitSet FOLLOW_defaultCaseExpression_in_caseExpressions16929 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_CLAUSE_in_caseExpression16973 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_caseItemList_in_caseExpression16990 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_caseExpression17006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_defaultCaseExpression17035 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_defaultCaseExpression17052 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_ifExpression17081 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_thenElseClauses_in_ifExpression17097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifExpression_in_conditionalBranch17126 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_let_in_conditionalBranch17142 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_disjunctionExpression_in_conditionalBranch17158 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditions_in_thenElseClauses17187 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_THEN_CLAUSE_in_thenElseClauses17203 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_thenElseClauses17221 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_thenElseClauses17237 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_thenElseClauses17255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_anonymousFunction17303 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000100L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_anonymousFunction17331 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000100L});
    public static final BitSet FOLLOW_typeParameters_in_anonymousFunction17370 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_anonymousFunction17399 = new BitSet(new long[]{0x0000000024000000L,0x1000000000000104L});
    public static final BitSet FOLLOW_parameters_in_anonymousFunction17428 = new BitSet(new long[]{0x0000000024000000L,0x1000000000000104L});
    public static final BitSet FOLLOW_typeConstraints_in_anonymousFunction17467 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_COMPUTE_in_anonymousFunction17505 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_anonymousFunction17526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_anonymousFunction17554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forComprehensionClause_in_comprehension17602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifComprehensionClause_in_comprehension17618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forComprehensionClause_in_comprehensionClause17647 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifComprehensionClause_in_comprehensionClause17682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionComprehensionClause_in_comprehensionClause17699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_expressionComprehensionClause17729 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_forComprehensionClause17766 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_forIterator_in_forComprehensionClause17782 = new BitSet(new long[]{0x0143800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehensionClause_in_forComprehensionClause17798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_ifComprehensionClause17831 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_ifComprehensionClause17847 = new BitSet(new long[]{0x0143800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehensionClause_in_ifComprehensionClause17863 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_thenElseExpression_in_assignmentExpression17907 = new BitSet(new long[]{0x0800000410000222L,0x0008200800801000L,0x0000000000000001L});
    public static final BitSet FOLLOW_assignmentOperator_in_assignmentExpression17933 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_assignmentExpression17956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_assignmentOperator17996 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ADD_SPECIFY_in_assignmentOperator18006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUBTRACT_SPECIFY_in_assignmentOperator18016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MULTIPLY_SPECIFY_in_assignmentOperator18026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIVIDE_SPECIFY_in_assignmentOperator18036 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REMAINDER_SPECIFY_in_assignmentOperator18046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERSECT_SPECIFY_in_assignmentOperator18056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNION_SPECIFY_in_assignmentOperator18066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPLEMENT_SPECIFY_in_assignmentOperator18076 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AND_SPECIFY_in_assignmentOperator18086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OR_SPECIFY_in_assignmentOperator18096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_disjunctionExpression_in_thenElseExpression18121 = new BitSet(new long[]{0x0000008000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_thenElseOperator_in_thenElseExpression18147 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_disjunctionExpression_in_thenElseExpression18169 = new BitSet(new long[]{0x0000008000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_thenElseOperator18209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THEN_CLAUSE_in_thenElseOperator18226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conjunctionExpression_in_disjunctionExpression18257 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_disjunctionOperator_in_disjunctionExpression18283 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conjunctionExpression_in_disjunctionExpression18306 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_OR_OP_in_disjunctionOperator18346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_conjunctionExpression18378 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_conjunctionOperator_in_conjunctionExpression18404 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_conjunctionExpression18427 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_AND_OP_in_conjunctionOperator18467 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_notOperator_in_logicalNegationExpression18497 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_logicalNegationExpression18516 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_equalityExpression_in_logicalNegationExpression18532 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_notOperator18561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_comparisonExpression_in_equalityExpression18593 = new BitSet(new long[]{0x0020020000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_equalityOperator_in_equalityExpression18619 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_comparisonExpression_in_equalityExpression18642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EQUAL_OP_in_equalityOperator18682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_EQUAL_OP_in_equalityOperator18699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTICAL_OP_in_equalityOperator18715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression18746 = new BitSet(new long[]{0x3000080002100002L,0x0000188000000003L});
    public static final BitSet FOLLOW_comparisonOperator_in_comparisonExpression18774 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression18797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_largerOperator_in_comparisonExpression18819 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression18842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_smallerOperator_in_comparisonExpression18864 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression18887 = new BitSet(new long[]{0x0000000000000002L,0x0000180000000000L});
    public static final BitSet FOLLOW_smallerOperator_in_comparisonExpression18922 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression18936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeOperator_in_comparisonExpression18971 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_comparisonExpression18993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALL_AS_OP_in_smallerOperator19039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_smallerOperator19055 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGE_AS_OP_in_largerOperator19084 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGER_OP_in_largerOperator19100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPARE_OP_in_comparisonOperator19129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_comparisonOperator19146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_typeOperator19175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_typeOperator19191 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_typeOperator19207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_TYPES_in_typeOperator19223 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_entryRangeExpression_in_existenceEmptinessExpression19254 = new BitSet(new long[]{0x0000040000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_existsNonemptyOperator_in_existenceEmptinessExpression19282 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXISTS_in_existsNonemptyOperator19328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NONEMPTY_in_existsNonemptyOperator19345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_additiveExpression_in_entryRangeExpression19376 = new BitSet(new long[]{0x0000010000000002L,0x0000020080000000L});
    public static final BitSet FOLLOW_rangeIntervalEntryOperator_in_entryRangeExpression19402 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_additiveExpression_in_entryRangeExpression19425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RANGE_OP_in_rangeIntervalEntryOperator19465 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_rangeIntervalEntryOperator19482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ENTRY_OP_in_rangeIntervalEntryOperator19498 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_scaleExpression_in_additiveExpression19529 = new BitSet(new long[]{0x0000000200000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_additiveOperator_in_additiveExpression19555 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_scaleExpression_in_additiveExpression19578 = new BitSet(new long[]{0x0000000200000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_SUM_OP_in_additiveOperator19618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIFFERENCE_OP_in_additiveOperator19635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_multiplicativeExpression_in_scaleExpression19664 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_scaleOperator_in_scaleExpression19690 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_scaleExpression_in_scaleExpression19712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionExpression_in_multiplicativeExpression19754 = new BitSet(new long[]{0x0000000000000002L,0x0000000460000000L});
    public static final BitSet FOLLOW_multiplicativeOperator_in_multiplicativeExpression19780 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_unionExpression_in_multiplicativeExpression19803 = new BitSet(new long[]{0x0000000000000002L,0x0000000460000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_multiplicativeOperator19843 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QUOTIENT_OP_in_multiplicativeOperator19860 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REMAINDER_OP_in_multiplicativeOperator19876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionExpression_in_unionExpression19907 = new BitSet(new long[]{0x0000000008000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_unionOperator_in_unionExpression19933 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_intersectionExpression_in_unionExpression19956 = new BitSet(new long[]{0x0000000008000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_unionOperator20000 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPLEMENT_OP_in_unionOperator20016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_negationComplementExpression_in_intersectionExpression20047 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_intersectionOperator_in_intersectionExpression20073 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_negationComplementExpression_in_intersectionExpression20096 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_intersectionOperator20140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unaryMinusOrComplementOperator_in_negationComplementExpression20169 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_negationComplementExpression_in_negationComplementExpression20188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exponentiationExpression_in_negationComplementExpression20204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIFFERENCE_OP_in_unaryMinusOrComplementOperator20233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUM_OP_in_unaryMinusOrComplementOperator20250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_incrementDecrementExpression_in_exponentiationExpression20279 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_exponentiationOperator_in_exponentiationExpression20305 = new BitSet(new long[]{0x0100800900408000L,0x222500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_exponentiationExpression_in_exponentiationExpression20327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_POWER_OP_in_exponentiationOperator20367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SCALE_OP_in_scaleOperator20397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_prefixOperator_in_incrementDecrementExpression20427 = new BitSet(new long[]{0x0100800900408000L,0x222500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_incrementDecrementExpression_in_incrementDecrementExpression20445 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_postfixIncrementDecrementExpression_in_incrementDecrementExpression20461 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DECREMENT_OP_in_prefixOperator20490 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INCREMENT_OP_in_prefixOperator20507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_in_postfixIncrementDecrementExpression20537 = new BitSet(new long[]{0x0100000100000002L});
    public static final BitSet FOLLOW_postfixOperator_in_postfixIncrementDecrementExpression20565 = new BitSet(new long[]{0x0100000100000002L});
    public static final BitSet FOLLOW_DECREMENT_OP_in_postfixOperator20605 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INCREMENT_OP_in_postfixOperator20622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THIS_in_selfReference20652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUPER_in_selfReference20668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OUTER_in_selfReference20685 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_selfReference20701 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NATURAL_LITERAL_in_nonstringLiteral20734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FLOAT_LITERAL_in_nonstringLiteral20751 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_nonstringLiteral20768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_stringLiteral20798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VERBATIM_STRING_in_stringLiteral20815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_stringExpression20855 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_START_in_stringExpression20871 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_stringExpression20889 = new BitSet(new long[]{0x0000000000000000L,0x0002800000000000L});
    public static final BitSet FOLLOW_STRING_MID_in_stringExpression20915 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_stringExpression20937 = new BitSet(new long[]{0x0000000000000000L,0x0002800000000000L});
    public static final BitSet FOLLOW_STRING_END_in_stringExpression20964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArguments21002 = new BitSet(new long[]{0x1000000000000000L,0x200008000500000DL});
    public static final BitSet FOLLOW_variance_in_typeArguments21042 = new BitSet(new long[]{0x0000000001000000L,0x200008000400000DL});
    public static final BitSet FOLLOW_type_in_typeArguments21082 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_typeArguments21133 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_COMMA_in_typeArguments21179 = new BitSet(new long[]{0x1000000001000000L,0x200008000500000DL});
    public static final BitSet FOLLOW_variance_in_typeArguments21219 = new BitSet(new long[]{0x0000000001000000L,0x200008000400000DL});
    public static final BitSet FOLLOW_type_in_typeArguments21265 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_typeArguments21356 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeArguments21442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_variadicType21490 = new BitSet(new long[]{0x0000000000000002L,0x0010000020000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_variadicType21516 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUM_OP_in_variadicType21544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_variadicType21573 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_defaultedType21619 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_defaultedType21645 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_defaultedType21672 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_spreadType21710 = new BitSet(new long[]{0x0000000000000002L,0x200008000400000CL});
    public static final BitSet FOLLOW_unionType_in_spreadType21738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tupleType21778 = new BitSet(new long[]{0x0000000000000000L,0x200008022400000CL});
    public static final BitSet FOLLOW_spreadType_in_tupleType21806 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_defaultedType_in_tupleType21836 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_COMMA_in_tupleType21870 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_defaultedType_in_tupleType21896 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_tupleType21936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_groupedType21965 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_groupedType21983 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_groupedType21999 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_iterableType22027 = new BitSet(new long[]{0x0000000000000000L,0x200008010400000CL});
    public static final BitSet FOLLOW_variadicType_in_iterableType22052 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_iterableType22076 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_type22130 = new BitSet(new long[]{0x0000000020000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_anonymousTypeConstraints_in_type22157 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_COMPUTE_in_type22184 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_entryType_in_type22193 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_entryType_in_type22209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_entryType22249 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_ENTRY_OP_in_entryType22275 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_unionType_in_entryType22309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionType_in_unionType22374 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_unionType22415 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_intersectionType_in_unionType22455 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_primaryType_in_intersectionType22545 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_intersectionType22586 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_primaryType_in_intersectionType22626 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_qualifiedType_in_atomicType22705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tupleType_in_atomicType22722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_iterableType_in_atomicType22739 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_atomicType_in_primaryType22777 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_OPTIONAL_in_primaryType22803 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_LBRACKET_in_primaryType22824 = new BitSet(new long[]{0x0000000000000000L,0x0000000200008000L});
    public static final BitSet FOLLOW_NATURAL_LITERAL_in_primaryType22856 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_primaryType22890 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_LPAREN_in_primaryType22911 = new BitSet(new long[]{0x0000000000000000L,0x200008202400000CL});
    public static final BitSet FOLLOW_spreadType_in_primaryType22949 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_defaultedType_in_primaryType22991 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_primaryType23035 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_defaultedType_in_primaryType23069 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_primaryType23123 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_baseType23181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_groupedType_in_baseType23203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_baseType23219 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_baseType23235 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_baseType23253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_baseType_in_qualifiedType23282 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_qualifiedType23308 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_qualifiedType23320 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_typeName_in_typeNameWithArguments23360 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_typeNameWithArguments23387 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotations23451 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotation_in_annotations23490 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotationName_in_annotation23531 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000104L});
    public static final BitSet FOLLOW_positionalArguments_in_annotation23554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArguments_in_annotation23583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotation_in_compilerAnnotations23687 = new BitSet(new long[]{0x0000000004000002L});
    public static final BitSet FOLLOW_COMPILER_ANNOTATION_in_compilerAnnotation23727 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotationName_in_compilerAnnotation23744 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_compilerAnnotation23774 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_stringLiteral_in_compilerAnnotation23786 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_conditions23828 = new BitSet(new long[]{0x2142840B00408000L,0x227508A0061A813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_condition_in_conditions23854 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_conditions23874 = new BitSet(new long[]{0x2142840B01408000L,0x227508A0061A813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_condition_in_conditions23909 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_conditions23971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_existsCondition_in_condition24000 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonemptyCondition_in_condition24016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_isCondition_in_condition24032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_satisfiesCondition_in_condition24049 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_booleanCondition_in_condition24065 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_booleanCondition24106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_existsCondition24149 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_EXISTS_in_existsCondition24176 = new BitSet(new long[]{0x0102800B04408000L,0x223508000618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_letVariable_in_existsCondition24234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_existsCondition24268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_existsCondition24288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_nonemptyCondition24341 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_NONEMPTY_in_nonemptyCondition24368 = new BitSet(new long[]{0x0102800B04408000L,0x223508000618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_letVariable_in_nonemptyCondition24426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_nonemptyCondition24460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_nonemptyCondition24481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_isCondition24530 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_IS_OP_in_isCondition24557 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_isCondition24574 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_isConditionVariable_in_isCondition24618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_isCondition24646 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_isConditionVariable24695 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_isConditionVariable24711 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiesCondition24740 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_satisfiesCondition24757 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeName_in_satisfiesCondition24774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifElse_in_controlStatement24803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchCaseElse_in_controlStatement24820 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_whileLoop_in_controlStatement24837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forElse_in_controlStatement24854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tryCatchFinally_in_controlStatement24871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dynamic_in_controlStatement24887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_controlBlock24925 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_dynamic24991 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_dynamic25008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifBlock_in_ifElse25045 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_elseBlock_in_ifElse25073 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_ifBlock25113 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_ifBlock25130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_ifBlock25146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_elseBlock25175 = new BitSet(new long[]{0x0040000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_elseIf_in_elseBlock25202 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_elseBlock25232 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifElse_in_elseIf25271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchHeader_in_switchCaseElse25308 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_cases_in_switchCaseElse25325 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SWITCH_CLAUSE_in_switchHeader25354 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_LPAREN_in_switchHeader25371 = new BitSet(new long[]{0x0102800B04408000L,0x223508200618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_switched_in_switchHeader25397 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_switchHeader25425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifiedVariable_in_switched25484 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_switched25504 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_caseBlock_in_cases25561 = new BitSet(new long[]{0x0000008000080002L});
    public static final BitSet FOLLOW_defaultCaseBlock_in_cases25598 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_CLAUSE_in_caseBlock25642 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_caseItemList_in_caseBlock25659 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_caseBlock25675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_defaultCaseBlock25704 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_defaultCaseBlock25721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_caseItemList25750 = new BitSet(new long[]{0x2100800B00408000L,0x223500A00610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_caseItem_in_caseItemList25771 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_caseItemList25798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_isCaseCondition_in_caseItem25832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_satisfiesCaseCondition_in_caseItem25853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_matchCaseCondition_in_caseItem25869 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_valueCaseList_in_matchCaseCondition25898 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_isCaseCondition25927 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_isCaseCondition25944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiesCaseCondition25973 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_satisfiesCaseCondition25990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forBlock_in_forElse26027 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_failBlock_in_forElse26054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_forBlock26094 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_forIterator_in_forBlock26111 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_forBlock26128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_failBlock26157 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_failBlock26174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_forIterator26212 = new BitSet(new long[]{0x0002000004000000L,0x200008200400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_pattern_in_forIterator26253 = new BitSet(new long[]{0x1000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_variable_in_forIterator26284 = new BitSet(new long[]{0x1000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_containment_in_forIterator26324 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_forIterator26360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_containment26392 = new BitSet(new long[]{0x0100800B00408002L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_containment26410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_whileBlock_in_whileLoop26453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_WHILE_CLAUSE_in_whileBlock26482 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_whileBlock26498 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_whileBlock26514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tryBlock_in_tryCatchFinally26551 = new BitSet(new long[]{0x0000400000200002L});
    public static final BitSet FOLLOW_catchBlock_in_tryCatchFinally26578 = new BitSet(new long[]{0x0000400000200002L});
    public static final BitSet FOLLOW_finallyBlock_in_tryCatchFinally26617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TRY_CLAUSE_in_tryBlock26657 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000104L});
    public static final BitSet FOLLOW_resources_in_tryBlock26684 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_tryBlock26704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_tryBlock26732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CATCH_CLAUSE_in_catchBlock26771 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_catchVariable_in_catchBlock26788 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_catchBlock26804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_catchVariable26833 = new BitSet(new long[]{0x0002000004000000L,0x200008200400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variable_in_catchVariable26858 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_catchVariable26884 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FINALLY_CLAUSE_in_finallyBlock26915 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_finallyBlock26932 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_resources26961 = new BitSet(new long[]{0x0102800B04408000L,0x223508200618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_resource_in_resources26987 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_resources27018 = new BitSet(new long[]{0x0102800B04408000L,0x223508000618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_resource_in_resources27043 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_resources27079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifiedVariable_in_resource27140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_resource27163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_specifiedVariable27194 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_specifiedVariable27221 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_variable27261 = new BitSet(new long[]{0x0002000000000000L,0x200008000400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_var_in_variable27269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_var27329 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_var27359 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_var27388 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_var27417 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_var27445 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_var27475 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_memberName_in_var27519 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_var27547 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_memberName_in_impliedVariable27587 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_referencePathElement27617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_referencePathElement27634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_referencePathElement_in_referencePath27679 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_PACKAGE_in_referencePath27709 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_referencePath27729 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_referencePathElement_in_referencePath27749 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_referencePath27786 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_referencePathElement_in_referencePath27798 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MODULE_in_moduleLiteral27836 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_moduleLiteral27855 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_packageLiteral27883 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_packageLiteral27902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_classLiteral27930 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_classLiteral27949 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_interfaceLiteral27977 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_interfaceLiteral27996 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_newLiteral28024 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_newLiteral28043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALIAS_in_aliasLiteral28071 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_aliasLiteral28090 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TYPE_CONSTRAINT_in_typeParameterLiteral28118 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_typeParameterLiteral28137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_valueLiteral28174 = new BitSet(new long[]{0x0000000000000000L,0x2000000004000020L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_valueLiteral28196 = new BitSet(new long[]{0x0000000000000000L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_valueLiteral28218 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_functionLiteral28241 = new BitSet(new long[]{0x0000000000000000L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_functionLiteral28255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_memberPathElement28280 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_memberPathElement28306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberPathElement_in_memberModelExpression28369 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_memberModelExpression28392 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_memberModelExpression28410 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberPathElement_in_memberModelExpression28428 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primaryType_in_memberModelExpression28453 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_memberModelExpression28471 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberPathElement_in_memberModelExpression28489 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typeModelExpression28528 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberModelExpression_in_modelExpression28580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeModelExpression_in_modelExpression28597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BACKTICK_in_metaLiteral28624 = new BitSet(new long[]{0x0202000000800080L,0x300008000411082CL,0x0000000000000002L});
    public static final BitSet FOLLOW_moduleLiteral_in_metaLiteral28641 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_packageLiteral_in_metaLiteral28678 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_classLiteral_in_metaLiteral28696 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_newLiteral_in_metaLiteral28714 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_interfaceLiteral_in_metaLiteral28732 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_aliasLiteral_in_metaLiteral28750 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_typeParameterLiteral_in_metaLiteral28768 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_valueLiteral_in_metaLiteral28786 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_functionLiteral_in_metaLiteral28804 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_modelExpression_in_metaLiteral28822 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_BACKTICK_in_metaLiteral28853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedModuleDescriptorStart_in_synpred1_Ceylon164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedPackageDescriptorStart_in_synpred2_Ceylon207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred3_Ceylon2862 = new BitSet(new long[]{0x0202000800801080L,0x200008000411000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_synpred3_Ceylon2864 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePatternStart_in_synpred4_Ceylon2937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_synpred5_Ceylon3002 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred5_Ceylon3004 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_synpred6_Ceylon3040 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred6_Ceylon3042 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePatternStart_in_synpred7_Ceylon3078 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_synpred8_Ceylon3150 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred8_Ceylon3152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_synpred9_Ceylon3188 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred9_Ceylon3190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred10_Ceylon3479 = new BitSet(new long[]{0x0000000000000000L,0x200008002400000CL});
    public static final BitSet FOLLOW_unionType_in_synpred10_Ceylon3481 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_synpred10_Ceylon3484 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_destructureStart_in_synpred11_Ceylon9329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_synpred12_Ceylon9355 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedAssertionStart_in_synpred13_Ceylon9383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationListStart_in_synpred14_Ceylon9409 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_synpred15_Ceylon9534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_synpred15_Ceylon9536 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_synpred15_Ceylon9538 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unambiguousType_in_synpred16_Ceylon9713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred17_Ceylon11387 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000100L});
    public static final BitSet FOLLOW_typeParameters_in_synpred17_Ceylon11389 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_specifierParametersStart_in_synpred17_Ceylon11392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifierParametersStart_in_synpred18_Ceylon11468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MEMBER_OP_in_synpred19_Ceylon11543 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred19_Ceylon11545 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000100L});
    public static final BitSet FOLLOW_typeParameters_in_synpred19_Ceylon11547 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_specifierParametersStart_in_synpred19_Ceylon11550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifierParametersStart_in_synpred20_Ceylon11662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred22_Ceylon12363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousArgument_in_synpred23_Ceylon12398 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeArgumentsStart_in_synpred24_Ceylon12726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeArgumentsStart_in_synpred25_Ceylon12807 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_index_in_synpred26_Ceylon13035 = new BitSet(new long[]{0x0000004000000000L,0x0000020080000000L});
    public static final BitSet FOLLOW_set_in_synpred26_Ceylon13037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred27_Ceylon13363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousArgument_in_synpred28_Ceylon13398 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_synpred29_Ceylon13536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_synpred29_Ceylon13540 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_synpred29_Ceylon13542 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFEFFFFFFFFFFFFFFL,0x000000000000003FL});
    public static final BitSet FOLLOW_set_in_synpred29_Ceylon13544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_synpred30_Ceylon13719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_synpred30_Ceylon13723 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_synpred30_Ceylon13725 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFEFFFFFFFFFFFFFFL,0x000000000000003FL});
    public static final BitSet FOLLOW_set_in_synpred30_Ceylon13727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred31_Ceylon15916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_synpred32_Ceylon16345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_synpred32_Ceylon16347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonParametersStart_in_synpred32_Ceylon16349 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_synpred33_Ceylon16481 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred33_Ceylon16483 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred34_Ceylon16533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_synpred35_Ceylon17665 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_synpred35_Ceylon17667 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFEFFFFFFFFFFFFFFL,0x000000000000003FL});
    public static final BitSet FOLLOW_set_in_synpred35_Ceylon17669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_synpred36_Ceylon21472 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_set_in_synpred36_Ceylon21474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_synpred37_Ceylon21603 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_synpred37_Ceylon21606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_synpred38_Ceylon22113 = new BitSet(new long[]{0x0000000020000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_set_in_synpred38_Ceylon22115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedAnnotationArgumentsStart_in_synpred39_Ceylon23571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred40_Ceylon24206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred41_Ceylon24211 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred41_Ceylon24215 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_synpred41_Ceylon24218 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred41_Ceylon24220 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred42_Ceylon24264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred43_Ceylon24398 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred44_Ceylon24403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred44_Ceylon24407 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_synpred44_Ceylon24410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred44_Ceylon24412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred45_Ceylon24456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred46_Ceylon24601 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_synpred46_Ceylon24603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_synpred47_Ceylon24919 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPILER_ANNOTATION_in_synpred48_Ceylon25466 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_synpred48_Ceylon25468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred48_Ceylon25470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_synpred49_Ceylon25829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_synpred50_Ceylon25850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred51_Ceylon26248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPILER_ANNOTATION_in_synpred52_Ceylon27124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_synpred52_Ceylon27126 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred52_Ceylon27128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_synpred53_Ceylon28562 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_primaryType_in_synpred53_Ceylon28564 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_synpred53_Ceylon28567 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred53_Ceylon28571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_synpred54_Ceylon28660 = new BitSet(new long[]{0x0000000000008000L,0x0000000000000020L});
    public static final BitSet FOLLOW_set_in_synpred54_Ceylon28662 = new BitSet(new long[]{0x0000000000000002L});

}