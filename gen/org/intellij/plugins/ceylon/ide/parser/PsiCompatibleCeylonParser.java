// $ANTLR 3.4 /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g 2015-07-02 07:47:55
 package org.intellij.plugins.ceylon.ide.parser;
                  import com.redhat.ceylon.compiler.typechecker.tree.MissingToken;
                  import com.redhat.ceylon.compiler.typechecker.tree.Node;
                  import com.redhat.ceylon.compiler.typechecker.analyzer.Warning;
                  import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.MethodDeclaration;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.MethodDefinition;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.FunctionArgument;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.AttributeDeclaration;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.Variable;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.ClassDefinition;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.IsCase;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.ExtendedTypeExpression;
import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.*;

import com.redhat.ceylon.compiler.typechecker.parser.ParseError;
                
                  import static com.redhat.ceylon.compiler.typechecker.tree.CustomTree.Package; 

import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class PsiCompatibleCeylonParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "ABSTRACTED_TYPE", "ADD_SPECIFY", "AIDENTIFIER", "ALIAS", "AND_OP", "AND_SPECIFY", "ASSEMBLY", "ASSERT", "ASSIGN", "ASTRING_LITERAL", "AVERBATIM_STRING", "BACKTICK", "BREAK", "BinaryDigit", "BinaryDigits", "CASE_CLAUSE", "CASE_TYPES", "CATCH_CLAUSE", "CHAR_LITERAL", "CLASS_DEFINITION", "COMMA", "COMPARE_OP", "COMPILER_ANNOTATION", "COMPLEMENT_OP", "COMPLEMENT_SPECIFY", "COMPUTE", "CONTINUE", "CharPart", "DECREMENT_OP", "DIFFERENCE_OP", "DIVIDE_SPECIFY", "DYNAMIC", "Digit", "Digits", "ELLIPSIS", "ELSE_CLAUSE", "ENTRY_OP", "EQUAL_OP", "EXISTS", "EXTENDS", "EscapeSequence", "Exponent", "FINALLY_CLAUSE", "FLOAT_LITERAL", "FOR_CLAUSE", "FUNCTION_MODIFIER", "FractionalMagnitude", "HexDigit", "HexDigits", "IDENTICAL_OP", "IF_CLAUSE", "IMPORT", "INCREMENT_OP", "INTERFACE_DEFINITION", "INTERSECTION_OP", "INTERSECT_SPECIFY", "IN_OP", "IS_OP", "IdentifierPart", "IdentifierStart", "LARGER_OP", "LARGE_AS_OP", "LBRACE", "LBRACKET", "LET", "LIDENTIFIER", "LINE_COMMENT", "LIdentifierPrefix", "LPAREN", "Letter", "MEMBER_OP", "MODULE", "MULTIPLY_SPECIFY", "MULTI_COMMENT", "Magnitude", "NATURAL_LITERAL", "NEW", "NONEMPTY", "NOT_EQUAL_OP", "NOT_OP", "OBJECT_DEFINITION", "OPTIONAL", "OR_OP", "OR_SPECIFY", "OUT", "OUTER", "PACKAGE", "PIDENTIFIER", "POWER_OP", "PRODUCT_OP", "QUOTIENT_OP", "RANGE_OP", "RBRACE", "RBRACKET", "REMAINDER_OP", "REMAINDER_SPECIFY", "RETURN", "RPAREN", "SAFE_MEMBER_OP", "SATISFIES", "SCALE_OP", "SEGMENT_OP", "SEMICOLON", "SMALLER_OP", "SMALL_AS_OP", "SPECIFY", "SPREAD_OP", "STRING_END", "STRING_LITERAL", "STRING_MID", "STRING_START", "SUBTRACT_SPECIFY", "SUM_OP", "SUPER", "SWITCH_CLAUSE", "StringPart", "THEN_CLAUSE", "THIS", "THROW", "TRY_CLAUSE", "TYPE_CONSTRAINT", "UIDENTIFIER", "UIdentifierPrefix", "UNION_OP", "UNION_SPECIFY", "VALUE_MODIFIER", "VERBATIM_STRING", "VOID_MODIFIER", "WHILE_CLAUSE", "WS"
    };

    public static final int EOF=-1;
    public static final int ABSTRACTED_TYPE=4;
    public static final int ADD_SPECIFY=5;
    public static final int AIDENTIFIER=6;
    public static final int ALIAS=7;
    public static final int AND_OP=8;
    public static final int AND_SPECIFY=9;
    public static final int ASSEMBLY=10;
    public static final int ASSERT=11;
    public static final int ASSIGN=12;
    public static final int ASTRING_LITERAL=13;
    public static final int AVERBATIM_STRING=14;
    public static final int BACKTICK=15;
    public static final int BREAK=16;
    public static final int BinaryDigit=17;
    public static final int BinaryDigits=18;
    public static final int CASE_CLAUSE=19;
    public static final int CASE_TYPES=20;
    public static final int CATCH_CLAUSE=21;
    public static final int CHAR_LITERAL=22;
    public static final int CLASS_DEFINITION=23;
    public static final int COMMA=24;
    public static final int COMPARE_OP=25;
    public static final int COMPILER_ANNOTATION=26;
    public static final int COMPLEMENT_OP=27;
    public static final int COMPLEMENT_SPECIFY=28;
    public static final int COMPUTE=29;
    public static final int CONTINUE=30;
    public static final int CharPart=31;
    public static final int DECREMENT_OP=32;
    public static final int DIFFERENCE_OP=33;
    public static final int DIVIDE_SPECIFY=34;
    public static final int DYNAMIC=35;
    public static final int Digit=36;
    public static final int Digits=37;
    public static final int ELLIPSIS=38;
    public static final int ELSE_CLAUSE=39;
    public static final int ENTRY_OP=40;
    public static final int EQUAL_OP=41;
    public static final int EXISTS=42;
    public static final int EXTENDS=43;
    public static final int EscapeSequence=44;
    public static final int Exponent=45;
    public static final int FINALLY_CLAUSE=46;
    public static final int FLOAT_LITERAL=47;
    public static final int FOR_CLAUSE=48;
    public static final int FUNCTION_MODIFIER=49;
    public static final int FractionalMagnitude=50;
    public static final int HexDigit=51;
    public static final int HexDigits=52;
    public static final int IDENTICAL_OP=53;
    public static final int IF_CLAUSE=54;
    public static final int IMPORT=55;
    public static final int INCREMENT_OP=56;
    public static final int INTERFACE_DEFINITION=57;
    public static final int INTERSECTION_OP=58;
    public static final int INTERSECT_SPECIFY=59;
    public static final int IN_OP=60;
    public static final int IS_OP=61;
    public static final int IdentifierPart=62;
    public static final int IdentifierStart=63;
    public static final int LARGER_OP=64;
    public static final int LARGE_AS_OP=65;
    public static final int LBRACE=66;
    public static final int LBRACKET=67;
    public static final int LET=68;
    public static final int LIDENTIFIER=69;
    public static final int LINE_COMMENT=70;
    public static final int LIdentifierPrefix=71;
    public static final int LPAREN=72;
    public static final int Letter=73;
    public static final int MEMBER_OP=74;
    public static final int MODULE=75;
    public static final int MULTIPLY_SPECIFY=76;
    public static final int MULTI_COMMENT=77;
    public static final int Magnitude=78;
    public static final int NATURAL_LITERAL=79;
    public static final int NEW=80;
    public static final int NONEMPTY=81;
    public static final int NOT_EQUAL_OP=82;
    public static final int NOT_OP=83;
    public static final int OBJECT_DEFINITION=84;
    public static final int OPTIONAL=85;
    public static final int OR_OP=86;
    public static final int OR_SPECIFY=87;
    public static final int OUT=88;
    public static final int OUTER=89;
    public static final int PACKAGE=90;
    public static final int PIDENTIFIER=91;
    public static final int POWER_OP=92;
    public static final int PRODUCT_OP=93;
    public static final int QUOTIENT_OP=94;
    public static final int RANGE_OP=95;
    public static final int RBRACE=96;
    public static final int RBRACKET=97;
    public static final int REMAINDER_OP=98;
    public static final int REMAINDER_SPECIFY=99;
    public static final int RETURN=100;
    public static final int RPAREN=101;
    public static final int SAFE_MEMBER_OP=102;
    public static final int SATISFIES=103;
    public static final int SCALE_OP=104;
    public static final int SEGMENT_OP=105;
    public static final int SEMICOLON=106;
    public static final int SMALLER_OP=107;
    public static final int SMALL_AS_OP=108;
    public static final int SPECIFY=109;
    public static final int SPREAD_OP=110;
    public static final int STRING_END=111;
    public static final int STRING_LITERAL=112;
    public static final int STRING_MID=113;
    public static final int STRING_START=114;
    public static final int SUBTRACT_SPECIFY=115;
    public static final int SUM_OP=116;
    public static final int SUPER=117;
    public static final int SWITCH_CLAUSE=118;
    public static final int StringPart=119;
    public static final int THEN_CLAUSE=120;
    public static final int THIS=121;
    public static final int THROW=122;
    public static final int TRY_CLAUSE=123;
    public static final int TYPE_CONSTRAINT=124;
    public static final int UIDENTIFIER=125;
    public static final int UIdentifierPrefix=126;
    public static final int UNION_OP=127;
    public static final int UNION_SPECIFY=128;
    public static final int VALUE_MODIFIER=129;
    public static final int VERBATIM_STRING=130;
    public static final int VOID_MODIFIER=131;
    public static final int WHILE_CLAUSE=132;
    public static final int WS=133;

    // delegates
    public Parser[] getDelegates() {
        return new Parser[] {};
    }

    // delegators


    public PsiCompatibleCeylonParser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public PsiCompatibleCeylonParser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
        this.state.ruleMemo = new HashMap[325+1];
         

    }

    public String[] getTokenNames() { return PsiCompatibleCeylonParser.tokenNames; }
    public String getGrammarFileName() { return "/Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g"; }


        private java.util.List<ParseError> errors 
                = new java.util.ArrayList<ParseError>();

        public ParseError newParseError(String[] tn,
                RecognitionException re) {
            ParseError parseError = new ParseError(this, re, expecting, tn);
            expecting = -1;
            return parseError;
        }
        
        public ParseError newParseError(String[] tn, 
                RecognitionException re,
                int code) {
            ParseError parseError = new ParseError(this, re, tn, code);
            return parseError;
        }

        @Override public void displayRecognitionError(String[] tn,
                RecognitionException re) {
            errors.add(newParseError(tn, re));
        }
        public void displayRecognitionError(String[] tn,
                RecognitionException re, 
                int code) {
            errors.add(newParseError(tn, re, code));
        }
        public java.util.List<ParseError> getErrors() {
            return errors;
        }
        int expecting=-1;
      @Override
      protected Object getMissingSymbol(IntStream input,
                        RecognitionException e,
                        int expectedTokenType,
                        BitSet follow)
      {
        String tokenText;
        if ( expectedTokenType==Token.EOF ) tokenText = "<missing EOF>";
        else tokenText = "<missing "+getTokenNames()[expectedTokenType]+">";
        MissingToken t = new MissingToken(expectedTokenType, tokenText);
        Token current = ((TokenStream)input).LT(1);
        if ( current.getType() == Token.EOF ) {
          current = ((TokenStream)input).LT(-1);
        }
        t.setLine(current.getLine());
        t.setCharPositionInLine(current.getCharPositionInLine());
        t.setChannel(DEFAULT_TOKEN_CHANNEL);
        t.setInputStream(current.getInputStream());
        return t;
      }



    // $ANTLR start "compilationUnit"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:81:1: compilationUnit returns [CompilationUnit compilationUnit] : (ca= compilerAnnotations SEMICOLON )? ( importDeclaration | ( annotatedModuleDescriptorStart )=> moduleDescriptor | ( annotatedPackageDescriptorStart )=> packageDescriptor | toplevelDeclaration | RBRACE )* EOF ;
    public CompilationUnit compilationUnit() throws RecognitionException {
        CompilationUnit compilationUnit = null;


        List<CompilerAnnotation> ca =null;

        Import importDeclaration1 =null;

        ModuleDescriptor moduleDescriptor2 =null;

        PackageDescriptor packageDescriptor3 =null;

        Declaration toplevelDeclaration4 =null;


         compilationUnit = new CompilationUnit(null);
                    ImportList importList = new ImportList(null); 
                    compilationUnit.setImportList(importList); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:85:5: ( (ca= compilerAnnotations SEMICOLON )? ( importDeclaration | ( annotatedModuleDescriptorStart )=> moduleDescriptor | ( annotatedPackageDescriptorStart )=> packageDescriptor | toplevelDeclaration | RBRACE )* EOF )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:85:7: (ca= compilerAnnotations SEMICOLON )? ( importDeclaration | ( annotatedModuleDescriptorStart )=> moduleDescriptor | ( annotatedPackageDescriptorStart )=> packageDescriptor | toplevelDeclaration | RBRACE )* EOF
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:85:7: (ca= compilerAnnotations SEMICOLON )?
            int alt1=2;
            alt1 = dfa1.predict(input);
            switch (alt1) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:86:9: ca= compilerAnnotations SEMICOLON
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_compilationUnit86);
                    ca=compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return compilationUnit;

                    match(input,SEMICOLON,FOLLOW_SEMICOLON_in_compilationUnit96); if (state.failed) return compilationUnit;

                    if ( state.backtracking==0 ) { compilationUnit.getCompilerAnnotations().addAll(ca); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:90:7: ( importDeclaration | ( annotatedModuleDescriptorStart )=> moduleDescriptor | ( annotatedPackageDescriptorStart )=> packageDescriptor | toplevelDeclaration | RBRACE )*
            loop2:
            do {
                int alt2=6;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==IMPORT) ) {
                    alt2=1;
                }
                else if ( (LA2_0==COMPILER_ANNOTATION) ) {
                    int LA2_3 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==STRING_LITERAL) ) {
                    int LA2_4 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==VERBATIM_STRING) ) {
                    int LA2_5 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==LIDENTIFIER) ) {
                    int LA2_6 = input.LA(2);

                    if ( (synpred1_Ceylon()) ) {
                        alt2=2;
                    }
                    else if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==MODULE) && (synpred1_Ceylon())) {
                    alt2=2;
                }
                else if ( (LA2_0==PACKAGE) ) {
                    int LA2_8 = input.LA(2);

                    if ( (synpred2_Ceylon()) ) {
                        alt2=3;
                    }
                    else if ( (true) ) {
                        alt2=4;
                    }


                }
                else if ( (LA2_0==ALIAS||LA2_0==ASSIGN||LA2_0==CLASS_DEFINITION||LA2_0==DYNAMIC||LA2_0==FUNCTION_MODIFIER||LA2_0==INTERFACE_DEFINITION||(LA2_0 >= LBRACE && LA2_0 <= LBRACKET)||LA2_0==NEW||LA2_0==OBJECT_DEFINITION||LA2_0==SMALLER_OP||LA2_0==UIDENTIFIER||LA2_0==VALUE_MODIFIER||LA2_0==VOID_MODIFIER) ) {
                    alt2=4;
                }
                else if ( (LA2_0==RBRACE) ) {
                    alt2=5;
                }


                switch (alt2) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:91:9: importDeclaration
            	    {
            	    pushFollow(FOLLOW_importDeclaration_in_compilationUnit134);
            	    importDeclaration1=importDeclaration();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { importList.addImport(importDeclaration1); 
            	              compilationUnit.connect(importList); }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:95:9: ( annotatedModuleDescriptorStart )=> moduleDescriptor
            	    {
            	    pushFollow(FOLLOW_moduleDescriptor_in_compilationUnit177);
            	    moduleDescriptor2=moduleDescriptor();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { compilationUnit.addModuleDescriptor(moduleDescriptor2); }

            	    }
            	    break;
            	case 3 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:99:9: ( annotatedPackageDescriptorStart )=> packageDescriptor
            	    {
            	    pushFollow(FOLLOW_packageDescriptor_in_compilationUnit220);
            	    packageDescriptor3=packageDescriptor();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { compilationUnit.addPackageDescriptor(packageDescriptor3); }

            	    }
            	    break;
            	case 4 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:103:9: toplevelDeclaration
            	    {
            	    pushFollow(FOLLOW_toplevelDeclaration_in_compilationUnit248);
            	    toplevelDeclaration4=toplevelDeclaration();

            	    state._fsp--;
            	    if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { if (toplevelDeclaration4!=null)
            	                  compilationUnit.addDeclaration(toplevelDeclaration4); }

            	    }
            	    break;
            	case 5 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:106:9: RBRACE
            	    {
            	    match(input,RBRACE,FOLLOW_RBRACE_in_compilationUnit268); if (state.failed) return compilationUnit;

            	    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
            	                  new MismatchedTokenException(EOF, input)); }

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            match(input,EOF,FOLLOW_EOF_in_compilationUnit295); if (state.failed) return compilationUnit;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return compilationUnit;
    }
    // $ANTLR end "compilationUnit"



    // $ANTLR start "toplevelDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:113:1: toplevelDeclaration returns [Declaration declaration] : ca= compilerAnnotations d= declaration ;
    public Declaration toplevelDeclaration() throws RecognitionException {
        Declaration declaration = null;


        List<CompilerAnnotation> ca =null;

        Declaration d =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:114:5: (ca= compilerAnnotations d= declaration )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:114:7: ca= compilerAnnotations d= declaration
            {
            pushFollow(FOLLOW_compilerAnnotations_in_toplevelDeclaration318);
            ca=compilerAnnotations();

            state._fsp--;
            if (state.failed) return declaration;

            pushFollow(FOLLOW_declaration_in_toplevelDeclaration329);
            d=declaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = d;
                    if (declaration!=null)
                        declaration.getCompilerAnnotations().addAll(ca); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "toplevelDeclaration"



    // $ANTLR start "annotatedModuleDescriptorStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:121:1: annotatedModuleDescriptorStart : compilerAnnotations annotations MODULE ;
    public void annotatedModuleDescriptorStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:122:5: ( compilerAnnotations annotations MODULE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:122:7: compilerAnnotations annotations MODULE
            {
            pushFollow(FOLLOW_compilerAnnotations_in_annotatedModuleDescriptorStart354);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_annotations_in_annotatedModuleDescriptorStart356);
            annotations();

            state._fsp--;
            if (state.failed) return ;

            match(input,MODULE,FOLLOW_MODULE_in_annotatedModuleDescriptorStart358); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedModuleDescriptorStart"



    // $ANTLR start "annotatedPackageDescriptorStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:125:1: annotatedPackageDescriptorStart : compilerAnnotations annotations PACKAGE ~ MEMBER_OP ;
    public void annotatedPackageDescriptorStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:126:5: ( compilerAnnotations annotations PACKAGE ~ MEMBER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:126:7: compilerAnnotations annotations PACKAGE ~ MEMBER_OP
            {
            pushFollow(FOLLOW_compilerAnnotations_in_annotatedPackageDescriptorStart375);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_annotations_in_annotatedPackageDescriptorStart377);
            annotations();

            state._fsp--;
            if (state.failed) return ;

            match(input,PACKAGE,FOLLOW_PACKAGE_in_annotatedPackageDescriptorStart379); if (state.failed) return ;

            if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= Letter)||(input.LA(1) >= MODULE && input.LA(1) <= WS) ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedPackageDescriptorStart"



    // $ANTLR start "moduleDescriptor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:129:1: moduleDescriptor returns [ModuleDescriptor moduleDescriptor] : compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList ;
    public ModuleDescriptor moduleDescriptor() throws RecognitionException {
        ModuleDescriptor moduleDescriptor = null;


        Token MODULE5=null;
        Token CHAR_LITERAL9=null;
        Token STRING_LITERAL10=null;
        AnnotationList annotations6 =null;

        List<CompilerAnnotation> compilerAnnotations7 =null;

        ImportPath packagePath8 =null;

        ImportModuleList importModuleList11 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:130:5: ( compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:130:7: compilerAnnotations annotations MODULE packagePath ( CHAR_LITERAL | STRING_LITERAL ) importModuleList
            {
            pushFollow(FOLLOW_compilerAnnotations_in_moduleDescriptor403);
            compilerAnnotations7=compilerAnnotations();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            pushFollow(FOLLOW_annotations_in_moduleDescriptor405);
            annotations6=annotations();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            MODULE5=(Token)match(input,MODULE,FOLLOW_MODULE_in_moduleDescriptor413); if (state.failed) return moduleDescriptor;

            if ( state.backtracking==0 ) { moduleDescriptor = new ModuleDescriptor(MODULE5); 
                    moduleDescriptor.setAnnotationList(annotations6);
                    moduleDescriptor.getCompilerAnnotations().addAll(compilerAnnotations7); }

            pushFollow(FOLLOW_packagePath_in_moduleDescriptor430);
            packagePath8=packagePath();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            if ( state.backtracking==0 ) { moduleDescriptor.setImportPath(packagePath8); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:137:7: ( CHAR_LITERAL | STRING_LITERAL )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==CHAR_LITERAL) ) {
                alt3=1;
            }
            else if ( (LA3_0==STRING_LITERAL) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return moduleDescriptor;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;

            }
            switch (alt3) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:138:9: CHAR_LITERAL
                    {
                    CHAR_LITERAL9=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_moduleDescriptor456); if (state.failed) return moduleDescriptor;

                    if ( state.backtracking==0 ) { moduleDescriptor.setVersion(new QuotedLiteral(CHAR_LITERAL9)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:141:9: STRING_LITERAL
                    {
                    STRING_LITERAL10=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_moduleDescriptor484); if (state.failed) return moduleDescriptor;

                    if ( state.backtracking==0 ) { moduleDescriptor.setVersion(new QuotedLiteral(STRING_LITERAL10)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_importModuleList_in_moduleDescriptor510);
            importModuleList11=importModuleList();

            state._fsp--;
            if (state.failed) return moduleDescriptor;

            if ( state.backtracking==0 ) { moduleDescriptor.setImportModuleList(importModuleList11); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return moduleDescriptor;
    }
    // $ANTLR end "moduleDescriptor"



    // $ANTLR start "importModuleList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:148:1: importModuleList returns [ImportModuleList importModuleList] : LBRACE ( compilerAnnotations annotations importModule )* RBRACE ;
    public ImportModuleList importModuleList() throws RecognitionException {
        ImportModuleList importModuleList = null;


        Token LBRACE12=null;
        Token RBRACE16=null;
        ImportModule importModule13 =null;

        AnnotationList annotations14 =null;

        List<CompilerAnnotation> compilerAnnotations15 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:149:5: ( LBRACE ( compilerAnnotations annotations importModule )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:149:7: LBRACE ( compilerAnnotations annotations importModule )* RBRACE
            {
            LBRACE12=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_importModuleList539); if (state.failed) return importModuleList;

            if ( state.backtracking==0 ) { importModuleList = new ImportModuleList(LBRACE12); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:151:7: ( compilerAnnotations annotations importModule )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==ALIAS||(LA4_0 >= ASSERT && LA4_0 <= ASSIGN)||(LA4_0 >= BACKTICK && LA4_0 <= BREAK)||(LA4_0 >= CHAR_LITERAL && LA4_0 <= CLASS_DEFINITION)||LA4_0==COMPILER_ANNOTATION||LA4_0==CONTINUE||(LA4_0 >= DECREMENT_OP && LA4_0 <= DIFFERENCE_OP)||LA4_0==DYNAMIC||(LA4_0 >= FLOAT_LITERAL && LA4_0 <= FUNCTION_MODIFIER)||(LA4_0 >= IF_CLAUSE && LA4_0 <= INTERFACE_DEFINITION)||LA4_0==IN_OP||(LA4_0 >= LBRACE && LA4_0 <= LIDENTIFIER)||LA4_0==LPAREN||LA4_0==MODULE||(LA4_0 >= NATURAL_LITERAL && LA4_0 <= NEW)||(LA4_0 >= NOT_OP && LA4_0 <= OBJECT_DEFINITION)||(LA4_0 >= OUT && LA4_0 <= PACKAGE)||LA4_0==PRODUCT_OP||LA4_0==RETURN||(LA4_0 >= SEMICOLON && LA4_0 <= SMALLER_OP)||LA4_0==STRING_LITERAL||LA4_0==STRING_START||(LA4_0 >= SUM_OP && LA4_0 <= SWITCH_CLAUSE)||(LA4_0 >= THIS && LA4_0 <= UIDENTIFIER)||(LA4_0 >= VALUE_MODIFIER && LA4_0 <= WHILE_CLAUSE)) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:152:9: compilerAnnotations annotations importModule
            	    {
            	    pushFollow(FOLLOW_compilerAnnotations_in_importModuleList565);
            	    compilerAnnotations15=compilerAnnotations();

            	    state._fsp--;
            	    if (state.failed) return importModuleList;

            	    pushFollow(FOLLOW_annotations_in_importModuleList567);
            	    annotations14=annotations();

            	    state._fsp--;
            	    if (state.failed) return importModuleList;

            	    pushFollow(FOLLOW_importModule_in_importModuleList577);
            	    importModule13=importModule();

            	    state._fsp--;
            	    if (state.failed) return importModuleList;

            	    if ( state.backtracking==0 ) { if (importModule13!=null)
            	                  importModuleList.addImportModule(importModule13); 
            	              if (importModule13!=null)
            	                  importModule13.setAnnotationList(annotations14);
            	              if (importModule13!=null)
            	                  importModule13.getCompilerAnnotations().addAll(compilerAnnotations15); }

            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            RBRACE16=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_importModuleList604); if (state.failed) return importModuleList;

            if ( state.backtracking==0 ) { importModuleList.setEndToken(RBRACE16); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importModuleList;
    }
    // $ANTLR end "importModuleList"



    // $ANTLR start "packageDescriptor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:165:1: packageDescriptor returns [PackageDescriptor packageDescriptor] : compilerAnnotations annotations PACKAGE packagePath SEMICOLON ;
    public PackageDescriptor packageDescriptor() throws RecognitionException {
        PackageDescriptor packageDescriptor = null;


        Token PACKAGE17=null;
        Token SEMICOLON21=null;
        AnnotationList annotations18 =null;

        List<CompilerAnnotation> compilerAnnotations19 =null;

        ImportPath packagePath20 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:166:5: ( compilerAnnotations annotations PACKAGE packagePath SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:166:7: compilerAnnotations annotations PACKAGE packagePath SEMICOLON
            {
            pushFollow(FOLLOW_compilerAnnotations_in_packageDescriptor633);
            compilerAnnotations19=compilerAnnotations();

            state._fsp--;
            if (state.failed) return packageDescriptor;

            pushFollow(FOLLOW_annotations_in_packageDescriptor635);
            annotations18=annotations();

            state._fsp--;
            if (state.failed) return packageDescriptor;

            PACKAGE17=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_packageDescriptor643); if (state.failed) return packageDescriptor;

            if ( state.backtracking==0 ) { packageDescriptor = new PackageDescriptor(PACKAGE17); 
                    packageDescriptor.setAnnotationList(annotations18); 
                    packageDescriptor.getCompilerAnnotations().addAll(compilerAnnotations19); }

            pushFollow(FOLLOW_packagePath_in_packageDescriptor660);
            packagePath20=packagePath();

            state._fsp--;
            if (state.failed) return packageDescriptor;

            if ( state.backtracking==0 ) { packageDescriptor.setImportPath(packagePath20); 
                    expecting=SEMICOLON; }

            SEMICOLON21=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_packageDescriptor676); if (state.failed) return packageDescriptor;

            if ( state.backtracking==0 ) { packageDescriptor.setEndToken(SEMICOLON21); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return packageDescriptor;
    }
    // $ANTLR end "packageDescriptor"



    // $ANTLR start "importModule"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:179:1: importModule returns [ImportModule importModule] : IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON ;
    public ImportModule importModule() throws RecognitionException {
        ImportModule importModule = null;


        Token c1=null;
        Token s1=null;
        Token c2=null;
        Token s2=null;
        Token IMPORT22=null;
        Token SEMICOLON24=null;
        ImportPath packagePath23 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:180:5: ( IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:180:7: IMPORT (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath ) (c2= CHAR_LITERAL |s2= STRING_LITERAL )? SEMICOLON
            {
            IMPORT22=(Token)match(input,IMPORT,FOLLOW_IMPORT_in_importModule705); if (state.failed) return importModule;

            if ( state.backtracking==0 ) { importModule = new ImportModule(IMPORT22); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:182:7: (c1= CHAR_LITERAL |s1= STRING_LITERAL | packagePath )
            int alt5=3;
            switch ( input.LA(1) ) {
            case CHAR_LITERAL:
                {
                alt5=1;
                }
                break;
            case STRING_LITERAL:
                {
                alt5=2;
                }
                break;
            case LIDENTIFIER:
            case UIDENTIFIER:
                {
                alt5=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return importModule;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;

            }

            switch (alt5) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:183:9: c1= CHAR_LITERAL
                    {
                    c1=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_importModule734); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setQuotedLiteral(new QuotedLiteral(c1)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:186:9: s1= STRING_LITERAL
                    {
                    s1=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_importModule764); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setQuotedLiteral(new QuotedLiteral(s1)); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:189:9: packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_importModule792);
                    packagePath23=packagePath();

                    state._fsp--;
                    if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setImportPath(packagePath23); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:192:7: (c2= CHAR_LITERAL |s2= STRING_LITERAL )?
            int alt6=3;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==CHAR_LITERAL) ) {
                alt6=1;
            }
            else if ( (LA6_0==STRING_LITERAL) ) {
                alt6=2;
            }
            switch (alt6) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:193:9: c2= CHAR_LITERAL
                    {
                    c2=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_importModule830); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setVersion(new QuotedLiteral(c2)); 
                              expecting=SEMICOLON; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:197:9: s2= STRING_LITERAL
                    {
                    s2=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_importModule860); if (state.failed) return importModule;

                    if ( state.backtracking==0 ) { importModule.setVersion(new QuotedLiteral(s2)); 
                              expecting=SEMICOLON; }

                    }
                    break;

            }


            SEMICOLON24=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_importModule887); if (state.failed) return importModule;

            if ( state.backtracking==0 ) { importModule.setEndToken(SEMICOLON24); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importModule;
    }
    // $ANTLR end "importModule"



    // $ANTLR start "importDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:206:1: importDeclaration returns [Import importDeclaration] : IMPORT ( packagePath |) importElementList ;
    public Import importDeclaration() throws RecognitionException {
        Import importDeclaration = null;


        Token IMPORT25=null;
        ImportPath packagePath26 =null;

        ImportMemberOrTypeList importElementList27 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:207:5: ( IMPORT ( packagePath |) importElementList )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:207:7: IMPORT ( packagePath |) importElementList
            {
            IMPORT25=(Token)match(input,IMPORT,FOLLOW_IMPORT_in_importDeclaration916); if (state.failed) return importDeclaration;

            if ( state.backtracking==0 ) { importDeclaration = new Import(IMPORT25); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:209:7: ( packagePath |)
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==LIDENTIFIER||LA7_0==UIDENTIFIER) ) {
                alt7=1;
            }
            else if ( (LA7_0==LBRACE) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return importDeclaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;

            }
            switch (alt7) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:210:9: packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_importDeclaration944);
                    packagePath26=packagePath();

                    state._fsp--;
                    if (state.failed) return importDeclaration;

                    if ( state.backtracking==0 ) { importDeclaration.setImportPath(packagePath26); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:212:9: 
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_importElementList_in_importDeclaration980);
            importElementList27=importElementList();

            state._fsp--;
            if (state.failed) return importDeclaration;

            if ( state.backtracking==0 ) { importDeclaration.setImportMemberOrTypeList(importElementList27); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importDeclaration;
    }
    // $ANTLR end "importDeclaration"



    // $ANTLR start "importElementList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:219:1: importElementList returns [ImportMemberOrTypeList importMemberOrTypeList] : LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE ;
    public ImportMemberOrTypeList importElementList() throws RecognitionException {
        ImportMemberOrTypeList importMemberOrTypeList = null;


        Token c1=null;
        Token LBRACE28=null;
        Token RBRACE29=null;
        ImportMemberOrType ie1 =null;

        ImportMemberOrType ie2 =null;

        ImportWildcard iw =null;


         ImportMemberOrTypeList il=null; 
                    boolean wildcarded = false; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:222:5: ( LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:223:5: LBRACE (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )? RBRACE
            {
            LBRACE28=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_importElementList1022); if (state.failed) return importMemberOrTypeList;

            if ( state.backtracking==0 ) { il = new ImportMemberOrTypeList(LBRACE28);
                  importMemberOrTypeList = il; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:226:5: (ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )* |iw= importWildcard )?
            int alt10=3;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==ALIAS||(LA10_0 >= ASSERT && LA10_0 <= ASSIGN)||(LA10_0 >= BACKTICK && LA10_0 <= BREAK)||(LA10_0 >= CHAR_LITERAL && LA10_0 <= CLASS_DEFINITION)||LA10_0==COMPILER_ANNOTATION||LA10_0==CONTINUE||(LA10_0 >= DECREMENT_OP && LA10_0 <= DIFFERENCE_OP)||LA10_0==DYNAMIC||(LA10_0 >= FLOAT_LITERAL && LA10_0 <= FUNCTION_MODIFIER)||(LA10_0 >= IF_CLAUSE && LA10_0 <= INTERFACE_DEFINITION)||LA10_0==IN_OP||(LA10_0 >= LBRACE && LA10_0 <= LIDENTIFIER)||LA10_0==LPAREN||LA10_0==MODULE||(LA10_0 >= NATURAL_LITERAL && LA10_0 <= NEW)||(LA10_0 >= NOT_OP && LA10_0 <= OBJECT_DEFINITION)||(LA10_0 >= OUT && LA10_0 <= PACKAGE)||LA10_0==PRODUCT_OP||LA10_0==RETURN||(LA10_0 >= SEMICOLON && LA10_0 <= SMALLER_OP)||LA10_0==STRING_LITERAL||LA10_0==STRING_START||(LA10_0 >= SUM_OP && LA10_0 <= SWITCH_CLAUSE)||(LA10_0 >= THIS && LA10_0 <= UIDENTIFIER)||(LA10_0 >= VALUE_MODIFIER && LA10_0 <= WHILE_CLAUSE)) ) {
                alt10=1;
            }
            else if ( (LA10_0==ELLIPSIS) ) {
                alt10=2;
            }
            switch (alt10) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:227:7: ie1= importElement (c1= COMMA (ie2= importElement |iw= importWildcard |) )*
                    {
                    pushFollow(FOLLOW_importElement_in_importElementList1045);
                    ie1=importElement();

                    state._fsp--;
                    if (state.failed) return importMemberOrTypeList;

                    if ( state.backtracking==0 ) { if (ie1!=null)
                                il.addImportMemberOrType(ie1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:230:7: (c1= COMMA (ie2= importElement |iw= importWildcard |) )*
                    loop9:
                    do {
                        int alt9=2;
                        int LA9_0 = input.LA(1);

                        if ( (LA9_0==COMMA) ) {
                            alt9=1;
                        }


                        switch (alt9) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:231:9: c1= COMMA (ie2= importElement |iw= importWildcard |)
                    	    {
                    	    c1=(Token)match(input,COMMA,FOLLOW_COMMA_in_importElementList1076); if (state.failed) return importMemberOrTypeList;

                    	    if ( state.backtracking==0 ) { il.setEndToken(c1); 
                    	              if (wildcarded) 
                    	                  displayRecognitionError(getTokenNames(), 
                    	                      new MismatchedTokenException(RBRACE, input)); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:236:9: (ie2= importElement |iw= importWildcard |)
                    	    int alt8=3;
                    	    switch ( input.LA(1) ) {
                    	    case ALIAS:
                    	    case ASSERT:
                    	    case ASSIGN:
                    	    case BACKTICK:
                    	    case BREAK:
                    	    case CHAR_LITERAL:
                    	    case CLASS_DEFINITION:
                    	    case COMPILER_ANNOTATION:
                    	    case CONTINUE:
                    	    case DECREMENT_OP:
                    	    case DIFFERENCE_OP:
                    	    case DYNAMIC:
                    	    case FLOAT_LITERAL:
                    	    case FOR_CLAUSE:
                    	    case FUNCTION_MODIFIER:
                    	    case IF_CLAUSE:
                    	    case IMPORT:
                    	    case INCREMENT_OP:
                    	    case INTERFACE_DEFINITION:
                    	    case IN_OP:
                    	    case LBRACE:
                    	    case LBRACKET:
                    	    case LET:
                    	    case LIDENTIFIER:
                    	    case LPAREN:
                    	    case MODULE:
                    	    case NATURAL_LITERAL:
                    	    case NEW:
                    	    case NOT_OP:
                    	    case OBJECT_DEFINITION:
                    	    case OUT:
                    	    case OUTER:
                    	    case PACKAGE:
                    	    case PRODUCT_OP:
                    	    case RETURN:
                    	    case SEMICOLON:
                    	    case SMALLER_OP:
                    	    case STRING_LITERAL:
                    	    case STRING_START:
                    	    case SUM_OP:
                    	    case SUPER:
                    	    case SWITCH_CLAUSE:
                    	    case THIS:
                    	    case THROW:
                    	    case TRY_CLAUSE:
                    	    case TYPE_CONSTRAINT:
                    	    case UIDENTIFIER:
                    	    case VALUE_MODIFIER:
                    	    case VERBATIM_STRING:
                    	    case VOID_MODIFIER:
                    	    case WHILE_CLAUSE:
                    	        {
                    	        alt8=1;
                    	        }
                    	        break;
                    	    case ELLIPSIS:
                    	        {
                    	        alt8=2;
                    	        }
                    	        break;
                    	    case COMMA:
                    	    case RBRACE:
                    	        {
                    	        alt8=3;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return importMemberOrTypeList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 8, 0, input);

                    	        throw nvae;

                    	    }

                    	    switch (alt8) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:237:11: ie2= importElement
                    	            {
                    	            pushFollow(FOLLOW_importElement_in_importElementList1111);
                    	            ie2=importElement();

                    	            state._fsp--;
                    	            if (state.failed) return importMemberOrTypeList;

                    	            if ( state.backtracking==0 ) { if (ie2!=null)
                    	                            il.addImportMemberOrType(ie2);
                    	                        if (ie2!=null)
                    	                            il.setEndToken(null); }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:242:11: iw= importWildcard
                    	            {
                    	            pushFollow(FOLLOW_importWildcard_in_importElementList1139);
                    	            iw=importWildcard();

                    	            state._fsp--;
                    	            if (state.failed) return importMemberOrTypeList;

                    	            if ( state.backtracking==0 ) { wildcarded = true;
                    	                        if (iw!=null) 
                    	                            il.setImportWildcard(iw); 
                    	                        if (iw!=null) 
                    	                            il.setEndToken(null); }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:248:11: 
                    	            {
                    	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                            new MismatchedTokenException(ELLIPSIS, input)); }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop9;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:252:7: iw= importWildcard
                    {
                    pushFollow(FOLLOW_importWildcard_in_importElementList1193);
                    iw=importWildcard();

                    state._fsp--;
                    if (state.failed) return importMemberOrTypeList;

                    if ( state.backtracking==0 ) { il.setImportWildcard(iw); }

                    }
                    break;

            }


            RBRACE29=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_importElementList1208); if (state.failed) return importMemberOrTypeList;

            if ( state.backtracking==0 ) { il.setEndToken(RBRACE29); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importMemberOrTypeList;
    }
    // $ANTLR end "importElementList"



    // $ANTLR start "importElement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:258:1: importElement returns [ImportMemberOrType importMemberOrType] : compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? ) ;
    public ImportMemberOrType importElement() throws RecognitionException {
        ImportMemberOrType importMemberOrType = null;


        Token SPECIFY30=null;
        Identifier in1 =null;

        Identifier in2 =null;

        ImportMemberOrTypeList iel2 =null;

        List<CompilerAnnotation> compilerAnnotations31 =null;


         Alias alias = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:260:5: ( compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:260:7: compilerAnnotations (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_importElement1244);
            compilerAnnotations31=compilerAnnotations();

            state._fsp--;
            if (state.failed) return importMemberOrType;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:261:5: (in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:261:7: in1= importName ( SPECIFY (in2= importName |) )? (iel2= importElementList )?
            {
            pushFollow(FOLLOW_importName_in_importElement1254);
            in1=importName();

            state._fsp--;
            if (state.failed) return importMemberOrType;

            if ( state.backtracking==0 ) { importMemberOrType = new ImportMember(null);
                    importMemberOrType.setIdentifier(in1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:264:7: ( SPECIFY (in2= importName |) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==SPECIFY) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:264:9: SPECIFY (in2= importName |)
                    {
                    SPECIFY30=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_importElement1273); if (state.failed) return importMemberOrType;

                    if ( state.backtracking==0 ) { alias = new Alias(SPECIFY30);
                              alias.setIdentifier(in1);
                              importMemberOrType.setAlias(alias); 
                              importMemberOrType.setIdentifier(null); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:269:9: (in2= importName |)
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==LIDENTIFIER||LA11_0==UIDENTIFIER) ) {
                        alt11=1;
                    }
                    else if ( (LA11_0==COMMA||LA11_0==LBRACE||LA11_0==RBRACE) ) {
                        alt11=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return importMemberOrType;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 11, 0, input);

                        throw nvae;

                    }
                    switch (alt11) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:270:11: in2= importName
                            {
                            pushFollow(FOLLOW_importName_in_importElement1307);
                            in2=importName();

                            state._fsp--;
                            if (state.failed) return importMemberOrType;

                            if ( state.backtracking==0 ) { importMemberOrType.setIdentifier(in2); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:272:11: 
                            {
                            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                              new MismatchedTokenException(in1.getToken().getType(), input)); }

                            }
                            break;

                    }


                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:276:7: (iel2= importElementList )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==LBRACE) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:277:9: iel2= importElementList
                    {
                    pushFollow(FOLLOW_importElementList_in_importElement1371);
                    iel2=importElementList();

                    state._fsp--;
                    if (state.failed) return importMemberOrType;

                    if ( state.backtracking==0 ) { importMemberOrType.setImportMemberOrTypeList(iel2); }

                    }
                    break;

            }


            }


            if ( state.backtracking==0 ) { if (importMemberOrType!=null)
                    importMemberOrType.getCompilerAnnotations().addAll(compilerAnnotations31); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importMemberOrType;
    }
    // $ANTLR end "importElement"



    // $ANTLR start "importWildcard"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:285:1: importWildcard returns [ImportWildcard importWildcard] : ELLIPSIS ;
    public ImportWildcard importWildcard() throws RecognitionException {
        ImportWildcard importWildcard = null;


        Token ELLIPSIS32=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:286:5: ( ELLIPSIS )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:286:7: ELLIPSIS
            {
            ELLIPSIS32=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_importWildcard1423); if (state.failed) return importWildcard;

            if ( state.backtracking==0 ) { importWildcard = new ImportWildcard(ELLIPSIS32); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importWildcard;
    }
    // $ANTLR end "importWildcard"



    // $ANTLR start "importName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:290:1: importName returns [Identifier identifier] : ( memberName | typeName );
    public Identifier importName() throws RecognitionException {
        Identifier identifier = null;


        Identifier memberName33 =null;

        Identifier typeName34 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:291:5: ( memberName | typeName )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==LIDENTIFIER) ) {
                alt14=1;
            }
            else if ( (LA14_0==UIDENTIFIER) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;

            }
            switch (alt14) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:291:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_importName1452);
                    memberName33=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =memberName33; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:292:7: typeName
                    {
                    pushFollow(FOLLOW_typeName_in_importName1462);
                    typeName34=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =typeName34; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "importName"



    // $ANTLR start "packagePath"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:295:1: packagePath returns [ImportPath importPath] : pn1= packageName (m= MEMBER_OP (pn2= packageName |) )* ;
    public ImportPath packagePath() throws RecognitionException {
        ImportPath importPath = null;


        Token m=null;
        Identifier pn1 =null;

        Identifier pn2 =null;


         importPath = new ImportPath(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:297:5: (pn1= packageName (m= MEMBER_OP (pn2= packageName |) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:297:7: pn1= packageName (m= MEMBER_OP (pn2= packageName |) )*
            {
            pushFollow(FOLLOW_packageName_in_packagePath1496);
            pn1=packageName();

            state._fsp--;
            if (state.failed) return importPath;

            if ( state.backtracking==0 ) { if (pn1!=null) 
                        importPath.addIdentifier(pn1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:300:7: (m= MEMBER_OP (pn2= packageName |) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==MEMBER_OP) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:301:9: m= MEMBER_OP (pn2= packageName |)
            	    {
            	    m=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_packagePath1527); if (state.failed) return importPath;

            	    if ( state.backtracking==0 ) { importPath.setEndToken(m); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:303:9: (pn2= packageName |)
            	    int alt15=2;
            	    int LA15_0 = input.LA(1);

            	    if ( (LA15_0==LIDENTIFIER||LA15_0==UIDENTIFIER) ) {
            	        alt15=1;
            	    }
            	    else if ( (LA15_0==BACKTICK||LA15_0==CHAR_LITERAL||LA15_0==LBRACE||LA15_0==MEMBER_OP||LA15_0==SEMICOLON||LA15_0==STRING_LITERAL) ) {
            	        alt15=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return importPath;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 15, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt15) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:304:11: pn2= packageName
            	            {
            	            pushFollow(FOLLOW_packageName_in_packagePath1562);
            	            pn2=packageName();

            	            state._fsp--;
            	            if (state.failed) return importPath;

            	            if ( state.backtracking==0 ) { importPath.addIdentifier(pn2); 
            	                        importPath.setEndToken(null); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:307:11: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                            new MismatchedTokenException(LIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return importPath;
    }
    // $ANTLR end "packagePath"



    // $ANTLR start "packageName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:313:1: packageName returns [Identifier identifier] : ( LIDENTIFIER | UIDENTIFIER );
    public Identifier packageName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER35=null;
        Token UIDENTIFIER36=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:314:5: ( LIDENTIFIER | UIDENTIFIER )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==LIDENTIFIER) ) {
                alt17=1;
            }
            else if ( (LA17_0==UIDENTIFIER) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;

            }
            switch (alt17) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:314:7: LIDENTIFIER
                    {
                    LIDENTIFIER35=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_packageName1627); if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER35);
                            LIDENTIFIER35.setType(PIDENTIFIER);}

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:317:7: UIDENTIFIER
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                                  new MismatchedTokenException(LIDENTIFIER, input), 5001); }

                    UIDENTIFIER36=(Token)match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_packageName1651); if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = new Identifier(UIDENTIFIER36);
                            UIDENTIFIER36.setType(PIDENTIFIER);}

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "packageName"



    // $ANTLR start "typeName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:324:1: typeName returns [Identifier identifier] : UIDENTIFIER ;
    public Identifier typeName() throws RecognitionException {
        Identifier identifier = null;


        Token UIDENTIFIER37=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:325:5: ( UIDENTIFIER )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:325:7: UIDENTIFIER
            {
            UIDENTIFIER37=(Token)match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_typeName1680); if (state.failed) return identifier;

            if ( state.backtracking==0 ) { identifier = new Identifier(UIDENTIFIER37); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "typeName"



    // $ANTLR start "annotationName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:329:1: annotationName returns [Identifier identifier] : LIDENTIFIER ;
    public Identifier annotationName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER38=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:330:5: ( LIDENTIFIER )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:330:7: LIDENTIFIER
            {
            LIDENTIFIER38=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_annotationName1709); if (state.failed) return identifier;

            if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER38); 
                    LIDENTIFIER38.setType(AIDENTIFIER); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "annotationName"



    // $ANTLR start "memberName"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:335:1: memberName returns [Identifier identifier] : LIDENTIFIER ;
    public Identifier memberName() throws RecognitionException {
        Identifier identifier = null;


        Token LIDENTIFIER39=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:336:5: ( LIDENTIFIER )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:336:7: LIDENTIFIER
            {
            LIDENTIFIER39=(Token)match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_memberName1738); if (state.failed) return identifier;

            if ( state.backtracking==0 ) { identifier = new Identifier(LIDENTIFIER39); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "memberName"



    // $ANTLR start "memberNameDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:340:1: memberNameDeclaration returns [Identifier identifier] : ( memberName | typeName );
    public Identifier memberNameDeclaration() throws RecognitionException {
        Identifier identifier = null;


        Identifier memberName40 =null;

        Identifier typeName41 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:341:5: ( memberName | typeName )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==LIDENTIFIER) ) {
                alt18=1;
            }
            else if ( (LA18_0==UIDENTIFIER) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;

            }
            switch (alt18) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:341:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_memberNameDeclaration1771);
                    memberName40=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = memberName40; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:342:7: typeName
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LIDENTIFIER, input), 5001); }

                    pushFollow(FOLLOW_typeName_in_memberNameDeclaration1789);
                    typeName41=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = typeName41; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "memberNameDeclaration"



    // $ANTLR start "typeNameDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:348:1: typeNameDeclaration returns [Identifier identifier] : ( typeName | memberName );
    public Identifier typeNameDeclaration() throws RecognitionException {
        Identifier identifier = null;


        Identifier typeName42 =null;

        Identifier memberName43 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:349:5: ( typeName | memberName )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==UIDENTIFIER) ) {
                alt19=1;
            }
            else if ( (LA19_0==LIDENTIFIER) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;

            }
            switch (alt19) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:349:7: typeName
                    {
                    pushFollow(FOLLOW_typeName_in_typeNameDeclaration1819);
                    typeName42=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = typeName42; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:350:7: memberName
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(UIDENTIFIER, input), 5002); }

                    pushFollow(FOLLOW_memberName_in_typeNameDeclaration1837);
                    memberName43=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier = memberName43; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "typeNameDeclaration"



    // $ANTLR start "enumeratedObject"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:356:1: enumeratedObject returns [Enumerated declaration] : NEW ( memberNameDeclaration )? (dc= delegatedConstructor )? ( block | SEMICOLON ) ;
    public Enumerated enumeratedObject() throws RecognitionException {
        Enumerated declaration = null;


        Token NEW44=null;
        Token SEMICOLON47=null;
        DelegatedConstructor dc =null;

        Identifier memberNameDeclaration45 =null;

        Block block46 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:357:5: ( NEW ( memberNameDeclaration )? (dc= delegatedConstructor )? ( block | SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:357:7: NEW ( memberNameDeclaration )? (dc= delegatedConstructor )? ( block | SEMICOLON )
            {
            NEW44=(Token)match(input,NEW,FOLLOW_NEW_in_enumeratedObject1867); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new Enumerated(NEW44); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:359:7: ( memberNameDeclaration )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==LIDENTIFIER||LA20_0==UIDENTIFIER) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:360:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_enumeratedObject1893);
                    memberNameDeclaration45=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration45); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:363:7: (dc= delegatedConstructor )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==EXTENDS) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:364:9: dc= delegatedConstructor
                    {
                    pushFollow(FOLLOW_delegatedConstructor_in_enumeratedObject1932);
                    dc=delegatedConstructor();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setDelegatedConstructor(dc); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:367:7: ( block | SEMICOLON )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==LBRACE) ) {
                alt22=1;
            }
            else if ( (LA22_0==SEMICOLON) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;

            }
            switch (alt22) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:368:9: block
                    {
                    pushFollow(FOLLOW_block_in_enumeratedObject1969);
                    block46=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block46); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:370:9: SEMICOLON
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LBRACE, input)); }

                    SEMICOLON47=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_enumeratedObject1999); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON47); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "enumeratedObject"



    // $ANTLR start "objectDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:377:1: objectDeclaration returns [ObjectDefinition declaration] : OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) ;
    public ObjectDefinition objectDeclaration() throws RecognitionException {
        ObjectDefinition declaration = null;


        Token OBJECT_DEFINITION48=null;
        Token SEMICOLON53=null;
        Identifier memberNameDeclaration49 =null;

        ExtendedType extendedType50 =null;

        SatisfiedTypes satisfiedTypes51 =null;

        ClassBody classBody52 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:378:5: ( OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:378:7: OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON )
            {
            OBJECT_DEFINITION48=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_objectDeclaration2042); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new ObjectDefinition(OBJECT_DEFINITION48); 
                    declaration.setType(new ValueModifier(null)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:381:7: ( memberNameDeclaration )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==LIDENTIFIER||LA23_0==UIDENTIFIER) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:382:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_objectDeclaration2068);
                    memberNameDeclaration49=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration49); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:385:7: ( extendedType )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==EXTENDS) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:386:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_objectDeclaration2106);
                    extendedType50=extendedType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setExtendedType(extendedType50); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:389:7: ( satisfiedTypes )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==SATISFIES) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:390:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_objectDeclaration2145);
                    satisfiedTypes51=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setSatisfiedTypes(satisfiedTypes51); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:393:7: ( classBody | SEMICOLON )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==LBRACE) ) {
                alt26=1;
            }
            else if ( (LA26_0==SEMICOLON) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;

            }
            switch (alt26) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:394:9: classBody
                    {
                    pushFollow(FOLLOW_classBody_in_objectDeclaration2183);
                    classBody52=classBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setClassBody(classBody52); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:396:9: SEMICOLON
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LBRACE, input)); }

                    SEMICOLON53=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_objectDeclaration2213); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON53); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "objectDeclaration"



    // $ANTLR start "objectExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:403:1: objectExpression returns [ObjectExpression objectExpression] : OBJECT_DEFINITION ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) ;
    public ObjectExpression objectExpression() throws RecognitionException {
        ObjectExpression objectExpression = null;


        Token OBJECT_DEFINITION54=null;
        Token SEMICOLON58=null;
        ExtendedType extendedType55 =null;

        SatisfiedTypes satisfiedTypes56 =null;

        ClassBody classBody57 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:404:5: ( OBJECT_DEFINITION ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:404:7: OBJECT_DEFINITION ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON )
            {
            OBJECT_DEFINITION54=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_objectExpression2252); if (state.failed) return objectExpression;

            if ( state.backtracking==0 ) { objectExpression = new ObjectExpression(OBJECT_DEFINITION54); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:406:7: ( extendedType )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==EXTENDS) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:407:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_objectExpression2279);
                    extendedType55=extendedType();

                    state._fsp--;
                    if (state.failed) return objectExpression;

                    if ( state.backtracking==0 ) { objectExpression.setExtendedType(extendedType55); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:410:7: ( satisfiedTypes )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==SATISFIES) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:411:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_objectExpression2318);
                    satisfiedTypes56=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return objectExpression;

                    if ( state.backtracking==0 ) { objectExpression.setSatisfiedTypes(satisfiedTypes56); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:414:7: ( classBody | SEMICOLON )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==LBRACE) ) {
                alt29=1;
            }
            else if ( (LA29_0==SEMICOLON) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return objectExpression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;

            }
            switch (alt29) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:415:9: classBody
                    {
                    pushFollow(FOLLOW_classBody_in_objectExpression2356);
                    classBody57=classBody();

                    state._fsp--;
                    if (state.failed) return objectExpression;

                    if ( state.backtracking==0 ) { objectExpression.setClassBody(classBody57); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:417:11: SEMICOLON
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LBRACE, input)); }

                    SEMICOLON58=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_objectExpression2388); if (state.failed) return objectExpression;

                    if ( state.backtracking==0 ) { objectExpression.setEndToken(SEMICOLON58); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return objectExpression;
    }
    // $ANTLR end "objectExpression"



    // $ANTLR start "voidOrInferredMethodDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:424:1: voidOrInferredMethodDeclaration returns [AnyMethod declaration] : ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON ) ;
    public AnyMethod voidOrInferredMethodDeclaration() throws RecognitionException {
        AnyMethod declaration = null;


        Token VOID_MODIFIER59=null;
        Token FUNCTION_MODIFIER60=null;
        Token SEMICOLON67=null;
        Identifier memberNameDeclaration61 =null;

        TypeParameterList typeParameters62 =null;

        ParameterList parameters63 =null;

        TypeConstraintList typeConstraints64 =null;

        Block block65 =null;

        SpecifierExpression functionSpecifier66 =null;


         MethodDefinition def=null;
                    MethodDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:427:5: ( ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:427:7: ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( typeConstraints )? ( block | ( functionSpecifier )? SEMICOLON )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:427:7: ( VOID_MODIFIER | FUNCTION_MODIFIER )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==VOID_MODIFIER) ) {
                alt30=1;
            }
            else if ( (LA30_0==FUNCTION_MODIFIER) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;

            }
            switch (alt30) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:428:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER59=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodDeclaration2446); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { VoidModifier vm = new VoidModifier(VOID_MODIFIER59);
                              def = new MethodDefinition(VOID_MODIFIER59);
                              dec = new MethodDeclaration(VOID_MODIFIER59);
                              def.setType(vm);
                              dec.setType(vm);
                              declaration = dec; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:435:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER60=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodDeclaration2466); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { FunctionModifier fm = new FunctionModifier(FUNCTION_MODIFIER60);
                              def = new MethodDefinition(FUNCTION_MODIFIER60);
                              dec = new MethodDeclaration(FUNCTION_MODIFIER60);
                              def.setType(fm);
                              dec.setType(fm);
                              declaration = dec; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:443:7: ( memberNameDeclaration )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==LIDENTIFIER||LA31_0==UIDENTIFIER) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:444:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_voidOrInferredMethodDeclaration2502);
                    memberNameDeclaration61=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { dec.setIdentifier(memberNameDeclaration61); 
                              def.setIdentifier(memberNameDeclaration61); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:448:7: ( typeParameters )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==SMALLER_OP) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:449:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_voidOrInferredMethodDeclaration2539);
                    typeParameters62=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters62); 
                              dec.setTypeParameterList(typeParameters62); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:453:7: ( parameters )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==LPAREN) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:454:9: parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_voidOrInferredMethodDeclaration2584);
            	    parameters63=parameters();

            	    state._fsp--;
            	    if (state.failed) return declaration;

            	    if ( state.backtracking==0 ) { def.addParameterList(parameters63); 
            	              dec.addParameterList(parameters63); }

            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:459:7: ( typeConstraints )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==COMPILER_ANNOTATION||LA34_0==TYPE_CONSTRAINT) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:460:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_voidOrInferredMethodDeclaration2628);
                    typeConstraints64=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints64); 
                              dec.setTypeConstraintList(typeConstraints64); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:464:7: ( block | ( functionSpecifier )? SEMICOLON )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==LBRACE) ) {
                alt36=1;
            }
            else if ( (LA36_0==COMPUTE||LA36_0==SEMICOLON||LA36_0==SPECIFY) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;

            }
            switch (alt36) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:465:9: block
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_block_in_voidOrInferredMethodDeclaration2676);
                    block65=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setBlock(block65); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:469:9: ( functionSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:469:9: ( functionSpecifier )?
                    int alt35=2;
                    int LA35_0 = input.LA(1);

                    if ( (LA35_0==COMPUTE||LA35_0==SPECIFY) ) {
                        alt35=1;
                    }
                    switch (alt35) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:470:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_voidOrInferredMethodDeclaration2718);
                            functionSpecifier66=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setSpecifierExpression(functionSpecifier66); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON67=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_voidOrInferredMethodDeclaration2761); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { expecting=-1; }

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON67); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "voidOrInferredMethodDeclaration"



    // $ANTLR start "setterDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:480:1: setterDeclaration returns [AttributeSetterDefinition declaration] : ASSIGN ( memberNameDeclaration )? ( block | ( functionSpecifier )? SEMICOLON ) ;
    public AttributeSetterDefinition setterDeclaration() throws RecognitionException {
        AttributeSetterDefinition declaration = null;


        Token ASSIGN68=null;
        Token SEMICOLON72=null;
        Identifier memberNameDeclaration69 =null;

        Block block70 =null;

        SpecifierExpression functionSpecifier71 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:481:5: ( ASSIGN ( memberNameDeclaration )? ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:481:7: ASSIGN ( memberNameDeclaration )? ( block | ( functionSpecifier )? SEMICOLON )
            {
            ASSIGN68=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_setterDeclaration2810); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new AttributeSetterDefinition(ASSIGN68); 
                    declaration.setType( new VoidModifier(null) ); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:484:7: ( memberNameDeclaration )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==LIDENTIFIER||LA37_0==UIDENTIFIER) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:485:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_setterDeclaration2837);
                    memberNameDeclaration69=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration69); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:488:7: ( block | ( functionSpecifier )? SEMICOLON )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==LBRACE) ) {
                alt39=1;
            }
            else if ( (LA39_0==COMPUTE||LA39_0==SEMICOLON||LA39_0==SPECIFY) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;

            }
            switch (alt39) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:489:9: block
                    {
                    pushFollow(FOLLOW_block_in_setterDeclaration2876);
                    block70=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block70); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:492:9: ( functionSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:492:9: ( functionSpecifier )?
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==COMPUTE||LA38_0==SPECIFY) ) {
                        alt38=1;
                    }
                    switch (alt38) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:493:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_setterDeclaration2917);
                            functionSpecifier71=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(functionSpecifier71); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON72=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_setterDeclaration2960); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON72); 
                              expecting=-1; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "setterDeclaration"



    // $ANTLR start "tuplePatternStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:503:1: tuplePatternStart : LBRACKET ( compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER | ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart ) | tuplePatternStart ) ;
    public void tuplePatternStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:504:5: ( LBRACKET ( compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER | ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart ) | tuplePatternStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:504:7: LBRACKET ( compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER | ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart ) | tuplePatternStart )
            {
            match(input,LBRACKET,FOLLOW_LBRACKET_in_tuplePatternStart2995); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:505:7: ( compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER | ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart ) | tuplePatternStart )
            int alt41=3;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==COMPILER_ANNOTATION) ) {
                int LA41_1 = input.LA(2);

                if ( (true) ) {
                    alt41=1;
                }
                else if ( (synpred3_Ceylon()) ) {
                    alt41=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA41_0==LIDENTIFIER||LA41_0==PRODUCT_OP) ) {
                alt41=1;
            }
            else if ( (LA41_0==VALUE_MODIFIER) && (synpred3_Ceylon())) {
                alt41=2;
            }
            else if ( (LA41_0==FUNCTION_MODIFIER) && (synpred3_Ceylon())) {
                alt41=2;
            }
            else if ( (LA41_0==VOID_MODIFIER) && (synpred3_Ceylon())) {
                alt41=2;
            }
            else if ( (LA41_0==ASSIGN) && (synpred3_Ceylon())) {
                alt41=2;
            }
            else if ( (LA41_0==INTERFACE_DEFINITION) && (synpred3_Ceylon())) {
                alt41=2;
            }
            else if ( (LA41_0==CLASS_DEFINITION) && (synpred3_Ceylon())) {
                alt41=2;
            }
            else if ( (LA41_0==OBJECT_DEFINITION) && (synpred3_Ceylon())) {
                alt41=2;
            }
            else if ( (LA41_0==NEW) && (synpred3_Ceylon())) {
                alt41=2;
            }
            else if ( (LA41_0==ALIAS) && (synpred3_Ceylon())) {
                alt41=2;
            }
            else if ( (LA41_0==UIDENTIFIER) && (synpred3_Ceylon())) {
                alt41=2;
            }
            else if ( (LA41_0==SMALLER_OP) && (synpred3_Ceylon())) {
                alt41=2;
            }
            else if ( (LA41_0==PACKAGE) && (synpred3_Ceylon())) {
                alt41=2;
            }
            else if ( (LA41_0==LBRACKET) ) {
                int LA41_16 = input.LA(2);

                if ( (synpred3_Ceylon()) ) {
                    alt41=2;
                }
                else if ( (true) ) {
                    alt41=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 16, input);

                    throw nvae;

                }
            }
            else if ( (LA41_0==LBRACE) && (synpred3_Ceylon())) {
                alt41=2;
            }
            else if ( (LA41_0==DYNAMIC) && (synpred3_Ceylon())) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;

            }
            switch (alt41) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:506:9: compilerAnnotations ( PRODUCT_OP )? LIDENTIFIER
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_tuplePatternStart3013);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:506:29: ( PRODUCT_OP )?
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==PRODUCT_OP) ) {
                        alt40=1;
                    }
                    switch (alt40) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:506:29: PRODUCT_OP
                            {
                            match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_tuplePatternStart3015); if (state.failed) return ;

                            }
                            break;

                    }


                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_tuplePatternStart3018); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:508:9: ( compilerAnnotations declarationStart )=> ( compilerAnnotations declarationStart )
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:509:9: ( compilerAnnotations declarationStart )
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:509:10: compilerAnnotations declarationStart
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_tuplePatternStart3054);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    pushFollow(FOLLOW_declarationStart_in_tuplePatternStart3056);
                    declarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:511:9: tuplePatternStart
                    {
                    pushFollow(FOLLOW_tuplePatternStart_in_tuplePatternStart3075);
                    tuplePatternStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "tuplePatternStart"



    // $ANTLR start "variableOrTuplePattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:515:1: variableOrTuplePattern returns [Pattern pattern] : ( ( tuplePatternStart )=> tuplePattern | variablePattern );
    public Pattern variableOrTuplePattern() throws RecognitionException {
        Pattern pattern = null;


        TuplePattern tuplePattern73 =null;

        VariablePattern variablePattern74 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:516:5: ( ( tuplePatternStart )=> tuplePattern | variablePattern )
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==LBRACKET) ) {
                int LA42_1 = input.LA(2);

                if ( (synpred4_Ceylon()) ) {
                    alt42=1;
                }
                else if ( (true) ) {
                    alt42=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA42_0==COMPILER_ANNOTATION||LA42_0==FUNCTION_MODIFIER||LA42_0==LBRACE||LA42_0==LIDENTIFIER||LA42_0==PACKAGE||LA42_0==SMALLER_OP||LA42_0==UIDENTIFIER||LA42_0==VALUE_MODIFIER||LA42_0==VOID_MODIFIER) ) {
                alt42=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return pattern;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;

            }
            switch (alt42) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:517:7: ( tuplePatternStart )=> tuplePattern
                    {
                    pushFollow(FOLLOW_tuplePattern_in_variableOrTuplePattern3117);
                    tuplePattern73=tuplePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = tuplePattern73; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:520:7: variablePattern
                    {
                    pushFollow(FOLLOW_variablePattern_in_variableOrTuplePattern3140);
                    variablePattern74=variablePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = variablePattern74; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "variableOrTuplePattern"



    // $ANTLR start "pattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:524:1: pattern returns [Pattern pattern] : ( ( variable ENTRY_OP )=>ki1= keyItemPattern | ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern | ( tuplePatternStart )=> tuplePattern | variablePattern );
    public Pattern pattern() throws RecognitionException {
        Pattern pattern = null;


        KeyValuePattern ki1 =null;

        KeyValuePattern ki2 =null;

        TuplePattern tuplePattern75 =null;

        VariablePattern variablePattern76 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:525:5: ( ( variable ENTRY_OP )=>ki1= keyItemPattern | ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern | ( tuplePatternStart )=> tuplePattern | variablePattern )
            int alt43=4;
            switch ( input.LA(1) ) {
            case LBRACKET:
                {
                int LA43_1 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt43=2;
                }
                else if ( (synpred7_Ceylon()) ) {
                    alt43=3;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 1, input);

                    throw nvae;

                }
                }
                break;
            case COMPILER_ANNOTATION:
                {
                int LA43_2 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 2, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA43_3 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 3, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA43_4 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 4, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA43_5 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 5, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA43_6 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 6, input);

                    throw nvae;

                }
                }
                break;
            case VOID_MODIFIER:
                {
                int LA43_7 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 7, input);

                    throw nvae;

                }
                }
                break;
            case FUNCTION_MODIFIER:
                {
                int LA43_8 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 8, input);

                    throw nvae;

                }
                }
                break;
            case VALUE_MODIFIER:
                {
                int LA43_9 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 9, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA43_10 = input.LA(2);

                if ( (synpred5_Ceylon()) ) {
                    alt43=1;
                }
                else if ( (synpred6_Ceylon()) ) {
                    alt43=2;
                }
                else if ( (true) ) {
                    alt43=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 10, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return pattern;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;

            }

            switch (alt43) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:526:7: ( variable ENTRY_OP )=>ki1= keyItemPattern
                    {
                    pushFollow(FOLLOW_keyItemPattern_in_pattern3192);
                    ki1=keyItemPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = ki1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:530:7: ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern
                    {
                    pushFollow(FOLLOW_keyItemPattern_in_pattern3230);
                    ki2=keyItemPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = ki2; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:534:7: ( tuplePatternStart )=> tuplePattern
                    {
                    pushFollow(FOLLOW_tuplePattern_in_pattern3265);
                    tuplePattern75=tuplePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = tuplePattern75; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:538:7: variablePattern
                    {
                    pushFollow(FOLLOW_variablePattern_in_pattern3288);
                    variablePattern76=variablePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = variablePattern76; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "pattern"



    // $ANTLR start "tupleOrEntryPattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:542:1: tupleOrEntryPattern returns [Pattern pattern] : ( ( variable ENTRY_OP )=>ki1= keyItemPattern | ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern | tuplePattern );
    public Pattern tupleOrEntryPattern() throws RecognitionException {
        Pattern pattern = null;


        KeyValuePattern ki1 =null;

        KeyValuePattern ki2 =null;

        TuplePattern tuplePattern77 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:543:5: ( ( variable ENTRY_OP )=>ki1= keyItemPattern | ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern | tuplePattern )
            int alt44=3;
            switch ( input.LA(1) ) {
            case LBRACKET:
                {
                int LA44_1 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt44=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt44=2;
                }
                else if ( (true) ) {
                    alt44=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 1, input);

                    throw nvae;

                }
                }
                break;
            case COMPILER_ANNOTATION:
                {
                int LA44_2 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt44=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 2, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA44_3 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt44=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 3, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA44_4 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt44=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 4, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA44_5 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt44=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 5, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA44_6 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt44=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 6, input);

                    throw nvae;

                }
                }
                break;
            case VOID_MODIFIER:
                {
                int LA44_7 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt44=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 7, input);

                    throw nvae;

                }
                }
                break;
            case FUNCTION_MODIFIER:
                {
                int LA44_8 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt44=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 8, input);

                    throw nvae;

                }
                }
                break;
            case VALUE_MODIFIER:
                {
                int LA44_9 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt44=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 9, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA44_10 = input.LA(2);

                if ( (synpred8_Ceylon()) ) {
                    alt44=1;
                }
                else if ( (synpred9_Ceylon()) ) {
                    alt44=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 44, 10, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return pattern;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;

            }

            switch (alt44) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:544:7: ( variable ENTRY_OP )=>ki1= keyItemPattern
                    {
                    pushFollow(FOLLOW_keyItemPattern_in_tupleOrEntryPattern3340);
                    ki1=keyItemPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = ki1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:548:7: ( tuplePattern ENTRY_OP )=>ki2= keyItemPattern
                    {
                    pushFollow(FOLLOW_keyItemPattern_in_tupleOrEntryPattern3378);
                    ki2=keyItemPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = ki2; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:552:7: tuplePattern
                    {
                    pushFollow(FOLLOW_tuplePattern_in_tupleOrEntryPattern3400);
                    tuplePattern77=tuplePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = tuplePattern77; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "tupleOrEntryPattern"



    // $ANTLR start "variablePattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:556:1: variablePattern returns [VariablePattern pattern] : variable ;
    public VariablePattern variablePattern() throws RecognitionException {
        VariablePattern pattern = null;


        Variable variable78 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:557:5: ( variable )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:557:7: variable
            {
            pushFollow(FOLLOW_variable_in_variablePattern3429);
            variable78=variable();

            state._fsp--;
            if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern = new VariablePattern(null);
                    pattern.setVariable(variable78); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "variablePattern"



    // $ANTLR start "tuplePattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:562:1: tuplePattern returns [TuplePattern pattern] : LBRACKET (v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )* )? RBRACKET ;
    public TuplePattern tuplePattern() throws RecognitionException {
        TuplePattern pattern = null;


        Token c1=null;
        Token LBRACKET79=null;
        Token RBRACKET80=null;
        Pattern v1 =null;

        Pattern v2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:563:5: ( LBRACKET (v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )* )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:563:7: LBRACKET (v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )* )? RBRACKET
            {
            LBRACKET79=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_tuplePattern3458); if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern = new TuplePattern(LBRACKET79); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:565:7: (v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )* )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==COMPILER_ANNOTATION||LA46_0==FUNCTION_MODIFIER||(LA46_0 >= LBRACE && LA46_0 <= LBRACKET)||LA46_0==LIDENTIFIER||LA46_0==PACKAGE||LA46_0==PRODUCT_OP||LA46_0==SMALLER_OP||LA46_0==UIDENTIFIER||LA46_0==VALUE_MODIFIER||LA46_0==VOID_MODIFIER) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:566:9: v1= variadicPattern (c1= COMMA (v2= variadicPattern ) )*
                    {
                    pushFollow(FOLLOW_variadicPattern_in_tuplePattern3486);
                    v1=variadicPattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern.addPattern(v1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:568:9: (c1= COMMA (v2= variadicPattern ) )*
                    loop45:
                    do {
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( (LA45_0==COMMA) ) {
                            alt45=1;
                        }


                        switch (alt45) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:569:11: c1= COMMA (v2= variadicPattern )
                    	    {
                    	    c1=(Token)match(input,COMMA,FOLLOW_COMMA_in_tuplePattern3520); if (state.failed) return pattern;

                    	    if ( state.backtracking==0 ) { pattern.setEndToken(c1); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:571:11: (v2= variadicPattern )
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:572:13: v2= variadicPattern
                    	    {
                    	    pushFollow(FOLLOW_variadicPattern_in_tuplePattern3560);
                    	    v2=variadicPattern();

                    	    state._fsp--;
                    	    if (state.failed) return pattern;

                    	    if ( state.backtracking==0 ) { pattern.addPattern(v2);
                    	                  pattern.setEndToken(null); }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop45;
                        }
                    } while (true);


                    }
                    break;

            }


            RBRACKET80=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_tuplePattern3614); if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern.setEndToken(RBRACKET80); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "tuplePattern"



    // $ANTLR start "variadicPattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:582:1: variadicPattern returns [Pattern pattern] : ( ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable |p= pattern ) ;
    public Pattern variadicPattern() throws RecognitionException {
        Pattern pattern = null;


        Pattern p =null;

        Variable variadicVariable81 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:583:5: ( ( ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable |p= pattern ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:583:7: ( ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable |p= pattern )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:583:7: ( ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable |p= pattern )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==COMPILER_ANNOTATION) ) {
                int LA47_1 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt47=1;
                }
                else if ( (true) ) {
                    alt47=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA47_0==UIDENTIFIER) ) {
                int LA47_2 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt47=1;
                }
                else if ( (true) ) {
                    alt47=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA47_0==SMALLER_OP) ) {
                int LA47_3 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt47=1;
                }
                else if ( (true) ) {
                    alt47=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA47_0==PACKAGE) ) {
                int LA47_4 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt47=1;
                }
                else if ( (true) ) {
                    alt47=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA47_0==LBRACKET) ) {
                int LA47_5 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt47=1;
                }
                else if ( (true) ) {
                    alt47=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA47_0==LBRACE) ) {
                int LA47_6 = input.LA(2);

                if ( (synpred10_Ceylon()) ) {
                    alt47=1;
                }
                else if ( (true) ) {
                    alt47=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pattern;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA47_0==PRODUCT_OP) && (synpred10_Ceylon())) {
                alt47=1;
            }
            else if ( (LA47_0==FUNCTION_MODIFIER||LA47_0==LIDENTIFIER||LA47_0==VALUE_MODIFIER||LA47_0==VOID_MODIFIER) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return pattern;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;

            }
            switch (alt47) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:584:9: ( compilerAnnotations ( unionType )? PRODUCT_OP )=> variadicVariable
                    {
                    pushFollow(FOLLOW_variadicVariable_in_variadicPattern3672);
                    variadicVariable81=variadicVariable();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { VariablePattern vp = new VariablePattern(null);
                              vp.setVariable(variadicVariable81); 
                              pattern = vp; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:590:9: p= pattern
                    {
                    pushFollow(FOLLOW_pattern_in_variadicPattern3701);
                    p=pattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern = p; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "variadicPattern"



    // $ANTLR start "variadicVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:595:1: variadicVariable returns [Variable variable] : compilerAnnotations ( unionType )? ( PRODUCT_OP ) ( memberName )? ;
    public Variable variadicVariable() throws RecognitionException {
        Variable variable = null;


        Token PRODUCT_OP84=null;
        List<CompilerAnnotation> compilerAnnotations82 =null;

        StaticType unionType83 =null;

        Identifier memberName85 =null;


         variable = new Variable(null); 
                    Type t = new ValueModifier(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:598:5: ( compilerAnnotations ( unionType )? ( PRODUCT_OP ) ( memberName )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:598:7: compilerAnnotations ( unionType )? ( PRODUCT_OP ) ( memberName )?
            {
            pushFollow(FOLLOW_compilerAnnotations_in_variadicVariable3748);
            compilerAnnotations82=compilerAnnotations();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable.getCompilerAnnotations().addAll(compilerAnnotations82); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:600:7: ( unionType )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( ((LA48_0 >= LBRACE && LA48_0 <= LBRACKET)||LA48_0==PACKAGE||LA48_0==SMALLER_OP||LA48_0==UIDENTIFIER) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:601:9: unionType
                    {
                    pushFollow(FOLLOW_unionType_in_variadicVariable3774);
                    unionType83=unionType();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { t = unionType83; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:604:7: ( PRODUCT_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:605:9: PRODUCT_OP
            {
            PRODUCT_OP84=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_variadicVariable3811); if (state.failed) return variable;

            if ( state.backtracking==0 ) { SequencedType st = new SequencedType(PRODUCT_OP84);
                      st.setType(t);
                      st.setAtLeastOne(false);
                      variable.setType(st); }

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:617:7: ( memberName )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==LIDENTIFIER) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:618:9: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_variadicVariable3855);
                    memberName85=memberName();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setIdentifier(memberName85); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "variadicVariable"



    // $ANTLR start "keyItemPattern"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:623:1: keyItemPattern returns [KeyValuePattern pattern] : v1= variableOrTuplePattern ENTRY_OP (v2= variableOrTuplePattern )? ;
    public KeyValuePattern keyItemPattern() throws RecognitionException {
        KeyValuePattern pattern = null;


        Token ENTRY_OP86=null;
        Pattern v1 =null;

        Pattern v2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:624:5: (v1= variableOrTuplePattern ENTRY_OP (v2= variableOrTuplePattern )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:624:7: v1= variableOrTuplePattern ENTRY_OP (v2= variableOrTuplePattern )?
            {
            pushFollow(FOLLOW_variableOrTuplePattern_in_keyItemPattern3897);
            v1=variableOrTuplePattern();

            state._fsp--;
            if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern = new KeyValuePattern(null);
                    pattern.setKey(v1); }

            ENTRY_OP86=(Token)match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_keyItemPattern3913); if (state.failed) return pattern;

            if ( state.backtracking==0 ) { pattern.setEndToken(ENTRY_OP86); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:629:7: (v2= variableOrTuplePattern )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==COMPILER_ANNOTATION||LA50_0==FUNCTION_MODIFIER||(LA50_0 >= LBRACE && LA50_0 <= LBRACKET)||LA50_0==LIDENTIFIER||LA50_0==PACKAGE||LA50_0==SMALLER_OP||LA50_0==UIDENTIFIER||LA50_0==VALUE_MODIFIER||LA50_0==VOID_MODIFIER) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:630:9: v2= variableOrTuplePattern
                    {
                    pushFollow(FOLLOW_variableOrTuplePattern_in_keyItemPattern3941);
                    v2=variableOrTuplePattern();

                    state._fsp--;
                    if (state.failed) return pattern;

                    if ( state.backtracking==0 ) { pattern.setValue(v2); 
                              pattern.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return pattern;
    }
    // $ANTLR end "keyItemPattern"



    // $ANTLR start "destructure"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:636:1: destructure returns [Destructure destructure] : VALUE_MODIFIER tupleOrEntryPattern ( specifier )? SEMICOLON ;
    public Destructure destructure() throws RecognitionException {
        Destructure destructure = null;


        Token VALUE_MODIFIER87=null;
        Token SEMICOLON90=null;
        Pattern tupleOrEntryPattern88 =null;

        SpecifierExpression specifier89 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:637:5: ( VALUE_MODIFIER tupleOrEntryPattern ( specifier )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:637:7: VALUE_MODIFIER tupleOrEntryPattern ( specifier )? SEMICOLON
            {
            VALUE_MODIFIER87=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_destructure3981); if (state.failed) return destructure;

            if ( state.backtracking==0 ) { ValueModifier vm = new ValueModifier(VALUE_MODIFIER87);
                    destructure = new Destructure(null);
                    destructure.setType(vm); }

            pushFollow(FOLLOW_tupleOrEntryPattern_in_destructure3997);
            tupleOrEntryPattern88=tupleOrEntryPattern();

            state._fsp--;
            if (state.failed) return destructure;

            if ( state.backtracking==0 ) { destructure.setPattern(tupleOrEntryPattern88); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:643:7: ( specifier )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==SPECIFY) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:644:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_destructure4023);
                    specifier89=specifier();

                    state._fsp--;
                    if (state.failed) return destructure;

                    if ( state.backtracking==0 ) { destructure.setSpecifierExpression(specifier89); }

                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    }
                    break;

            }


            SEMICOLON90=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_destructure4060); if (state.failed) return destructure;

            if ( state.backtracking==0 ) { destructure.setEndToken(SEMICOLON90); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return destructure;
    }
    // $ANTLR end "destructure"



    // $ANTLR start "inferredAttributeDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:653:1: inferredAttributeDeclaration returns [AnyAttribute declaration] : VALUE_MODIFIER ( memberNameDeclaration )? ( ( specifier | lazySpecifier )? SEMICOLON | block ) ;
    public AnyAttribute inferredAttributeDeclaration() throws RecognitionException {
        AnyAttribute declaration = null;


        Token VALUE_MODIFIER91=null;
        Token SEMICOLON95=null;
        Identifier memberNameDeclaration92 =null;

        SpecifierExpression specifier93 =null;

        SpecifierExpression lazySpecifier94 =null;

        Block block96 =null;


         AttributeGetterDefinition def=null;
                    AttributeDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:656:5: ( VALUE_MODIFIER ( memberNameDeclaration )? ( ( specifier | lazySpecifier )? SEMICOLON | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:656:7: VALUE_MODIFIER ( memberNameDeclaration )? ( ( specifier | lazySpecifier )? SEMICOLON | block )
            {
            VALUE_MODIFIER91=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_inferredAttributeDeclaration4098); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { ValueModifier fm = new ValueModifier(VALUE_MODIFIER91);
                    def = new AttributeGetterDefinition(VALUE_MODIFIER91);
                    dec = new AttributeDeclaration(VALUE_MODIFIER91);
                    def.setType(fm);
                    dec.setType(fm);
                    declaration = dec; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:663:7: ( memberNameDeclaration )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==LIDENTIFIER||LA52_0==UIDENTIFIER) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:664:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_inferredAttributeDeclaration4125);
                    memberNameDeclaration92=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { dec.setIdentifier(memberNameDeclaration92); 
                              def.setIdentifier(memberNameDeclaration92); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:668:7: ( ( specifier | lazySpecifier )? SEMICOLON | block )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==COMPUTE||LA54_0==SEMICOLON||LA54_0==SPECIFY) ) {
                alt54=1;
            }
            else if ( (LA54_0==LBRACE) ) {
                alt54=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;

            }
            switch (alt54) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:669:9: ( specifier | lazySpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:669:9: ( specifier | lazySpecifier )?
                    int alt53=3;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==SPECIFY) ) {
                        alt53=1;
                    }
                    else if ( (LA53_0==COMPUTE) ) {
                        alt53=2;
                    }
                    switch (alt53) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:670:11: specifier
                            {
                            pushFollow(FOLLOW_specifier_in_inferredAttributeDeclaration4175);
                            specifier93=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setSpecifierOrInitializerExpression(specifier93); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:673:11: lazySpecifier
                            {
                            pushFollow(FOLLOW_lazySpecifier_in_inferredAttributeDeclaration4210);
                            lazySpecifier94=lazySpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setSpecifierOrInitializerExpression(lazySpecifier94); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON95=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_inferredAttributeDeclaration4253); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON95); 
                              expecting=-1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:681:9: block
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_block_in_inferredAttributeDeclaration4292);
                    block96=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setBlock(block96); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "inferredAttributeDeclaration"



    // $ANTLR start "typedMethodOrAttributeDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:687:1: typedMethodOrAttributeDeclaration returns [TypedDeclaration declaration] : ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block ) ;
    public TypedDeclaration typedMethodOrAttributeDeclaration() throws RecognitionException {
        TypedDeclaration declaration = null;


        Token s1=null;
        Token s2=null;
        Token DYNAMIC98=null;
        Block b1 =null;

        SpecifierExpression ms =null;

        SpecifierExpression as =null;

        SpecifierExpression ac =null;

        Block b2 =null;

        Type variadicType97 =null;

        Identifier memberNameDeclaration99 =null;

        TypeParameterList typeParameters100 =null;

        ParameterList parameters101 =null;

        TypeConstraintList typeConstraints102 =null;


         AttributeGetterDefinition adef=new AttributeGetterDefinition(null);
                    AttributeDeclaration adec=new AttributeDeclaration(null);
                    MethodDefinition mdef=new MethodDefinition(null);
                    MethodDeclaration mdec=new MethodDeclaration(null); 
                    declaration = adec; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:693:5: ( ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:693:7: ( variadicType | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:693:7: ( variadicType | DYNAMIC )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( ((LA55_0 >= LBRACE && LA55_0 <= LBRACKET)||LA55_0==PACKAGE||LA55_0==SMALLER_OP||LA55_0==UIDENTIFIER) ) {
                alt55=1;
            }
            else if ( (LA55_0==DYNAMIC) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;

            }
            switch (alt55) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:693:9: variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_typedMethodOrAttributeDeclaration4342);
                    variadicType97=variadicType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { adef.setType(variadicType97);
                              adec.setType(variadicType97); 
                              mdef.setType(variadicType97);
                              mdec.setType(variadicType97); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:698:9: DYNAMIC
                    {
                    DYNAMIC98=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_typedMethodOrAttributeDeclaration4362); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { DynamicModifier dm = new DynamicModifier(DYNAMIC98);
                              adef.setType(dm);
                              adec.setType(dm); 
                              mdef.setType(dm);
                              mdec.setType(dm); }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberNameDeclaration_in_typedMethodOrAttributeDeclaration4388);
            memberNameDeclaration99=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { adef.setIdentifier(memberNameDeclaration99);
                    adec.setIdentifier(memberNameDeclaration99); 
                    mdef.setIdentifier(memberNameDeclaration99);
                    mdec.setIdentifier(memberNameDeclaration99); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:710:7: ( ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON ) | (as= specifier |ac= lazySpecifier )? s2= SEMICOLON |b2= block )
            int alt62=3;
            switch ( input.LA(1) ) {
            case LPAREN:
            case SMALLER_OP:
                {
                alt62=1;
                }
                break;
            case COMPUTE:
            case SEMICOLON:
            case SPECIFY:
                {
                alt62=2;
                }
                break;
            case LBRACE:
                {
                alt62=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;

            }

            switch (alt62) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:711:9: ( typeParameters )? ( parameters )+ ( typeConstraints )? (b1= block | (ms= functionSpecifier )? s1= SEMICOLON )
                    {
                    if ( state.backtracking==0 ) { declaration = mdec; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:712:9: ( typeParameters )?
                    int alt56=2;
                    int LA56_0 = input.LA(1);

                    if ( (LA56_0==SMALLER_OP) ) {
                        alt56=1;
                    }
                    switch (alt56) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:713:11: typeParameters
                            {
                            pushFollow(FOLLOW_typeParameters_in_typedMethodOrAttributeDeclaration4437);
                            typeParameters100=typeParameters();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { mdef.setTypeParameterList(typeParameters100);
                                        mdec.setTypeParameterList(typeParameters100); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:717:9: ( parameters )+
                    int cnt57=0;
                    loop57:
                    do {
                        int alt57=2;
                        int LA57_0 = input.LA(1);

                        if ( (LA57_0==LPAREN) ) {
                            alt57=1;
                        }


                        switch (alt57) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:718:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_typedMethodOrAttributeDeclaration4482);
                    	    parameters101=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { mdef.addParameterList(parameters101);
                    	                mdec.addParameterList(parameters101); }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt57 >= 1 ) break loop57;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(57, input);
                                throw eee;
                        }
                        cnt57++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:723:9: ( typeConstraints )?
                    int alt58=2;
                    int LA58_0 = input.LA(1);

                    if ( (LA58_0==COMPILER_ANNOTATION||LA58_0==TYPE_CONSTRAINT) ) {
                        alt58=1;
                    }
                    switch (alt58) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:724:11: typeConstraints
                            {
                            pushFollow(FOLLOW_typeConstraints_in_typedMethodOrAttributeDeclaration4537);
                            typeConstraints102=typeConstraints();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { mdef.setTypeConstraintList(typeConstraints102);
                                        mdec.setTypeConstraintList(typeConstraints102); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:728:9: (b1= block | (ms= functionSpecifier )? s1= SEMICOLON )
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==LBRACE) ) {
                        alt60=1;
                    }
                    else if ( (LA60_0==COMPUTE||LA60_0==SEMICOLON||LA60_0==SPECIFY) ) {
                        alt60=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 60, 0, input);

                        throw nvae;

                    }
                    switch (alt60) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:729:11: b1= block
                            {
                            if ( state.backtracking==0 ) { declaration = mdef; }

                            pushFollow(FOLLOW_block_in_typedMethodOrAttributeDeclaration4597);
                            b1=block();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { mdef.setBlock(b1); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:733:11: (ms= functionSpecifier )? s1= SEMICOLON
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:733:11: (ms= functionSpecifier )?
                            int alt59=2;
                            int LA59_0 = input.LA(1);

                            if ( (LA59_0==COMPUTE||LA59_0==SPECIFY) ) {
                                alt59=1;
                            }
                            switch (alt59) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:734:13: ms= functionSpecifier
                                    {
                                    pushFollow(FOLLOW_functionSpecifier_in_typedMethodOrAttributeDeclaration4647);
                                    ms=functionSpecifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { mdec.setSpecifierExpression(ms); }

                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                            s1=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration4699); if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setEndToken(s1);
                                        expecting=-1; }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:743:9: (as= specifier |ac= lazySpecifier )? s2= SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:743:9: (as= specifier |ac= lazySpecifier )?
                    int alt61=3;
                    int LA61_0 = input.LA(1);

                    if ( (LA61_0==SPECIFY) ) {
                        alt61=1;
                    }
                    else if ( (LA61_0==COMPUTE) ) {
                        alt61=2;
                    }
                    switch (alt61) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:744:11: as= specifier
                            {
                            pushFollow(FOLLOW_specifier_in_typedMethodOrAttributeDeclaration4754);
                            as=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { adec.setSpecifierOrInitializerExpression(as); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:747:11: ac= lazySpecifier
                            {
                            pushFollow(FOLLOW_lazySpecifier_in_typedMethodOrAttributeDeclaration4792);
                            ac=lazySpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { adec.setSpecifierOrInitializerExpression(ac); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    s2=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration4838); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(s2); 
                            expecting=-1; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:755:9: b2= block
                    {
                    if ( state.backtracking==0 ) { declaration = adef; }

                    pushFollow(FOLLOW_block_in_typedMethodOrAttributeDeclaration4879);
                    b2=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { adef.setBlock(b2); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "typedMethodOrAttributeDeclaration"



    // $ANTLR start "interfaceDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:761:1: interfaceDeclaration returns [AnyInterface declaration] : ( INTERFACE_DEFINITION | DYNAMIC ) ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON ) ;
    public AnyInterface interfaceDeclaration() throws RecognitionException {
        AnyInterface declaration = null;


        Token INTERFACE_DEFINITION103=null;
        Token DYNAMIC104=null;
        Token SEMICOLON112=null;
        Identifier typeNameDeclaration105 =null;

        TypeParameterList typeParameters106 =null;

        CaseTypes caseTypes107 =null;

        SatisfiedTypes satisfiedTypes108 =null;

        TypeConstraintList typeConstraints109 =null;

        InterfaceBody interfaceBody110 =null;

        TypeSpecifier typeSpecifier111 =null;


         InterfaceDefinition def=null; 
                    InterfaceDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:764:5: ( ( INTERFACE_DEFINITION | DYNAMIC ) ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:764:7: ( INTERFACE_DEFINITION | DYNAMIC ) ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( typeConstraints )? ( interfaceBody | ( typeSpecifier )? SEMICOLON )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:764:7: ( INTERFACE_DEFINITION | DYNAMIC )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==INTERFACE_DEFINITION) ) {
                alt63=1;
            }
            else if ( (LA63_0==DYNAMIC) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;

            }
            switch (alt63) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:765:9: INTERFACE_DEFINITION
                    {
                    INTERFACE_DEFINITION103=(Token)match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_interfaceDeclaration4938); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def = new InterfaceDefinition(INTERFACE_DEFINITION103); 
                              dec = new InterfaceDeclaration(INTERFACE_DEFINITION103);
                              declaration = dec; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:770:9: DYNAMIC
                    {
                    DYNAMIC104=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_interfaceDeclaration4967); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def = new InterfaceDefinition(DYNAMIC104);
                              dec = new InterfaceDeclaration(DYNAMIC104);
                              def.setDynamic(true);
                              declaration = def; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:776:7: ( typeNameDeclaration )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==LIDENTIFIER||LA64_0==UIDENTIFIER) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:777:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_interfaceDeclaration5003);
                    typeNameDeclaration105=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { dec.setIdentifier(typeNameDeclaration105); 
                              def.setIdentifier(typeNameDeclaration105); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:781:7: ( typeParameters )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==SMALLER_OP) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:782:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_interfaceDeclaration5041);
                    typeParameters106=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters106); 
                              dec.setTypeParameterList(typeParameters106); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:786:7: ( caseTypes )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==CASE_TYPES) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:787:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_interfaceDeclaration5079);
                    caseTypes107=caseTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setCaseTypes(caseTypes107); 
                              dec.setCaseTypes(caseTypes107); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:796:7: ( satisfiedTypes )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==SATISFIES) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:797:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_interfaceDeclaration5133);
                    satisfiedTypes108=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setSatisfiedTypes(satisfiedTypes108); 
                              dec.setSatisfiedTypes(satisfiedTypes108); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:801:7: ( typeConstraints )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==COMPILER_ANNOTATION||LA68_0==TYPE_CONSTRAINT) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:802:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_interfaceDeclaration5170);
                    typeConstraints109=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints109); 
                              dec.setTypeConstraintList(typeConstraints109); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:806:7: ( interfaceBody | ( typeSpecifier )? SEMICOLON )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==LBRACE) ) {
                alt70=1;
            }
            else if ( (LA70_0==COMPUTE||LA70_0==SEMICOLON||LA70_0==SPECIFY) ) {
                alt70=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;

            }
            switch (alt70) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:807:9: interfaceBody
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_interfaceBody_in_interfaceDeclaration5217);
                    interfaceBody110=interfaceBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setInterfaceBody(interfaceBody110); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:811:9: ( typeSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:811:9: ( typeSpecifier )?
                    int alt69=2;
                    int LA69_0 = input.LA(1);

                    if ( (LA69_0==COMPUTE||LA69_0==SPECIFY) ) {
                        alt69=1;
                    }
                    switch (alt69) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:812:11: typeSpecifier
                            {
                            pushFollow(FOLLOW_typeSpecifier_in_interfaceDeclaration5258);
                            typeSpecifier111=typeSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setTypeSpecifier(typeSpecifier111); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON112=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_interfaceDeclaration5302); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON112); 
                              expecting=-1; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "interfaceDeclaration"



    // $ANTLR start "classDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:822:1: classDeclaration returns [AnyClass declaration] : CLASS_DEFINITION ( typeNameDeclaration )? ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON ) ;
    public AnyClass classDeclaration() throws RecognitionException {
        AnyClass declaration = null;


        Token CLASS_DEFINITION113=null;
        Token SEMICOLON123=null;
        Identifier typeNameDeclaration114 =null;

        TypeParameterList typeParameters115 =null;

        ParameterList parameters116 =null;

        CaseTypes caseTypes117 =null;

        ExtendedType extendedType118 =null;

        SatisfiedTypes satisfiedTypes119 =null;

        TypeConstraintList typeConstraints120 =null;

        ClassBody classBody121 =null;

        ClassSpecifier classSpecifier122 =null;


         ClassDefinition def=null; 
                    ClassDeclaration dec=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:825:5: ( CLASS_DEFINITION ( typeNameDeclaration )? ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:825:7: CLASS_DEFINITION ( typeNameDeclaration )? ( typeParameters )? ( parameters )? ( caseTypes )? ( extendedType )? ( satisfiedTypes )? ( typeConstraints )? ( classBody | ( classSpecifier )? SEMICOLON )
            {
            CLASS_DEFINITION113=(Token)match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_classDeclaration5350); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { def = new ClassDefinition(CLASS_DEFINITION113); 
                    dec = new ClassDeclaration(CLASS_DEFINITION113);
                    declaration = dec; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:829:7: ( typeNameDeclaration )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==LIDENTIFIER||LA71_0==UIDENTIFIER) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:830:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_classDeclaration5377);
                    typeNameDeclaration114=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { dec.setIdentifier(typeNameDeclaration114); 
                              def.setIdentifier(typeNameDeclaration114); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:834:7: ( typeParameters )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==SMALLER_OP) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:835:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_classDeclaration5414);
                    typeParameters115=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeParameterList(typeParameters115); 
                              dec.setTypeParameterList(typeParameters115); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:839:7: ( parameters )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==LPAREN) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:840:9: parameters
                    {
                    pushFollow(FOLLOW_parameters_in_classDeclaration5451);
                    parameters116=parameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setParameterList(parameters116); 
                              dec.setParameterList(parameters116); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:844:7: ( caseTypes )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==CASE_TYPES) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:845:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_classDeclaration5488);
                    caseTypes117=caseTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setCaseTypes(caseTypes117); 
                              dec.setCaseTypes(caseTypes117); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:850:7: ( extendedType )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==EXTENDS) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:851:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_classDeclaration5534);
                    extendedType118=extendedType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setExtendedType(extendedType118); 
                              dec.setExtendedType(extendedType118); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:855:7: ( satisfiedTypes )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==SATISFIES) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:856:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_classDeclaration5572);
                    satisfiedTypes119=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setSatisfiedTypes(satisfiedTypes119); 
                              dec.setSatisfiedTypes(satisfiedTypes119); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:860:7: ( typeConstraints )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==COMPILER_ANNOTATION||LA77_0==TYPE_CONSTRAINT) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:861:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_classDeclaration5609);
                    typeConstraints120=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setTypeConstraintList(typeConstraints120); 
                              dec.setTypeConstraintList(typeConstraints120); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:865:7: ( classBody | ( classSpecifier )? SEMICOLON )
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==LBRACE) ) {
                alt79=1;
            }
            else if ( (LA79_0==COMPUTE||LA79_0==SEMICOLON||LA79_0==SPECIFY) ) {
                alt79=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;

            }
            switch (alt79) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:866:9: classBody
                    {
                    if ( state.backtracking==0 ) { declaration = def; }

                    pushFollow(FOLLOW_classBody_in_classDeclaration5656);
                    classBody121=classBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { def.setClassBody(classBody121); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:870:9: ( classSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:870:9: ( classSpecifier )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==COMPUTE||LA78_0==SPECIFY) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:871:11: classSpecifier
                            {
                            pushFollow(FOLLOW_classSpecifier_in_classDeclaration5697);
                            classSpecifier122=classSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { dec.setClassSpecifier(classSpecifier122); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON123=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_classDeclaration5740); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON123); 
                              expecting=-1; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "classDeclaration"



    // $ANTLR start "constructor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:881:1: constructor returns [Constructor declaration] : NEW ( memberNameDeclaration )? ( parameters )? (dc= delegatedConstructor )? ( block | SEMICOLON ) ;
    public Constructor constructor() throws RecognitionException {
        Constructor declaration = null;


        Token NEW124=null;
        Token SEMICOLON128=null;
        DelegatedConstructor dc =null;

        Identifier memberNameDeclaration125 =null;

        ParameterList parameters126 =null;

        Block block127 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:882:5: ( NEW ( memberNameDeclaration )? ( parameters )? (dc= delegatedConstructor )? ( block | SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:882:7: NEW ( memberNameDeclaration )? ( parameters )? (dc= delegatedConstructor )? ( block | SEMICOLON )
            {
            NEW124=(Token)match(input,NEW,FOLLOW_NEW_in_constructor5779); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new Constructor(NEW124); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:884:7: ( memberNameDeclaration )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==LIDENTIFIER||LA80_0==UIDENTIFIER) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:885:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_constructor5805);
                    memberNameDeclaration125=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration125); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:888:7: ( parameters )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==LPAREN) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:889:9: parameters
                    {
                    pushFollow(FOLLOW_parameters_in_constructor5842);
                    parameters126=parameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setParameterList(parameters126); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:892:7: (dc= delegatedConstructor )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==EXTENDS) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:893:9: dc= delegatedConstructor
                    {
                    pushFollow(FOLLOW_delegatedConstructor_in_constructor5881);
                    dc=delegatedConstructor();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setDelegatedConstructor(dc); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:896:7: ( block | SEMICOLON )
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==LBRACE) ) {
                alt83=1;
            }
            else if ( (LA83_0==SEMICOLON) ) {
                alt83=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;

            }
            switch (alt83) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:897:9: block
                    {
                    pushFollow(FOLLOW_block_in_constructor5918);
                    block127=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block127); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:899:9: SEMICOLON
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LBRACE, input)); }

                    SEMICOLON128=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_constructor5948); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON128); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "constructor"



    // $ANTLR start "delegatedConstructor"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:906:1: delegatedConstructor returns [DelegatedConstructor delegatedConstructor] : EXTENDS (ci= classInstantiation )? ;
    public DelegatedConstructor delegatedConstructor() throws RecognitionException {
        DelegatedConstructor delegatedConstructor = null;


        Token EXTENDS129=null;
        PsiCompatibleCeylonParser.classInstantiation_return ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:907:5: ( EXTENDS (ci= classInstantiation )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:907:7: EXTENDS (ci= classInstantiation )?
            {
            EXTENDS129=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_delegatedConstructor5987); if (state.failed) return delegatedConstructor;

            if ( state.backtracking==0 ) { delegatedConstructor = new DelegatedConstructor(EXTENDS129); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:909:7: (ci= classInstantiation )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==LIDENTIFIER||LA84_0==PACKAGE||LA84_0==SUPER||LA84_0==UIDENTIFIER) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:910:9: ci= classInstantiation
                    {
                    pushFollow(FOLLOW_classInstantiation_in_delegatedConstructor6015);
                    ci=classInstantiation();

                    state._fsp--;
                    if (state.failed) return delegatedConstructor;

                    if ( state.backtracking==0 ) { delegatedConstructor.setType((ci!=null?ci.type:null));
                              delegatedConstructor.setInvocationExpression((ci!=null?ci.invocationExpression:null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return delegatedConstructor;
    }
    // $ANTLR end "delegatedConstructor"



    // $ANTLR start "aliasDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:916:1: aliasDeclaration returns [TypeAliasDeclaration declaration] : ALIAS ( typeNameDeclaration )? ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON ;
    public TypeAliasDeclaration aliasDeclaration() throws RecognitionException {
        TypeAliasDeclaration declaration = null;


        Token ALIAS130=null;
        Token SEMICOLON135=null;
        Identifier typeNameDeclaration131 =null;

        TypeParameterList typeParameters132 =null;

        TypeConstraintList typeConstraints133 =null;

        TypeSpecifier typeSpecifier134 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:917:5: ( ALIAS ( typeNameDeclaration )? ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:917:7: ALIAS ( typeNameDeclaration )? ( typeParameters )? ( typeConstraints )? ( typeSpecifier )? SEMICOLON
            {
            ALIAS130=(Token)match(input,ALIAS,FOLLOW_ALIAS_in_aliasDeclaration6055); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new TypeAliasDeclaration(ALIAS130);}

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:919:7: ( typeNameDeclaration )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==LIDENTIFIER||LA85_0==UIDENTIFIER) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:920:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_aliasDeclaration6081);
                    typeNameDeclaration131=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(typeNameDeclaration131); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:923:7: ( typeParameters )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==SMALLER_OP) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:924:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_aliasDeclaration6119);
                    typeParameters132=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeParameterList(typeParameters132); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:927:7: ( typeConstraints )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==COMPILER_ANNOTATION||LA87_0==TYPE_CONSTRAINT) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:928:9: typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_aliasDeclaration6157);
                    typeConstraints133=typeConstraints();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeConstraintList(typeConstraints133); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:931:7: ( typeSpecifier )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==COMPUTE||LA88_0==SPECIFY) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:932:9: typeSpecifier
                    {
                    pushFollow(FOLLOW_typeSpecifier_in_aliasDeclaration6194);
                    typeSpecifier134=typeSpecifier();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeSpecifier(typeSpecifier134); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON135=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_aliasDeclaration6229); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON135); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "aliasDeclaration"



    // $ANTLR start "assertion"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:941:1: assertion returns [Assertion assertion] : annotations ASSERT conditions SEMICOLON ;
    public Assertion assertion() throws RecognitionException {
        Assertion assertion = null;


        Token ASSERT136=null;
        Token SEMICOLON139=null;
        AnnotationList annotations137 =null;

        ConditionList conditions138 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:942:5: ( annotations ASSERT conditions SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:942:7: annotations ASSERT conditions SEMICOLON
            {
            pushFollow(FOLLOW_annotations_in_assertion6258);
            annotations137=annotations();

            state._fsp--;
            if (state.failed) return assertion;

            ASSERT136=(Token)match(input,ASSERT,FOLLOW_ASSERT_in_assertion6266); if (state.failed) return assertion;

            if ( state.backtracking==0 ) { assertion = new Assertion(ASSERT136); 
                    assertion.setAnnotationList(annotations137); }

            pushFollow(FOLLOW_conditions_in_assertion6282);
            conditions138=conditions();

            state._fsp--;
            if (state.failed) return assertion;

            if ( state.backtracking==0 ) { assertion.setConditionList(conditions138); }

            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON139=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_assertion6306); if (state.failed) return assertion;

            if ( state.backtracking==0 ) { assertion.setEndToken(SEMICOLON139); 
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return assertion;
    }
    // $ANTLR end "assertion"



    // $ANTLR start "block"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:954:1: block returns [Block block] : LBRACE ( declarationOrStatement )* RBRACE ;
    public Block block() throws RecognitionException {
        Block block = null;


        Token LBRACE140=null;
        Token RBRACE142=null;
        Statement declarationOrStatement141 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:955:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:955:7: LBRACE ( declarationOrStatement )* RBRACE
            {
            LBRACE140=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_block6335); if (state.failed) return block;

            if ( state.backtracking==0 ) { block = new Block(LBRACE140); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:957:7: ( declarationOrStatement )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==ALIAS||(LA89_0 >= ASSERT && LA89_0 <= ASSIGN)||(LA89_0 >= BACKTICK && LA89_0 <= BREAK)||(LA89_0 >= CHAR_LITERAL && LA89_0 <= CLASS_DEFINITION)||LA89_0==COMPILER_ANNOTATION||LA89_0==CONTINUE||(LA89_0 >= DECREMENT_OP && LA89_0 <= DIFFERENCE_OP)||LA89_0==DYNAMIC||(LA89_0 >= FLOAT_LITERAL && LA89_0 <= FUNCTION_MODIFIER)||(LA89_0 >= IF_CLAUSE && LA89_0 <= INTERFACE_DEFINITION)||LA89_0==IN_OP||(LA89_0 >= LBRACE && LA89_0 <= LIDENTIFIER)||LA89_0==LPAREN||LA89_0==MODULE||(LA89_0 >= NATURAL_LITERAL && LA89_0 <= NEW)||(LA89_0 >= NOT_OP && LA89_0 <= OBJECT_DEFINITION)||(LA89_0 >= OUT && LA89_0 <= PACKAGE)||LA89_0==PRODUCT_OP||LA89_0==RETURN||(LA89_0 >= SEMICOLON && LA89_0 <= SMALLER_OP)||LA89_0==STRING_LITERAL||LA89_0==STRING_START||(LA89_0 >= SUM_OP && LA89_0 <= SWITCH_CLAUSE)||(LA89_0 >= THIS && LA89_0 <= UIDENTIFIER)||(LA89_0 >= VALUE_MODIFIER && LA89_0 <= WHILE_CLAUSE)) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:958:9: declarationOrStatement
            	    {
            	    pushFollow(FOLLOW_declarationOrStatement_in_block6362);
            	    declarationOrStatement141=declarationOrStatement();

            	    state._fsp--;
            	    if (state.failed) return block;

            	    if ( state.backtracking==0 ) { if (declarationOrStatement141!=null)
            	                  block.addStatement(declarationOrStatement141); }

            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);


            RBRACE142=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_block6389); if (state.failed) return block;

            if ( state.backtracking==0 ) { block.setEndToken(RBRACE142); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "block"



    // $ANTLR start "interfaceBody"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:970:1: interfaceBody returns [InterfaceBody interfaceBody] : LBRACE ( declarationOrStatement )* RBRACE ;
    public InterfaceBody interfaceBody() throws RecognitionException {
        InterfaceBody interfaceBody = null;


        Token LBRACE143=null;
        Token RBRACE145=null;
        Statement declarationOrStatement144 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:971:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:971:7: LBRACE ( declarationOrStatement )* RBRACE
            {
            LBRACE143=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_interfaceBody6422); if (state.failed) return interfaceBody;

            if ( state.backtracking==0 ) { interfaceBody = new InterfaceBody(LBRACE143); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:973:7: ( declarationOrStatement )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==ALIAS||(LA90_0 >= ASSERT && LA90_0 <= ASSIGN)||(LA90_0 >= BACKTICK && LA90_0 <= BREAK)||(LA90_0 >= CHAR_LITERAL && LA90_0 <= CLASS_DEFINITION)||LA90_0==COMPILER_ANNOTATION||LA90_0==CONTINUE||(LA90_0 >= DECREMENT_OP && LA90_0 <= DIFFERENCE_OP)||LA90_0==DYNAMIC||(LA90_0 >= FLOAT_LITERAL && LA90_0 <= FUNCTION_MODIFIER)||(LA90_0 >= IF_CLAUSE && LA90_0 <= INTERFACE_DEFINITION)||LA90_0==IN_OP||(LA90_0 >= LBRACE && LA90_0 <= LIDENTIFIER)||LA90_0==LPAREN||LA90_0==MODULE||(LA90_0 >= NATURAL_LITERAL && LA90_0 <= NEW)||(LA90_0 >= NOT_OP && LA90_0 <= OBJECT_DEFINITION)||(LA90_0 >= OUT && LA90_0 <= PACKAGE)||LA90_0==PRODUCT_OP||LA90_0==RETURN||(LA90_0 >= SEMICOLON && LA90_0 <= SMALLER_OP)||LA90_0==STRING_LITERAL||LA90_0==STRING_START||(LA90_0 >= SUM_OP && LA90_0 <= SWITCH_CLAUSE)||(LA90_0 >= THIS && LA90_0 <= UIDENTIFIER)||(LA90_0 >= VALUE_MODIFIER && LA90_0 <= WHILE_CLAUSE)) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:974:9: declarationOrStatement
            	    {
            	    pushFollow(FOLLOW_declarationOrStatement_in_interfaceBody6449);
            	    declarationOrStatement144=declarationOrStatement();

            	    state._fsp--;
            	    if (state.failed) return interfaceBody;

            	    if ( state.backtracking==0 ) { if (declarationOrStatement144!=null)
            	                  interfaceBody.addStatement(declarationOrStatement144); }

            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);


            RBRACE145=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_interfaceBody6476); if (state.failed) return interfaceBody;

            if ( state.backtracking==0 ) { interfaceBody.setEndToken(RBRACE145); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return interfaceBody;
    }
    // $ANTLR end "interfaceBody"



    // $ANTLR start "classBody"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:982:1: classBody returns [ClassBody classBody] : LBRACE ( declarationOrStatement )* RBRACE ;
    public ClassBody classBody() throws RecognitionException {
        ClassBody classBody = null;


        Token LBRACE146=null;
        Token RBRACE148=null;
        Statement declarationOrStatement147 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:983:5: ( LBRACE ( declarationOrStatement )* RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:983:7: LBRACE ( declarationOrStatement )* RBRACE
            {
            LBRACE146=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_classBody6505); if (state.failed) return classBody;

            if ( state.backtracking==0 ) { classBody = new ClassBody(LBRACE146); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:985:7: ( declarationOrStatement )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==ALIAS||(LA91_0 >= ASSERT && LA91_0 <= ASSIGN)||(LA91_0 >= BACKTICK && LA91_0 <= BREAK)||(LA91_0 >= CHAR_LITERAL && LA91_0 <= CLASS_DEFINITION)||LA91_0==COMPILER_ANNOTATION||LA91_0==CONTINUE||(LA91_0 >= DECREMENT_OP && LA91_0 <= DIFFERENCE_OP)||LA91_0==DYNAMIC||(LA91_0 >= FLOAT_LITERAL && LA91_0 <= FUNCTION_MODIFIER)||(LA91_0 >= IF_CLAUSE && LA91_0 <= INTERFACE_DEFINITION)||LA91_0==IN_OP||(LA91_0 >= LBRACE && LA91_0 <= LIDENTIFIER)||LA91_0==LPAREN||LA91_0==MODULE||(LA91_0 >= NATURAL_LITERAL && LA91_0 <= NEW)||(LA91_0 >= NOT_OP && LA91_0 <= OBJECT_DEFINITION)||(LA91_0 >= OUT && LA91_0 <= PACKAGE)||LA91_0==PRODUCT_OP||LA91_0==RETURN||(LA91_0 >= SEMICOLON && LA91_0 <= SMALLER_OP)||LA91_0==STRING_LITERAL||LA91_0==STRING_START||(LA91_0 >= SUM_OP && LA91_0 <= SWITCH_CLAUSE)||(LA91_0 >= THIS && LA91_0 <= UIDENTIFIER)||(LA91_0 >= VALUE_MODIFIER && LA91_0 <= WHILE_CLAUSE)) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:986:9: declarationOrStatement
            	    {
            	    pushFollow(FOLLOW_declarationOrStatement_in_classBody6531);
            	    declarationOrStatement147=declarationOrStatement();

            	    state._fsp--;
            	    if (state.failed) return classBody;

            	    if ( state.backtracking==0 ) { if (declarationOrStatement147!=null)
            	                  classBody.addStatement(declarationOrStatement147); }

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);


            RBRACE148=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_classBody6558); if (state.failed) return classBody;

            if ( state.backtracking==0 ) { classBody.setEndToken(RBRACE148); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return classBody;
    }
    // $ANTLR end "classBody"



    // $ANTLR start "extendedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:994:1: extendedType returns [ExtendedType extendedType] : EXTENDS (ci= classInstantiation )? ;
    public ExtendedType extendedType() throws RecognitionException {
        ExtendedType extendedType = null;


        Token EXTENDS149=null;
        PsiCompatibleCeylonParser.classInstantiation_return ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:995:5: ( EXTENDS (ci= classInstantiation )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:995:7: EXTENDS (ci= classInstantiation )?
            {
            EXTENDS149=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_extendedType6587); if (state.failed) return extendedType;

            if ( state.backtracking==0 ) { extendedType = new ExtendedType(EXTENDS149); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:997:7: (ci= classInstantiation )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==LIDENTIFIER||LA92_0==PACKAGE||LA92_0==SUPER||LA92_0==UIDENTIFIER) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:998:9: ci= classInstantiation
                    {
                    pushFollow(FOLLOW_classInstantiation_in_extendedType6617);
                    ci=classInstantiation();

                    state._fsp--;
                    if (state.failed) return extendedType;

                    if ( state.backtracking==0 ) { extendedType.setType((ci!=null?ci.type:null));
                              extendedType.setInvocationExpression((ci!=null?ci.invocationExpression:null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return extendedType;
    }
    // $ANTLR end "extendedType"



    // $ANTLR start "classSpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1004:1: classSpecifier returns [ClassSpecifier classSpecifier] : ( COMPUTE | SPECIFY ) (ci= classInstantiation )? ;
    public ClassSpecifier classSpecifier() throws RecognitionException {
        ClassSpecifier classSpecifier = null;


        Token COMPUTE150=null;
        Token SPECIFY151=null;
        PsiCompatibleCeylonParser.classInstantiation_return ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1005:5: ( ( COMPUTE | SPECIFY ) (ci= classInstantiation )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1005:7: ( COMPUTE | SPECIFY ) (ci= classInstantiation )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1005:7: ( COMPUTE | SPECIFY )
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==COMPUTE) ) {
                alt93=1;
            }
            else if ( (LA93_0==SPECIFY) ) {
                alt93=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return classSpecifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;

            }
            switch (alt93) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1006:9: COMPUTE
                    {
                    COMPUTE150=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_classSpecifier6667); if (state.failed) return classSpecifier;

                    if ( state.backtracking==0 ) { classSpecifier = new ClassSpecifier(COMPUTE150); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1009:9: SPECIFY
                    {
                    SPECIFY151=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_classSpecifier6696); if (state.failed) return classSpecifier;

                    if ( state.backtracking==0 ) { classSpecifier = new ClassSpecifier(SPECIFY151); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1012:7: (ci= classInstantiation )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==LIDENTIFIER||LA94_0==PACKAGE||LA94_0==SUPER||LA94_0==UIDENTIFIER) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1013:9: ci= classInstantiation
                    {
                    pushFollow(FOLLOW_classInstantiation_in_classSpecifier6735);
                    ci=classInstantiation();

                    state._fsp--;
                    if (state.failed) return classSpecifier;

                    if ( state.backtracking==0 ) { classSpecifier.setType((ci!=null?ci.type:null));
                              classSpecifier.setInvocationExpression((ci!=null?ci.invocationExpression:null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return classSpecifier;
    }
    // $ANTLR end "classSpecifier"


    public static class packageQualifiedClass_return extends ParserRuleReturnScope {
        public SimpleType type;
        public ExtendedTypeExpression expression;
    };


    // $ANTLR start "packageQualifiedClass"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1019:1: packageQualifiedClass returns [SimpleType type, ExtendedTypeExpression expression] : PACKAGE (m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= memberNameWithArguments )? )? )? ;
    public PsiCompatibleCeylonParser.packageQualifiedClass_return packageQualifiedClass() throws RecognitionException {
        PsiCompatibleCeylonParser.packageQualifiedClass_return retval = new PsiCompatibleCeylonParser.packageQualifiedClass_return();
        retval.start = input.LT(1);


        Token m1=null;
        Token m2=null;
        Token PACKAGE152=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return t1 =null;

        PsiCompatibleCeylonParser.memberNameWithArguments_return t2 =null;


         BaseType bt = null;
                    QualifiedType qt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1022:5: ( PACKAGE (m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= memberNameWithArguments )? )? )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1022:7: PACKAGE (m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= memberNameWithArguments )? )? )?
            {
            PACKAGE152=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_packageQualifiedClass6784); if (state.failed) return retval;

            if ( state.backtracking==0 ) { bt = new BaseType(PACKAGE152);
                    bt.setPackageQualified(true);
                    retval.type =bt; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1026:7: (m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= memberNameWithArguments )? )? )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==MEMBER_OP) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1027:9: m1= MEMBER_OP (t1= typeNameWithArguments (m2= MEMBER_OP t2= memberNameWithArguments )? )?
                    {
                    m1=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_packageQualifiedClass6812); if (state.failed) return retval;

                    if ( state.backtracking==0 ) { bt.setEndToken(m1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1029:9: (t1= typeNameWithArguments (m2= MEMBER_OP t2= memberNameWithArguments )? )?
                    int alt96=2;
                    int LA96_0 = input.LA(1);

                    if ( (LA96_0==UIDENTIFIER) ) {
                        alt96=1;
                    }
                    switch (alt96) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1030:11: t1= typeNameWithArguments (m2= MEMBER_OP t2= memberNameWithArguments )?
                            {
                            pushFollow(FOLLOW_typeNameWithArguments_in_packageQualifiedClass6846);
                            t1=typeNameWithArguments();

                            state._fsp--;
                            if (state.failed) return retval;

                            if ( state.backtracking==0 ) { if ((t1!=null?t1.identifier:null)!=null) {
                                          bt.setEndToken(null);
                                          bt.setIdentifier((t1!=null?t1.identifier:null));
                                        }
                                        if ((t1!=null?t1.typeArgumentList:null)!=null)
                                            bt.setTypeArgumentList((t1!=null?t1.typeArgumentList:null));
                                        retval.expression = new ExtendedTypeExpression(null);
                                        retval.expression.setExtendedType(retval.type); }

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1039:11: (m2= MEMBER_OP t2= memberNameWithArguments )?
                            int alt95=2;
                            int LA95_0 = input.LA(1);

                            if ( (LA95_0==MEMBER_OP) ) {
                                alt95=1;
                            }
                            switch (alt95) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1040:13: m2= MEMBER_OP t2= memberNameWithArguments
                                    {
                                    m2=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_packageQualifiedClass6887); if (state.failed) return retval;

                                    if ( state.backtracking==0 ) { qt = new QualifiedType(null);
                                                  qt.setOuterType(retval.type);
                                                  qt.setEndToken(m2); 
                                                  retval.type =qt; }

                                    pushFollow(FOLLOW_memberNameWithArguments_in_packageQualifiedClass6917);
                                    t2=memberNameWithArguments();

                                    state._fsp--;
                                    if (state.failed) return retval;

                                    if ( state.backtracking==0 ) { if ((t2!=null?t2.identifier:null)!=null) {
                                                    qt.setEndToken(null);
                                                    qt.setIdentifier((t2!=null?t2.identifier:null));
                                                  }
                                                  if ((t2!=null?t2.typeArgumentList:null)!=null)
                                                    qt.setTypeArgumentList((t2!=null?t2.typeArgumentList:null));
                                                  retval.expression = new ExtendedTypeExpression(null);
                                                  retval.expression.setExtendedType(retval.type); }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "packageQualifiedClass"


    public static class unqualifiedClass_return extends ParserRuleReturnScope {
        public SimpleType type;
        public ExtendedTypeExpression expression;
    };


    // $ANTLR start "unqualifiedClass"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1059:1: unqualifiedClass returns [SimpleType type, ExtendedTypeExpression expression] : (t0= typeNameWithArguments (m3= MEMBER_OP (t3= memberNameWithArguments )? )? |t4= memberNameWithArguments );
    public PsiCompatibleCeylonParser.unqualifiedClass_return unqualifiedClass() throws RecognitionException {
        PsiCompatibleCeylonParser.unqualifiedClass_return retval = new PsiCompatibleCeylonParser.unqualifiedClass_return();
        retval.start = input.LT(1);


        Token m3=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return t0 =null;

        PsiCompatibleCeylonParser.memberNameWithArguments_return t3 =null;

        PsiCompatibleCeylonParser.memberNameWithArguments_return t4 =null;


         BaseType bt = null;
                    QualifiedType qt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1062:5: (t0= typeNameWithArguments (m3= MEMBER_OP (t3= memberNameWithArguments )? )? |t4= memberNameWithArguments )
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==UIDENTIFIER) ) {
                alt100=1;
            }
            else if ( (LA100_0==LIDENTIFIER) ) {
                alt100=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;

            }
            switch (alt100) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1062:7: t0= typeNameWithArguments (m3= MEMBER_OP (t3= memberNameWithArguments )? )?
                    {
                    pushFollow(FOLLOW_typeNameWithArguments_in_unqualifiedClass6995);
                    t0=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { bt = new BaseType(null);
                            bt.setIdentifier((t0!=null?t0.identifier:null));
                            if ((t0!=null?t0.typeArgumentList:null)!=null)
                                bt.setTypeArgumentList((t0!=null?t0.typeArgumentList:null));
                            retval.type =bt; 
                            retval.expression = new ExtendedTypeExpression(null);
                            retval.expression.setExtendedType(retval.type); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1070:7: (m3= MEMBER_OP (t3= memberNameWithArguments )? )?
                    int alt99=2;
                    int LA99_0 = input.LA(1);

                    if ( (LA99_0==MEMBER_OP) ) {
                        alt99=1;
                    }
                    switch (alt99) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1071:9: m3= MEMBER_OP (t3= memberNameWithArguments )?
                            {
                            m3=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_unqualifiedClass7024); if (state.failed) return retval;

                            if ( state.backtracking==0 ) { qt = new QualifiedType(null);
                                      qt.setOuterType(retval.type);
                                      qt.setEndToken(m3); 
                                      retval.type =qt; }

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1076:9: (t3= memberNameWithArguments )?
                            int alt98=2;
                            int LA98_0 = input.LA(1);

                            if ( (LA98_0==LIDENTIFIER) ) {
                                alt98=1;
                            }
                            switch (alt98) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1077:11: t3= memberNameWithArguments
                                    {
                                    pushFollow(FOLLOW_memberNameWithArguments_in_unqualifiedClass7058);
                                    t3=memberNameWithArguments();

                                    state._fsp--;
                                    if (state.failed) return retval;

                                    if ( state.backtracking==0 ) { if ((t3!=null?t3.identifier:null)!=null) {
                                                  qt.setEndToken(null);
                                                  qt.setIdentifier((t3!=null?t3.identifier:null));
                                                }
                                                if ((t3!=null?t3.typeArgumentList:null)!=null)
                                                    qt.setTypeArgumentList((t3!=null?t3.typeArgumentList:null));
                                                retval.expression = new ExtendedTypeExpression(null);
                                                retval.expression.setExtendedType(retval.type); }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1088:7: t4= memberNameWithArguments
                    {
                    pushFollow(FOLLOW_memberNameWithArguments_in_unqualifiedClass7100);
                    t4=memberNameWithArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { bt = new BaseType(null);
                            bt.setIdentifier((t4!=null?t4.identifier:null));
                            if ((t4!=null?t4.typeArgumentList:null)!=null)
                                bt.setTypeArgumentList((t4!=null?t4.typeArgumentList:null));
                            retval.type =bt; 
                            retval.expression = new ExtendedTypeExpression(null);
                            retval.expression.setExtendedType(retval.type); }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "unqualifiedClass"


    public static class superQualifiedClass_return extends ParserRuleReturnScope {
        public SimpleType type;
        public ExtendedTypeExpression expression;
    };


    // $ANTLR start "superQualifiedClass"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1098:1: superQualifiedClass returns [SimpleType type, ExtendedTypeExpression expression] : SUPER m4= MEMBER_OP (t4= typeNameWithArguments |t5= memberNameWithArguments )? ;
    public PsiCompatibleCeylonParser.superQualifiedClass_return superQualifiedClass() throws RecognitionException {
        PsiCompatibleCeylonParser.superQualifiedClass_return retval = new PsiCompatibleCeylonParser.superQualifiedClass_return();
        retval.start = input.LT(1);


        Token m4=null;
        Token SUPER153=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return t4 =null;

        PsiCompatibleCeylonParser.memberNameWithArguments_return t5 =null;


         QualifiedType qt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1100:5: ( SUPER m4= MEMBER_OP (t4= typeNameWithArguments |t5= memberNameWithArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1100:7: SUPER m4= MEMBER_OP (t4= typeNameWithArguments |t5= memberNameWithArguments )?
            {
            SUPER153=(Token)match(input,SUPER,FOLLOW_SUPER_in_superQualifiedClass7138); if (state.failed) return retval;

            if ( state.backtracking==0 ) { SuperType st = new SuperType(SUPER153); 
                    qt = new QualifiedType(null); 
                    qt.setOuterType(st); 
                    retval.type =qt; }

            m4=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_superQualifiedClass7157); if (state.failed) return retval;

            if ( state.backtracking==0 ) { qt.setEndToken(m4); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1107:7: (t4= typeNameWithArguments |t5= memberNameWithArguments )?
            int alt101=3;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==UIDENTIFIER) ) {
                alt101=1;
            }
            else if ( (LA101_0==LIDENTIFIER) ) {
                alt101=2;
            }
            switch (alt101) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1108:9: t4= typeNameWithArguments
                    {
                    pushFollow(FOLLOW_typeNameWithArguments_in_superQualifiedClass7185);
                    t4=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { if ((t4!=null?t4.identifier:null)!=null) {
                                qt.setEndToken(null);
                                qt.setIdentifier((t4!=null?t4.identifier:null));
                              }
                              if ((t4!=null?t4.typeArgumentList:null)!=null)
                                qt.setTypeArgumentList((t4!=null?t4.typeArgumentList:null));
                              retval.expression = new ExtendedTypeExpression(null);
                              retval.expression.setExtendedType(retval.type); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1118:9: t5= memberNameWithArguments
                    {
                    pushFollow(FOLLOW_memberNameWithArguments_in_superQualifiedClass7216);
                    t5=memberNameWithArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { if ((t5!=null?t5.identifier:null)!=null) {
                                qt.setEndToken(null);
                                qt.setIdentifier((t5!=null?t5.identifier:null));
                              }
                              if ((t5!=null?t5.typeArgumentList:null)!=null)
                                qt.setTypeArgumentList((t5!=null?t5.typeArgumentList:null));
                              retval.expression = new ExtendedTypeExpression(null);
                              retval.expression.setExtendedType(retval.type); }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "superQualifiedClass"


    public static class classInstantiation_return extends ParserRuleReturnScope {
        public SimpleType type;
        public InvocationExpression invocationExpression;
    };


    // $ANTLR start "classInstantiation"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1130:1: classInstantiation returns [SimpleType type, InvocationExpression invocationExpression] : (pq= packageQualifiedClass |uq= unqualifiedClass |sq= superQualifiedClass ) (pa= positionalArguments )? ;
    public PsiCompatibleCeylonParser.classInstantiation_return classInstantiation() throws RecognitionException {
        PsiCompatibleCeylonParser.classInstantiation_return retval = new PsiCompatibleCeylonParser.classInstantiation_return();
        retval.start = input.LT(1);


        PsiCompatibleCeylonParser.packageQualifiedClass_return pq =null;

        PsiCompatibleCeylonParser.unqualifiedClass_return uq =null;

        PsiCompatibleCeylonParser.superQualifiedClass_return sq =null;

        PositionalArgumentList pa =null;


         ExtendedTypeExpression ete = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1132:5: ( (pq= packageQualifiedClass |uq= unqualifiedClass |sq= superQualifiedClass ) (pa= positionalArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1132:7: (pq= packageQualifiedClass |uq= unqualifiedClass |sq= superQualifiedClass ) (pa= positionalArguments )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1132:7: (pq= packageQualifiedClass |uq= unqualifiedClass |sq= superQualifiedClass )
            int alt102=3;
            switch ( input.LA(1) ) {
            case PACKAGE:
                {
                alt102=1;
                }
                break;
            case LIDENTIFIER:
            case UIDENTIFIER:
                {
                alt102=2;
                }
                break;
            case SUPER:
                {
                alt102=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 102, 0, input);

                throw nvae;

            }

            switch (alt102) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1133:8: pq= packageQualifiedClass
                    {
                    pushFollow(FOLLOW_packageQualifiedClass_in_classInstantiation7276);
                    pq=packageQualifiedClass();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =(pq!=null?pq.type:null); ete=(pq!=null?pq.expression:null); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1136:8: uq= unqualifiedClass
                    {
                    pushFollow(FOLLOW_unqualifiedClass_in_classInstantiation7304);
                    uq=unqualifiedClass();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =(uq!=null?uq.type:null); ete=(uq!=null?uq.expression:null); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1139:8: sq= superQualifiedClass
                    {
                    pushFollow(FOLLOW_superQualifiedClass_in_classInstantiation7332);
                    sq=superQualifiedClass();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =(sq!=null?sq.type:null); ete=(sq!=null?sq.expression:null); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1142:7: (pa= positionalArguments )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==LPAREN) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1143:9: pa= positionalArguments
                    {
                    pushFollow(FOLLOW_positionalArguments_in_classInstantiation7368);
                    pa=positionalArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.invocationExpression = new InvocationExpression(null);
                              retval.invocationExpression.setPrimary(ete);
                              retval.invocationExpression.setPositionalArgumentList(pa); }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "classInstantiation"



    // $ANTLR start "satisfiedTypes"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1155:1: satisfiedTypes returns [SatisfiedTypes satisfiedTypes] : SATISFIES (t1= primaryType ) ( (i= INTERSECTION_OP | ( COMMA | UNION_OP ) ) (t2= primaryType ) )* ;
    public SatisfiedTypes satisfiedTypes() throws RecognitionException {
        SatisfiedTypes satisfiedTypes = null;


        Token i=null;
        Token SATISFIES154=null;
        StaticType t1 =null;

        StaticType t2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1156:5: ( SATISFIES (t1= primaryType ) ( (i= INTERSECTION_OP | ( COMMA | UNION_OP ) ) (t2= primaryType ) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1156:7: SATISFIES (t1= primaryType ) ( (i= INTERSECTION_OP | ( COMMA | UNION_OP ) ) (t2= primaryType ) )*
            {
            SATISFIES154=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiedTypes7418); if (state.failed) return satisfiedTypes;

            if ( state.backtracking==0 ) { satisfiedTypes = new SatisfiedTypes(SATISFIES154); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1158:7: (t1= primaryType )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1159:9: t1= primaryType
            {
            pushFollow(FOLLOW_primaryType_in_satisfiedTypes7448);
            t1=primaryType();

            state._fsp--;
            if (state.failed) return satisfiedTypes;

            if ( state.backtracking==0 ) { if (t1!=null) satisfiedTypes.addType(t1); }

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1162:7: ( (i= INTERSECTION_OP | ( COMMA | UNION_OP ) ) (t2= primaryType ) )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==COMMA||LA105_0==INTERSECTION_OP||LA105_0==UNION_OP) ) {
                    alt105=1;
                }


                switch (alt105) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1163:9: (i= INTERSECTION_OP | ( COMMA | UNION_OP ) ) (t2= primaryType )
            	    {
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1163:9: (i= INTERSECTION_OP | ( COMMA | UNION_OP ) )
            	    int alt104=2;
            	    int LA104_0 = input.LA(1);

            	    if ( (LA104_0==INTERSECTION_OP) ) {
            	        alt104=1;
            	    }
            	    else if ( (LA104_0==COMMA||LA104_0==UNION_OP) ) {
            	        alt104=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return satisfiedTypes;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 104, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt104) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1164:11: i= INTERSECTION_OP
            	            {
            	            i=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_satisfiedTypes7500); if (state.failed) return satisfiedTypes;

            	            if ( state.backtracking==0 ) { satisfiedTypes.setEndToken(i); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1167:11: ( COMMA | UNION_OP )
            	            {
            	            if ( input.LA(1)==COMMA||input.LA(1)==UNION_OP ) {
            	                input.consume();
            	                state.errorRecovery=false;
            	                state.failed=false;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return satisfiedTypes;}
            	                MismatchedSetException mse = new MismatchedSetException(null,input);
            	                throw mse;
            	            }


            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                          new MismatchedTokenException(INTERSECTION_OP, input)); }

            	            }
            	            break;

            	    }


            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1171:9: (t2= primaryType )
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1172:11: t2= primaryType
            	    {
            	    pushFollow(FOLLOW_primaryType_in_satisfiedTypes7585);
            	    t2=primaryType();

            	    state._fsp--;
            	    if (state.failed) return satisfiedTypes;

            	    if ( state.backtracking==0 ) { if (t2!=null) {
            	                    satisfiedTypes.addType(t2); 
            	                    satisfiedTypes.setEndToken(null); } }

            	    }


            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return satisfiedTypes;
    }
    // $ANTLR end "satisfiedTypes"



    // $ANTLR start "caseTypes"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1180:1: caseTypes returns [CaseTypes caseTypes] : CASE_TYPES ct1= caseType ( (u= UNION_OP | ( COMMA | INTERSECTION_OP ) ) (ct2= caseType ) )* ;
    public CaseTypes caseTypes() throws RecognitionException {
        CaseTypes caseTypes = null;


        Token u=null;
        Token CASE_TYPES155=null;
        PsiCompatibleCeylonParser.caseType_return ct1 =null;

        PsiCompatibleCeylonParser.caseType_return ct2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1181:5: ( CASE_TYPES ct1= caseType ( (u= UNION_OP | ( COMMA | INTERSECTION_OP ) ) (ct2= caseType ) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1181:7: CASE_TYPES ct1= caseType ( (u= UNION_OP | ( COMMA | INTERSECTION_OP ) ) (ct2= caseType ) )*
            {
            CASE_TYPES155=(Token)match(input,CASE_TYPES,FOLLOW_CASE_TYPES_in_caseTypes7637); if (state.failed) return caseTypes;

            if ( state.backtracking==0 ) { caseTypes = new CaseTypes(CASE_TYPES155); }

            pushFollow(FOLLOW_caseType_in_caseTypes7655);
            ct1=caseType();

            state._fsp--;
            if (state.failed) return caseTypes;

            if ( state.backtracking==0 ) { if ((ct1!=null?ct1.type:null)!=null) caseTypes.addType((ct1!=null?ct1.type:null)); 
                    if ((ct1!=null?ct1.instance:null)!=null) caseTypes.addBaseMemberExpression((ct1!=null?ct1.instance:null)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1186:7: ( (u= UNION_OP | ( COMMA | INTERSECTION_OP ) ) (ct2= caseType ) )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==COMMA||LA107_0==INTERSECTION_OP||LA107_0==UNION_OP) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1187:9: (u= UNION_OP | ( COMMA | INTERSECTION_OP ) ) (ct2= caseType )
            	    {
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1187:9: (u= UNION_OP | ( COMMA | INTERSECTION_OP ) )
            	    int alt106=2;
            	    int LA106_0 = input.LA(1);

            	    if ( (LA106_0==UNION_OP) ) {
            	        alt106=1;
            	    }
            	    else if ( (LA106_0==COMMA||LA106_0==INTERSECTION_OP) ) {
            	        alt106=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return caseTypes;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 106, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt106) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1188:11: u= UNION_OP
            	            {
            	            u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_caseTypes7697); if (state.failed) return caseTypes;

            	            if ( state.backtracking==0 ) { caseTypes.setEndToken(u); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1191:11: ( COMMA | INTERSECTION_OP )
            	            {
            	            if ( input.LA(1)==COMMA||input.LA(1)==INTERSECTION_OP ) {
            	                input.consume();
            	                state.errorRecovery=false;
            	                state.failed=false;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return caseTypes;}
            	                MismatchedSetException mse = new MismatchedSetException(null,input);
            	                throw mse;
            	            }


            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                          new MismatchedTokenException(UNION_OP, input)); }

            	            }
            	            break;

            	    }


            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1195:9: (ct2= caseType )
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1196:11: ct2= caseType
            	    {
            	    pushFollow(FOLLOW_caseType_in_caseTypes7783);
            	    ct2=caseType();

            	    state._fsp--;
            	    if (state.failed) return caseTypes;

            	    if ( state.backtracking==0 ) { if ((ct2!=null?ct2.type:null)!=null) caseTypes.addType((ct2!=null?ct2.type:null)); 
            	                if ((ct2!=null?ct2.instance:null)!=null) caseTypes.addBaseMemberExpression((ct2!=null?ct2.instance:null)); 
            	                if ((ct2!=null?ct2.type:null)!=null||(ct2!=null?ct2.instance:null)!=null) caseTypes.setEndToken(null); }

            	    }


            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return caseTypes;
    }
    // $ANTLR end "caseTypes"


    public static class caseType_return extends ParserRuleReturnScope {
        public StaticType type;
        public BaseMemberExpression instance;
    };


    // $ANTLR start "caseType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1204:1: caseType returns [StaticType type, BaseMemberExpression instance] : (t= primaryType | memberName );
    public PsiCompatibleCeylonParser.caseType_return caseType() throws RecognitionException {
        PsiCompatibleCeylonParser.caseType_return retval = new PsiCompatibleCeylonParser.caseType_return();
        retval.start = input.LT(1);


        StaticType t =null;

        Identifier memberName156 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1205:5: (t= primaryType | memberName )
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( ((LA108_0 >= LBRACE && LA108_0 <= LBRACKET)||LA108_0==PACKAGE||LA108_0==SMALLER_OP||LA108_0==UIDENTIFIER) ) {
                alt108=1;
            }
            else if ( (LA108_0==LIDENTIFIER) ) {
                alt108=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 108, 0, input);

                throw nvae;

            }
            switch (alt108) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1205:7: t= primaryType
                    {
                    pushFollow(FOLLOW_primaryType_in_caseType7837);
                    t=primaryType();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.type =t;}

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1207:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_caseType7854);
                    memberName156=memberName();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.instance = new BaseMemberExpression(null);
                            retval.instance.setIdentifier(memberName156);
                            retval.instance.setTypeArguments( new InferredTypeArguments(null) ); }

                    }
                    break;

            }
            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "caseType"



    // $ANTLR start "abstractedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1215:1: abstractedType returns [AbstractedType abstractedType] : ABSTRACTED_TYPE primaryType ;
    public AbstractedType abstractedType() throws RecognitionException {
        AbstractedType abstractedType = null;


        Token ABSTRACTED_TYPE157=null;
        StaticType primaryType158 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1216:5: ( ABSTRACTED_TYPE primaryType )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1216:7: ABSTRACTED_TYPE primaryType
            {
            ABSTRACTED_TYPE157=(Token)match(input,ABSTRACTED_TYPE,FOLLOW_ABSTRACTED_TYPE_in_abstractedType7889); if (state.failed) return abstractedType;

            if ( state.backtracking==0 ) { abstractedType = new AbstractedType(ABSTRACTED_TYPE157); }

            pushFollow(FOLLOW_primaryType_in_abstractedType7905);
            primaryType158=primaryType();

            state._fsp--;
            if (state.failed) return abstractedType;

            if ( state.backtracking==0 ) { abstractedType.setType(primaryType158); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return abstractedType;
    }
    // $ANTLR end "abstractedType"



    // $ANTLR start "parameters"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1222:1: parameters returns [ParameterList parameterList] : LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN ;
    public ParameterList parameters() throws RecognitionException {
        ParameterList parameterList = null;


        Token c=null;
        Token LPAREN159=null;
        Token RPAREN160=null;
        Parameter ap1 =null;

        Parameter ap2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1223:5: ( LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1223:7: LPAREN (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )? RPAREN
            {
            LPAREN159=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parameters7934); if (state.failed) return parameterList;

            if ( state.backtracking==0 ) { parameterList =new ParameterList(LPAREN159); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1225:7: (ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )* )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==ALIAS||(LA111_0 >= ASSERT && LA111_0 <= ASSIGN)||(LA111_0 >= BACKTICK && LA111_0 <= BREAK)||(LA111_0 >= CHAR_LITERAL && LA111_0 <= CLASS_DEFINITION)||LA111_0==COMPILER_ANNOTATION||LA111_0==CONTINUE||(LA111_0 >= DECREMENT_OP && LA111_0 <= DIFFERENCE_OP)||LA111_0==DYNAMIC||(LA111_0 >= FLOAT_LITERAL && LA111_0 <= FUNCTION_MODIFIER)||(LA111_0 >= IF_CLAUSE && LA111_0 <= INTERFACE_DEFINITION)||LA111_0==IN_OP||(LA111_0 >= LBRACE && LA111_0 <= LIDENTIFIER)||LA111_0==LPAREN||LA111_0==MODULE||(LA111_0 >= NATURAL_LITERAL && LA111_0 <= NEW)||(LA111_0 >= NOT_OP && LA111_0 <= OBJECT_DEFINITION)||(LA111_0 >= OUT && LA111_0 <= PACKAGE)||LA111_0==PRODUCT_OP||LA111_0==RETURN||(LA111_0 >= SEMICOLON && LA111_0 <= SMALLER_OP)||LA111_0==STRING_LITERAL||LA111_0==STRING_START||(LA111_0 >= SUM_OP && LA111_0 <= SWITCH_CLAUSE)||(LA111_0 >= THIS && LA111_0 <= UIDENTIFIER)||(LA111_0 >= VALUE_MODIFIER && LA111_0 <= WHILE_CLAUSE)) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1226:9: ap1= parameterDeclarationOrRef (c= COMMA (ap2= parameterDeclarationOrRef |) )*
                    {
                    pushFollow(FOLLOW_parameterDeclarationOrRef_in_parameters7962);
                    ap1=parameterDeclarationOrRef();

                    state._fsp--;
                    if (state.failed) return parameterList;

                    if ( state.backtracking==0 ) { if (ap1!=null)
                                  parameterList.addParameter(ap1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1229:9: (c= COMMA (ap2= parameterDeclarationOrRef |) )*
                    loop110:
                    do {
                        int alt110=2;
                        int LA110_0 = input.LA(1);

                        if ( (LA110_0==COMMA) ) {
                            alt110=1;
                        }


                        switch (alt110) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1230:11: c= COMMA (ap2= parameterDeclarationOrRef |)
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_parameters7997); if (state.failed) return parameterList;

                    	    if ( state.backtracking==0 ) { parameterList.setEndToken(c); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1232:11: (ap2= parameterDeclarationOrRef |)
                    	    int alt109=2;
                    	    int LA109_0 = input.LA(1);

                    	    if ( (LA109_0==ALIAS||(LA109_0 >= ASSERT && LA109_0 <= ASSIGN)||(LA109_0 >= BACKTICK && LA109_0 <= BREAK)||(LA109_0 >= CHAR_LITERAL && LA109_0 <= CLASS_DEFINITION)||LA109_0==COMPILER_ANNOTATION||LA109_0==CONTINUE||(LA109_0 >= DECREMENT_OP && LA109_0 <= DIFFERENCE_OP)||LA109_0==DYNAMIC||(LA109_0 >= FLOAT_LITERAL && LA109_0 <= FUNCTION_MODIFIER)||(LA109_0 >= IF_CLAUSE && LA109_0 <= INTERFACE_DEFINITION)||LA109_0==IN_OP||(LA109_0 >= LBRACE && LA109_0 <= LIDENTIFIER)||LA109_0==LPAREN||LA109_0==MODULE||(LA109_0 >= NATURAL_LITERAL && LA109_0 <= NEW)||(LA109_0 >= NOT_OP && LA109_0 <= OBJECT_DEFINITION)||(LA109_0 >= OUT && LA109_0 <= PACKAGE)||LA109_0==PRODUCT_OP||LA109_0==RETURN||(LA109_0 >= SEMICOLON && LA109_0 <= SMALLER_OP)||LA109_0==STRING_LITERAL||LA109_0==STRING_START||(LA109_0 >= SUM_OP && LA109_0 <= SWITCH_CLAUSE)||(LA109_0 >= THIS && LA109_0 <= UIDENTIFIER)||(LA109_0 >= VALUE_MODIFIER && LA109_0 <= WHILE_CLAUSE)) ) {
                    	        alt109=1;
                    	    }
                    	    else if ( (LA109_0==COMMA||LA109_0==RPAREN) ) {
                    	        alt109=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return parameterList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 109, 0, input);

                    	        throw nvae;

                    	    }
                    	    switch (alt109) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1233:13: ap2= parameterDeclarationOrRef
                    	            {
                    	            pushFollow(FOLLOW_parameterDeclarationOrRef_in_parameters8037);
                    	            ap2=parameterDeclarationOrRef();

                    	            state._fsp--;
                    	            if (state.failed) return parameterList;

                    	            if ( state.backtracking==0 ) { if (ap2!=null) {
                    	                              parameterList.addParameter(ap2); 
                    	                              parameterList.setEndToken(null); } }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1238:13: 
                    	            {
                    	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(),
                    	                            new MismatchedTokenException(UIDENTIFIER, input)); }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop110;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN160=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parameters8117); if (state.failed) return parameterList;

            if ( state.backtracking==0 ) { parameterList.setEndToken(RPAREN160); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameterList;
    }
    // $ANTLR end "parameters"



    // $ANTLR start "parameter"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1247:1: parameter returns [ParameterDeclaration parameter] : compilerAnnotations annotations parameterDeclaration ;
    public ParameterDeclaration parameter() throws RecognitionException {
        ParameterDeclaration parameter = null;


        TypedDeclaration parameterDeclaration161 =null;

        List<CompilerAnnotation> compilerAnnotations162 =null;

        AnnotationList annotations163 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1248:5: ( compilerAnnotations annotations parameterDeclaration )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1248:7: compilerAnnotations annotations parameterDeclaration
            {
            pushFollow(FOLLOW_compilerAnnotations_in_parameter8146);
            compilerAnnotations162=compilerAnnotations();

            state._fsp--;
            if (state.failed) return parameter;

            pushFollow(FOLLOW_annotations_in_parameter8154);
            annotations163=annotations();

            state._fsp--;
            if (state.failed) return parameter;

            pushFollow(FOLLOW_parameterDeclaration_in_parameter8162);
            parameterDeclaration161=parameterDeclaration();

            state._fsp--;
            if (state.failed) return parameter;

            if ( state.backtracking==0 ) { TypedDeclaration d = parameterDeclaration161;
                    d.getCompilerAnnotations().addAll(compilerAnnotations162);
                    d.setAnnotationList(annotations163);
                    if (d instanceof AttributeDeclaration) {
                        ValueParameterDeclaration vp = new ValueParameterDeclaration(null);
                        vp.setTypedDeclaration(d);
                        parameter = vp;
                    }
                    else if (d instanceof MethodDeclaration) {
                        FunctionalParameterDeclaration fp = new FunctionalParameterDeclaration(null);
                        fp.setTypedDeclaration(d);
                        parameter = fp;
                    }
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameter"



    // $ANTLR start "parameterDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1267:1: parameterDeclaration returns [TypedDeclaration declaration] : ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( typeParameters )? ( parameters )+ ( functionSpecifier )? ) ;
    public TypedDeclaration parameterDeclaration() throws RecognitionException {
        TypedDeclaration declaration = null;


        Token VOID_MODIFIER165=null;
        Token FUNCTION_MODIFIER166=null;
        Token DYNAMIC167=null;
        Token VALUE_MODIFIER168=null;
        Type variadicType164 =null;

        Identifier memberName169 =null;

        SpecifierExpression specifier170 =null;

        TypeParameterList typeParameters171 =null;

        ParameterList parameters172 =null;

        SpecifierExpression functionSpecifier173 =null;


         AttributeDeclaration a = new AttributeDeclaration(null); 
                    MethodDeclaration m = new MethodDeclaration(null);
                    declaration = a; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1271:5: ( ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( typeParameters )? ( parameters )+ ( functionSpecifier )? ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1271:7: ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER ) memberName ( ( specifier )? | ( typeParameters )? ( parameters )+ ( functionSpecifier )? )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1271:7: ( variadicType | VOID_MODIFIER | FUNCTION_MODIFIER | DYNAMIC | VALUE_MODIFIER )
            int alt112=5;
            switch ( input.LA(1) ) {
            case LBRACE:
            case LBRACKET:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt112=1;
                }
                break;
            case VOID_MODIFIER:
                {
                alt112=2;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt112=3;
                }
                break;
            case DYNAMIC:
                {
                alt112=4;
                }
                break;
            case VALUE_MODIFIER:
                {
                alt112=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 112, 0, input);

                throw nvae;

            }

            switch (alt112) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1272:9: variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_parameterDeclaration8215);
                    variadicType164=variadicType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { a.setType(variadicType164);
                              m.setType(variadicType164); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1275:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER165=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_parameterDeclaration8235); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { m.setType(new VoidModifier(VOID_MODIFIER165));
                              declaration =m; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1278:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER166=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_parameterDeclaration8255); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { m.setType(new FunctionModifier(FUNCTION_MODIFIER166));
                              declaration =m; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1281:9: DYNAMIC
                    {
                    DYNAMIC167=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_parameterDeclaration8275); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { a.setType(new DynamicModifier(DYNAMIC167));
                              m.setType(new DynamicModifier(DYNAMIC167)); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1284:9: VALUE_MODIFIER
                    {
                    VALUE_MODIFIER168=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_parameterDeclaration8295); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { a.setType(new ValueModifier(VALUE_MODIFIER168)); }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberName_in_parameterDeclaration8321);
            memberName169=memberName();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { a.setIdentifier(memberName169);
                    m.setIdentifier(memberName169); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1290:7: ( ( specifier )? | ( typeParameters )? ( parameters )+ ( functionSpecifier )? )
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==COMMA||LA117_0==RPAREN||LA117_0==SPECIFY) ) {
                alt117=1;
            }
            else if ( (LA117_0==LPAREN||LA117_0==SMALLER_OP) ) {
                alt117=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 117, 0, input);

                throw nvae;

            }
            switch (alt117) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1291:9: ( specifier )?
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1291:9: ( specifier )?
                    int alt113=2;
                    int LA113_0 = input.LA(1);

                    if ( (LA113_0==SPECIFY) ) {
                        alt113=1;
                    }
                    switch (alt113) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1292:11: specifier
                            {
                            pushFollow(FOLLOW_specifier_in_parameterDeclaration8359);
                            specifier170=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { a.setSpecifierOrInitializerExpression(specifier170); }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1296:9: ( typeParameters )? ( parameters )+ ( functionSpecifier )?
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1296:9: ( typeParameters )?
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( (LA114_0==SMALLER_OP) ) {
                        alt114=1;
                    }
                    switch (alt114) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1297:11: typeParameters
                            {
                            pushFollow(FOLLOW_typeParameters_in_parameterDeclaration8412);
                            typeParameters171=typeParameters();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { m.setTypeParameterList(typeParameters171); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1300:9: ( parameters )+
                    int cnt115=0;
                    loop115:
                    do {
                        int alt115=2;
                        int LA115_0 = input.LA(1);

                        if ( (LA115_0==LPAREN) ) {
                            alt115=1;
                        }


                        switch (alt115) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1301:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_parameterDeclaration8457);
                    	    parameters172=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { m.addParameterList(parameters172);
                    	                declaration =m; }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt115 >= 1 ) break loop115;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(115, input);
                                throw eee;
                        }
                        cnt115++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1305:9: ( functionSpecifier )?
                    int alt116=2;
                    int LA116_0 = input.LA(1);

                    if ( (LA116_0==COMPUTE||LA116_0==SPECIFY) ) {
                        alt116=1;
                    }
                    switch (alt116) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1306:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_parameterDeclaration8502);
                            functionSpecifier173=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { m.setSpecifierExpression(functionSpecifier173); }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "parameterDeclaration"



    // $ANTLR start "parameterRef"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1312:1: parameterRef returns [InitializerParameter parameter] : memberName ( specifier )? ;
    public InitializerParameter parameterRef() throws RecognitionException {
        InitializerParameter parameter = null;


        Identifier memberName174 =null;

        SpecifierExpression specifier175 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1313:5: ( memberName ( specifier )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1313:7: memberName ( specifier )?
            {
            pushFollow(FOLLOW_memberName_in_parameterRef8554);
            memberName174=memberName();

            state._fsp--;
            if (state.failed) return parameter;

            if ( state.backtracking==0 ) { parameter = new InitializerParameter(null);
                    parameter.setIdentifier(memberName174); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1316:7: ( specifier )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==SPECIFY) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1317:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_parameterRef8580);
                    specifier175=specifier();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter.setSpecifierExpression(specifier175); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameterRef"



    // $ANTLR start "parameterDeclarationOrRef"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1322:1: parameterDeclarationOrRef returns [Parameter parameter] : (r= parameterRef |p= parameter );
    public Parameter parameterDeclarationOrRef() throws RecognitionException {
        Parameter parameter = null;


        InitializerParameter r =null;

        ParameterDeclaration p =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1323:5: (r= parameterRef |p= parameter )
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==LIDENTIFIER) ) {
                int LA119_1 = input.LA(2);

                if ( (LA119_1==COMMA||LA119_1==RPAREN||LA119_1==SPECIFY) ) {
                    alt119=1;
                }
                else if ( (LA119_1==DYNAMIC||LA119_1==FUNCTION_MODIFIER||(LA119_1 >= LBRACE && LA119_1 <= LBRACKET)||LA119_1==LIDENTIFIER||LA119_1==LPAREN||LA119_1==PACKAGE||LA119_1==SMALLER_OP||LA119_1==UIDENTIFIER||LA119_1==VALUE_MODIFIER||LA119_1==VOID_MODIFIER) ) {
                    alt119=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return parameter;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 119, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA119_0==COMPILER_ANNOTATION||LA119_0==DYNAMIC||LA119_0==FUNCTION_MODIFIER||(LA119_0 >= LBRACE && LA119_0 <= LBRACKET)||LA119_0==PACKAGE||LA119_0==SMALLER_OP||LA119_0==STRING_LITERAL||LA119_0==UIDENTIFIER||(LA119_0 >= VALUE_MODIFIER && LA119_0 <= VOID_MODIFIER)) ) {
                alt119=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return parameter;}
                NoViableAltException nvae =
                    new NoViableAltException("", 119, 0, input);

                throw nvae;

            }
            switch (alt119) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1324:7: r= parameterRef
                    {
                    pushFollow(FOLLOW_parameterRef_in_parameterDeclarationOrRef8628);
                    r=parameterRef();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter =r; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1327:7: p= parameter
                    {
                    pushFollow(FOLLOW_parameter_in_parameterDeclarationOrRef8653);
                    p=parameter();

                    state._fsp--;
                    if (state.failed) return parameter;

                    if ( state.backtracking==0 ) { parameter =p; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return parameter;
    }
    // $ANTLR end "parameterDeclarationOrRef"



    // $ANTLR start "typeParameters"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1331:1: typeParameters returns [TypeParameterList typeParameterList] : SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP ;
    public TypeParameterList typeParameters() throws RecognitionException {
        TypeParameterList typeParameterList = null;


        Token c=null;
        Token SMALLER_OP176=null;
        Token LARGER_OP177=null;
        TypeParameterDeclaration tp1 =null;

        TypeParameterDeclaration tp2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1332:5: ( SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1332:7: SMALLER_OP tp1= typeParameter (c= COMMA (tp2= typeParameter |) )* LARGER_OP
            {
            SMALLER_OP176=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeParameters8682); if (state.failed) return typeParameterList;

            if ( state.backtracking==0 ) { typeParameterList = new TypeParameterList(SMALLER_OP176); }

            pushFollow(FOLLOW_typeParameter_in_typeParameters8700);
            tp1=typeParameter();

            state._fsp--;
            if (state.failed) return typeParameterList;

            if ( state.backtracking==0 ) { if (tp1 instanceof TypeParameterDeclaration)
                        typeParameterList.addTypeParameterDeclaration(tp1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1337:7: (c= COMMA (tp2= typeParameter |) )*
            loop121:
            do {
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( (LA121_0==COMMA) ) {
                    alt121=1;
                }


                switch (alt121) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1338:9: c= COMMA (tp2= typeParameter |)
            	    {
            	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_typeParameters8728); if (state.failed) return typeParameterList;

            	    if ( state.backtracking==0 ) { typeParameterList.setEndToken(c); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1340:9: (tp2= typeParameter |)
            	    int alt120=2;
            	    int LA120_0 = input.LA(1);

            	    if ( (LA120_0==ALIAS||(LA120_0 >= ASSERT && LA120_0 <= ASSIGN)||(LA120_0 >= BACKTICK && LA120_0 <= BREAK)||(LA120_0 >= CHAR_LITERAL && LA120_0 <= CLASS_DEFINITION)||LA120_0==COMPILER_ANNOTATION||LA120_0==CONTINUE||(LA120_0 >= DECREMENT_OP && LA120_0 <= DIFFERENCE_OP)||LA120_0==DYNAMIC||(LA120_0 >= FLOAT_LITERAL && LA120_0 <= FUNCTION_MODIFIER)||(LA120_0 >= IF_CLAUSE && LA120_0 <= INTERFACE_DEFINITION)||LA120_0==IN_OP||(LA120_0 >= LBRACE && LA120_0 <= LIDENTIFIER)||LA120_0==LPAREN||LA120_0==MODULE||(LA120_0 >= NATURAL_LITERAL && LA120_0 <= NEW)||(LA120_0 >= NOT_OP && LA120_0 <= OBJECT_DEFINITION)||(LA120_0 >= OUT && LA120_0 <= PACKAGE)||LA120_0==PRODUCT_OP||LA120_0==RETURN||(LA120_0 >= SEMICOLON && LA120_0 <= SMALLER_OP)||LA120_0==STRING_LITERAL||LA120_0==STRING_START||(LA120_0 >= SUM_OP && LA120_0 <= SWITCH_CLAUSE)||(LA120_0 >= THIS && LA120_0 <= UIDENTIFIER)||(LA120_0 >= VALUE_MODIFIER && LA120_0 <= WHILE_CLAUSE)) ) {
            	        alt120=1;
            	    }
            	    else if ( (LA120_0==COMMA||LA120_0==LARGER_OP) ) {
            	        alt120=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return typeParameterList;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 120, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt120) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1341:11: tp2= typeParameter
            	            {
            	            pushFollow(FOLLOW_typeParameter_in_typeParameters8762);
            	            tp2=typeParameter();

            	            state._fsp--;
            	            if (state.failed) return typeParameterList;

            	            if ( state.backtracking==0 ) { if (tp2 instanceof TypeParameterDeclaration)
            	                            typeParameterList.addTypeParameterDeclaration(tp2);
            	                        typeParameterList.setEndToken(null); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1345:11: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                            new MismatchedTokenException(UIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);


            LARGER_OP177=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeParameters8813); if (state.failed) return typeParameterList;

            if ( state.backtracking==0 ) { typeParameterList.setEndToken(LARGER_OP177); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeParameterList;
    }
    // $ANTLR end "typeParameters"



    // $ANTLR start "typeParameter"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1353:1: typeParameter returns [TypeParameterDeclaration typeParameter] : compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )? ;
    public TypeParameterDeclaration typeParameter() throws RecognitionException {
        TypeParameterDeclaration typeParameter = null;


        TypeVariance variance178 =null;

        Identifier typeNameDeclaration179 =null;

        TypeSpecifier typeDefault180 =null;

        List<CompilerAnnotation> compilerAnnotations181 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1354:5: ( compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1354:7: compilerAnnotations ( variance )? typeNameDeclaration ( typeDefault )?
            {
            if ( state.backtracking==0 ) { typeParameter = new TypeParameterDeclaration(null); }

            pushFollow(FOLLOW_compilerAnnotations_in_typeParameter8850);
            compilerAnnotations181=compilerAnnotations();

            state._fsp--;
            if (state.failed) return typeParameter;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1356:7: ( variance )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==IN_OP||LA122_0==OUT) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1357:9: variance
                    {
                    pushFollow(FOLLOW_variance_in_typeParameter8869);
                    variance178=variance();

                    state._fsp--;
                    if (state.failed) return typeParameter;

                    if ( state.backtracking==0 ) { typeParameter.setTypeVariance(variance178); }

                    }
                    break;

            }


            pushFollow(FOLLOW_typeNameDeclaration_in_typeParameter8898);
            typeNameDeclaration179=typeNameDeclaration();

            state._fsp--;
            if (state.failed) return typeParameter;

            if ( state.backtracking==0 ) { typeParameter.setIdentifier(typeNameDeclaration179); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1362:7: ( typeDefault )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==SPECIFY) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1363:9: typeDefault
                    {
                    pushFollow(FOLLOW_typeDefault_in_typeParameter8924);
                    typeDefault180=typeDefault();

                    state._fsp--;
                    if (state.failed) return typeParameter;

                    if ( state.backtracking==0 ) { typeParameter.setTypeSpecifier(typeDefault180); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { typeParameter.getCompilerAnnotations().addAll(compilerAnnotations181); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeParameter;
    }
    // $ANTLR end "typeParameter"



    // $ANTLR start "variance"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1369:1: variance returns [TypeVariance typeVariance] : ( IN_OP | OUT );
    public TypeVariance variance() throws RecognitionException {
        TypeVariance typeVariance = null;


        Token IN_OP182=null;
        Token OUT183=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1370:5: ( IN_OP | OUT )
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==IN_OP) ) {
                alt124=1;
            }
            else if ( (LA124_0==OUT) ) {
                alt124=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return typeVariance;}
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;

            }
            switch (alt124) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1370:7: IN_OP
                    {
                    IN_OP182=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_variance8972); if (state.failed) return typeVariance;

                    if ( state.backtracking==0 ) { typeVariance = new TypeVariance(IN_OP182); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1372:7: OUT
                    {
                    OUT183=(Token)match(input,OUT,FOLLOW_OUT_in_variance8988); if (state.failed) return typeVariance;

                    if ( state.backtracking==0 ) { typeVariance = new TypeVariance(OUT183); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeVariance;
    }
    // $ANTLR end "variance"



    // $ANTLR start "typeConstraint"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1376:1: typeConstraint returns [TypeConstraint typeConstraint] : compilerAnnotations TYPE_CONSTRAINT ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )? ;
    public TypeConstraint typeConstraint() throws RecognitionException {
        TypeConstraint typeConstraint = null;


        Token TYPE_CONSTRAINT184=null;
        List<CompilerAnnotation> compilerAnnotations185 =null;

        Identifier typeNameDeclaration186 =null;

        TypeParameterList typeParameters187 =null;

        CaseTypes caseTypes188 =null;

        SatisfiedTypes satisfiedTypes189 =null;

        AbstractedType abstractedType190 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1377:5: ( compilerAnnotations TYPE_CONSTRAINT ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1377:7: compilerAnnotations TYPE_CONSTRAINT ( typeNameDeclaration )? ( typeParameters )? ( caseTypes )? ( satisfiedTypes )? ( abstractedType )?
            {
            pushFollow(FOLLOW_compilerAnnotations_in_typeConstraint9021);
            compilerAnnotations185=compilerAnnotations();

            state._fsp--;
            if (state.failed) return typeConstraint;

            TYPE_CONSTRAINT184=(Token)match(input,TYPE_CONSTRAINT,FOLLOW_TYPE_CONSTRAINT_in_typeConstraint9029); if (state.failed) return typeConstraint;

            if ( state.backtracking==0 ) { typeConstraint = new TypeConstraint(TYPE_CONSTRAINT184); 
                    typeConstraint.getCompilerAnnotations().addAll(compilerAnnotations185); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1381:7: ( typeNameDeclaration )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==LIDENTIFIER||LA125_0==UIDENTIFIER) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1382:9: typeNameDeclaration
                    {
                    pushFollow(FOLLOW_typeNameDeclaration_in_typeConstraint9055);
                    typeNameDeclaration186=typeNameDeclaration();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setIdentifier(typeNameDeclaration186); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1385:7: ( typeParameters )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==SMALLER_OP) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1386:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_typeConstraint9093);
                    typeParameters187=typeParameters();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setTypeParameterList(typeParameters187); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1389:7: ( caseTypes )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==CASE_TYPES) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1390:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_typeConstraint9131);
                    caseTypes188=caseTypes();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setCaseTypes(caseTypes188); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1394:7: ( satisfiedTypes )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==SATISFIES) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1395:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_typeConstraint9175);
                    satisfiedTypes189=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setSatisfiedTypes(satisfiedTypes189); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1398:7: ( abstractedType )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==ABSTRACTED_TYPE) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1399:9: abstractedType
                    {
                    pushFollow(FOLLOW_abstractedType_in_typeConstraint9213);
                    abstractedType190=abstractedType();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setAbstractedType(abstractedType190); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeConstraint;
    }
    // $ANTLR end "typeConstraint"



    // $ANTLR start "anonymousTypeConstraint"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1404:1: anonymousTypeConstraint returns [TypeConstraint typeConstraint] : TYPE_CONSTRAINT typeNameDeclaration ( caseTypes )? ( satisfiedTypes )? ;
    public TypeConstraint anonymousTypeConstraint() throws RecognitionException {
        TypeConstraint typeConstraint = null;


        Token TYPE_CONSTRAINT191=null;
        Identifier typeNameDeclaration192 =null;

        CaseTypes caseTypes193 =null;

        SatisfiedTypes satisfiedTypes194 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1405:5: ( TYPE_CONSTRAINT typeNameDeclaration ( caseTypes )? ( satisfiedTypes )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1405:7: TYPE_CONSTRAINT typeNameDeclaration ( caseTypes )? ( satisfiedTypes )?
            {
            TYPE_CONSTRAINT191=(Token)match(input,TYPE_CONSTRAINT,FOLLOW_TYPE_CONSTRAINT_in_anonymousTypeConstraint9253); if (state.failed) return typeConstraint;

            if ( state.backtracking==0 ) { typeConstraint = new TypeConstraint(TYPE_CONSTRAINT191); }

            pushFollow(FOLLOW_typeNameDeclaration_in_anonymousTypeConstraint9269);
            typeNameDeclaration192=typeNameDeclaration();

            state._fsp--;
            if (state.failed) return typeConstraint;

            if ( state.backtracking==0 ) { typeConstraint.setIdentifier(typeNameDeclaration192); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1409:7: ( caseTypes )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==CASE_TYPES) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1410:9: caseTypes
                    {
                    pushFollow(FOLLOW_caseTypes_in_anonymousTypeConstraint9296);
                    caseTypes193=caseTypes();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setCaseTypes(caseTypes193); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1413:7: ( satisfiedTypes )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==SATISFIES) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1414:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_anonymousTypeConstraint9333);
                    satisfiedTypes194=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return typeConstraint;

                    if ( state.backtracking==0 ) { typeConstraint.setSatisfiedTypes(satisfiedTypes194); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeConstraint;
    }
    // $ANTLR end "anonymousTypeConstraint"



    // $ANTLR start "typeConstraints"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1419:1: typeConstraints returns [TypeConstraintList typeConstraintList] : ( typeConstraint )+ ;
    public TypeConstraintList typeConstraints() throws RecognitionException {
        TypeConstraintList typeConstraintList = null;


        TypeConstraint typeConstraint195 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1420:5: ( ( typeConstraint )+ )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1420:7: ( typeConstraint )+
            {
            if ( state.backtracking==0 ) { typeConstraintList =new TypeConstraintList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1421:7: ( typeConstraint )+
            int cnt132=0;
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

                if ( (LA132_0==COMPILER_ANNOTATION||LA132_0==TYPE_CONSTRAINT) ) {
                    alt132=1;
                }


                switch (alt132) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1422:9: typeConstraint
            	    {
            	    pushFollow(FOLLOW_typeConstraint_in_typeConstraints9391);
            	    typeConstraint195=typeConstraint();

            	    state._fsp--;
            	    if (state.failed) return typeConstraintList;

            	    if ( state.backtracking==0 ) { if (typeConstraint195!=null)
            	                typeConstraintList.addTypeConstraint(typeConstraint195); }

            	    }
            	    break;

            	default :
            	    if ( cnt132 >= 1 ) break loop132;
            	    if (state.backtracking>0) {state.failed=true; return typeConstraintList;}
                        EarlyExitException eee =
                            new EarlyExitException(132, input);
                        throw eee;
                }
                cnt132++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeConstraintList;
    }
    // $ANTLR end "typeConstraints"



    // $ANTLR start "anonymousTypeConstraints"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1428:1: anonymousTypeConstraints returns [TypeConstraintList typeConstraintList] : ( anonymousTypeConstraint )+ ;
    public TypeConstraintList anonymousTypeConstraints() throws RecognitionException {
        TypeConstraintList typeConstraintList = null;


        TypeConstraint anonymousTypeConstraint196 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1429:5: ( ( anonymousTypeConstraint )+ )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1429:7: ( anonymousTypeConstraint )+
            {
            if ( state.backtracking==0 ) { typeConstraintList =new TypeConstraintList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1430:7: ( anonymousTypeConstraint )+
            int cnt133=0;
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==TYPE_CONSTRAINT) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1431:9: anonymousTypeConstraint
            	    {
            	    pushFollow(FOLLOW_anonymousTypeConstraint_in_anonymousTypeConstraints9449);
            	    anonymousTypeConstraint196=anonymousTypeConstraint();

            	    state._fsp--;
            	    if (state.failed) return typeConstraintList;

            	    if ( state.backtracking==0 ) { if (anonymousTypeConstraint196!=null)
            	                typeConstraintList.addTypeConstraint(anonymousTypeConstraint196); }

            	    }
            	    break;

            	default :
            	    if ( cnt133 >= 1 ) break loop133;
            	    if (state.backtracking>0) {state.failed=true; return typeConstraintList;}
                        EarlyExitException eee =
                            new EarlyExitException(133, input);
                        throw eee;
                }
                cnt133++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeConstraintList;
    }
    // $ANTLR end "anonymousTypeConstraints"



    // $ANTLR start "annotationListStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1437:1: annotationListStart : ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER | VOID_MODIFIER ) ;
    public void annotationListStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1438:5: ( ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER | VOID_MODIFIER ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1438:7: ( stringLiteral | annotation ) ( LIDENTIFIER | UIDENTIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER | VOID_MODIFIER )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1438:7: ( stringLiteral | annotation )
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==STRING_LITERAL||LA134_0==VERBATIM_STRING) ) {
                alt134=1;
            }
            else if ( (LA134_0==LIDENTIFIER) ) {
                alt134=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 134, 0, input);

                throw nvae;

            }
            switch (alt134) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1438:8: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotationListStart9486);
                    stringLiteral();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1438:22: annotation
                    {
                    pushFollow(FOLLOW_annotation_in_annotationListStart9488);
                    annotation();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            if ( input.LA(1)==FUNCTION_MODIFIER||input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER||input.LA(1)==VALUE_MODIFIER||input.LA(1)==VOID_MODIFIER ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotationListStart"



    // $ANTLR start "destructureStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1442:1: destructureStart : VALUE_MODIFIER compilerAnnotations ( LBRACKET | UIDENTIFIER | VOID_MODIFIER | VALUE_MODIFIER | FUNCTION_MODIFIER | LIDENTIFIER ENTRY_OP ) ;
    public void destructureStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1443:5: ( VALUE_MODIFIER compilerAnnotations ( LBRACKET | UIDENTIFIER | VOID_MODIFIER | VALUE_MODIFIER | FUNCTION_MODIFIER | LIDENTIFIER ENTRY_OP ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1443:7: VALUE_MODIFIER compilerAnnotations ( LBRACKET | UIDENTIFIER | VOID_MODIFIER | VALUE_MODIFIER | FUNCTION_MODIFIER | LIDENTIFIER ENTRY_OP )
            {
            match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_destructureStart9525); if (state.failed) return ;

            pushFollow(FOLLOW_compilerAnnotations_in_destructureStart9527);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1444:7: ( LBRACKET | UIDENTIFIER | VOID_MODIFIER | VALUE_MODIFIER | FUNCTION_MODIFIER | LIDENTIFIER ENTRY_OP )
            int alt135=6;
            switch ( input.LA(1) ) {
            case LBRACKET:
                {
                alt135=1;
                }
                break;
            case UIDENTIFIER:
                {
                alt135=2;
                }
                break;
            case VOID_MODIFIER:
                {
                alt135=3;
                }
                break;
            case VALUE_MODIFIER:
                {
                alt135=4;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt135=5;
                }
                break;
            case LIDENTIFIER:
                {
                alt135=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 135, 0, input);

                throw nvae;

            }

            switch (alt135) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1444:8: LBRACKET
                    {
                    match(input,LBRACKET,FOLLOW_LBRACKET_in_destructureStart9537); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1444:17: UIDENTIFIER
                    {
                    match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_destructureStart9539); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1444:29: VOID_MODIFIER
                    {
                    match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_destructureStart9541); if (state.failed) return ;

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1444:43: VALUE_MODIFIER
                    {
                    match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_destructureStart9543); if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1444:58: FUNCTION_MODIFIER
                    {
                    match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_destructureStart9545); if (state.failed) return ;

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1444:76: LIDENTIFIER ENTRY_OP
                    {
                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_destructureStart9547); if (state.failed) return ;

                    match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_destructureStart9549); if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "destructureStart"



    // $ANTLR start "declarationOrStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1447:1: declarationOrStatement returns [Statement statement] options {memoize=true; } : compilerAnnotations ( ( destructureStart )=> destructure | ( annotatedDeclarationStart )=>d1= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d2= declaration |s= statement ) ;
    public Statement declarationOrStatement() throws RecognitionException {
        Statement statement = null;

        int declarationOrStatement_StartIndex = input.index();

        Declaration d1 =null;

        Declaration d2 =null;

        Statement s =null;

        Destructure destructure197 =null;

        Assertion assertion198 =null;

        List<CompilerAnnotation> compilerAnnotations199 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return statement; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1449:5: ( compilerAnnotations ( ( destructureStart )=> destructure | ( annotatedDeclarationStart )=>d1= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d2= declaration |s= statement ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1449:7: compilerAnnotations ( ( destructureStart )=> destructure | ( annotatedDeclarationStart )=>d1= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d2= declaration |s= statement )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_declarationOrStatement9582);
            compilerAnnotations199=compilerAnnotations();

            state._fsp--;
            if (state.failed) return statement;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1450:7: ( ( destructureStart )=> destructure | ( annotatedDeclarationStart )=>d1= declaration | ( annotatedAssertionStart )=> assertion | ( annotationListStart )=>d2= declaration |s= statement )
            int alt136=5;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==VALUE_MODIFIER) ) {
                int LA136_1 = input.LA(2);

                if ( (synpred11_Ceylon()) ) {
                    alt136=1;
                }
                else if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==STRING_LITERAL) ) {
                int LA136_2 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred13_Ceylon()) ) {
                    alt136=3;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else if ( (true) ) {
                    alt136=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==VERBATIM_STRING) ) {
                int LA136_3 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred13_Ceylon()) ) {
                    alt136=3;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else if ( (true) ) {
                    alt136=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==LIDENTIFIER) ) {
                int LA136_4 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred13_Ceylon()) ) {
                    alt136=3;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else if ( (true) ) {
                    alt136=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==CLASS_DEFINITION) ) {
                int LA136_5 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==INTERFACE_DEFINITION) ) {
                int LA136_6 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==DYNAMIC) ) {
                int LA136_7 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else if ( (true) ) {
                    alt136=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 7, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==ALIAS) ) {
                int LA136_8 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 8, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==OBJECT_DEFINITION) ) {
                int LA136_9 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else if ( (true) ) {
                    alt136=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 9, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==ASSIGN) ) {
                int LA136_10 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==VOID_MODIFIER) ) {
                int LA136_11 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 11, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==FUNCTION_MODIFIER) ) {
                int LA136_12 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 12, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==UIDENTIFIER) ) {
                int LA136_13 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else if ( (true) ) {
                    alt136=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 13, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==SMALLER_OP) ) {
                int LA136_14 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 14, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==PACKAGE) ) {
                int LA136_15 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else if ( (true) ) {
                    alt136=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 15, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==LBRACKET) ) {
                int LA136_16 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else if ( (true) ) {
                    alt136=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 16, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==LBRACE) ) {
                int LA136_17 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else if ( (true) ) {
                    alt136=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 17, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==NEW) ) {
                int LA136_18 = input.LA(2);

                if ( (synpred12_Ceylon()) ) {
                    alt136=2;
                }
                else if ( (synpred14_Ceylon()) ) {
                    alt136=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 18, input);

                    throw nvae;

                }
            }
            else if ( (LA136_0==ASSERT) && (synpred13_Ceylon())) {
                alt136=3;
            }
            else if ( ((LA136_0 >= BACKTICK && LA136_0 <= BREAK)||LA136_0==CHAR_LITERAL||LA136_0==CONTINUE||(LA136_0 >= DECREMENT_OP && LA136_0 <= DIFFERENCE_OP)||(LA136_0 >= FLOAT_LITERAL && LA136_0 <= FOR_CLAUSE)||LA136_0==IF_CLAUSE||LA136_0==INCREMENT_OP||LA136_0==LPAREN||LA136_0==NATURAL_LITERAL||LA136_0==NOT_OP||LA136_0==OUTER||LA136_0==RETURN||LA136_0==STRING_START||(LA136_0 >= SUM_OP && LA136_0 <= SWITCH_CLAUSE)||(LA136_0 >= THIS && LA136_0 <= TRY_CLAUSE)||LA136_0==WHILE_CLAUSE) ) {
                alt136=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 136, 0, input);

                throw nvae;

            }
            switch (alt136) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1451:9: ( destructureStart )=> destructure
                    {
                    pushFollow(FOLLOW_destructure_in_declarationOrStatement9606);
                    destructure197=destructure();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =destructure197; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1453:9: ( annotatedDeclarationStart )=>d1= declaration
                    {
                    pushFollow(FOLLOW_declaration_in_declarationOrStatement9634);
                    d1=declaration();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =d1; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1455:9: ( annotatedAssertionStart )=> assertion
                    {
                    pushFollow(FOLLOW_assertion_in_declarationOrStatement9660);
                    assertion198=assertion();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = assertion198; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1457:9: ( annotationListStart )=>d2= declaration
                    {
                    pushFollow(FOLLOW_declaration_in_declarationOrStatement9688);
                    d2=declaration();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =d2; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1459:9: s= statement
                    {
                    pushFollow(FOLLOW_statement_in_declarationOrStatement9710);
                    s=statement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =s; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { if (statement!=null)
                        statement.getCompilerAnnotations().addAll(compilerAnnotations199); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 71, declarationOrStatement_StartIndex); }

        }
        return statement;
    }
    // $ANTLR end "declarationOrStatement"



    // $ANTLR start "declaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1466:1: declaration returns [Declaration declaration] : annotations ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | ( NEW ( LIDENTIFIER | UIDENTIFIER )? LPAREN )=> constructor | enumeratedObject ) ;
    public Declaration declaration() throws RecognitionException {
        Declaration declaration = null;


        AnnotationList annotations200 =null;

        AnyClass classDeclaration201 =null;

        AnyInterface interfaceDeclaration202 =null;

        TypeAliasDeclaration aliasDeclaration203 =null;

        ObjectDefinition objectDeclaration204 =null;

        AttributeSetterDefinition setterDeclaration205 =null;

        AnyMethod voidOrInferredMethodDeclaration206 =null;

        AnyAttribute inferredAttributeDeclaration207 =null;

        TypedDeclaration typedMethodOrAttributeDeclaration208 =null;

        Constructor constructor209 =null;

        Enumerated enumeratedObject210 =null;


         MissingDeclaration md = new MissingDeclaration(null); 
                    declaration = md; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1469:5: ( annotations ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | ( NEW ( LIDENTIFIER | UIDENTIFIER )? LPAREN )=> constructor | enumeratedObject ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1469:7: annotations ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | ( NEW ( LIDENTIFIER | UIDENTIFIER )? LPAREN )=> constructor | enumeratedObject )
            {
            pushFollow(FOLLOW_annotations_in_declaration9766);
            annotations200=annotations();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { md.setAnnotationList(annotations200); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1471:5: ( classDeclaration | ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration | aliasDeclaration | objectDeclaration | setterDeclaration | voidOrInferredMethodDeclaration | inferredAttributeDeclaration | typedMethodOrAttributeDeclaration | ( NEW ( LIDENTIFIER | UIDENTIFIER )? LPAREN )=> constructor | enumeratedObject )
            int alt137=10;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==CLASS_DEFINITION) ) {
                alt137=1;
            }
            else if ( (LA137_0==INTERFACE_DEFINITION) && (synpred15_Ceylon())) {
                alt137=2;
            }
            else if ( (LA137_0==DYNAMIC) ) {
                int LA137_3 = input.LA(2);

                if ( (synpred15_Ceylon()) ) {
                    alt137=2;
                }
                else if ( (true) ) {
                    alt137=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 137, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA137_0==ALIAS) ) {
                alt137=3;
            }
            else if ( (LA137_0==OBJECT_DEFINITION) ) {
                alt137=4;
            }
            else if ( (LA137_0==ASSIGN) ) {
                alt137=5;
            }
            else if ( (LA137_0==FUNCTION_MODIFIER||LA137_0==VOID_MODIFIER) ) {
                alt137=6;
            }
            else if ( (LA137_0==VALUE_MODIFIER) ) {
                alt137=7;
            }
            else if ( ((LA137_0 >= LBRACE && LA137_0 <= LBRACKET)||LA137_0==PACKAGE||LA137_0==SMALLER_OP||LA137_0==UIDENTIFIER) ) {
                alt137=8;
            }
            else if ( (LA137_0==NEW) ) {
                int LA137_15 = input.LA(2);

                if ( (synpred16_Ceylon()) ) {
                    alt137=9;
                }
                else if ( (true) ) {
                    alt137=10;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return declaration;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 137, 15, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;

            }
            switch (alt137) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1472:7: classDeclaration
                    {
                    pushFollow(FOLLOW_classDeclaration_in_declaration9789);
                    classDeclaration201=classDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =classDeclaration201; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1474:7: ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )=> interfaceDeclaration
                    {
                    pushFollow(FOLLOW_interfaceDeclaration_in_declaration9815);
                    interfaceDeclaration202=interfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =interfaceDeclaration202; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1476:7: aliasDeclaration
                    {
                    pushFollow(FOLLOW_aliasDeclaration_in_declaration9831);
                    aliasDeclaration203=aliasDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =aliasDeclaration203; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1478:7: objectDeclaration
                    {
                    pushFollow(FOLLOW_objectDeclaration_in_declaration9847);
                    objectDeclaration204=objectDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =objectDeclaration204; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1480:7: setterDeclaration
                    {
                    pushFollow(FOLLOW_setterDeclaration_in_declaration9863);
                    setterDeclaration205=setterDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =setterDeclaration205; }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1482:7: voidOrInferredMethodDeclaration
                    {
                    pushFollow(FOLLOW_voidOrInferredMethodDeclaration_in_declaration9879);
                    voidOrInferredMethodDeclaration206=voidOrInferredMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =voidOrInferredMethodDeclaration206; }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1484:7: inferredAttributeDeclaration
                    {
                    pushFollow(FOLLOW_inferredAttributeDeclaration_in_declaration9895);
                    inferredAttributeDeclaration207=inferredAttributeDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =inferredAttributeDeclaration207; }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1486:7: typedMethodOrAttributeDeclaration
                    {
                    pushFollow(FOLLOW_typedMethodOrAttributeDeclaration_in_declaration9911);
                    typedMethodOrAttributeDeclaration208=typedMethodOrAttributeDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =typedMethodOrAttributeDeclaration208; }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1488:7: ( NEW ( LIDENTIFIER | UIDENTIFIER )? LPAREN )=> constructor
                    {
                    pushFollow(FOLLOW_constructor_in_declaration9949);
                    constructor209=constructor();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =constructor209; }

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1491:7: enumeratedObject
                    {
                    pushFollow(FOLLOW_enumeratedObject_in_declaration9965);
                    enumeratedObject210=enumeratedObject();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =enumeratedObject210; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { if (declaration!=null)
                      declaration.setAnnotationList(annotations200); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "declaration"



    // $ANTLR start "annotatedDeclarationStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1502:1: annotatedDeclarationStart : ( stringLiteral )? ( annotation )* ( ( unambiguousType )=> unambiguousType | declarationStart ) ;
    public void annotatedDeclarationStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1503:5: ( ( stringLiteral )? ( annotation )* ( ( unambiguousType )=> unambiguousType | declarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1503:7: ( stringLiteral )? ( annotation )* ( ( unambiguousType )=> unambiguousType | declarationStart )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1503:7: ( stringLiteral )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==STRING_LITERAL||LA138_0==VERBATIM_STRING) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1503:7: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotatedDeclarationStart10008);
                    stringLiteral();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1503:22: ( annotation )*
            loop139:
            do {
                int alt139=2;
                int LA139_0 = input.LA(1);

                if ( (LA139_0==LIDENTIFIER) ) {
                    alt139=1;
                }


                switch (alt139) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1503:22: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotatedDeclarationStart10011);
            	    annotation();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop139;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1504:7: ( ( unambiguousType )=> unambiguousType | declarationStart )
            int alt140=2;
            switch ( input.LA(1) ) {
            case UIDENTIFIER:
                {
                int LA140_1 = input.LA(2);

                if ( (synpred17_Ceylon()) ) {
                    alt140=1;
                }
                else if ( (true) ) {
                    alt140=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 140, 1, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA140_2 = input.LA(2);

                if ( (synpred17_Ceylon()) ) {
                    alt140=1;
                }
                else if ( (true) ) {
                    alt140=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 140, 2, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA140_3 = input.LA(2);

                if ( (synpred17_Ceylon()) ) {
                    alt140=1;
                }
                else if ( (true) ) {
                    alt140=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 140, 3, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA140_4 = input.LA(2);

                if ( (synpred17_Ceylon()) ) {
                    alt140=1;
                }
                else if ( (true) ) {
                    alt140=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 140, 4, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA140_5 = input.LA(2);

                if ( (synpred17_Ceylon()) ) {
                    alt140=1;
                }
                else if ( (true) ) {
                    alt140=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 140, 5, input);

                    throw nvae;

                }
                }
                break;
            case ALIAS:
            case ASSIGN:
            case CLASS_DEFINITION:
            case DYNAMIC:
            case FUNCTION_MODIFIER:
            case INTERFACE_DEFINITION:
            case NEW:
            case OBJECT_DEFINITION:
            case VALUE_MODIFIER:
            case VOID_MODIFIER:
                {
                alt140=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 140, 0, input);

                throw nvae;

            }

            switch (alt140) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1504:8: ( unambiguousType )=> unambiguousType
                    {
                    pushFollow(FOLLOW_unambiguousType_in_annotatedDeclarationStart10028);
                    unambiguousType();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1504:47: declarationStart
                    {
                    pushFollow(FOLLOW_declarationStart_in_annotatedDeclarationStart10032);
                    declarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedDeclarationStart"



    // $ANTLR start "annotatedAssertionStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1507:1: annotatedAssertionStart : ( stringLiteral )? ( annotation )* ASSERT ;
    public void annotatedAssertionStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1508:5: ( ( stringLiteral )? ( annotation )* ASSERT )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1508:7: ( stringLiteral )? ( annotation )* ASSERT
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1508:7: ( stringLiteral )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==STRING_LITERAL||LA141_0==VERBATIM_STRING) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1508:7: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotatedAssertionStart10050);
                    stringLiteral();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1508:22: ( annotation )*
            loop142:
            do {
                int alt142=2;
                int LA142_0 = input.LA(1);

                if ( (LA142_0==LIDENTIFIER) ) {
                    alt142=1;
                }


                switch (alt142) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1508:22: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotatedAssertionStart10053);
            	    annotation();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop142;
                }
            } while (true);


            match(input,ASSERT,FOLLOW_ASSERT_in_annotatedAssertionStart10056); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "annotatedAssertionStart"



    // $ANTLR start "declarationStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1514:1: declarationStart : ( VALUE_MODIFIER | FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | ASSIGN | INTERFACE_DEFINITION | CLASS_DEFINITION | OBJECT_DEFINITION ( LIDENTIFIER | UIDENTIFIER ) | NEW | ALIAS | variadicType LIDENTIFIER | DYNAMIC ( LIDENTIFIER | UIDENTIFIER ) );
    public void declarationStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1515:5: ( VALUE_MODIFIER | FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER ) | ASSIGN | INTERFACE_DEFINITION | CLASS_DEFINITION | OBJECT_DEFINITION ( LIDENTIFIER | UIDENTIFIER ) | NEW | ALIAS | variadicType LIDENTIFIER | DYNAMIC ( LIDENTIFIER | UIDENTIFIER ) )
            int alt143=11;
            switch ( input.LA(1) ) {
            case VALUE_MODIFIER:
                {
                alt143=1;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt143=2;
                }
                break;
            case VOID_MODIFIER:
                {
                alt143=3;
                }
                break;
            case ASSIGN:
                {
                alt143=4;
                }
                break;
            case INTERFACE_DEFINITION:
                {
                alt143=5;
                }
                break;
            case CLASS_DEFINITION:
                {
                alt143=6;
                }
                break;
            case OBJECT_DEFINITION:
                {
                alt143=7;
                }
                break;
            case NEW:
                {
                alt143=8;
                }
                break;
            case ALIAS:
                {
                alt143=9;
                }
                break;
            case LBRACE:
            case LBRACKET:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt143=10;
                }
                break;
            case DYNAMIC:
                {
                alt143=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 143, 0, input);

                throw nvae;

            }

            switch (alt143) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1515:7: VALUE_MODIFIER
                    {
                    match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_declarationStart10076); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1516:7: FUNCTION_MODIFIER ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_declarationStart10084); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1517:7: VOID_MODIFIER ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_declarationStart10099); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1518:7: ASSIGN
                    {
                    match(input,ASSIGN,FOLLOW_ASSIGN_in_declarationStart10114); if (state.failed) return ;

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1519:7: INTERFACE_DEFINITION
                    {
                    match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_declarationStart10122); if (state.failed) return ;

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1520:7: CLASS_DEFINITION
                    {
                    match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_declarationStart10130); if (state.failed) return ;

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1521:7: OBJECT_DEFINITION ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_declarationStart10138); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1522:7: NEW
                    {
                    match(input,NEW,FOLLOW_NEW_in_declarationStart10153); if (state.failed) return ;

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1523:7: ALIAS
                    {
                    match(input,ALIAS,FOLLOW_ALIAS_in_declarationStart10161); if (state.failed) return ;

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1524:7: variadicType LIDENTIFIER
                    {
                    pushFollow(FOLLOW_variadicType_in_declarationStart10170);
                    variadicType();

                    state._fsp--;
                    if (state.failed) return ;

                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_declarationStart10172); if (state.failed) return ;

                    }
                    break;
                case 11 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1525:7: DYNAMIC ( LIDENTIFIER | UIDENTIFIER )
                    {
                    match(input,DYNAMIC,FOLLOW_DYNAMIC_in_declarationStart10180); if (state.failed) return ;

                    if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "declarationStart"



    // $ANTLR start "unambiguousType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1531:1: unambiguousType : ( qualifiedType ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )? ( OPTIONAL | LBRACKET RBRACKET ) | LBRACE qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( PRODUCT_OP | SUM_OP ) RBRACE | LBRACKET qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )* ( PRODUCT_OP | SUM_OP ) RBRACKET );
    public void unambiguousType() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1532:5: ( qualifiedType ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )? ( OPTIONAL | LBRACKET RBRACKET ) | LBRACE qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( PRODUCT_OP | SUM_OP ) RBRACE | LBRACKET qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )* ( PRODUCT_OP | SUM_OP ) RBRACKET )
            int alt157=3;
            switch ( input.LA(1) ) {
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt157=1;
                }
                break;
            case LBRACE:
                {
                alt157=2;
                }
                break;
            case LBRACKET:
                {
                alt157=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;

            }

            switch (alt157) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1532:7: qualifiedType ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )? ( OPTIONAL | LBRACKET RBRACKET )
                    {
                    pushFollow(FOLLOW_qualifiedType_in_unambiguousType10210);
                    qualifiedType();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1533:7: ( ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType )?
                    int alt145=2;
                    switch ( input.LA(1) ) {
                        case OPTIONAL:
                            {
                            int LA145_1 = input.LA(2);

                            if ( (LA145_1==ENTRY_OP) ) {
                                alt145=1;
                            }
                            }
                            break;
                        case LBRACKET:
                            {
                            int LA145_2 = input.LA(2);

                            if ( (LA145_2==RBRACKET) ) {
                                int LA145_5 = input.LA(3);

                                if ( (LA145_5==ENTRY_OP) ) {
                                    alt145=1;
                                }
                            }
                            }
                            break;
                        case ENTRY_OP:
                            {
                            alt145=1;
                            }
                            break;
                    }

                    switch (alt145) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1534:9: ( OPTIONAL | LBRACKET RBRACKET )? ENTRY_OP qualifiedType
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1534:9: ( OPTIONAL | LBRACKET RBRACKET )?
                            int alt144=3;
                            int LA144_0 = input.LA(1);

                            if ( (LA144_0==OPTIONAL) ) {
                                alt144=1;
                            }
                            else if ( (LA144_0==LBRACKET) ) {
                                alt144=2;
                            }
                            switch (alt144) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1534:10: OPTIONAL
                                    {
                                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10230); if (state.failed) return ;

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1534:21: LBRACKET RBRACKET
                                    {
                                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10234); if (state.failed) return ;

                                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10236); if (state.failed) return ;

                                    }
                                    break;

                            }


                            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType10249); if (state.failed) return ;

                            pushFollow(FOLLOW_qualifiedType_in_unambiguousType10251);
                            qualifiedType();

                            state._fsp--;
                            if (state.failed) return ;

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1537:7: ( OPTIONAL | LBRACKET RBRACKET )
                    int alt146=2;
                    int LA146_0 = input.LA(1);

                    if ( (LA146_0==OPTIONAL) ) {
                        alt146=1;
                    }
                    else if ( (LA146_0==LBRACKET) ) {
                        alt146=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 146, 0, input);

                        throw nvae;

                    }
                    switch (alt146) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1537:8: OPTIONAL
                            {
                            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10269); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1537:19: LBRACKET RBRACKET
                            {
                            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10273); if (state.failed) return ;

                            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10275); if (state.failed) return ;

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1538:7: LBRACE qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( PRODUCT_OP | SUM_OP ) RBRACE
                    {
                    match(input,LBRACE,FOLLOW_LBRACE_in_unambiguousType10284); if (state.failed) return ;

                    pushFollow(FOLLOW_qualifiedType_in_unambiguousType10293);
                    qualifiedType();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1539:21: ( OPTIONAL | LBRACKET RBRACKET )?
                    int alt147=3;
                    int LA147_0 = input.LA(1);

                    if ( (LA147_0==OPTIONAL) ) {
                        alt147=1;
                    }
                    else if ( (LA147_0==LBRACKET) ) {
                        alt147=2;
                    }
                    switch (alt147) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1539:22: OPTIONAL
                            {
                            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10296); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1539:33: LBRACKET RBRACKET
                            {
                            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10300); if (state.failed) return ;

                            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10302); if (state.failed) return ;

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1540:7: ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    int alt149=2;
                    int LA149_0 = input.LA(1);

                    if ( (LA149_0==ENTRY_OP) ) {
                        alt149=1;
                    }
                    switch (alt149) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1541:9: ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )?
                            {
                            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType10322); if (state.failed) return ;

                            pushFollow(FOLLOW_qualifiedType_in_unambiguousType10324);
                            qualifiedType();

                            state._fsp--;
                            if (state.failed) return ;

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1542:9: ( OPTIONAL | LBRACKET RBRACKET )?
                            int alt148=3;
                            int LA148_0 = input.LA(1);

                            if ( (LA148_0==OPTIONAL) ) {
                                alt148=1;
                            }
                            else if ( (LA148_0==LBRACKET) ) {
                                alt148=2;
                            }
                            switch (alt148) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1542:10: OPTIONAL
                                    {
                                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10336); if (state.failed) return ;

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1542:21: LBRACKET RBRACKET
                                    {
                                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10340); if (state.failed) return ;

                                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10342); if (state.failed) return ;

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    if ( input.LA(1)==PRODUCT_OP||input.LA(1)==SUM_OP ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    match(input,RBRACE,FOLLOW_RBRACE_in_unambiguousType10375); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1546:7: LBRACKET qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )* ( PRODUCT_OP | SUM_OP ) RBRACKET
                    {
                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10383); if (state.failed) return ;

                    pushFollow(FOLLOW_qualifiedType_in_unambiguousType10392);
                    qualifiedType();

                    state._fsp--;
                    if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1547:21: ( OPTIONAL | LBRACKET RBRACKET )?
                    int alt150=3;
                    int LA150_0 = input.LA(1);

                    if ( (LA150_0==OPTIONAL) ) {
                        alt150=1;
                    }
                    else if ( (LA150_0==LBRACKET) ) {
                        alt150=2;
                    }
                    switch (alt150) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1547:22: OPTIONAL
                            {
                            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10395); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1547:33: LBRACKET RBRACKET
                            {
                            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10399); if (state.failed) return ;

                            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10401); if (state.failed) return ;

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1548:7: ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    int alt152=2;
                    int LA152_0 = input.LA(1);

                    if ( (LA152_0==ENTRY_OP) ) {
                        alt152=1;
                    }
                    switch (alt152) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1549:9: ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )?
                            {
                            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType10422); if (state.failed) return ;

                            pushFollow(FOLLOW_qualifiedType_in_unambiguousType10424);
                            qualifiedType();

                            state._fsp--;
                            if (state.failed) return ;

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1550:9: ( OPTIONAL | LBRACKET RBRACKET )?
                            int alt151=3;
                            int LA151_0 = input.LA(1);

                            if ( (LA151_0==OPTIONAL) ) {
                                alt151=1;
                            }
                            else if ( (LA151_0==LBRACKET) ) {
                                alt151=2;
                            }
                            switch (alt151) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1550:10: OPTIONAL
                                    {
                                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10435); if (state.failed) return ;

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1550:21: LBRACKET RBRACKET
                                    {
                                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10439); if (state.failed) return ;

                                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10441); if (state.failed) return ;

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1552:7: ( COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )? )*
                    loop156:
                    do {
                        int alt156=2;
                        int LA156_0 = input.LA(1);

                        if ( (LA156_0==COMMA) ) {
                            alt156=1;
                        }


                        switch (alt156) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1553:9: COMMA qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_unambiguousType10471); if (state.failed) return ;

                    	    pushFollow(FOLLOW_qualifiedType_in_unambiguousType10482);
                    	    qualifiedType();

                    	    state._fsp--;
                    	    if (state.failed) return ;

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1554:23: ( OPTIONAL | LBRACKET RBRACKET )?
                    	    int alt153=3;
                    	    int LA153_0 = input.LA(1);

                    	    if ( (LA153_0==OPTIONAL) ) {
                    	        alt153=1;
                    	    }
                    	    else if ( (LA153_0==LBRACKET) ) {
                    	        alt153=2;
                    	    }
                    	    switch (alt153) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1554:24: OPTIONAL
                    	            {
                    	            match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10485); if (state.failed) return ;

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1554:35: LBRACKET RBRACKET
                    	            {
                    	            match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10489); if (state.failed) return ;

                    	            match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10491); if (state.failed) return ;

                    	            }
                    	            break;

                    	    }


                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1555:9: ( ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )? )?
                    	    int alt155=2;
                    	    int LA155_0 = input.LA(1);

                    	    if ( (LA155_0==ENTRY_OP) ) {
                    	        alt155=1;
                    	    }
                    	    switch (alt155) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1556:11: ENTRY_OP qualifiedType ( OPTIONAL | LBRACKET RBRACKET )?
                    	            {
                    	            match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_unambiguousType10516); if (state.failed) return ;

                    	            pushFollow(FOLLOW_qualifiedType_in_unambiguousType10518);
                    	            qualifiedType();

                    	            state._fsp--;
                    	            if (state.failed) return ;

                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1557:11: ( OPTIONAL | LBRACKET RBRACKET )?
                    	            int alt154=3;
                    	            int LA154_0 = input.LA(1);

                    	            if ( (LA154_0==OPTIONAL) ) {
                    	                alt154=1;
                    	            }
                    	            else if ( (LA154_0==LBRACKET) ) {
                    	                alt154=2;
                    	            }
                    	            switch (alt154) {
                    	                case 1 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1557:12: OPTIONAL
                    	                    {
                    	                    match(input,OPTIONAL,FOLLOW_OPTIONAL_in_unambiguousType10532); if (state.failed) return ;

                    	                    }
                    	                    break;
                    	                case 2 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1557:23: LBRACKET RBRACKET
                    	                    {
                    	                    match(input,LBRACKET,FOLLOW_LBRACKET_in_unambiguousType10536); if (state.failed) return ;

                    	                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10538); if (state.failed) return ;

                    	                    }
                    	                    break;

                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop156;
                        }
                    } while (true);


                    if ( input.LA(1)==PRODUCT_OP||input.LA(1)==SUM_OP ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    match(input,RBRACKET,FOLLOW_RBRACKET_in_unambiguousType10582); if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "unambiguousType"



    // $ANTLR start "statement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1564:1: statement returns [Statement statement] : ( directiveStatement | controlStatement | expressionOrSpecificationStatement );
    public Statement statement() throws RecognitionException {
        Statement statement = null;


        Directive directiveStatement211 =null;

        ControlStatement controlStatement212 =null;

        Statement expressionOrSpecificationStatement213 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1565:5: ( directiveStatement | controlStatement | expressionOrSpecificationStatement )
            int alt158=3;
            switch ( input.LA(1) ) {
            case BREAK:
            case CONTINUE:
            case RETURN:
            case THROW:
                {
                alt158=1;
                }
                break;
            case FOR_CLAUSE:
            case IF_CLAUSE:
            case SWITCH_CLAUSE:
            case TRY_CLAUSE:
            case WHILE_CLAUSE:
                {
                alt158=2;
                }
                break;
            case DYNAMIC:
                {
                int LA158_3 = input.LA(2);

                if ( (LA158_3==LBRACKET) ) {
                    alt158=3;
                }
                else if ( (LA158_3==LBRACE) ) {
                    alt158=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 158, 3, input);

                    throw nvae;

                }
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case FLOAT_LITERAL:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case NOT_OP:
            case OBJECT_DEFINITION:
            case OUTER:
            case PACKAGE:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
                {
                alt158=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;

            }

            switch (alt158) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1565:7: directiveStatement
                    {
                    pushFollow(FOLLOW_directiveStatement_in_statement10603);
                    directiveStatement211=directiveStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = directiveStatement211; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1567:7: controlStatement
                    {
                    pushFollow(FOLLOW_controlStatement_in_statement10619);
                    controlStatement212=controlStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = controlStatement212; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1569:7: expressionOrSpecificationStatement
                    {
                    pushFollow(FOLLOW_expressionOrSpecificationStatement_in_statement10635);
                    expressionOrSpecificationStatement213=expressionOrSpecificationStatement();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement = expressionOrSpecificationStatement213; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "statement"



    // $ANTLR start "expressionOrSpecificationStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1573:1: expressionOrSpecificationStatement returns [Statement statement] : expression ( lazySpecifier )? ( SEMICOLON | COMMA ) ;
    public Statement expressionOrSpecificationStatement() throws RecognitionException {
        Statement statement = null;


        Token SEMICOLON216=null;
        Token COMMA217=null;
        Expression expression214 =null;

        SpecifierExpression lazySpecifier215 =null;


         SpecifierStatement ss=new SpecifierStatement(null); 
                    ExpressionStatement es=new ExpressionStatement(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1576:5: ( expression ( lazySpecifier )? ( SEMICOLON | COMMA ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1576:7: expression ( lazySpecifier )? ( SEMICOLON | COMMA )
            {
            pushFollow(FOLLOW_expression_in_expressionOrSpecificationStatement10673);
            expression214=expression();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement = es;
                    if (expression214!=null)
                        es.setExpression(expression214);
                    if (expression214.getTerm() instanceof AssignOp) {
                        AssignOp a = (AssignOp) expression214.getTerm();
                        Term lt = a.getLeftTerm();
                        if (lt instanceof BaseMemberExpression ||
                            lt instanceof ParameterizedExpression ||
                            lt instanceof QualifiedMemberExpression &&
                                ((QualifiedMemberExpression) lt).getPrimary() instanceof This &&
                                ((QualifiedMemberExpression) lt).getMemberOperator() instanceof MemberOp) {
                            Expression e = new Expression(null);
                            e.setTerm(a.getRightTerm());
                            SpecifierExpression se = new SpecifierExpression(null);
                            se.setExpression(e);
                            ss.setSpecifierExpression(se);
                            ss.setBaseMemberExpression(a.getLeftTerm());
                            statement = ss;
                        }
                    }
                  }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1598:7: ( lazySpecifier )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==COMPUTE) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1604:9: lazySpecifier
                    {
                    pushFollow(FOLLOW_lazySpecifier_in_expressionOrSpecificationStatement10709);
                    lazySpecifier215=lazySpecifier();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { ss.setSpecifierExpression(lazySpecifier215);
                              ss.setBaseMemberExpression(expression214.getTerm()); 
                              statement = ss; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1610:7: ( SEMICOLON | COMMA )
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==SEMICOLON) ) {
                alt160=1;
            }
            else if ( (LA160_0==COMMA) ) {
                alt160=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 160, 0, input);

                throw nvae;

            }
            switch (alt160) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1611:9: SEMICOLON
                    {
                    SEMICOLON216=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_expressionOrSpecificationStatement10754); if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setEndToken(SEMICOLON216); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1613:9: COMMA
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(SEMICOLON, input)); }

                    COMMA217=(Token)match(input,COMMA,FOLLOW_COMMA_in_expressionOrSpecificationStatement10784); if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setEndToken(COMMA217); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "expressionOrSpecificationStatement"



    // $ANTLR start "directiveStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1621:1: directiveStatement returns [Directive directive] : d= directive SEMICOLON ;
    public Directive directiveStatement() throws RecognitionException {
        Directive directive = null;


        Token SEMICOLON218=null;
        Directive d =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1622:5: (d= directive SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1622:7: d= directive SEMICOLON
            {
            pushFollow(FOLLOW_directive_in_directiveStatement10833);
            d=directive();

            state._fsp--;
            if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive =d;
                    expecting=SEMICOLON; }

            SEMICOLON218=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_directiveStatement10850); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive.setEndToken(SEMICOLON218);
                    expecting=-1; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "directiveStatement"



    // $ANTLR start "directive"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1630:1: directive returns [Directive directive] : ( returnDirective | throwDirective | breakDirective | continueDirective );
    public Directive directive() throws RecognitionException {
        Directive directive = null;


        Return returnDirective219 =null;

        Throw throwDirective220 =null;

        Break breakDirective221 =null;

        Continue continueDirective222 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1631:5: ( returnDirective | throwDirective | breakDirective | continueDirective )
            int alt161=4;
            switch ( input.LA(1) ) {
            case RETURN:
                {
                alt161=1;
                }
                break;
            case THROW:
                {
                alt161=2;
                }
                break;
            case BREAK:
                {
                alt161=3;
                }
                break;
            case CONTINUE:
                {
                alt161=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return directive;}
                NoViableAltException nvae =
                    new NoViableAltException("", 161, 0, input);

                throw nvae;

            }

            switch (alt161) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1631:7: returnDirective
                    {
                    pushFollow(FOLLOW_returnDirective_in_directive10879);
                    returnDirective219=returnDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = returnDirective219; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1633:7: throwDirective
                    {
                    pushFollow(FOLLOW_throwDirective_in_directive10895);
                    throwDirective220=throwDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = throwDirective220; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1635:7: breakDirective
                    {
                    pushFollow(FOLLOW_breakDirective_in_directive10911);
                    breakDirective221=breakDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = breakDirective221; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1637:7: continueDirective
                    {
                    pushFollow(FOLLOW_continueDirective_in_directive10927);
                    continueDirective222=continueDirective();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive = continueDirective222; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "directive"



    // $ANTLR start "returnDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1641:1: returnDirective returns [Return directive] : RETURN ( functionOrExpression )? ;
    public Return returnDirective() throws RecognitionException {
        Return directive = null;


        Token RETURN223=null;
        Expression functionOrExpression224 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1642:5: ( RETURN ( functionOrExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1642:7: RETURN ( functionOrExpression )?
            {
            RETURN223=(Token)match(input,RETURN,FOLLOW_RETURN_in_returnDirective10956); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Return(RETURN223); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1644:7: ( functionOrExpression )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==BACKTICK||LA162_0==CHAR_LITERAL||(LA162_0 >= DECREMENT_OP && LA162_0 <= DIFFERENCE_OP)||LA162_0==DYNAMIC||LA162_0==FLOAT_LITERAL||LA162_0==FUNCTION_MODIFIER||LA162_0==IF_CLAUSE||LA162_0==INCREMENT_OP||(LA162_0 >= LBRACE && LA162_0 <= LIDENTIFIER)||LA162_0==LPAREN||LA162_0==NATURAL_LITERAL||(LA162_0 >= NOT_OP && LA162_0 <= OBJECT_DEFINITION)||(LA162_0 >= OUTER && LA162_0 <= PACKAGE)||LA162_0==SMALLER_OP||LA162_0==STRING_LITERAL||LA162_0==STRING_START||(LA162_0 >= SUM_OP && LA162_0 <= SWITCH_CLAUSE)||LA162_0==THIS||LA162_0==UIDENTIFIER||(LA162_0 >= VERBATIM_STRING && LA162_0 <= VOID_MODIFIER)) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1645:9: functionOrExpression
                    {
                    pushFollow(FOLLOW_functionOrExpression_in_returnDirective10983);
                    functionOrExpression224=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive.setExpression(functionOrExpression224); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "returnDirective"



    // $ANTLR start "throwDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1650:1: throwDirective returns [Throw directive] : THROW ( expression )? ;
    public Throw throwDirective() throws RecognitionException {
        Throw directive = null;


        Token THROW225=null;
        Expression expression226 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1651:5: ( THROW ( expression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1651:7: THROW ( expression )?
            {
            THROW225=(Token)match(input,THROW,FOLLOW_THROW_in_throwDirective11023); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Throw(THROW225); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1653:7: ( expression )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==BACKTICK||LA163_0==CHAR_LITERAL||(LA163_0 >= DECREMENT_OP && LA163_0 <= DIFFERENCE_OP)||LA163_0==DYNAMIC||LA163_0==FLOAT_LITERAL||LA163_0==INCREMENT_OP||(LA163_0 >= LBRACE && LA163_0 <= LBRACKET)||LA163_0==LIDENTIFIER||LA163_0==LPAREN||LA163_0==NATURAL_LITERAL||(LA163_0 >= NOT_OP && LA163_0 <= OBJECT_DEFINITION)||(LA163_0 >= OUTER && LA163_0 <= PACKAGE)||LA163_0==STRING_LITERAL||LA163_0==STRING_START||(LA163_0 >= SUM_OP && LA163_0 <= SUPER)||LA163_0==THIS||LA163_0==UIDENTIFIER||LA163_0==VERBATIM_STRING) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1654:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_throwDirective11050);
                    expression226=expression();

                    state._fsp--;
                    if (state.failed) return directive;

                    if ( state.backtracking==0 ) { directive.setExpression(expression226); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "throwDirective"



    // $ANTLR start "breakDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1659:1: breakDirective returns [Break directive] : BREAK ;
    public Break breakDirective() throws RecognitionException {
        Break directive = null;


        Token BREAK227=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1660:5: ( BREAK )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1660:7: BREAK
            {
            BREAK227=(Token)match(input,BREAK,FOLLOW_BREAK_in_breakDirective11090); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Break(BREAK227); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "breakDirective"



    // $ANTLR start "continueDirective"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1664:1: continueDirective returns [Continue directive] : CONTINUE ;
    public Continue continueDirective() throws RecognitionException {
        Continue directive = null;


        Token CONTINUE228=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1665:5: ( CONTINUE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1665:7: CONTINUE
            {
            CONTINUE228=(Token)match(input,CONTINUE,FOLLOW_CONTINUE_in_continueDirective11119); if (state.failed) return directive;

            if ( state.backtracking==0 ) { directive = new Continue(CONTINUE228); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return directive;
    }
    // $ANTLR end "continueDirective"



    // $ANTLR start "typeSpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1669:1: typeSpecifier returns [TypeSpecifier typeSpecifier] : ( COMPUTE | SPECIFY ) ( type )? ;
    public TypeSpecifier typeSpecifier() throws RecognitionException {
        TypeSpecifier typeSpecifier = null;


        Token COMPUTE229=null;
        Token SPECIFY230=null;
        StaticType type231 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1670:5: ( ( COMPUTE | SPECIFY ) ( type )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1670:7: ( COMPUTE | SPECIFY ) ( type )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1670:7: ( COMPUTE | SPECIFY )
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==COMPUTE) ) {
                alt164=1;
            }
            else if ( (LA164_0==SPECIFY) ) {
                alt164=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return typeSpecifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 164, 0, input);

                throw nvae;

            }
            switch (alt164) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1671:9: COMPUTE
                    {
                    COMPUTE229=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_typeSpecifier11158); if (state.failed) return typeSpecifier;

                    if ( state.backtracking==0 ) { typeSpecifier = new TypeSpecifier(COMPUTE229); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1674:9: SPECIFY
                    {
                    SPECIFY230=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_typeSpecifier11187); if (state.failed) return typeSpecifier;

                    if ( state.backtracking==0 ) { typeSpecifier = new TypeSpecifier(SPECIFY230); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1677:7: ( type )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( ((LA165_0 >= LBRACE && LA165_0 <= LBRACKET)||LA165_0==PACKAGE||LA165_0==SMALLER_OP||LA165_0==UIDENTIFIER) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1678:9: type
                    {
                    pushFollow(FOLLOW_type_in_typeSpecifier11224);
                    type231=type();

                    state._fsp--;
                    if (state.failed) return typeSpecifier;

                    if ( state.backtracking==0 ) { typeSpecifier.setType(type231); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeSpecifier;
    }
    // $ANTLR end "typeSpecifier"



    // $ANTLR start "typeDefault"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1683:1: typeDefault returns [TypeSpecifier typeSpecifier] : SPECIFY type ;
    public TypeSpecifier typeDefault() throws RecognitionException {
        TypeSpecifier typeSpecifier = null;


        Token SPECIFY232=null;
        StaticType type233 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1684:5: ( SPECIFY type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1684:7: SPECIFY type
            {
            SPECIFY232=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_typeDefault11264); if (state.failed) return typeSpecifier;

            if ( state.backtracking==0 ) { typeSpecifier = new DefaultTypeArgument(SPECIFY232); }

            pushFollow(FOLLOW_type_in_typeDefault11281);
            type233=type();

            state._fsp--;
            if (state.failed) return typeSpecifier;

            if ( state.backtracking==0 ) { typeSpecifier.setType(type233); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeSpecifier;
    }
    // $ANTLR end "typeDefault"



    // $ANTLR start "specifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1690:1: specifier returns [SpecifierExpression specifierExpression] : SPECIFY functionOrExpression ;
    public SpecifierExpression specifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token SPECIFY234=null;
        Expression functionOrExpression235 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1691:5: ( SPECIFY functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1691:7: SPECIFY functionOrExpression
            {
            SPECIFY234=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_specifier11310); if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression = new SpecifierExpression(SPECIFY234); }

            pushFollow(FOLLOW_functionOrExpression_in_specifier11326);
            functionOrExpression235=functionOrExpression();

            state._fsp--;
            if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression235); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "specifier"



    // $ANTLR start "lazySpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1697:1: lazySpecifier returns [SpecifierExpression specifierExpression] : COMPUTE functionOrExpression ;
    public SpecifierExpression lazySpecifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token COMPUTE236=null;
        Expression functionOrExpression237 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1698:5: ( COMPUTE functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1698:7: COMPUTE functionOrExpression
            {
            COMPUTE236=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_lazySpecifier11355); if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(COMPUTE236); }

            pushFollow(FOLLOW_functionOrExpression_in_lazySpecifier11371);
            functionOrExpression237=functionOrExpression();

            state._fsp--;
            if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression237); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "lazySpecifier"



    // $ANTLR start "functionSpecifier"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1704:1: functionSpecifier returns [SpecifierExpression specifierExpression] : ( COMPUTE | SPECIFY ) functionOrExpression ;
    public SpecifierExpression functionSpecifier() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token COMPUTE238=null;
        Token SPECIFY239=null;
        Expression functionOrExpression240 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1705:5: ( ( COMPUTE | SPECIFY ) functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1705:7: ( COMPUTE | SPECIFY ) functionOrExpression
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1705:7: ( COMPUTE | SPECIFY )
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==COMPUTE) ) {
                alt166=1;
            }
            else if ( (LA166_0==SPECIFY) ) {
                alt166=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return specifierExpression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 166, 0, input);

                throw nvae;

            }
            switch (alt166) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1706:9: COMPUTE
                    {
                    COMPUTE238=(Token)match(input,COMPUTE,FOLLOW_COMPUTE_in_functionSpecifier11410); if (state.failed) return specifierExpression;

                    if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(COMPUTE238); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1709:9: SPECIFY
                    {
                    SPECIFY239=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_functionSpecifier11438); if (state.failed) return specifierExpression;

                    if ( state.backtracking==0 ) { specifierExpression = new LazySpecifierExpression(SPECIFY239); }

                    }
                    break;

            }


            pushFollow(FOLLOW_functionOrExpression_in_functionSpecifier11464);
            functionOrExpression240=functionOrExpression();

            state._fsp--;
            if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression.setExpression(functionOrExpression240); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "functionSpecifier"



    // $ANTLR start "expression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1716:1: expression returns [Expression expression] : assignmentExpression ;
    public Expression expression() throws RecognitionException {
        Expression expression = null;


        Term assignmentExpression241 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1717:5: ( assignmentExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1717:7: assignmentExpression
            {
            if ( state.backtracking==0 ) { expression = new Expression(null); }

            pushFollow(FOLLOW_assignmentExpression_in_expression11501);
            assignmentExpression241=assignmentExpression();

            state._fsp--;
            if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression.setTerm(assignmentExpression241); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "expression"



    // $ANTLR start "base"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1722:1: base returns [Primary primary] : ( nonstringLiteral | stringExpression | metaLiteral | enumeration | tuple | dynamicObject | objectExpression | parExpression | baseReferenceOrParameterized );
    public Primary base() throws RecognitionException {
        Primary primary = null;


        Literal nonstringLiteral242 =null;

        Atom stringExpression243 =null;

        MetaLiteral metaLiteral244 =null;

        SequenceEnumeration enumeration245 =null;

        Tuple tuple246 =null;

        Dynamic dynamicObject247 =null;

        ObjectExpression objectExpression248 =null;

        Expression parExpression249 =null;

        Primary baseReferenceOrParameterized250 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1723:5: ( nonstringLiteral | stringExpression | metaLiteral | enumeration | tuple | dynamicObject | objectExpression | parExpression | baseReferenceOrParameterized )
            int alt167=9;
            switch ( input.LA(1) ) {
            case CHAR_LITERAL:
            case FLOAT_LITERAL:
            case NATURAL_LITERAL:
                {
                alt167=1;
                }
                break;
            case STRING_LITERAL:
            case STRING_START:
            case VERBATIM_STRING:
                {
                alt167=2;
                }
                break;
            case BACKTICK:
                {
                alt167=3;
                }
                break;
            case LBRACE:
                {
                alt167=4;
                }
                break;
            case LBRACKET:
                {
                alt167=5;
                }
                break;
            case DYNAMIC:
                {
                alt167=6;
                }
                break;
            case OBJECT_DEFINITION:
                {
                alt167=7;
                }
                break;
            case LPAREN:
                {
                alt167=8;
                }
                break;
            case LIDENTIFIER:
            case OUTER:
            case PACKAGE:
            case SUPER:
            case THIS:
            case UIDENTIFIER:
                {
                alt167=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return primary;}
                NoViableAltException nvae =
                    new NoViableAltException("", 167, 0, input);

                throw nvae;

            }

            switch (alt167) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1723:7: nonstringLiteral
                    {
                    pushFollow(FOLLOW_nonstringLiteral_in_base11530);
                    nonstringLiteral242=nonstringLiteral();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =nonstringLiteral242; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1725:7: stringExpression
                    {
                    pushFollow(FOLLOW_stringExpression_in_base11546);
                    stringExpression243=stringExpression();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =stringExpression243; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1727:7: metaLiteral
                    {
                    pushFollow(FOLLOW_metaLiteral_in_base11562);
                    metaLiteral244=metaLiteral();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =metaLiteral244; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1729:7: enumeration
                    {
                    pushFollow(FOLLOW_enumeration_in_base11578);
                    enumeration245=enumeration();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =enumeration245; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1731:7: tuple
                    {
                    pushFollow(FOLLOW_tuple_in_base11594);
                    tuple246=tuple();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =tuple246; }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1733:7: dynamicObject
                    {
                    pushFollow(FOLLOW_dynamicObject_in_base11610);
                    dynamicObject247=dynamicObject();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =dynamicObject247; }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1735:7: objectExpression
                    {
                    pushFollow(FOLLOW_objectExpression_in_base11626);
                    objectExpression248=objectExpression();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary = objectExpression248; }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1737:7: parExpression
                    {
                    pushFollow(FOLLOW_parExpression_in_base11642);
                    parExpression249=parExpression();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =parExpression249; }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1739:7: baseReferenceOrParameterized
                    {
                    pushFollow(FOLLOW_baseReferenceOrParameterized_in_base11658);
                    baseReferenceOrParameterized250=baseReferenceOrParameterized();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =baseReferenceOrParameterized250; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return primary;
    }
    // $ANTLR end "base"



    // $ANTLR start "baseReferenceOrParameterized"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1743:1: baseReferenceOrParameterized returns [Primary primary] : ( ( LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+ | baseReference | selfReference ( ( MEMBER_OP LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberSelectionOperator memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+ )? );
    public Primary baseReferenceOrParameterized() throws RecognitionException {
        Primary primary = null;


        Identifier memberName251 =null;

        TypeParameterList typeParameters252 =null;

        ParameterList parameters253 =null;

        PsiCompatibleCeylonParser.baseReference_return baseReference254 =null;

        Atom selfReference255 =null;

        MemberOperator memberSelectionOperator256 =null;

        Identifier memberName257 =null;

        TypeParameterList typeParameters258 =null;

        ParameterList parameters259 =null;


         BaseMemberOrTypeExpression be=null;
                    QualifiedMemberOrTypeExpression qe=null;
                    ParameterizedExpression pe=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1747:5: ( ( LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+ | baseReference | selfReference ( ( MEMBER_OP LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberSelectionOperator memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+ )? )
            int alt173=3;
            switch ( input.LA(1) ) {
            case LIDENTIFIER:
                {
                int LA173_1 = input.LA(2);

                if ( (synpred18_Ceylon()) ) {
                    alt173=1;
                }
                else if ( (true) ) {
                    alt173=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return primary;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 173, 1, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                alt173=2;
                }
                break;
            case OUTER:
            case PACKAGE:
            case SUPER:
            case THIS:
                {
                alt173=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return primary;}
                NoViableAltException nvae =
                    new NoViableAltException("", 173, 0, input);

                throw nvae;

            }

            switch (alt173) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1747:7: ( LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+
                    {
                    pushFollow(FOLLOW_memberName_in_baseReferenceOrParameterized11714);
                    memberName251=memberName();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { be = new BaseMemberExpression(null);
                            be.setTypeArguments(new InferredTypeArguments(null)); //yew!!
                            be.setIdentifier(memberName251); 
                            pe = new ParameterizedExpression(null);
                            pe.setPrimary(be); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1754:7: ( typeParameters )?
                    int alt168=2;
                    int LA168_0 = input.LA(1);

                    if ( (LA168_0==SMALLER_OP) ) {
                        alt168=1;
                    }
                    switch (alt168) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1755:9: typeParameters
                            {
                            pushFollow(FOLLOW_typeParameters_in_baseReferenceOrParameterized11740);
                            typeParameters252=typeParameters();

                            state._fsp--;
                            if (state.failed) return primary;

                            if ( state.backtracking==0 ) { pe.setTypeParameterList(typeParameters252); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1758:7: ( ( specifierParametersStart )=> parameters )+
                    int cnt169=0;
                    loop169:
                    do {
                        int alt169=2;
                        alt169 = dfa169.predict(input);
                        switch (alt169) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1759:9: ( specifierParametersStart )=> parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_baseReferenceOrParameterized11783);
                    	    parameters253=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return primary;

                    	    if ( state.backtracking==0 ) { pe.addParameterList(parameters253);
                    	              primary = pe; }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt169 >= 1 ) break loop169;
                    	    if (state.backtracking>0) {state.failed=true; return primary;}
                                EarlyExitException eee =
                                    new EarlyExitException(169, input);
                                throw eee;
                        }
                        cnt169++;
                    } while (true);


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1763:7: baseReference
                    {
                    pushFollow(FOLLOW_baseReference_in_baseReferenceOrParameterized11810);
                    baseReference254=baseReference();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { if ((baseReference254!=null?baseReference254.isMember:false))
                                be = new BaseMemberExpression(null);
                            else
                                be = new BaseTypeExpression(null);
                            be.setIdentifier((baseReference254!=null?baseReference254.identifier:null));
                            if ((baseReference254!=null?baseReference254.typeArgumentList:null)!=null)
                                be.setTypeArguments((baseReference254!=null?baseReference254.typeArgumentList:null));
                            else
                                be.setTypeArguments(new InferredTypeArguments(null));
                            primary =be; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1774:7: selfReference ( ( MEMBER_OP LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberSelectionOperator memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+ )?
                    {
                    pushFollow(FOLLOW_selfReference_in_baseReferenceOrParameterized11826);
                    selfReference255=selfReference();

                    state._fsp--;
                    if (state.failed) return primary;

                    if ( state.backtracking==0 ) { primary =selfReference255; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1776:7: ( ( MEMBER_OP LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberSelectionOperator memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+ )?
                    int alt172=2;
                    alt172 = dfa172.predict(input);
                    switch (alt172) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1777:9: ( MEMBER_OP LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberSelectionOperator memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+
                            {
                            pushFollow(FOLLOW_memberSelectionOperator_in_baseReferenceOrParameterized11874);
                            memberSelectionOperator256=memberSelectionOperator();

                            state._fsp--;
                            if (state.failed) return primary;

                            if ( state.backtracking==0 ) { qe = new QualifiedMemberExpression(null); 
                                      qe.setMemberOperator(memberSelectionOperator256);
                                      qe.setTypeArguments(new InferredTypeArguments(null)); }

                            pushFollow(FOLLOW_memberName_in_baseReferenceOrParameterized11894);
                            memberName257=memberName();

                            state._fsp--;
                            if (state.failed) return primary;

                            if ( state.backtracking==0 ) { qe.setIdentifier(memberName257); 
                                      qe.setPrimary(primary);
                                      pe = new ParameterizedExpression(null);
                                      pe.setPrimary(qe); }

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1787:9: ( typeParameters )?
                            int alt170=2;
                            int LA170_0 = input.LA(1);

                            if ( (LA170_0==SMALLER_OP) ) {
                                alt170=1;
                            }
                            switch (alt170) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1788:11: typeParameters
                                    {
                                    pushFollow(FOLLOW_typeParameters_in_baseReferenceOrParameterized11926);
                                    typeParameters258=typeParameters();

                                    state._fsp--;
                                    if (state.failed) return primary;

                                    if ( state.backtracking==0 ) { pe.setTypeParameterList(typeParameters258); }

                                    }
                                    break;

                            }


                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1791:9: ( ( specifierParametersStart )=> parameters )+
                            int cnt171=0;
                            loop171:
                            do {
                                int alt171=2;
                                alt171 = dfa171.predict(input);
                                switch (alt171) {
                            	case 1 :
                            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1792:11: ( specifierParametersStart )=> parameters
                            	    {
                            	    pushFollow(FOLLOW_parameters_in_baseReferenceOrParameterized11977);
                            	    parameters259=parameters();

                            	    state._fsp--;
                            	    if (state.failed) return primary;

                            	    if ( state.backtracking==0 ) { pe.addParameterList(parameters259);
                            	                primary = pe; }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt171 >= 1 ) break loop171;
                            	    if (state.backtracking>0) {state.failed=true; return primary;}
                                        EarlyExitException eee =
                                            new EarlyExitException(171, input);
                                        throw eee;
                                }
                                cnt171++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return primary;
    }
    // $ANTLR end "baseReferenceOrParameterized"


    public static class baseReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
        public boolean isMember;
    };


    // $ANTLR start "baseReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1799:1: baseReference returns [Identifier identifier, \n TypeArgumentList typeArgumentList, \n boolean isMember] : ( memberReference | typeReference ) ;
    public PsiCompatibleCeylonParser.baseReference_return baseReference() throws RecognitionException {
        PsiCompatibleCeylonParser.baseReference_return retval = new PsiCompatibleCeylonParser.baseReference_return();
        retval.start = input.LT(1);


        PsiCompatibleCeylonParser.memberReference_return memberReference260 =null;

        PsiCompatibleCeylonParser.typeReference_return typeReference261 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1802:5: ( ( memberReference | typeReference ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1803:5: ( memberReference | typeReference )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1803:5: ( memberReference | typeReference )
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==LIDENTIFIER) ) {
                alt174=1;
            }
            else if ( (LA174_0==UIDENTIFIER) ) {
                alt174=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 174, 0, input);

                throw nvae;

            }
            switch (alt174) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1804:7: memberReference
                    {
                    pushFollow(FOLLOW_memberReference_in_baseReference12043);
                    memberReference260=memberReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (memberReference260!=null?memberReference260.identifier:null);
                            retval.typeArgumentList = (memberReference260!=null?memberReference260.typeArgumentList:null);
                            retval.isMember = true; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1808:7: typeReference
                    {
                    pushFollow(FOLLOW_typeReference_in_baseReference12059);
                    typeReference261=typeReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (typeReference261!=null?typeReference261.identifier:null);
                            retval.typeArgumentList = (typeReference261!=null?typeReference261.typeArgumentList:null);
                            retval.isMember = false; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "baseReference"



    // $ANTLR start "primary"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1815:1: primary returns [Primary primary] : base ( qualifiedReference | indexOrIndexRange | positionalArguments | namedArguments )* ;
    public Primary primary() throws RecognitionException {
        Primary primary = null;


        Primary base262 =null;

        PsiCompatibleCeylonParser.qualifiedReference_return qualifiedReference263 =null;

        IndexExpression indexOrIndexRange264 =null;

        PositionalArgumentList positionalArguments265 =null;

        NamedArgumentList namedArguments266 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1816:5: ( base ( qualifiedReference | indexOrIndexRange | positionalArguments | namedArguments )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1816:7: base ( qualifiedReference | indexOrIndexRange | positionalArguments | namedArguments )*
            {
            pushFollow(FOLLOW_base_in_primary12094);
            base262=base();

            state._fsp--;
            if (state.failed) return primary;

            if ( state.backtracking==0 ) { primary =base262; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1818:5: ( qualifiedReference | indexOrIndexRange | positionalArguments | namedArguments )*
            loop175:
            do {
                int alt175=5;
                switch ( input.LA(1) ) {
                case MEMBER_OP:
                case SAFE_MEMBER_OP:
                case SPREAD_OP:
                    {
                    alt175=1;
                    }
                    break;
                case LBRACKET:
                    {
                    alt175=2;
                    }
                    break;
                case LPAREN:
                    {
                    alt175=3;
                    }
                    break;
                case LBRACE:
                    {
                    alt175=4;
                    }
                    break;

                }

                switch (alt175) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1819:7: qualifiedReference
            	    {
            	    pushFollow(FOLLOW_qualifiedReference_in_primary12116);
            	    qualifiedReference263=qualifiedReference();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { QualifiedMemberOrTypeExpression qe;
            	            if ((qualifiedReference263!=null?qualifiedReference263.isMember:false))
            	                qe = new QualifiedMemberExpression(null);
            	            else
            	                qe = new QualifiedTypeExpression(null);
            	            qe.setPrimary(primary);
            	            qe.setMemberOperator((qualifiedReference263!=null?qualifiedReference263.operator:null));
            	            qe.setIdentifier((qualifiedReference263!=null?qualifiedReference263.identifier:null));
            	            if ((qualifiedReference263!=null?qualifiedReference263.typeArgumentList:null)!=null)
            	                qe.setTypeArguments((qualifiedReference263!=null?qualifiedReference263.typeArgumentList:null));
            	            else 
            	                qe.setTypeArguments( new InferredTypeArguments(null) );
            	            primary =qe; }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1833:9: indexOrIndexRange
            	    {
            	    pushFollow(FOLLOW_indexOrIndexRange_in_primary12134);
            	    indexOrIndexRange264=indexOrIndexRange();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { indexOrIndexRange264.setPrimary(primary);
            	              primary = indexOrIndexRange264; }

            	    }
            	    break;
            	case 3 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1836:9: positionalArguments
            	    {
            	    pushFollow(FOLLOW_positionalArguments_in_primary12155);
            	    positionalArguments265=positionalArguments();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { InvocationExpression ie = new InvocationExpression(null);
            	              ie.setPrimary(primary);
            	              ie.setPositionalArgumentList(positionalArguments265); 
            	              primary =ie; }

            	    }
            	    break;
            	case 4 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1841:9: namedArguments
            	    {
            	    pushFollow(FOLLOW_namedArguments_in_primary12176);
            	    namedArguments266=namedArguments();

            	    state._fsp--;
            	    if (state.failed) return primary;

            	    if ( state.backtracking==0 ) { InvocationExpression ie = new InvocationExpression(null);
            	              ie.setPrimary(primary);
            	              ie.setNamedArgumentList(namedArguments266);
            	              primary =ie; }

            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return primary;
    }
    // $ANTLR end "primary"



    // $ANTLR start "specifierParametersStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1849:1: specifierParametersStart : LPAREN ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart ) ;
    public void specifierParametersStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1850:5: ( LPAREN ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1850:7: LPAREN ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart )
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_specifierParametersStart12210); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1851:5: ( RPAREN ( SPECIFY | COMPUTE | specifierParametersStart ) | compilerAnnotations annotatedDeclarationStart )
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( (LA177_0==RPAREN) ) {
                alt177=1;
            }
            else if ( (LA177_0==ALIAS||(LA177_0 >= ASSERT && LA177_0 <= ASSIGN)||(LA177_0 >= BACKTICK && LA177_0 <= BREAK)||(LA177_0 >= CHAR_LITERAL && LA177_0 <= CLASS_DEFINITION)||LA177_0==COMPILER_ANNOTATION||LA177_0==CONTINUE||(LA177_0 >= DECREMENT_OP && LA177_0 <= DIFFERENCE_OP)||LA177_0==DYNAMIC||(LA177_0 >= FLOAT_LITERAL && LA177_0 <= FUNCTION_MODIFIER)||(LA177_0 >= IF_CLAUSE && LA177_0 <= INTERFACE_DEFINITION)||LA177_0==IN_OP||(LA177_0 >= LBRACE && LA177_0 <= LIDENTIFIER)||LA177_0==LPAREN||LA177_0==MODULE||(LA177_0 >= NATURAL_LITERAL && LA177_0 <= NEW)||(LA177_0 >= NOT_OP && LA177_0 <= OBJECT_DEFINITION)||(LA177_0 >= OUT && LA177_0 <= PACKAGE)||LA177_0==PRODUCT_OP||LA177_0==RETURN||(LA177_0 >= SEMICOLON && LA177_0 <= SMALLER_OP)||LA177_0==STRING_LITERAL||LA177_0==STRING_START||(LA177_0 >= SUM_OP && LA177_0 <= SWITCH_CLAUSE)||(LA177_0 >= THIS && LA177_0 <= UIDENTIFIER)||(LA177_0 >= VALUE_MODIFIER && LA177_0 <= WHILE_CLAUSE)) ) {
                alt177=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 177, 0, input);

                throw nvae;

            }
            switch (alt177) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1852:7: RPAREN ( SPECIFY | COMPUTE | specifierParametersStart )
                    {
                    match(input,RPAREN,FOLLOW_RPAREN_in_specifierParametersStart12226); if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1852:14: ( SPECIFY | COMPUTE | specifierParametersStart )
                    int alt176=3;
                    switch ( input.LA(1) ) {
                    case SPECIFY:
                        {
                        alt176=1;
                        }
                        break;
                    case COMPUTE:
                        {
                        alt176=2;
                        }
                        break;
                    case LPAREN:
                        {
                        alt176=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 176, 0, input);

                        throw nvae;

                    }

                    switch (alt176) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1852:15: SPECIFY
                            {
                            match(input,SPECIFY,FOLLOW_SPECIFY_in_specifierParametersStart12229); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1852:23: COMPUTE
                            {
                            match(input,COMPUTE,FOLLOW_COMPUTE_in_specifierParametersStart12231); if (state.failed) return ;

                            }
                            break;
                        case 3 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1852:31: specifierParametersStart
                            {
                            pushFollow(FOLLOW_specifierParametersStart_in_specifierParametersStart12233);
                            specifierParametersStart();

                            state._fsp--;
                            if (state.failed) return ;

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1854:7: compilerAnnotations annotatedDeclarationStart
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_specifierParametersStart12249);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    pushFollow(FOLLOW_annotatedDeclarationStart_in_specifierParametersStart12251);
                    annotatedDeclarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "specifierParametersStart"


    public static class qualifiedReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public MemberOperator operator;
        public TypeArgumentList typeArgumentList;
        public boolean isMember;
    };


    // $ANTLR start "qualifiedReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1858:1: qualifiedReference returns [Identifier identifier, MemberOperator operator, \n TypeArgumentList typeArgumentList, boolean isMember] : memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>) ;
    public PsiCompatibleCeylonParser.qualifiedReference_return qualifiedReference() throws RecognitionException {
        PsiCompatibleCeylonParser.qualifiedReference_return retval = new PsiCompatibleCeylonParser.qualifiedReference_return();
        retval.start = input.LT(1);


        MemberOperator memberSelectionOperator267 =null;

        PsiCompatibleCeylonParser.memberReference_return memberReference268 =null;

        PsiCompatibleCeylonParser.typeReference_return typeReference269 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1860:5: ( memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1860:7: memberSelectionOperator ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)
            {
            pushFollow(FOLLOW_memberSelectionOperator_in_qualifiedReference12278);
            memberSelectionOperator267=memberSelectionOperator();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.operator = memberSelectionOperator267;
                    retval.identifier = new Identifier(retval.operator.getToken());
                    retval.identifier.setText("");
                    retval.isMember =true; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1865:7: ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)
            int alt178=3;
            alt178 = dfa178.predict(input);
            switch (alt178) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1866:9: memberReference
                    {
                    pushFollow(FOLLOW_memberReference_in_qualifiedReference12306);
                    memberReference268=memberReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (memberReference268!=null?memberReference268.identifier:null);
                              retval.typeArgumentList = (memberReference268!=null?memberReference268.typeArgumentList:null); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1869:9: typeReference
                    {
                    pushFollow(FOLLOW_typeReference_in_qualifiedReference12326);
                    typeReference269=typeReference();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.identifier = (typeReference269!=null?typeReference269.identifier:null);
                              retval.typeArgumentList = (typeReference269!=null?typeReference269.typeArgumentList:null);  
                              retval.isMember =false; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1873:9: (~ ( LIDENTIFIER | UIDENTIFIER ) )=>
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "qualifiedReference"



    // $ANTLR start "memberSelectionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1879:1: memberSelectionOperator returns [MemberOperator operator] : ( MEMBER_OP | SAFE_MEMBER_OP | SPREAD_OP );
    public MemberOperator memberSelectionOperator() throws RecognitionException {
        MemberOperator operator = null;


        Token MEMBER_OP270=null;
        Token SAFE_MEMBER_OP271=null;
        Token SPREAD_OP272=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1880:5: ( MEMBER_OP | SAFE_MEMBER_OP | SPREAD_OP )
            int alt179=3;
            switch ( input.LA(1) ) {
            case MEMBER_OP:
                {
                alt179=1;
                }
                break;
            case SAFE_MEMBER_OP:
                {
                alt179=2;
                }
                break;
            case SPREAD_OP:
                {
                alt179=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;

            }

            switch (alt179) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1880:7: MEMBER_OP
                    {
                    MEMBER_OP270=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_memberSelectionOperator12393); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new MemberOp(MEMBER_OP270); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1882:7: SAFE_MEMBER_OP
                    {
                    SAFE_MEMBER_OP271=(Token)match(input,SAFE_MEMBER_OP,FOLLOW_SAFE_MEMBER_OP_in_memberSelectionOperator12409); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new SafeMemberOp(SAFE_MEMBER_OP271); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1884:7: SPREAD_OP
                    {
                    SPREAD_OP272=(Token)match(input,SPREAD_OP,FOLLOW_SPREAD_OP_in_memberSelectionOperator12425); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator =new SpreadOp(SPREAD_OP272); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "memberSelectionOperator"



    // $ANTLR start "enumeration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1888:1: enumeration returns [SequenceEnumeration sequenceEnumeration] : LBRACE ( sequencedArgument )? RBRACE ;
    public SequenceEnumeration enumeration() throws RecognitionException {
        SequenceEnumeration sequenceEnumeration = null;


        Token LBRACE273=null;
        Token RBRACE275=null;
        SequencedArgument sequencedArgument274 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1889:5: ( LBRACE ( sequencedArgument )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1889:7: LBRACE ( sequencedArgument )? RBRACE
            {
            LBRACE273=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_enumeration12454); if (state.failed) return sequenceEnumeration;

            if ( state.backtracking==0 ) { sequenceEnumeration = new SequenceEnumeration(LBRACE273); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1891:7: ( sequencedArgument )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==ALIAS||(LA180_0 >= ASSERT && LA180_0 <= ASSIGN)||(LA180_0 >= BACKTICK && LA180_0 <= BREAK)||(LA180_0 >= CHAR_LITERAL && LA180_0 <= CLASS_DEFINITION)||LA180_0==COMPILER_ANNOTATION||LA180_0==CONTINUE||(LA180_0 >= DECREMENT_OP && LA180_0 <= DIFFERENCE_OP)||LA180_0==DYNAMIC||(LA180_0 >= FLOAT_LITERAL && LA180_0 <= FUNCTION_MODIFIER)||(LA180_0 >= IF_CLAUSE && LA180_0 <= INTERFACE_DEFINITION)||LA180_0==IN_OP||(LA180_0 >= LBRACE && LA180_0 <= LIDENTIFIER)||LA180_0==LPAREN||LA180_0==MODULE||(LA180_0 >= NATURAL_LITERAL && LA180_0 <= NEW)||(LA180_0 >= NOT_OP && LA180_0 <= OBJECT_DEFINITION)||(LA180_0 >= OUT && LA180_0 <= PACKAGE)||LA180_0==PRODUCT_OP||LA180_0==RETURN||(LA180_0 >= SEMICOLON && LA180_0 <= SMALLER_OP)||LA180_0==STRING_LITERAL||LA180_0==STRING_START||(LA180_0 >= SUM_OP && LA180_0 <= SWITCH_CLAUSE)||(LA180_0 >= THIS && LA180_0 <= UIDENTIFIER)||(LA180_0 >= VALUE_MODIFIER && LA180_0 <= WHILE_CLAUSE)) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1892:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_enumeration12482);
                    sequencedArgument274=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return sequenceEnumeration;

                    if ( state.backtracking==0 ) { sequenceEnumeration.setSequencedArgument(sequencedArgument274); }

                    }
                    break;

            }


            RBRACE275=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_enumeration12509); if (state.failed) return sequenceEnumeration;

            if ( state.backtracking==0 ) { sequenceEnumeration.setEndToken(RBRACE275); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return sequenceEnumeration;
    }
    // $ANTLR end "enumeration"



    // $ANTLR start "tuple"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1899:1: tuple returns [Tuple tuple] : LBRACKET ( sequencedArgument )? RBRACKET ;
    public Tuple tuple() throws RecognitionException {
        Tuple tuple = null;


        Token LBRACKET276=null;
        Token RBRACKET278=null;
        SequencedArgument sequencedArgument277 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1900:5: ( LBRACKET ( sequencedArgument )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1900:7: LBRACKET ( sequencedArgument )? RBRACKET
            {
            LBRACKET276=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_tuple12538); if (state.failed) return tuple;

            if ( state.backtracking==0 ) { tuple = new Tuple(LBRACKET276); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1902:7: ( sequencedArgument )?
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==ALIAS||(LA181_0 >= ASSERT && LA181_0 <= ASSIGN)||(LA181_0 >= BACKTICK && LA181_0 <= BREAK)||(LA181_0 >= CHAR_LITERAL && LA181_0 <= CLASS_DEFINITION)||LA181_0==COMPILER_ANNOTATION||LA181_0==CONTINUE||(LA181_0 >= DECREMENT_OP && LA181_0 <= DIFFERENCE_OP)||LA181_0==DYNAMIC||(LA181_0 >= FLOAT_LITERAL && LA181_0 <= FUNCTION_MODIFIER)||(LA181_0 >= IF_CLAUSE && LA181_0 <= INTERFACE_DEFINITION)||LA181_0==IN_OP||(LA181_0 >= LBRACE && LA181_0 <= LIDENTIFIER)||LA181_0==LPAREN||LA181_0==MODULE||(LA181_0 >= NATURAL_LITERAL && LA181_0 <= NEW)||(LA181_0 >= NOT_OP && LA181_0 <= OBJECT_DEFINITION)||(LA181_0 >= OUT && LA181_0 <= PACKAGE)||LA181_0==PRODUCT_OP||LA181_0==RETURN||(LA181_0 >= SEMICOLON && LA181_0 <= SMALLER_OP)||LA181_0==STRING_LITERAL||LA181_0==STRING_START||(LA181_0 >= SUM_OP && LA181_0 <= SWITCH_CLAUSE)||(LA181_0 >= THIS && LA181_0 <= UIDENTIFIER)||(LA181_0 >= VALUE_MODIFIER && LA181_0 <= WHILE_CLAUSE)) ) {
                alt181=1;
            }
            switch (alt181) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1903:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_tuple12565);
                    sequencedArgument277=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return tuple;

                    if ( state.backtracking==0 ) { tuple.setSequencedArgument(sequencedArgument277); }

                    }
                    break;

            }


            RBRACKET278=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_tuple12592); if (state.failed) return tuple;

            if ( state.backtracking==0 ) { tuple.setEndToken(RBRACKET278); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return tuple;
    }
    // $ANTLR end "tuple"



    // $ANTLR start "dynamicObject"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1910:1: dynamicObject returns [Dynamic dynamic] : DYNAMIC LBRACKET ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACKET ;
    public Dynamic dynamicObject() throws RecognitionException {
        Dynamic dynamic = null;


        Token DYNAMIC279=null;
        Token LBRACKET280=null;
        Token RBRACKET284=null;
        NamedArgument namedArgument281 =null;

        SpecifiedArgument anonymousArgument282 =null;

        SequencedArgument sequencedArgument283 =null;


         NamedArgumentList nal=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1912:5: ( DYNAMIC LBRACKET ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1912:7: DYNAMIC LBRACKET ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACKET
            {
            DYNAMIC279=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_dynamicObject12634); if (state.failed) return dynamic;

            LBRACKET280=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_dynamicObject12636); if (state.failed) return dynamic;

            if ( state.backtracking==0 ) { dynamic = new Dynamic(DYNAMIC279);
                    nal = new NamedArgumentList(LBRACKET280); 
                    dynamic.setNamedArgumentList(nal); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1916:7: ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )*
            loop182:
            do {
                int alt182=3;
                int LA182_0 = input.LA(1);

                if ( (LA182_0==COMPILER_ANNOTATION) ) {
                    int LA182_1 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt182=1;
                    }


                }
                else if ( (LA182_0==IF_CLAUSE) ) {
                    int LA182_3 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==FUNCTION_MODIFIER) ) {
                    int LA182_4 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt182=1;
                    }
                    else if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==VOID_MODIFIER) ) {
                    int LA182_5 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt182=1;
                    }
                    else if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==SMALLER_OP) ) {
                    int LA182_6 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt182=1;
                    }
                    else if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==LPAREN) ) {
                    int LA182_7 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==LET) ) {
                    int LA182_8 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==SWITCH_CLAUSE) ) {
                    int LA182_9 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==NOT_OP) ) {
                    int LA182_10 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==DIFFERENCE_OP) ) {
                    int LA182_11 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==SUM_OP) ) {
                    int LA182_12 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==DECREMENT_OP) ) {
                    int LA182_13 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==INCREMENT_OP) ) {
                    int LA182_14 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==NATURAL_LITERAL) ) {
                    int LA182_15 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==FLOAT_LITERAL) ) {
                    int LA182_16 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==CHAR_LITERAL) ) {
                    int LA182_17 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==STRING_LITERAL) ) {
                    int LA182_18 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==VERBATIM_STRING) ) {
                    int LA182_19 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==STRING_START) ) {
                    int LA182_20 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==BACKTICK) ) {
                    int LA182_21 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==LBRACE) ) {
                    int LA182_22 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt182=1;
                    }
                    else if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==LBRACKET) ) {
                    int LA182_23 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt182=1;
                    }
                    else if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==DYNAMIC) ) {
                    int LA182_24 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt182=1;
                    }
                    else if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==OBJECT_DEFINITION) ) {
                    int LA182_25 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt182=1;
                    }
                    else if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==LIDENTIFIER) ) {
                    int LA182_26 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt182=1;
                    }
                    else if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==UIDENTIFIER) ) {
                    int LA182_27 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt182=1;
                    }
                    else if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==THIS) ) {
                    int LA182_28 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==SUPER) ) {
                    int LA182_29 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==OUTER) ) {
                    int LA182_30 = input.LA(2);

                    if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==PACKAGE) ) {
                    int LA182_31 = input.LA(2);

                    if ( (synpred23_Ceylon()) ) {
                        alt182=1;
                    }
                    else if ( (synpred24_Ceylon()) ) {
                        alt182=2;
                    }


                }
                else if ( (LA182_0==VALUE_MODIFIER) && (synpred23_Ceylon())) {
                    alt182=1;
                }


                switch (alt182) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1918:9: ( namedArgumentStart )=> namedArgument
            	    {
            	    pushFollow(FOLLOW_namedArgument_in_dynamicObject12687);
            	    namedArgument281=namedArgument();

            	    state._fsp--;
            	    if (state.failed) return dynamic;

            	    if ( state.backtracking==0 ) { if (namedArgument281!=null) 
            	                  nal.addNamedArgument(namedArgument281); }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1922:9: ( anonymousArgument )=> anonymousArgument
            	    {
            	    pushFollow(FOLLOW_anonymousArgument_in_dynamicObject12721);
            	    anonymousArgument282=anonymousArgument();

            	    state._fsp--;
            	    if (state.failed) return dynamic;

            	    if ( state.backtracking==0 ) { if (anonymousArgument282!=null) 
            	                  nal.addNamedArgument(anonymousArgument282); }

            	    }
            	    break;

            	default :
            	    break loop182;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1927:7: ( sequencedArgument )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==ALIAS||(LA183_0 >= ASSERT && LA183_0 <= ASSIGN)||(LA183_0 >= BACKTICK && LA183_0 <= BREAK)||(LA183_0 >= CHAR_LITERAL && LA183_0 <= CLASS_DEFINITION)||LA183_0==COMPILER_ANNOTATION||LA183_0==CONTINUE||(LA183_0 >= DECREMENT_OP && LA183_0 <= DIFFERENCE_OP)||LA183_0==DYNAMIC||(LA183_0 >= FLOAT_LITERAL && LA183_0 <= FUNCTION_MODIFIER)||(LA183_0 >= IF_CLAUSE && LA183_0 <= INTERFACE_DEFINITION)||LA183_0==IN_OP||(LA183_0 >= LBRACE && LA183_0 <= LIDENTIFIER)||LA183_0==LPAREN||LA183_0==MODULE||(LA183_0 >= NATURAL_LITERAL && LA183_0 <= NEW)||(LA183_0 >= NOT_OP && LA183_0 <= OBJECT_DEFINITION)||(LA183_0 >= OUT && LA183_0 <= PACKAGE)||LA183_0==PRODUCT_OP||LA183_0==RETURN||(LA183_0 >= SEMICOLON && LA183_0 <= SMALLER_OP)||LA183_0==STRING_LITERAL||LA183_0==STRING_START||(LA183_0 >= SUM_OP && LA183_0 <= SWITCH_CLAUSE)||(LA183_0 >= THIS && LA183_0 <= UIDENTIFIER)||(LA183_0 >= VALUE_MODIFIER && LA183_0 <= WHILE_CLAUSE)) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1928:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_dynamicObject12759);
                    sequencedArgument283=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return dynamic;

                    if ( state.backtracking==0 ) { nal.setSequencedArgument(sequencedArgument283); }

                    }
                    break;

            }


            RBRACKET284=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_dynamicObject12786); if (state.failed) return dynamic;

            if ( state.backtracking==0 ) { nal.setEndToken(RBRACKET284); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return dynamic;
    }
    // $ANTLR end "dynamicObject"



    // $ANTLR start "valueCaseList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1935:1: valueCaseList returns [ExpressionList expressionList] :ie1= intersectionExpression ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )* ;
    public ExpressionList valueCaseList() throws RecognitionException {
        ExpressionList expressionList = null;


        Token c=null;
        Token u=null;
        Term ie1 =null;

        Term ie2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1936:5: (ie1= intersectionExpression ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1936:7: ie1= intersectionExpression ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )*
            {
            if ( state.backtracking==0 ) { expressionList = new ExpressionList(null); }

            pushFollow(FOLLOW_intersectionExpression_in_valueCaseList12829);
            ie1=intersectionExpression();

            state._fsp--;
            if (state.failed) return expressionList;

            if ( state.backtracking==0 ) { Expression e = new Expression(null);
                    e.setTerm(ie1);
                    expressionList.addExpression(e); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1941:7: ( (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |) )*
            loop186:
            do {
                int alt186=2;
                int LA186_0 = input.LA(1);

                if ( (LA186_0==COMMA||LA186_0==UNION_OP) ) {
                    alt186=1;
                }


                switch (alt186) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1942:9: (c= COMMA |u= UNION_OP ) (ie2= intersectionExpression |)
            	    {
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1942:9: (c= COMMA |u= UNION_OP )
            	    int alt184=2;
            	    int LA184_0 = input.LA(1);

            	    if ( (LA184_0==COMMA) ) {
            	        alt184=1;
            	    }
            	    else if ( (LA184_0==UNION_OP) ) {
            	        alt184=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return expressionList;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 184, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt184) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1943:11: c= COMMA
            	            {
            	            c=(Token)match(input,COMMA,FOLLOW_COMMA_in_valueCaseList12871); if (state.failed) return expressionList;

            	            if ( state.backtracking==0 ) { expressionList.setEndToken(c);
            	                        if (expressionList.getErrors().isEmpty())
            	                            expressionList.addUsageWarning(Warning.syntaxDeprecation,
            	                                "use of ',' in case conditions is deprecated (change to '|')"); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1948:11: u= UNION_OP
            	            {
            	            u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_valueCaseList12898); if (state.failed) return expressionList;

            	            if ( state.backtracking==0 ) { expressionList.setEndToken(u); }

            	            }
            	            break;

            	    }


            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1951:9: (ie2= intersectionExpression |)
            	    int alt185=2;
            	    int LA185_0 = input.LA(1);

            	    if ( (LA185_0==BACKTICK||LA185_0==CHAR_LITERAL||(LA185_0 >= DECREMENT_OP && LA185_0 <= DIFFERENCE_OP)||LA185_0==DYNAMIC||LA185_0==FLOAT_LITERAL||LA185_0==INCREMENT_OP||(LA185_0 >= LBRACE && LA185_0 <= LBRACKET)||LA185_0==LIDENTIFIER||LA185_0==LPAREN||LA185_0==NATURAL_LITERAL||LA185_0==OBJECT_DEFINITION||(LA185_0 >= OUTER && LA185_0 <= PACKAGE)||LA185_0==STRING_LITERAL||LA185_0==STRING_START||(LA185_0 >= SUM_OP && LA185_0 <= SUPER)||LA185_0==THIS||LA185_0==UIDENTIFIER||LA185_0==VERBATIM_STRING) ) {
            	        alt185=1;
            	    }
            	    else if ( (LA185_0==COMMA||LA185_0==RPAREN||LA185_0==UNION_OP) ) {
            	        alt185=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return expressionList;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 185, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt185) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1952:11: ie2= intersectionExpression
            	            {
            	            pushFollow(FOLLOW_intersectionExpression_in_valueCaseList12944);
            	            ie2=intersectionExpression();

            	            state._fsp--;
            	            if (state.failed) return expressionList;

            	            if ( state.backtracking==0 ) { if (ie2!=null) {
            	                            Expression e = new Expression(null);
            	                            e.setTerm(ie2);
            	                            expressionList.addExpression(e);
            	                            expressionList.setEndToken(null); } }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1958:11: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                          new MismatchedTokenException(LIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop186;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expressionList;
    }
    // $ANTLR end "valueCaseList"


    public static class memberReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "memberReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1964:1: memberReference returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : memberName ( ( typeArgumentsStart )=> typeArguments )? ;
    public PsiCompatibleCeylonParser.memberReference_return memberReference() throws RecognitionException {
        PsiCompatibleCeylonParser.memberReference_return retval = new PsiCompatibleCeylonParser.memberReference_return();
        retval.start = input.LT(1);


        Identifier memberName285 =null;

        TypeArgumentList typeArguments286 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1966:5: ( memberName ( ( typeArgumentsStart )=> typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1966:7: memberName ( ( typeArgumentsStart )=> typeArguments )?
            {
            pushFollow(FOLLOW_memberName_in_memberReference13009);
            memberName285=memberName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier = memberName285; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1968:7: ( ( typeArgumentsStart )=> typeArguments )?
            int alt187=2;
            alt187 = dfa187.predict(input);
            switch (alt187) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1969:9: ( typeArgumentsStart )=> typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_memberReference13049);
                    typeArguments286=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments286; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "memberReference"


    public static class typeReference_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "typeReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1975:1: typeReference returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : typeName ( ( typeArgumentsStart )=> typeArguments )? ;
    public PsiCompatibleCeylonParser.typeReference_return typeReference() throws RecognitionException {
        PsiCompatibleCeylonParser.typeReference_return retval = new PsiCompatibleCeylonParser.typeReference_return();
        retval.start = input.LT(1);


        Identifier typeName287 =null;

        TypeArgumentList typeArguments288 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1977:5: ( typeName ( ( typeArgumentsStart )=> typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1977:7: typeName ( ( typeArgumentsStart )=> typeArguments )?
            {
            pushFollow(FOLLOW_typeName_in_typeReference13089);
            typeName287=typeName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier = typeName287; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1979:7: ( ( typeArgumentsStart )=> typeArguments )?
            int alt188=2;
            alt188 = dfa188.predict(input);
            switch (alt188) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1980:9: ( typeArgumentsStart )=> typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_typeReference13130);
                    typeArguments288=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments288; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "typeReference"



    // $ANTLR start "typeArgumentsStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1989:1: typeArgumentsStart : SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP ) ;
    public void typeArgumentsStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1990:5: ( SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1990:7: SMALLER_OP ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP )
            {
            match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArgumentsStart13169); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1991:5: ( type ( LARGER_OP | SMALLER_OP | COMMA ) | SMALLER_OP | LARGER_OP )
            int alt189=3;
            switch ( input.LA(1) ) {
            case SMALLER_OP:
                {
                int LA189_1 = input.LA(2);

                if ( (LA189_1==COMPILER_ANNOTATION||LA189_1==IN_OP||(LA189_1 >= LBRACE && LA189_1 <= LBRACKET)||LA189_1==LIDENTIFIER||LA189_1==OUT||LA189_1==PACKAGE||LA189_1==SMALLER_OP||LA189_1==UIDENTIFIER) ) {
                    alt189=1;
                }
                else if ( (LA189_1==EOF) ) {
                    alt189=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 189, 1, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
            case LBRACKET:
            case PACKAGE:
            case UIDENTIFIER:
                {
                alt189=1;
                }
                break;
            case LARGER_OP:
                {
                alt189=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 189, 0, input);

                throw nvae;

            }

            switch (alt189) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1992:7: type ( LARGER_OP | SMALLER_OP | COMMA )
                    {
                    pushFollow(FOLLOW_type_in_typeArgumentsStart13183);
                    type();

                    state._fsp--;
                    if (state.failed) return ;

                    if ( input.LA(1)==COMMA||input.LA(1)==LARGER_OP||input.LA(1)==SMALLER_OP ) {
                        input.consume();
                        state.errorRecovery=false;
                        state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1995:7: SMALLER_OP
                    {
                    match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArgumentsStart13211); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1997:7: LARGER_OP
                    {
                    match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeArgumentsStart13226); if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "typeArgumentsStart"



    // $ANTLR start "indexOrIndexRange"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2001:1: indexOrIndexRange returns [IndexExpression indexExpression] : LBRACKET (e1= ELLIPSIS i= index | ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? |fe= functionOrExpression ) RBRACKET ;
    public IndexExpression indexOrIndexRange() throws RecognitionException {
        IndexExpression indexExpression = null;


        Token e1=null;
        Token e2=null;
        Token LBRACKET289=null;
        Token RANGE_OP290=null;
        Token SEGMENT_OP291=null;
        Token RBRACKET292=null;
        Expression i =null;

        Expression l =null;

        Expression u =null;

        Expression s =null;

        Expression fe =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2006:5: ( LBRACKET (e1= ELLIPSIS i= index | ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? |fe= functionOrExpression ) RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2006:7: LBRACKET (e1= ELLIPSIS i= index | ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? |fe= functionOrExpression ) RBRACKET
            {
            LBRACKET289=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_indexOrIndexRange13274); if (state.failed) return indexExpression;

            if ( state.backtracking==0 ) { indexExpression = new IndexExpression(LBRACKET289); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2008:7: (e1= ELLIPSIS i= index | ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )? |fe= functionOrExpression )
            int alt191=3;
            switch ( input.LA(1) ) {
            case ELLIPSIS:
                {
                alt191=1;
                }
                break;
            case DIFFERENCE_OP:
                {
                int LA191_2 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 2, input);

                    throw nvae;

                }
                }
                break;
            case SUM_OP:
                {
                int LA191_3 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 3, input);

                    throw nvae;

                }
                }
                break;
            case DECREMENT_OP:
                {
                int LA191_4 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 4, input);

                    throw nvae;

                }
                }
                break;
            case INCREMENT_OP:
                {
                int LA191_5 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 5, input);

                    throw nvae;

                }
                }
                break;
            case NATURAL_LITERAL:
                {
                int LA191_6 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 6, input);

                    throw nvae;

                }
                }
                break;
            case FLOAT_LITERAL:
                {
                int LA191_7 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 7, input);

                    throw nvae;

                }
                }
                break;
            case CHAR_LITERAL:
                {
                int LA191_8 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 8, input);

                    throw nvae;

                }
                }
                break;
            case STRING_LITERAL:
                {
                int LA191_9 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 9, input);

                    throw nvae;

                }
                }
                break;
            case VERBATIM_STRING:
                {
                int LA191_10 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 10, input);

                    throw nvae;

                }
                }
                break;
            case STRING_START:
                {
                int LA191_11 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 11, input);

                    throw nvae;

                }
                }
                break;
            case BACKTICK:
                {
                int LA191_12 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 12, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA191_13 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 13, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA191_14 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 14, input);

                    throw nvae;

                }
                }
                break;
            case DYNAMIC:
                {
                int LA191_15 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 15, input);

                    throw nvae;

                }
                }
                break;
            case OBJECT_DEFINITION:
                {
                int LA191_16 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 16, input);

                    throw nvae;

                }
                }
                break;
            case LPAREN:
                {
                int LA191_17 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 17, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA191_18 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 18, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA191_19 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 19, input);

                    throw nvae;

                }
                }
                break;
            case THIS:
                {
                int LA191_20 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 20, input);

                    throw nvae;

                }
                }
                break;
            case SUPER:
                {
                int LA191_21 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 21, input);

                    throw nvae;

                }
                }
                break;
            case OUTER:
                {
                int LA191_22 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 22, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA191_23 = input.LA(2);

                if ( (synpred27_Ceylon()) ) {
                    alt191=2;
                }
                else if ( (true) ) {
                    alt191=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return indexExpression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 191, 23, input);

                    throw nvae;

                }
                }
                break;
            case FUNCTION_MODIFIER:
            case IF_CLAUSE:
            case LET:
            case NOT_OP:
            case SMALLER_OP:
            case SWITCH_CLAUSE:
            case VOID_MODIFIER:
                {
                alt191=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return indexExpression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 191, 0, input);

                throw nvae;

            }

            switch (alt191) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2009:9: e1= ELLIPSIS i= index
                    {
                    e1=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_indexOrIndexRange13302); if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { indexExpression.setEndToken(e1); }

                    pushFollow(FOLLOW_index_in_indexOrIndexRange13324);
                    i=index();

                    state._fsp--;
                    if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { ElementRange er0 = new ElementRange(null);
                              er0.setUpperBound(i);
                              indexExpression.setElementOrRange(er0); 
                              indexExpression.setEndToken(null); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2016:9: ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )=>l= index (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )?
                    {
                    pushFollow(FOLLOW_index_in_indexOrIndexRange13367);
                    l=index();

                    state._fsp--;
                    if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { Element e = new Element(null);
                              e.setExpression(l); 
                              indexExpression.setElementOrRange(e); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2021:9: (e2= ELLIPSIS | RANGE_OP u= index | SEGMENT_OP s= index )?
                    int alt190=4;
                    switch ( input.LA(1) ) {
                        case ELLIPSIS:
                            {
                            alt190=1;
                            }
                            break;
                        case RANGE_OP:
                            {
                            alt190=2;
                            }
                            break;
                        case SEGMENT_OP:
                            {
                            alt190=3;
                            }
                            break;
                    }

                    switch (alt190) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2022:11: e2= ELLIPSIS
                            {
                            e2=(Token)match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_indexOrIndexRange13401); if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { indexExpression.setEndToken(e2);
                                        ElementRange er1 = new ElementRange(null);
                                        er1.setLowerBound(l);
                                        indexExpression.setElementOrRange(er1); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2028:11: RANGE_OP u= index
                            {
                            RANGE_OP290=(Token)match(input,RANGE_OP,FOLLOW_RANGE_OP_in_indexOrIndexRange13436); if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { indexExpression.setEndToken(RANGE_OP290); }

                            pushFollow(FOLLOW_index_in_indexOrIndexRange13463);
                            u=index();

                            state._fsp--;
                            if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { ElementRange er2 = new ElementRange(null);
                                        er2.setLowerBound(l); 
                                        er2.setUpperBound(u); 
                                        indexExpression.setElementOrRange(er2);
                                        indexExpression.setEndToken(null); }

                            }
                            break;
                        case 3 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2036:11: SEGMENT_OP s= index
                            {
                            SEGMENT_OP291=(Token)match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_indexOrIndexRange13488); if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { indexExpression.setEndToken(SEGMENT_OP291); }

                            pushFollow(FOLLOW_index_in_indexOrIndexRange13514);
                            s=index();

                            state._fsp--;
                            if (state.failed) return indexExpression;

                            if ( state.backtracking==0 ) { ElementRange er3 = new ElementRange(null);
                                        er3.setLowerBound(l); 
                                        er3.setLength(s); 
                                        indexExpression.setElementOrRange(er3);
                                        indexExpression.setEndToken(null); }

                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2045:9: fe= functionOrExpression
                    {
                    pushFollow(FOLLOW_functionOrExpression_in_indexOrIndexRange13550);
                    fe=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return indexExpression;

                    if ( state.backtracking==0 ) { Element e = new Element(null);
                              e.setExpression(fe); 
                              indexExpression.setElementOrRange(e); }

                    }
                    break;

            }


            RBRACKET292=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_indexOrIndexRange13576); if (state.failed) return indexExpression;

            if ( state.backtracking==0 ) { indexExpression.setEndToken(RBRACKET292); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return indexExpression;
    }
    // $ANTLR end "indexOrIndexRange"



    // $ANTLR start "index"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2054:1: index returns [Expression expression] : additiveExpression ;
    public Expression index() throws RecognitionException {
        Expression expression = null;


        Term additiveExpression293 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2055:5: ( additiveExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2055:7: additiveExpression
            {
            pushFollow(FOLLOW_additiveExpression_in_index13605);
            additiveExpression293=additiveExpression();

            state._fsp--;
            if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression = new Expression(null);
                    expression.setTerm(additiveExpression293); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "index"



    // $ANTLR start "namedArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2060:1: namedArguments returns [NamedArgumentList namedArgumentList] : LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE ;
    public NamedArgumentList namedArguments() throws RecognitionException {
        NamedArgumentList namedArgumentList = null;


        Token LBRACE294=null;
        Token RBRACE298=null;
        NamedArgument namedArgument295 =null;

        SpecifiedArgument anonymousArgument296 =null;

        SequencedArgument sequencedArgument297 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2061:5: ( LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2061:7: LBRACE ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )* ( sequencedArgument )? RBRACE
            {
            LBRACE294=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_namedArguments13635); if (state.failed) return namedArgumentList;

            if ( state.backtracking==0 ) { namedArgumentList = new NamedArgumentList(LBRACE294); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2063:7: ( ( namedArgumentStart )=> namedArgument | ( anonymousArgument )=> anonymousArgument )*
            loop192:
            do {
                int alt192=3;
                int LA192_0 = input.LA(1);

                if ( (LA192_0==COMPILER_ANNOTATION) ) {
                    int LA192_1 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt192=1;
                    }


                }
                else if ( (LA192_0==IF_CLAUSE) ) {
                    int LA192_3 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==FUNCTION_MODIFIER) ) {
                    int LA192_4 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt192=1;
                    }
                    else if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==VOID_MODIFIER) ) {
                    int LA192_5 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt192=1;
                    }
                    else if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==SMALLER_OP) ) {
                    int LA192_6 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt192=1;
                    }
                    else if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==LPAREN) ) {
                    int LA192_7 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==LET) ) {
                    int LA192_8 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==SWITCH_CLAUSE) ) {
                    int LA192_9 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==NOT_OP) ) {
                    int LA192_10 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==DIFFERENCE_OP) ) {
                    int LA192_11 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==SUM_OP) ) {
                    int LA192_12 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==DECREMENT_OP) ) {
                    int LA192_13 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==INCREMENT_OP) ) {
                    int LA192_14 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==NATURAL_LITERAL) ) {
                    int LA192_15 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==FLOAT_LITERAL) ) {
                    int LA192_16 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==CHAR_LITERAL) ) {
                    int LA192_17 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==STRING_LITERAL) ) {
                    int LA192_18 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==VERBATIM_STRING) ) {
                    int LA192_19 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==STRING_START) ) {
                    int LA192_20 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==BACKTICK) ) {
                    int LA192_21 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==LBRACE) ) {
                    int LA192_22 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt192=1;
                    }
                    else if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==LBRACKET) ) {
                    int LA192_23 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt192=1;
                    }
                    else if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==DYNAMIC) ) {
                    int LA192_24 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt192=1;
                    }
                    else if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==OBJECT_DEFINITION) ) {
                    int LA192_25 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt192=1;
                    }
                    else if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==LIDENTIFIER) ) {
                    int LA192_26 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt192=1;
                    }
                    else if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==UIDENTIFIER) ) {
                    int LA192_27 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt192=1;
                    }
                    else if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==THIS) ) {
                    int LA192_28 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==SUPER) ) {
                    int LA192_29 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==OUTER) ) {
                    int LA192_30 = input.LA(2);

                    if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==PACKAGE) ) {
                    int LA192_31 = input.LA(2);

                    if ( (synpred28_Ceylon()) ) {
                        alt192=1;
                    }
                    else if ( (synpred29_Ceylon()) ) {
                        alt192=2;
                    }


                }
                else if ( (LA192_0==VALUE_MODIFIER) && (synpred28_Ceylon())) {
                    alt192=1;
                }


                switch (alt192) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2065:9: ( namedArgumentStart )=> namedArgument
            	    {
            	    pushFollow(FOLLOW_namedArgument_in_namedArguments13687);
            	    namedArgument295=namedArgument();

            	    state._fsp--;
            	    if (state.failed) return namedArgumentList;

            	    if ( state.backtracking==0 ) { if (namedArgument295!=null) 
            	                  namedArgumentList.addNamedArgument(namedArgument295); }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2069:9: ( anonymousArgument )=> anonymousArgument
            	    {
            	    pushFollow(FOLLOW_anonymousArgument_in_namedArguments13721);
            	    anonymousArgument296=anonymousArgument();

            	    state._fsp--;
            	    if (state.failed) return namedArgumentList;

            	    if ( state.backtracking==0 ) { if (anonymousArgument296!=null) 
            	                  namedArgumentList.addNamedArgument(anonymousArgument296); }

            	    }
            	    break;

            	default :
            	    break loop192;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2074:7: ( sequencedArgument )?
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( (LA193_0==ALIAS||(LA193_0 >= ASSERT && LA193_0 <= ASSIGN)||(LA193_0 >= BACKTICK && LA193_0 <= BREAK)||(LA193_0 >= CHAR_LITERAL && LA193_0 <= CLASS_DEFINITION)||LA193_0==COMPILER_ANNOTATION||LA193_0==CONTINUE||(LA193_0 >= DECREMENT_OP && LA193_0 <= DIFFERENCE_OP)||LA193_0==DYNAMIC||(LA193_0 >= FLOAT_LITERAL && LA193_0 <= FUNCTION_MODIFIER)||(LA193_0 >= IF_CLAUSE && LA193_0 <= INTERFACE_DEFINITION)||LA193_0==IN_OP||(LA193_0 >= LBRACE && LA193_0 <= LIDENTIFIER)||LA193_0==LPAREN||LA193_0==MODULE||(LA193_0 >= NATURAL_LITERAL && LA193_0 <= NEW)||(LA193_0 >= NOT_OP && LA193_0 <= OBJECT_DEFINITION)||(LA193_0 >= OUT && LA193_0 <= PACKAGE)||LA193_0==PRODUCT_OP||LA193_0==RETURN||(LA193_0 >= SEMICOLON && LA193_0 <= SMALLER_OP)||LA193_0==STRING_LITERAL||LA193_0==STRING_START||(LA193_0 >= SUM_OP && LA193_0 <= SWITCH_CLAUSE)||(LA193_0 >= THIS && LA193_0 <= UIDENTIFIER)||(LA193_0 >= VALUE_MODIFIER && LA193_0 <= WHILE_CLAUSE)) ) {
                alt193=1;
            }
            switch (alt193) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2075:9: sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_namedArguments13759);
                    sequencedArgument297=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return namedArgumentList;

                    if ( state.backtracking==0 ) { namedArgumentList.setSequencedArgument(sequencedArgument297); }

                    }
                    break;

            }


            RBRACE298=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_namedArguments13786); if (state.failed) return namedArgumentList;

            if ( state.backtracking==0 ) { namedArgumentList.setEndToken(RBRACE298); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return namedArgumentList;
    }
    // $ANTLR end "namedArguments"



    // $ANTLR start "sequencedArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2082:1: sequencedArgument returns [SequencedArgument sequencedArgument] : compilerAnnotations ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension |pa1= positionalArgument |sa1= spreadArgument ) (c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |) )* ;
    public SequencedArgument sequencedArgument() throws RecognitionException {
        SequencedArgument sequencedArgument = null;


        Token c=null;
        Comprehension c1 =null;

        ListedArgument pa1 =null;

        SpreadArgument sa1 =null;

        Comprehension c2 =null;

        ListedArgument pa2 =null;

        SpreadArgument sa2 =null;

        List<CompilerAnnotation> compilerAnnotations299 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2083:5: ( compilerAnnotations ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension |pa1= positionalArgument |sa1= spreadArgument ) (c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |) )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2083:7: compilerAnnotations ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension |pa1= positionalArgument |sa1= spreadArgument ) (c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |) )*
            {
            pushFollow(FOLLOW_compilerAnnotations_in_sequencedArgument13815);
            compilerAnnotations299=compilerAnnotations();

            state._fsp--;
            if (state.failed) return sequencedArgument;

            if ( state.backtracking==0 ) { sequencedArgument = new SequencedArgument(null);
                    sequencedArgument.getCompilerAnnotations().addAll(compilerAnnotations299); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2086:9: ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension |pa1= positionalArgument |sa1= spreadArgument )
            int alt194=3;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==FOR_CLAUSE) && (synpred30_Ceylon())) {
                alt194=1;
            }
            else if ( (LA194_0==IF_CLAUSE) ) {
                int LA194_2 = input.LA(2);

                if ( (synpred30_Ceylon()) ) {
                    alt194=1;
                }
                else if ( (true) ) {
                    alt194=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 194, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA194_0==BACKTICK||LA194_0==CHAR_LITERAL||(LA194_0 >= DECREMENT_OP && LA194_0 <= DIFFERENCE_OP)||LA194_0==DYNAMIC||LA194_0==FLOAT_LITERAL||LA194_0==FUNCTION_MODIFIER||LA194_0==INCREMENT_OP||(LA194_0 >= LBRACE && LA194_0 <= LIDENTIFIER)||LA194_0==LPAREN||LA194_0==NATURAL_LITERAL||(LA194_0 >= NOT_OP && LA194_0 <= OBJECT_DEFINITION)||(LA194_0 >= OUTER && LA194_0 <= PACKAGE)||LA194_0==SMALLER_OP||LA194_0==STRING_LITERAL||LA194_0==STRING_START||(LA194_0 >= SUM_OP && LA194_0 <= SWITCH_CLAUSE)||LA194_0==THIS||LA194_0==UIDENTIFIER||(LA194_0 >= VERBATIM_STRING && LA194_0 <= VOID_MODIFIER)) ) {
                alt194=2;
            }
            else if ( (LA194_0==PRODUCT_OP) ) {
                alt194=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
                NoViableAltException nvae =
                    new NoViableAltException("", 194, 0, input);

                throw nvae;

            }
            switch (alt194) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2087:11: ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c1= comprehension
                    {
                    pushFollow(FOLLOW_comprehension_in_sequencedArgument13871);
                    c1=comprehension();

                    state._fsp--;
                    if (state.failed) return sequencedArgument;

                    if ( state.backtracking==0 ) { if (c1!=null)
                                    sequencedArgument.addPositionalArgument(c1); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2092:11: pa1= positionalArgument
                    {
                    pushFollow(FOLLOW_positionalArgument_in_sequencedArgument13908);
                    pa1=positionalArgument();

                    state._fsp--;
                    if (state.failed) return sequencedArgument;

                    if ( state.backtracking==0 ) { if (pa1!=null)
                                    sequencedArgument.addPositionalArgument(pa1); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2096:11: sa1= spreadArgument
                    {
                    pushFollow(FOLLOW_spreadArgument_in_sequencedArgument13944);
                    sa1=spreadArgument();

                    state._fsp--;
                    if (state.failed) return sequencedArgument;

                    if ( state.backtracking==0 ) { if (sa1!=null)
                                    sequencedArgument.addPositionalArgument(sa1); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2100:9: (c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |) )*
            loop196:
            do {
                int alt196=2;
                int LA196_0 = input.LA(1);

                if ( (LA196_0==COMMA) ) {
                    alt196=1;
                }


                switch (alt196) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2101:11: c= COMMA ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |)
            	    {
            	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_sequencedArgument13990); if (state.failed) return sequencedArgument;

            	    if ( state.backtracking==0 ) { sequencedArgument.setEndToken(c); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2103:11: ( ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension |pa2= positionalArgument |sa2= spreadArgument |)
            	    int alt195=4;
            	    int LA195_0 = input.LA(1);

            	    if ( (LA195_0==FOR_CLAUSE) && (synpred31_Ceylon())) {
            	        alt195=1;
            	    }
            	    else if ( (LA195_0==IF_CLAUSE) ) {
            	        int LA195_2 = input.LA(2);

            	        if ( (synpred31_Ceylon()) ) {
            	            alt195=1;
            	        }
            	        else if ( (true) ) {
            	            alt195=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 195, 2, input);

            	            throw nvae;

            	        }
            	    }
            	    else if ( (LA195_0==BACKTICK||LA195_0==CHAR_LITERAL||(LA195_0 >= DECREMENT_OP && LA195_0 <= DIFFERENCE_OP)||LA195_0==DYNAMIC||LA195_0==FLOAT_LITERAL||LA195_0==FUNCTION_MODIFIER||LA195_0==INCREMENT_OP||(LA195_0 >= LBRACE && LA195_0 <= LIDENTIFIER)||LA195_0==LPAREN||LA195_0==NATURAL_LITERAL||(LA195_0 >= NOT_OP && LA195_0 <= OBJECT_DEFINITION)||(LA195_0 >= OUTER && LA195_0 <= PACKAGE)||LA195_0==SMALLER_OP||LA195_0==STRING_LITERAL||LA195_0==STRING_START||(LA195_0 >= SUM_OP && LA195_0 <= SWITCH_CLAUSE)||LA195_0==THIS||LA195_0==UIDENTIFIER||(LA195_0 >= VERBATIM_STRING && LA195_0 <= VOID_MODIFIER)) ) {
            	        alt195=2;
            	    }
            	    else if ( (LA195_0==PRODUCT_OP) ) {
            	        alt195=3;
            	    }
            	    else if ( (LA195_0==COMMA||(LA195_0 >= RBRACE && LA195_0 <= RBRACKET)||LA195_0==RPAREN) ) {
            	        alt195=4;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return sequencedArgument;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 195, 0, input);

            	        throw nvae;

            	    }
            	    switch (alt195) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2104:13: ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )=>c2= comprehension
            	            {
            	            pushFollow(FOLLOW_comprehension_in_sequencedArgument14056);
            	            c2=comprehension();

            	            state._fsp--;
            	            if (state.failed) return sequencedArgument;

            	            if ( state.backtracking==0 ) { if (c2!=null) {
            	                              sequencedArgument.addPositionalArgument(c2);
            	                              sequencedArgument.setEndToken(null); } }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2110:13: pa2= positionalArgument
            	            {
            	            pushFollow(FOLLOW_positionalArgument_in_sequencedArgument14099);
            	            pa2=positionalArgument();

            	            state._fsp--;
            	            if (state.failed) return sequencedArgument;

            	            if ( state.backtracking==0 ) { if (pa2!=null) {
            	                              sequencedArgument.addPositionalArgument(pa2); 
            	                              sequencedArgument.setEndToken(null); } }

            	            }
            	            break;
            	        case 3 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2115:13: sa2= spreadArgument
            	            {
            	            pushFollow(FOLLOW_spreadArgument_in_sequencedArgument14142);
            	            sa2=spreadArgument();

            	            state._fsp--;
            	            if (state.failed) return sequencedArgument;

            	            if ( state.backtracking==0 ) { if (sa2!=null) {
            	                              sequencedArgument.addPositionalArgument(sa2); 
            	                              sequencedArgument.setEndToken(null); } }

            	            }
            	            break;
            	        case 4 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2120:13: 
            	            {
            	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
            	                            new MismatchedTokenException(LIDENTIFIER, input)); }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop196;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return sequencedArgument;
    }
    // $ANTLR end "sequencedArgument"



    // $ANTLR start "namedArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2126:1: namedArgument returns [NamedArgument namedArgument] : compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration ) ;
    public NamedArgument namedArgument() throws RecognitionException {
        NamedArgument namedArgument = null;


        SpecifiedArgument namedSpecifiedArgument300 =null;

        NamedArgument namedArgumentDeclaration301 =null;

        List<CompilerAnnotation> compilerAnnotations302 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2127:5: ( compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2127:7: compilerAnnotations ( namedSpecifiedArgument | namedArgumentDeclaration )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_namedArgument14227);
            compilerAnnotations302=compilerAnnotations();

            state._fsp--;
            if (state.failed) return namedArgument;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2128:5: ( namedSpecifiedArgument | namedArgumentDeclaration )
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==LIDENTIFIER) ) {
                int LA197_1 = input.LA(2);

                if ( (LA197_1==SEMICOLON||LA197_1==SPECIFY) ) {
                    alt197=1;
                }
                else if ( (LA197_1==COMPUTE||LA197_1==LPAREN) ) {
                    alt197=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return namedArgument;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 197, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA197_0==DYNAMIC||LA197_0==FUNCTION_MODIFIER||(LA197_0 >= LBRACE && LA197_0 <= LBRACKET)||LA197_0==OBJECT_DEFINITION||LA197_0==PACKAGE||LA197_0==SMALLER_OP||LA197_0==UIDENTIFIER||LA197_0==VALUE_MODIFIER||LA197_0==VOID_MODIFIER) ) {
                alt197=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return namedArgument;}
                NoViableAltException nvae =
                    new NoViableAltException("", 197, 0, input);

                throw nvae;

            }
            switch (alt197) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2129:7: namedSpecifiedArgument
                    {
                    pushFollow(FOLLOW_namedSpecifiedArgument_in_namedArgument14244);
                    namedSpecifiedArgument300=namedSpecifiedArgument();

                    state._fsp--;
                    if (state.failed) return namedArgument;

                    if ( state.backtracking==0 ) { namedArgument = namedSpecifiedArgument300; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2132:7: namedArgumentDeclaration
                    {
                    pushFollow(FOLLOW_namedArgumentDeclaration_in_namedArgument14266);
                    namedArgumentDeclaration301=namedArgumentDeclaration();

                    state._fsp--;
                    if (state.failed) return namedArgument;

                    if ( state.backtracking==0 ) { namedArgument = namedArgumentDeclaration301; }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { if (namedArgument!=null)
                      namedArgument.getCompilerAnnotations().addAll(compilerAnnotations302); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return namedArgument;
    }
    // $ANTLR end "namedArgument"



    // $ANTLR start "namedSpecifiedArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2139:1: namedSpecifiedArgument returns [SpecifiedArgument specifiedArgument] : memberName ( specifier )? SEMICOLON ;
    public SpecifiedArgument namedSpecifiedArgument() throws RecognitionException {
        SpecifiedArgument specifiedArgument = null;


        Token SEMICOLON305=null;
        Identifier memberName303 =null;

        SpecifierExpression specifier304 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2140:5: ( memberName ( specifier )? SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2140:7: memberName ( specifier )? SEMICOLON
            {
            pushFollow(FOLLOW_memberName_in_namedSpecifiedArgument14307);
            memberName303=memberName();

            state._fsp--;
            if (state.failed) return specifiedArgument;

            if ( state.backtracking==0 ) { specifiedArgument = new SpecifiedArgument(null); 
                    specifiedArgument.setIdentifier(memberName303); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2143:7: ( specifier )?
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==SPECIFY) ) {
                alt198=1;
            }
            switch (alt198) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2144:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_namedSpecifiedArgument14333);
                    specifier304=specifier();

                    state._fsp--;
                    if (state.failed) return specifiedArgument;

                    if ( state.backtracking==0 ) { specifiedArgument.setSpecifierExpression(specifier304); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON305=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_namedSpecifiedArgument14369); if (state.failed) return specifiedArgument;

            if ( state.backtracking==0 ) { specifiedArgument.setEndToken(SEMICOLON305); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifiedArgument;
    }
    // $ANTLR end "namedSpecifiedArgument"



    // $ANTLR start "anonymousArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2152:1: anonymousArgument returns [SpecifiedArgument namedArgument] : functionOrExpression SEMICOLON ;
    public SpecifiedArgument anonymousArgument() throws RecognitionException {
        SpecifiedArgument namedArgument = null;


        Token SEMICOLON307=null;
        Expression functionOrExpression306 =null;


         namedArgument = new SpecifiedArgument(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2154:5: ( functionOrExpression SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2154:7: functionOrExpression SEMICOLON
            {
            pushFollow(FOLLOW_functionOrExpression_in_anonymousArgument14407);
            functionOrExpression306=functionOrExpression();

            state._fsp--;
            if (state.failed) return namedArgument;

            if ( state.backtracking==0 ) { SpecifierExpression se = new SpecifierExpression(null);
                   se.setExpression(functionOrExpression306);
                   namedArgument.setSpecifierExpression(se); }

            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON307=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_anonymousArgument14433); if (state.failed) return namedArgument;

            if ( state.backtracking==0 ) { namedArgument.setEndToken(SEMICOLON307); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return namedArgument;
    }
    // $ANTLR end "anonymousArgument"



    // $ANTLR start "objectArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2163:1: objectArgument returns [ObjectArgument declaration] : OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) ;
    public ObjectArgument objectArgument() throws RecognitionException {
        ObjectArgument declaration = null;


        Token OBJECT_DEFINITION308=null;
        Token SEMICOLON313=null;
        Identifier memberNameDeclaration309 =null;

        ExtendedType extendedType310 =null;

        SatisfiedTypes satisfiedTypes311 =null;

        ClassBody classBody312 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2164:5: ( OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2164:7: OBJECT_DEFINITION ( memberNameDeclaration )? ( extendedType )? ( satisfiedTypes )? ( classBody | SEMICOLON )
            {
            OBJECT_DEFINITION308=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_objectArgument14462); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration = new ObjectArgument(OBJECT_DEFINITION308); 
                    declaration.setType(new ValueModifier(null)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2167:7: ( memberNameDeclaration )?
            int alt199=2;
            int LA199_0 = input.LA(1);

            if ( (LA199_0==LIDENTIFIER||LA199_0==UIDENTIFIER) ) {
                alt199=1;
            }
            switch (alt199) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2168:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_objectArgument14489);
                    memberNameDeclaration309=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration309); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2171:7: ( extendedType )?
            int alt200=2;
            int LA200_0 = input.LA(1);

            if ( (LA200_0==EXTENDS) ) {
                alt200=1;
            }
            switch (alt200) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2172:9: extendedType
                    {
                    pushFollow(FOLLOW_extendedType_in_objectArgument14527);
                    extendedType310=extendedType();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setExtendedType(extendedType310); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2175:7: ( satisfiedTypes )?
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==SATISFIES) ) {
                alt201=1;
            }
            switch (alt201) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2176:9: satisfiedTypes
                    {
                    pushFollow(FOLLOW_satisfiedTypes_in_objectArgument14566);
                    satisfiedTypes311=satisfiedTypes();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setSatisfiedTypes(satisfiedTypes311); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2179:7: ( classBody | SEMICOLON )
            int alt202=2;
            int LA202_0 = input.LA(1);

            if ( (LA202_0==LBRACE) ) {
                alt202=1;
            }
            else if ( (LA202_0==SEMICOLON) ) {
                alt202=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 202, 0, input);

                throw nvae;

            }
            switch (alt202) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2180:9: classBody
                    {
                    pushFollow(FOLLOW_classBody_in_objectArgument14604);
                    classBody312=classBody();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setClassBody(classBody312); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2182:9: SEMICOLON
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                  new MismatchedTokenException(LBRACE, input)); }

                    SEMICOLON313=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_objectArgument14634); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON313); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "objectArgument"



    // $ANTLR start "voidOrInferredMethodArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2189:1: voidOrInferredMethodArgument returns [MethodArgument declaration] : ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( block | ( functionSpecifier )? SEMICOLON ) ;
    public MethodArgument voidOrInferredMethodArgument() throws RecognitionException {
        MethodArgument declaration = null;


        Token VOID_MODIFIER314=null;
        Token FUNCTION_MODIFIER315=null;
        Token SEMICOLON321=null;
        Identifier memberNameDeclaration316 =null;

        TypeParameterList typeParameters317 =null;

        ParameterList parameters318 =null;

        Block block319 =null;

        SpecifierExpression functionSpecifier320 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2190:5: ( ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( block | ( functionSpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2190:7: ( VOID_MODIFIER | FUNCTION_MODIFIER ) ( memberNameDeclaration )? ( typeParameters )? ( parameters )* ( block | ( functionSpecifier )? SEMICOLON )
            {
            if ( state.backtracking==0 ) { declaration =new MethodArgument(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2191:7: ( VOID_MODIFIER | FUNCTION_MODIFIER )
            int alt203=2;
            int LA203_0 = input.LA(1);

            if ( (LA203_0==VOID_MODIFIER) ) {
                alt203=1;
            }
            else if ( (LA203_0==FUNCTION_MODIFIER) ) {
                alt203=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 203, 0, input);

                throw nvae;

            }
            switch (alt203) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2192:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER314=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodArgument14691); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setType(new VoidModifier(VOID_MODIFIER314)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2195:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER315=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodArgument14719); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setType(new FunctionModifier(FUNCTION_MODIFIER315)); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2198:7: ( memberNameDeclaration )?
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==LIDENTIFIER||LA204_0==UIDENTIFIER) ) {
                alt204=1;
            }
            switch (alt204) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2199:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_voidOrInferredMethodArgument14756);
                    memberNameDeclaration316=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration316); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2202:7: ( typeParameters )?
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( (LA205_0==SMALLER_OP) ) {
                alt205=1;
            }
            switch (alt205) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2203:9: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_voidOrInferredMethodArgument14794);
                    typeParameters317=typeParameters();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setTypeParameterList(typeParameters317); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2206:7: ( parameters )*
            loop206:
            do {
                int alt206=2;
                int LA206_0 = input.LA(1);

                if ( (LA206_0==LPAREN) ) {
                    alt206=1;
                }


                switch (alt206) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2207:9: parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_voidOrInferredMethodArgument14831);
            	    parameters318=parameters();

            	    state._fsp--;
            	    if (state.failed) return declaration;

            	    if ( state.backtracking==0 ) { declaration.addParameterList(parameters318); }

            	    }
            	    break;

            	default :
            	    break loop206;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2210:7: ( block | ( functionSpecifier )? SEMICOLON )
            int alt208=2;
            int LA208_0 = input.LA(1);

            if ( (LA208_0==LBRACE) ) {
                alt208=1;
            }
            else if ( (LA208_0==COMPUTE||LA208_0==SEMICOLON||LA208_0==SPECIFY) ) {
                alt208=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 208, 0, input);

                throw nvae;

            }
            switch (alt208) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2211:9: block
                    {
                    pushFollow(FOLLOW_block_in_voidOrInferredMethodArgument14868);
                    block319=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block319); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2214:9: ( functionSpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2214:9: ( functionSpecifier )?
                    int alt207=2;
                    int LA207_0 = input.LA(1);

                    if ( (LA207_0==COMPUTE||LA207_0==SPECIFY) ) {
                        alt207=1;
                    }
                    switch (alt207) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2215:11: functionSpecifier
                            {
                            pushFollow(FOLLOW_functionSpecifier_in_voidOrInferredMethodArgument14909);
                            functionSpecifier320=functionSpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(functionSpecifier320); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON321=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_voidOrInferredMethodArgument14952); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { expecting=-1; }

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON321); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "voidOrInferredMethodArgument"



    // $ANTLR start "inferredGetterArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2225:1: inferredGetterArgument returns [AttributeArgument declaration] : VALUE_MODIFIER ( memberNameDeclaration )? ( block | ( specifier | lazySpecifier )? SEMICOLON ) ;
    public AttributeArgument inferredGetterArgument() throws RecognitionException {
        AttributeArgument declaration = null;


        Token VALUE_MODIFIER322=null;
        Token SEMICOLON327=null;
        Identifier memberNameDeclaration323 =null;

        Block block324 =null;

        SpecifierExpression specifier325 =null;

        SpecifierExpression lazySpecifier326 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2226:5: ( VALUE_MODIFIER ( memberNameDeclaration )? ( block | ( specifier | lazySpecifier )? SEMICOLON ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2226:7: VALUE_MODIFIER ( memberNameDeclaration )? ( block | ( specifier | lazySpecifier )? SEMICOLON )
            {
            if ( state.backtracking==0 ) { declaration =new AttributeArgument(null); }

            VALUE_MODIFIER322=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_inferredGetterArgument15009); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { declaration.setType(new ValueModifier(VALUE_MODIFIER322)); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2229:7: ( memberNameDeclaration )?
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==LIDENTIFIER||LA209_0==UIDENTIFIER) ) {
                alt209=1;
            }
            switch (alt209) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2230:9: memberNameDeclaration
                    {
                    pushFollow(FOLLOW_memberNameDeclaration_in_inferredGetterArgument15036);
                    memberNameDeclaration323=memberNameDeclaration();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setIdentifier(memberNameDeclaration323); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2233:7: ( block | ( specifier | lazySpecifier )? SEMICOLON )
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==LBRACE) ) {
                alt211=1;
            }
            else if ( (LA211_0==COMPUTE||LA211_0==SEMICOLON||LA211_0==SPECIFY) ) {
                alt211=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 211, 0, input);

                throw nvae;

            }
            switch (alt211) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2234:9: block
                    {
                    pushFollow(FOLLOW_block_in_inferredGetterArgument15074);
                    block324=block();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration.setBlock(block324); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2237:9: ( specifier | lazySpecifier )? SEMICOLON
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2237:9: ( specifier | lazySpecifier )?
                    int alt210=3;
                    int LA210_0 = input.LA(1);

                    if ( (LA210_0==SPECIFY) ) {
                        alt210=1;
                    }
                    else if ( (LA210_0==COMPUTE) ) {
                        alt210=2;
                    }
                    switch (alt210) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2238:11: specifier
                            {
                            pushFollow(FOLLOW_specifier_in_inferredGetterArgument15115);
                            specifier325=specifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(specifier325); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2241:11: lazySpecifier
                            {
                            pushFollow(FOLLOW_lazySpecifier_in_inferredGetterArgument15151);
                            lazySpecifier326=lazySpecifier();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { declaration.setSpecifierExpression(lazySpecifier326); }

                            }
                            break;

                    }


                    if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                    SEMICOLON327=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_inferredGetterArgument15195); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { expecting=-1; }

                    if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON327); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "inferredGetterArgument"



    // $ANTLR start "typedMethodOrGetterArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2251:1: typedMethodOrGetterArgument returns [TypedArgument declaration] : ( type | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) ) ;
    public TypedArgument typedMethodOrGetterArgument() throws RecognitionException {
        TypedArgument declaration = null;


        Token s1=null;
        Token s2=null;
        Token DYNAMIC329=null;
        Block b1 =null;

        Block b2 =null;

        StaticType type328 =null;

        Identifier memberNameDeclaration330 =null;

        TypeParameterList typeParameters331 =null;

        ParameterList parameters332 =null;

        SpecifierExpression functionSpecifier333 =null;

        SpecifierExpression specifier334 =null;

        SpecifierExpression lazySpecifier335 =null;


         MethodArgument marg = new MethodArgument(null);
                    AttributeArgument aarg = new AttributeArgument(null); 
                    declaration =aarg; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2255:5: ( ( type | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2255:7: ( type | DYNAMIC ) memberNameDeclaration ( ( typeParameters )? ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2255:7: ( type | DYNAMIC )
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( ((LA212_0 >= LBRACE && LA212_0 <= LBRACKET)||LA212_0==PACKAGE||LA212_0==SMALLER_OP||LA212_0==UIDENTIFIER) ) {
                alt212=1;
            }
            else if ( (LA212_0==DYNAMIC) ) {
                alt212=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 212, 0, input);

                throw nvae;

            }
            switch (alt212) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2256:9: type
                    {
                    pushFollow(FOLLOW_type_in_typedMethodOrGetterArgument15263);
                    type328=type();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { marg.setType(type328);
                              aarg.setType(type328); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2260:9: DYNAMIC
                    {
                    DYNAMIC329=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_typedMethodOrGetterArgument15292); if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { DynamicModifier dm = new DynamicModifier(DYNAMIC329);
                              marg.setType(dm);
                              aarg.setType(dm); }

                    }
                    break;

            }


            pushFollow(FOLLOW_memberNameDeclaration_in_typedMethodOrGetterArgument15318);
            memberNameDeclaration330=memberNameDeclaration();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { marg.setIdentifier(memberNameDeclaration330);
                    aarg.setIdentifier(memberNameDeclaration330); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2268:7: ( ( typeParameters )? ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON ) | (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON ) )
            int alt219=2;
            int LA219_0 = input.LA(1);

            if ( (LA219_0==LPAREN||LA219_0==SMALLER_OP) ) {
                alt219=1;
            }
            else if ( (LA219_0==COMPUTE||LA219_0==LBRACE||LA219_0==SEMICOLON||LA219_0==SPECIFY) ) {
                alt219=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 219, 0, input);

                throw nvae;

            }
            switch (alt219) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2269:9: ( typeParameters )? ( parameters )+ (b1= block | ( functionSpecifier )? s1= SEMICOLON )
                    {
                    if ( state.backtracking==0 ) { declaration = marg; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2270:9: ( typeParameters )?
                    int alt213=2;
                    int LA213_0 = input.LA(1);

                    if ( (LA213_0==SMALLER_OP) ) {
                        alt213=1;
                    }
                    switch (alt213) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2271:11: typeParameters
                            {
                            pushFollow(FOLLOW_typeParameters_in_typedMethodOrGetterArgument15366);
                            typeParameters331=typeParameters();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { marg.setTypeParameterList(typeParameters331); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2274:9: ( parameters )+
                    int cnt214=0;
                    loop214:
                    do {
                        int alt214=2;
                        int LA214_0 = input.LA(1);

                        if ( (LA214_0==LPAREN) ) {
                            alt214=1;
                        }


                        switch (alt214) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2275:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_typedMethodOrGetterArgument15411);
                    	    parameters332=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { marg.addParameterList(parameters332); }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt214 >= 1 ) break loop214;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(214, input);
                                throw eee;
                        }
                        cnt214++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2278:9: (b1= block | ( functionSpecifier )? s1= SEMICOLON )
                    int alt216=2;
                    int LA216_0 = input.LA(1);

                    if ( (LA216_0==LBRACE) ) {
                        alt216=1;
                    }
                    else if ( (LA216_0==COMPUTE||LA216_0==SEMICOLON||LA216_0==SPECIFY) ) {
                        alt216=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 216, 0, input);

                        throw nvae;

                    }
                    switch (alt216) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2279:11: b1= block
                            {
                            pushFollow(FOLLOW_block_in_typedMethodOrGetterArgument15458);
                            b1=block();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { marg.setBlock(b1); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2282:11: ( functionSpecifier )? s1= SEMICOLON
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2282:11: ( functionSpecifier )?
                            int alt215=2;
                            int LA215_0 = input.LA(1);

                            if ( (LA215_0==COMPUTE||LA215_0==SPECIFY) ) {
                                alt215=1;
                            }
                            switch (alt215) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2283:13: functionSpecifier
                                    {
                                    pushFollow(FOLLOW_functionSpecifier_in_typedMethodOrGetterArgument15507);
                                    functionSpecifier333=functionSpecifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { marg.setSpecifierExpression(functionSpecifier333); }

                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                            s1=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument15560); if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { expecting=-1; }

                            if ( state.backtracking==0 ) { declaration.setEndToken(s1); }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2292:9: (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON )
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2292:9: (b2= block | ( specifier | lazySpecifier )? s2= SEMICOLON )
                    int alt218=2;
                    int LA218_0 = input.LA(1);

                    if ( (LA218_0==LBRACE) ) {
                        alt218=1;
                    }
                    else if ( (LA218_0==COMPUTE||LA218_0==SEMICOLON||LA218_0==SPECIFY) ) {
                        alt218=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return declaration;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 218, 0, input);

                        throw nvae;

                    }
                    switch (alt218) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2293:11: b2= block
                            {
                            pushFollow(FOLLOW_block_in_typedMethodOrGetterArgument15626);
                            b2=block();

                            state._fsp--;
                            if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { aarg.setBlock(b2); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2296:11: ( specifier | lazySpecifier )? s2= SEMICOLON
                            {
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2296:11: ( specifier | lazySpecifier )?
                            int alt217=3;
                            int LA217_0 = input.LA(1);

                            if ( (LA217_0==SPECIFY) ) {
                                alt217=1;
                            }
                            else if ( (LA217_0==COMPUTE) ) {
                                alt217=2;
                            }
                            switch (alt217) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2297:13: specifier
                                    {
                                    pushFollow(FOLLOW_specifier_in_typedMethodOrGetterArgument15675);
                                    specifier334=specifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { aarg.setSpecifierExpression(specifier334); }

                                    }
                                    break;
                                case 2 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2300:13: lazySpecifier
                                    {
                                    pushFollow(FOLLOW_lazySpecifier_in_typedMethodOrGetterArgument15717);
                                    lazySpecifier335=lazySpecifier();

                                    state._fsp--;
                                    if (state.failed) return declaration;

                                    if ( state.backtracking==0 ) { aarg.setSpecifierExpression(lazySpecifier335); }

                                    }
                                    break;

                            }


                            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

                            s2=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument15771); if (state.failed) return declaration;

                            if ( state.backtracking==0 ) { expecting=-1; }

                            if ( state.backtracking==0 ) { declaration.setEndToken(s2); }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "typedMethodOrGetterArgument"



    // $ANTLR start "untypedMethodOrGetterArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2311:1: untypedMethodOrGetterArgument returns [TypedArgument declaration] : memberName ( ( parameters )+ ( functionSpecifier ) | lazySpecifier ) SEMICOLON ;
    public TypedArgument untypedMethodOrGetterArgument() throws RecognitionException {
        TypedArgument declaration = null;


        Token SEMICOLON340=null;
        Identifier memberName336 =null;

        ParameterList parameters337 =null;

        SpecifierExpression functionSpecifier338 =null;

        SpecifierExpression lazySpecifier339 =null;


         MethodArgument marg = new MethodArgument(null);
                    marg.setType(new FunctionModifier(null));
                    AttributeArgument aarg = new AttributeArgument(null);
                    aarg.setType(new ValueModifier(null));
                    declaration =aarg; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2317:5: ( memberName ( ( parameters )+ ( functionSpecifier ) | lazySpecifier ) SEMICOLON )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2317:7: memberName ( ( parameters )+ ( functionSpecifier ) | lazySpecifier ) SEMICOLON
            {
            pushFollow(FOLLOW_memberName_in_untypedMethodOrGetterArgument15843);
            memberName336=memberName();

            state._fsp--;
            if (state.failed) return declaration;

            if ( state.backtracking==0 ) { marg.setIdentifier(memberName336);
                    aarg.setIdentifier(memberName336); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2320:7: ( ( parameters )+ ( functionSpecifier ) | lazySpecifier )
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==LPAREN) ) {
                alt221=1;
            }
            else if ( (LA221_0==COMPUTE) ) {
                alt221=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 221, 0, input);

                throw nvae;

            }
            switch (alt221) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2321:9: ( parameters )+ ( functionSpecifier )
                    {
                    if ( state.backtracking==0 ) { declaration = marg; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2322:9: ( parameters )+
                    int cnt220=0;
                    loop220:
                    do {
                        int alt220=2;
                        int LA220_0 = input.LA(1);

                        if ( (LA220_0==LPAREN) ) {
                            alt220=1;
                        }


                        switch (alt220) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2323:11: parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_untypedMethodOrGetterArgument15892);
                    	    parameters337=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return declaration;

                    	    if ( state.backtracking==0 ) { marg.addParameterList(parameters337); }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt220 >= 1 ) break loop220;
                    	    if (state.backtracking>0) {state.failed=true; return declaration;}
                                EarlyExitException eee =
                                    new EarlyExitException(220, input);
                                throw eee;
                        }
                        cnt220++;
                    } while (true);


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2326:9: ( functionSpecifier )
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2327:11: functionSpecifier
                    {
                    pushFollow(FOLLOW_functionSpecifier_in_untypedMethodOrGetterArgument15937);
                    functionSpecifier338=functionSpecifier();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { marg.setSpecifierExpression(functionSpecifier338); }

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2335:11: lazySpecifier
                    {
                    pushFollow(FOLLOW_lazySpecifier_in_untypedMethodOrGetterArgument16015);
                    lazySpecifier339=lazySpecifier();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { aarg.setSpecifierExpression(lazySpecifier339); }

                    }
                    break;

            }


            if ( state.backtracking==0 ) { expecting=SEMICOLON; }

            SEMICOLON340=(Token)match(input,SEMICOLON,FOLLOW_SEMICOLON_in_untypedMethodOrGetterArgument16061); if (state.failed) return declaration;

            if ( state.backtracking==0 ) { expecting=-1; }

            if ( state.backtracking==0 ) { declaration.setEndToken(SEMICOLON340); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "untypedMethodOrGetterArgument"



    // $ANTLR start "namedArgumentDeclaration"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2345:1: namedArgumentDeclaration returns [NamedArgument declaration] : ( objectArgument | typedMethodOrGetterArgument | voidOrInferredMethodArgument | inferredGetterArgument | untypedMethodOrGetterArgument );
    public NamedArgument namedArgumentDeclaration() throws RecognitionException {
        NamedArgument declaration = null;


        ObjectArgument objectArgument341 =null;

        TypedArgument typedMethodOrGetterArgument342 =null;

        MethodArgument voidOrInferredMethodArgument343 =null;

        AttributeArgument inferredGetterArgument344 =null;

        TypedArgument untypedMethodOrGetterArgument345 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2346:5: ( objectArgument | typedMethodOrGetterArgument | voidOrInferredMethodArgument | inferredGetterArgument | untypedMethodOrGetterArgument )
            int alt222=5;
            switch ( input.LA(1) ) {
            case OBJECT_DEFINITION:
                {
                alt222=1;
                }
                break;
            case DYNAMIC:
            case LBRACE:
            case LBRACKET:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt222=2;
                }
                break;
            case FUNCTION_MODIFIER:
            case VOID_MODIFIER:
                {
                alt222=3;
                }
                break;
            case VALUE_MODIFIER:
                {
                alt222=4;
                }
                break;
            case LIDENTIFIER:
                {
                alt222=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return declaration;}
                NoViableAltException nvae =
                    new NoViableAltException("", 222, 0, input);

                throw nvae;

            }

            switch (alt222) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2346:7: objectArgument
                    {
                    pushFollow(FOLLOW_objectArgument_in_namedArgumentDeclaration16098);
                    objectArgument341=objectArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =objectArgument341; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2348:7: typedMethodOrGetterArgument
                    {
                    pushFollow(FOLLOW_typedMethodOrGetterArgument_in_namedArgumentDeclaration16114);
                    typedMethodOrGetterArgument342=typedMethodOrGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =typedMethodOrGetterArgument342; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2350:7: voidOrInferredMethodArgument
                    {
                    pushFollow(FOLLOW_voidOrInferredMethodArgument_in_namedArgumentDeclaration16130);
                    voidOrInferredMethodArgument343=voidOrInferredMethodArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =voidOrInferredMethodArgument343; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2352:7: inferredGetterArgument
                    {
                    pushFollow(FOLLOW_inferredGetterArgument_in_namedArgumentDeclaration16146);
                    inferredGetterArgument344=inferredGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =inferredGetterArgument344; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2354:7: untypedMethodOrGetterArgument
                    {
                    pushFollow(FOLLOW_untypedMethodOrGetterArgument_in_namedArgumentDeclaration16162);
                    untypedMethodOrGetterArgument345=untypedMethodOrGetterArgument();

                    state._fsp--;
                    if (state.failed) return declaration;

                    if ( state.backtracking==0 ) { declaration =untypedMethodOrGetterArgument345; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return declaration;
    }
    // $ANTLR end "namedArgumentDeclaration"



    // $ANTLR start "namedArgumentStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2361:1: namedArgumentStart : compilerAnnotations ( specificationStart | declarationStart ) ;
    public void namedArgumentStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2362:5: ( compilerAnnotations ( specificationStart | declarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2362:7: compilerAnnotations ( specificationStart | declarationStart )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_namedArgumentStart16190);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2363:7: ( specificationStart | declarationStart )
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==LIDENTIFIER) ) {
                alt223=1;
            }
            else if ( (LA223_0==ALIAS||LA223_0==ASSIGN||LA223_0==CLASS_DEFINITION||LA223_0==DYNAMIC||LA223_0==FUNCTION_MODIFIER||LA223_0==INTERFACE_DEFINITION||(LA223_0 >= LBRACE && LA223_0 <= LBRACKET)||LA223_0==NEW||LA223_0==OBJECT_DEFINITION||LA223_0==PACKAGE||LA223_0==SMALLER_OP||LA223_0==UIDENTIFIER||LA223_0==VALUE_MODIFIER||LA223_0==VOID_MODIFIER) ) {
                alt223=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 223, 0, input);

                throw nvae;

            }
            switch (alt223) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2363:8: specificationStart
                    {
                    pushFollow(FOLLOW_specificationStart_in_namedArgumentStart16200);
                    specificationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2363:29: declarationStart
                    {
                    pushFollow(FOLLOW_declarationStart_in_namedArgumentStart16204);
                    declarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "namedArgumentStart"



    // $ANTLR start "namedAnnotationArgumentsStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2366:1: namedAnnotationArgumentsStart : LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE ) ;
    public void namedAnnotationArgumentsStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2367:5: ( LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2367:7: LBRACE ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE )
            {
            match(input,LBRACE,FOLLOW_LBRACE_in_namedAnnotationArgumentsStart16222); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2367:14: ( ( namedArgumentStart )=> namedArgumentStart | iterableArgumentStart | RBRACE )
            int alt224=3;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==COMPILER_ANNOTATION) ) {
                int LA224_1 = input.LA(2);

                if ( (synpred32_Ceylon()) ) {
                    alt224=1;
                }
                else if ( (true) ) {
                    alt224=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 224, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA224_0==LIDENTIFIER) ) {
                int LA224_2 = input.LA(2);

                if ( (synpred32_Ceylon()) ) {
                    alt224=1;
                }
                else if ( (true) ) {
                    alt224=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 224, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA224_0==VALUE_MODIFIER) && (synpred32_Ceylon())) {
                alt224=1;
            }
            else if ( (LA224_0==FUNCTION_MODIFIER) && (synpred32_Ceylon())) {
                alt224=1;
            }
            else if ( (LA224_0==VOID_MODIFIER) && (synpred32_Ceylon())) {
                alt224=1;
            }
            else if ( (LA224_0==ASSIGN) && (synpred32_Ceylon())) {
                alt224=1;
            }
            else if ( (LA224_0==INTERFACE_DEFINITION) && (synpred32_Ceylon())) {
                alt224=1;
            }
            else if ( (LA224_0==CLASS_DEFINITION) && (synpred32_Ceylon())) {
                alt224=1;
            }
            else if ( (LA224_0==OBJECT_DEFINITION) ) {
                int LA224_9 = input.LA(2);

                if ( (synpred32_Ceylon()) ) {
                    alt224=1;
                }
                else if ( (true) ) {
                    alt224=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 224, 9, input);

                    throw nvae;

                }
            }
            else if ( (LA224_0==NEW) && (synpred32_Ceylon())) {
                alt224=1;
            }
            else if ( (LA224_0==ALIAS) && (synpred32_Ceylon())) {
                alt224=1;
            }
            else if ( (LA224_0==UIDENTIFIER) ) {
                int LA224_12 = input.LA(2);

                if ( (synpred32_Ceylon()) ) {
                    alt224=1;
                }
                else if ( (true) ) {
                    alt224=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 224, 12, input);

                    throw nvae;

                }
            }
            else if ( (LA224_0==SMALLER_OP) && (synpred32_Ceylon())) {
                alt224=1;
            }
            else if ( (LA224_0==PACKAGE) ) {
                int LA224_14 = input.LA(2);

                if ( (synpred32_Ceylon()) ) {
                    alt224=1;
                }
                else if ( (true) ) {
                    alt224=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 224, 14, input);

                    throw nvae;

                }
            }
            else if ( (LA224_0==LBRACKET) ) {
                int LA224_15 = input.LA(2);

                if ( (synpred32_Ceylon()) ) {
                    alt224=1;
                }
                else if ( (true) ) {
                    alt224=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 224, 15, input);

                    throw nvae;

                }
            }
            else if ( (LA224_0==LBRACE) ) {
                int LA224_16 = input.LA(2);

                if ( (synpred32_Ceylon()) ) {
                    alt224=1;
                }
                else if ( (true) ) {
                    alt224=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 224, 16, input);

                    throw nvae;

                }
            }
            else if ( (LA224_0==DYNAMIC) ) {
                int LA224_17 = input.LA(2);

                if ( (synpred32_Ceylon()) ) {
                    alt224=1;
                }
                else if ( (true) ) {
                    alt224=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 224, 17, input);

                    throw nvae;

                }
            }
            else if ( (LA224_0==BACKTICK||LA224_0==CHAR_LITERAL||(LA224_0 >= DECREMENT_OP && LA224_0 <= DIFFERENCE_OP)||LA224_0==FLOAT_LITERAL||LA224_0==INCREMENT_OP||LA224_0==LPAREN||LA224_0==NATURAL_LITERAL||LA224_0==NOT_OP||LA224_0==OUTER||LA224_0==STRING_LITERAL||LA224_0==STRING_START||(LA224_0 >= SUM_OP && LA224_0 <= SUPER)||LA224_0==THIS||LA224_0==VERBATIM_STRING) ) {
                alt224=2;
            }
            else if ( (LA224_0==RBRACE) ) {
                alt224=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 224, 0, input);

                throw nvae;

            }
            switch (alt224) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2367:15: ( namedArgumentStart )=> namedArgumentStart
                    {
                    pushFollow(FOLLOW_namedArgumentStart_in_namedAnnotationArgumentsStart16229);
                    namedArgumentStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2367:58: iterableArgumentStart
                    {
                    pushFollow(FOLLOW_iterableArgumentStart_in_namedAnnotationArgumentsStart16233);
                    iterableArgumentStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2367:82: RBRACE
                    {
                    match(input,RBRACE,FOLLOW_RBRACE_in_namedAnnotationArgumentsStart16237); if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "namedAnnotationArgumentsStart"



    // $ANTLR start "iterableArgumentStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2370:1: iterableArgumentStart : compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE ) ;
    public void iterableArgumentStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2371:5: ( compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2371:7: compilerAnnotations expression ( COMMA | SEMICOLON | RBRACE )
            {
            pushFollow(FOLLOW_compilerAnnotations_in_iterableArgumentStart16255);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_expression_in_iterableArgumentStart16257);
            expression();

            state._fsp--;
            if (state.failed) return ;

            if ( input.LA(1)==COMMA||input.LA(1)==RBRACE||input.LA(1)==SEMICOLON ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "iterableArgumentStart"



    // $ANTLR start "specificationStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2375:1: specificationStart : LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE ) ;
    public void specificationStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2376:5: ( LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2376:7: LIDENTIFIER ( parameters )* ( SPECIFY | COMPUTE )
            {
            match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_specificationStart16283); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2376:19: ( parameters )*
            loop225:
            do {
                int alt225=2;
                int LA225_0 = input.LA(1);

                if ( (LA225_0==LPAREN) ) {
                    alt225=1;
                }


                switch (alt225) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2376:19: parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_specificationStart16285);
            	    parameters();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop225;
                }
            } while (true);


            if ( input.LA(1)==COMPUTE||input.LA(1)==SPECIFY ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "specificationStart"



    // $ANTLR start "parExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2379:1: parExpression returns [Expression expression] : LPAREN functionOrExpression RPAREN ;
    public Expression parExpression() throws RecognitionException {
        Expression expression = null;


        Token LPAREN346=null;
        Token RPAREN348=null;
        Expression functionOrExpression347 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2380:5: ( LPAREN functionOrExpression RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2380:7: LPAREN functionOrExpression RPAREN
            {
            LPAREN346=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_parExpression16314); if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression = new Expression(LPAREN346); }

            pushFollow(FOLLOW_functionOrExpression_in_parExpression16331);
            functionOrExpression347=functionOrExpression();

            state._fsp--;
            if (state.failed) return expression;

            if ( state.backtracking==0 ) { if (functionOrExpression347!=null)
                        expression.setTerm(functionOrExpression347.getTerm()); }

            RPAREN348=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_parExpression16347); if (state.failed) return expression;

            if ( state.backtracking==0 ) { expression.setEndToken(RPAREN348); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "parExpression"



    // $ANTLR start "positionalArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2389:1: positionalArguments returns [PositionalArgumentList positionalArgumentList] : LPAREN (sa= sequencedArgument )? RPAREN ;
    public PositionalArgumentList positionalArguments() throws RecognitionException {
        PositionalArgumentList positionalArgumentList = null;


        Token LPAREN349=null;
        Token RPAREN350=null;
        SequencedArgument sa =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2390:5: ( LPAREN (sa= sequencedArgument )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2390:7: LPAREN (sa= sequencedArgument )? RPAREN
            {
            LPAREN349=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_positionalArguments16384); if (state.failed) return positionalArgumentList;

            if ( state.backtracking==0 ) { positionalArgumentList = new PositionalArgumentList(LPAREN349); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2392:7: (sa= sequencedArgument )?
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( (LA226_0==ALIAS||(LA226_0 >= ASSERT && LA226_0 <= ASSIGN)||(LA226_0 >= BACKTICK && LA226_0 <= BREAK)||(LA226_0 >= CHAR_LITERAL && LA226_0 <= CLASS_DEFINITION)||LA226_0==COMPILER_ANNOTATION||LA226_0==CONTINUE||(LA226_0 >= DECREMENT_OP && LA226_0 <= DIFFERENCE_OP)||LA226_0==DYNAMIC||(LA226_0 >= FLOAT_LITERAL && LA226_0 <= FUNCTION_MODIFIER)||(LA226_0 >= IF_CLAUSE && LA226_0 <= INTERFACE_DEFINITION)||LA226_0==IN_OP||(LA226_0 >= LBRACE && LA226_0 <= LIDENTIFIER)||LA226_0==LPAREN||LA226_0==MODULE||(LA226_0 >= NATURAL_LITERAL && LA226_0 <= NEW)||(LA226_0 >= NOT_OP && LA226_0 <= OBJECT_DEFINITION)||(LA226_0 >= OUT && LA226_0 <= PACKAGE)||LA226_0==PRODUCT_OP||LA226_0==RETURN||(LA226_0 >= SEMICOLON && LA226_0 <= SMALLER_OP)||LA226_0==STRING_LITERAL||LA226_0==STRING_START||(LA226_0 >= SUM_OP && LA226_0 <= SWITCH_CLAUSE)||(LA226_0 >= THIS && LA226_0 <= UIDENTIFIER)||(LA226_0 >= VALUE_MODIFIER && LA226_0 <= WHILE_CLAUSE)) ) {
                alt226=1;
            }
            switch (alt226) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2393:9: sa= sequencedArgument
                    {
                    pushFollow(FOLLOW_sequencedArgument_in_positionalArguments16413);
                    sa=sequencedArgument();

                    state._fsp--;
                    if (state.failed) return positionalArgumentList;

                    if ( state.backtracking==0 ) { if (sa!=null) {
                                  for (PositionalArgument pa: sa.getPositionalArguments())
                                      positionalArgumentList.addPositionalArgument(pa);
                                  //TODO: this is really nasty, PositionalArgumentList should have
                                  //      or be a SequencedArgument, not copy its PositionalArguments!
                                  positionalArgumentList.setEndToken(sa.getMainEndToken()); } }

                    }
                    break;

            }


            RPAREN350=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_positionalArguments16440); if (state.failed) return positionalArgumentList;

            if ( state.backtracking==0 ) { positionalArgumentList.setEndToken(RPAREN350); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return positionalArgumentList;
    }
    // $ANTLR end "positionalArguments"



    // $ANTLR start "positionalArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2405:1: positionalArgument returns [ListedArgument positionalArgument] : functionOrExpression ;
    public ListedArgument positionalArgument() throws RecognitionException {
        ListedArgument positionalArgument = null;


        Expression functionOrExpression351 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2406:5: ( functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2406:7: functionOrExpression
            {
            if ( state.backtracking==0 ) { positionalArgument = new ListedArgument(null); }

            pushFollow(FOLLOW_functionOrExpression_in_positionalArgument16477);
            functionOrExpression351=functionOrExpression();

            state._fsp--;
            if (state.failed) return positionalArgument;

            if ( state.backtracking==0 ) { positionalArgument.setExpression(functionOrExpression351); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return positionalArgument;
    }
    // $ANTLR end "positionalArgument"



    // $ANTLR start "spreadArgument"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2411:1: spreadArgument returns [SpreadArgument positionalArgument] : PRODUCT_OP unionExpression ;
    public SpreadArgument spreadArgument() throws RecognitionException {
        SpreadArgument positionalArgument = null;


        Token PRODUCT_OP352=null;
        Term unionExpression353 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2412:5: ( PRODUCT_OP unionExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2412:7: PRODUCT_OP unionExpression
            {
            PRODUCT_OP352=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_spreadArgument16506); if (state.failed) return positionalArgument;

            if ( state.backtracking==0 ) { positionalArgument = new SpreadArgument(PRODUCT_OP352); }

            pushFollow(FOLLOW_unionExpression_in_spreadArgument16522);
            unionExpression353=unionExpression();

            state._fsp--;
            if (state.failed) return positionalArgument;

            if ( state.backtracking==0 ) { Expression e = new Expression(null);
                    e.setTerm(unionExpression353);
                    positionalArgument.setExpression(e); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return positionalArgument;
    }
    // $ANTLR end "spreadArgument"



    // $ANTLR start "anonParametersStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2420:1: anonParametersStart : ( typeParameters )? LPAREN ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) ) | compilerAnnotations annotatedDeclarationStart ) ;
    public void anonParametersStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2421:5: ( ( typeParameters )? LPAREN ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) ) | compilerAnnotations annotatedDeclarationStart ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2421:7: ( typeParameters )? LPAREN ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) ) | compilerAnnotations annotatedDeclarationStart )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2421:7: ( typeParameters )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==SMALLER_OP) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2421:7: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_anonParametersStart16547);
                    typeParameters();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            match(input,LPAREN,FOLLOW_LPAREN_in_anonParametersStart16554); if (state.failed) return ;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2423:5: ( RPAREN | LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) ) | compilerAnnotations annotatedDeclarationStart )
            int alt229=3;
            switch ( input.LA(1) ) {
            case RPAREN:
                {
                alt229=1;
                }
                break;
            case LIDENTIFIER:
                {
                int LA229_2 = input.LA(2);

                if ( (LA229_2==COMMA||LA229_2==RPAREN) ) {
                    alt229=2;
                }
                else if ( (LA229_2==ALIAS||LA229_2==ASSIGN||LA229_2==CLASS_DEFINITION||LA229_2==DYNAMIC||LA229_2==FUNCTION_MODIFIER||LA229_2==INTERFACE_DEFINITION||(LA229_2 >= LBRACE && LA229_2 <= LBRACKET)||LA229_2==LIDENTIFIER||LA229_2==LPAREN||LA229_2==NEW||LA229_2==OBJECT_DEFINITION||LA229_2==PACKAGE||LA229_2==SMALLER_OP||LA229_2==UIDENTIFIER||LA229_2==VALUE_MODIFIER||LA229_2==VOID_MODIFIER) ) {
                    alt229=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 229, 2, input);

                    throw nvae;

                }
                }
                break;
            case ALIAS:
            case ASSIGN:
            case CLASS_DEFINITION:
            case COMPILER_ANNOTATION:
            case DYNAMIC:
            case FUNCTION_MODIFIER:
            case INTERFACE_DEFINITION:
            case LBRACE:
            case LBRACKET:
            case NEW:
            case OBJECT_DEFINITION:
            case PACKAGE:
            case SMALLER_OP:
            case STRING_LITERAL:
            case UIDENTIFIER:
            case VALUE_MODIFIER:
            case VERBATIM_STRING:
            case VOID_MODIFIER:
                {
                alt229=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 229, 0, input);

                throw nvae;

            }

            switch (alt229) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2424:7: RPAREN
                    {
                    match(input,RPAREN,FOLLOW_RPAREN_in_anonParametersStart16570); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2425:7: LIDENTIFIER ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) )
                    {
                    match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_anonParametersStart16578); if (state.failed) return ;

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2425:19: ( COMMA | RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT ) )
                    int alt228=2;
                    int LA228_0 = input.LA(1);

                    if ( (LA228_0==COMMA) ) {
                        alt228=1;
                    }
                    else if ( (LA228_0==RPAREN) ) {
                        alt228=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 228, 0, input);

                        throw nvae;

                    }
                    switch (alt228) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2425:20: COMMA
                            {
                            match(input,COMMA,FOLLOW_COMMA_in_anonParametersStart16581); if (state.failed) return ;

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2425:28: RPAREN ( COMPUTE | LBRACE | TYPE_CONSTRAINT )
                            {
                            match(input,RPAREN,FOLLOW_RPAREN_in_anonParametersStart16585); if (state.failed) return ;

                            if ( input.LA(1)==COMPUTE||input.LA(1)==LBRACE||input.LA(1)==TYPE_CONSTRAINT ) {
                                input.consume();
                                state.errorRecovery=false;
                                state.failed=false;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return ;}
                                MismatchedSetException mse = new MismatchedSetException(null,input);
                                throw mse;
                            }


                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2426:7: compilerAnnotations annotatedDeclarationStart
                    {
                    pushFollow(FOLLOW_compilerAnnotations_in_anonParametersStart16603);
                    compilerAnnotations();

                    state._fsp--;
                    if (state.failed) return ;

                    pushFollow(FOLLOW_annotatedDeclarationStart_in_anonParametersStart16605);
                    annotatedDeclarationStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "anonParametersStart"



    // $ANTLR start "nonemptyParametersStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2430:1: nonemptyParametersStart : LPAREN compilerAnnotations annotatedDeclarationStart ;
    public void nonemptyParametersStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2431:5: ( LPAREN compilerAnnotations annotatedDeclarationStart )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2431:7: LPAREN compilerAnnotations annotatedDeclarationStart
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_nonemptyParametersStart16629); if (state.failed) return ;

            pushFollow(FOLLOW_compilerAnnotations_in_nonemptyParametersStart16631);
            compilerAnnotations();

            state._fsp--;
            if (state.failed) return ;

            pushFollow(FOLLOW_annotatedDeclarationStart_in_nonemptyParametersStart16633);
            annotatedDeclarationStart();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "nonemptyParametersStart"



    // $ANTLR start "functionOrExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2434:1: functionOrExpression returns [Expression expression] : ( ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=> anonymousFunction | let | ifExpression | switchExpression |e= expression );
    public Expression functionOrExpression() throws RecognitionException {
        Expression expression = null;


        Expression e =null;

        FunctionArgument anonymousFunction354 =null;

        LetExpression let355 =null;

        IfExpression ifExpression356 =null;

        SwitchExpression switchExpression357 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2435:5: ( ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=> anonymousFunction | let | ifExpression | switchExpression |e= expression )
            int alt230=5;
            int LA230_0 = input.LA(1);

            if ( (LA230_0==FUNCTION_MODIFIER) && (synpred33_Ceylon())) {
                alt230=1;
            }
            else if ( (LA230_0==VOID_MODIFIER) && (synpred33_Ceylon())) {
                alt230=1;
            }
            else if ( (LA230_0==SMALLER_OP) && (synpred33_Ceylon())) {
                alt230=1;
            }
            else if ( (LA230_0==LPAREN) ) {
                int LA230_4 = input.LA(2);

                if ( (synpred33_Ceylon()) ) {
                    alt230=1;
                }
                else if ( (true) ) {
                    alt230=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return expression;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 230, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA230_0==LET) ) {
                alt230=2;
            }
            else if ( (LA230_0==IF_CLAUSE) ) {
                alt230=3;
            }
            else if ( (LA230_0==SWITCH_CLAUSE) ) {
                alt230=4;
            }
            else if ( (LA230_0==BACKTICK||LA230_0==CHAR_LITERAL||(LA230_0 >= DECREMENT_OP && LA230_0 <= DIFFERENCE_OP)||LA230_0==DYNAMIC||LA230_0==FLOAT_LITERAL||LA230_0==INCREMENT_OP||(LA230_0 >= LBRACE && LA230_0 <= LBRACKET)||LA230_0==LIDENTIFIER||LA230_0==NATURAL_LITERAL||(LA230_0 >= NOT_OP && LA230_0 <= OBJECT_DEFINITION)||(LA230_0 >= OUTER && LA230_0 <= PACKAGE)||LA230_0==STRING_LITERAL||LA230_0==STRING_START||(LA230_0 >= SUM_OP && LA230_0 <= SUPER)||LA230_0==THIS||LA230_0==UIDENTIFIER||LA230_0==VERBATIM_STRING) ) {
                alt230=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return expression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 230, 0, input);

                throw nvae;

            }
            switch (alt230) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2435:7: ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )=> anonymousFunction
                    {
                    pushFollow(FOLLOW_anonymousFunction_in_functionOrExpression16670);
                    anonymousFunction354=anonymousFunction();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(anonymousFunction354); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2439:7: let
                    {
                    pushFollow(FOLLOW_let_in_functionOrExpression16686);
                    let355=let();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(let355); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2442:7: ifExpression
                    {
                    pushFollow(FOLLOW_ifExpression_in_functionOrExpression16702);
                    ifExpression356=ifExpression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(ifExpression356); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2445:7: switchExpression
                    {
                    pushFollow(FOLLOW_switchExpression_in_functionOrExpression16718);
                    switchExpression357=switchExpression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null); 
                            expression.setTerm(switchExpression357); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2448:7: e= expression
                    {
                    pushFollow(FOLLOW_expression_in_functionOrExpression16736);
                    e=expression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = e; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "functionOrExpression"



    // $ANTLR start "let"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2452:1: let returns [LetExpression let] : letClause ;
    public LetExpression let() throws RecognitionException {
        LetExpression let = null;


        LetClause letClause358 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2453:5: ( letClause )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2453:7: letClause
            {
            pushFollow(FOLLOW_letClause_in_let16765);
            letClause358=letClause();

            state._fsp--;
            if (state.failed) return let;

            if ( state.backtracking==0 ) { let = new LetExpression(null);
                    let.setLetClause(letClause358); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return let;
    }
    // $ANTLR end "let"



    // $ANTLR start "patternStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2458:1: patternStart : ( ( variable ENTRY_OP )=> variable ENTRY_OP | tuplePatternStart );
    public void patternStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2459:5: ( ( variable ENTRY_OP )=> variable ENTRY_OP | tuplePatternStart )
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( (LA231_0==COMPILER_ANNOTATION) && (synpred34_Ceylon())) {
                alt231=1;
            }
            else if ( (LA231_0==SMALLER_OP) && (synpred34_Ceylon())) {
                alt231=1;
            }
            else if ( (LA231_0==UIDENTIFIER) && (synpred34_Ceylon())) {
                alt231=1;
            }
            else if ( (LA231_0==PACKAGE) && (synpred34_Ceylon())) {
                alt231=1;
            }
            else if ( (LA231_0==LBRACKET) ) {
                int LA231_5 = input.LA(2);

                if ( (synpred34_Ceylon()) ) {
                    alt231=1;
                }
                else if ( (true) ) {
                    alt231=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 231, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA231_0==LBRACE) && (synpred34_Ceylon())) {
                alt231=1;
            }
            else if ( (LA231_0==VOID_MODIFIER) && (synpred34_Ceylon())) {
                alt231=1;
            }
            else if ( (LA231_0==FUNCTION_MODIFIER) && (synpred34_Ceylon())) {
                alt231=1;
            }
            else if ( (LA231_0==VALUE_MODIFIER) && (synpred34_Ceylon())) {
                alt231=1;
            }
            else if ( (LA231_0==LIDENTIFIER) && (synpred34_Ceylon())) {
                alt231=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 231, 0, input);

                throw nvae;

            }
            switch (alt231) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2459:7: ( variable ENTRY_OP )=> variable ENTRY_OP
                    {
                    pushFollow(FOLLOW_variable_in_patternStart16798);
                    variable();

                    state._fsp--;
                    if (state.failed) return ;

                    match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_patternStart16800); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2460:7: tuplePatternStart
                    {
                    pushFollow(FOLLOW_tuplePatternStart_in_patternStart16811);
                    tuplePatternStart();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "patternStart"



    // $ANTLR start "letVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2463:1: letVariable returns [Statement statement] : ( ( patternStart )=> pattern | variable ) ( specifier )? ;
    public Statement letVariable() throws RecognitionException {
        Statement statement = null;


        Pattern pattern359 =null;

        Variable variable360 =null;

        SpecifierExpression specifier361 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2464:5: ( ( ( patternStart )=> pattern | variable ) ( specifier )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2464:7: ( ( patternStart )=> pattern | variable ) ( specifier )?
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2464:7: ( ( patternStart )=> pattern | variable )
            int alt232=2;
            switch ( input.LA(1) ) {
            case LBRACKET:
                {
                int LA232_1 = input.LA(2);

                if ( (synpred35_Ceylon()) ) {
                    alt232=1;
                }
                else if ( (true) ) {
                    alt232=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 232, 1, input);

                    throw nvae;

                }
                }
                break;
            case COMPILER_ANNOTATION:
                {
                int LA232_2 = input.LA(2);

                if ( (synpred35_Ceylon()) ) {
                    alt232=1;
                }
                else if ( (true) ) {
                    alt232=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 232, 2, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA232_3 = input.LA(2);

                if ( (synpred35_Ceylon()) ) {
                    alt232=1;
                }
                else if ( (true) ) {
                    alt232=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 232, 3, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA232_4 = input.LA(2);

                if ( (synpred35_Ceylon()) ) {
                    alt232=1;
                }
                else if ( (true) ) {
                    alt232=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 232, 4, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA232_5 = input.LA(2);

                if ( (synpred35_Ceylon()) ) {
                    alt232=1;
                }
                else if ( (true) ) {
                    alt232=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 232, 5, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA232_6 = input.LA(2);

                if ( (synpred35_Ceylon()) ) {
                    alt232=1;
                }
                else if ( (true) ) {
                    alt232=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 232, 6, input);

                    throw nvae;

                }
                }
                break;
            case VOID_MODIFIER:
                {
                int LA232_7 = input.LA(2);

                if ( (synpred35_Ceylon()) ) {
                    alt232=1;
                }
                else if ( (true) ) {
                    alt232=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 232, 7, input);

                    throw nvae;

                }
                }
                break;
            case FUNCTION_MODIFIER:
                {
                int LA232_8 = input.LA(2);

                if ( (synpred35_Ceylon()) ) {
                    alt232=1;
                }
                else if ( (true) ) {
                    alt232=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 232, 8, input);

                    throw nvae;

                }
                }
                break;
            case VALUE_MODIFIER:
                {
                int LA232_9 = input.LA(2);

                if ( (synpred35_Ceylon()) ) {
                    alt232=1;
                }
                else if ( (true) ) {
                    alt232=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 232, 9, input);

                    throw nvae;

                }
                }
                break;
            case LIDENTIFIER:
                {
                int LA232_10 = input.LA(2);

                if ( (synpred35_Ceylon()) ) {
                    alt232=1;
                }
                else if ( (true) ) {
                    alt232=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return statement;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 232, 10, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return statement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 232, 0, input);

                throw nvae;

            }

            switch (alt232) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2465:9: ( patternStart )=> pattern
                    {
                    pushFollow(FOLLOW_pattern_in_letVariable16848);
                    pattern359=pattern();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { Destructure d = new Destructure(null);
                              d.setPattern(pattern359);
                              statement = d; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2470:9: variable
                    {
                    pushFollow(FOLLOW_variable_in_letVariable16876);
                    variable360=variable();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement =variable360; }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2473:7: ( specifier )?
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( (LA233_0==SPECIFY) ) {
                alt233=1;
            }
            switch (alt233) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2474:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_letVariable16912);
                    specifier361=specifier();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { if (statement instanceof Destructure)
                                ((Destructure) statement).setSpecifierExpression(specifier361);
                              else if (statement instanceof Variable)
                                ((Variable) statement).setSpecifierExpression(specifier361); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "letVariable"



    // $ANTLR start "letClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2482:1: letClause returns [LetClause letClause] : LET LPAREN (v1= letVariable ( COMMA v2= letVariable )* )? RPAREN conditionalBranch ;
    public LetClause letClause() throws RecognitionException {
        LetClause letClause = null;


        Token LET362=null;
        Token LPAREN363=null;
        Token COMMA364=null;
        Token RPAREN365=null;
        Statement v1 =null;

        Statement v2 =null;

        Expression conditionalBranch366 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2483:5: ( LET LPAREN (v1= letVariable ( COMMA v2= letVariable )* )? RPAREN conditionalBranch )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2483:7: LET LPAREN (v1= letVariable ( COMMA v2= letVariable )* )? RPAREN conditionalBranch
            {
            LET362=(Token)match(input,LET,FOLLOW_LET_in_letClause16952); if (state.failed) return letClause;

            if ( state.backtracking==0 ) { letClause = new LetClause(LET362); }

            LPAREN363=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_letClause16968); if (state.failed) return letClause;

            if ( state.backtracking==0 ) { letClause.setEndToken(LPAREN363); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2487:7: (v1= letVariable ( COMMA v2= letVariable )* )?
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==COMPILER_ANNOTATION||LA235_0==FUNCTION_MODIFIER||(LA235_0 >= LBRACE && LA235_0 <= LBRACKET)||LA235_0==LIDENTIFIER||LA235_0==PACKAGE||LA235_0==SMALLER_OP||LA235_0==UIDENTIFIER||LA235_0==VALUE_MODIFIER||LA235_0==VOID_MODIFIER) ) {
                alt235=1;
            }
            switch (alt235) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2488:9: v1= letVariable ( COMMA v2= letVariable )*
                    {
                    pushFollow(FOLLOW_letVariable_in_letClause16996);
                    v1=letVariable();

                    state._fsp--;
                    if (state.failed) return letClause;

                    if ( state.backtracking==0 ) { letClause.setEndToken(null);
                              letClause.addVariable(v1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2491:9: ( COMMA v2= letVariable )*
                    loop234:
                    do {
                        int alt234=2;
                        int LA234_0 = input.LA(1);

                        if ( (LA234_0==COMMA) ) {
                            alt234=1;
                        }


                        switch (alt234) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2492:11: COMMA v2= letVariable
                    	    {
                    	    COMMA364=(Token)match(input,COMMA,FOLLOW_COMMA_in_letClause17028); if (state.failed) return letClause;

                    	    if ( state.backtracking==0 ) { letClause.setEndToken(COMMA364); }

                    	    pushFollow(FOLLOW_letVariable_in_letClause17054);
                    	    v2=letVariable();

                    	    state._fsp--;
                    	    if (state.failed) return letClause;

                    	    if ( state.backtracking==0 ) { letClause.setEndToken(null); 
                    	                letClause.addVariable(v2); }

                    	    }
                    	    break;

                    	default :
                    	    break loop234;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN365=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_letClause17094); if (state.failed) return letClause;

            if ( state.backtracking==0 ) { letClause.setEndToken(RPAREN365); }

            pushFollow(FOLLOW_conditionalBranch_in_letClause17110);
            conditionalBranch366=conditionalBranch();

            state._fsp--;
            if (state.failed) return letClause;

            if ( state.backtracking==0 ) { letClause.setExpression(conditionalBranch366); 
                    letClause.setEndToken(null); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return letClause;
    }
    // $ANTLR end "letClause"



    // $ANTLR start "switchExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2506:1: switchExpression returns [SwitchExpression term] : switchHeader caseExpressions ;
    public SwitchExpression switchExpression() throws RecognitionException {
        SwitchExpression term = null;


        SwitchClause switchHeader367 =null;

        SwitchCaseList caseExpressions368 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2507:5: ( switchHeader caseExpressions )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2507:7: switchHeader caseExpressions
            {
            pushFollow(FOLLOW_switchHeader_in_switchExpression17139);
            switchHeader367=switchHeader();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = new SwitchExpression(null);
                    term.setSwitchClause(switchHeader367); }

            pushFollow(FOLLOW_caseExpressions_in_switchExpression17155);
            caseExpressions368=caseExpressions();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term.setSwitchCaseList(caseExpressions368);
                    //TODO: huge copy/paste job from switchCaseElse 
                    Identifier id = null;
                    Switched sw = switchHeader367.getSwitched();
                    if (sw!=null) {
                      Expression ex = sw.getExpression();
                      if (ex!=null && ex.getTerm() instanceof BaseMemberExpression) {
                        id = ((BaseMemberExpression) ex.getTerm()).getIdentifier();
                      }
                      TypedDeclaration var = switchHeader367.getSwitched().getVariable();
                      if (var!=null) {
                        id = var.getIdentifier();
                      }
                    }
                    if (id!=null) {
                      for (CaseClause cc: caseExpressions368.getCaseClauses()) {
                        CaseItem item = cc.getCaseItem();
                        if (item instanceof IsCase) {
                          IsCase ic = (IsCase) item;
                          Variable v = new Variable(null);
                          v.setType(new SyntheticVariable(null));
                          v.setIdentifier(id);
                          SpecifierExpression se = new SpecifierExpression(null);
                          Expression e = new Expression(null);
                          BaseMemberExpression bme = new BaseMemberExpression(null);
                          bme.setIdentifier(id);
                          bme.setTypeArguments( new InferredTypeArguments(null) );
                          e.setTerm(bme);
                          se.setExpression(e);
                          v.setSpecifierExpression(se);
                          ic.setVariable(v);
                        }
                      } 
                      ElseClause ec = caseExpressions368.getElseClause();
                      if (ec!=null) {
                        Variable ev = new Variable(null);
                        ev.setType(new SyntheticVariable(null));
                        SpecifierExpression ese = new SpecifierExpression(null);
                        Expression ee = new Expression(null);
                        BaseMemberExpression ebme = new BaseMemberExpression(null);
                        ebme.setTypeArguments( new InferredTypeArguments(null) );
                        ee.setTerm(ebme);
                        ese.setExpression(ee);
                        ev.setSpecifierExpression(ese);
                        ec.setVariable(ev);
                        ebme.setIdentifier(id);
                        ev.setIdentifier(id);
                      }
                    } 
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "switchExpression"



    // $ANTLR start "caseExpressions"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2563:1: caseExpressions returns [SwitchCaseList switchCaseList] : ( caseExpression )+ ( defaultCaseExpression )? ;
    public SwitchCaseList caseExpressions() throws RecognitionException {
        SwitchCaseList switchCaseList = null;


        CaseClause caseExpression369 =null;

        ElseClause defaultCaseExpression370 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2564:5: ( ( caseExpression )+ ( defaultCaseExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2564:7: ( caseExpression )+ ( defaultCaseExpression )?
            {
            if ( state.backtracking==0 ) { switchCaseList = new SwitchCaseList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2565:7: ( caseExpression )+
            int cnt236=0;
            loop236:
            do {
                int alt236=2;
                int LA236_0 = input.LA(1);

                if ( (LA236_0==CASE_CLAUSE) ) {
                    alt236=1;
                }


                switch (alt236) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2566:9: caseExpression
            	    {
            	    pushFollow(FOLLOW_caseExpression_in_caseExpressions17202);
            	    caseExpression369=caseExpression();

            	    state._fsp--;
            	    if (state.failed) return switchCaseList;

            	    if ( state.backtracking==0 ) { switchCaseList.addCaseClause(caseExpression369); }

            	    }
            	    break;

            	default :
            	    if ( cnt236 >= 1 ) break loop236;
            	    if (state.backtracking>0) {state.failed=true; return switchCaseList;}
                        EarlyExitException eee =
                            new EarlyExitException(236, input);
                        throw eee;
                }
                cnt236++;
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2569:7: ( defaultCaseExpression )?
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==ELSE_CLAUSE) ) {
                alt237=1;
            }
            switch (alt237) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2570:9: defaultCaseExpression
                    {
                    pushFollow(FOLLOW_defaultCaseExpression_in_caseExpressions17239);
                    defaultCaseExpression370=defaultCaseExpression();

                    state._fsp--;
                    if (state.failed) return switchCaseList;

                    if ( state.backtracking==0 ) { switchCaseList.setElseClause(defaultCaseExpression370); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return switchCaseList;
    }
    // $ANTLR end "caseExpressions"



    // $ANTLR start "caseExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2575:1: caseExpression returns [CaseClause clause] : CASE_CLAUSE caseItemList conditionalBranch ;
    public CaseClause caseExpression() throws RecognitionException {
        CaseClause clause = null;


        Token CASE_CLAUSE371=null;
        CaseItem caseItemList372 =null;

        Expression conditionalBranch373 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2576:5: ( CASE_CLAUSE caseItemList conditionalBranch )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2576:7: CASE_CLAUSE caseItemList conditionalBranch
            {
            CASE_CLAUSE371=(Token)match(input,CASE_CLAUSE,FOLLOW_CASE_CLAUSE_in_caseExpression17283); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new CaseClause(CASE_CLAUSE371); }

            pushFollow(FOLLOW_caseItemList_in_caseExpression17300);
            caseItemList372=caseItemList();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setCaseItem(caseItemList372); }

            pushFollow(FOLLOW_conditionalBranch_in_caseExpression17316);
            conditionalBranch373=conditionalBranch();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setExpression(conditionalBranch373); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "caseExpression"



    // $ANTLR start "defaultCaseExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2584:1: defaultCaseExpression returns [ElseClause clause] : ELSE_CLAUSE conditionalBranch ;
    public ElseClause defaultCaseExpression() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE374=null;
        Expression conditionalBranch375 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2585:5: ( ELSE_CLAUSE conditionalBranch )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2585:7: ELSE_CLAUSE conditionalBranch
            {
            ELSE_CLAUSE374=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_defaultCaseExpression17345); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE374); }

            pushFollow(FOLLOW_conditionalBranch_in_defaultCaseExpression17362);
            conditionalBranch375=conditionalBranch();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setExpression(conditionalBranch375); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "defaultCaseExpression"



    // $ANTLR start "ifExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2591:1: ifExpression returns [IfExpression term] : IF_CLAUSE thenElseClauses ;
    public IfExpression ifExpression() throws RecognitionException {
        IfExpression term = null;


        Token IF_CLAUSE376=null;
        PsiCompatibleCeylonParser.thenElseClauses_return thenElseClauses377 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2592:5: ( IF_CLAUSE thenElseClauses )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2592:7: IF_CLAUSE thenElseClauses
            {
            IF_CLAUSE376=(Token)match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_ifExpression17391); if (state.failed) return term;

            if ( state.backtracking==0 ) { term = new IfExpression(IF_CLAUSE376); }

            pushFollow(FOLLOW_thenElseClauses_in_ifExpression17407);
            thenElseClauses377=thenElseClauses();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { IfClause ic = (thenElseClauses377!=null?thenElseClauses377.ifClause:null);
                    ElseClause ec = (thenElseClauses377!=null?thenElseClauses377.elseClause:null);
                    ConditionList cl = (thenElseClauses377!=null?thenElseClauses377.conditionList:null);
                    term.setIfClause(ic);
                    term.setElseClause(ec);
                    if (cl!=null) {
                      if (ic==null) {
                        ic = new IfClause(null);
                        term.setIfClause(ic);
                      }
                      ic.setConditionList(cl); 
                      if (cl!=null) {
                        List<Condition> conditions = cl.getConditions();
                        if (conditions.size()==1) {
                          Condition c = conditions.get(0);
                          Identifier id = null;
                          Type t = null;
                          if (c instanceof ExistsOrNonemptyCondition) {
                            Statement s = ((ExistsOrNonemptyCondition)c).getVariable();
                            if (s instanceof Variable) {
                              Variable v = (Variable) s;
                              t = v.getType();
                              id = v.getIdentifier();
                            }
                          }
                          else if (c instanceof IsCondition) {
                            Variable v = (Variable) ((IsCondition)c).getVariable();
                            if (v!=null) {
                              t = v.getType();
                              id = v.getIdentifier();
                            }
                          }
                          if (id!=null && ec!=null && t instanceof SyntheticVariable) { 
                            Variable ev = new Variable(null);
                            ev.setType(new SyntheticVariable(null));
                            SpecifierExpression ese = new SpecifierExpression(null);
                            Expression ee = new Expression(null);
                            BaseMemberExpression ebme = new BaseMemberExpression(null);
                            ebme.setTypeArguments( new InferredTypeArguments(null) );
                            ee.setTerm(ebme);
                            ese.setExpression(ee);
                            ev.setSpecifierExpression(ese);
                            ec.setVariable(ev);
                            ev.setIdentifier(id);
                            ebme.setIdentifier(id);
                          }
                        }
                      }        
                    } 
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "ifExpression"



    // $ANTLR start "conditionalBranch"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2647:1: conditionalBranch returns [Expression expression] : ( ifExpression | let | disjunctionExpression );
    public Expression conditionalBranch() throws RecognitionException {
        Expression expression = null;


        IfExpression ifExpression378 =null;

        LetExpression let379 =null;

        Term disjunctionExpression380 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2648:5: ( ifExpression | let | disjunctionExpression )
            int alt238=3;
            switch ( input.LA(1) ) {
            case IF_CLAUSE:
                {
                alt238=1;
                }
                break;
            case LET:
                {
                alt238=2;
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case DYNAMIC:
            case FLOAT_LITERAL:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case NOT_OP:
            case OBJECT_DEFINITION:
            case OUTER:
            case PACKAGE:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
                {
                alt238=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return expression;}
                NoViableAltException nvae =
                    new NoViableAltException("", 238, 0, input);

                throw nvae;

            }

            switch (alt238) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2648:7: ifExpression
                    {
                    pushFollow(FOLLOW_ifExpression_in_conditionalBranch17436);
                    ifExpression378=ifExpression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(ifExpression378); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2651:7: let
                    {
                    pushFollow(FOLLOW_let_in_conditionalBranch17452);
                    let379=let();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(let379); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2654:7: disjunctionExpression
                    {
                    pushFollow(FOLLOW_disjunctionExpression_in_conditionalBranch17468);
                    disjunctionExpression380=disjunctionExpression();

                    state._fsp--;
                    if (state.failed) return expression;

                    if ( state.backtracking==0 ) { expression = new Expression(null);
                            expression.setTerm(disjunctionExpression380); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return expression;
    }
    // $ANTLR end "conditionalBranch"


    public static class thenElseClauses_return extends ParserRuleReturnScope {
        public IfClause ifClause;
        public ElseClause elseClause;
        public ConditionList conditionList;
    };


    // $ANTLR start "thenElseClauses"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2659:1: thenElseClauses returns [IfClause ifClause, ElseClause elseClause, ConditionList conditionList] : conditions THEN_CLAUSE cb1= conditionalBranch ELSE_CLAUSE cb2= conditionalBranch ;
    public PsiCompatibleCeylonParser.thenElseClauses_return thenElseClauses() throws RecognitionException {
        PsiCompatibleCeylonParser.thenElseClauses_return retval = new PsiCompatibleCeylonParser.thenElseClauses_return();
        retval.start = input.LT(1);


        Token THEN_CLAUSE382=null;
        Token ELSE_CLAUSE383=null;
        Expression cb1 =null;

        Expression cb2 =null;

        ConditionList conditions381 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2660:5: ( conditions THEN_CLAUSE cb1= conditionalBranch ELSE_CLAUSE cb2= conditionalBranch )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2660:7: conditions THEN_CLAUSE cb1= conditionalBranch ELSE_CLAUSE cb2= conditionalBranch
            {
            pushFollow(FOLLOW_conditions_in_thenElseClauses17497);
            conditions381=conditions();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.conditionList = conditions381; }

            THEN_CLAUSE382=(Token)match(input,THEN_CLAUSE,FOLLOW_THEN_CLAUSE_in_thenElseClauses17513); if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.ifClause = new IfClause(THEN_CLAUSE382); }

            pushFollow(FOLLOW_conditionalBranch_in_thenElseClauses17531);
            cb1=conditionalBranch();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.ifClause.setExpression(cb1); }

            ELSE_CLAUSE383=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_thenElseClauses17547); if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.elseClause = new ElseClause(ELSE_CLAUSE383); }

            pushFollow(FOLLOW_conditionalBranch_in_thenElseClauses17565);
            cb2=conditionalBranch();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.elseClause.setExpression(cb2); }

            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "thenElseClauses"



    // $ANTLR start "anonymousFunction"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2672:1: anonymousFunction returns [FunctionArgument function] : ( FUNCTION_MODIFIER | VOID_MODIFIER )? (tp= typeParameters )? p1= parameters (p2= parameters )* (tc= typeConstraints )? ( COMPUTE fe= functionOrExpression | block ) ;
    public FunctionArgument anonymousFunction() throws RecognitionException {
        FunctionArgument function = null;


        Token FUNCTION_MODIFIER384=null;
        Token VOID_MODIFIER385=null;
        TypeParameterList tp =null;

        ParameterList p1 =null;

        ParameterList p2 =null;

        TypeConstraintList tc =null;

        Expression fe =null;

        Block block386 =null;


         function = new FunctionArgument(null);
                    function.setType(new FunctionModifier(null)); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2675:5: ( ( FUNCTION_MODIFIER | VOID_MODIFIER )? (tp= typeParameters )? p1= parameters (p2= parameters )* (tc= typeConstraints )? ( COMPUTE fe= functionOrExpression | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2675:7: ( FUNCTION_MODIFIER | VOID_MODIFIER )? (tp= typeParameters )? p1= parameters (p2= parameters )* (tc= typeConstraints )? ( COMPUTE fe= functionOrExpression | block )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2675:7: ( FUNCTION_MODIFIER | VOID_MODIFIER )?
            int alt239=3;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==FUNCTION_MODIFIER) ) {
                alt239=1;
            }
            else if ( (LA239_0==VOID_MODIFIER) ) {
                alt239=2;
            }
            switch (alt239) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2676:9: FUNCTION_MODIFIER
                    {
                    FUNCTION_MODIFIER384=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_anonymousFunction17613); if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setType(new FunctionModifier(FUNCTION_MODIFIER384)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2679:9: VOID_MODIFIER
                    {
                    VOID_MODIFIER385=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_anonymousFunction17641); if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setType(new VoidModifier(VOID_MODIFIER385)); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2682:7: (tp= typeParameters )?
            int alt240=2;
            int LA240_0 = input.LA(1);

            if ( (LA240_0==SMALLER_OP) ) {
                alt240=1;
            }
            switch (alt240) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2683:9: tp= typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_anonymousFunction17680);
                    tp=typeParameters();

                    state._fsp--;
                    if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setTypeParameterList(tp); }

                    }
                    break;

            }


            pushFollow(FOLLOW_parameters_in_anonymousFunction17709);
            p1=parameters();

            state._fsp--;
            if (state.failed) return function;

            if ( state.backtracking==0 ) { function.addParameterList(p1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2688:7: (p2= parameters )*
            loop241:
            do {
                int alt241=2;
                int LA241_0 = input.LA(1);

                if ( (LA241_0==LPAREN) ) {
                    alt241=1;
                }


                switch (alt241) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2689:9: p2= parameters
            	    {
            	    pushFollow(FOLLOW_parameters_in_anonymousFunction17738);
            	    p2=parameters();

            	    state._fsp--;
            	    if (state.failed) return function;

            	    if ( state.backtracking==0 ) { function.addParameterList(p2); }

            	    }
            	    break;

            	default :
            	    break loop241;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2692:7: (tc= typeConstraints )?
            int alt242=2;
            int LA242_0 = input.LA(1);

            if ( (LA242_0==COMPILER_ANNOTATION||LA242_0==TYPE_CONSTRAINT) ) {
                alt242=1;
            }
            switch (alt242) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2693:9: tc= typeConstraints
                    {
                    pushFollow(FOLLOW_typeConstraints_in_anonymousFunction17777);
                    tc=typeConstraints();

                    state._fsp--;
                    if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setTypeConstraintList(tc); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2696:7: ( COMPUTE fe= functionOrExpression | block )
            int alt243=2;
            int LA243_0 = input.LA(1);

            if ( (LA243_0==COMPUTE) ) {
                alt243=1;
            }
            else if ( (LA243_0==LBRACE) ) {
                alt243=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return function;}
                NoViableAltException nvae =
                    new NoViableAltException("", 243, 0, input);

                throw nvae;

            }
            switch (alt243) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2697:9: COMPUTE fe= functionOrExpression
                    {
                    match(input,COMPUTE,FOLLOW_COMPUTE_in_anonymousFunction17815); if (state.failed) return function;

                    pushFollow(FOLLOW_functionOrExpression_in_anonymousFunction17836);
                    fe=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setExpression(fe); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2702:9: block
                    {
                    pushFollow(FOLLOW_block_in_anonymousFunction17864);
                    block386=block();

                    state._fsp--;
                    if (state.failed) return function;

                    if ( state.backtracking==0 ) { function.setBlock(block386); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return function;
    }
    // $ANTLR end "anonymousFunction"



    // $ANTLR start "comprehension"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2707:1: comprehension returns [Comprehension comprehension] : ( forComprehensionClause | ifComprehensionClause );
    public Comprehension comprehension() throws RecognitionException {
        Comprehension comprehension = null;


        ForComprehensionClause forComprehensionClause387 =null;

        IfComprehensionClause ifComprehensionClause388 =null;


         comprehension = new Comprehension(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2709:5: ( forComprehensionClause | ifComprehensionClause )
            int alt244=2;
            int LA244_0 = input.LA(1);

            if ( (LA244_0==FOR_CLAUSE) ) {
                alt244=1;
            }
            else if ( (LA244_0==IF_CLAUSE) ) {
                alt244=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return comprehension;}
                NoViableAltException nvae =
                    new NoViableAltException("", 244, 0, input);

                throw nvae;

            }
            switch (alt244) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2709:7: forComprehensionClause
                    {
                    pushFollow(FOLLOW_forComprehensionClause_in_comprehension17912);
                    forComprehensionClause387=forComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehension;

                    if ( state.backtracking==0 ) { comprehension.setInitialComprehensionClause(forComprehensionClause387); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2711:7: ifComprehensionClause
                    {
                    pushFollow(FOLLOW_ifComprehensionClause_in_comprehension17928);
                    ifComprehensionClause388=ifComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehension;

                    if ( state.backtracking==0 ) { comprehension.setInitialComprehensionClause(ifComprehensionClause388); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehension;
    }
    // $ANTLR end "comprehension"



    // $ANTLR start "comprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2715:1: comprehensionClause returns [ComprehensionClause comprehensionClause] : ( forComprehensionClause | ( IF_CLAUSE conditions ~ THEN_CLAUSE )=> ifComprehensionClause | expressionComprehensionClause );
    public ComprehensionClause comprehensionClause() throws RecognitionException {
        ComprehensionClause comprehensionClause = null;


        ForComprehensionClause forComprehensionClause389 =null;

        IfComprehensionClause ifComprehensionClause390 =null;

        ExpressionComprehensionClause expressionComprehensionClause391 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2716:5: ( forComprehensionClause | ( IF_CLAUSE conditions ~ THEN_CLAUSE )=> ifComprehensionClause | expressionComprehensionClause )
            int alt245=3;
            switch ( input.LA(1) ) {
            case FOR_CLAUSE:
                {
                alt245=1;
                }
                break;
            case IF_CLAUSE:
                {
                int LA245_2 = input.LA(2);

                if ( (synpred36_Ceylon()) ) {
                    alt245=2;
                }
                else if ( (true) ) {
                    alt245=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return comprehensionClause;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 245, 2, input);

                    throw nvae;

                }
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case COMMA:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case DYNAMIC:
            case FLOAT_LITERAL:
            case FUNCTION_MODIFIER:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case NOT_OP:
            case OBJECT_DEFINITION:
            case OUTER:
            case PACKAGE:
            case RBRACE:
            case RBRACKET:
            case RPAREN:
            case SMALLER_OP:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case SWITCH_CLAUSE:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
            case VOID_MODIFIER:
                {
                alt245=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return comprehensionClause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 245, 0, input);

                throw nvae;

            }

            switch (alt245) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2716:7: forComprehensionClause
                    {
                    pushFollow(FOLLOW_forComprehensionClause_in_comprehensionClause17957);
                    forComprehensionClause389=forComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = forComprehensionClause389; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2718:7: ( IF_CLAUSE conditions ~ THEN_CLAUSE )=> ifComprehensionClause
                    {
                    pushFollow(FOLLOW_ifComprehensionClause_in_comprehensionClause17992);
                    ifComprehensionClause390=ifComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = ifComprehensionClause390; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2721:7: expressionComprehensionClause
                    {
                    pushFollow(FOLLOW_expressionComprehensionClause_in_comprehensionClause18009);
                    expressionComprehensionClause391=expressionComprehensionClause();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = expressionComprehensionClause391; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "comprehensionClause"



    // $ANTLR start "expressionComprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2725:1: expressionComprehensionClause returns [ExpressionComprehensionClause comprehensionClause] : ( functionOrExpression |);
    public ExpressionComprehensionClause expressionComprehensionClause() throws RecognitionException {
        ExpressionComprehensionClause comprehensionClause = null;


        Expression functionOrExpression392 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2726:5: ( functionOrExpression |)
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==BACKTICK||LA246_0==CHAR_LITERAL||(LA246_0 >= DECREMENT_OP && LA246_0 <= DIFFERENCE_OP)||LA246_0==DYNAMIC||LA246_0==FLOAT_LITERAL||LA246_0==FUNCTION_MODIFIER||LA246_0==IF_CLAUSE||LA246_0==INCREMENT_OP||(LA246_0 >= LBRACE && LA246_0 <= LIDENTIFIER)||LA246_0==LPAREN||LA246_0==NATURAL_LITERAL||(LA246_0 >= NOT_OP && LA246_0 <= OBJECT_DEFINITION)||(LA246_0 >= OUTER && LA246_0 <= PACKAGE)||LA246_0==SMALLER_OP||LA246_0==STRING_LITERAL||LA246_0==STRING_START||(LA246_0 >= SUM_OP && LA246_0 <= SWITCH_CLAUSE)||LA246_0==THIS||LA246_0==UIDENTIFIER||(LA246_0 >= VERBATIM_STRING && LA246_0 <= VOID_MODIFIER)) ) {
                alt246=1;
            }
            else if ( (LA246_0==COMMA||(LA246_0 >= RBRACE && LA246_0 <= RBRACKET)||LA246_0==RPAREN) ) {
                alt246=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return comprehensionClause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 246, 0, input);

                throw nvae;

            }
            switch (alt246) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2726:7: functionOrExpression
                    {
                    pushFollow(FOLLOW_functionOrExpression_in_expressionComprehensionClause18039);
                    functionOrExpression392=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return comprehensionClause;

                    if ( state.backtracking==0 ) { comprehensionClause = new ExpressionComprehensionClause(null);
                            comprehensionClause.setExpression(functionOrExpression392); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2729:7: 
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                              new MismatchedTokenException(LIDENTIFIER, input)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "expressionComprehensionClause"



    // $ANTLR start "forComprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2733:1: forComprehensionClause returns [ForComprehensionClause comprehensionClause] : FOR_CLAUSE forIterator comprehensionClause ;
    public ForComprehensionClause forComprehensionClause() throws RecognitionException {
        ForComprehensionClause comprehensionClause = null;


        Token FOR_CLAUSE393=null;
        ForIterator forIterator394 =null;

        ComprehensionClause comprehensionClause395 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2734:5: ( FOR_CLAUSE forIterator comprehensionClause )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2734:7: FOR_CLAUSE forIterator comprehensionClause
            {
            FOR_CLAUSE393=(Token)match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_forComprehensionClause18076); if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause = new ForComprehensionClause(FOR_CLAUSE393); }

            pushFollow(FOLLOW_forIterator_in_forComprehensionClause18092);
            forIterator394=forIterator();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setForIterator(forIterator394); }

            pushFollow(FOLLOW_comprehensionClause_in_forComprehensionClause18108);
            comprehensionClause395=comprehensionClause();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setComprehensionClause(comprehensionClause395); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "forComprehensionClause"



    // $ANTLR start "ifComprehensionClause"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2742:1: ifComprehensionClause returns [IfComprehensionClause comprehensionClause] : IF_CLAUSE conditions comprehensionClause ;
    public IfComprehensionClause ifComprehensionClause() throws RecognitionException {
        IfComprehensionClause comprehensionClause = null;


        Token IF_CLAUSE396=null;
        ConditionList conditions397 =null;

        ComprehensionClause comprehensionClause398 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2743:5: ( IF_CLAUSE conditions comprehensionClause )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2743:7: IF_CLAUSE conditions comprehensionClause
            {
            IF_CLAUSE396=(Token)match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_ifComprehensionClause18141); if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause = new IfComprehensionClause(IF_CLAUSE396); }

            pushFollow(FOLLOW_conditions_in_ifComprehensionClause18157);
            conditions397=conditions();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setConditionList(conditions397); }

            pushFollow(FOLLOW_comprehensionClause_in_ifComprehensionClause18173);
            comprehensionClause398=comprehensionClause();

            state._fsp--;
            if (state.failed) return comprehensionClause;

            if ( state.backtracking==0 ) { comprehensionClause.setComprehensionClause(comprehensionClause398); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return comprehensionClause;
    }
    // $ANTLR end "ifComprehensionClause"



    // $ANTLR start "assignmentExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2751:1: assignmentExpression returns [Term term] : ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression )? ;
    public Term assignmentExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        Expression ee2 =null;

        AssignmentOp assignmentOperator399 =null;


         QualifiedMemberOrTypeExpression qe=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2753:5: (ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2753:7: ee1= thenElseExpression ( assignmentOperator ee2= functionOrExpression )?
            {
            pushFollow(FOLLOW_thenElseExpression_in_assignmentExpression18217);
            ee1=thenElseExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ee1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2755:7: ( assignmentOperator ee2= functionOrExpression )?
            int alt247=2;
            int LA247_0 = input.LA(1);

            if ( (LA247_0==ADD_SPECIFY||LA247_0==AND_SPECIFY||LA247_0==COMPLEMENT_SPECIFY||LA247_0==DIVIDE_SPECIFY||LA247_0==INTERSECT_SPECIFY||LA247_0==MULTIPLY_SPECIFY||LA247_0==OR_SPECIFY||LA247_0==REMAINDER_SPECIFY||LA247_0==SPECIFY||LA247_0==SUBTRACT_SPECIFY||LA247_0==UNION_SPECIFY) ) {
                alt247=1;
            }
            switch (alt247) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2756:9: assignmentOperator ee2= functionOrExpression
                    {
                    pushFollow(FOLLOW_assignmentOperator_in_assignmentExpression18243);
                    assignmentOperator399=assignmentOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { assignmentOperator399.setLeftTerm(term);
                              term = assignmentOperator399; }

                    pushFollow(FOLLOW_functionOrExpression_in_assignmentExpression18266);
                    ee2=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { if (ee2!=null)
                                  assignmentOperator399.setRightTerm(ee2.getTerm()); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "assignmentExpression"



    // $ANTLR start "assignmentOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2765:1: assignmentOperator returns [AssignmentOp operator] : ( SPECIFY | ADD_SPECIFY | SUBTRACT_SPECIFY | MULTIPLY_SPECIFY | DIVIDE_SPECIFY | REMAINDER_SPECIFY | INTERSECT_SPECIFY | UNION_SPECIFY | COMPLEMENT_SPECIFY | AND_SPECIFY | OR_SPECIFY );
    public AssignmentOp assignmentOperator() throws RecognitionException {
        AssignmentOp operator = null;


        Token SPECIFY400=null;
        Token ADD_SPECIFY401=null;
        Token SUBTRACT_SPECIFY402=null;
        Token MULTIPLY_SPECIFY403=null;
        Token DIVIDE_SPECIFY404=null;
        Token REMAINDER_SPECIFY405=null;
        Token INTERSECT_SPECIFY406=null;
        Token UNION_SPECIFY407=null;
        Token COMPLEMENT_SPECIFY408=null;
        Token AND_SPECIFY409=null;
        Token OR_SPECIFY410=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2766:5: ( SPECIFY | ADD_SPECIFY | SUBTRACT_SPECIFY | MULTIPLY_SPECIFY | DIVIDE_SPECIFY | REMAINDER_SPECIFY | INTERSECT_SPECIFY | UNION_SPECIFY | COMPLEMENT_SPECIFY | AND_SPECIFY | OR_SPECIFY )
            int alt248=11;
            switch ( input.LA(1) ) {
            case SPECIFY:
                {
                alt248=1;
                }
                break;
            case ADD_SPECIFY:
                {
                alt248=2;
                }
                break;
            case SUBTRACT_SPECIFY:
                {
                alt248=3;
                }
                break;
            case MULTIPLY_SPECIFY:
                {
                alt248=4;
                }
                break;
            case DIVIDE_SPECIFY:
                {
                alt248=5;
                }
                break;
            case REMAINDER_SPECIFY:
                {
                alt248=6;
                }
                break;
            case INTERSECT_SPECIFY:
                {
                alt248=7;
                }
                break;
            case UNION_SPECIFY:
                {
                alt248=8;
                }
                break;
            case COMPLEMENT_SPECIFY:
                {
                alt248=9;
                }
                break;
            case AND_SPECIFY:
                {
                alt248=10;
                }
                break;
            case OR_SPECIFY:
                {
                alt248=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 248, 0, input);

                throw nvae;

            }

            switch (alt248) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2766:7: SPECIFY
                    {
                    SPECIFY400=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_assignmentOperator18306); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AssignOp(SPECIFY400); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2767:7: ADD_SPECIFY
                    {
                    ADD_SPECIFY401=(Token)match(input,ADD_SPECIFY,FOLLOW_ADD_SPECIFY_in_assignmentOperator18316); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AddAssignOp(ADD_SPECIFY401); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2768:7: SUBTRACT_SPECIFY
                    {
                    SUBTRACT_SPECIFY402=(Token)match(input,SUBTRACT_SPECIFY,FOLLOW_SUBTRACT_SPECIFY_in_assignmentOperator18326); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SubtractAssignOp(SUBTRACT_SPECIFY402); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2769:7: MULTIPLY_SPECIFY
                    {
                    MULTIPLY_SPECIFY403=(Token)match(input,MULTIPLY_SPECIFY,FOLLOW_MULTIPLY_SPECIFY_in_assignmentOperator18336); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new MultiplyAssignOp(MULTIPLY_SPECIFY403); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2770:7: DIVIDE_SPECIFY
                    {
                    DIVIDE_SPECIFY404=(Token)match(input,DIVIDE_SPECIFY,FOLLOW_DIVIDE_SPECIFY_in_assignmentOperator18346); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DivideAssignOp(DIVIDE_SPECIFY404); }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2771:7: REMAINDER_SPECIFY
                    {
                    REMAINDER_SPECIFY405=(Token)match(input,REMAINDER_SPECIFY,FOLLOW_REMAINDER_SPECIFY_in_assignmentOperator18356); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RemainderAssignOp(REMAINDER_SPECIFY405); }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2772:7: INTERSECT_SPECIFY
                    {
                    INTERSECT_SPECIFY406=(Token)match(input,INTERSECT_SPECIFY,FOLLOW_INTERSECT_SPECIFY_in_assignmentOperator18366); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IntersectAssignOp(INTERSECT_SPECIFY406); }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2773:7: UNION_SPECIFY
                    {
                    UNION_SPECIFY407=(Token)match(input,UNION_SPECIFY,FOLLOW_UNION_SPECIFY_in_assignmentOperator18376); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new UnionAssignOp(UNION_SPECIFY407); }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2774:7: COMPLEMENT_SPECIFY
                    {
                    COMPLEMENT_SPECIFY408=(Token)match(input,COMPLEMENT_SPECIFY,FOLLOW_COMPLEMENT_SPECIFY_in_assignmentOperator18386); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ComplementAssignOp(COMPLEMENT_SPECIFY408); }

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2775:7: AND_SPECIFY
                    {
                    AND_SPECIFY409=(Token)match(input,AND_SPECIFY,FOLLOW_AND_SPECIFY_in_assignmentOperator18396); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new AndAssignOp(AND_SPECIFY409); }

                    }
                    break;
                case 11 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2776:7: OR_SPECIFY
                    {
                    OR_SPECIFY410=(Token)match(input,OR_SPECIFY,FOLLOW_OR_SPECIFY_in_assignmentOperator18406); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new OrAssignOp(OR_SPECIFY410); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "assignmentOperator"



    // $ANTLR start "thenElseExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2779:1: thenElseExpression returns [Term term] : de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )* ;
    public Term thenElseExpression() throws RecognitionException {
        Term term = null;


        Term de1 =null;

        Term de2 =null;

        BinaryOperatorExpression thenElseOperator411 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2780:5: (de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2780:7: de1= disjunctionExpression ( thenElseOperator de2= disjunctionExpression )*
            {
            pushFollow(FOLLOW_disjunctionExpression_in_thenElseExpression18431);
            de1=disjunctionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = de1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2782:7: ( thenElseOperator de2= disjunctionExpression )*
            loop249:
            do {
                int alt249=2;
                int LA249_0 = input.LA(1);

                if ( (LA249_0==ELSE_CLAUSE||LA249_0==THEN_CLAUSE) ) {
                    alt249=1;
                }


                switch (alt249) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2783:9: thenElseOperator de2= disjunctionExpression
            	    {
            	    pushFollow(FOLLOW_thenElseOperator_in_thenElseExpression18457);
            	    thenElseOperator411=thenElseOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { thenElseOperator411.setLeftTerm(term);
            	              term = thenElseOperator411; }

            	    pushFollow(FOLLOW_disjunctionExpression_in_thenElseExpression18479);
            	    de2=disjunctionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { thenElseOperator411.setRightTerm(de2); }

            	    }
            	    break;

            	default :
            	    break loop249;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "thenElseExpression"



    // $ANTLR start "thenElseOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2791:1: thenElseOperator returns [BinaryOperatorExpression operator] : ( ELSE_CLAUSE | THEN_CLAUSE );
    public BinaryOperatorExpression thenElseOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token ELSE_CLAUSE412=null;
        Token THEN_CLAUSE413=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2792:5: ( ELSE_CLAUSE | THEN_CLAUSE )
            int alt250=2;
            int LA250_0 = input.LA(1);

            if ( (LA250_0==ELSE_CLAUSE) ) {
                alt250=1;
            }
            else if ( (LA250_0==THEN_CLAUSE) ) {
                alt250=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 250, 0, input);

                throw nvae;

            }
            switch (alt250) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2792:7: ELSE_CLAUSE
                    {
                    ELSE_CLAUSE412=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_thenElseOperator18519); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DefaultOp(ELSE_CLAUSE412); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2794:7: THEN_CLAUSE
                    {
                    THEN_CLAUSE413=(Token)match(input,THEN_CLAUSE,FOLLOW_THEN_CLAUSE_in_thenElseOperator18536); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ThenOp(THEN_CLAUSE413); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "thenElseOperator"



    // $ANTLR start "disjunctionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2798:1: disjunctionExpression returns [Term term] : me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )* ;
    public Term disjunctionExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        OrOp disjunctionOperator414 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2799:5: (me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2799:7: me1= conjunctionExpression ( disjunctionOperator me2= conjunctionExpression )*
            {
            pushFollow(FOLLOW_conjunctionExpression_in_disjunctionExpression18567);
            me1=conjunctionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = me1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2801:7: ( disjunctionOperator me2= conjunctionExpression )*
            loop251:
            do {
                int alt251=2;
                int LA251_0 = input.LA(1);

                if ( (LA251_0==OR_OP) ) {
                    alt251=1;
                }


                switch (alt251) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2802:9: disjunctionOperator me2= conjunctionExpression
            	    {
            	    pushFollow(FOLLOW_disjunctionOperator_in_disjunctionExpression18593);
            	    disjunctionOperator414=disjunctionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { disjunctionOperator414.setLeftTerm(term);
            	              term = disjunctionOperator414; }

            	    pushFollow(FOLLOW_conjunctionExpression_in_disjunctionExpression18616);
            	    me2=conjunctionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { disjunctionOperator414.setRightTerm(me2); }

            	    }
            	    break;

            	default :
            	    break loop251;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "disjunctionExpression"



    // $ANTLR start "disjunctionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2810:1: disjunctionOperator returns [OrOp operator] : OR_OP ;
    public OrOp disjunctionOperator() throws RecognitionException {
        OrOp operator = null;


        Token OR_OP415=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2811:5: ( OR_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2811:7: OR_OP
            {
            OR_OP415=(Token)match(input,OR_OP,FOLLOW_OR_OP_in_disjunctionOperator18656); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new OrOp(OR_OP415); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "disjunctionOperator"



    // $ANTLR start "conjunctionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2815:1: conjunctionExpression returns [Term term] : me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )* ;
    public Term conjunctionExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        AndOp conjunctionOperator416 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2816:5: (me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2816:7: me1= logicalNegationExpression ( conjunctionOperator me2= logicalNegationExpression )*
            {
            pushFollow(FOLLOW_logicalNegationExpression_in_conjunctionExpression18688);
            me1=logicalNegationExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = me1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2818:7: ( conjunctionOperator me2= logicalNegationExpression )*
            loop252:
            do {
                int alt252=2;
                int LA252_0 = input.LA(1);

                if ( (LA252_0==AND_OP) ) {
                    alt252=1;
                }


                switch (alt252) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2819:9: conjunctionOperator me2= logicalNegationExpression
            	    {
            	    pushFollow(FOLLOW_conjunctionOperator_in_conjunctionExpression18714);
            	    conjunctionOperator416=conjunctionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { conjunctionOperator416.setLeftTerm(term);
            	              term = conjunctionOperator416; }

            	    pushFollow(FOLLOW_logicalNegationExpression_in_conjunctionExpression18737);
            	    me2=logicalNegationExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { conjunctionOperator416.setRightTerm(me2); }

            	    }
            	    break;

            	default :
            	    break loop252;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "conjunctionExpression"



    // $ANTLR start "conjunctionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2827:1: conjunctionOperator returns [AndOp operator] : AND_OP ;
    public AndOp conjunctionOperator() throws RecognitionException {
        AndOp operator = null;


        Token AND_OP417=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2828:5: ( AND_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2828:7: AND_OP
            {
            AND_OP417=(Token)match(input,AND_OP,FOLLOW_AND_OP_in_conjunctionOperator18777); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new AndOp(AND_OP417); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "conjunctionOperator"



    // $ANTLR start "logicalNegationExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2832:1: logicalNegationExpression returns [Term term] : ( notOperator le= logicalNegationExpression | equalityExpression );
    public Term logicalNegationExpression() throws RecognitionException {
        Term term = null;


        Term le =null;

        NotOp notOperator418 =null;

        Term equalityExpression419 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2833:5: ( notOperator le= logicalNegationExpression | equalityExpression )
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==NOT_OP) ) {
                alt253=1;
            }
            else if ( (LA253_0==BACKTICK||LA253_0==CHAR_LITERAL||(LA253_0 >= DECREMENT_OP && LA253_0 <= DIFFERENCE_OP)||LA253_0==DYNAMIC||LA253_0==FLOAT_LITERAL||LA253_0==INCREMENT_OP||(LA253_0 >= LBRACE && LA253_0 <= LBRACKET)||LA253_0==LIDENTIFIER||LA253_0==LPAREN||LA253_0==NATURAL_LITERAL||LA253_0==OBJECT_DEFINITION||(LA253_0 >= OUTER && LA253_0 <= PACKAGE)||LA253_0==STRING_LITERAL||LA253_0==STRING_START||(LA253_0 >= SUM_OP && LA253_0 <= SUPER)||LA253_0==THIS||LA253_0==UIDENTIFIER||LA253_0==VERBATIM_STRING) ) {
                alt253=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                    new NoViableAltException("", 253, 0, input);

                throw nvae;

            }
            switch (alt253) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2833:7: notOperator le= logicalNegationExpression
                    {
                    pushFollow(FOLLOW_notOperator_in_logicalNegationExpression18807);
                    notOperator418=notOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = notOperator418; }

                    pushFollow(FOLLOW_logicalNegationExpression_in_logicalNegationExpression18826);
                    le=logicalNegationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { notOperator418.setTerm(le); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2837:7: equalityExpression
                    {
                    pushFollow(FOLLOW_equalityExpression_in_logicalNegationExpression18842);
                    equalityExpression419=equalityExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = equalityExpression419; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "logicalNegationExpression"



    // $ANTLR start "notOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2841:1: notOperator returns [NotOp operator] : NOT_OP ;
    public NotOp notOperator() throws RecognitionException {
        NotOp operator = null;


        Token NOT_OP420=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2842:5: ( NOT_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2842:7: NOT_OP
            {
            NOT_OP420=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_notOperator18871); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new NotOp(NOT_OP420); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "notOperator"



    // $ANTLR start "equalityExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2846:1: equalityExpression returns [Term term] : ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )? ;
    public Term equalityExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        Term ee2 =null;

        BinaryOperatorExpression equalityOperator421 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2847:5: (ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2847:7: ee1= comparisonExpression ( equalityOperator ee2= comparisonExpression )?
            {
            pushFollow(FOLLOW_comparisonExpression_in_equalityExpression18903);
            ee1=comparisonExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ee1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2849:7: ( equalityOperator ee2= comparisonExpression )?
            int alt254=2;
            int LA254_0 = input.LA(1);

            if ( (LA254_0==EQUAL_OP||LA254_0==IDENTICAL_OP||LA254_0==NOT_EQUAL_OP) ) {
                alt254=1;
            }
            switch (alt254) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2850:9: equalityOperator ee2= comparisonExpression
                    {
                    pushFollow(FOLLOW_equalityOperator_in_equalityExpression18929);
                    equalityOperator421=equalityOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { equalityOperator421.setLeftTerm(term);
                              term = equalityOperator421; }

                    pushFollow(FOLLOW_comparisonExpression_in_equalityExpression18952);
                    ee2=comparisonExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { equalityOperator421.setRightTerm(ee2); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "equalityExpression"



    // $ANTLR start "equalityOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2858:1: equalityOperator returns [BinaryOperatorExpression operator] : ( EQUAL_OP | NOT_EQUAL_OP | IDENTICAL_OP );
    public BinaryOperatorExpression equalityOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token EQUAL_OP422=null;
        Token NOT_EQUAL_OP423=null;
        Token IDENTICAL_OP424=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2859:5: ( EQUAL_OP | NOT_EQUAL_OP | IDENTICAL_OP )
            int alt255=3;
            switch ( input.LA(1) ) {
            case EQUAL_OP:
                {
                alt255=1;
                }
                break;
            case NOT_EQUAL_OP:
                {
                alt255=2;
                }
                break;
            case IDENTICAL_OP:
                {
                alt255=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 255, 0, input);

                throw nvae;

            }

            switch (alt255) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2859:7: EQUAL_OP
                    {
                    EQUAL_OP422=(Token)match(input,EQUAL_OP,FOLLOW_EQUAL_OP_in_equalityOperator18992); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new EqualOp(EQUAL_OP422); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2861:7: NOT_EQUAL_OP
                    {
                    NOT_EQUAL_OP423=(Token)match(input,NOT_EQUAL_OP,FOLLOW_NOT_EQUAL_OP_in_equalityOperator19009); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new NotEqualOp(NOT_EQUAL_OP423); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2863:7: IDENTICAL_OP
                    {
                    IDENTICAL_OP424=(Token)match(input,IDENTICAL_OP,FOLLOW_IDENTICAL_OP_in_equalityOperator19025); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IdenticalOp(IDENTICAL_OP424); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "equalityOperator"



    // $ANTLR start "comparisonExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2867:1: comparisonExpression returns [Term term] : ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )? ;
    public Term comparisonExpression() throws RecognitionException {
        Term term = null;


        Term ee1 =null;

        BinaryOperatorExpression co1 =null;

        Term ee2 =null;

        ComparisonOp lo1 =null;

        Term ee3 =null;

        ComparisonOp so1 =null;

        Term ee4 =null;

        ComparisonOp so2 =null;

        Term ee5 =null;

        TypeOperatorExpression to1 =null;

        StaticType t1 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2868:5: (ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2868:7: ee1= existenceEmptinessExpression (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )?
            {
            pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression19056);
            ee1=existenceEmptinessExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ee1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2870:7: (co1= comparisonOperator ee2= existenceEmptinessExpression |lo1= largerOperator ee3= existenceEmptinessExpression |so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )? |to1= typeOperator t1= type )?
            int alt257=5;
            switch ( input.LA(1) ) {
                case COMPARE_OP:
                case IN_OP:
                    {
                    alt257=1;
                    }
                    break;
                case LARGER_OP:
                case LARGE_AS_OP:
                    {
                    alt257=2;
                    }
                    break;
                case SMALLER_OP:
                case SMALL_AS_OP:
                    {
                    alt257=3;
                    }
                    break;
                case CASE_TYPES:
                case EXTENDS:
                case IS_OP:
                case SATISFIES:
                    {
                    alt257=4;
                    }
                    break;
            }

            switch (alt257) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2871:9: co1= comparisonOperator ee2= existenceEmptinessExpression
                    {
                    pushFollow(FOLLOW_comparisonOperator_in_comparisonExpression19084);
                    co1=comparisonOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { co1.setLeftTerm(term);
                              term = co1; }

                    pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression19107);
                    ee2=existenceEmptinessExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { co1.setRightTerm(ee2); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2876:9: lo1= largerOperator ee3= existenceEmptinessExpression
                    {
                    pushFollow(FOLLOW_largerOperator_in_comparisonExpression19129);
                    lo1=largerOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { lo1.setLeftTerm(term);
                              term = lo1; }

                    pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression19152);
                    ee3=existenceEmptinessExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { lo1.setRightTerm(ee3); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2881:9: so1= smallerOperator ee4= existenceEmptinessExpression (so2= smallerOperator ee5= existenceEmptinessExpression )?
                    {
                    pushFollow(FOLLOW_smallerOperator_in_comparisonExpression19174);
                    so1=smallerOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { so1.setLeftTerm(term);
                              term = so1; }

                    pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression19197);
                    ee4=existenceEmptinessExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { so1.setRightTerm(ee4); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2886:9: (so2= smallerOperator ee5= existenceEmptinessExpression )?
                    int alt256=2;
                    int LA256_0 = input.LA(1);

                    if ( ((LA256_0 >= SMALLER_OP && LA256_0 <= SMALL_AS_OP)) ) {
                        alt256=1;
                    }
                    switch (alt256) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2887:11: so2= smallerOperator ee5= existenceEmptinessExpression
                            {
                            pushFollow(FOLLOW_smallerOperator_in_comparisonExpression19232);
                            so2=smallerOperator();

                            state._fsp--;
                            if (state.failed) return term;

                            pushFollow(FOLLOW_existenceEmptinessExpression_in_comparisonExpression19246);
                            ee5=existenceEmptinessExpression();

                            state._fsp--;
                            if (state.failed) return term;

                            if ( state.backtracking==0 ) { WithinOp w = new WithinOp(null); 
                                        Bound lb = so1 instanceof SmallerOp ?
                                            new OpenBound(null) : new ClosedBound(null);
                                        lb.setTerm(ee1);
                                        Bound ub = so2 instanceof SmallerOp ?
                                            new OpenBound(null) : new ClosedBound(null);
                                        ub.setTerm(ee5);
                                        w.setLowerBound(lb);
                                        w.setUpperBound(ub);
                                        w.setTerm(ee4);
                                        term = w; }

                            }
                            break;

                    }


                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2901:9: to1= typeOperator t1= type
                    {
                    pushFollow(FOLLOW_typeOperator_in_comparisonExpression19281);
                    to1=typeOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { to1.setTerm(ee1); 
                              term = to1; }

                    pushFollow(FOLLOW_type_in_comparisonExpression19303);
                    t1=type();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { to1.setType(t1); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "comparisonExpression"



    // $ANTLR start "smallerOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2915:1: smallerOperator returns [ComparisonOp operator] : ( SMALL_AS_OP | SMALLER_OP );
    public ComparisonOp smallerOperator() throws RecognitionException {
        ComparisonOp operator = null;


        Token SMALL_AS_OP425=null;
        Token SMALLER_OP426=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2916:5: ( SMALL_AS_OP | SMALLER_OP )
            int alt258=2;
            int LA258_0 = input.LA(1);

            if ( (LA258_0==SMALL_AS_OP) ) {
                alt258=1;
            }
            else if ( (LA258_0==SMALLER_OP) ) {
                alt258=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 258, 0, input);

                throw nvae;

            }
            switch (alt258) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2916:7: SMALL_AS_OP
                    {
                    SMALL_AS_OP425=(Token)match(input,SMALL_AS_OP,FOLLOW_SMALL_AS_OP_in_smallerOperator19349); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SmallAsOp(SMALL_AS_OP425); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2918:7: SMALLER_OP
                    {
                    SMALLER_OP426=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_smallerOperator19365); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SmallerOp(SMALLER_OP426); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "smallerOperator"



    // $ANTLR start "largerOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2922:1: largerOperator returns [ComparisonOp operator] : ( LARGE_AS_OP | LARGER_OP );
    public ComparisonOp largerOperator() throws RecognitionException {
        ComparisonOp operator = null;


        Token LARGE_AS_OP427=null;
        Token LARGER_OP428=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2923:5: ( LARGE_AS_OP | LARGER_OP )
            int alt259=2;
            int LA259_0 = input.LA(1);

            if ( (LA259_0==LARGE_AS_OP) ) {
                alt259=1;
            }
            else if ( (LA259_0==LARGER_OP) ) {
                alt259=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 259, 0, input);

                throw nvae;

            }
            switch (alt259) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2923:7: LARGE_AS_OP
                    {
                    LARGE_AS_OP427=(Token)match(input,LARGE_AS_OP,FOLLOW_LARGE_AS_OP_in_largerOperator19394); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new LargeAsOp(LARGE_AS_OP427); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2925:7: LARGER_OP
                    {
                    LARGER_OP428=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_largerOperator19410); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new LargerOp(LARGER_OP428); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "largerOperator"



    // $ANTLR start "comparisonOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2929:1: comparisonOperator returns [BinaryOperatorExpression operator] : ( COMPARE_OP | IN_OP );
    public BinaryOperatorExpression comparisonOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token COMPARE_OP429=null;
        Token IN_OP430=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2930:5: ( COMPARE_OP | IN_OP )
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( (LA260_0==COMPARE_OP) ) {
                alt260=1;
            }
            else if ( (LA260_0==IN_OP) ) {
                alt260=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 260, 0, input);

                throw nvae;

            }
            switch (alt260) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2930:7: COMPARE_OP
                    {
                    COMPARE_OP429=(Token)match(input,COMPARE_OP,FOLLOW_COMPARE_OP_in_comparisonOperator19439); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new CompareOp(COMPARE_OP429); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2932:7: IN_OP
                    {
                    IN_OP430=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_comparisonOperator19456); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new InOp(IN_OP430); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "comparisonOperator"



    // $ANTLR start "typeOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2936:1: typeOperator returns [TypeOperatorExpression operator] : ( IS_OP | EXTENDS | SATISFIES | CASE_TYPES );
    public TypeOperatorExpression typeOperator() throws RecognitionException {
        TypeOperatorExpression operator = null;


        Token IS_OP431=null;
        Token EXTENDS432=null;
        Token SATISFIES433=null;
        Token CASE_TYPES434=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2937:5: ( IS_OP | EXTENDS | SATISFIES | CASE_TYPES )
            int alt261=4;
            switch ( input.LA(1) ) {
            case IS_OP:
                {
                alt261=1;
                }
                break;
            case EXTENDS:
                {
                alt261=2;
                }
                break;
            case SATISFIES:
                {
                alt261=3;
                }
                break;
            case CASE_TYPES:
                {
                alt261=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 261, 0, input);

                throw nvae;

            }

            switch (alt261) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2937:7: IS_OP
                    {
                    IS_OP431=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_typeOperator19485); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IsOp(IS_OP431); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2939:7: EXTENDS
                    {
                    EXTENDS432=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_typeOperator19501); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Extends(EXTENDS432); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2941:7: SATISFIES
                    {
                    SATISFIES433=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_typeOperator19517); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Satisfies(SATISFIES433); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2943:7: CASE_TYPES
                    {
                    CASE_TYPES434=(Token)match(input,CASE_TYPES,FOLLOW_CASE_TYPES_in_typeOperator19533); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new OfOp(CASE_TYPES434); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "typeOperator"



    // $ANTLR start "existenceEmptinessExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2947:1: existenceEmptinessExpression returns [Term term] : de1= entryRangeExpression (eno1= existsNonemptyOperator )? ;
    public Term existenceEmptinessExpression() throws RecognitionException {
        Term term = null;


        Term de1 =null;

        UnaryOperatorExpression eno1 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2948:5: (de1= entryRangeExpression (eno1= existsNonemptyOperator )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2948:7: de1= entryRangeExpression (eno1= existsNonemptyOperator )?
            {
            pushFollow(FOLLOW_entryRangeExpression_in_existenceEmptinessExpression19564);
            de1=entryRangeExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = de1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2950:7: (eno1= existsNonemptyOperator )?
            int alt262=2;
            int LA262_0 = input.LA(1);

            if ( (LA262_0==EXISTS||LA262_0==NONEMPTY) ) {
                alt262=1;
            }
            switch (alt262) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2951:9: eno1= existsNonemptyOperator
                    {
                    pushFollow(FOLLOW_existsNonemptyOperator_in_existenceEmptinessExpression19592);
                    eno1=existsNonemptyOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = eno1;
                              eno1.setTerm(de1); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "existenceEmptinessExpression"



    // $ANTLR start "existsNonemptyOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2961:1: existsNonemptyOperator returns [UnaryOperatorExpression operator] : ( EXISTS | NONEMPTY );
    public UnaryOperatorExpression existsNonemptyOperator() throws RecognitionException {
        UnaryOperatorExpression operator = null;


        Token EXISTS435=null;
        Token NONEMPTY436=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2962:5: ( EXISTS | NONEMPTY )
            int alt263=2;
            int LA263_0 = input.LA(1);

            if ( (LA263_0==EXISTS) ) {
                alt263=1;
            }
            else if ( (LA263_0==NONEMPTY) ) {
                alt263=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 263, 0, input);

                throw nvae;

            }
            switch (alt263) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2962:7: EXISTS
                    {
                    EXISTS435=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_existsNonemptyOperator19638); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Exists(EXISTS435); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2964:7: NONEMPTY
                    {
                    NONEMPTY436=(Token)match(input,NONEMPTY,FOLLOW_NONEMPTY_in_existsNonemptyOperator19655); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new Nonempty(NONEMPTY436); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "existsNonemptyOperator"



    // $ANTLR start "entryRangeExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2968:1: entryRangeExpression returns [Term term] : ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )? ;
    public Term entryRangeExpression() throws RecognitionException {
        Term term = null;


        Term ae1 =null;

        Term ae2 =null;

        BinaryOperatorExpression rangeIntervalEntryOperator437 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2969:5: (ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2969:7: ae1= additiveExpression ( rangeIntervalEntryOperator ae2= additiveExpression )?
            {
            pushFollow(FOLLOW_additiveExpression_in_entryRangeExpression19686);
            ae1=additiveExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ae1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2971:7: ( rangeIntervalEntryOperator ae2= additiveExpression )?
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( (LA264_0==ENTRY_OP||LA264_0==RANGE_OP||LA264_0==SEGMENT_OP) ) {
                alt264=1;
            }
            switch (alt264) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2972:9: rangeIntervalEntryOperator ae2= additiveExpression
                    {
                    pushFollow(FOLLOW_rangeIntervalEntryOperator_in_entryRangeExpression19712);
                    rangeIntervalEntryOperator437=rangeIntervalEntryOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { rangeIntervalEntryOperator437.setLeftTerm(term);
                              term = rangeIntervalEntryOperator437; }

                    pushFollow(FOLLOW_additiveExpression_in_entryRangeExpression19735);
                    ae2=additiveExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { rangeIntervalEntryOperator437.setRightTerm(ae2); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "entryRangeExpression"



    // $ANTLR start "rangeIntervalEntryOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2980:1: rangeIntervalEntryOperator returns [BinaryOperatorExpression operator] : ( RANGE_OP | SEGMENT_OP | ENTRY_OP );
    public BinaryOperatorExpression rangeIntervalEntryOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token RANGE_OP438=null;
        Token SEGMENT_OP439=null;
        Token ENTRY_OP440=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2981:5: ( RANGE_OP | SEGMENT_OP | ENTRY_OP )
            int alt265=3;
            switch ( input.LA(1) ) {
            case RANGE_OP:
                {
                alt265=1;
                }
                break;
            case SEGMENT_OP:
                {
                alt265=2;
                }
                break;
            case ENTRY_OP:
                {
                alt265=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 265, 0, input);

                throw nvae;

            }

            switch (alt265) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2981:7: RANGE_OP
                    {
                    RANGE_OP438=(Token)match(input,RANGE_OP,FOLLOW_RANGE_OP_in_rangeIntervalEntryOperator19775); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RangeOp(RANGE_OP438); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2983:7: SEGMENT_OP
                    {
                    SEGMENT_OP439=(Token)match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_rangeIntervalEntryOperator19792); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SegmentOp(SEGMENT_OP439); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2985:7: ENTRY_OP
                    {
                    ENTRY_OP440=(Token)match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_rangeIntervalEntryOperator19808); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new EntryOp(ENTRY_OP440); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "rangeIntervalEntryOperator"



    // $ANTLR start "additiveExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2989:1: additiveExpression returns [Term term] : me1= scaleExpression ( additiveOperator me2= scaleExpression )* ;
    public Term additiveExpression() throws RecognitionException {
        Term term = null;


        Term me1 =null;

        Term me2 =null;

        BinaryOperatorExpression additiveOperator441 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2990:5: (me1= scaleExpression ( additiveOperator me2= scaleExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2990:7: me1= scaleExpression ( additiveOperator me2= scaleExpression )*
            {
            pushFollow(FOLLOW_scaleExpression_in_additiveExpression19839);
            me1=scaleExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = me1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2992:7: ( additiveOperator me2= scaleExpression )*
            loop266:
            do {
                int alt266=2;
                int LA266_0 = input.LA(1);

                if ( (LA266_0==DIFFERENCE_OP||LA266_0==SUM_OP) ) {
                    alt266=1;
                }


                switch (alt266) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2993:9: additiveOperator me2= scaleExpression
            	    {
            	    pushFollow(FOLLOW_additiveOperator_in_additiveExpression19865);
            	    additiveOperator441=additiveOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { additiveOperator441.setLeftTerm(term);
            	              term = additiveOperator441; }

            	    pushFollow(FOLLOW_scaleExpression_in_additiveExpression19888);
            	    me2=scaleExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { additiveOperator441.setRightTerm(me2); }

            	    }
            	    break;

            	default :
            	    break loop266;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "additiveExpression"



    // $ANTLR start "additiveOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3001:1: additiveOperator returns [BinaryOperatorExpression operator] : ( SUM_OP | DIFFERENCE_OP );
    public BinaryOperatorExpression additiveOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token SUM_OP442=null;
        Token DIFFERENCE_OP443=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3002:5: ( SUM_OP | DIFFERENCE_OP )
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==SUM_OP) ) {
                alt267=1;
            }
            else if ( (LA267_0==DIFFERENCE_OP) ) {
                alt267=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 267, 0, input);

                throw nvae;

            }
            switch (alt267) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3002:7: SUM_OP
                    {
                    SUM_OP442=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_additiveOperator19928); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new SumOp(SUM_OP442); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3004:7: DIFFERENCE_OP
                    {
                    DIFFERENCE_OP443=(Token)match(input,DIFFERENCE_OP,FOLLOW_DIFFERENCE_OP_in_additiveOperator19945); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DifferenceOp(DIFFERENCE_OP443); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "additiveOperator"



    // $ANTLR start "scaleExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3008:1: scaleExpression returns [Term term] : multiplicativeExpression ( scaleOperator se= scaleExpression )? ;
    public Term scaleExpression() throws RecognitionException {
        Term term = null;


        Term se =null;

        Term multiplicativeExpression444 =null;

        ScaleOp scaleOperator445 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3009:5: ( multiplicativeExpression ( scaleOperator se= scaleExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3009:7: multiplicativeExpression ( scaleOperator se= scaleExpression )?
            {
            pushFollow(FOLLOW_multiplicativeExpression_in_scaleExpression19974);
            multiplicativeExpression444=multiplicativeExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = multiplicativeExpression444; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3011:7: ( scaleOperator se= scaleExpression )?
            int alt268=2;
            int LA268_0 = input.LA(1);

            if ( (LA268_0==SCALE_OP) ) {
                alt268=1;
            }
            switch (alt268) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3012:9: scaleOperator se= scaleExpression
                    {
                    pushFollow(FOLLOW_scaleOperator_in_scaleExpression20000);
                    scaleOperator445=scaleOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { scaleOperator445.setLeftTerm(term);
                              term = scaleOperator445; }

                    pushFollow(FOLLOW_scaleExpression_in_scaleExpression20022);
                    se=scaleExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { scaleOperator445.setRightTerm(se); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "scaleExpression"



    // $ANTLR start "multiplicativeExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3020:1: multiplicativeExpression returns [Term term] : ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )* ;
    public Term multiplicativeExpression() throws RecognitionException {
        Term term = null;


        Term ue1 =null;

        Term ue2 =null;

        BinaryOperatorExpression multiplicativeOperator446 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3021:5: (ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3021:7: ue1= unionExpression ( multiplicativeOperator ue2= unionExpression )*
            {
            pushFollow(FOLLOW_unionExpression_in_multiplicativeExpression20064);
            ue1=unionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ue1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3023:7: ( multiplicativeOperator ue2= unionExpression )*
            loop269:
            do {
                int alt269=2;
                int LA269_0 = input.LA(1);

                if ( ((LA269_0 >= PRODUCT_OP && LA269_0 <= QUOTIENT_OP)||LA269_0==REMAINDER_OP) ) {
                    alt269=1;
                }


                switch (alt269) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3024:9: multiplicativeOperator ue2= unionExpression
            	    {
            	    pushFollow(FOLLOW_multiplicativeOperator_in_multiplicativeExpression20090);
            	    multiplicativeOperator446=multiplicativeOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { multiplicativeOperator446.setLeftTerm(term);
            	              term = multiplicativeOperator446; }

            	    pushFollow(FOLLOW_unionExpression_in_multiplicativeExpression20113);
            	    ue2=unionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { multiplicativeOperator446.setRightTerm(ue2); }

            	    }
            	    break;

            	default :
            	    break loop269;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "multiplicativeExpression"



    // $ANTLR start "multiplicativeOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3032:1: multiplicativeOperator returns [BinaryOperatorExpression operator] : ( PRODUCT_OP | QUOTIENT_OP | REMAINDER_OP );
    public BinaryOperatorExpression multiplicativeOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token PRODUCT_OP447=null;
        Token QUOTIENT_OP448=null;
        Token REMAINDER_OP449=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3033:5: ( PRODUCT_OP | QUOTIENT_OP | REMAINDER_OP )
            int alt270=3;
            switch ( input.LA(1) ) {
            case PRODUCT_OP:
                {
                alt270=1;
                }
                break;
            case QUOTIENT_OP:
                {
                alt270=2;
                }
                break;
            case REMAINDER_OP:
                {
                alt270=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 270, 0, input);

                throw nvae;

            }

            switch (alt270) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3033:7: PRODUCT_OP
                    {
                    PRODUCT_OP447=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_multiplicativeOperator20153); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ProductOp(PRODUCT_OP447); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3035:7: QUOTIENT_OP
                    {
                    QUOTIENT_OP448=(Token)match(input,QUOTIENT_OP,FOLLOW_QUOTIENT_OP_in_multiplicativeOperator20170); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new QuotientOp(QUOTIENT_OP448); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3037:7: REMAINDER_OP
                    {
                    REMAINDER_OP449=(Token)match(input,REMAINDER_OP,FOLLOW_REMAINDER_OP_in_multiplicativeOperator20186); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new RemainderOp(REMAINDER_OP449); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "multiplicativeOperator"



    // $ANTLR start "unionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3041:1: unionExpression returns [Term term] : ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )* ;
    public Term unionExpression() throws RecognitionException {
        Term term = null;


        Term ie1 =null;

        Term ie2 =null;

        BinaryOperatorExpression unionOperator450 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3042:5: (ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3042:7: ie1= intersectionExpression ( unionOperator ie2= intersectionExpression )*
            {
            pushFollow(FOLLOW_intersectionExpression_in_unionExpression20217);
            ie1=intersectionExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ie1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3044:7: ( unionOperator ie2= intersectionExpression )*
            loop271:
            do {
                int alt271=2;
                int LA271_0 = input.LA(1);

                if ( (LA271_0==COMPLEMENT_OP||LA271_0==UNION_OP) ) {
                    alt271=1;
                }


                switch (alt271) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3045:9: unionOperator ie2= intersectionExpression
            	    {
            	    pushFollow(FOLLOW_unionOperator_in_unionExpression20243);
            	    unionOperator450=unionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { unionOperator450.setLeftTerm(term);
            	              term = unionOperator450; }

            	    pushFollow(FOLLOW_intersectionExpression_in_unionExpression20266);
            	    ie2=intersectionExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { unionOperator450.setRightTerm(ie2); }

            	    }
            	    break;

            	default :
            	    break loop271;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "unionExpression"



    // $ANTLR start "unionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3053:1: unionOperator returns [BinaryOperatorExpression operator] : ( UNION_OP | COMPLEMENT_OP );
    public BinaryOperatorExpression unionOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token UNION_OP451=null;
        Token COMPLEMENT_OP452=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3054:5: ( UNION_OP | COMPLEMENT_OP )
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( (LA272_0==UNION_OP) ) {
                alt272=1;
            }
            else if ( (LA272_0==COMPLEMENT_OP) ) {
                alt272=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 272, 0, input);

                throw nvae;

            }
            switch (alt272) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3054:7: UNION_OP
                    {
                    UNION_OP451=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_unionOperator20310); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new UnionOp(UNION_OP451); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3056:7: COMPLEMENT_OP
                    {
                    COMPLEMENT_OP452=(Token)match(input,COMPLEMENT_OP,FOLLOW_COMPLEMENT_OP_in_unionOperator20326); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new ComplementOp(COMPLEMENT_OP452); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "unionOperator"



    // $ANTLR start "intersectionExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3060:1: intersectionExpression returns [Term term] : ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )* ;
    public Term intersectionExpression() throws RecognitionException {
        Term term = null;


        Term ne1 =null;

        Term ne2 =null;

        BinaryOperatorExpression intersectionOperator453 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3061:5: (ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3061:7: ne1= negationComplementExpression ( intersectionOperator ne2= negationComplementExpression )*
            {
            pushFollow(FOLLOW_negationComplementExpression_in_intersectionExpression20357);
            ne1=negationComplementExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = ne1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3063:7: ( intersectionOperator ne2= negationComplementExpression )*
            loop273:
            do {
                int alt273=2;
                int LA273_0 = input.LA(1);

                if ( (LA273_0==INTERSECTION_OP) ) {
                    alt273=1;
                }


                switch (alt273) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3064:9: intersectionOperator ne2= negationComplementExpression
            	    {
            	    pushFollow(FOLLOW_intersectionOperator_in_intersectionExpression20383);
            	    intersectionOperator453=intersectionOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { intersectionOperator453.setLeftTerm(term);
            	              term = intersectionOperator453; }

            	    pushFollow(FOLLOW_negationComplementExpression_in_intersectionExpression20406);
            	    ne2=negationComplementExpression();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { intersectionOperator453.setRightTerm(ne2); }

            	    }
            	    break;

            	default :
            	    break loop273;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "intersectionExpression"



    // $ANTLR start "intersectionOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3072:1: intersectionOperator returns [BinaryOperatorExpression operator] : INTERSECTION_OP ;
    public BinaryOperatorExpression intersectionOperator() throws RecognitionException {
        BinaryOperatorExpression operator = null;


        Token INTERSECTION_OP454=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3073:5: ( INTERSECTION_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3073:7: INTERSECTION_OP
            {
            INTERSECTION_OP454=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_intersectionOperator20450); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new IntersectionOp(INTERSECTION_OP454); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "intersectionOperator"



    // $ANTLR start "negationComplementExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3077:1: negationComplementExpression returns [Term term] : ( unaryMinusOrComplementOperator ne= negationComplementExpression | exponentiationExpression );
    public Term negationComplementExpression() throws RecognitionException {
        Term term = null;


        Term ne =null;

        UnaryOperatorExpression unaryMinusOrComplementOperator455 =null;

        Term exponentiationExpression456 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3078:5: ( unaryMinusOrComplementOperator ne= negationComplementExpression | exponentiationExpression )
            int alt274=2;
            int LA274_0 = input.LA(1);

            if ( (LA274_0==DIFFERENCE_OP||LA274_0==SUM_OP) ) {
                alt274=1;
            }
            else if ( (LA274_0==BACKTICK||LA274_0==CHAR_LITERAL||LA274_0==DECREMENT_OP||LA274_0==DYNAMIC||LA274_0==FLOAT_LITERAL||LA274_0==INCREMENT_OP||(LA274_0 >= LBRACE && LA274_0 <= LBRACKET)||LA274_0==LIDENTIFIER||LA274_0==LPAREN||LA274_0==NATURAL_LITERAL||LA274_0==OBJECT_DEFINITION||(LA274_0 >= OUTER && LA274_0 <= PACKAGE)||LA274_0==STRING_LITERAL||LA274_0==STRING_START||LA274_0==SUPER||LA274_0==THIS||LA274_0==UIDENTIFIER||LA274_0==VERBATIM_STRING) ) {
                alt274=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                    new NoViableAltException("", 274, 0, input);

                throw nvae;

            }
            switch (alt274) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3078:7: unaryMinusOrComplementOperator ne= negationComplementExpression
                    {
                    pushFollow(FOLLOW_unaryMinusOrComplementOperator_in_negationComplementExpression20479);
                    unaryMinusOrComplementOperator455=unaryMinusOrComplementOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = unaryMinusOrComplementOperator455; }

                    pushFollow(FOLLOW_negationComplementExpression_in_negationComplementExpression20498);
                    ne=negationComplementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { unaryMinusOrComplementOperator455.setTerm(ne); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3082:7: exponentiationExpression
                    {
                    pushFollow(FOLLOW_exponentiationExpression_in_negationComplementExpression20514);
                    exponentiationExpression456=exponentiationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = exponentiationExpression456; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "negationComplementExpression"



    // $ANTLR start "unaryMinusOrComplementOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3086:1: unaryMinusOrComplementOperator returns [UnaryOperatorExpression operator] : ( DIFFERENCE_OP | SUM_OP );
    public UnaryOperatorExpression unaryMinusOrComplementOperator() throws RecognitionException {
        UnaryOperatorExpression operator = null;


        Token DIFFERENCE_OP457=null;
        Token SUM_OP458=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3087:5: ( DIFFERENCE_OP | SUM_OP )
            int alt275=2;
            int LA275_0 = input.LA(1);

            if ( (LA275_0==DIFFERENCE_OP) ) {
                alt275=1;
            }
            else if ( (LA275_0==SUM_OP) ) {
                alt275=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 275, 0, input);

                throw nvae;

            }
            switch (alt275) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3087:7: DIFFERENCE_OP
                    {
                    DIFFERENCE_OP457=(Token)match(input,DIFFERENCE_OP,FOLLOW_DIFFERENCE_OP_in_unaryMinusOrComplementOperator20543); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new NegativeOp(DIFFERENCE_OP457); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3089:7: SUM_OP
                    {
                    SUM_OP458=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_unaryMinusOrComplementOperator20560); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PositiveOp(SUM_OP458); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "unaryMinusOrComplementOperator"



    // $ANTLR start "exponentiationExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3093:1: exponentiationExpression returns [Term term] : incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )? ;
    public Term exponentiationExpression() throws RecognitionException {
        Term term = null;


        Term ee =null;

        Term incrementDecrementExpression459 =null;

        PowerOp exponentiationOperator460 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3094:5: ( incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3094:7: incrementDecrementExpression ( exponentiationOperator ee= exponentiationExpression )?
            {
            pushFollow(FOLLOW_incrementDecrementExpression_in_exponentiationExpression20589);
            incrementDecrementExpression459=incrementDecrementExpression();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = incrementDecrementExpression459; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3096:7: ( exponentiationOperator ee= exponentiationExpression )?
            int alt276=2;
            int LA276_0 = input.LA(1);

            if ( (LA276_0==POWER_OP) ) {
                alt276=1;
            }
            switch (alt276) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3097:9: exponentiationOperator ee= exponentiationExpression
                    {
                    pushFollow(FOLLOW_exponentiationOperator_in_exponentiationExpression20615);
                    exponentiationOperator460=exponentiationOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { exponentiationOperator460.setLeftTerm(term);
                              term = exponentiationOperator460; }

                    pushFollow(FOLLOW_exponentiationExpression_in_exponentiationExpression20637);
                    ee=exponentiationExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { exponentiationOperator460.setRightTerm(ee); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "exponentiationExpression"



    // $ANTLR start "exponentiationOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3105:1: exponentiationOperator returns [PowerOp operator] : POWER_OP ;
    public PowerOp exponentiationOperator() throws RecognitionException {
        PowerOp operator = null;


        Token POWER_OP461=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3106:5: ( POWER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3106:7: POWER_OP
            {
            POWER_OP461=(Token)match(input,POWER_OP,FOLLOW_POWER_OP_in_exponentiationOperator20677); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new PowerOp(POWER_OP461); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "exponentiationOperator"



    // $ANTLR start "scaleOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3110:1: scaleOperator returns [ScaleOp operator] : SCALE_OP ;
    public ScaleOp scaleOperator() throws RecognitionException {
        ScaleOp operator = null;


        Token SCALE_OP462=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3111:5: ( SCALE_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3111:7: SCALE_OP
            {
            SCALE_OP462=(Token)match(input,SCALE_OP,FOLLOW_SCALE_OP_in_scaleOperator20707); if (state.failed) return operator;

            if ( state.backtracking==0 ) { operator = new ScaleOp(SCALE_OP462); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "scaleOperator"



    // $ANTLR start "incrementDecrementExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3115:1: incrementDecrementExpression returns [Term term] : ( prefixOperator ie= incrementDecrementExpression | postfixIncrementDecrementExpression );
    public Term incrementDecrementExpression() throws RecognitionException {
        Term term = null;


        Term ie =null;

        PrefixOperatorExpression prefixOperator463 =null;

        Term postfixIncrementDecrementExpression464 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3116:5: ( prefixOperator ie= incrementDecrementExpression | postfixIncrementDecrementExpression )
            int alt277=2;
            int LA277_0 = input.LA(1);

            if ( (LA277_0==DECREMENT_OP||LA277_0==INCREMENT_OP) ) {
                alt277=1;
            }
            else if ( (LA277_0==BACKTICK||LA277_0==CHAR_LITERAL||LA277_0==DYNAMIC||LA277_0==FLOAT_LITERAL||(LA277_0 >= LBRACE && LA277_0 <= LBRACKET)||LA277_0==LIDENTIFIER||LA277_0==LPAREN||LA277_0==NATURAL_LITERAL||LA277_0==OBJECT_DEFINITION||(LA277_0 >= OUTER && LA277_0 <= PACKAGE)||LA277_0==STRING_LITERAL||LA277_0==STRING_START||LA277_0==SUPER||LA277_0==THIS||LA277_0==UIDENTIFIER||LA277_0==VERBATIM_STRING) ) {
                alt277=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return term;}
                NoViableAltException nvae =
                    new NoViableAltException("", 277, 0, input);

                throw nvae;

            }
            switch (alt277) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3116:7: prefixOperator ie= incrementDecrementExpression
                    {
                    pushFollow(FOLLOW_prefixOperator_in_incrementDecrementExpression20737);
                    prefixOperator463=prefixOperator();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = prefixOperator463; }

                    pushFollow(FOLLOW_incrementDecrementExpression_in_incrementDecrementExpression20755);
                    ie=incrementDecrementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { prefixOperator463.setTerm(ie); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3120:7: postfixIncrementDecrementExpression
                    {
                    pushFollow(FOLLOW_postfixIncrementDecrementExpression_in_incrementDecrementExpression20771);
                    postfixIncrementDecrementExpression464=postfixIncrementDecrementExpression();

                    state._fsp--;
                    if (state.failed) return term;

                    if ( state.backtracking==0 ) { term = postfixIncrementDecrementExpression464; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "incrementDecrementExpression"



    // $ANTLR start "prefixOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3124:1: prefixOperator returns [PrefixOperatorExpression operator] : ( DECREMENT_OP | INCREMENT_OP );
    public PrefixOperatorExpression prefixOperator() throws RecognitionException {
        PrefixOperatorExpression operator = null;


        Token DECREMENT_OP465=null;
        Token INCREMENT_OP466=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3125:5: ( DECREMENT_OP | INCREMENT_OP )
            int alt278=2;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==DECREMENT_OP) ) {
                alt278=1;
            }
            else if ( (LA278_0==INCREMENT_OP) ) {
                alt278=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 278, 0, input);

                throw nvae;

            }
            switch (alt278) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3125:7: DECREMENT_OP
                    {
                    DECREMENT_OP465=(Token)match(input,DECREMENT_OP,FOLLOW_DECREMENT_OP_in_prefixOperator20800); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new DecrementOp(DECREMENT_OP465); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3127:7: INCREMENT_OP
                    {
                    INCREMENT_OP466=(Token)match(input,INCREMENT_OP,FOLLOW_INCREMENT_OP_in_prefixOperator20817); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new IncrementOp(INCREMENT_OP466); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "prefixOperator"



    // $ANTLR start "postfixIncrementDecrementExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3131:1: postfixIncrementDecrementExpression returns [Term term] : primary ( postfixOperator )* ;
    public Term postfixIncrementDecrementExpression() throws RecognitionException {
        Term term = null;


        Primary primary467 =null;

        PostfixOperatorExpression postfixOperator468 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3132:5: ( primary ( postfixOperator )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3132:7: primary ( postfixOperator )*
            {
            pushFollow(FOLLOW_primary_in_postfixIncrementDecrementExpression20847);
            primary467=primary();

            state._fsp--;
            if (state.failed) return term;

            if ( state.backtracking==0 ) { term = primary467; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3134:7: ( postfixOperator )*
            loop279:
            do {
                int alt279=2;
                int LA279_0 = input.LA(1);

                if ( (LA279_0==DECREMENT_OP||LA279_0==INCREMENT_OP) ) {
                    alt279=1;
                }


                switch (alt279) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3135:9: postfixOperator
            	    {
            	    pushFollow(FOLLOW_postfixOperator_in_postfixIncrementDecrementExpression20875);
            	    postfixOperator468=postfixOperator();

            	    state._fsp--;
            	    if (state.failed) return term;

            	    if ( state.backtracking==0 ) { postfixOperator468.setTerm(term);
            	              term = postfixOperator468; }

            	    }
            	    break;

            	default :
            	    break loop279;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return term;
    }
    // $ANTLR end "postfixIncrementDecrementExpression"



    // $ANTLR start "postfixOperator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3141:1: postfixOperator returns [PostfixOperatorExpression operator] : ( DECREMENT_OP | INCREMENT_OP );
    public PostfixOperatorExpression postfixOperator() throws RecognitionException {
        PostfixOperatorExpression operator = null;


        Token DECREMENT_OP469=null;
        Token INCREMENT_OP470=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3142:5: ( DECREMENT_OP | INCREMENT_OP )
            int alt280=2;
            int LA280_0 = input.LA(1);

            if ( (LA280_0==DECREMENT_OP) ) {
                alt280=1;
            }
            else if ( (LA280_0==INCREMENT_OP) ) {
                alt280=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return operator;}
                NoViableAltException nvae =
                    new NoViableAltException("", 280, 0, input);

                throw nvae;

            }
            switch (alt280) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3142:7: DECREMENT_OP
                    {
                    DECREMENT_OP469=(Token)match(input,DECREMENT_OP,FOLLOW_DECREMENT_OP_in_postfixOperator20915); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PostfixDecrementOp(DECREMENT_OP469); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3144:7: INCREMENT_OP
                    {
                    INCREMENT_OP470=(Token)match(input,INCREMENT_OP,FOLLOW_INCREMENT_OP_in_postfixOperator20932); if (state.failed) return operator;

                    if ( state.backtracking==0 ) { operator = new PostfixIncrementOp(INCREMENT_OP470); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return operator;
    }
    // $ANTLR end "postfixOperator"



    // $ANTLR start "selfReference"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3148:1: selfReference returns [Atom atom] : ( THIS | SUPER | OUTER | PACKAGE );
    public Atom selfReference() throws RecognitionException {
        Atom atom = null;


        Token THIS471=null;
        Token SUPER472=null;
        Token OUTER473=null;
        Token PACKAGE474=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3149:5: ( THIS | SUPER | OUTER | PACKAGE )
            int alt281=4;
            switch ( input.LA(1) ) {
            case THIS:
                {
                alt281=1;
                }
                break;
            case SUPER:
                {
                alt281=2;
                }
                break;
            case OUTER:
                {
                alt281=3;
                }
                break;
            case PACKAGE:
                {
                alt281=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return atom;}
                NoViableAltException nvae =
                    new NoViableAltException("", 281, 0, input);

                throw nvae;

            }

            switch (alt281) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3149:7: THIS
                    {
                    THIS471=(Token)match(input,THIS,FOLLOW_THIS_in_selfReference20962); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new This(THIS471); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3151:7: SUPER
                    {
                    SUPER472=(Token)match(input,SUPER,FOLLOW_SUPER_in_selfReference20978); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Super(SUPER472); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3153:7: OUTER
                    {
                    OUTER473=(Token)match(input,OUTER,FOLLOW_OUTER_in_selfReference20995); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Outer(OUTER473); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3155:7: PACKAGE
                    {
                    PACKAGE474=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_selfReference21011); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom = new Package(PACKAGE474); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return atom;
    }
    // $ANTLR end "selfReference"



    // $ANTLR start "nonstringLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3159:1: nonstringLiteral returns [Literal literal] : ( NATURAL_LITERAL | FLOAT_LITERAL | CHAR_LITERAL );
    public Literal nonstringLiteral() throws RecognitionException {
        Literal literal = null;


        Token NATURAL_LITERAL475=null;
        Token FLOAT_LITERAL476=null;
        Token CHAR_LITERAL477=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3160:5: ( NATURAL_LITERAL | FLOAT_LITERAL | CHAR_LITERAL )
            int alt282=3;
            switch ( input.LA(1) ) {
            case NATURAL_LITERAL:
                {
                alt282=1;
                }
                break;
            case FLOAT_LITERAL:
                {
                alt282=2;
                }
                break;
            case CHAR_LITERAL:
                {
                alt282=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return literal;}
                NoViableAltException nvae =
                    new NoViableAltException("", 282, 0, input);

                throw nvae;

            }

            switch (alt282) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3160:7: NATURAL_LITERAL
                    {
                    NATURAL_LITERAL475=(Token)match(input,NATURAL_LITERAL,FOLLOW_NATURAL_LITERAL_in_nonstringLiteral21044); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new NaturalLiteral(NATURAL_LITERAL475); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3162:7: FLOAT_LITERAL
                    {
                    FLOAT_LITERAL476=(Token)match(input,FLOAT_LITERAL,FOLLOW_FLOAT_LITERAL_in_nonstringLiteral21061); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new FloatLiteral(FLOAT_LITERAL476); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3164:7: CHAR_LITERAL
                    {
                    CHAR_LITERAL477=(Token)match(input,CHAR_LITERAL,FOLLOW_CHAR_LITERAL_in_nonstringLiteral21078); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new CharLiteral(CHAR_LITERAL477); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "nonstringLiteral"



    // $ANTLR start "stringLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3168:1: stringLiteral returns [StringLiteral stringLiteral] : ( STRING_LITERAL | VERBATIM_STRING );
    public StringLiteral stringLiteral() throws RecognitionException {
        StringLiteral stringLiteral = null;


        Token STRING_LITERAL478=null;
        Token VERBATIM_STRING479=null;

        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3169:5: ( STRING_LITERAL | VERBATIM_STRING )
            int alt283=2;
            int LA283_0 = input.LA(1);

            if ( (LA283_0==STRING_LITERAL) ) {
                alt283=1;
            }
            else if ( (LA283_0==VERBATIM_STRING) ) {
                alt283=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return stringLiteral;}
                NoViableAltException nvae =
                    new NoViableAltException("", 283, 0, input);

                throw nvae;

            }
            switch (alt283) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3169:7: STRING_LITERAL
                    {
                    STRING_LITERAL478=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_stringLiteral21108); if (state.failed) return stringLiteral;

                    if ( state.backtracking==0 ) { stringLiteral = new StringLiteral(STRING_LITERAL478); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3171:7: VERBATIM_STRING
                    {
                    VERBATIM_STRING479=(Token)match(input,VERBATIM_STRING,FOLLOW_VERBATIM_STRING_in_stringLiteral21125); if (state.failed) return stringLiteral;

                    if ( state.backtracking==0 ) { stringLiteral = new StringLiteral(VERBATIM_STRING479); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return stringLiteral;
    }
    // $ANTLR end "stringLiteral"



    // $ANTLR start "stringExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3175:1: stringExpression returns [Atom atom] : (sl1= stringLiteral | STRING_START e1= functionOrExpression ( STRING_MID e2= functionOrExpression )* STRING_END );
    public Atom stringExpression() throws RecognitionException {
        Atom atom = null;


        Token STRING_START480=null;
        Token STRING_MID481=null;
        Token STRING_END482=null;
        StringLiteral sl1 =null;

        Expression e1 =null;

        Expression e2 =null;


         StringTemplate st=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3177:5: (sl1= stringLiteral | STRING_START e1= functionOrExpression ( STRING_MID e2= functionOrExpression )* STRING_END )
            int alt285=2;
            int LA285_0 = input.LA(1);

            if ( (LA285_0==STRING_LITERAL||LA285_0==VERBATIM_STRING) ) {
                alt285=1;
            }
            else if ( (LA285_0==STRING_START) ) {
                alt285=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return atom;}
                NoViableAltException nvae =
                    new NoViableAltException("", 285, 0, input);

                throw nvae;

            }
            switch (alt285) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3177:7: sl1= stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_stringExpression21165);
                    sl1=stringLiteral();

                    state._fsp--;
                    if (state.failed) return atom;

                    if ( state.backtracking==0 ) { atom =sl1; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3179:7: STRING_START e1= functionOrExpression ( STRING_MID e2= functionOrExpression )* STRING_END
                    {
                    STRING_START480=(Token)match(input,STRING_START,FOLLOW_STRING_START_in_stringExpression21181); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { st = new StringTemplate(null);
                            st.addStringLiteral(new StringLiteral(STRING_START480));
                            atom =st; }

                    pushFollow(FOLLOW_functionOrExpression_in_stringExpression21199);
                    e1=functionOrExpression();

                    state._fsp--;
                    if (state.failed) return atom;

                    if ( state.backtracking==0 ) { if (e1!=null) 
                                st.addExpression(e1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3186:7: ( STRING_MID e2= functionOrExpression )*
                    loop284:
                    do {
                        int alt284=2;
                        int LA284_0 = input.LA(1);

                        if ( (LA284_0==STRING_MID) ) {
                            alt284=1;
                        }


                        switch (alt284) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3187:9: STRING_MID e2= functionOrExpression
                    	    {
                    	    STRING_MID481=(Token)match(input,STRING_MID,FOLLOW_STRING_MID_in_stringExpression21225); if (state.failed) return atom;

                    	    if ( state.backtracking==0 ) { st.addStringLiteral(new StringLiteral(STRING_MID481)); }

                    	    pushFollow(FOLLOW_functionOrExpression_in_stringExpression21247);
                    	    e2=functionOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return atom;

                    	    if ( state.backtracking==0 ) { if (e2!=null) 
                    	                  st.addExpression(e2); }

                    	    }
                    	    break;

                    	default :
                    	    break loop284;
                        }
                    } while (true);


                    STRING_END482=(Token)match(input,STRING_END,FOLLOW_STRING_END_in_stringExpression21274); if (state.failed) return atom;

                    if ( state.backtracking==0 ) { st.addStringLiteral(new StringLiteral(STRING_END482)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return atom;
    }
    // $ANTLR end "stringExpression"



    // $ANTLR start "typeArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3197:1: typeArguments returns [TypeArgumentList typeArgumentList] : SMALLER_OP ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )? LARGER_OP ;
    public TypeArgumentList typeArguments() throws RecognitionException {
        TypeArgumentList typeArgumentList = null;


        Token c=null;
        Token SMALLER_OP483=null;
        Token LARGER_OP484=null;
        TypeVariance v1 =null;

        StaticType ta1 =null;

        StaticType ta0 =null;

        TypeVariance v2 =null;

        StaticType ta2 =null;

        StaticType ta3 =null;


         TypeVariance v=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3199:5: ( SMALLER_OP ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )? LARGER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3199:7: SMALLER_OP ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )? LARGER_OP
            {
            SMALLER_OP483=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_typeArguments21312); if (state.failed) return typeArgumentList;

            if ( state.backtracking==0 ) { typeArgumentList = new TypeArgumentList(SMALLER_OP483); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3201:7: ( (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )* )?
            int alt292=2;
            int LA292_0 = input.LA(1);

            if ( (LA292_0==IN_OP||(LA292_0 >= LBRACE && LA292_0 <= LBRACKET)||LA292_0==OUT||LA292_0==PACKAGE||LA292_0==SMALLER_OP||LA292_0==UIDENTIFIER) ) {
                alt292=1;
            }
            switch (alt292) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3202:9: (v1= variance (ta1= type )? |ta0= type ) (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )*
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3202:9: (v1= variance (ta1= type )? |ta0= type )
                    int alt287=2;
                    int LA287_0 = input.LA(1);

                    if ( (LA287_0==IN_OP||LA287_0==OUT) ) {
                        alt287=1;
                    }
                    else if ( ((LA287_0 >= LBRACE && LA287_0 <= LBRACKET)||LA287_0==PACKAGE||LA287_0==SMALLER_OP||LA287_0==UIDENTIFIER) ) {
                        alt287=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 287, 0, input);

                        throw nvae;

                    }
                    switch (alt287) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3203:11: v1= variance (ta1= type )?
                            {
                            pushFollow(FOLLOW_variance_in_typeArguments21352);
                            v1=variance();

                            state._fsp--;
                            if (state.failed) return typeArgumentList;

                            if ( state.backtracking==0 ) { v = v1; }

                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3205:11: (ta1= type )?
                            int alt286=2;
                            int LA286_0 = input.LA(1);

                            if ( ((LA286_0 >= LBRACE && LA286_0 <= LBRACKET)||LA286_0==PACKAGE||LA286_0==SMALLER_OP||LA286_0==UIDENTIFIER) ) {
                                alt286=1;
                            }
                            switch (alt286) {
                                case 1 :
                                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3206:13: ta1= type
                                    {
                                    pushFollow(FOLLOW_type_in_typeArguments21392);
                                    ta1=type();

                                    state._fsp--;
                                    if (state.failed) return typeArgumentList;

                                    if ( state.backtracking==0 ) { if (ta1!=null)
                                                      typeArgumentList.addType(ta1);
                                                  if (v!=null && ta1!=null) 
                                                      ta1.setTypeVariance(v); }

                                    }
                                    break;

                            }


                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3213:11: ta0= type
                            {
                            pushFollow(FOLLOW_type_in_typeArguments21443);
                            ta0=type();

                            state._fsp--;
                            if (state.failed) return typeArgumentList;

                            if ( state.backtracking==0 ) { if (ta0!=null)
                                            typeArgumentList.addType(ta0); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3217:9: (c= COMMA (v2= variance (ta2= type |) | (ta3= type |) ) )*
                    loop291:
                    do {
                        int alt291=2;
                        int LA291_0 = input.LA(1);

                        if ( (LA291_0==COMMA) ) {
                            alt291=1;
                        }


                        switch (alt291) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3218:11: c= COMMA (v2= variance (ta2= type |) | (ta3= type |) )
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_typeArguments21489); if (state.failed) return typeArgumentList;

                    	    if ( state.backtracking==0 ) { typeArgumentList.setEndToken(c); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3220:11: (v2= variance (ta2= type |) | (ta3= type |) )
                    	    int alt290=2;
                    	    int LA290_0 = input.LA(1);

                    	    if ( (LA290_0==IN_OP||LA290_0==OUT) ) {
                    	        alt290=1;
                    	    }
                    	    else if ( (LA290_0==COMMA||LA290_0==LARGER_OP||(LA290_0 >= LBRACE && LA290_0 <= LBRACKET)||LA290_0==PACKAGE||LA290_0==SMALLER_OP||LA290_0==UIDENTIFIER) ) {
                    	        alt290=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 290, 0, input);

                    	        throw nvae;

                    	    }
                    	    switch (alt290) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3221:13: v2= variance (ta2= type |)
                    	            {
                    	            pushFollow(FOLLOW_variance_in_typeArguments21529);
                    	            v2=variance();

                    	            state._fsp--;
                    	            if (state.failed) return typeArgumentList;

                    	            if ( state.backtracking==0 ) { v = v2; }

                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3223:13: (ta2= type |)
                    	            int alt288=2;
                    	            int LA288_0 = input.LA(1);

                    	            if ( ((LA288_0 >= LBRACE && LA288_0 <= LBRACKET)||LA288_0==PACKAGE||LA288_0==SMALLER_OP||LA288_0==UIDENTIFIER) ) {
                    	                alt288=1;
                    	            }
                    	            else if ( (LA288_0==COMMA||LA288_0==LARGER_OP) ) {
                    	                alt288=2;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 288, 0, input);

                    	                throw nvae;

                    	            }
                    	            switch (alt288) {
                    	                case 1 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3224:15: ta2= type
                    	                    {
                    	                    pushFollow(FOLLOW_type_in_typeArguments21575);
                    	                    ta2=type();

                    	                    state._fsp--;
                    	                    if (state.failed) return typeArgumentList;

                    	                    if ( state.backtracking==0 ) { if (ta2!=null) {
                    	                                        typeArgumentList.addType(ta2);
                    	                                        if (v!=null && ta2!=null) 
                    	                                            ta2.setTypeVariance(v);
                    	                                        typeArgumentList.setEndToken(null); } }

                    	                    }
                    	                    break;
                    	                case 2 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3230:15: 
                    	                    {
                    	                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                                          new MismatchedTokenException(UIDENTIFIER, input)); }

                    	                    }
                    	                    break;

                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3234:13: (ta3= type |)
                    	            {
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3234:13: (ta3= type |)
                    	            int alt289=2;
                    	            int LA289_0 = input.LA(1);

                    	            if ( ((LA289_0 >= LBRACE && LA289_0 <= LBRACKET)||LA289_0==PACKAGE||LA289_0==SMALLER_OP||LA289_0==UIDENTIFIER) ) {
                    	                alt289=1;
                    	            }
                    	            else if ( (LA289_0==COMMA||LA289_0==LARGER_OP) ) {
                    	                alt289=2;
                    	            }
                    	            else {
                    	                if (state.backtracking>0) {state.failed=true; return typeArgumentList;}
                    	                NoViableAltException nvae =
                    	                    new NoViableAltException("", 289, 0, input);

                    	                throw nvae;

                    	            }
                    	            switch (alt289) {
                    	                case 1 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3235:15: ta3= type
                    	                    {
                    	                    pushFollow(FOLLOW_type_in_typeArguments21666);
                    	                    ta3=type();

                    	                    state._fsp--;
                    	                    if (state.failed) return typeArgumentList;

                    	                    if ( state.backtracking==0 ) { if (ta3!=null) {
                    	                                        typeArgumentList.addType(ta3);
                    	                                        typeArgumentList.setEndToken(null); } }

                    	                    }
                    	                    break;
                    	                case 2 :
                    	                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3239:15: 
                    	                    {
                    	                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                                      new MismatchedTokenException(UIDENTIFIER, input)); }

                    	                    }
                    	                    break;

                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop291;
                        }
                    } while (true);


                    }
                    break;

            }


            LARGER_OP484=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_typeArguments21752); if (state.failed) return typeArgumentList;

            if ( state.backtracking==0 ) { typeArgumentList.setEndToken(LARGER_OP484); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return typeArgumentList;
    }
    // $ANTLR end "typeArguments"



    // $ANTLR start "variadicType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3249:1: variadicType returns [Type type] : ( ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )? |t= type );
    public Type variadicType() throws RecognitionException {
        Type type = null;


        Token PRODUCT_OP485=null;
        Token SUM_OP486=null;
        StaticType at =null;

        StaticType t =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3250:5: ( ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )? |t= type )
            int alt294=2;
            switch ( input.LA(1) ) {
            case UIDENTIFIER:
                {
                int LA294_1 = input.LA(2);

                if ( (synpred37_Ceylon()) ) {
                    alt294=1;
                }
                else if ( (true) ) {
                    alt294=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 294, 1, input);

                    throw nvae;

                }
                }
                break;
            case SMALLER_OP:
                {
                int LA294_2 = input.LA(2);

                if ( (synpred37_Ceylon()) ) {
                    alt294=1;
                }
                else if ( (true) ) {
                    alt294=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 294, 2, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA294_3 = input.LA(2);

                if ( (synpred37_Ceylon()) ) {
                    alt294=1;
                }
                else if ( (true) ) {
                    alt294=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 294, 3, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA294_4 = input.LA(2);

                if ( (synpred37_Ceylon()) ) {
                    alt294=1;
                }
                else if ( (true) ) {
                    alt294=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 294, 4, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA294_5 = input.LA(2);

                if ( (synpred37_Ceylon()) ) {
                    alt294=1;
                }
                else if ( (true) ) {
                    alt294=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 294, 5, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 294, 0, input);

                throw nvae;

            }

            switch (alt294) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3250:7: ( unionType ( PRODUCT_OP | SUM_OP ) )=>at= unionType ( PRODUCT_OP | SUM_OP )?
                    {
                    pushFollow(FOLLOW_unionType_in_variadicType21800);
                    at=unionType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = at; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3253:7: ( PRODUCT_OP | SUM_OP )?
                    int alt293=3;
                    int LA293_0 = input.LA(1);

                    if ( (LA293_0==PRODUCT_OP) ) {
                        alt293=1;
                    }
                    else if ( (LA293_0==SUM_OP) ) {
                        alt293=2;
                    }
                    switch (alt293) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3254:9: PRODUCT_OP
                            {
                            PRODUCT_OP485=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_variadicType21826); if (state.failed) return type;

                            if ( state.backtracking==0 ) { SequencedType st = new SequencedType(null);
                                      st.setType(at); 
                                      st.setEndToken(PRODUCT_OP485);
                                      type = st; }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3260:9: SUM_OP
                            {
                            SUM_OP486=(Token)match(input,SUM_OP,FOLLOW_SUM_OP_in_variadicType21854); if (state.failed) return type;

                            if ( state.backtracking==0 ) { SequencedType st = new SequencedType(null);
                                      st.setType(at); 
                                      st.setEndToken(SUM_OP486);
                                      st.setAtLeastOne(true);
                                      type = st; }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3267:7: t= type
                    {
                    pushFollow(FOLLOW_type_in_variadicType21883);
                    t=type();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = t; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "variadicType"



    // $ANTLR start "defaultedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3271:1: defaultedType returns [Type type] : ( ( type ( SPECIFY ) )=>t= type ( SPECIFY )? | variadicType );
    public Type defaultedType() throws RecognitionException {
        Type type = null;


        Token SPECIFY487=null;
        StaticType t =null;

        Type variadicType488 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3272:5: ( ( type ( SPECIFY ) )=>t= type ( SPECIFY )? | variadicType )
            int alt296=2;
            switch ( input.LA(1) ) {
            case SMALLER_OP:
                {
                int LA296_1 = input.LA(2);

                if ( (synpred38_Ceylon()) ) {
                    alt296=1;
                }
                else if ( (true) ) {
                    alt296=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 296, 1, input);

                    throw nvae;

                }
                }
                break;
            case UIDENTIFIER:
                {
                int LA296_2 = input.LA(2);

                if ( (synpred38_Ceylon()) ) {
                    alt296=1;
                }
                else if ( (true) ) {
                    alt296=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 296, 2, input);

                    throw nvae;

                }
                }
                break;
            case PACKAGE:
                {
                int LA296_3 = input.LA(2);

                if ( (synpred38_Ceylon()) ) {
                    alt296=1;
                }
                else if ( (true) ) {
                    alt296=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 296, 3, input);

                    throw nvae;

                }
                }
                break;
            case LBRACKET:
                {
                int LA296_4 = input.LA(2);

                if ( (synpred38_Ceylon()) ) {
                    alt296=1;
                }
                else if ( (true) ) {
                    alt296=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 296, 4, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
                {
                int LA296_5 = input.LA(2);

                if ( (synpred38_Ceylon()) ) {
                    alt296=1;
                }
                else if ( (true) ) {
                    alt296=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 296, 5, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 296, 0, input);

                throw nvae;

            }

            switch (alt296) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3272:7: ( type ( SPECIFY ) )=>t= type ( SPECIFY )?
                    {
                    pushFollow(FOLLOW_type_in_defaultedType21929);
                    t=type();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type = t; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3275:7: ( SPECIFY )?
                    int alt295=2;
                    int LA295_0 = input.LA(1);

                    if ( (LA295_0==SPECIFY) ) {
                        alt295=1;
                    }
                    switch (alt295) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3276:9: SPECIFY
                            {
                            SPECIFY487=(Token)match(input,SPECIFY,FOLLOW_SPECIFY_in_defaultedType21955); if (state.failed) return type;

                            if ( state.backtracking==0 ) { DefaultedType st = new DefaultedType(null);
                                      st.setType(t); 
                                      st.setEndToken(SPECIFY487);
                                      type = st; }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3282:7: variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_defaultedType21982);
                    variadicType488=variadicType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =variadicType488; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "defaultedType"



    // $ANTLR start "spreadType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3286:1: spreadType returns [Type type] : PRODUCT_OP (sp= unionType )? ;
    public Type spreadType() throws RecognitionException {
        Type type = null;


        Token PRODUCT_OP489=null;
        StaticType sp =null;


         SpreadType spt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3288:5: ( PRODUCT_OP (sp= unionType )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3288:7: PRODUCT_OP (sp= unionType )?
            {
            PRODUCT_OP489=(Token)match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_spreadType22020); if (state.failed) return type;

            if ( state.backtracking==0 ) { spt = new SpreadType(PRODUCT_OP489);
                    type =spt; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3291:7: (sp= unionType )?
            int alt297=2;
            int LA297_0 = input.LA(1);

            if ( ((LA297_0 >= LBRACE && LA297_0 <= LBRACKET)||LA297_0==PACKAGE||LA297_0==SMALLER_OP||LA297_0==UIDENTIFIER) ) {
                alt297=1;
            }
            switch (alt297) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3292:9: sp= unionType
                    {
                    pushFollow(FOLLOW_unionType_in_spreadType22048);
                    sp=unionType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { spt.setType(sp); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "spreadType"



    // $ANTLR start "tupleType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3297:1: tupleType returns [TupleType type] : LBRACKET (spt= spreadType |t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET ;
    public TupleType tupleType() throws RecognitionException {
        TupleType type = null;


        Token c=null;
        Token LBRACKET490=null;
        Token RBRACKET491=null;
        Type spt =null;

        Type t1 =null;

        Type t2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3298:5: ( LBRACKET (spt= spreadType |t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3298:7: LBRACKET (spt= spreadType |t1= defaultedType (c= COMMA t2= defaultedType )* )? RBRACKET
            {
            LBRACKET490=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_tupleType22088); if (state.failed) return type;

            if ( state.backtracking==0 ) { type = new TupleType(LBRACKET490); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3300:7: (spt= spreadType |t1= defaultedType (c= COMMA t2= defaultedType )* )?
            int alt299=3;
            int LA299_0 = input.LA(1);

            if ( (LA299_0==PRODUCT_OP) ) {
                alt299=1;
            }
            else if ( ((LA299_0 >= LBRACE && LA299_0 <= LBRACKET)||LA299_0==PACKAGE||LA299_0==SMALLER_OP||LA299_0==UIDENTIFIER) ) {
                alt299=2;
            }
            switch (alt299) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3301:9: spt= spreadType
                    {
                    pushFollow(FOLLOW_spreadType_in_tupleType22116);
                    spt=spreadType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.addElementType(spt); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3304:9: t1= defaultedType (c= COMMA t2= defaultedType )*
                    {
                    pushFollow(FOLLOW_defaultedType_in_tupleType22146);
                    t1=defaultedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.addElementType(t1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3306:9: (c= COMMA t2= defaultedType )*
                    loop298:
                    do {
                        int alt298=2;
                        int LA298_0 = input.LA(1);

                        if ( (LA298_0==COMMA) ) {
                            alt298=1;
                        }


                        switch (alt298) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3307:11: c= COMMA t2= defaultedType
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_tupleType22180); if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { type.setEndToken(c); }

                    	    pushFollow(FOLLOW_defaultedType_in_tupleType22206);
                    	    t2=defaultedType();

                    	    state._fsp--;
                    	    if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { type.addElementType(t2);
                    	                type.setEndToken(null); }

                    	    }
                    	    break;

                    	default :
                    	    break loop298;
                        }
                    } while (true);


                    }
                    break;

            }


            RBRACKET491=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_tupleType22246); if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setEndToken(RBRACKET491); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "tupleType"



    // $ANTLR start "groupedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3318:1: groupedType returns [GroupedType type] : SMALLER_OP t= type LARGER_OP ;
    public GroupedType groupedType() throws RecognitionException {
        GroupedType type = null;


        Token SMALLER_OP492=null;
        Token LARGER_OP493=null;
        StaticType t =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3319:5: ( SMALLER_OP t= type LARGER_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3319:7: SMALLER_OP t= type LARGER_OP
            {
            SMALLER_OP492=(Token)match(input,SMALLER_OP,FOLLOW_SMALLER_OP_in_groupedType22275); if (state.failed) return type;

            if ( state.backtracking==0 ) { type = new GroupedType(SMALLER_OP492); }

            pushFollow(FOLLOW_type_in_groupedType22293);
            t=type();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setType(t); }

            LARGER_OP493=(Token)match(input,LARGER_OP,FOLLOW_LARGER_OP_in_groupedType22309); if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setEndToken(LARGER_OP493); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "groupedType"



    // $ANTLR start "iterableType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3327:1: iterableType returns [IterableType type] : LBRACE (t= variadicType )? RBRACE ;
    public IterableType iterableType() throws RecognitionException {
        IterableType type = null;


        Token LBRACE494=null;
        Token RBRACE495=null;
        Type t =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3328:4: ( LBRACE (t= variadicType )? RBRACE )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3328:6: LBRACE (t= variadicType )? RBRACE
            {
            LBRACE494=(Token)match(input,LBRACE,FOLLOW_LBRACE_in_iterableType22337); if (state.failed) return type;

            if ( state.backtracking==0 ) { type = new IterableType(LBRACE494); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3330:6: (t= variadicType )?
            int alt300=2;
            int LA300_0 = input.LA(1);

            if ( ((LA300_0 >= LBRACE && LA300_0 <= LBRACKET)||LA300_0==PACKAGE||LA300_0==SMALLER_OP||LA300_0==UIDENTIFIER) ) {
                alt300=1;
            }
            switch (alt300) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3331:8: t= variadicType
                    {
                    pushFollow(FOLLOW_variadicType_in_iterableType22362);
                    t=variadicType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.setElementType(t); }

                    }
                    break;

            }


            RBRACE495=(Token)match(input,RBRACE,FOLLOW_RBRACE_in_iterableType22386); if (state.failed) return type;

            if ( state.backtracking==0 ) { type.setEndToken(RBRACE495); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "iterableType"



    // $ANTLR start "type"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3338:1: type returns [StaticType type] : ( ( typeParameters ( TYPE_CONSTRAINT | COMPUTE ) )=> typeParameters ( anonymousTypeConstraints )? COMPUTE entryType | entryType );
    public StaticType type() throws RecognitionException {
        StaticType type = null;


        TypeParameterList typeParameters496 =null;

        TypeConstraintList anonymousTypeConstraints497 =null;

        StaticType entryType498 =null;

        StaticType entryType499 =null;


         TypeConstructor ct=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3340:5: ( ( typeParameters ( TYPE_CONSTRAINT | COMPUTE ) )=> typeParameters ( anonymousTypeConstraints )? COMPUTE entryType | entryType )
            int alt302=2;
            int LA302_0 = input.LA(1);

            if ( (LA302_0==SMALLER_OP) ) {
                int LA302_1 = input.LA(2);

                if ( (synpred39_Ceylon()) ) {
                    alt302=1;
                }
                else if ( (true) ) {
                    alt302=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return type;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 302, 1, input);

                    throw nvae;

                }
            }
            else if ( ((LA302_0 >= LBRACE && LA302_0 <= LBRACKET)||LA302_0==PACKAGE||LA302_0==UIDENTIFIER) ) {
                alt302=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 302, 0, input);

                throw nvae;

            }
            switch (alt302) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3340:7: ( typeParameters ( TYPE_CONSTRAINT | COMPUTE ) )=> typeParameters ( anonymousTypeConstraints )? COMPUTE entryType
                    {
                    pushFollow(FOLLOW_typeParameters_in_type22440);
                    typeParameters496=typeParameters();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { ct = new TypeConstructor(null);
                            ct.setTypeParameterList(typeParameters496);
                            type = ct; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3345:7: ( anonymousTypeConstraints )?
                    int alt301=2;
                    int LA301_0 = input.LA(1);

                    if ( (LA301_0==TYPE_CONSTRAINT) ) {
                        alt301=1;
                    }
                    switch (alt301) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3346:9: anonymousTypeConstraints
                            {
                            pushFollow(FOLLOW_anonymousTypeConstraints_in_type22467);
                            anonymousTypeConstraints497=anonymousTypeConstraints();

                            state._fsp--;
                            if (state.failed) return type;

                            if ( state.backtracking==0 ) { ct.setTypeConstraintList(anonymousTypeConstraints497); }

                            }
                            break;

                    }


                    match(input,COMPUTE,FOLLOW_COMPUTE_in_type22494); if (state.failed) return type;

                    pushFollow(FOLLOW_entryType_in_type22503);
                    entryType498=entryType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { ct.setType(entryType498); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3352:7: entryType
                    {
                    pushFollow(FOLLOW_entryType_in_type22519);
                    entryType499=entryType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =entryType499; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "type"



    // $ANTLR start "entryType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3356:1: entryType returns [StaticType type] : t1= unionType ( ENTRY_OP (t2= unionType ) )? ;
    public StaticType entryType() throws RecognitionException {
        StaticType type = null;


        Token ENTRY_OP500=null;
        StaticType t1 =null;

        StaticType t2 =null;


         EntryType bt=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3358:5: (t1= unionType ( ENTRY_OP (t2= unionType ) )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3358:7: t1= unionType ( ENTRY_OP (t2= unionType ) )?
            {
            pushFollow(FOLLOW_unionType_in_entryType22559);
            t1=unionType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type =t1; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3360:7: ( ENTRY_OP (t2= unionType ) )?
            int alt303=2;
            int LA303_0 = input.LA(1);

            if ( (LA303_0==ENTRY_OP) ) {
                alt303=1;
            }
            switch (alt303) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3361:9: ENTRY_OP (t2= unionType )
                    {
                    ENTRY_OP500=(Token)match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_entryType22585); if (state.failed) return type;

                    if ( state.backtracking==0 ) { bt=new EntryType(null);
                              bt.setKeyType(type);
                              bt.setEndToken(ENTRY_OP500); 
                              type =bt; }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3366:9: (t2= unionType )
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3367:11: t2= unionType
                    {
                    pushFollow(FOLLOW_unionType_in_entryType22619);
                    t2=unionType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { bt.setValueType(t2);
                                bt.setEndToken(null); }

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "entryType"



    // $ANTLR start "unionType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3376:1: unionType returns [StaticType type] : it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )? ;
    public StaticType unionType() throws RecognitionException {
        StaticType type = null;


        Token u=null;
        StaticType it1 =null;

        StaticType it2 =null;


         UnionType ut=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3378:5: (it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3378:7: it1= intersectionType ( (u= UNION_OP (it2= intersectionType ) )+ )?
            {
            pushFollow(FOLLOW_intersectionType_in_unionType22684);
            it1=intersectionType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type = it1;
                    ut = new UnionType(null);
                    ut.addStaticType(type); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3382:7: ( (u= UNION_OP (it2= intersectionType ) )+ )?
            int alt305=2;
            int LA305_0 = input.LA(1);

            if ( (LA305_0==UNION_OP) ) {
                alt305=1;
            }
            switch (alt305) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3383:9: (u= UNION_OP (it2= intersectionType ) )+
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3383:9: (u= UNION_OP (it2= intersectionType ) )+
                    int cnt304=0;
                    loop304:
                    do {
                        int alt304=2;
                        int LA304_0 = input.LA(1);

                        if ( (LA304_0==UNION_OP) ) {
                            alt304=1;
                        }


                        switch (alt304) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3384:11: u= UNION_OP (it2= intersectionType )
                    	    {
                    	    u=(Token)match(input,UNION_OP,FOLLOW_UNION_OP_in_unionType22725); if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { ut.setEndToken(u); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3386:11: (it2= intersectionType )
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3387:13: it2= intersectionType
                    	    {
                    	    pushFollow(FOLLOW_intersectionType_in_unionType22765);
                    	    it2=intersectionType();

                    	    state._fsp--;
                    	    if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { if (it2!=null) {
                    	                      ut.addStaticType(it2);
                    	                      ut.setEndToken(null); 
                    	                  } }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt304 >= 1 ) break loop304;
                    	    if (state.backtracking>0) {state.failed=true; return type;}
                                EarlyExitException eee =
                                    new EarlyExitException(304, input);
                                throw eee;
                        }
                        cnt304++;
                    } while (true);


                    if ( state.backtracking==0 ) { type = ut; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "unionType"



    // $ANTLR start "intersectionType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3400:1: intersectionType returns [StaticType type] : at1= primaryType ( (i= INTERSECTION_OP (at2= primaryType ) )+ )? ;
    public StaticType intersectionType() throws RecognitionException {
        StaticType type = null;


        Token i=null;
        StaticType at1 =null;

        StaticType at2 =null;


         IntersectionType it=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3402:5: (at1= primaryType ( (i= INTERSECTION_OP (at2= primaryType ) )+ )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3402:7: at1= primaryType ( (i= INTERSECTION_OP (at2= primaryType ) )+ )?
            {
            pushFollow(FOLLOW_primaryType_in_intersectionType22855);
            at1=primaryType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type = at1;
                    it = new IntersectionType(null);
                    it.addStaticType(type); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3406:7: ( (i= INTERSECTION_OP (at2= primaryType ) )+ )?
            int alt307=2;
            int LA307_0 = input.LA(1);

            if ( (LA307_0==INTERSECTION_OP) ) {
                alt307=1;
            }
            switch (alt307) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3407:9: (i= INTERSECTION_OP (at2= primaryType ) )+
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3407:9: (i= INTERSECTION_OP (at2= primaryType ) )+
                    int cnt306=0;
                    loop306:
                    do {
                        int alt306=2;
                        int LA306_0 = input.LA(1);

                        if ( (LA306_0==INTERSECTION_OP) ) {
                            alt306=1;
                        }


                        switch (alt306) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3408:11: i= INTERSECTION_OP (at2= primaryType )
                    	    {
                    	    i=(Token)match(input,INTERSECTION_OP,FOLLOW_INTERSECTION_OP_in_intersectionType22896); if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { it.setEndToken(i); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3410:11: (at2= primaryType )
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3411:13: at2= primaryType
                    	    {
                    	    pushFollow(FOLLOW_primaryType_in_intersectionType22936);
                    	    at2=primaryType();

                    	    state._fsp--;
                    	    if (state.failed) return type;

                    	    if ( state.backtracking==0 ) { if (at2!=null) {
                    	                      it.addStaticType(at2);
                    	                      it.setEndToken(null); 
                    	                  } }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt306 >= 1 ) break loop306;
                    	    if (state.backtracking>0) {state.failed=true; return type;}
                                EarlyExitException eee =
                                    new EarlyExitException(306, input);
                                throw eee;
                        }
                        cnt306++;
                    } while (true);


                    if ( state.backtracking==0 ) { type = it; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "intersectionType"



    // $ANTLR start "atomicType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3424:1: atomicType returns [StaticType type] : ( qualifiedType | tupleType | iterableType );
    public StaticType atomicType() throws RecognitionException {
        StaticType type = null;


        StaticType qualifiedType501 =null;

        TupleType tupleType502 =null;

        IterableType iterableType503 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3425:5: ( qualifiedType | tupleType | iterableType )
            int alt308=3;
            switch ( input.LA(1) ) {
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt308=1;
                }
                break;
            case LBRACKET:
                {
                alt308=2;
                }
                break;
            case LBRACE:
                {
                alt308=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 308, 0, input);

                throw nvae;

            }

            switch (alt308) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3425:7: qualifiedType
                    {
                    pushFollow(FOLLOW_qualifiedType_in_atomicType23015);
                    qualifiedType501=qualifiedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =qualifiedType501; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3427:7: tupleType
                    {
                    pushFollow(FOLLOW_tupleType_in_atomicType23032);
                    tupleType502=tupleType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =tupleType502; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3429:7: iterableType
                    {
                    pushFollow(FOLLOW_iterableType_in_atomicType23049);
                    iterableType503=iterableType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =iterableType503; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "atomicType"



    // $ANTLR start "primaryType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3433:1: primaryType returns [StaticType type] : atomicType ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )* ;
    public StaticType primaryType() throws RecognitionException {
        StaticType type = null;


        Token OPTIONAL505=null;
        Token LBRACKET506=null;
        Token NATURAL_LITERAL507=null;
        Token RBRACKET508=null;
        Token LPAREN509=null;
        Token COMMA510=null;
        Token RPAREN511=null;
        Type spt =null;

        Type t1 =null;

        Type t2 =null;

        StaticType atomicType504 =null;


         FunctionType bt=null; SequenceType st=null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3435:5: ( atomicType ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3435:7: atomicType ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )*
            {
            pushFollow(FOLLOW_atomicType_in_primaryType23087);
            atomicType504=atomicType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type =atomicType504; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3437:7: ( OPTIONAL | LBRACKET ( NATURAL_LITERAL )? RBRACKET | LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN )*
            loop312:
            do {
                int alt312=4;
                switch ( input.LA(1) ) {
                case OPTIONAL:
                    {
                    alt312=1;
                    }
                    break;
                case LBRACKET:
                    {
                    alt312=2;
                    }
                    break;
                case LPAREN:
                    {
                    alt312=3;
                    }
                    break;

                }

                switch (alt312) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3438:9: OPTIONAL
            	    {
            	    OPTIONAL505=(Token)match(input,OPTIONAL,FOLLOW_OPTIONAL_in_primaryType23113); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { OptionalType ot = new OptionalType(null);
            	              ot.setDefiniteType(type);
            	              ot.setEndToken(OPTIONAL505);
            	              type =ot; }

            	    }
            	    break;
            	case 2 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3443:9: LBRACKET ( NATURAL_LITERAL )? RBRACKET
            	    {
            	    LBRACKET506=(Token)match(input,LBRACKET,FOLLOW_LBRACKET_in_primaryType23134); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { st = new SequenceType(null);
            	              st.setElementType(type);
            	              st.setEndToken(LBRACKET506); }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3447:9: ( NATURAL_LITERAL )?
            	    int alt309=2;
            	    int LA309_0 = input.LA(1);

            	    if ( (LA309_0==NATURAL_LITERAL) ) {
            	        alt309=1;
            	    }
            	    switch (alt309) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3448:11: NATURAL_LITERAL
            	            {
            	            NATURAL_LITERAL507=(Token)match(input,NATURAL_LITERAL,FOLLOW_NATURAL_LITERAL_in_primaryType23166); if (state.failed) return type;

            	            if ( state.backtracking==0 ) { st.setLength(new NaturalLiteral(NATURAL_LITERAL507)); 
            	                        st.setEndToken(NATURAL_LITERAL507); }

            	            }
            	            break;

            	    }


            	    RBRACKET508=(Token)match(input,RBRACKET,FOLLOW_RBRACKET_in_primaryType23200); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { st.setEndToken(RBRACKET508);
            	              type =st; }

            	    }
            	    break;
            	case 3 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3455:9: LPAREN (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )? RPAREN
            	    {
            	    LPAREN509=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_primaryType23221); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { bt = new FunctionType(null);
            	              bt.setEndToken(LPAREN509);
            	              bt.setReturnType(type);
            	              type =bt; }

            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3460:11: (spt= spreadType |t1= defaultedType ( COMMA t2= defaultedType )* )?
            	    int alt311=3;
            	    int LA311_0 = input.LA(1);

            	    if ( (LA311_0==PRODUCT_OP) ) {
            	        alt311=1;
            	    }
            	    else if ( ((LA311_0 >= LBRACE && LA311_0 <= LBRACKET)||LA311_0==PACKAGE||LA311_0==SMALLER_OP||LA311_0==UIDENTIFIER) ) {
            	        alt311=2;
            	    }
            	    switch (alt311) {
            	        case 1 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3461:13: spt= spreadType
            	            {
            	            pushFollow(FOLLOW_spreadType_in_primaryType23259);
            	            spt=spreadType();

            	            state._fsp--;
            	            if (state.failed) return type;

            	            if ( state.backtracking==0 ) { bt.addArgumentType(spt); }

            	            }
            	            break;
            	        case 2 :
            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3464:13: t1= defaultedType ( COMMA t2= defaultedType )*
            	            {
            	            pushFollow(FOLLOW_defaultedType_in_primaryType23301);
            	            t1=defaultedType();

            	            state._fsp--;
            	            if (state.failed) return type;

            	            if ( state.backtracking==0 ) { if (t1!=null)
            	                              bt.addArgumentType(t1); }

            	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3467:13: ( COMMA t2= defaultedType )*
            	            loop310:
            	            do {
            	                int alt310=2;
            	                int LA310_0 = input.LA(1);

            	                if ( (LA310_0==COMMA) ) {
            	                    alt310=1;
            	                }


            	                switch (alt310) {
            	            	case 1 :
            	            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3468:15: COMMA t2= defaultedType
            	            	    {
            	            	    COMMA510=(Token)match(input,COMMA,FOLLOW_COMMA_in_primaryType23345); if (state.failed) return type;

            	            	    if ( state.backtracking==0 ) { bt.setEndToken(COMMA510); }

            	            	    pushFollow(FOLLOW_defaultedType_in_primaryType23379);
            	            	    t2=defaultedType();

            	            	    state._fsp--;
            	            	    if (state.failed) return type;

            	            	    if ( state.backtracking==0 ) { if (t2!=null)
            	            	                        bt.addArgumentType(t2); }

            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop310;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }


            	    RPAREN511=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_primaryType23433); if (state.failed) return type;

            	    if ( state.backtracking==0 ) { bt.setEndToken(RPAREN511); }

            	    }
            	    break;

            	default :
            	    break loop312;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "primaryType"



    // $ANTLR start "baseType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3480:1: baseType returns [StaticType type] : (tna1= typeNameWithArguments | groupedType | PACKAGE MEMBER_OP tna2= typeNameWithArguments );
    public StaticType baseType() throws RecognitionException {
        StaticType type = null;


        Token PACKAGE513=null;
        Token MEMBER_OP514=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return tna1 =null;

        PsiCompatibleCeylonParser.typeNameWithArguments_return tna2 =null;

        GroupedType groupedType512 =null;


         BaseType pt = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3482:5: (tna1= typeNameWithArguments | groupedType | PACKAGE MEMBER_OP tna2= typeNameWithArguments )
            int alt313=3;
            switch ( input.LA(1) ) {
            case UIDENTIFIER:
                {
                alt313=1;
                }
                break;
            case SMALLER_OP:
                {
                alt313=2;
                }
                break;
            case PACKAGE:
                {
                alt313=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 313, 0, input);

                throw nvae;

            }

            switch (alt313) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3483:7: tna1= typeNameWithArguments
                    {
                    pushFollow(FOLLOW_typeNameWithArguments_in_baseType23491);
                    tna1=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { BaseType bt = new BaseType(null);
                            bt.setIdentifier((tna1!=null?tna1.identifier:null));
                            if ((tna1!=null?tna1.typeArgumentList:null)!=null)
                                bt.setTypeArgumentList((tna1!=null?tna1.typeArgumentList:null));
                            type =bt; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3490:7: groupedType
                    {
                    pushFollow(FOLLOW_groupedType_in_baseType23513);
                    groupedType512=groupedType();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type =groupedType512; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3492:7: PACKAGE MEMBER_OP tna2= typeNameWithArguments
                    {
                    PACKAGE513=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_baseType23529); if (state.failed) return type;

                    if ( state.backtracking==0 ) { pt = new BaseType(PACKAGE513); 
                            pt.setPackageQualified(true);
                            type =pt; }

                    MEMBER_OP514=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_baseType23545); if (state.failed) return type;

                    if ( state.backtracking==0 ) { pt.setEndToken(MEMBER_OP514); }

                    pushFollow(FOLLOW_typeNameWithArguments_in_baseType23563);
                    tna2=typeNameWithArguments();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { pt.setEndToken(null);
                            pt.setIdentifier((tna2!=null?tna2.identifier:null));
                            if ((tna2!=null?tna2.typeArgumentList:null)!=null)
                                pt.setTypeArgumentList((tna2!=null?tna2.typeArgumentList:null)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "baseType"



    // $ANTLR start "qualifiedType"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3505:1: qualifiedType returns [StaticType type] : baseType ( MEMBER_OP it= typeNameWithArguments )* ;
    public StaticType qualifiedType() throws RecognitionException {
        StaticType type = null;


        Token MEMBER_OP516=null;
        PsiCompatibleCeylonParser.typeNameWithArguments_return it =null;

        StaticType baseType515 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3506:5: ( baseType ( MEMBER_OP it= typeNameWithArguments )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3506:7: baseType ( MEMBER_OP it= typeNameWithArguments )*
            {
            pushFollow(FOLLOW_baseType_in_qualifiedType23592);
            baseType515=baseType();

            state._fsp--;
            if (state.failed) return type;

            if ( state.backtracking==0 ) { type =baseType515; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3508:7: ( MEMBER_OP it= typeNameWithArguments )*
            loop314:
            do {
                int alt314=2;
                int LA314_0 = input.LA(1);

                if ( (LA314_0==MEMBER_OP) ) {
                    int LA314_2 = input.LA(2);

                    if ( (LA314_2==UIDENTIFIER) ) {
                        alt314=1;
                    }


                }


                switch (alt314) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3509:9: MEMBER_OP it= typeNameWithArguments
            	    {
            	    MEMBER_OP516=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_qualifiedType23618); if (state.failed) return type;

            	    pushFollow(FOLLOW_typeNameWithArguments_in_qualifiedType23630);
            	    it=typeNameWithArguments();

            	    state._fsp--;
            	    if (state.failed) return type;

            	    if ( state.backtracking==0 ) { QualifiedType qt = new QualifiedType(MEMBER_OP516);
            	              qt.setIdentifier((it!=null?it.identifier:null));
            	              if ((it!=null?it.typeArgumentList:null)!=null)
            	                  qt.setTypeArgumentList((it!=null?it.typeArgumentList:null));
            	              qt.setOuterType(type);
            	              type =qt; }

            	    }
            	    break;

            	default :
            	    break loop314;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "qualifiedType"


    public static class typeNameWithArguments_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "typeNameWithArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3520:1: typeNameWithArguments returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : typeName ( typeArguments )? ;
    public PsiCompatibleCeylonParser.typeNameWithArguments_return typeNameWithArguments() throws RecognitionException {
        PsiCompatibleCeylonParser.typeNameWithArguments_return retval = new PsiCompatibleCeylonParser.typeNameWithArguments_return();
        retval.start = input.LT(1);


        Identifier typeName517 =null;

        TypeArgumentList typeArguments518 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3522:5: ( typeName ( typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3522:7: typeName ( typeArguments )?
            {
            pushFollow(FOLLOW_typeName_in_typeNameWithArguments23670);
            typeName517=typeName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier = typeName517; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3524:7: ( typeArguments )?
            int alt315=2;
            int LA315_0 = input.LA(1);

            if ( (LA315_0==SMALLER_OP) ) {
                int LA315_1 = input.LA(2);

                if ( (LA315_1==IN_OP||LA315_1==LARGER_OP||(LA315_1 >= LBRACE && LA315_1 <= LBRACKET)||LA315_1==OUT||LA315_1==PACKAGE||LA315_1==SMALLER_OP||LA315_1==UIDENTIFIER) ) {
                    alt315=1;
                }
            }
            switch (alt315) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3525:9: typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_typeNameWithArguments23697);
                    typeArguments518=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments518; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "typeNameWithArguments"


    public static class memberNameWithArguments_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "memberNameWithArguments"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3530:1: memberNameWithArguments returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : memberName ( typeArguments )? ;
    public PsiCompatibleCeylonParser.memberNameWithArguments_return memberNameWithArguments() throws RecognitionException {
        PsiCompatibleCeylonParser.memberNameWithArguments_return retval = new PsiCompatibleCeylonParser.memberNameWithArguments_return();
        retval.start = input.LT(1);


        Identifier memberName519 =null;

        TypeArgumentList typeArguments520 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3532:5: ( memberName ( typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3532:7: memberName ( typeArguments )?
            {
            pushFollow(FOLLOW_memberName_in_memberNameWithArguments23741);
            memberName519=memberName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier = memberName519; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3534:7: ( typeArguments )?
            int alt316=2;
            int LA316_0 = input.LA(1);

            if ( (LA316_0==SMALLER_OP) ) {
                alt316=1;
            }
            switch (alt316) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3535:9: typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_memberNameWithArguments23768);
                    typeArguments520=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList = typeArguments520; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "memberNameWithArguments"



    // $ANTLR start "annotations"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3540:1: annotations returns [AnnotationList annotationList] : ( stringLiteral )? ( annotation )* ;
    public AnnotationList annotations() throws RecognitionException {
        AnnotationList annotationList = null;


        StringLiteral stringLiteral521 =null;

        Annotation annotation522 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3541:5: ( ( stringLiteral )? ( annotation )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3541:7: ( stringLiteral )? ( annotation )*
            {
            if ( state.backtracking==0 ) { annotationList = new AnnotationList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3542:7: ( stringLiteral )?
            int alt317=2;
            int LA317_0 = input.LA(1);

            if ( (LA317_0==STRING_LITERAL||LA317_0==VERBATIM_STRING) ) {
                alt317=1;
            }
            switch (alt317) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3543:11: stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_annotations23832);
                    stringLiteral521=stringLiteral();

                    state._fsp--;
                    if (state.failed) return annotationList;

                    if ( state.backtracking==0 ) { if (stringLiteral521.getToken().getType()==VERBATIM_STRING)
                                    stringLiteral521.getToken().setType(AVERBATIM_STRING);
                                else
                                    stringLiteral521.getToken().setType(ASTRING_LITERAL);
                                AnonymousAnnotation aa = new AnonymousAnnotation(null);
                                aa.setStringLiteral(stringLiteral521);
                                annotationList.setAnonymousAnnotation(aa); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3552:7: ( annotation )*
            loop318:
            do {
                int alt318=2;
                int LA318_0 = input.LA(1);

                if ( (LA318_0==LIDENTIFIER) ) {
                    alt318=1;
                }


                switch (alt318) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3553:9: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotations23871);
            	    annotation522=annotation();

            	    state._fsp--;
            	    if (state.failed) return annotationList;

            	    if ( state.backtracking==0 ) { annotationList.addAnnotation(annotation522); 
            	              new com.redhat.ceylon.compiler.typechecker.tree.Visitor() { 
            	                  public void visit(StringLiteral that) {
            	                      if (that.getToken().getType()==VERBATIM_STRING)
            	                          that.getToken().setType(AVERBATIM_STRING);
            	                      else
            	                          that.getToken().setType(ASTRING_LITERAL);
            	                  }
            	              }.visit(annotation522); }

            	    }
            	    break;

            	default :
            	    break loop318;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotationList;
    }
    // $ANTLR end "annotations"



    // $ANTLR start "annotation"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3566:1: annotation returns [Annotation annotation] : annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |) ;
    public Annotation annotation() throws RecognitionException {
        Annotation annotation = null;


        Identifier annotationName523 =null;

        PositionalArgumentList positionalArguments524 =null;

        NamedArgumentList namedArguments525 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3567:5: ( annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3567:7: annotationName ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |)
            {
            pushFollow(FOLLOW_annotationName_in_annotation23912);
            annotationName523=annotationName();

            state._fsp--;
            if (state.failed) return annotation;

            if ( state.backtracking==0 ) { annotation = new Annotation(null);
                    BaseMemberExpression bme = new BaseMemberExpression(null);
                    bme.setIdentifier(annotationName523);
                    bme.setTypeArguments( new InferredTypeArguments(null) );
                    annotation.setPrimary(bme); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3573:5: ( positionalArguments | ( namedAnnotationArgumentsStart )=> namedArguments |)
            int alt319=3;
            switch ( input.LA(1) ) {
            case LPAREN:
                {
                alt319=1;
                }
                break;
            case LBRACE:
                {
                int LA319_2 = input.LA(2);

                if ( (synpred40_Ceylon()) ) {
                    alt319=2;
                }
                else if ( (true) ) {
                    alt319=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return annotation;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 319, 2, input);

                    throw nvae;

                }
                }
                break;
            case ALIAS:
            case ASSERT:
            case ASSIGN:
            case CLASS_DEFINITION:
            case DYNAMIC:
            case FUNCTION_MODIFIER:
            case IMPORT:
            case INTERFACE_DEFINITION:
            case LBRACKET:
            case LIDENTIFIER:
            case MODULE:
            case NEW:
            case OBJECT_DEFINITION:
            case PACKAGE:
            case SMALLER_OP:
            case UIDENTIFIER:
            case VALUE_MODIFIER:
            case VOID_MODIFIER:
                {
                alt319=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return annotation;}
                NoViableAltException nvae =
                    new NoViableAltException("", 319, 0, input);

                throw nvae;

            }

            switch (alt319) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3574:7: positionalArguments
                    {
                    pushFollow(FOLLOW_positionalArguments_in_annotation23935);
                    positionalArguments524=positionalArguments();

                    state._fsp--;
                    if (state.failed) return annotation;

                    if ( state.backtracking==0 ) { annotation.setPositionalArgumentList(positionalArguments524); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3576:7: ( namedAnnotationArgumentsStart )=> namedArguments
                    {
                    pushFollow(FOLLOW_namedArguments_in_annotation23964);
                    namedArguments525=namedArguments();

                    state._fsp--;
                    if (state.failed) return annotation;

                    if ( state.backtracking==0 ) { annotation.setNamedArgumentList(namedArguments525); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3579:7: 
                    {
                    if ( state.backtracking==0 ) { annotation.setPositionalArgumentList(new PositionalArgumentList(null)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotation;
    }
    // $ANTLR end "annotation"



    // $ANTLR start "prefixOperatorStart"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3583:1: prefixOperatorStart : ( DIFFERENCE_OP | INCREMENT_OP | DECREMENT_OP | COMPLEMENT_OP );
    public void prefixOperatorStart() throws RecognitionException {
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3584:5: ( DIFFERENCE_OP | INCREMENT_OP | DECREMENT_OP | COMPLEMENT_OP )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:
            {
            if ( input.LA(1)==COMPLEMENT_OP||(input.LA(1) >= DECREMENT_OP && input.LA(1) <= DIFFERENCE_OP)||input.LA(1)==INCREMENT_OP ) {
                input.consume();
                state.errorRecovery=false;
                state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return ;
    }
    // $ANTLR end "prefixOperatorStart"



    // $ANTLR start "compilerAnnotations"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3590:1: compilerAnnotations returns [List<CompilerAnnotation> annotations] : ( compilerAnnotation )* ;
    public List<CompilerAnnotation> compilerAnnotations() throws RecognitionException {
        List<CompilerAnnotation> annotations = null;


        CompilerAnnotation compilerAnnotation526 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3591:5: ( ( compilerAnnotation )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3591:7: ( compilerAnnotation )*
            {
            if ( state.backtracking==0 ) { annotations = new ArrayList<CompilerAnnotation>(); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3592:5: ( compilerAnnotation )*
            loop320:
            do {
                int alt320=2;
                int LA320_0 = input.LA(1);

                if ( (LA320_0==COMPILER_ANNOTATION) ) {
                    alt320=1;
                }


                switch (alt320) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3593:7: compilerAnnotation
            	    {
            	    pushFollow(FOLLOW_compilerAnnotation_in_compilerAnnotations24068);
            	    compilerAnnotation526=compilerAnnotation();

            	    state._fsp--;
            	    if (state.failed) return annotations;

            	    if ( state.backtracking==0 ) { annotations.add(compilerAnnotation526); }

            	    }
            	    break;

            	default :
            	    break loop320;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotations;
    }
    // $ANTLR end "compilerAnnotations"



    // $ANTLR start "compilerAnnotation"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3598:1: compilerAnnotation returns [CompilerAnnotation annotation] : COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )? ;
    public CompilerAnnotation compilerAnnotation() throws RecognitionException {
        CompilerAnnotation annotation = null;


        Token COMPILER_ANNOTATION527=null;
        Identifier annotationName528 =null;

        StringLiteral stringLiteral529 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3599:5: ( COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3599:7: COMPILER_ANNOTATION annotationName ( SEGMENT_OP stringLiteral )?
            {
            COMPILER_ANNOTATION527=(Token)match(input,COMPILER_ANNOTATION,FOLLOW_COMPILER_ANNOTATION_in_compilerAnnotation24108); if (state.failed) return annotation;

            if ( state.backtracking==0 ) { annotation =new CompilerAnnotation(COMPILER_ANNOTATION527); }

            pushFollow(FOLLOW_annotationName_in_compilerAnnotation24125);
            annotationName528=annotationName();

            state._fsp--;
            if (state.failed) return annotation;

            if ( state.backtracking==0 ) { annotation.setIdentifier(annotationName528); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3603:7: ( SEGMENT_OP stringLiteral )?
            int alt321=2;
            int LA321_0 = input.LA(1);

            if ( (LA321_0==SEGMENT_OP) ) {
                alt321=1;
            }
            switch (alt321) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3604:11: SEGMENT_OP stringLiteral
                    {
                    match(input,SEGMENT_OP,FOLLOW_SEGMENT_OP_in_compilerAnnotation24155); if (state.failed) return annotation;

                    pushFollow(FOLLOW_stringLiteral_in_compilerAnnotation24167);
                    stringLiteral529=stringLiteral();

                    state._fsp--;
                    if (state.failed) return annotation;

                    if ( state.backtracking==0 ) { annotation.setStringLiteral(stringLiteral529); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return annotation;
    }
    // $ANTLR end "compilerAnnotation"



    // $ANTLR start "conditions"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3610:1: conditions returns [ConditionList conditionList] : LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN ;
    public ConditionList conditions() throws RecognitionException {
        ConditionList conditionList = null;


        Token c=null;
        Token LPAREN530=null;
        Token RPAREN531=null;
        Condition c1 =null;

        Condition c2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3611:5: ( LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3611:7: LPAREN (c1= condition (c= COMMA (c2= condition |) )* )? RPAREN
            {
            LPAREN530=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_conditions24209); if (state.failed) return conditionList;

            if ( state.backtracking==0 ) { conditionList = new ConditionList(LPAREN530); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3613:7: (c1= condition (c= COMMA (c2= condition |) )* )?
            int alt324=2;
            int LA324_0 = input.LA(1);

            if ( (LA324_0==BACKTICK||LA324_0==CHAR_LITERAL||(LA324_0 >= DECREMENT_OP && LA324_0 <= DIFFERENCE_OP)||LA324_0==DYNAMIC||LA324_0==EXISTS||LA324_0==FLOAT_LITERAL||LA324_0==FUNCTION_MODIFIER||LA324_0==IF_CLAUSE||LA324_0==INCREMENT_OP||LA324_0==IS_OP||(LA324_0 >= LBRACE && LA324_0 <= LIDENTIFIER)||LA324_0==LPAREN||LA324_0==NATURAL_LITERAL||LA324_0==NONEMPTY||(LA324_0 >= NOT_OP && LA324_0 <= OBJECT_DEFINITION)||(LA324_0 >= OUTER && LA324_0 <= PACKAGE)||LA324_0==SATISFIES||LA324_0==SMALLER_OP||LA324_0==STRING_LITERAL||LA324_0==STRING_START||(LA324_0 >= SUM_OP && LA324_0 <= SWITCH_CLAUSE)||LA324_0==THIS||LA324_0==UIDENTIFIER||(LA324_0 >= VERBATIM_STRING && LA324_0 <= VOID_MODIFIER)) ) {
                alt324=1;
            }
            switch (alt324) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3614:7: c1= condition (c= COMMA (c2= condition |) )*
                    {
                    pushFollow(FOLLOW_condition_in_conditions24235);
                    c1=condition();

                    state._fsp--;
                    if (state.failed) return conditionList;

                    if ( state.backtracking==0 ) { if (c1!=null) 
                                conditionList.addCondition(c1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3617:7: (c= COMMA (c2= condition |) )*
                    loop323:
                    do {
                        int alt323=2;
                        int LA323_0 = input.LA(1);

                        if ( (LA323_0==COMMA) ) {
                            alt323=1;
                        }


                        switch (alt323) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3617:9: c= COMMA (c2= condition |)
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_conditions24255); if (state.failed) return conditionList;

                    	    if ( state.backtracking==0 ) { conditionList.setEndToken(c); }

                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3619:9: (c2= condition |)
                    	    int alt322=2;
                    	    int LA322_0 = input.LA(1);

                    	    if ( (LA322_0==BACKTICK||LA322_0==CHAR_LITERAL||(LA322_0 >= DECREMENT_OP && LA322_0 <= DIFFERENCE_OP)||LA322_0==DYNAMIC||LA322_0==EXISTS||LA322_0==FLOAT_LITERAL||LA322_0==FUNCTION_MODIFIER||LA322_0==IF_CLAUSE||LA322_0==INCREMENT_OP||LA322_0==IS_OP||(LA322_0 >= LBRACE && LA322_0 <= LIDENTIFIER)||LA322_0==LPAREN||LA322_0==NATURAL_LITERAL||LA322_0==NONEMPTY||(LA322_0 >= NOT_OP && LA322_0 <= OBJECT_DEFINITION)||(LA322_0 >= OUTER && LA322_0 <= PACKAGE)||LA322_0==SATISFIES||LA322_0==SMALLER_OP||LA322_0==STRING_LITERAL||LA322_0==STRING_START||(LA322_0 >= SUM_OP && LA322_0 <= SWITCH_CLAUSE)||LA322_0==THIS||LA322_0==UIDENTIFIER||(LA322_0 >= VERBATIM_STRING && LA322_0 <= VOID_MODIFIER)) ) {
                    	        alt322=1;
                    	    }
                    	    else if ( (LA322_0==COMMA||LA322_0==RPAREN) ) {
                    	        alt322=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return conditionList;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 322, 0, input);

                    	        throw nvae;

                    	    }
                    	    switch (alt322) {
                    	        case 1 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3620:11: c2= condition
                    	            {
                    	            pushFollow(FOLLOW_condition_in_conditions24290);
                    	            c2=condition();

                    	            state._fsp--;
                    	            if (state.failed) return conditionList;

                    	            if ( state.backtracking==0 ) { if (c2!=null) 
                    	                            conditionList.addCondition(c2);
                    	                        conditionList.setEndToken(null); }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3624:11: 
                    	            {
                    	            if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                    	                          new MismatchedTokenException(LIDENTIFIER, input)); }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop323;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN531=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_conditions24352); if (state.failed) return conditionList;

            if ( state.backtracking==0 ) { conditionList.setEndToken(RPAREN531); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return conditionList;
    }
    // $ANTLR end "conditions"



    // $ANTLR start "condition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3633:1: condition returns [Condition condition] : ( existsCondition | nonemptyCondition | isCondition | satisfiesCondition | booleanCondition );
    public Condition condition() throws RecognitionException {
        Condition condition = null;


        ExistsCondition existsCondition532 =null;

        NonemptyCondition nonemptyCondition533 =null;

        IsCondition isCondition534 =null;

        SatisfiesCondition satisfiesCondition535 =null;

        BooleanCondition booleanCondition536 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3634:5: ( existsCondition | nonemptyCondition | isCondition | satisfiesCondition | booleanCondition )
            int alt325=5;
            switch ( input.LA(1) ) {
            case NOT_OP:
                {
                switch ( input.LA(2) ) {
                case EXISTS:
                    {
                    alt325=1;
                    }
                    break;
                case NONEMPTY:
                    {
                    alt325=2;
                    }
                    break;
                case IS_OP:
                    {
                    alt325=3;
                    }
                    break;
                case BACKTICK:
                case CHAR_LITERAL:
                case DECREMENT_OP:
                case DIFFERENCE_OP:
                case DYNAMIC:
                case FLOAT_LITERAL:
                case INCREMENT_OP:
                case LBRACE:
                case LBRACKET:
                case LIDENTIFIER:
                case LPAREN:
                case NATURAL_LITERAL:
                case NOT_OP:
                case OBJECT_DEFINITION:
                case OUTER:
                case PACKAGE:
                case STRING_LITERAL:
                case STRING_START:
                case SUM_OP:
                case SUPER:
                case THIS:
                case UIDENTIFIER:
                case VERBATIM_STRING:
                    {
                    alt325=5;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 325, 1, input);

                    throw nvae;

                }

                }
                break;
            case EXISTS:
                {
                alt325=1;
                }
                break;
            case NONEMPTY:
                {
                alt325=2;
                }
                break;
            case IS_OP:
                {
                alt325=3;
                }
                break;
            case SATISFIES:
                {
                alt325=4;
                }
                break;
            case BACKTICK:
            case CHAR_LITERAL:
            case DECREMENT_OP:
            case DIFFERENCE_OP:
            case DYNAMIC:
            case FLOAT_LITERAL:
            case FUNCTION_MODIFIER:
            case IF_CLAUSE:
            case INCREMENT_OP:
            case LBRACE:
            case LBRACKET:
            case LET:
            case LIDENTIFIER:
            case LPAREN:
            case NATURAL_LITERAL:
            case OBJECT_DEFINITION:
            case OUTER:
            case PACKAGE:
            case SMALLER_OP:
            case STRING_LITERAL:
            case STRING_START:
            case SUM_OP:
            case SUPER:
            case SWITCH_CLAUSE:
            case THIS:
            case UIDENTIFIER:
            case VERBATIM_STRING:
            case VOID_MODIFIER:
                {
                alt325=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 325, 0, input);

                throw nvae;

            }

            switch (alt325) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3634:7: existsCondition
                    {
                    pushFollow(FOLLOW_existsCondition_in_condition24381);
                    existsCondition532=existsCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =existsCondition532; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3636:7: nonemptyCondition
                    {
                    pushFollow(FOLLOW_nonemptyCondition_in_condition24397);
                    nonemptyCondition533=nonemptyCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =nonemptyCondition533; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3638:7: isCondition
                    {
                    pushFollow(FOLLOW_isCondition_in_condition24413);
                    isCondition534=isCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =isCondition534; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3640:7: satisfiesCondition
                    {
                    pushFollow(FOLLOW_satisfiesCondition_in_condition24430);
                    satisfiesCondition535=satisfiesCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =satisfiesCondition535; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3642:7: booleanCondition
                    {
                    pushFollow(FOLLOW_booleanCondition_in_condition24446);
                    booleanCondition536=booleanCondition();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition =booleanCondition536; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "condition"



    // $ANTLR start "booleanCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3646:1: booleanCondition returns [BooleanCondition condition] : functionOrExpression ;
    public BooleanCondition booleanCondition() throws RecognitionException {
        BooleanCondition condition = null;


        Expression functionOrExpression537 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3647:5: ( functionOrExpression )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3647:7: functionOrExpression
            {
            if ( state.backtracking==0 ) { condition = new BooleanCondition(null); }

            pushFollow(FOLLOW_functionOrExpression_in_booleanCondition24487);
            functionOrExpression537=functionOrExpression();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setExpression(functionOrExpression537); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "booleanCondition"



    // $ANTLR start "existsCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
    public ExistsCondition existsCondition() throws RecognitionException {
        ExistsCondition condition = null;


        Token NOT_OP538=null;
        Token EXISTS539=null;
        Statement letVariable540 =null;

        Variable impliedVariable541 =null;

        Expression expression542 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3653:7: ( NOT_OP )?
            int alt326=2;
            int LA326_0 = input.LA(1);

            if ( (LA326_0==NOT_OP) ) {
                alt326=1;
            }
            switch (alt326) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3654:9: NOT_OP
                    {
                    NOT_OP538=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_existsCondition24530); if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition = new ExistsCondition(NOT_OP538);
                              condition.setNot(true); }

                    }
                    break;

            }


            EXISTS539=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_existsCondition24557); if (state.failed) return condition;

            if ( state.backtracking==0 ) { if (condition==null)
                        condition = new ExistsCondition(EXISTS539); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            int alt327=3;
            int LA327_0 = input.LA(1);

            if ( (LA327_0==LBRACKET) ) {
                int LA327_1 = input.LA(2);

                if ( (synpred42_Ceylon()) ) {
                    alt327=1;
                }
                else if ( (true) ) {
                    alt327=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 327, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA327_0==COMPILER_ANNOTATION) && (synpred42_Ceylon())) {
                alt327=1;
            }
            else if ( (LA327_0==SMALLER_OP) && (synpred42_Ceylon())) {
                alt327=1;
            }
            else if ( (LA327_0==UIDENTIFIER) ) {
                int LA327_4 = input.LA(2);

                if ( (synpred42_Ceylon()) ) {
                    alt327=1;
                }
                else if ( (true) ) {
                    alt327=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 327, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA327_0==PACKAGE) ) {
                int LA327_5 = input.LA(2);

                if ( (synpred42_Ceylon()) ) {
                    alt327=1;
                }
                else if ( (true) ) {
                    alt327=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 327, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA327_0==LBRACE) ) {
                int LA327_6 = input.LA(2);

                if ( (synpred42_Ceylon()) ) {
                    alt327=1;
                }
                else if ( (true) ) {
                    alt327=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 327, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA327_0==VOID_MODIFIER) && (synpred42_Ceylon())) {
                alt327=1;
            }
            else if ( (LA327_0==FUNCTION_MODIFIER) && (synpred42_Ceylon())) {
                alt327=1;
            }
            else if ( (LA327_0==VALUE_MODIFIER) && (synpred42_Ceylon())) {
                alt327=1;
            }
            else if ( (LA327_0==LIDENTIFIER) ) {
                int LA327_10 = input.LA(2);

                if ( (synpred42_Ceylon()) ) {
                    alt327=1;
                }
                else if ( (synpred43_Ceylon()) ) {
                    alt327=2;
                }
                else if ( (true) ) {
                    alt327=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 327, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA327_0==BACKTICK||LA327_0==CHAR_LITERAL||(LA327_0 >= DECREMENT_OP && LA327_0 <= DIFFERENCE_OP)||LA327_0==DYNAMIC||LA327_0==FLOAT_LITERAL||LA327_0==INCREMENT_OP||LA327_0==LPAREN||LA327_0==NATURAL_LITERAL||(LA327_0 >= NOT_OP && LA327_0 <= OBJECT_DEFINITION)||LA327_0==OUTER||LA327_0==STRING_LITERAL||LA327_0==STRING_START||(LA327_0 >= SUM_OP && LA327_0 <= SUPER)||LA327_0==THIS||LA327_0==VERBATIM_STRING) ) {
                alt327=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 327, 0, input);

                throw nvae;

            }
            switch (alt327) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
                    {
                    pushFollow(FOLLOW_letVariable_in_existsCondition24615);
                    letVariable540=letVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(letVariable540); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3666:9: ( LIDENTIFIER )=> impliedVariable
                    {
                    pushFollow(FOLLOW_impliedVariable_in_existsCondition24649);
                    impliedVariable541=impliedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(impliedVariable541); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3668:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_existsCondition24669);
                    expression542=expression();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setBrokenExpression(expression542); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "existsCondition"



    // $ANTLR start "nonemptyCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
    public NonemptyCondition nonemptyCondition() throws RecognitionException {
        NonemptyCondition condition = null;


        Token NOT_OP543=null;
        Token NONEMPTY544=null;
        Statement letVariable545 =null;

        Variable impliedVariable546 =null;

        Expression expression547 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3674:7: ( NOT_OP )?
            int alt328=2;
            int LA328_0 = input.LA(1);

            if ( (LA328_0==NOT_OP) ) {
                alt328=1;
            }
            switch (alt328) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3675:9: NOT_OP
                    {
                    NOT_OP543=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_nonemptyCondition24722); if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition = new NonemptyCondition(NOT_OP543);
                              condition.setNot(true); }

                    }
                    break;

            }


            NONEMPTY544=(Token)match(input,NONEMPTY,FOLLOW_NONEMPTY_in_nonemptyCondition24749); if (state.failed) return condition;

            if ( state.backtracking==0 ) { if (condition==null)
                        condition = new NonemptyCondition(NONEMPTY544); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
            int alt329=3;
            int LA329_0 = input.LA(1);

            if ( (LA329_0==LBRACKET) ) {
                int LA329_1 = input.LA(2);

                if ( (synpred45_Ceylon()) ) {
                    alt329=1;
                }
                else if ( (true) ) {
                    alt329=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 329, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA329_0==COMPILER_ANNOTATION) && (synpred45_Ceylon())) {
                alt329=1;
            }
            else if ( (LA329_0==SMALLER_OP) && (synpred45_Ceylon())) {
                alt329=1;
            }
            else if ( (LA329_0==UIDENTIFIER) ) {
                int LA329_4 = input.LA(2);

                if ( (synpred45_Ceylon()) ) {
                    alt329=1;
                }
                else if ( (true) ) {
                    alt329=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 329, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA329_0==PACKAGE) ) {
                int LA329_5 = input.LA(2);

                if ( (synpred45_Ceylon()) ) {
                    alt329=1;
                }
                else if ( (true) ) {
                    alt329=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 329, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA329_0==LBRACE) ) {
                int LA329_6 = input.LA(2);

                if ( (synpred45_Ceylon()) ) {
                    alt329=1;
                }
                else if ( (true) ) {
                    alt329=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 329, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA329_0==VOID_MODIFIER) && (synpred45_Ceylon())) {
                alt329=1;
            }
            else if ( (LA329_0==FUNCTION_MODIFIER) && (synpred45_Ceylon())) {
                alt329=1;
            }
            else if ( (LA329_0==VALUE_MODIFIER) && (synpred45_Ceylon())) {
                alt329=1;
            }
            else if ( (LA329_0==LIDENTIFIER) ) {
                int LA329_10 = input.LA(2);

                if ( (synpred45_Ceylon()) ) {
                    alt329=1;
                }
                else if ( (synpred46_Ceylon()) ) {
                    alt329=2;
                }
                else if ( (true) ) {
                    alt329=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 329, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA329_0==BACKTICK||LA329_0==CHAR_LITERAL||(LA329_0 >= DECREMENT_OP && LA329_0 <= DIFFERENCE_OP)||LA329_0==DYNAMIC||LA329_0==FLOAT_LITERAL||LA329_0==INCREMENT_OP||LA329_0==LPAREN||LA329_0==NATURAL_LITERAL||(LA329_0 >= NOT_OP && LA329_0 <= OBJECT_DEFINITION)||LA329_0==OUTER||LA329_0==STRING_LITERAL||LA329_0==STRING_START||(LA329_0 >= SUM_OP && LA329_0 <= SUPER)||LA329_0==THIS||LA329_0==VERBATIM_STRING) ) {
                alt329=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 329, 0, input);

                throw nvae;

            }
            switch (alt329) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:<invalid or missing tree structure>
                    {
                    pushFollow(FOLLOW_letVariable_in_nonemptyCondition24807);
                    letVariable545=letVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(letVariable545); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3687:9: ( LIDENTIFIER )=> impliedVariable
                    {
                    pushFollow(FOLLOW_impliedVariable_in_nonemptyCondition24841);
                    impliedVariable546=impliedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(impliedVariable546); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3689:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_nonemptyCondition24862);
                    expression547=expression();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setBrokenExpression(expression547); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "nonemptyCondition"



    // $ANTLR start "isCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3694:1: isCondition returns [IsCondition condition] : ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable ) ;
    public IsCondition isCondition() throws RecognitionException {
        IsCondition condition = null;


        Token NOT_OP548=null;
        Token IS_OP549=null;
        Variable v =null;

        StaticType type550 =null;

        Variable impliedVariable551 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3695:5: ( ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3695:7: ( NOT_OP )? IS_OP type ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3695:7: ( NOT_OP )?
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==NOT_OP) ) {
                alt330=1;
            }
            switch (alt330) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3696:9: NOT_OP
                    {
                    NOT_OP548=(Token)match(input,NOT_OP,FOLLOW_NOT_OP_in_isCondition24911); if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition = new IsCondition(NOT_OP548);
                              condition.setNot(true); }

                    }
                    break;

            }


            IS_OP549=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_isCondition24938); if (state.failed) return condition;

            if ( state.backtracking==0 ) { if (condition==null)
                        condition = new IsCondition(IS_OP549); }

            pushFollow(FOLLOW_type_in_isCondition24955);
            type550=type();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setType(type550); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3705:7: ( ( LIDENTIFIER SPECIFY )=>v= isConditionVariable | impliedVariable )
            int alt331=2;
            int LA331_0 = input.LA(1);

            if ( (LA331_0==LIDENTIFIER) ) {
                int LA331_1 = input.LA(2);

                if ( (LA331_1==SPECIFY) && (synpred47_Ceylon())) {
                    alt331=1;
                }
                else if ( (LA331_1==COMMA||LA331_1==RPAREN) ) {
                    alt331=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return condition;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 331, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return condition;}
                NoViableAltException nvae =
                    new NoViableAltException("", 331, 0, input);

                throw nvae;

            }
            switch (alt331) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3706:9: ( LIDENTIFIER SPECIFY )=>v= isConditionVariable
                    {
                    pushFollow(FOLLOW_isConditionVariable_in_isCondition24999);
                    v=isConditionVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(v); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3710:9: impliedVariable
                    {
                    pushFollow(FOLLOW_impliedVariable_in_isCondition25027);
                    impliedVariable551=impliedVariable();

                    state._fsp--;
                    if (state.failed) return condition;

                    if ( state.backtracking==0 ) { condition.setVariable(impliedVariable551); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "isCondition"



    // $ANTLR start "isConditionVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3715:1: isConditionVariable returns [Variable variable] : memberName specifier ;
    public Variable isConditionVariable() throws RecognitionException {
        Variable variable = null;


        Identifier memberName552 =null;

        SpecifierExpression specifier553 =null;


         variable = new Variable(null);
                    variable.setType(new ValueModifier(null));  
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3718:5: ( memberName specifier )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3718:7: memberName specifier
            {
            pushFollow(FOLLOW_memberName_in_isConditionVariable25076);
            memberName552=memberName();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable.setIdentifier(memberName552); }

            pushFollow(FOLLOW_specifier_in_isConditionVariable25092);
            specifier553=specifier();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable.setSpecifierExpression(specifier553); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "isConditionVariable"



    // $ANTLR start "satisfiesCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3724:1: satisfiesCondition returns [SatisfiesCondition condition] : SATISFIES type typeName ;
    public SatisfiesCondition satisfiesCondition() throws RecognitionException {
        SatisfiesCondition condition = null;


        Token SATISFIES554=null;
        StaticType type555 =null;

        Identifier typeName556 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3725:5: ( SATISFIES type typeName )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3725:7: SATISFIES type typeName
            {
            SATISFIES554=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiesCondition25121); if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition = new SatisfiesCondition(SATISFIES554); }

            pushFollow(FOLLOW_type_in_satisfiesCondition25138);
            type555=type();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setType(type555); }

            pushFollow(FOLLOW_typeName_in_satisfiesCondition25155);
            typeName556=typeName();

            state._fsp--;
            if (state.failed) return condition;

            if ( state.backtracking==0 ) { condition.setIdentifier(typeName556); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return condition;
    }
    // $ANTLR end "satisfiesCondition"



    // $ANTLR start "controlStatement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3733:1: controlStatement returns [ControlStatement controlStatement] : ( ifElse | switchCaseElse | whileLoop | forElse | tryCatchFinally | dynamic );
    public ControlStatement controlStatement() throws RecognitionException {
        ControlStatement controlStatement = null;


        IfStatement ifElse557 =null;

        SwitchStatement switchCaseElse558 =null;

        WhileStatement whileLoop559 =null;

        ForStatement forElse560 =null;

        TryCatchStatement tryCatchFinally561 =null;

        DynamicStatement dynamic562 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3734:5: ( ifElse | switchCaseElse | whileLoop | forElse | tryCatchFinally | dynamic )
            int alt332=6;
            switch ( input.LA(1) ) {
            case IF_CLAUSE:
                {
                alt332=1;
                }
                break;
            case SWITCH_CLAUSE:
                {
                alt332=2;
                }
                break;
            case WHILE_CLAUSE:
                {
                alt332=3;
                }
                break;
            case FOR_CLAUSE:
                {
                alt332=4;
                }
                break;
            case TRY_CLAUSE:
                {
                alt332=5;
                }
                break;
            case DYNAMIC:
                {
                alt332=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return controlStatement;}
                NoViableAltException nvae =
                    new NoViableAltException("", 332, 0, input);

                throw nvae;

            }

            switch (alt332) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3734:7: ifElse
                    {
                    pushFollow(FOLLOW_ifElse_in_controlStatement25184);
                    ifElse557=ifElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =ifElse557; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3736:7: switchCaseElse
                    {
                    pushFollow(FOLLOW_switchCaseElse_in_controlStatement25201);
                    switchCaseElse558=switchCaseElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =switchCaseElse558; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3738:7: whileLoop
                    {
                    pushFollow(FOLLOW_whileLoop_in_controlStatement25218);
                    whileLoop559=whileLoop();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =whileLoop559; }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3740:7: forElse
                    {
                    pushFollow(FOLLOW_forElse_in_controlStatement25235);
                    forElse560=forElse();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =forElse560; }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3742:7: tryCatchFinally
                    {
                    pushFollow(FOLLOW_tryCatchFinally_in_controlStatement25252);
                    tryCatchFinally561=tryCatchFinally();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =tryCatchFinally561; }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3744:7: dynamic
                    {
                    pushFollow(FOLLOW_dynamic_in_controlStatement25268);
                    dynamic562=dynamic();

                    state._fsp--;
                    if (state.failed) return controlStatement;

                    if ( state.backtracking==0 ) { controlStatement =dynamic562; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return controlStatement;
    }
    // $ANTLR end "controlStatement"



    // $ANTLR start "controlBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3748:1: controlBlock returns [Block block] : ( ( LBRACE )=>b= block |) ;
    public Block controlBlock() throws RecognitionException {
        Block block = null;


        Block b =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3749:5: ( ( ( LBRACE )=>b= block |) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3749:7: ( ( LBRACE )=>b= block |)
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3749:7: ( ( LBRACE )=>b= block |)
            int alt333=2;
            int LA333_0 = input.LA(1);

            if ( (LA333_0==LBRACE) ) {
                int LA333_1 = input.LA(2);

                if ( (synpred48_Ceylon()) ) {
                    alt333=1;
                }
                else if ( (true) ) {
                    alt333=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return block;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 333, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA333_0==ALIAS||(LA333_0 >= ASSERT && LA333_0 <= ASSIGN)||(LA333_0 >= BACKTICK && LA333_0 <= BREAK)||(LA333_0 >= CATCH_CLAUSE && LA333_0 <= CLASS_DEFINITION)||LA333_0==COMPILER_ANNOTATION||LA333_0==CONTINUE||(LA333_0 >= DECREMENT_OP && LA333_0 <= DIFFERENCE_OP)||LA333_0==DYNAMIC||LA333_0==ELSE_CLAUSE||(LA333_0 >= FINALLY_CLAUSE && LA333_0 <= FUNCTION_MODIFIER)||LA333_0==IF_CLAUSE||(LA333_0 >= INCREMENT_OP && LA333_0 <= INTERFACE_DEFINITION)||LA333_0==LBRACKET||LA333_0==LIDENTIFIER||LA333_0==LPAREN||(LA333_0 >= NATURAL_LITERAL && LA333_0 <= NEW)||(LA333_0 >= NOT_OP && LA333_0 <= OBJECT_DEFINITION)||(LA333_0 >= OUTER && LA333_0 <= PACKAGE)||LA333_0==RBRACE||LA333_0==RETURN||LA333_0==SMALLER_OP||LA333_0==STRING_LITERAL||LA333_0==STRING_START||(LA333_0 >= SUM_OP && LA333_0 <= SWITCH_CLAUSE)||(LA333_0 >= THIS && LA333_0 <= TRY_CLAUSE)||LA333_0==UIDENTIFIER||(LA333_0 >= VALUE_MODIFIER && LA333_0 <= WHILE_CLAUSE)) ) {
                alt333=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return block;}
                NoViableAltException nvae =
                    new NoViableAltException("", 333, 0, input);

                throw nvae;

            }
            switch (alt333) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3749:9: ( LBRACE )=>b= block
                    {
                    pushFollow(FOLLOW_block_in_controlBlock25306);
                    b=block();

                    state._fsp--;
                    if (state.failed) return block;

                    if ( state.backtracking==0 ) { block =b; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3751:9: 
                    {
                    if ( state.backtracking==0 ) { displayRecognitionError(getTokenNames(), 
                                    new MismatchedTokenException(LBRACE, input)); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "controlBlock"



    // $ANTLR start "dynamic"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3756:1: dynamic returns [DynamicStatement statement] : DYNAMIC block ;
    public DynamicStatement dynamic() throws RecognitionException {
        DynamicStatement statement = null;


        Token DYNAMIC563=null;
        Block block564 =null;


         DynamicClause dc = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3758:5: ( DYNAMIC block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3758:7: DYNAMIC block
            {
            if ( state.backtracking==0 ) { statement =new DynamicStatement(null); }

            DYNAMIC563=(Token)match(input,DYNAMIC,FOLLOW_DYNAMIC_in_dynamic25372); if (state.failed) return statement;

            if ( state.backtracking==0 ) { dc = new DynamicClause(DYNAMIC563);
                    statement.setDynamicClause(dc); }

            pushFollow(FOLLOW_block_in_dynamic25389);
            block564=block();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { dc.setBlock(block564); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "dynamic"



    // $ANTLR start "ifElse"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3766:1: ifElse returns [IfStatement statement] : ifBlock ( elseBlock )? ;
    public IfStatement ifElse() throws RecognitionException {
        IfStatement statement = null;


        IfClause ifBlock565 =null;

        ElseClause elseBlock566 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3767:5: ( ifBlock ( elseBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3767:7: ifBlock ( elseBlock )?
            {
            if ( state.backtracking==0 ) { statement =new IfStatement(null); }

            pushFollow(FOLLOW_ifBlock_in_ifElse25426);
            ifBlock565=ifBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setIfClause(ifBlock565); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3770:7: ( elseBlock )?
            int alt334=2;
            int LA334_0 = input.LA(1);

            if ( (LA334_0==ELSE_CLAUSE) ) {
                alt334=1;
            }
            switch (alt334) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3771:9: elseBlock
                    {
                    pushFollow(FOLLOW_elseBlock_in_ifElse25454);
                    elseBlock566=elseBlock();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { ElseClause ec = elseBlock566;
                              statement.setElseClause(ec);
                              ConditionList cl = ifBlock565.getConditionList();
                              if (cl!=null) {
                                List<Condition> conditions = cl.getConditions();
                                if (conditions.size()==1) {
                                  Condition c = conditions.get(0);
                                  Identifier id = null;
                                  Type t = null;
                                  if (c instanceof ExistsOrNonemptyCondition) {
                                    Statement s = ((ExistsOrNonemptyCondition)c).getVariable();
                                    if (s instanceof Variable) {
                                      Variable v = (Variable) s;
                                      t = v.getType();
                                      id = v.getIdentifier();
                                    }
                                  }
                                  else if (c instanceof IsCondition) {
                                    Variable v = (Variable) ((IsCondition)c).getVariable();
                                    if (v!=null) {
                                      t = v.getType();
                                      id = v.getIdentifier();
                                    }
                                  }
                                  if (id!=null && ec!=null && t instanceof SyntheticVariable) { 
                                    Variable ev = new Variable(null);
                                    ev.setType(new SyntheticVariable(null));
                                    SpecifierExpression ese = new SpecifierExpression(null);
                                    Expression ee = new Expression(null);
                                    BaseMemberExpression ebme = new BaseMemberExpression(null);
                                    ebme.setTypeArguments( new InferredTypeArguments(null) );
                                    ee.setTerm(ebme);
                                    ese.setExpression(ee);
                                    ev.setSpecifierExpression(ese);
                                    ec.setVariable(ev);
                                    ev.setIdentifier(id);
                                    ebme.setIdentifier(id);
                                  }
                                }
                              }
                            }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "ifElse"



    // $ANTLR start "ifBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3816:1: ifBlock returns [IfClause clause] : IF_CLAUSE conditions controlBlock ;
    public IfClause ifBlock() throws RecognitionException {
        IfClause clause = null;


        Token IF_CLAUSE567=null;
        ConditionList conditions568 =null;

        Block controlBlock569 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3817:5: ( IF_CLAUSE conditions controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3817:7: IF_CLAUSE conditions controlBlock
            {
            IF_CLAUSE567=(Token)match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_ifBlock25494); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new IfClause(IF_CLAUSE567); }

            pushFollow(FOLLOW_conditions_in_ifBlock25511);
            conditions568=conditions();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setConditionList(conditions568); }

            pushFollow(FOLLOW_controlBlock_in_ifBlock25527);
            controlBlock569=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock569); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "ifBlock"



    // $ANTLR start "elseBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3825:1: elseBlock returns [ElseClause clause] : ELSE_CLAUSE ( elseIf | block ) ;
    public ElseClause elseBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE570=null;
        Block elseIf571 =null;

        Block block572 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3826:5: ( ELSE_CLAUSE ( elseIf | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3826:7: ELSE_CLAUSE ( elseIf | block )
            {
            ELSE_CLAUSE570=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_elseBlock25556); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE570); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3828:7: ( elseIf | block )
            int alt335=2;
            int LA335_0 = input.LA(1);

            if ( (LA335_0==IF_CLAUSE) ) {
                alt335=1;
            }
            else if ( (LA335_0==LBRACE) ) {
                alt335=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return clause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 335, 0, input);

                throw nvae;

            }
            switch (alt335) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3829:9: elseIf
                    {
                    pushFollow(FOLLOW_elseIf_in_elseBlock25583);
                    elseIf571=elseIf();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(elseIf571); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3832:9: block
                    {
                    pushFollow(FOLLOW_block_in_elseBlock25613);
                    block572=block();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(block572); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "elseBlock"



    // $ANTLR start "elseIf"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3837:1: elseIf returns [Block block] : ifElse ;
    public Block elseIf() throws RecognitionException {
        Block block = null;


        IfStatement ifElse573 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3838:5: ( ifElse )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3838:7: ifElse
            {
            pushFollow(FOLLOW_ifElse_in_elseIf25652);
            ifElse573=ifElse();

            state._fsp--;
            if (state.failed) return block;

            if ( state.backtracking==0 ) { block = new Block(null);
                    block.addStatement(ifElse573); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return block;
    }
    // $ANTLR end "elseIf"



    // $ANTLR start "switchCaseElse"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3843:1: switchCaseElse returns [SwitchStatement statement] : switchHeader cases ;
    public SwitchStatement switchCaseElse() throws RecognitionException {
        SwitchStatement statement = null;


        SwitchClause switchHeader574 =null;

        SwitchCaseList cases575 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3844:5: ( switchHeader cases )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3844:7: switchHeader cases
            {
            if ( state.backtracking==0 ) { statement = new SwitchStatement(null); }

            pushFollow(FOLLOW_switchHeader_in_switchCaseElse25689);
            switchHeader574=switchHeader();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setSwitchClause(switchHeader574); }

            pushFollow(FOLLOW_cases_in_switchCaseElse25706);
            cases575=cases();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setSwitchCaseList(cases575);
                    Identifier id = null;
                    Switched sw = switchHeader574.getSwitched();
                    if (sw!=null) {
                      Expression ex = sw.getExpression();
                      if (ex!=null && ex.getTerm() instanceof BaseMemberExpression) {
                        id = ((BaseMemberExpression) ex.getTerm()).getIdentifier();
                      }
                      TypedDeclaration var = sw.getVariable();
                      if (var!=null) {
                        id = var.getIdentifier();
                      }
                    }
                    if (id!=null) {
                      for (CaseClause cc: cases575.getCaseClauses()) {
                        CaseItem item = cc.getCaseItem();
                        if (item instanceof IsCase) {
                          IsCase ic = (IsCase) item;
                          Variable v = new Variable(null);
                          v.setType(new SyntheticVariable(null));
                          SpecifierExpression se = new SpecifierExpression(null);
                          Expression e = new Expression(null);
                          BaseMemberExpression bme = new BaseMemberExpression(null);
                          bme.setTypeArguments( new InferredTypeArguments(null) );
                          e.setTerm(bme);
                          se.setExpression(e);
                          v.setSpecifierExpression(se);
                          ic.setVariable(v);
                          bme.setIdentifier(id);
                          v.setIdentifier(id);
                        }
                      }
                      ElseClause ec = cases575.getElseClause();
                      if (ec!=null) {
                        Variable ev = new Variable(null);
                        ev.setType(new SyntheticVariable(null));
                        SpecifierExpression ese = new SpecifierExpression(null);
                        Expression ee = new Expression(null);
                        BaseMemberExpression ebme = new BaseMemberExpression(null);
                        ebme.setTypeArguments( new InferredTypeArguments(null) );
                        ee.setTerm(ebme);
                        ese.setExpression(ee);
                        ev.setSpecifierExpression(ese);
                        ec.setVariable(ev);
                        ebme.setIdentifier(id);
                        ev.setIdentifier(id);
                      }
                    }
                  }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "switchCaseElse"



    // $ANTLR start "switchHeader"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3899:1: switchHeader returns [SwitchClause clause] : SWITCH_CLAUSE LPAREN ( switched )? RPAREN ;
    public SwitchClause switchHeader() throws RecognitionException {
        SwitchClause clause = null;


        Token SWITCH_CLAUSE576=null;
        Token LPAREN577=null;
        Token RPAREN579=null;
        Switched switched578 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3900:5: ( SWITCH_CLAUSE LPAREN ( switched )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3900:7: SWITCH_CLAUSE LPAREN ( switched )? RPAREN
            {
            SWITCH_CLAUSE576=(Token)match(input,SWITCH_CLAUSE,FOLLOW_SWITCH_CLAUSE_in_switchHeader25735); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new SwitchClause(SWITCH_CLAUSE576); }

            LPAREN577=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_switchHeader25752); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setEndToken(LPAREN577); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3904:7: ( switched )?
            int alt336=2;
            int LA336_0 = input.LA(1);

            if ( (LA336_0==BACKTICK||LA336_0==CHAR_LITERAL||LA336_0==COMPILER_ANNOTATION||(LA336_0 >= DECREMENT_OP && LA336_0 <= DIFFERENCE_OP)||LA336_0==DYNAMIC||LA336_0==FLOAT_LITERAL||LA336_0==FUNCTION_MODIFIER||LA336_0==INCREMENT_OP||(LA336_0 >= LBRACE && LA336_0 <= LBRACKET)||LA336_0==LIDENTIFIER||LA336_0==LPAREN||LA336_0==NATURAL_LITERAL||(LA336_0 >= NOT_OP && LA336_0 <= OBJECT_DEFINITION)||(LA336_0 >= OUTER && LA336_0 <= PACKAGE)||LA336_0==SMALLER_OP||LA336_0==STRING_LITERAL||LA336_0==STRING_START||(LA336_0 >= SUM_OP && LA336_0 <= SUPER)||LA336_0==THIS||LA336_0==UIDENTIFIER||(LA336_0 >= VALUE_MODIFIER && LA336_0 <= VOID_MODIFIER)) ) {
                alt336=1;
            }
            switch (alt336) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3905:9: switched
                    {
                    pushFollow(FOLLOW_switched_in_switchHeader25778);
                    switched578=switched();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setSwitched(switched578); 
                              clause.setEndToken(null); }

                    }
                    break;

            }


            RPAREN579=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_switchHeader25806); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setEndToken(RPAREN579); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "switchHeader"



    // $ANTLR start "switched"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3913:1: switched returns [Switched switched] : ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression ) ;
    public Switched switched() throws RecognitionException {
        Switched switched = null;


        Variable specifiedVariable580 =null;

        Expression expression581 =null;


         switched = new Switched(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3915:5: ( ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3915:7: ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression )
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3915:7: ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression )
            int alt337=2;
            int LA337_0 = input.LA(1);

            if ( (LA337_0==COMPILER_ANNOTATION) && (synpred49_Ceylon())) {
                alt337=1;
            }
            else if ( (LA337_0==SMALLER_OP) && (synpred49_Ceylon())) {
                alt337=1;
            }
            else if ( (LA337_0==UIDENTIFIER) ) {
                int LA337_3 = input.LA(2);

                if ( (synpred49_Ceylon()) ) {
                    alt337=1;
                }
                else if ( (true) ) {
                    alt337=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 337, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA337_0==PACKAGE) ) {
                int LA337_4 = input.LA(2);

                if ( (synpred49_Ceylon()) ) {
                    alt337=1;
                }
                else if ( (true) ) {
                    alt337=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 337, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA337_0==LBRACKET) ) {
                int LA337_5 = input.LA(2);

                if ( (synpred49_Ceylon()) ) {
                    alt337=1;
                }
                else if ( (true) ) {
                    alt337=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 337, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA337_0==LBRACE) ) {
                int LA337_6 = input.LA(2);

                if ( (synpred49_Ceylon()) ) {
                    alt337=1;
                }
                else if ( (true) ) {
                    alt337=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 337, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA337_0==VOID_MODIFIER) && (synpred49_Ceylon())) {
                alt337=1;
            }
            else if ( (LA337_0==FUNCTION_MODIFIER) && (synpred49_Ceylon())) {
                alt337=1;
            }
            else if ( (LA337_0==VALUE_MODIFIER) && (synpred49_Ceylon())) {
                alt337=1;
            }
            else if ( (LA337_0==LIDENTIFIER) ) {
                int LA337_10 = input.LA(2);

                if ( (synpred49_Ceylon()) ) {
                    alt337=1;
                }
                else if ( (true) ) {
                    alt337=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return switched;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 337, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA337_0==BACKTICK||LA337_0==CHAR_LITERAL||(LA337_0 >= DECREMENT_OP && LA337_0 <= DIFFERENCE_OP)||LA337_0==DYNAMIC||LA337_0==FLOAT_LITERAL||LA337_0==INCREMENT_OP||LA337_0==LPAREN||LA337_0==NATURAL_LITERAL||(LA337_0 >= NOT_OP && LA337_0 <= OBJECT_DEFINITION)||LA337_0==OUTER||LA337_0==STRING_LITERAL||LA337_0==STRING_START||(LA337_0 >= SUM_OP && LA337_0 <= SUPER)||LA337_0==THIS||LA337_0==VERBATIM_STRING) ) {
                alt337=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return switched;}
                NoViableAltException nvae =
                    new NoViableAltException("", 337, 0, input);

                throw nvae;

            }
            switch (alt337) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3915:9: ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable
                    {
                    pushFollow(FOLLOW_specifiedVariable_in_switched25865);
                    specifiedVariable580=specifiedVariable();

                    state._fsp--;
                    if (state.failed) return switched;

                    if ( state.backtracking==0 ) { switched.setVariable(specifiedVariable580); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3918:9: expression
                    {
                    pushFollow(FOLLOW_expression_in_switched25885);
                    expression581=expression();

                    state._fsp--;
                    if (state.failed) return switched;

                    if ( state.backtracking==0 ) { switched.setExpression(expression581); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return switched;
    }
    // $ANTLR end "switched"



    // $ANTLR start "cases"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3923:1: cases returns [SwitchCaseList switchCaseList] : ( caseBlock )+ ( defaultCaseBlock )? ;
    public SwitchCaseList cases() throws RecognitionException {
        SwitchCaseList switchCaseList = null;


        CaseClause caseBlock582 =null;

        ElseClause defaultCaseBlock583 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3924:5: ( ( caseBlock )+ ( defaultCaseBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3924:7: ( caseBlock )+ ( defaultCaseBlock )?
            {
            if ( state.backtracking==0 ) { switchCaseList = new SwitchCaseList(null); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3925:7: ( caseBlock )+
            int cnt338=0;
            loop338:
            do {
                int alt338=2;
                int LA338_0 = input.LA(1);

                if ( (LA338_0==CASE_CLAUSE) ) {
                    alt338=1;
                }


                switch (alt338) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3926:9: caseBlock
            	    {
            	    pushFollow(FOLLOW_caseBlock_in_cases25942);
            	    caseBlock582=caseBlock();

            	    state._fsp--;
            	    if (state.failed) return switchCaseList;

            	    if ( state.backtracking==0 ) { switchCaseList.addCaseClause(caseBlock582); }

            	    }
            	    break;

            	default :
            	    if ( cnt338 >= 1 ) break loop338;
            	    if (state.backtracking>0) {state.failed=true; return switchCaseList;}
                        EarlyExitException eee =
                            new EarlyExitException(338, input);
                        throw eee;
                }
                cnt338++;
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3929:7: ( defaultCaseBlock )?
            int alt339=2;
            int LA339_0 = input.LA(1);

            if ( (LA339_0==ELSE_CLAUSE) ) {
                alt339=1;
            }
            switch (alt339) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3930:9: defaultCaseBlock
                    {
                    pushFollow(FOLLOW_defaultCaseBlock_in_cases25979);
                    defaultCaseBlock583=defaultCaseBlock();

                    state._fsp--;
                    if (state.failed) return switchCaseList;

                    if ( state.backtracking==0 ) { switchCaseList.setElseClause(defaultCaseBlock583); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return switchCaseList;
    }
    // $ANTLR end "cases"



    // $ANTLR start "caseBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3935:1: caseBlock returns [CaseClause clause] : CASE_CLAUSE caseItemList block ;
    public CaseClause caseBlock() throws RecognitionException {
        CaseClause clause = null;


        Token CASE_CLAUSE584=null;
        CaseItem caseItemList585 =null;

        Block block586 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3936:5: ( CASE_CLAUSE caseItemList block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3936:7: CASE_CLAUSE caseItemList block
            {
            CASE_CLAUSE584=(Token)match(input,CASE_CLAUSE,FOLLOW_CASE_CLAUSE_in_caseBlock26023); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new CaseClause(CASE_CLAUSE584); }

            pushFollow(FOLLOW_caseItemList_in_caseBlock26040);
            caseItemList585=caseItemList();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setCaseItem(caseItemList585); }

            pushFollow(FOLLOW_block_in_caseBlock26056);
            block586=block();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(block586); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "caseBlock"



    // $ANTLR start "defaultCaseBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3944:1: defaultCaseBlock returns [ElseClause clause] : ELSE_CLAUSE block ;
    public ElseClause defaultCaseBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE587=null;
        Block block588 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3945:5: ( ELSE_CLAUSE block )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3945:7: ELSE_CLAUSE block
            {
            ELSE_CLAUSE587=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_defaultCaseBlock26085); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE587); }

            pushFollow(FOLLOW_block_in_defaultCaseBlock26102);
            block588=block();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(block588); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "defaultCaseBlock"



    // $ANTLR start "caseItemList"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3951:1: caseItemList returns [CaseItem item] : LPAREN (ci= caseItem )? RPAREN ;
    public CaseItem caseItemList() throws RecognitionException {
        CaseItem item = null;


        Token RPAREN589=null;
        CaseItem ci =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3952:5: ( LPAREN (ci= caseItem )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3952:7: LPAREN (ci= caseItem )? RPAREN
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_caseItemList26131); if (state.failed) return item;

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3953:7: (ci= caseItem )?
            int alt340=2;
            int LA340_0 = input.LA(1);

            if ( (LA340_0==BACKTICK||LA340_0==CHAR_LITERAL||(LA340_0 >= DECREMENT_OP && LA340_0 <= DIFFERENCE_OP)||LA340_0==DYNAMIC||LA340_0==FLOAT_LITERAL||LA340_0==INCREMENT_OP||LA340_0==IS_OP||(LA340_0 >= LBRACE && LA340_0 <= LBRACKET)||LA340_0==LIDENTIFIER||LA340_0==LPAREN||LA340_0==NATURAL_LITERAL||LA340_0==OBJECT_DEFINITION||(LA340_0 >= OUTER && LA340_0 <= PACKAGE)||LA340_0==SATISFIES||LA340_0==STRING_LITERAL||LA340_0==STRING_START||(LA340_0 >= SUM_OP && LA340_0 <= SUPER)||LA340_0==THIS||LA340_0==UIDENTIFIER||LA340_0==VERBATIM_STRING) ) {
                alt340=1;
            }
            switch (alt340) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3954:9: ci= caseItem
                    {
                    pushFollow(FOLLOW_caseItem_in_caseItemList26152);
                    ci=caseItem();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item = ci; }

                    }
                    break;

            }


            RPAREN589=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_caseItemList26179); if (state.failed) return item;

            if ( state.backtracking==0 ) { if (item!=null) 
                        item.setEndToken(RPAREN589); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "caseItemList"



    // $ANTLR start "caseItem"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3962:1: caseItem returns [CaseItem item] : ( ( IS_OP )=> isCaseCondition | ( SATISFIES )=> satisfiesCaseCondition | matchCaseCondition );
    public CaseItem caseItem() throws RecognitionException {
        CaseItem item = null;


        IsCase isCaseCondition590 =null;

        SatisfiesCase satisfiesCaseCondition591 =null;

        MatchCase matchCaseCondition592 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3963:5: ( ( IS_OP )=> isCaseCondition | ( SATISFIES )=> satisfiesCaseCondition | matchCaseCondition )
            int alt341=3;
            int LA341_0 = input.LA(1);

            if ( (LA341_0==IS_OP) && (synpred50_Ceylon())) {
                alt341=1;
            }
            else if ( (LA341_0==SATISFIES) && (synpred51_Ceylon())) {
                alt341=2;
            }
            else if ( (LA341_0==BACKTICK||LA341_0==CHAR_LITERAL||(LA341_0 >= DECREMENT_OP && LA341_0 <= DIFFERENCE_OP)||LA341_0==DYNAMIC||LA341_0==FLOAT_LITERAL||LA341_0==INCREMENT_OP||(LA341_0 >= LBRACE && LA341_0 <= LBRACKET)||LA341_0==LIDENTIFIER||LA341_0==LPAREN||LA341_0==NATURAL_LITERAL||LA341_0==OBJECT_DEFINITION||(LA341_0 >= OUTER && LA341_0 <= PACKAGE)||LA341_0==STRING_LITERAL||LA341_0==STRING_START||(LA341_0 >= SUM_OP && LA341_0 <= SUPER)||LA341_0==THIS||LA341_0==UIDENTIFIER||LA341_0==VERBATIM_STRING) ) {
                alt341=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return item;}
                NoViableAltException nvae =
                    new NoViableAltException("", 341, 0, input);

                throw nvae;

            }
            switch (alt341) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3963:7: ( IS_OP )=> isCaseCondition
                    {
                    pushFollow(FOLLOW_isCaseCondition_in_caseItem26213);
                    isCaseCondition590=isCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =isCaseCondition590; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3965:7: ( SATISFIES )=> satisfiesCaseCondition
                    {
                    pushFollow(FOLLOW_satisfiesCaseCondition_in_caseItem26234);
                    satisfiesCaseCondition591=satisfiesCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =satisfiesCaseCondition591; }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3967:7: matchCaseCondition
                    {
                    pushFollow(FOLLOW_matchCaseCondition_in_caseItem26250);
                    matchCaseCondition592=matchCaseCondition();

                    state._fsp--;
                    if (state.failed) return item;

                    if ( state.backtracking==0 ) { item =matchCaseCondition592; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "caseItem"



    // $ANTLR start "matchCaseCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3971:1: matchCaseCondition returns [MatchCase item] : valueCaseList ;
    public MatchCase matchCaseCondition() throws RecognitionException {
        MatchCase item = null;


        ExpressionList valueCaseList593 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3972:5: ( valueCaseList )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3972:7: valueCaseList
            {
            pushFollow(FOLLOW_valueCaseList_in_matchCaseCondition26279);
            valueCaseList593=valueCaseList();

            state._fsp--;
            if (state.failed) return item;

            if ( state.backtracking==0 ) { item = new MatchCase(null);
                    item.setExpressionList(valueCaseList593); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "matchCaseCondition"



    // $ANTLR start "isCaseCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3977:1: isCaseCondition returns [IsCase item] : IS_OP type ;
    public IsCase isCaseCondition() throws RecognitionException {
        IsCase item = null;


        Token IS_OP594=null;
        StaticType type595 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3978:5: ( IS_OP type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3978:7: IS_OP type
            {
            IS_OP594=(Token)match(input,IS_OP,FOLLOW_IS_OP_in_isCaseCondition26308); if (state.failed) return item;

            if ( state.backtracking==0 ) { item = new IsCase(IS_OP594); }

            pushFollow(FOLLOW_type_in_isCaseCondition26325);
            type595=type();

            state._fsp--;
            if (state.failed) return item;

            if ( state.backtracking==0 ) { item.setType(type595); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "isCaseCondition"



    // $ANTLR start "satisfiesCaseCondition"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3984:1: satisfiesCaseCondition returns [SatisfiesCase item] : SATISFIES type ;
    public SatisfiesCase satisfiesCaseCondition() throws RecognitionException {
        SatisfiesCase item = null;


        Token SATISFIES596=null;
        StaticType type597 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3985:5: ( SATISFIES type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3985:7: SATISFIES type
            {
            SATISFIES596=(Token)match(input,SATISFIES,FOLLOW_SATISFIES_in_satisfiesCaseCondition26354); if (state.failed) return item;

            if ( state.backtracking==0 ) { item = new SatisfiesCase(SATISFIES596); }

            pushFollow(FOLLOW_type_in_satisfiesCaseCondition26371);
            type597=type();

            state._fsp--;
            if (state.failed) return item;

            if ( state.backtracking==0 ) { item.setType(type597); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return item;
    }
    // $ANTLR end "satisfiesCaseCondition"



    // $ANTLR start "forElse"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3991:1: forElse returns [ForStatement statement] : forBlock ( failBlock )? ;
    public ForStatement forElse() throws RecognitionException {
        ForStatement statement = null;


        ForClause forBlock598 =null;

        ElseClause failBlock599 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3992:5: ( forBlock ( failBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3992:7: forBlock ( failBlock )?
            {
            if ( state.backtracking==0 ) { statement =new ForStatement(null); }

            pushFollow(FOLLOW_forBlock_in_forElse26408);
            forBlock598=forBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setForClause(forBlock598); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3995:7: ( failBlock )?
            int alt342=2;
            int LA342_0 = input.LA(1);

            if ( (LA342_0==ELSE_CLAUSE) ) {
                alt342=1;
            }
            switch (alt342) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3996:9: failBlock
                    {
                    pushFollow(FOLLOW_failBlock_in_forElse26435);
                    failBlock599=failBlock();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setElseClause(failBlock599); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "forElse"



    // $ANTLR start "forBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4001:1: forBlock returns [ForClause clause] : FOR_CLAUSE forIterator controlBlock ;
    public ForClause forBlock() throws RecognitionException {
        ForClause clause = null;


        Token FOR_CLAUSE600=null;
        ForIterator forIterator601 =null;

        Block controlBlock602 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4002:5: ( FOR_CLAUSE forIterator controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4002:7: FOR_CLAUSE forIterator controlBlock
            {
            FOR_CLAUSE600=(Token)match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_forBlock26475); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ForClause(FOR_CLAUSE600); }

            pushFollow(FOLLOW_forIterator_in_forBlock26492);
            forIterator601=forIterator();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setForIterator(forIterator601); }

            pushFollow(FOLLOW_controlBlock_in_forBlock26509);
            controlBlock602=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock602); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "forBlock"



    // $ANTLR start "failBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4010:1: failBlock returns [ElseClause clause] : ELSE_CLAUSE controlBlock ;
    public ElseClause failBlock() throws RecognitionException {
        ElseClause clause = null;


        Token ELSE_CLAUSE603=null;
        Block controlBlock604 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4011:5: ( ELSE_CLAUSE controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4011:7: ELSE_CLAUSE controlBlock
            {
            ELSE_CLAUSE603=(Token)match(input,ELSE_CLAUSE,FOLLOW_ELSE_CLAUSE_in_failBlock26538); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new ElseClause(ELSE_CLAUSE603); }

            pushFollow(FOLLOW_controlBlock_in_failBlock26555);
            controlBlock604=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock604); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "failBlock"



    // $ANTLR start "forIterator"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4017:1: forIterator returns [ForIterator iterator] : LPAREN ( ( ( patternStart )=> pattern | variable ) ( containment )? )? RPAREN ;
    public ForIterator forIterator() throws RecognitionException {
        ForIterator iterator = null;


        Token LPAREN605=null;
        Token RPAREN609=null;
        Pattern pattern606 =null;

        Variable variable607 =null;

        SpecifierExpression containment608 =null;


         ValueIterator vi = null;
                    PatternIterator pi = null; 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4020:5: ( LPAREN ( ( ( patternStart )=> pattern | variable ) ( containment )? )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4020:7: LPAREN ( ( ( patternStart )=> pattern | variable ) ( containment )? )? RPAREN
            {
            LPAREN605=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_forIterator26593); if (state.failed) return iterator;

            if ( state.backtracking==0 ) { vi = new ValueIterator(LPAREN605); 
            	      pi = new PatternIterator(LPAREN605); 
            	      iterator = vi; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4024:6: ( ( ( patternStart )=> pattern | variable ) ( containment )? )?
            int alt345=2;
            int LA345_0 = input.LA(1);

            if ( (LA345_0==COMPILER_ANNOTATION||LA345_0==FUNCTION_MODIFIER||(LA345_0 >= LBRACE && LA345_0 <= LBRACKET)||LA345_0==LIDENTIFIER||LA345_0==PACKAGE||LA345_0==SMALLER_OP||LA345_0==UIDENTIFIER||LA345_0==VALUE_MODIFIER||LA345_0==VOID_MODIFIER) ) {
                alt345=1;
            }
            switch (alt345) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4025:8: ( ( patternStart )=> pattern | variable ) ( containment )?
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4025:8: ( ( patternStart )=> pattern | variable )
                    int alt343=2;
                    switch ( input.LA(1) ) {
                    case LBRACKET:
                        {
                        int LA343_1 = input.LA(2);

                        if ( (synpred52_Ceylon()) ) {
                            alt343=1;
                        }
                        else if ( (true) ) {
                            alt343=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 343, 1, input);

                            throw nvae;

                        }
                        }
                        break;
                    case COMPILER_ANNOTATION:
                        {
                        int LA343_2 = input.LA(2);

                        if ( (synpred52_Ceylon()) ) {
                            alt343=1;
                        }
                        else if ( (true) ) {
                            alt343=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 343, 2, input);

                            throw nvae;

                        }
                        }
                        break;
                    case SMALLER_OP:
                        {
                        int LA343_3 = input.LA(2);

                        if ( (synpred52_Ceylon()) ) {
                            alt343=1;
                        }
                        else if ( (true) ) {
                            alt343=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 343, 3, input);

                            throw nvae;

                        }
                        }
                        break;
                    case UIDENTIFIER:
                        {
                        int LA343_4 = input.LA(2);

                        if ( (synpred52_Ceylon()) ) {
                            alt343=1;
                        }
                        else if ( (true) ) {
                            alt343=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 343, 4, input);

                            throw nvae;

                        }
                        }
                        break;
                    case PACKAGE:
                        {
                        int LA343_5 = input.LA(2);

                        if ( (synpred52_Ceylon()) ) {
                            alt343=1;
                        }
                        else if ( (true) ) {
                            alt343=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 343, 5, input);

                            throw nvae;

                        }
                        }
                        break;
                    case LBRACE:
                        {
                        int LA343_6 = input.LA(2);

                        if ( (synpred52_Ceylon()) ) {
                            alt343=1;
                        }
                        else if ( (true) ) {
                            alt343=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 343, 6, input);

                            throw nvae;

                        }
                        }
                        break;
                    case VOID_MODIFIER:
                        {
                        int LA343_7 = input.LA(2);

                        if ( (synpred52_Ceylon()) ) {
                            alt343=1;
                        }
                        else if ( (true) ) {
                            alt343=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 343, 7, input);

                            throw nvae;

                        }
                        }
                        break;
                    case FUNCTION_MODIFIER:
                        {
                        int LA343_8 = input.LA(2);

                        if ( (synpred52_Ceylon()) ) {
                            alt343=1;
                        }
                        else if ( (true) ) {
                            alt343=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 343, 8, input);

                            throw nvae;

                        }
                        }
                        break;
                    case VALUE_MODIFIER:
                        {
                        int LA343_9 = input.LA(2);

                        if ( (synpred52_Ceylon()) ) {
                            alt343=1;
                        }
                        else if ( (true) ) {
                            alt343=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 343, 9, input);

                            throw nvae;

                        }
                        }
                        break;
                    case LIDENTIFIER:
                        {
                        int LA343_10 = input.LA(2);

                        if ( (synpred52_Ceylon()) ) {
                            alt343=1;
                        }
                        else if ( (true) ) {
                            alt343=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return iterator;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 343, 10, input);

                            throw nvae;

                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return iterator;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 343, 0, input);

                        throw nvae;

                    }

                    switch (alt343) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4026:10: ( patternStart )=> pattern
                            {
                            pushFollow(FOLLOW_pattern_in_forIterator26634);
                            pattern606=pattern();

                            state._fsp--;
                            if (state.failed) return iterator;

                            if ( state.backtracking==0 ) { pi.setPattern(pattern606);
                            	          iterator = pi; }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4030:10: variable
                            {
                            pushFollow(FOLLOW_variable_in_forIterator26665);
                            variable607=variable();

                            state._fsp--;
                            if (state.failed) return iterator;

                            if ( state.backtracking==0 ) { vi.setVariable(variable607); }

                            }
                            break;

                    }


                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4033:8: ( containment )?
                    int alt344=2;
                    int LA344_0 = input.LA(1);

                    if ( (LA344_0==IN_OP) ) {
                        alt344=1;
                    }
                    switch (alt344) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4034:10: containment
                            {
                            pushFollow(FOLLOW_containment_in_forIterator26705);
                            containment608=containment();

                            state._fsp--;
                            if (state.failed) return iterator;

                            if ( state.backtracking==0 ) { iterator.setSpecifierExpression(containment608); }

                            }
                            break;

                    }


                    }
                    break;

            }


            RPAREN609=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_forIterator26741); if (state.failed) return iterator;

            if ( state.backtracking==0 ) { iterator.setEndToken(RPAREN609); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return iterator;
    }
    // $ANTLR end "forIterator"



    // $ANTLR start "containment"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4042:1: containment returns [SpecifierExpression specifierExpression] : IN_OP ( expression )? ;
    public SpecifierExpression containment() throws RecognitionException {
        SpecifierExpression specifierExpression = null;


        Token IN_OP610=null;
        Expression expression611 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4043:5: ( IN_OP ( expression )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4043:7: IN_OP ( expression )?
            {
            IN_OP610=(Token)match(input,IN_OP,FOLLOW_IN_OP_in_containment26773); if (state.failed) return specifierExpression;

            if ( state.backtracking==0 ) { specifierExpression = new SpecifierExpression(IN_OP610); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4045:7: ( expression )?
            int alt346=2;
            int LA346_0 = input.LA(1);

            if ( (LA346_0==BACKTICK||LA346_0==CHAR_LITERAL||(LA346_0 >= DECREMENT_OP && LA346_0 <= DIFFERENCE_OP)||LA346_0==DYNAMIC||LA346_0==FLOAT_LITERAL||LA346_0==INCREMENT_OP||(LA346_0 >= LBRACE && LA346_0 <= LBRACKET)||LA346_0==LIDENTIFIER||LA346_0==LPAREN||LA346_0==NATURAL_LITERAL||(LA346_0 >= NOT_OP && LA346_0 <= OBJECT_DEFINITION)||(LA346_0 >= OUTER && LA346_0 <= PACKAGE)||LA346_0==STRING_LITERAL||LA346_0==STRING_START||(LA346_0 >= SUM_OP && LA346_0 <= SUPER)||LA346_0==THIS||LA346_0==UIDENTIFIER||LA346_0==VERBATIM_STRING) ) {
                alt346=1;
            }
            switch (alt346) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4045:8: expression
                    {
                    pushFollow(FOLLOW_expression_in_containment26791);
                    expression611=expression();

                    state._fsp--;
                    if (state.failed) return specifierExpression;

                    if ( state.backtracking==0 ) { specifierExpression.setExpression(expression611); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return specifierExpression;
    }
    // $ANTLR end "containment"



    // $ANTLR start "whileLoop"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4049:1: whileLoop returns [WhileStatement statement] : whileBlock ;
    public WhileStatement whileLoop() throws RecognitionException {
        WhileStatement statement = null;


        WhileClause whileBlock612 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4050:5: ( whileBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4050:7: whileBlock
            {
            if ( state.backtracking==0 ) { statement = new WhileStatement(null); }

            pushFollow(FOLLOW_whileBlock_in_whileLoop26834);
            whileBlock612=whileBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setWhileClause(whileBlock612); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "whileLoop"



    // $ANTLR start "whileBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4055:1: whileBlock returns [WhileClause clause] : WHILE_CLAUSE conditions controlBlock ;
    public WhileClause whileBlock() throws RecognitionException {
        WhileClause clause = null;


        Token WHILE_CLAUSE613=null;
        ConditionList conditions614 =null;

        Block controlBlock615 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4056:5: ( WHILE_CLAUSE conditions controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4056:7: WHILE_CLAUSE conditions controlBlock
            {
            WHILE_CLAUSE613=(Token)match(input,WHILE_CLAUSE,FOLLOW_WHILE_CLAUSE_in_whileBlock26863); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new WhileClause(WHILE_CLAUSE613); }

            pushFollow(FOLLOW_conditions_in_whileBlock26879);
            conditions614=conditions();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setConditionList(conditions614); }

            pushFollow(FOLLOW_controlBlock_in_whileBlock26895);
            controlBlock615=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock615); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "whileBlock"



    // $ANTLR start "tryCatchFinally"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4064:1: tryCatchFinally returns [TryCatchStatement statement] : tryBlock ( catchBlock )* ( finallyBlock )? ;
    public TryCatchStatement tryCatchFinally() throws RecognitionException {
        TryCatchStatement statement = null;


        TryClause tryBlock616 =null;

        CatchClause catchBlock617 =null;

        FinallyClause finallyBlock618 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4065:5: ( tryBlock ( catchBlock )* ( finallyBlock )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4065:7: tryBlock ( catchBlock )* ( finallyBlock )?
            {
            if ( state.backtracking==0 ) { statement = new TryCatchStatement(null); }

            pushFollow(FOLLOW_tryBlock_in_tryCatchFinally26932);
            tryBlock616=tryBlock();

            state._fsp--;
            if (state.failed) return statement;

            if ( state.backtracking==0 ) { statement.setTryClause(tryBlock616); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4068:7: ( catchBlock )*
            loop347:
            do {
                int alt347=2;
                int LA347_0 = input.LA(1);

                if ( (LA347_0==CATCH_CLAUSE) ) {
                    alt347=1;
                }


                switch (alt347) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4069:9: catchBlock
            	    {
            	    pushFollow(FOLLOW_catchBlock_in_tryCatchFinally26959);
            	    catchBlock617=catchBlock();

            	    state._fsp--;
            	    if (state.failed) return statement;

            	    if ( state.backtracking==0 ) { statement.addCatchClause(catchBlock617); }

            	    }
            	    break;

            	default :
            	    break loop347;
                }
            } while (true);


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4072:7: ( finallyBlock )?
            int alt348=2;
            int LA348_0 = input.LA(1);

            if ( (LA348_0==FINALLY_CLAUSE) ) {
                alt348=1;
            }
            switch (alt348) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4073:9: finallyBlock
                    {
                    pushFollow(FOLLOW_finallyBlock_in_tryCatchFinally26998);
                    finallyBlock618=finallyBlock();

                    state._fsp--;
                    if (state.failed) return statement;

                    if ( state.backtracking==0 ) { statement.setFinallyClause(finallyBlock618); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return statement;
    }
    // $ANTLR end "tryCatchFinally"



    // $ANTLR start "tryBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4078:1: tryBlock returns [TryClause clause] : TRY_CLAUSE ( resources controlBlock | block ) ;
    public TryClause tryBlock() throws RecognitionException {
        TryClause clause = null;


        Token TRY_CLAUSE619=null;
        ResourceList resources620 =null;

        Block controlBlock621 =null;

        Block block622 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4079:5: ( TRY_CLAUSE ( resources controlBlock | block ) )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4079:7: TRY_CLAUSE ( resources controlBlock | block )
            {
            TRY_CLAUSE619=(Token)match(input,TRY_CLAUSE,FOLLOW_TRY_CLAUSE_in_tryBlock27038); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new TryClause(TRY_CLAUSE619); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4081:7: ( resources controlBlock | block )
            int alt349=2;
            int LA349_0 = input.LA(1);

            if ( (LA349_0==LPAREN) ) {
                alt349=1;
            }
            else if ( (LA349_0==LBRACE) ) {
                alt349=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return clause;}
                NoViableAltException nvae =
                    new NoViableAltException("", 349, 0, input);

                throw nvae;

            }
            switch (alt349) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4082:9: resources controlBlock
                    {
                    pushFollow(FOLLOW_resources_in_tryBlock27065);
                    resources620=resources();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setResourceList(resources620); }

                    pushFollow(FOLLOW_controlBlock_in_tryBlock27085);
                    controlBlock621=controlBlock();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(controlBlock621); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4087:9: block
                    {
                    pushFollow(FOLLOW_block_in_tryBlock27113);
                    block622=block();

                    state._fsp--;
                    if (state.failed) return clause;

                    if ( state.backtracking==0 ) { clause.setBlock(block622); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "tryBlock"



    // $ANTLR start "catchBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4092:1: catchBlock returns [CatchClause clause] : CATCH_CLAUSE catchVariable controlBlock ;
    public CatchClause catchBlock() throws RecognitionException {
        CatchClause clause = null;


        Token CATCH_CLAUSE623=null;
        CatchVariable catchVariable624 =null;

        Block controlBlock625 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4093:5: ( CATCH_CLAUSE catchVariable controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4093:7: CATCH_CLAUSE catchVariable controlBlock
            {
            CATCH_CLAUSE623=(Token)match(input,CATCH_CLAUSE,FOLLOW_CATCH_CLAUSE_in_catchBlock27152); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new CatchClause(CATCH_CLAUSE623); }

            pushFollow(FOLLOW_catchVariable_in_catchBlock27169);
            catchVariable624=catchVariable();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setCatchVariable(catchVariable624); }

            pushFollow(FOLLOW_controlBlock_in_catchBlock27185);
            controlBlock625=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock625); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "catchBlock"



    // $ANTLR start "catchVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4101:1: catchVariable returns [CatchVariable catchVariable] : LPAREN ( variable )? RPAREN ;
    public CatchVariable catchVariable() throws RecognitionException {
        CatchVariable catchVariable = null;


        Token LPAREN626=null;
        Token RPAREN628=null;
        Variable variable627 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4102:5: ( LPAREN ( variable )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4102:7: LPAREN ( variable )? RPAREN
            {
            LPAREN626=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_catchVariable27214); if (state.failed) return catchVariable;

            if ( state.backtracking==0 ) { catchVariable =new CatchVariable(LPAREN626); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4104:7: ( variable )?
            int alt350=2;
            int LA350_0 = input.LA(1);

            if ( (LA350_0==ALIAS||(LA350_0 >= ASSERT && LA350_0 <= ASSIGN)||(LA350_0 >= BACKTICK && LA350_0 <= BREAK)||(LA350_0 >= CHAR_LITERAL && LA350_0 <= CLASS_DEFINITION)||LA350_0==COMPILER_ANNOTATION||LA350_0==CONTINUE||(LA350_0 >= DECREMENT_OP && LA350_0 <= DIFFERENCE_OP)||LA350_0==DYNAMIC||(LA350_0 >= FLOAT_LITERAL && LA350_0 <= FUNCTION_MODIFIER)||(LA350_0 >= IF_CLAUSE && LA350_0 <= INTERFACE_DEFINITION)||LA350_0==IN_OP||(LA350_0 >= LBRACE && LA350_0 <= LIDENTIFIER)||LA350_0==LPAREN||LA350_0==MODULE||(LA350_0 >= NATURAL_LITERAL && LA350_0 <= NEW)||(LA350_0 >= NOT_OP && LA350_0 <= OBJECT_DEFINITION)||(LA350_0 >= OUT && LA350_0 <= PACKAGE)||LA350_0==PRODUCT_OP||LA350_0==RETURN||(LA350_0 >= SEMICOLON && LA350_0 <= SMALLER_OP)||LA350_0==STRING_LITERAL||LA350_0==STRING_START||(LA350_0 >= SUM_OP && LA350_0 <= SWITCH_CLAUSE)||(LA350_0 >= THIS && LA350_0 <= UIDENTIFIER)||(LA350_0 >= VALUE_MODIFIER && LA350_0 <= WHILE_CLAUSE)) ) {
                alt350=1;
            }
            switch (alt350) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4105:7: variable
                    {
                    pushFollow(FOLLOW_variable_in_catchVariable27239);
                    variable627=variable();

                    state._fsp--;
                    if (state.failed) return catchVariable;

                    if ( state.backtracking==0 ) { catchVariable.setVariable(variable627); }

                    }
                    break;

            }


            RPAREN628=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_catchVariable27265); if (state.failed) return catchVariable;

            if ( state.backtracking==0 ) { catchVariable.setEndToken(RPAREN628); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return catchVariable;
    }
    // $ANTLR end "catchVariable"



    // $ANTLR start "finallyBlock"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4113:1: finallyBlock returns [FinallyClause clause] : FINALLY_CLAUSE controlBlock ;
    public FinallyClause finallyBlock() throws RecognitionException {
        FinallyClause clause = null;


        Token FINALLY_CLAUSE629=null;
        Block controlBlock630 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4114:5: ( FINALLY_CLAUSE controlBlock )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4114:7: FINALLY_CLAUSE controlBlock
            {
            FINALLY_CLAUSE629=(Token)match(input,FINALLY_CLAUSE,FOLLOW_FINALLY_CLAUSE_in_finallyBlock27296); if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause = new FinallyClause(FINALLY_CLAUSE629); }

            pushFollow(FOLLOW_controlBlock_in_finallyBlock27313);
            controlBlock630=controlBlock();

            state._fsp--;
            if (state.failed) return clause;

            if ( state.backtracking==0 ) { clause.setBlock(controlBlock630); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return clause;
    }
    // $ANTLR end "finallyBlock"



    // $ANTLR start "resources"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4120:1: resources returns [ResourceList resources] : LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN ;
    public ResourceList resources() throws RecognitionException {
        ResourceList resources = null;


        Token c=null;
        Token LPAREN631=null;
        Token RPAREN632=null;
        Resource r1 =null;

        Resource r2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4121:5: ( LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4121:7: LPAREN (r1= resource (c= COMMA r2= resource )* )? RPAREN
            {
            LPAREN631=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_resources27342); if (state.failed) return resources;

            if ( state.backtracking==0 ) { resources = new ResourceList(LPAREN631); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4123:6: (r1= resource (c= COMMA r2= resource )* )?
            int alt352=2;
            int LA352_0 = input.LA(1);

            if ( (LA352_0==BACKTICK||LA352_0==CHAR_LITERAL||LA352_0==COMPILER_ANNOTATION||(LA352_0 >= DECREMENT_OP && LA352_0 <= DIFFERENCE_OP)||LA352_0==DYNAMIC||LA352_0==FLOAT_LITERAL||LA352_0==FUNCTION_MODIFIER||LA352_0==INCREMENT_OP||(LA352_0 >= LBRACE && LA352_0 <= LBRACKET)||LA352_0==LIDENTIFIER||LA352_0==LPAREN||LA352_0==NATURAL_LITERAL||(LA352_0 >= NOT_OP && LA352_0 <= OBJECT_DEFINITION)||(LA352_0 >= OUTER && LA352_0 <= PACKAGE)||LA352_0==SMALLER_OP||LA352_0==STRING_LITERAL||LA352_0==STRING_START||(LA352_0 >= SUM_OP && LA352_0 <= SUPER)||LA352_0==THIS||LA352_0==UIDENTIFIER||(LA352_0 >= VALUE_MODIFIER && LA352_0 <= VOID_MODIFIER)) ) {
                alt352=1;
            }
            switch (alt352) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4124:8: r1= resource (c= COMMA r2= resource )*
                    {
                    pushFollow(FOLLOW_resource_in_resources27368);
                    r1=resource();

                    state._fsp--;
                    if (state.failed) return resources;

                    if ( state.backtracking==0 ) { resources.addResource(r1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4126:8: (c= COMMA r2= resource )*
                    loop351:
                    do {
                        int alt351=2;
                        int LA351_0 = input.LA(1);

                        if ( (LA351_0==COMMA) ) {
                            alt351=1;
                        }


                        switch (alt351) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4127:10: c= COMMA r2= resource
                    	    {
                    	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_resources27399); if (state.failed) return resources;

                    	    if ( state.backtracking==0 ) { resources.setEndToken(c); }

                    	    pushFollow(FOLLOW_resource_in_resources27424);
                    	    r2=resource();

                    	    state._fsp--;
                    	    if (state.failed) return resources;

                    	    if ( state.backtracking==0 ) { resources.addResource(r2);
                    	    	          resources.setEndToken(null); }

                    	    }
                    	    break;

                    	default :
                    	    break loop351;
                        }
                    } while (true);


                    }
                    break;

            }


            RPAREN632=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_resources27460); if (state.failed) return resources;

            if ( state.backtracking==0 ) { resources.setEndToken(RPAREN632); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return resources;
    }
    // $ANTLR end "resources"



    // $ANTLR start "resource"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4138:1: resource returns [Resource resource] : ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression );
    public Resource resource() throws RecognitionException {
        Resource resource = null;


        Variable specifiedVariable633 =null;

        Expression expression634 =null;


         resource = new Resource(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4140:5: ( ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable | expression )
            int alt353=2;
            int LA353_0 = input.LA(1);

            if ( (LA353_0==COMPILER_ANNOTATION) && (synpred53_Ceylon())) {
                alt353=1;
            }
            else if ( (LA353_0==SMALLER_OP) && (synpred53_Ceylon())) {
                alt353=1;
            }
            else if ( (LA353_0==UIDENTIFIER) ) {
                int LA353_3 = input.LA(2);

                if ( (synpred53_Ceylon()) ) {
                    alt353=1;
                }
                else if ( (true) ) {
                    alt353=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 353, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA353_0==PACKAGE) ) {
                int LA353_4 = input.LA(2);

                if ( (synpred53_Ceylon()) ) {
                    alt353=1;
                }
                else if ( (true) ) {
                    alt353=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 353, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA353_0==LBRACKET) ) {
                int LA353_5 = input.LA(2);

                if ( (synpred53_Ceylon()) ) {
                    alt353=1;
                }
                else if ( (true) ) {
                    alt353=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 353, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA353_0==LBRACE) ) {
                int LA353_6 = input.LA(2);

                if ( (synpred53_Ceylon()) ) {
                    alt353=1;
                }
                else if ( (true) ) {
                    alt353=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 353, 6, input);

                    throw nvae;

                }
            }
            else if ( (LA353_0==VOID_MODIFIER) && (synpred53_Ceylon())) {
                alt353=1;
            }
            else if ( (LA353_0==FUNCTION_MODIFIER) && (synpred53_Ceylon())) {
                alt353=1;
            }
            else if ( (LA353_0==VALUE_MODIFIER) && (synpred53_Ceylon())) {
                alt353=1;
            }
            else if ( (LA353_0==LIDENTIFIER) ) {
                int LA353_10 = input.LA(2);

                if ( (synpred53_Ceylon()) ) {
                    alt353=1;
                }
                else if ( (true) ) {
                    alt353=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return resource;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 353, 10, input);

                    throw nvae;

                }
            }
            else if ( (LA353_0==BACKTICK||LA353_0==CHAR_LITERAL||(LA353_0 >= DECREMENT_OP && LA353_0 <= DIFFERENCE_OP)||LA353_0==DYNAMIC||LA353_0==FLOAT_LITERAL||LA353_0==INCREMENT_OP||LA353_0==LPAREN||LA353_0==NATURAL_LITERAL||(LA353_0 >= NOT_OP && LA353_0 <= OBJECT_DEFINITION)||LA353_0==OUTER||LA353_0==STRING_LITERAL||LA353_0==STRING_START||(LA353_0 >= SUM_OP && LA353_0 <= SUPER)||LA353_0==THIS||LA353_0==VERBATIM_STRING) ) {
                alt353=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return resource;}
                NoViableAltException nvae =
                    new NoViableAltException("", 353, 0, input);

                throw nvae;

            }
            switch (alt353) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4141:7: ( COMPILER_ANNOTATION | declarationStart | specificationStart )=> specifiedVariable
                    {
                    pushFollow(FOLLOW_specifiedVariable_in_resource27521);
                    specifiedVariable633=specifiedVariable();

                    state._fsp--;
                    if (state.failed) return resource;

                    if ( state.backtracking==0 ) { resource.setVariable(specifiedVariable633); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4145:7: expression
                    {
                    pushFollow(FOLLOW_expression_in_resource27544);
                    expression634=expression();

                    state._fsp--;
                    if (state.failed) return resource;

                    if ( state.backtracking==0 ) { resource.setExpression(expression634); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return resource;
    }
    // $ANTLR end "resource"



    // $ANTLR start "specifiedVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4149:1: specifiedVariable returns [Variable variable] : v= variable ( specifier )? ;
    public Variable specifiedVariable() throws RecognitionException {
        Variable variable = null;


        Variable v =null;

        SpecifierExpression specifier635 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4150:5: (v= variable ( specifier )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4150:7: v= variable ( specifier )?
            {
            pushFollow(FOLLOW_variable_in_specifiedVariable27575);
            v=variable();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable = v; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4152:7: ( specifier )?
            int alt354=2;
            int LA354_0 = input.LA(1);

            if ( (LA354_0==SPECIFY) ) {
                alt354=1;
            }
            switch (alt354) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4153:9: specifier
                    {
                    pushFollow(FOLLOW_specifier_in_specifiedVariable27602);
                    specifier635=specifier();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setSpecifierExpression(specifier635); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "specifiedVariable"



    // $ANTLR start "variable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4158:1: variable returns [Variable variable] : compilerAnnotations var ;
    public Variable variable() throws RecognitionException {
        Variable variable = null;


        Variable var636 =null;

        List<CompilerAnnotation> compilerAnnotations637 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4159:5: ( compilerAnnotations var )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4159:7: compilerAnnotations var
            {
            pushFollow(FOLLOW_compilerAnnotations_in_variable27642);
            compilerAnnotations637=compilerAnnotations();

            state._fsp--;
            if (state.failed) return variable;

            pushFollow(FOLLOW_var_in_variable27650);
            var636=var();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { variable =var636;
                    variable.getCompilerAnnotations().addAll(compilerAnnotations637); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "variable"



    // $ANTLR start "var"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4165:1: var returns [Variable variable] : ( ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )* |mn2= memberName (p2= parameters )* );
    public Variable var() throws RecognitionException {
        Variable variable = null;


        Token VOID_MODIFIER639=null;
        Token FUNCTION_MODIFIER640=null;
        Token VALUE_MODIFIER641=null;
        Identifier mn1 =null;

        ParameterList p1 =null;

        Identifier mn2 =null;

        ParameterList p2 =null;

        StaticType type638 =null;


         variable = new Variable(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4167:5: ( ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )* |mn2= memberName (p2= parameters )* )
            int alt358=2;
            int LA358_0 = input.LA(1);

            if ( (LA358_0==FUNCTION_MODIFIER||(LA358_0 >= LBRACE && LA358_0 <= LBRACKET)||LA358_0==PACKAGE||LA358_0==SMALLER_OP||LA358_0==UIDENTIFIER||LA358_0==VALUE_MODIFIER||LA358_0==VOID_MODIFIER) ) {
                alt358=1;
            }
            else if ( (LA358_0==LIDENTIFIER) ) {
                alt358=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return variable;}
                NoViableAltException nvae =
                    new NoViableAltException("", 358, 0, input);

                throw nvae;

            }
            switch (alt358) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4168:7: ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER ) mn1= memberName (p1= parameters )*
                    {
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4168:7: ( type | VOID_MODIFIER | FUNCTION_MODIFIER | VALUE_MODIFIER )
                    int alt355=4;
                    switch ( input.LA(1) ) {
                    case LBRACE:
                    case LBRACKET:
                    case PACKAGE:
                    case SMALLER_OP:
                    case UIDENTIFIER:
                        {
                        alt355=1;
                        }
                        break;
                    case VOID_MODIFIER:
                        {
                        alt355=2;
                        }
                        break;
                    case FUNCTION_MODIFIER:
                        {
                        alt355=3;
                        }
                        break;
                    case VALUE_MODIFIER:
                        {
                        alt355=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return variable;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 355, 0, input);

                        throw nvae;

                    }

                    switch (alt355) {
                        case 1 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4169:9: type
                            {
                            pushFollow(FOLLOW_type_in_var27710);
                            type638=type();

                            state._fsp--;
                            if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(type638); }

                            }
                            break;
                        case 2 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4172:9: VOID_MODIFIER
                            {
                            VOID_MODIFIER639=(Token)match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_var27740); if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(new VoidModifier(VOID_MODIFIER639)); }

                            }
                            break;
                        case 3 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4175:9: FUNCTION_MODIFIER
                            {
                            FUNCTION_MODIFIER640=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_var27769); if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(new FunctionModifier(FUNCTION_MODIFIER640)); }

                            }
                            break;
                        case 4 :
                            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4178:9: VALUE_MODIFIER
                            {
                            VALUE_MODIFIER641=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_var27798); if (state.failed) return variable;

                            if ( state.backtracking==0 ) { variable.setType(new ValueModifier(VALUE_MODIFIER641)); }

                            }
                            break;

                    }


                    pushFollow(FOLLOW_memberName_in_var27826);
                    mn1=memberName();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setIdentifier(mn1); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4183:7: (p1= parameters )*
                    loop356:
                    do {
                        int alt356=2;
                        int LA356_0 = input.LA(1);

                        if ( (LA356_0==LPAREN) ) {
                            alt356=1;
                        }


                        switch (alt356) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4184:9: p1= parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_var27856);
                    	    p1=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return variable;

                    	    if ( state.backtracking==0 ) { variable.addParameterList(p1); }

                    	    }
                    	    break;

                    	default :
                    	    break loop356;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4188:7: mn2= memberName (p2= parameters )*
                    {
                    if ( state.backtracking==0 ) { variable.setType( new ValueModifier(null) ); }

                    pushFollow(FOLLOW_memberName_in_var27900);
                    mn2=memberName();

                    state._fsp--;
                    if (state.failed) return variable;

                    if ( state.backtracking==0 ) { variable.setIdentifier(mn2); }

                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4191:7: (p2= parameters )*
                    loop357:
                    do {
                        int alt357=2;
                        int LA357_0 = input.LA(1);

                        if ( (LA357_0==LPAREN) ) {
                            alt357=1;
                        }


                        switch (alt357) {
                    	case 1 :
                    	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4192:9: p2= parameters
                    	    {
                    	    pushFollow(FOLLOW_parameters_in_var27928);
                    	    p2=parameters();

                    	    state._fsp--;
                    	    if (state.failed) return variable;

                    	    if ( state.backtracking==0 ) { variable.setType( new FunctionModifier(null) );
                    	              variable.addParameterList(p2); }

                    	    }
                    	    break;

                    	default :
                    	    break loop357;
                        }
                    } while (true);


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "var"



    // $ANTLR start "impliedVariable"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4198:1: impliedVariable returns [Variable variable] : memberName ;
    public Variable impliedVariable() throws RecognitionException {
        Variable variable = null;


        Identifier memberName642 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4199:5: ( memberName )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4199:7: memberName
            {
            pushFollow(FOLLOW_memberName_in_impliedVariable27968);
            memberName642=memberName();

            state._fsp--;
            if (state.failed) return variable;

            if ( state.backtracking==0 ) { Variable v = new Variable(null);
                    v.setType(new SyntheticVariable(null));
                    v.setIdentifier(memberName642);
                    SpecifierExpression se = new SpecifierExpression(null);
                    Expression e = new Expression(null);
                    BaseMemberExpression bme = new BaseMemberExpression(null);
                    bme.setIdentifier(memberName642);
                    bme.setTypeArguments( new InferredTypeArguments(null) );
                    e.setTerm(bme);
                    se.setExpression(e);
                    v.setSpecifierExpression(se); 
                    variable = v; }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return variable;
    }
    // $ANTLR end "impliedVariable"



    // $ANTLR start "referencePathElement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4214:1: referencePathElement returns [Identifier identifier] : ( typeName | memberName );
    public Identifier referencePathElement() throws RecognitionException {
        Identifier identifier = null;


        Identifier typeName643 =null;

        Identifier memberName644 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4215:5: ( typeName | memberName )
            int alt359=2;
            int LA359_0 = input.LA(1);

            if ( (LA359_0==UIDENTIFIER) ) {
                alt359=1;
            }
            else if ( (LA359_0==LIDENTIFIER) ) {
                alt359=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return identifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 359, 0, input);

                throw nvae;

            }
            switch (alt359) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4215:7: typeName
                    {
                    pushFollow(FOLLOW_typeName_in_referencePathElement27998);
                    typeName643=typeName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =typeName643; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4217:7: memberName
                    {
                    pushFollow(FOLLOW_memberName_in_referencePathElement28015);
                    memberName644=memberName();

                    state._fsp--;
                    if (state.failed) return identifier;

                    if ( state.backtracking==0 ) { identifier =memberName644; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return identifier;
    }
    // $ANTLR end "referencePathElement"



    // $ANTLR start "referencePath"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4221:1: referencePath returns [SimpleType type] : (e1= referencePathElement | PACKAGE o1= MEMBER_OP e2= referencePathElement ) (o2= MEMBER_OP e3= referencePathElement )* ;
    public SimpleType referencePath() throws RecognitionException {
        SimpleType type = null;


        Token o1=null;
        Token o2=null;
        Token PACKAGE645=null;
        Identifier e1 =null;

        Identifier e2 =null;

        Identifier e3 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4222:5: ( (e1= referencePathElement | PACKAGE o1= MEMBER_OP e2= referencePathElement ) (o2= MEMBER_OP e3= referencePathElement )* )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4222:7: (e1= referencePathElement | PACKAGE o1= MEMBER_OP e2= referencePathElement ) (o2= MEMBER_OP e3= referencePathElement )*
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4222:7: (e1= referencePathElement | PACKAGE o1= MEMBER_OP e2= referencePathElement )
            int alt360=2;
            int LA360_0 = input.LA(1);

            if ( (LA360_0==LIDENTIFIER||LA360_0==UIDENTIFIER) ) {
                alt360=1;
            }
            else if ( (LA360_0==PACKAGE) ) {
                alt360=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return type;}
                NoViableAltException nvae =
                    new NoViableAltException("", 360, 0, input);

                throw nvae;

            }
            switch (alt360) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4223:9: e1= referencePathElement
                    {
                    pushFollow(FOLLOW_referencePathElement_in_referencePath28060);
                    e1=referencePathElement();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { BaseType bt = new BaseType(null);
                              bt.setIdentifier(e1);
                              type = bt; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4228:9: PACKAGE o1= MEMBER_OP e2= referencePathElement
                    {
                    PACKAGE645=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_referencePath28090); if (state.failed) return type;

                    if ( state.backtracking==0 ) { BaseType pbt = new BaseType(PACKAGE645);
                    	        pbt.setPackageQualified(true);
                    	        type = pbt; }

                    o1=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_referencePath28110); if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.setEndToken(o1); }

                    pushFollow(FOLLOW_referencePathElement_in_referencePath28130);
                    e2=referencePathElement();

                    state._fsp--;
                    if (state.failed) return type;

                    if ( state.backtracking==0 ) { type.setEndToken(null);
                    	        type.setIdentifier(e2); }

                    }
                    break;

            }


            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4238:7: (o2= MEMBER_OP e3= referencePathElement )*
            loop361:
            do {
                int alt361=2;
                int LA361_0 = input.LA(1);

                if ( (LA361_0==MEMBER_OP) ) {
                    alt361=1;
                }


                switch (alt361) {
            	case 1 :
            	    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4239:9: o2= MEMBER_OP e3= referencePathElement
            	    {
            	    o2=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_referencePath28167); if (state.failed) return type;

            	    pushFollow(FOLLOW_referencePathElement_in_referencePath28179);
            	    e3=referencePathElement();

            	    state._fsp--;
            	    if (state.failed) return type;

            	    if ( state.backtracking==0 ) { QualifiedType qt = new QualifiedType(o2);
            	              qt.setIdentifier(e3);
            	              qt.setOuterType(type);
            	              type = qt; }

            	    }
            	    break;

            	default :
            	    break loop361;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return type;
    }
    // $ANTLR end "referencePath"



    // $ANTLR start "moduleLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4248:1: moduleLiteral returns [ModuleLiteral literal] : MODULE (p1= packagePath )? ;
    public ModuleLiteral moduleLiteral() throws RecognitionException {
        ModuleLiteral literal = null;


        Token MODULE646=null;
        ImportPath p1 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4249:2: ( MODULE (p1= packagePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4249:4: MODULE (p1= packagePath )?
            {
            MODULE646=(Token)match(input,MODULE,FOLLOW_MODULE_in_moduleLiteral28217); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new ModuleLiteral(null);
                 literal.setEndToken(MODULE646); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4252:4: (p1= packagePath )?
            int alt362=2;
            int LA362_0 = input.LA(1);

            if ( (LA362_0==LIDENTIFIER||LA362_0==UIDENTIFIER) ) {
                alt362=1;
            }
            switch (alt362) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4253:6: p1= packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_moduleLiteral28236);
                    p1=packagePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setImportPath(p1); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "moduleLiteral"



    // $ANTLR start "packageLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4259:1: packageLiteral returns [PackageLiteral literal] : PACKAGE (p2= packagePath )? ;
    public PackageLiteral packageLiteral() throws RecognitionException {
        PackageLiteral literal = null;


        Token PACKAGE647=null;
        ImportPath p2 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4260:2: ( PACKAGE (p2= packagePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4260:4: PACKAGE (p2= packagePath )?
            {
            PACKAGE647=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_packageLiteral28264); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new PackageLiteral(null);
                 literal.setEndToken(PACKAGE647); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4263:4: (p2= packagePath )?
            int alt363=2;
            int LA363_0 = input.LA(1);

            if ( (LA363_0==LIDENTIFIER||LA363_0==UIDENTIFIER) ) {
                alt363=1;
            }
            switch (alt363) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4264:6: p2= packagePath
                    {
                    pushFollow(FOLLOW_packagePath_in_packageLiteral28283);
                    p2=packagePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setImportPath(p2); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "packageLiteral"



    // $ANTLR start "classLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4270:1: classLiteral returns [ClassLiteral literal] : CLASS_DEFINITION (ct= referencePath )? ;
    public ClassLiteral classLiteral() throws RecognitionException {
        ClassLiteral literal = null;


        Token CLASS_DEFINITION648=null;
        SimpleType ct =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4271:2: ( CLASS_DEFINITION (ct= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4271:4: CLASS_DEFINITION (ct= referencePath )?
            {
            CLASS_DEFINITION648=(Token)match(input,CLASS_DEFINITION,FOLLOW_CLASS_DEFINITION_in_classLiteral28311); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new ClassLiteral(null);
                 literal.setEndToken(CLASS_DEFINITION648); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4274:4: (ct= referencePath )?
            int alt364=2;
            int LA364_0 = input.LA(1);

            if ( (LA364_0==LIDENTIFIER||LA364_0==PACKAGE||LA364_0==UIDENTIFIER) ) {
                alt364=1;
            }
            switch (alt364) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4275:6: ct= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_classLiteral28330);
                    ct=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(ct); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "classLiteral"



    // $ANTLR start "interfaceLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4281:1: interfaceLiteral returns [InterfaceLiteral literal] : INTERFACE_DEFINITION (it= referencePath )? ;
    public InterfaceLiteral interfaceLiteral() throws RecognitionException {
        InterfaceLiteral literal = null;


        Token INTERFACE_DEFINITION649=null;
        SimpleType it =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4282:2: ( INTERFACE_DEFINITION (it= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4282:4: INTERFACE_DEFINITION (it= referencePath )?
            {
            INTERFACE_DEFINITION649=(Token)match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_interfaceLiteral28358); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new InterfaceLiteral(null);
                 literal.setEndToken(INTERFACE_DEFINITION649); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4285:4: (it= referencePath )?
            int alt365=2;
            int LA365_0 = input.LA(1);

            if ( (LA365_0==LIDENTIFIER||LA365_0==PACKAGE||LA365_0==UIDENTIFIER) ) {
                alt365=1;
            }
            switch (alt365) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4286:6: it= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_interfaceLiteral28377);
                    it=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(it); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "interfaceLiteral"



    // $ANTLR start "newLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4292:1: newLiteral returns [NewLiteral literal] : NEW (nt= referencePath )? ;
    public NewLiteral newLiteral() throws RecognitionException {
        NewLiteral literal = null;


        Token NEW650=null;
        SimpleType nt =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4293:2: ( NEW (nt= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4293:4: NEW (nt= referencePath )?
            {
            NEW650=(Token)match(input,NEW,FOLLOW_NEW_in_newLiteral28405); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new NewLiteral(null);
                 literal.setEndToken(NEW650); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4296:4: (nt= referencePath )?
            int alt366=2;
            int LA366_0 = input.LA(1);

            if ( (LA366_0==LIDENTIFIER||LA366_0==PACKAGE||LA366_0==UIDENTIFIER) ) {
                alt366=1;
            }
            switch (alt366) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4297:6: nt= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_newLiteral28424);
                    nt=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(nt); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "newLiteral"



    // $ANTLR start "aliasLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4303:1: aliasLiteral returns [AliasLiteral literal] : ALIAS (at= referencePath )? ;
    public AliasLiteral aliasLiteral() throws RecognitionException {
        AliasLiteral literal = null;


        Token ALIAS651=null;
        SimpleType at =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4304:2: ( ALIAS (at= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4304:4: ALIAS (at= referencePath )?
            {
            ALIAS651=(Token)match(input,ALIAS,FOLLOW_ALIAS_in_aliasLiteral28452); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new AliasLiteral(null);
                 literal.setEndToken(ALIAS651); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4307:4: (at= referencePath )?
            int alt367=2;
            int LA367_0 = input.LA(1);

            if ( (LA367_0==LIDENTIFIER||LA367_0==PACKAGE||LA367_0==UIDENTIFIER) ) {
                alt367=1;
            }
            switch (alt367) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4308:6: at= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_aliasLiteral28471);
                    at=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(at); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "aliasLiteral"



    // $ANTLR start "typeParameterLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4314:1: typeParameterLiteral returns [TypeParameterLiteral literal] : TYPE_CONSTRAINT (tt= referencePath )? ;
    public TypeParameterLiteral typeParameterLiteral() throws RecognitionException {
        TypeParameterLiteral literal = null;


        Token TYPE_CONSTRAINT652=null;
        SimpleType tt =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4315:2: ( TYPE_CONSTRAINT (tt= referencePath )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4315:4: TYPE_CONSTRAINT (tt= referencePath )?
            {
            TYPE_CONSTRAINT652=(Token)match(input,TYPE_CONSTRAINT,FOLLOW_TYPE_CONSTRAINT_in_typeParameterLiteral28499); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new TypeParameterLiteral(null);
                 literal.setEndToken(TYPE_CONSTRAINT652); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4318:4: (tt= referencePath )?
            int alt368=2;
            int LA368_0 = input.LA(1);

            if ( (LA368_0==LIDENTIFIER||LA368_0==PACKAGE||LA368_0==UIDENTIFIER) ) {
                alt368=1;
            }
            switch (alt368) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4319:6: tt= referencePath
                    {
                    pushFollow(FOLLOW_referencePath_in_typeParameterLiteral28518);
                    tt=referencePath();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(tt); 
                           literal.setEndToken(null); }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "typeParameterLiteral"



    // $ANTLR start "valueLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4325:1: valueLiteral returns [ValueLiteral literal] : ( VALUE_MODIFIER | OBJECT_DEFINITION ) vt= referencePath ;
    public ValueLiteral valueLiteral() throws RecognitionException {
        ValueLiteral literal = null;


        Token VALUE_MODIFIER653=null;
        Token OBJECT_DEFINITION654=null;
        SimpleType vt =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4326:3: ( ( VALUE_MODIFIER | OBJECT_DEFINITION ) vt= referencePath )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4326:5: ( VALUE_MODIFIER | OBJECT_DEFINITION ) vt= referencePath
            {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4326:5: ( VALUE_MODIFIER | OBJECT_DEFINITION )
            int alt369=2;
            int LA369_0 = input.LA(1);

            if ( (LA369_0==VALUE_MODIFIER) ) {
                alt369=1;
            }
            else if ( (LA369_0==OBJECT_DEFINITION) ) {
                alt369=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return literal;}
                NoViableAltException nvae =
                    new NoViableAltException("", 369, 0, input);

                throw nvae;

            }
            switch (alt369) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4327:7: VALUE_MODIFIER
                    {
                    VALUE_MODIFIER653=(Token)match(input,VALUE_MODIFIER,FOLLOW_VALUE_MODIFIER_in_valueLiteral28555); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new ValueLiteral(null);
                            literal.setEndToken(VALUE_MODIFIER653); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4331:7: OBJECT_DEFINITION
                    {
                    OBJECT_DEFINITION654=(Token)match(input,OBJECT_DEFINITION,FOLLOW_OBJECT_DEFINITION_in_valueLiteral28577); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal = new ValueLiteral(null);
                            literal.setEndToken(OBJECT_DEFINITION654);
                            literal.setBroken(true); }

                    }
                    break;

            }


            pushFollow(FOLLOW_referencePath_in_valueLiteral28599);
            vt=referencePath();

            state._fsp--;
            if (state.failed) return literal;

            if ( state.backtracking==0 ) {
                  if (vt instanceof QualifiedType) {
                    literal.setType(((QualifiedType)vt).getOuterType());
                    literal.setIdentifier(vt.getIdentifier());
                    literal.setTypeArgumentList(vt.getTypeArgumentList());
                    literal.setEndToken(null);
                  }
                  else if (vt instanceof BaseType) {
                    literal.setIdentifier(vt.getIdentifier());
                    literal.setTypeArgumentList(vt.getTypeArgumentList());
                    literal.setEndToken(null);
                  }
                }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "valueLiteral"



    // $ANTLR start "functionLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4352:1: functionLiteral returns [FunctionLiteral literal] : FUNCTION_MODIFIER ft= referencePath ;
    public FunctionLiteral functionLiteral() throws RecognitionException {
        FunctionLiteral literal = null;


        Token FUNCTION_MODIFIER655=null;
        SimpleType ft =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4353:3: ( FUNCTION_MODIFIER ft= referencePath )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4353:5: FUNCTION_MODIFIER ft= referencePath
            {
            FUNCTION_MODIFIER655=(Token)match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_functionLiteral28622); if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal = new FunctionLiteral(null);
                  literal.setEndToken(FUNCTION_MODIFIER655); }

            pushFollow(FOLLOW_referencePath_in_functionLiteral28636);
            ft=referencePath();

            state._fsp--;
            if (state.failed) return literal;

            if ( state.backtracking==0 ) {
                  if (ft instanceof QualifiedType) {
                    literal.setType(((QualifiedType)ft).getOuterType());
                    literal.setIdentifier(ft.getIdentifier());
                    literal.setTypeArgumentList(ft.getTypeArgumentList());
                    literal.setEndToken(null);
                  }
                  else if (ft instanceof BaseType) {
                    literal.setIdentifier(ft.getIdentifier());
                    literal.setTypeArgumentList(ft.getTypeArgumentList());
                    literal.setEndToken(null);
                  }
                }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "functionLiteral"


    public static class memberPathElement_return extends ParserRuleReturnScope {
        public Identifier identifier;
        public TypeArgumentList typeArgumentList;
    };


    // $ANTLR start "memberPathElement"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4372:1: memberPathElement returns [Identifier identifier, \n TypeArgumentList typeArgumentList] : memberName ( typeArguments )? ;
    public PsiCompatibleCeylonParser.memberPathElement_return memberPathElement() throws RecognitionException {
        PsiCompatibleCeylonParser.memberPathElement_return retval = new PsiCompatibleCeylonParser.memberPathElement_return();
        retval.start = input.LT(1);


        Identifier memberName656 =null;

        TypeArgumentList typeArguments657 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4374:5: ( memberName ( typeArguments )? )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4374:7: memberName ( typeArguments )?
            {
            pushFollow(FOLLOW_memberName_in_memberPathElement28661);
            memberName656=memberName();

            state._fsp--;
            if (state.failed) return retval;

            if ( state.backtracking==0 ) { retval.identifier =memberName656; }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4376:7: ( typeArguments )?
            int alt370=2;
            int LA370_0 = input.LA(1);

            if ( (LA370_0==SMALLER_OP) ) {
                alt370=1;
            }
            switch (alt370) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4377:9: typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_memberPathElement28687);
                    typeArguments657=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;

                    if ( state.backtracking==0 ) { retval.typeArgumentList =typeArguments657; }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);


        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return retval;
    }
    // $ANTLR end "memberPathElement"



    // $ANTLR start "memberModelExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4383:1: memberModelExpression returns [MemberLiteral literal] : (e1= memberPathElement | PACKAGE o2= MEMBER_OP e2= memberPathElement |at= primaryType o3= MEMBER_OP e3= memberPathElement );
    public MemberLiteral memberModelExpression() throws RecognitionException {
        MemberLiteral literal = null;


        Token o2=null;
        Token o3=null;
        Token PACKAGE658=null;
        PsiCompatibleCeylonParser.memberPathElement_return e1 =null;

        PsiCompatibleCeylonParser.memberPathElement_return e2 =null;

        StaticType at =null;

        PsiCompatibleCeylonParser.memberPathElement_return e3 =null;


         literal = new MemberLiteral(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4385:5: (e1= memberPathElement | PACKAGE o2= MEMBER_OP e2= memberPathElement |at= primaryType o3= MEMBER_OP e3= memberPathElement )
            int alt371=3;
            switch ( input.LA(1) ) {
            case LIDENTIFIER:
                {
                alt371=1;
                }
                break;
            case PACKAGE:
                {
                int LA371_2 = input.LA(2);

                if ( (LA371_2==MEMBER_OP) ) {
                    int LA371_4 = input.LA(3);

                    if ( (LA371_4==LIDENTIFIER) ) {
                        alt371=2;
                    }
                    else if ( (LA371_4==UIDENTIFIER) ) {
                        alt371=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return literal;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 371, 4, input);

                        throw nvae;

                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return literal;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 371, 2, input);

                    throw nvae;

                }
                }
                break;
            case LBRACE:
            case LBRACKET:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt371=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return literal;}
                NoViableAltException nvae =
                    new NoViableAltException("", 371, 0, input);

                throw nvae;

            }

            switch (alt371) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4386:7: e1= memberPathElement
                    {
                    pushFollow(FOLLOW_memberPathElement_in_memberModelExpression28750);
                    e1=memberPathElement();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setIdentifier((e1!=null?e1.identifier:null));
                            literal.setTypeArgumentList((e1!=null?e1.typeArgumentList:null)); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4390:7: PACKAGE o2= MEMBER_OP e2= memberPathElement
                    {
                    PACKAGE658=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_memberModelExpression28773); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setToken(PACKAGE658);
                            literal.setPackageQualified(true);  }

                    o2=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_memberModelExpression28791); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setEndToken(o2); }

                    pushFollow(FOLLOW_memberPathElement_in_memberModelExpression28809);
                    e2=memberPathElement();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setEndToken(null);
                            literal.setIdentifier((e2!=null?e2.identifier:null)); 
                            literal.setTypeArgumentList((e2!=null?e2.typeArgumentList:null)); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4400:7: at= primaryType o3= MEMBER_OP e3= memberPathElement
                    {
                    pushFollow(FOLLOW_primaryType_in_memberModelExpression28834);
                    at=primaryType();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setType(at); }

                    o3=(Token)match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_memberModelExpression28852); if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setEndToken(o3); }

                    pushFollow(FOLLOW_memberPathElement_in_memberModelExpression28870);
                    e3=memberPathElement();

                    state._fsp--;
                    if (state.failed) return literal;

                    if ( state.backtracking==0 ) { literal.setEndToken(null);
                            literal.setIdentifier((e3!=null?e3.identifier:null));
                            literal.setTypeArgumentList((e3!=null?e3.typeArgumentList:null)); }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "memberModelExpression"



    // $ANTLR start "typeModelExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4410:1: typeModelExpression returns [TypeLiteral literal] : type ;
    public TypeLiteral typeModelExpression() throws RecognitionException {
        TypeLiteral literal = null;


        StaticType type659 =null;


         literal = new TypeLiteral(null); 
        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4412:5: ( type )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4412:7: type
            {
            pushFollow(FOLLOW_type_in_typeModelExpression28909);
            type659=type();

            state._fsp--;
            if (state.failed) return literal;

            if ( state.backtracking==0 ) { literal.setType(type659); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return literal;
    }
    // $ANTLR end "typeModelExpression"



    // $ANTLR start "modelExpression"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4416:1: modelExpression returns [MetaLiteral meta] : ( ( ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER )=> memberModelExpression | typeModelExpression );
    public MetaLiteral modelExpression() throws RecognitionException {
        MetaLiteral meta = null;


        MemberLiteral memberModelExpression660 =null;

        TypeLiteral typeModelExpression661 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4417:3: ( ( ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER )=> memberModelExpression | typeModelExpression )
            int alt372=2;
            int LA372_0 = input.LA(1);

            if ( (LA372_0==LIDENTIFIER) && (synpred54_Ceylon())) {
                alt372=1;
            }
            else if ( (LA372_0==PACKAGE) ) {
                int LA372_2 = input.LA(2);

                if ( (synpred54_Ceylon()) ) {
                    alt372=1;
                }
                else if ( (true) ) {
                    alt372=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 372, 2, input);

                    throw nvae;

                }
            }
            else if ( (LA372_0==UIDENTIFIER) ) {
                int LA372_3 = input.LA(2);

                if ( (synpred54_Ceylon()) ) {
                    alt372=1;
                }
                else if ( (true) ) {
                    alt372=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 372, 3, input);

                    throw nvae;

                }
            }
            else if ( (LA372_0==SMALLER_OP) ) {
                int LA372_4 = input.LA(2);

                if ( (synpred54_Ceylon()) ) {
                    alt372=1;
                }
                else if ( (true) ) {
                    alt372=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 372, 4, input);

                    throw nvae;

                }
            }
            else if ( (LA372_0==LBRACKET) ) {
                int LA372_5 = input.LA(2);

                if ( (synpred54_Ceylon()) ) {
                    alt372=1;
                }
                else if ( (true) ) {
                    alt372=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 372, 5, input);

                    throw nvae;

                }
            }
            else if ( (LA372_0==LBRACE) ) {
                int LA372_6 = input.LA(2);

                if ( (synpred54_Ceylon()) ) {
                    alt372=1;
                }
                else if ( (true) ) {
                    alt372=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 372, 6, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return meta;}
                NoViableAltException nvae =
                    new NoViableAltException("", 372, 0, input);

                throw nvae;

            }
            switch (alt372) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4418:5: ( ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER )=> memberModelExpression
                    {
                    pushFollow(FOLLOW_memberModelExpression_in_modelExpression28961);
                    memberModelExpression660=memberModelExpression();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =memberModelExpression660; }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4422:5: typeModelExpression
                    {
                    pushFollow(FOLLOW_typeModelExpression_in_modelExpression28978);
                    typeModelExpression661=typeModelExpression();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta = typeModelExpression661; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return meta;
    }
    // $ANTLR end "modelExpression"



    // $ANTLR start "metaLiteral"
    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4426:1: metaLiteral returns [MetaLiteral meta] : d1= BACKTICK ( moduleLiteral | ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral | classLiteral | newLiteral | interfaceLiteral | aliasLiteral | typeParameterLiteral | valueLiteral | functionLiteral | modelExpression ) d2= BACKTICK ;
    public MetaLiteral metaLiteral() throws RecognitionException {
        MetaLiteral meta = null;


        Token d1=null;
        Token d2=null;
        ModuleLiteral moduleLiteral662 =null;

        PackageLiteral packageLiteral663 =null;

        ClassLiteral classLiteral664 =null;

        NewLiteral newLiteral665 =null;

        InterfaceLiteral interfaceLiteral666 =null;

        AliasLiteral aliasLiteral667 =null;

        TypeParameterLiteral typeParameterLiteral668 =null;

        ValueLiteral valueLiteral669 =null;

        FunctionLiteral functionLiteral670 =null;

        MetaLiteral modelExpression671 =null;


        try {
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4427:5: (d1= BACKTICK ( moduleLiteral | ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral | classLiteral | newLiteral | interfaceLiteral | aliasLiteral | typeParameterLiteral | valueLiteral | functionLiteral | modelExpression ) d2= BACKTICK )
            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4427:7: d1= BACKTICK ( moduleLiteral | ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral | classLiteral | newLiteral | interfaceLiteral | aliasLiteral | typeParameterLiteral | valueLiteral | functionLiteral | modelExpression ) d2= BACKTICK
            {
            d1=(Token)match(input,BACKTICK,FOLLOW_BACKTICK_in_metaLiteral29005); if (state.failed) return meta;

            if ( state.backtracking==0 ) { meta = new TypeLiteral(d1); }

            // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4429:6: ( moduleLiteral | ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral | classLiteral | newLiteral | interfaceLiteral | aliasLiteral | typeParameterLiteral | valueLiteral | functionLiteral | modelExpression )
            int alt373=10;
            switch ( input.LA(1) ) {
            case MODULE:
                {
                alt373=1;
                }
                break;
            case PACKAGE:
                {
                int LA373_2 = input.LA(2);

                if ( (LA373_2==LIDENTIFIER) && (synpred55_Ceylon())) {
                    alt373=2;
                }
                else if ( (LA373_2==UIDENTIFIER) && (synpred55_Ceylon())) {
                    alt373=2;
                }
                else if ( (LA373_2==BACKTICK) && (synpred55_Ceylon())) {
                    alt373=2;
                }
                else if ( (LA373_2==MEMBER_OP) ) {
                    alt373=10;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return meta;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 373, 2, input);

                    throw nvae;

                }
                }
                break;
            case CLASS_DEFINITION:
                {
                alt373=3;
                }
                break;
            case NEW:
                {
                alt373=4;
                }
                break;
            case INTERFACE_DEFINITION:
                {
                alt373=5;
                }
                break;
            case ALIAS:
                {
                alt373=6;
                }
                break;
            case TYPE_CONSTRAINT:
                {
                alt373=7;
                }
                break;
            case OBJECT_DEFINITION:
            case VALUE_MODIFIER:
                {
                alt373=8;
                }
                break;
            case FUNCTION_MODIFIER:
                {
                alt373=9;
                }
                break;
            case LBRACE:
            case LBRACKET:
            case LIDENTIFIER:
            case SMALLER_OP:
            case UIDENTIFIER:
                {
                alt373=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return meta;}
                NoViableAltException nvae =
                    new NoViableAltException("", 373, 0, input);

                throw nvae;

            }

            switch (alt373) {
                case 1 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4429:8: moduleLiteral
                    {
                    pushFollow(FOLLOW_moduleLiteral_in_metaLiteral29022);
                    moduleLiteral662=moduleLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =moduleLiteral662; 
                    	        meta.setToken(d1); }

                    }
                    break;
                case 2 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4432:8: ( PACKAGE ( LIDENTIFIER | BACKTICK ) )=> packageLiteral
                    {
                    pushFollow(FOLLOW_packageLiteral_in_metaLiteral29059);
                    packageLiteral663=packageLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =packageLiteral663; 
                    	        meta.setToken(d1); }

                    }
                    break;
                case 3 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4436:8: classLiteral
                    {
                    pushFollow(FOLLOW_classLiteral_in_metaLiteral29077);
                    classLiteral664=classLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =classLiteral664; 
                              meta.setToken(d1); }

                    }
                    break;
                case 4 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4439:8: newLiteral
                    {
                    pushFollow(FOLLOW_newLiteral_in_metaLiteral29095);
                    newLiteral665=newLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =newLiteral665; 
                              meta.setToken(d1); }

                    }
                    break;
                case 5 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4442:8: interfaceLiteral
                    {
                    pushFollow(FOLLOW_interfaceLiteral_in_metaLiteral29113);
                    interfaceLiteral666=interfaceLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =interfaceLiteral666; 
                              meta.setToken(d1); }

                    }
                    break;
                case 6 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4445:8: aliasLiteral
                    {
                    pushFollow(FOLLOW_aliasLiteral_in_metaLiteral29131);
                    aliasLiteral667=aliasLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =aliasLiteral667; 
                              meta.setToken(d1); }

                    }
                    break;
                case 7 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4448:8: typeParameterLiteral
                    {
                    pushFollow(FOLLOW_typeParameterLiteral_in_metaLiteral29149);
                    typeParameterLiteral668=typeParameterLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =typeParameterLiteral668; 
                              meta.setToken(d1); }

                    }
                    break;
                case 8 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4451:8: valueLiteral
                    {
                    pushFollow(FOLLOW_valueLiteral_in_metaLiteral29167);
                    valueLiteral669=valueLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =valueLiteral669; 
                              meta.setToken(d1); }

                    }
                    break;
                case 9 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4454:8: functionLiteral
                    {
                    pushFollow(FOLLOW_functionLiteral_in_metaLiteral29185);
                    functionLiteral670=functionLiteral();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =functionLiteral670; 
                              meta.setToken(d1); }

                    }
                    break;
                case 10 :
                    // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4457:8: modelExpression
                    {
                    pushFollow(FOLLOW_modelExpression_in_metaLiteral29203);
                    modelExpression671=modelExpression();

                    state._fsp--;
                    if (state.failed) return meta;

                    if ( state.backtracking==0 ) { meta =modelExpression671; 
                    	        meta.setToken(d1); }

                    }
                    break;

            }


            d2=(Token)match(input,BACKTICK,FOLLOW_BACKTICK_in_metaLiteral29234); if (state.failed) return meta;

            if ( state.backtracking==0 ) { meta.setEndToken(d2); }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
        }
        return meta;
    }
    // $ANTLR end "metaLiteral"

    // $ANTLR start synpred1_Ceylon
    public void synpred1_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:95:9: ( annotatedModuleDescriptorStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:95:10: annotatedModuleDescriptorStart
        {
        pushFollow(FOLLOW_annotatedModuleDescriptorStart_in_synpred1_Ceylon164);
        annotatedModuleDescriptorStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred1_Ceylon

    // $ANTLR start synpred2_Ceylon
    public void synpred2_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:99:9: ( annotatedPackageDescriptorStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:99:10: annotatedPackageDescriptorStart
        {
        pushFollow(FOLLOW_annotatedPackageDescriptorStart_in_synpred2_Ceylon207);
        annotatedPackageDescriptorStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred2_Ceylon

    // $ANTLR start synpred3_Ceylon
    public void synpred3_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:508:9: ( compilerAnnotations declarationStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:508:10: compilerAnnotations declarationStart
        {
        pushFollow(FOLLOW_compilerAnnotations_in_synpred3_Ceylon3037);
        compilerAnnotations();

        state._fsp--;
        if (state.failed) return ;

        pushFollow(FOLLOW_declarationStart_in_synpred3_Ceylon3039);
        declarationStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred3_Ceylon

    // $ANTLR start synpred4_Ceylon
    public void synpred4_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:517:7: ( tuplePatternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:517:8: tuplePatternStart
        {
        pushFollow(FOLLOW_tuplePatternStart_in_synpred4_Ceylon3112);
        tuplePatternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred4_Ceylon

    // $ANTLR start synpred5_Ceylon
    public void synpred5_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:526:7: ( variable ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:526:8: variable ENTRY_OP
        {
        pushFollow(FOLLOW_variable_in_synpred5_Ceylon3177);
        variable();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred5_Ceylon3179); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred5_Ceylon

    // $ANTLR start synpred6_Ceylon
    public void synpred6_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:530:7: ( tuplePattern ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:530:8: tuplePattern ENTRY_OP
        {
        pushFollow(FOLLOW_tuplePattern_in_synpred6_Ceylon3215);
        tuplePattern();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred6_Ceylon3217); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred6_Ceylon

    // $ANTLR start synpred7_Ceylon
    public void synpred7_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:534:7: ( tuplePatternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:534:8: tuplePatternStart
        {
        pushFollow(FOLLOW_tuplePatternStart_in_synpred7_Ceylon3253);
        tuplePatternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred7_Ceylon

    // $ANTLR start synpred8_Ceylon
    public void synpred8_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:544:7: ( variable ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:544:8: variable ENTRY_OP
        {
        pushFollow(FOLLOW_variable_in_synpred8_Ceylon3325);
        variable();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred8_Ceylon3327); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred8_Ceylon

    // $ANTLR start synpred9_Ceylon
    public void synpred9_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:548:7: ( tuplePattern ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:548:8: tuplePattern ENTRY_OP
        {
        pushFollow(FOLLOW_tuplePattern_in_synpred9_Ceylon3363);
        tuplePattern();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred9_Ceylon3365); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred9_Ceylon

    // $ANTLR start synpred10_Ceylon
    public void synpred10_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:584:9: ( compilerAnnotations ( unionType )? PRODUCT_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:584:10: compilerAnnotations ( unionType )? PRODUCT_OP
        {
        pushFollow(FOLLOW_compilerAnnotations_in_synpred10_Ceylon3654);
        compilerAnnotations();

        state._fsp--;
        if (state.failed) return ;

        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:584:30: ( unionType )?
        int alt374=2;
        int LA374_0 = input.LA(1);

        if ( ((LA374_0 >= LBRACE && LA374_0 <= LBRACKET)||LA374_0==PACKAGE||LA374_0==SMALLER_OP||LA374_0==UIDENTIFIER) ) {
            alt374=1;
        }
        switch (alt374) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:584:30: unionType
                {
                pushFollow(FOLLOW_unionType_in_synpred10_Ceylon3656);
                unionType();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        match(input,PRODUCT_OP,FOLLOW_PRODUCT_OP_in_synpred10_Ceylon3659); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred10_Ceylon

    // $ANTLR start synpred11_Ceylon
    public void synpred11_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1451:9: ( destructureStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1451:10: destructureStart
        {
        pushFollow(FOLLOW_destructureStart_in_synpred11_Ceylon9601);
        destructureStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred11_Ceylon

    // $ANTLR start synpred12_Ceylon
    public void synpred12_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1453:9: ( annotatedDeclarationStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1453:10: annotatedDeclarationStart
        {
        pushFollow(FOLLOW_annotatedDeclarationStart_in_synpred12_Ceylon9627);
        annotatedDeclarationStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred12_Ceylon

    // $ANTLR start synpred13_Ceylon
    public void synpred13_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1455:9: ( annotatedAssertionStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1455:10: annotatedAssertionStart
        {
        pushFollow(FOLLOW_annotatedAssertionStart_in_synpred13_Ceylon9655);
        annotatedAssertionStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred13_Ceylon

    // $ANTLR start synpred14_Ceylon
    public void synpred14_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1457:9: ( annotationListStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1457:10: annotationListStart
        {
        pushFollow(FOLLOW_annotationListStart_in_synpred14_Ceylon9681);
        annotationListStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred14_Ceylon

    // $ANTLR start synpred15_Ceylon
    public void synpred15_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1474:7: ( INTERFACE_DEFINITION | DYNAMIC UIDENTIFIER )
        int alt375=2;
        int LA375_0 = input.LA(1);

        if ( (LA375_0==INTERFACE_DEFINITION) ) {
            alt375=1;
        }
        else if ( (LA375_0==DYNAMIC) ) {
            alt375=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 375, 0, input);

            throw nvae;

        }
        switch (alt375) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1474:8: INTERFACE_DEFINITION
                {
                match(input,INTERFACE_DEFINITION,FOLLOW_INTERFACE_DEFINITION_in_synpred15_Ceylon9806); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1474:29: DYNAMIC UIDENTIFIER
                {
                match(input,DYNAMIC,FOLLOW_DYNAMIC_in_synpred15_Ceylon9808); if (state.failed) return ;

                match(input,UIDENTIFIER,FOLLOW_UIDENTIFIER_in_synpred15_Ceylon9810); if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred15_Ceylon

    // $ANTLR start synpred16_Ceylon
    public void synpred16_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1488:7: ( NEW ( LIDENTIFIER | UIDENTIFIER )? LPAREN )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1488:8: NEW ( LIDENTIFIER | UIDENTIFIER )? LPAREN
        {
        match(input,NEW,FOLLOW_NEW_in_synpred16_Ceylon9928); if (state.failed) return ;

        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1488:12: ( LIDENTIFIER | UIDENTIFIER )?
        int alt376=2;
        int LA376_0 = input.LA(1);

        if ( (LA376_0==LIDENTIFIER||LA376_0==UIDENTIFIER) ) {
            alt376=1;
        }
        switch (alt376) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:
                {
                if ( input.LA(1)==LIDENTIFIER||input.LA(1)==UIDENTIFIER ) {
                    input.consume();
                    state.errorRecovery=false;
                    state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


                }
                break;

        }


        match(input,LPAREN,FOLLOW_LPAREN_in_synpred16_Ceylon9937); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred16_Ceylon

    // $ANTLR start synpred17_Ceylon
    public void synpred17_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1504:8: ( unambiguousType )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1504:9: unambiguousType
        {
        pushFollow(FOLLOW_unambiguousType_in_synpred17_Ceylon10023);
        unambiguousType();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred17_Ceylon

    // $ANTLR start synpred18_Ceylon
    public void synpred18_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1747:7: ( LIDENTIFIER ( typeParameters )? specifierParametersStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1747:8: LIDENTIFIER ( typeParameters )? specifierParametersStart
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred18_Ceylon11697); if (state.failed) return ;

        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1747:20: ( typeParameters )?
        int alt377=2;
        int LA377_0 = input.LA(1);

        if ( (LA377_0==SMALLER_OP) ) {
            alt377=1;
        }
        switch (alt377) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1747:20: typeParameters
                {
                pushFollow(FOLLOW_typeParameters_in_synpred18_Ceylon11699);
                typeParameters();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        pushFollow(FOLLOW_specifierParametersStart_in_synpred18_Ceylon11702);
        specifierParametersStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred18_Ceylon

    // $ANTLR start synpred19_Ceylon
    public void synpred19_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1759:9: ( specifierParametersStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1759:10: specifierParametersStart
        {
        pushFollow(FOLLOW_specifierParametersStart_in_synpred19_Ceylon11778);
        specifierParametersStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred19_Ceylon

    // $ANTLR start synpred20_Ceylon
    public void synpred20_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1777:9: ( MEMBER_OP LIDENTIFIER ( typeParameters )? specifierParametersStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1777:10: MEMBER_OP LIDENTIFIER ( typeParameters )? specifierParametersStart
        {
        match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_synpred20_Ceylon11853); if (state.failed) return ;

        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred20_Ceylon11855); if (state.failed) return ;

        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1777:32: ( typeParameters )?
        int alt378=2;
        int LA378_0 = input.LA(1);

        if ( (LA378_0==SMALLER_OP) ) {
            alt378=1;
        }
        switch (alt378) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1777:32: typeParameters
                {
                pushFollow(FOLLOW_typeParameters_in_synpred20_Ceylon11857);
                typeParameters();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        pushFollow(FOLLOW_specifierParametersStart_in_synpred20_Ceylon11860);
        specifierParametersStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred20_Ceylon

    // $ANTLR start synpred21_Ceylon
    public void synpred21_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1792:11: ( specifierParametersStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1792:12: specifierParametersStart
        {
        pushFollow(FOLLOW_specifierParametersStart_in_synpred21_Ceylon11972);
        specifierParametersStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred21_Ceylon

    // $ANTLR start synpred22_Ceylon
    public void synpred22_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1873:9: (~ ( LIDENTIFIER | UIDENTIFIER ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:
        {
        if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= LET)||(input.LA(1) >= LINE_COMMENT && input.LA(1) <= TYPE_CONSTRAINT)||(input.LA(1) >= UIdentifierPrefix && input.LA(1) <= WS) ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred22_Ceylon

    // $ANTLR start synpred23_Ceylon
    public void synpred23_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1918:9: ( namedArgumentStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1918:10: namedArgumentStart
        {
        pushFollow(FOLLOW_namedArgumentStart_in_synpred23_Ceylon12673);
        namedArgumentStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred23_Ceylon

    // $ANTLR start synpred24_Ceylon
    public void synpred24_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1922:9: ( anonymousArgument )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1922:10: anonymousArgument
        {
        pushFollow(FOLLOW_anonymousArgument_in_synpred24_Ceylon12708);
        anonymousArgument();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred24_Ceylon

    // $ANTLR start synpred25_Ceylon
    public void synpred25_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1969:9: ( typeArgumentsStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1969:10: typeArgumentsStart
        {
        pushFollow(FOLLOW_typeArgumentsStart_in_synpred25_Ceylon13036);
        typeArgumentsStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred25_Ceylon

    // $ANTLR start synpred26_Ceylon
    public void synpred26_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1980:9: ( typeArgumentsStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:1980:10: typeArgumentsStart
        {
        pushFollow(FOLLOW_typeArgumentsStart_in_synpred26_Ceylon13117);
        typeArgumentsStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred26_Ceylon

    // $ANTLR start synpred27_Ceylon
    public void synpred27_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2016:9: ( index ( ELLIPSIS | RANGE_OP | SEGMENT_OP ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2016:10: index ( ELLIPSIS | RANGE_OP | SEGMENT_OP )
        {
        pushFollow(FOLLOW_index_in_synpred27_Ceylon13345);
        index();

        state._fsp--;
        if (state.failed) return ;

        if ( input.LA(1)==ELLIPSIS||input.LA(1)==RANGE_OP||input.LA(1)==SEGMENT_OP ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred27_Ceylon

    // $ANTLR start synpred28_Ceylon
    public void synpred28_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2065:9: ( namedArgumentStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2065:10: namedArgumentStart
        {
        pushFollow(FOLLOW_namedArgumentStart_in_synpred28_Ceylon13673);
        namedArgumentStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred28_Ceylon

    // $ANTLR start synpred29_Ceylon
    public void synpred29_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2069:9: ( anonymousArgument )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2069:10: anonymousArgument
        {
        pushFollow(FOLLOW_anonymousArgument_in_synpred29_Ceylon13708);
        anonymousArgument();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred29_Ceylon

    // $ANTLR start synpred30_Ceylon
    public void synpred30_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2087:11: ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )
        int alt379=2;
        int LA379_0 = input.LA(1);

        if ( (LA379_0==FOR_CLAUSE) ) {
            alt379=1;
        }
        else if ( (LA379_0==IF_CLAUSE) ) {
            alt379=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 379, 0, input);

            throw nvae;

        }
        switch (alt379) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2087:12: FOR_CLAUSE
                {
                match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_synpred30_Ceylon13846); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2087:25: IF_CLAUSE conditions ~ THEN_CLAUSE
                {
                match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_synpred30_Ceylon13850); if (state.failed) return ;

                pushFollow(FOLLOW_conditions_in_synpred30_Ceylon13852);
                conditions();

                state._fsp--;
                if (state.failed) return ;

                if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= StringPart)||(input.LA(1) >= THIS && input.LA(1) <= WS) ) {
                    input.consume();
                    state.errorRecovery=false;
                    state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


                }
                break;

        }
    }
    // $ANTLR end synpred30_Ceylon

    // $ANTLR start synpred31_Ceylon
    public void synpred31_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2104:13: ( FOR_CLAUSE | IF_CLAUSE conditions ~ THEN_CLAUSE )
        int alt380=2;
        int LA380_0 = input.LA(1);

        if ( (LA380_0==FOR_CLAUSE) ) {
            alt380=1;
        }
        else if ( (LA380_0==IF_CLAUSE) ) {
            alt380=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 380, 0, input);

            throw nvae;

        }
        switch (alt380) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2104:14: FOR_CLAUSE
                {
                match(input,FOR_CLAUSE,FOLLOW_FOR_CLAUSE_in_synpred31_Ceylon14029); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2104:27: IF_CLAUSE conditions ~ THEN_CLAUSE
                {
                match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_synpred31_Ceylon14033); if (state.failed) return ;

                pushFollow(FOLLOW_conditions_in_synpred31_Ceylon14035);
                conditions();

                state._fsp--;
                if (state.failed) return ;

                if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= StringPart)||(input.LA(1) >= THIS && input.LA(1) <= WS) ) {
                    input.consume();
                    state.errorRecovery=false;
                    state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


                }
                break;

        }
    }
    // $ANTLR end synpred31_Ceylon

    // $ANTLR start synpred32_Ceylon
    public void synpred32_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2367:15: ( namedArgumentStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2367:16: namedArgumentStart
        {
        pushFollow(FOLLOW_namedArgumentStart_in_synpred32_Ceylon16226);
        namedArgumentStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred32_Ceylon

    // $ANTLR start synpred33_Ceylon
    public void synpred33_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2435:7: ( FUNCTION_MODIFIER | VOID_MODIFIER | anonParametersStart )
        int alt381=3;
        switch ( input.LA(1) ) {
        case FUNCTION_MODIFIER:
            {
            alt381=1;
            }
            break;
        case VOID_MODIFIER:
            {
            alt381=2;
            }
            break;
        case LPAREN:
        case SMALLER_OP:
            {
            alt381=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 381, 0, input);

            throw nvae;

        }

        switch (alt381) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2435:8: FUNCTION_MODIFIER
                {
                match(input,FUNCTION_MODIFIER,FOLLOW_FUNCTION_MODIFIER_in_synpred33_Ceylon16655); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2435:26: VOID_MODIFIER
                {
                match(input,VOID_MODIFIER,FOLLOW_VOID_MODIFIER_in_synpred33_Ceylon16657); if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2435:40: anonParametersStart
                {
                pushFollow(FOLLOW_anonParametersStart_in_synpred33_Ceylon16659);
                anonParametersStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred33_Ceylon

    // $ANTLR start synpred34_Ceylon
    public void synpred34_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2459:7: ( variable ENTRY_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2459:8: variable ENTRY_OP
        {
        pushFollow(FOLLOW_variable_in_synpred34_Ceylon16791);
        variable();

        state._fsp--;
        if (state.failed) return ;

        match(input,ENTRY_OP,FOLLOW_ENTRY_OP_in_synpred34_Ceylon16793); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred34_Ceylon

    // $ANTLR start synpred35_Ceylon
    public void synpred35_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2465:9: ( patternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2465:10: patternStart
        {
        pushFollow(FOLLOW_patternStart_in_synpred35_Ceylon16843);
        patternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred35_Ceylon

    // $ANTLR start synpred36_Ceylon
    public void synpred36_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2718:7: ( IF_CLAUSE conditions ~ THEN_CLAUSE )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:2718:8: IF_CLAUSE conditions ~ THEN_CLAUSE
        {
        match(input,IF_CLAUSE,FOLLOW_IF_CLAUSE_in_synpred36_Ceylon17975); if (state.failed) return ;

        pushFollow(FOLLOW_conditions_in_synpred36_Ceylon17977);
        conditions();

        state._fsp--;
        if (state.failed) return ;

        if ( (input.LA(1) >= ABSTRACTED_TYPE && input.LA(1) <= StringPart)||(input.LA(1) >= THIS && input.LA(1) <= WS) ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred36_Ceylon

    // $ANTLR start synpred37_Ceylon
    public void synpred37_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3250:7: ( unionType ( PRODUCT_OP | SUM_OP ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3250:8: unionType ( PRODUCT_OP | SUM_OP )
        {
        pushFollow(FOLLOW_unionType_in_synpred37_Ceylon21782);
        unionType();

        state._fsp--;
        if (state.failed) return ;

        if ( input.LA(1)==PRODUCT_OP||input.LA(1)==SUM_OP ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred37_Ceylon

    // $ANTLR start synpred38_Ceylon
    public void synpred38_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3272:7: ( type ( SPECIFY ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3272:8: type ( SPECIFY )
        {
        pushFollow(FOLLOW_type_in_synpred38_Ceylon21913);
        type();

        state._fsp--;
        if (state.failed) return ;

        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3272:13: ( SPECIFY )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3272:14: SPECIFY
        {
        match(input,SPECIFY,FOLLOW_SPECIFY_in_synpred38_Ceylon21916); if (state.failed) return ;

        }


        }

    }
    // $ANTLR end synpred38_Ceylon

    // $ANTLR start synpred39_Ceylon
    public void synpred39_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3340:7: ( typeParameters ( TYPE_CONSTRAINT | COMPUTE ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3340:8: typeParameters ( TYPE_CONSTRAINT | COMPUTE )
        {
        pushFollow(FOLLOW_typeParameters_in_synpred39_Ceylon22423);
        typeParameters();

        state._fsp--;
        if (state.failed) return ;

        if ( input.LA(1)==COMPUTE||input.LA(1)==TYPE_CONSTRAINT ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred39_Ceylon

    // $ANTLR start synpred40_Ceylon
    public void synpred40_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3576:7: ( namedAnnotationArgumentsStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3576:8: namedAnnotationArgumentsStart
        {
        pushFollow(FOLLOW_namedAnnotationArgumentsStart_in_synpred40_Ceylon23952);
        namedAnnotationArgumentsStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred40_Ceylon

    // $ANTLR start synpred41_Ceylon
    public void synpred41_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3662:10: ( patternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3662:11: patternStart
        {
        pushFollow(FOLLOW_patternStart_in_synpred41_Ceylon24587);
        patternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred41_Ceylon

    // $ANTLR start synpred42_Ceylon
    public void synpred42_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3662:9: ( ( patternStart )=> patternStart | compilerAnnotations ( declarationStart | specificationStart ) )
        int alt383=2;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            int LA383_1 = input.LA(2);

            if ( (synpred41_Ceylon()) ) {
                alt383=1;
            }
            else if ( (true) ) {
                alt383=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 383, 1, input);

                throw nvae;

            }
            }
            break;
        case SMALLER_OP:
            {
            int LA383_2 = input.LA(2);

            if ( (synpred41_Ceylon()) ) {
                alt383=1;
            }
            else if ( (true) ) {
                alt383=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 383, 2, input);

                throw nvae;

            }
            }
            break;
        case UIDENTIFIER:
            {
            int LA383_3 = input.LA(2);

            if ( (synpred41_Ceylon()) ) {
                alt383=1;
            }
            else if ( (true) ) {
                alt383=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 383, 3, input);

                throw nvae;

            }
            }
            break;
        case PACKAGE:
            {
            int LA383_4 = input.LA(2);

            if ( (synpred41_Ceylon()) ) {
                alt383=1;
            }
            else if ( (true) ) {
                alt383=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 383, 4, input);

                throw nvae;

            }
            }
            break;
        case LBRACKET:
            {
            int LA383_5 = input.LA(2);

            if ( (synpred41_Ceylon()) ) {
                alt383=1;
            }
            else if ( (true) ) {
                alt383=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 383, 5, input);

                throw nvae;

            }
            }
            break;
        case LBRACE:
            {
            int LA383_6 = input.LA(2);

            if ( (synpred41_Ceylon()) ) {
                alt383=1;
            }
            else if ( (true) ) {
                alt383=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 383, 6, input);

                throw nvae;

            }
            }
            break;
        case VOID_MODIFIER:
            {
            int LA383_7 = input.LA(2);

            if ( (synpred41_Ceylon()) ) {
                alt383=1;
            }
            else if ( (true) ) {
                alt383=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 383, 7, input);

                throw nvae;

            }
            }
            break;
        case FUNCTION_MODIFIER:
            {
            int LA383_8 = input.LA(2);

            if ( (synpred41_Ceylon()) ) {
                alt383=1;
            }
            else if ( (true) ) {
                alt383=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 383, 8, input);

                throw nvae;

            }
            }
            break;
        case VALUE_MODIFIER:
            {
            int LA383_9 = input.LA(2);

            if ( (synpred41_Ceylon()) ) {
                alt383=1;
            }
            else if ( (true) ) {
                alt383=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 383, 9, input);

                throw nvae;

            }
            }
            break;
        case LIDENTIFIER:
            {
            int LA383_10 = input.LA(2);

            if ( (synpred41_Ceylon()) ) {
                alt383=1;
            }
            else if ( (true) ) {
                alt383=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 383, 10, input);

                throw nvae;

            }
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case INTERFACE_DEFINITION:
        case NEW:
        case OBJECT_DEFINITION:
            {
            alt383=2;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 383, 0, input);

            throw nvae;

        }

        switch (alt383) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3662:10: ( patternStart )=> patternStart
                {
                pushFollow(FOLLOW_patternStart_in_synpred42_Ceylon24592);
                patternStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3662:43: compilerAnnotations ( declarationStart | specificationStart )
                {
                pushFollow(FOLLOW_compilerAnnotations_in_synpred42_Ceylon24596);
                compilerAnnotations();

                state._fsp--;
                if (state.failed) return ;

                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3662:63: ( declarationStart | specificationStart )
                int alt382=2;
                int LA382_0 = input.LA(1);

                if ( (LA382_0==ALIAS||LA382_0==ASSIGN||LA382_0==CLASS_DEFINITION||LA382_0==DYNAMIC||LA382_0==FUNCTION_MODIFIER||LA382_0==INTERFACE_DEFINITION||(LA382_0 >= LBRACE && LA382_0 <= LBRACKET)||LA382_0==NEW||LA382_0==OBJECT_DEFINITION||LA382_0==PACKAGE||LA382_0==SMALLER_OP||LA382_0==UIDENTIFIER||LA382_0==VALUE_MODIFIER||LA382_0==VOID_MODIFIER) ) {
                    alt382=1;
                }
                else if ( (LA382_0==LIDENTIFIER) ) {
                    alt382=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 382, 0, input);

                    throw nvae;

                }
                switch (alt382) {
                    case 1 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3662:64: declarationStart
                        {
                        pushFollow(FOLLOW_declarationStart_in_synpred42_Ceylon24599);
                        declarationStart();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3662:81: specificationStart
                        {
                        pushFollow(FOLLOW_specificationStart_in_synpred42_Ceylon24601);
                        specificationStart();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;

                }


                }
                break;

        }
    }
    // $ANTLR end synpred42_Ceylon

    // $ANTLR start synpred43_Ceylon
    public void synpred43_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3666:9: ( LIDENTIFIER )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3666:10: LIDENTIFIER
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred43_Ceylon24645); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred43_Ceylon

    // $ANTLR start synpred44_Ceylon
    public void synpred44_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3683:10: ( patternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3683:11: patternStart
        {
        pushFollow(FOLLOW_patternStart_in_synpred44_Ceylon24779);
        patternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred44_Ceylon

    // $ANTLR start synpred45_Ceylon
    public void synpred45_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3683:9: ( ( patternStart )=> patternStart | compilerAnnotations ( declarationStart | specificationStart ) )
        int alt385=2;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            int LA385_1 = input.LA(2);

            if ( (synpred44_Ceylon()) ) {
                alt385=1;
            }
            else if ( (true) ) {
                alt385=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 385, 1, input);

                throw nvae;

            }
            }
            break;
        case SMALLER_OP:
            {
            int LA385_2 = input.LA(2);

            if ( (synpred44_Ceylon()) ) {
                alt385=1;
            }
            else if ( (true) ) {
                alt385=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 385, 2, input);

                throw nvae;

            }
            }
            break;
        case UIDENTIFIER:
            {
            int LA385_3 = input.LA(2);

            if ( (synpred44_Ceylon()) ) {
                alt385=1;
            }
            else if ( (true) ) {
                alt385=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 385, 3, input);

                throw nvae;

            }
            }
            break;
        case PACKAGE:
            {
            int LA385_4 = input.LA(2);

            if ( (synpred44_Ceylon()) ) {
                alt385=1;
            }
            else if ( (true) ) {
                alt385=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 385, 4, input);

                throw nvae;

            }
            }
            break;
        case LBRACKET:
            {
            int LA385_5 = input.LA(2);

            if ( (synpred44_Ceylon()) ) {
                alt385=1;
            }
            else if ( (true) ) {
                alt385=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 385, 5, input);

                throw nvae;

            }
            }
            break;
        case LBRACE:
            {
            int LA385_6 = input.LA(2);

            if ( (synpred44_Ceylon()) ) {
                alt385=1;
            }
            else if ( (true) ) {
                alt385=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 385, 6, input);

                throw nvae;

            }
            }
            break;
        case VOID_MODIFIER:
            {
            int LA385_7 = input.LA(2);

            if ( (synpred44_Ceylon()) ) {
                alt385=1;
            }
            else if ( (true) ) {
                alt385=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 385, 7, input);

                throw nvae;

            }
            }
            break;
        case FUNCTION_MODIFIER:
            {
            int LA385_8 = input.LA(2);

            if ( (synpred44_Ceylon()) ) {
                alt385=1;
            }
            else if ( (true) ) {
                alt385=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 385, 8, input);

                throw nvae;

            }
            }
            break;
        case VALUE_MODIFIER:
            {
            int LA385_9 = input.LA(2);

            if ( (synpred44_Ceylon()) ) {
                alt385=1;
            }
            else if ( (true) ) {
                alt385=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 385, 9, input);

                throw nvae;

            }
            }
            break;
        case LIDENTIFIER:
            {
            int LA385_10 = input.LA(2);

            if ( (synpred44_Ceylon()) ) {
                alt385=1;
            }
            else if ( (true) ) {
                alt385=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 385, 10, input);

                throw nvae;

            }
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case INTERFACE_DEFINITION:
        case NEW:
        case OBJECT_DEFINITION:
            {
            alt385=2;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 385, 0, input);

            throw nvae;

        }

        switch (alt385) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3683:10: ( patternStart )=> patternStart
                {
                pushFollow(FOLLOW_patternStart_in_synpred45_Ceylon24784);
                patternStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3683:43: compilerAnnotations ( declarationStart | specificationStart )
                {
                pushFollow(FOLLOW_compilerAnnotations_in_synpred45_Ceylon24788);
                compilerAnnotations();

                state._fsp--;
                if (state.failed) return ;

                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3683:63: ( declarationStart | specificationStart )
                int alt384=2;
                int LA384_0 = input.LA(1);

                if ( (LA384_0==ALIAS||LA384_0==ASSIGN||LA384_0==CLASS_DEFINITION||LA384_0==DYNAMIC||LA384_0==FUNCTION_MODIFIER||LA384_0==INTERFACE_DEFINITION||(LA384_0 >= LBRACE && LA384_0 <= LBRACKET)||LA384_0==NEW||LA384_0==OBJECT_DEFINITION||LA384_0==PACKAGE||LA384_0==SMALLER_OP||LA384_0==UIDENTIFIER||LA384_0==VALUE_MODIFIER||LA384_0==VOID_MODIFIER) ) {
                    alt384=1;
                }
                else if ( (LA384_0==LIDENTIFIER) ) {
                    alt384=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 384, 0, input);

                    throw nvae;

                }
                switch (alt384) {
                    case 1 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3683:64: declarationStart
                        {
                        pushFollow(FOLLOW_declarationStart_in_synpred45_Ceylon24791);
                        declarationStart();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3683:81: specificationStart
                        {
                        pushFollow(FOLLOW_specificationStart_in_synpred45_Ceylon24793);
                        specificationStart();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;

                }


                }
                break;

        }
    }
    // $ANTLR end synpred45_Ceylon

    // $ANTLR start synpred46_Ceylon
    public void synpred46_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3687:9: ( LIDENTIFIER )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3687:10: LIDENTIFIER
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred46_Ceylon24837); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred46_Ceylon

    // $ANTLR start synpred47_Ceylon
    public void synpred47_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3706:9: ( LIDENTIFIER SPECIFY )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3706:10: LIDENTIFIER SPECIFY
        {
        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred47_Ceylon24982); if (state.failed) return ;

        match(input,SPECIFY,FOLLOW_SPECIFY_in_synpred47_Ceylon24984); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred47_Ceylon

    // $ANTLR start synpred48_Ceylon
    public void synpred48_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3749:9: ( LBRACE )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3749:10: LBRACE
        {
        match(input,LBRACE,FOLLOW_LBRACE_in_synpred48_Ceylon25300); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred48_Ceylon

    // $ANTLR start synpred49_Ceylon
    public void synpred49_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3915:9: ( COMPILER_ANNOTATION | declarationStart | specificationStart )
        int alt386=3;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            alt386=1;
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case FUNCTION_MODIFIER:
        case INTERFACE_DEFINITION:
        case LBRACE:
        case LBRACKET:
        case NEW:
        case OBJECT_DEFINITION:
        case PACKAGE:
        case SMALLER_OP:
        case UIDENTIFIER:
        case VALUE_MODIFIER:
        case VOID_MODIFIER:
            {
            alt386=2;
            }
            break;
        case LIDENTIFIER:
            {
            alt386=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 386, 0, input);

            throw nvae;

        }

        switch (alt386) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3915:10: COMPILER_ANNOTATION
                {
                match(input,COMPILER_ANNOTATION,FOLLOW_COMPILER_ANNOTATION_in_synpred49_Ceylon25847); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3915:30: declarationStart
                {
                pushFollow(FOLLOW_declarationStart_in_synpred49_Ceylon25849);
                declarationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3915:47: specificationStart
                {
                pushFollow(FOLLOW_specificationStart_in_synpred49_Ceylon25851);
                specificationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred49_Ceylon

    // $ANTLR start synpred50_Ceylon
    public void synpred50_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3963:7: ( IS_OP )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3963:8: IS_OP
        {
        match(input,IS_OP,FOLLOW_IS_OP_in_synpred50_Ceylon26210); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred50_Ceylon

    // $ANTLR start synpred51_Ceylon
    public void synpred51_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3965:7: ( SATISFIES )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:3965:8: SATISFIES
        {
        match(input,SATISFIES,FOLLOW_SATISFIES_in_synpred51_Ceylon26231); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred51_Ceylon

    // $ANTLR start synpred52_Ceylon
    public void synpred52_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4026:10: ( patternStart )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4026:11: patternStart
        {
        pushFollow(FOLLOW_patternStart_in_synpred52_Ceylon26629);
        patternStart();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred52_Ceylon

    // $ANTLR start synpred53_Ceylon
    public void synpred53_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4141:7: ( COMPILER_ANNOTATION | declarationStart | specificationStart )
        int alt387=3;
        switch ( input.LA(1) ) {
        case COMPILER_ANNOTATION:
            {
            alt387=1;
            }
            break;
        case ALIAS:
        case ASSIGN:
        case CLASS_DEFINITION:
        case DYNAMIC:
        case FUNCTION_MODIFIER:
        case INTERFACE_DEFINITION:
        case LBRACE:
        case LBRACKET:
        case NEW:
        case OBJECT_DEFINITION:
        case PACKAGE:
        case SMALLER_OP:
        case UIDENTIFIER:
        case VALUE_MODIFIER:
        case VOID_MODIFIER:
            {
            alt387=2;
            }
            break;
        case LIDENTIFIER:
            {
            alt387=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 387, 0, input);

            throw nvae;

        }

        switch (alt387) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4141:8: COMPILER_ANNOTATION
                {
                match(input,COMPILER_ANNOTATION,FOLLOW_COMPILER_ANNOTATION_in_synpred53_Ceylon27505); if (state.failed) return ;

                }
                break;
            case 2 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4141:28: declarationStart
                {
                pushFollow(FOLLOW_declarationStart_in_synpred53_Ceylon27507);
                declarationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 3 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4141:45: specificationStart
                {
                pushFollow(FOLLOW_specificationStart_in_synpred53_Ceylon27509);
                specificationStart();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
    }
    // $ANTLR end synpred53_Ceylon

    // $ANTLR start synpred54_Ceylon
    public void synpred54_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4418:5: ( ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4418:6: ( ( PACKAGE | primaryType ) MEMBER_OP )? LIDENTIFIER
        {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4418:6: ( ( PACKAGE | primaryType ) MEMBER_OP )?
        int alt389=2;
        int LA389_0 = input.LA(1);

        if ( ((LA389_0 >= LBRACE && LA389_0 <= LBRACKET)||LA389_0==PACKAGE||LA389_0==SMALLER_OP||LA389_0==UIDENTIFIER) ) {
            alt389=1;
        }
        switch (alt389) {
            case 1 :
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4418:7: ( PACKAGE | primaryType ) MEMBER_OP
                {
                // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4418:7: ( PACKAGE | primaryType )
                int alt388=2;
                int LA388_0 = input.LA(1);

                if ( (LA388_0==PACKAGE) ) {
                    int LA388_1 = input.LA(2);

                    if ( (LA388_1==MEMBER_OP) ) {
                        int LA388_3 = input.LA(3);

                        if ( (LA388_3==LIDENTIFIER) ) {
                            alt388=1;
                        }
                        else if ( (LA388_3==UIDENTIFIER) ) {
                            alt388=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 388, 3, input);

                            throw nvae;

                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 388, 1, input);

                        throw nvae;

                    }
                }
                else if ( ((LA388_0 >= LBRACE && LA388_0 <= LBRACKET)||LA388_0==SMALLER_OP||LA388_0==UIDENTIFIER) ) {
                    alt388=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 388, 0, input);

                    throw nvae;

                }
                switch (alt388) {
                    case 1 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4418:8: PACKAGE
                        {
                        match(input,PACKAGE,FOLLOW_PACKAGE_in_synpred54_Ceylon28943); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4418:16: primaryType
                        {
                        pushFollow(FOLLOW_primaryType_in_synpred54_Ceylon28945);
                        primaryType();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;

                }


                match(input,MEMBER_OP,FOLLOW_MEMBER_OP_in_synpred54_Ceylon28948); if (state.failed) return ;

                }
                break;

        }


        match(input,LIDENTIFIER,FOLLOW_LIDENTIFIER_in_synpred54_Ceylon28952); if (state.failed) return ;

        }

    }
    // $ANTLR end synpred54_Ceylon

    // $ANTLR start synpred55_Ceylon
    public void synpred55_Ceylon_fragment() throws RecognitionException {
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4432:8: ( PACKAGE ( LIDENTIFIER | BACKTICK ) )
        // /Users/bastien/Dev/ceylon/ceylon-spec/Ceylon.g:4432:9: PACKAGE ( LIDENTIFIER | BACKTICK )
        {
        match(input,PACKAGE,FOLLOW_PACKAGE_in_synpred55_Ceylon29041); if (state.failed) return ;

        if ( input.LA(1)==BACKTICK||input.LA(1)==LIDENTIFIER ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }

    }
    // $ANTLR end synpred55_Ceylon

    // Delegated rules

    public boolean synpred24_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred40_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred42_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred41_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred20_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred27_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred28_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred22_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred25_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred26_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred29_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred21_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred23_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred48_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred47_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred49_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred45_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred43_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred44_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred46_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred2_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred10_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred32_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred7_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred8_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred16_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred14_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred15_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred6_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred34_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred9_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred30_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred5_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred31_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred33_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred35_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred4_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred19_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred36_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred18_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred11_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred12_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred13_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred17_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred37_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred38_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred39_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred52_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred53_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred51_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred54_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred55_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred50_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred3_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public boolean synpred1_Ceylon() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_Ceylon_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA169 dfa169 = new DFA169(this);
    protected DFA172 dfa172 = new DFA172(this);
    protected DFA171 dfa171 = new DFA171(this);
    protected DFA178 dfa178 = new DFA178(this);
    protected DFA187 dfa187 = new DFA187(this);
    protected DFA188 dfa188 = new DFA188(this);
    static final String DFA1_eotS =
        "\10\uffff";
    static final String DFA1_eofS =
        "\1\3\7\uffff";
    static final String DFA1_minS =
        "\1\7\1\105\2\uffff\1\7\1\160\2\7";
    static final String DFA1_maxS =
        "\1\u0083\1\105\2\uffff\1\u0083\1\u0082\2\u0083";
    static final String DFA1_acceptS =
        "\2\uffff\1\1\1\2\4\uffff";
    static final String DFA1_specialS =
        "\10\uffff}>";
    static final String[] DFA1_transitionS = {
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\5\uffff\1\3\1\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff"+
            "\1\3\4\uffff\1\3\3\uffff\1\3\5\uffff\1\3\5\uffff\1\3\11\uffff"+
            "\1\2\1\3\4\uffff\1\3\14\uffff\1\3\3\uffff\3\3",
            "\1\4",
            "",
            "",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\4\uffff"+
            "\1\3\3\uffff\1\3\5\uffff\1\3\16\uffff\1\5\1\2\1\3\4\uffff\1"+
            "\3\14\uffff\1\3\3\uffff\3\3",
            "\1\6\21\uffff\1\7",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\4\uffff"+
            "\1\3\3\uffff\1\3\5\uffff\1\3\17\uffff\1\2\1\3\4\uffff\1\3\14"+
            "\uffff\1\3\3\uffff\3\3",
            "\1\3\4\uffff\1\3\12\uffff\1\3\2\uffff\1\1\10\uffff\1\3\15\uffff"+
            "\1\3\7\uffff\1\3\10\uffff\2\3\1\uffff\1\3\5\uffff\1\3\4\uffff"+
            "\1\3\3\uffff\1\3\5\uffff\1\3\17\uffff\1\2\1\3\4\uffff\1\3\14"+
            "\uffff\1\3\3\uffff\3\3"
    };

    static final short[] DFA1_eot = DFA.unpackEncodedString(DFA1_eotS);
    static final short[] DFA1_eof = DFA.unpackEncodedString(DFA1_eofS);
    static final char[] DFA1_min = DFA.unpackEncodedStringToUnsignedChars(DFA1_minS);
    static final char[] DFA1_max = DFA.unpackEncodedStringToUnsignedChars(DFA1_maxS);
    static final short[] DFA1_accept = DFA.unpackEncodedString(DFA1_acceptS);
    static final short[] DFA1_special = DFA.unpackEncodedString(DFA1_specialS);
    static final short[][] DFA1_transition;

    static {
        int numStates = DFA1_transitionS.length;
        DFA1_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA1_transition[i] = DFA.unpackEncodedString(DFA1_transitionS[i]);
        }
    }

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = DFA1_eot;
            this.eof = DFA1_eof;
            this.min = DFA1_min;
            this.max = DFA1_max;
            this.accept = DFA1_accept;
            this.special = DFA1_special;
            this.transition = DFA1_transition;
        }
        public String getDescription() {
            return "85:7: (ca= compilerAnnotations SEMICOLON )?";
        }
    }
    static final String DFA169_eotS =
        "\77\uffff";
    static final String DFA169_eofS =
        "\77\uffff";
    static final String DFA169_minS =
        "\1\5\4\uffff\1\0\71\uffff";
    static final String DFA169_maxS =
        "\1\u0080\4\uffff\1\0\71\uffff";
    static final String DFA169_acceptS =
        "\1\uffff\1\2\74\uffff\1\1";
    static final String DFA169_specialS =
        "\5\uffff\1\0\71\uffff}>";
    static final String[] DFA169_transitionS = {
            "\1\1\2\uffff\2\1\11\uffff\2\1\3\uffff\2\1\1\uffff\3\1\2\uffff"+
            "\3\1\3\uffff\6\1\11\uffff\1\1\2\uffff\1\1\1\uffff\4\1\2\uffff"+
            "\4\1\4\uffff\1\5\1\uffff\1\1\1\uffff\1\1\4\uffff\2\1\3\uffff"+
            "\2\1\4\uffff\10\1\1\uffff\13\1\1\uffff\1\1\1\uffff\2\1\3\uffff"+
            "\1\1\6\uffff\2\1",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA169_eot = DFA.unpackEncodedString(DFA169_eotS);
    static final short[] DFA169_eof = DFA.unpackEncodedString(DFA169_eofS);
    static final char[] DFA169_min = DFA.unpackEncodedStringToUnsignedChars(DFA169_minS);
    static final char[] DFA169_max = DFA.unpackEncodedStringToUnsignedChars(DFA169_maxS);
    static final short[] DFA169_accept = DFA.unpackEncodedString(DFA169_acceptS);
    static final short[] DFA169_special = DFA.unpackEncodedString(DFA169_specialS);
    static final short[][] DFA169_transition;

    static {
        int numStates = DFA169_transitionS.length;
        DFA169_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA169_transition[i] = DFA.unpackEncodedString(DFA169_transitionS[i]);
        }
    }

    class DFA169 extends DFA {

        public DFA169(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 169;
            this.eot = DFA169_eot;
            this.eof = DFA169_eof;
            this.min = DFA169_min;
            this.max = DFA169_max;
            this.accept = DFA169_accept;
            this.special = DFA169_special;
            this.transition = DFA169_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1758:7: ( ( specifierParametersStart )=> parameters )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA169_5 = input.LA(1);

                         
                        int index169_5 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred19_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_5);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 169, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA172_eotS =
        "\77\uffff";
    static final String DFA172_eofS =
        "\77\uffff";
    static final String DFA172_minS =
        "\1\5\3\0\73\uffff";
    static final String DFA172_maxS =
        "\1\u0080\3\0\73\uffff";
    static final String DFA172_acceptS =
        "\4\uffff\1\2\71\uffff\1\1";
    static final String DFA172_specialS =
        "\1\uffff\1\0\1\1\1\2\73\uffff}>";
    static final String[] DFA172_transitionS = {
            "\1\4\2\uffff\2\4\11\uffff\2\4\3\uffff\2\4\1\uffff\3\4\2\uffff"+
            "\3\4\3\uffff\6\4\11\uffff\1\4\2\uffff\1\4\1\uffff\4\4\2\uffff"+
            "\4\4\4\uffff\1\4\1\uffff\1\1\1\uffff\1\4\4\uffff\2\4\3\uffff"+
            "\2\4\4\uffff\10\4\1\uffff\1\4\1\2\7\4\1\3\1\4\1\uffff\1\4\1"+
            "\uffff\2\4\3\uffff\1\4\6\uffff\2\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA172_eot = DFA.unpackEncodedString(DFA172_eotS);
    static final short[] DFA172_eof = DFA.unpackEncodedString(DFA172_eofS);
    static final char[] DFA172_min = DFA.unpackEncodedStringToUnsignedChars(DFA172_minS);
    static final char[] DFA172_max = DFA.unpackEncodedStringToUnsignedChars(DFA172_maxS);
    static final short[] DFA172_accept = DFA.unpackEncodedString(DFA172_acceptS);
    static final short[] DFA172_special = DFA.unpackEncodedString(DFA172_specialS);
    static final short[][] DFA172_transition;

    static {
        int numStates = DFA172_transitionS.length;
        DFA172_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA172_transition[i] = DFA.unpackEncodedString(DFA172_transitionS[i]);
        }
    }

    class DFA172 extends DFA {

        public DFA172(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 172;
            this.eot = DFA172_eot;
            this.eof = DFA172_eof;
            this.min = DFA172_min;
            this.max = DFA172_max;
            this.accept = DFA172_accept;
            this.special = DFA172_special;
            this.transition = DFA172_transition;
        }
        public String getDescription() {
            return "1776:7: ( ( MEMBER_OP LIDENTIFIER ( typeParameters )? specifierParametersStart )=> memberSelectionOperator memberName ( typeParameters )? ( ( specifierParametersStart )=> parameters )+ )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA172_1 = input.LA(1);

                         
                        int index172_1 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred20_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index172_1);

                        if ( s>=0 ) return s;
                        break;

                    case 1 : 
                        int LA172_2 = input.LA(1);

                         
                        int index172_2 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred20_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index172_2);

                        if ( s>=0 ) return s;
                        break;

                    case 2 : 
                        int LA172_3 = input.LA(1);

                         
                        int index172_3 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred20_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index172_3);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 172, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA171_eotS =
        "\77\uffff";
    static final String DFA171_eofS =
        "\77\uffff";
    static final String DFA171_minS =
        "\1\5\4\uffff\1\0\71\uffff";
    static final String DFA171_maxS =
        "\1\u0080\4\uffff\1\0\71\uffff";
    static final String DFA171_acceptS =
        "\1\uffff\1\2\74\uffff\1\1";
    static final String DFA171_specialS =
        "\5\uffff\1\0\71\uffff}>";
    static final String[] DFA171_transitionS = {
            "\1\1\2\uffff\2\1\11\uffff\2\1\3\uffff\2\1\1\uffff\3\1\2\uffff"+
            "\3\1\3\uffff\6\1\11\uffff\1\1\2\uffff\1\1\1\uffff\4\1\2\uffff"+
            "\4\1\4\uffff\1\5\1\uffff\1\1\1\uffff\1\1\4\uffff\2\1\3\uffff"+
            "\2\1\4\uffff\10\1\1\uffff\13\1\1\uffff\1\1\1\uffff\2\1\3\uffff"+
            "\1\1\6\uffff\2\1",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA171_eot = DFA.unpackEncodedString(DFA171_eotS);
    static final short[] DFA171_eof = DFA.unpackEncodedString(DFA171_eofS);
    static final char[] DFA171_min = DFA.unpackEncodedStringToUnsignedChars(DFA171_minS);
    static final char[] DFA171_max = DFA.unpackEncodedStringToUnsignedChars(DFA171_maxS);
    static final short[] DFA171_accept = DFA.unpackEncodedString(DFA171_acceptS);
    static final short[] DFA171_special = DFA.unpackEncodedString(DFA171_specialS);
    static final short[][] DFA171_transition;

    static {
        int numStates = DFA171_transitionS.length;
        DFA171_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA171_transition[i] = DFA.unpackEncodedString(DFA171_transitionS[i]);
        }
    }

    class DFA171 extends DFA {

        public DFA171(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 171;
            this.eot = DFA171_eot;
            this.eof = DFA171_eof;
            this.min = DFA171_min;
            this.max = DFA171_max;
            this.accept = DFA171_accept;
            this.special = DFA171_special;
            this.transition = DFA171_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1791:9: ( ( specifierParametersStart )=> parameters )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA171_5 = input.LA(1);

                         
                        int index171_5 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred21_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index171_5);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 171, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA178_eotS =
        "\100\uffff";
    static final String DFA178_eofS =
        "\100\uffff";
    static final String DFA178_minS =
        "\1\5\77\uffff";
    static final String DFA178_maxS =
        "\1\u0080\77\uffff";
    static final String DFA178_acceptS =
        "\1\uffff\1\1\1\2\75\3";
    static final String DFA178_specialS =
        "\1\0\77\uffff}>";
    static final String[] DFA178_transitionS = {
            "\1\60\2\uffff\1\46\1\70\11\uffff\1\55\1\42\3\uffff\1\7\1\31"+
            "\1\uffff\1\12\1\67\1\51\2\uffff\1\3\1\22\1\63\3\uffff\1\23\1"+
            "\54\1\26\1\43\1\27\1\40\11\uffff\1\45\2\uffff\1\4\1\uffff\1"+
            "\6\1\65\1\32\1\37\2\uffff\1\34\1\33\1\77\1\75\1\uffff\1\1\2"+
            "\uffff\1\76\1\uffff\1\72\1\uffff\1\62\4\uffff\1\30\1\44\3\uffff"+
            "\1\47\1\71\4\uffff\1\5\1\15\1\16\1\24\1\13\1\14\1\17\1\64\1"+
            "\uffff\1\11\1\73\1\41\1\20\1\25\1\50\1\36\1\35\1\57\1\74\1\53"+
            "\1\uffff\1\52\1\uffff\1\61\1\21\3\uffff\1\56\4\uffff\1\2\1\uffff"+
            "\1\10\1\66",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA178_eot = DFA.unpackEncodedString(DFA178_eotS);
    static final short[] DFA178_eof = DFA.unpackEncodedString(DFA178_eofS);
    static final char[] DFA178_min = DFA.unpackEncodedStringToUnsignedChars(DFA178_minS);
    static final char[] DFA178_max = DFA.unpackEncodedStringToUnsignedChars(DFA178_maxS);
    static final short[] DFA178_accept = DFA.unpackEncodedString(DFA178_acceptS);
    static final short[] DFA178_special = DFA.unpackEncodedString(DFA178_specialS);
    static final short[][] DFA178_transition;

    static {
        int numStates = DFA178_transitionS.length;
        DFA178_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA178_transition[i] = DFA.unpackEncodedString(DFA178_transitionS[i]);
        }
    }

    class DFA178 extends DFA {

        public DFA178(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 178;
            this.eot = DFA178_eot;
            this.eof = DFA178_eof;
            this.min = DFA178_min;
            this.max = DFA178_max;
            this.accept = DFA178_accept;
            this.special = DFA178_special;
            this.transition = DFA178_transition;
        }
        public String getDescription() {
            return "1865:7: ( memberReference | typeReference | (~ ( LIDENTIFIER | UIDENTIFIER ) )=>)";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA178_0 = input.LA(1);

                         
                        int index178_0 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (LA178_0==LIDENTIFIER) ) {s = 1;}

                        else if ( (LA178_0==UIDENTIFIER) ) {s = 2;}

                        else if ( (LA178_0==DECREMENT_OP) && (synpred22_Ceylon())) {s = 3;}

                        else if ( (LA178_0==INCREMENT_OP) && (synpred22_Ceylon())) {s = 4;}

                        else if ( (LA178_0==POWER_OP) && (synpred22_Ceylon())) {s = 5;}

                        else if ( (LA178_0==INTERSECTION_OP) && (synpred22_Ceylon())) {s = 6;}

                        else if ( (LA178_0==COMMA) && (synpred22_Ceylon())) {s = 7;}

                        else if ( (LA178_0==UNION_OP) && (synpred22_Ceylon())) {s = 8;}

                        else if ( (LA178_0==RPAREN) && (synpred22_Ceylon())) {s = 9;}

                        else if ( (LA178_0==COMPLEMENT_OP) && (synpred22_Ceylon())) {s = 10;}

                        else if ( (LA178_0==RBRACE) && (synpred22_Ceylon())) {s = 11;}

                        else if ( (LA178_0==RBRACKET) && (synpred22_Ceylon())) {s = 12;}

                        else if ( (LA178_0==PRODUCT_OP) && (synpred22_Ceylon())) {s = 13;}

                        else if ( (LA178_0==QUOTIENT_OP) && (synpred22_Ceylon())) {s = 14;}

                        else if ( (LA178_0==REMAINDER_OP) && (synpred22_Ceylon())) {s = 15;}

                        else if ( (LA178_0==SCALE_OP) && (synpred22_Ceylon())) {s = 16;}

                        else if ( (LA178_0==SUM_OP) && (synpred22_Ceylon())) {s = 17;}

                        else if ( (LA178_0==DIFFERENCE_OP) && (synpred22_Ceylon())) {s = 18;}

                        else if ( (LA178_0==ELLIPSIS) && (synpred22_Ceylon())) {s = 19;}

                        else if ( (LA178_0==RANGE_OP) && (synpred22_Ceylon())) {s = 20;}

                        else if ( (LA178_0==SEGMENT_OP) && (synpred22_Ceylon())) {s = 21;}

                        else if ( (LA178_0==ENTRY_OP) && (synpred22_Ceylon())) {s = 22;}

                        else if ( (LA178_0==EXISTS) && (synpred22_Ceylon())) {s = 23;}

                        else if ( (LA178_0==NONEMPTY) && (synpred22_Ceylon())) {s = 24;}

                        else if ( (LA178_0==COMPARE_OP) && (synpred22_Ceylon())) {s = 25;}

                        else if ( (LA178_0==IN_OP) && (synpred22_Ceylon())) {s = 26;}

                        else if ( (LA178_0==LARGE_AS_OP) && (synpred22_Ceylon())) {s = 27;}

                        else if ( (LA178_0==LARGER_OP) && (synpred22_Ceylon())) {s = 28;}

                        else if ( (LA178_0==SMALL_AS_OP) && (synpred22_Ceylon())) {s = 29;}

                        else if ( (LA178_0==SMALLER_OP) && (synpred22_Ceylon())) {s = 30;}

                        else if ( (LA178_0==IS_OP) && (synpred22_Ceylon())) {s = 31;}

                        else if ( (LA178_0==EXTENDS) && (synpred22_Ceylon())) {s = 32;}

                        else if ( (LA178_0==SATISFIES) && (synpred22_Ceylon())) {s = 33;}

                        else if ( (LA178_0==CASE_TYPES) && (synpred22_Ceylon())) {s = 34;}

                        else if ( (LA178_0==EQUAL_OP) && (synpred22_Ceylon())) {s = 35;}

                        else if ( (LA178_0==NOT_EQUAL_OP) && (synpred22_Ceylon())) {s = 36;}

                        else if ( (LA178_0==IDENTICAL_OP) && (synpred22_Ceylon())) {s = 37;}

                        else if ( (LA178_0==AND_OP) && (synpred22_Ceylon())) {s = 38;}

                        else if ( (LA178_0==OR_OP) && (synpred22_Ceylon())) {s = 39;}

                        else if ( (LA178_0==SEMICOLON) && (synpred22_Ceylon())) {s = 40;}

                        else if ( (LA178_0==COMPUTE) && (synpred22_Ceylon())) {s = 41;}

                        else if ( (LA178_0==STRING_MID) && (synpred22_Ceylon())) {s = 42;}

                        else if ( (LA178_0==STRING_END) && (synpred22_Ceylon())) {s = 43;}

                        else if ( (LA178_0==ELSE_CLAUSE) && (synpred22_Ceylon())) {s = 44;}

                        else if ( (LA178_0==CASE_CLAUSE) && (synpred22_Ceylon())) {s = 45;}

                        else if ( (LA178_0==THEN_CLAUSE) && (synpred22_Ceylon())) {s = 46;}

                        else if ( (LA178_0==SPECIFY) && (synpred22_Ceylon())) {s = 47;}

                        else if ( (LA178_0==ADD_SPECIFY) && (synpred22_Ceylon())) {s = 48;}

                        else if ( (LA178_0==SUBTRACT_SPECIFY) && (synpred22_Ceylon())) {s = 49;}

                        else if ( (LA178_0==MULTIPLY_SPECIFY) && (synpred22_Ceylon())) {s = 50;}

                        else if ( (LA178_0==DIVIDE_SPECIFY) && (synpred22_Ceylon())) {s = 51;}

                        else if ( (LA178_0==REMAINDER_SPECIFY) && (synpred22_Ceylon())) {s = 52;}

                        else if ( (LA178_0==INTERSECT_SPECIFY) && (synpred22_Ceylon())) {s = 53;}

                        else if ( (LA178_0==UNION_SPECIFY) && (synpred22_Ceylon())) {s = 54;}

                        else if ( (LA178_0==COMPLEMENT_SPECIFY) && (synpred22_Ceylon())) {s = 55;}

                        else if ( (LA178_0==AND_SPECIFY) && (synpred22_Ceylon())) {s = 56;}

                        else if ( (LA178_0==OR_SPECIFY) && (synpred22_Ceylon())) {s = 57;}

                        else if ( (LA178_0==MEMBER_OP) && (synpred22_Ceylon())) {s = 58;}

                        else if ( (LA178_0==SAFE_MEMBER_OP) && (synpred22_Ceylon())) {s = 59;}

                        else if ( (LA178_0==SPREAD_OP) && (synpred22_Ceylon())) {s = 60;}

                        else if ( (LA178_0==LBRACKET) && (synpred22_Ceylon())) {s = 61;}

                        else if ( (LA178_0==LPAREN) && (synpred22_Ceylon())) {s = 62;}

                        else if ( (LA178_0==LBRACE) && (synpred22_Ceylon())) {s = 63;}

                         
                        input.seek(index178_0);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 178, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA187_eotS =
        "\77\uffff";
    static final String DFA187_eofS =
        "\77\uffff";
    static final String DFA187_minS =
        "\1\5\1\0\75\uffff";
    static final String DFA187_maxS =
        "\1\u0080\1\0\75\uffff";
    static final String DFA187_acceptS =
        "\2\uffff\1\2\73\uffff\1\1";
    static final String DFA187_specialS =
        "\1\uffff\1\0\75\uffff}>";
    static final String[] DFA187_transitionS = {
            "\1\2\2\uffff\2\2\11\uffff\2\2\3\uffff\2\2\1\uffff\3\2\2\uffff"+
            "\3\2\3\uffff\6\2\11\uffff\1\2\2\uffff\1\2\1\uffff\4\2\2\uffff"+
            "\4\2\4\uffff\1\2\1\uffff\1\2\1\uffff\1\2\4\uffff\2\2\3\uffff"+
            "\2\2\4\uffff\10\2\1\uffff\6\2\1\1\4\2\1\uffff\1\2\1\uffff\2"+
            "\2\3\uffff\1\2\6\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA187_eot = DFA.unpackEncodedString(DFA187_eotS);
    static final short[] DFA187_eof = DFA.unpackEncodedString(DFA187_eofS);
    static final char[] DFA187_min = DFA.unpackEncodedStringToUnsignedChars(DFA187_minS);
    static final char[] DFA187_max = DFA.unpackEncodedStringToUnsignedChars(DFA187_maxS);
    static final short[] DFA187_accept = DFA.unpackEncodedString(DFA187_acceptS);
    static final short[] DFA187_special = DFA.unpackEncodedString(DFA187_specialS);
    static final short[][] DFA187_transition;

    static {
        int numStates = DFA187_transitionS.length;
        DFA187_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA187_transition[i] = DFA.unpackEncodedString(DFA187_transitionS[i]);
        }
    }

    class DFA187 extends DFA {

        public DFA187(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 187;
            this.eot = DFA187_eot;
            this.eof = DFA187_eof;
            this.min = DFA187_min;
            this.max = DFA187_max;
            this.accept = DFA187_accept;
            this.special = DFA187_special;
            this.transition = DFA187_transition;
        }
        public String getDescription() {
            return "1968:7: ( ( typeArgumentsStart )=> typeArguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA187_1 = input.LA(1);

                         
                        int index187_1 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred25_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index187_1);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 187, _s, input);
            error(nvae);
            throw nvae;
        }

    }
    static final String DFA188_eotS =
        "\77\uffff";
    static final String DFA188_eofS =
        "\77\uffff";
    static final String DFA188_minS =
        "\1\5\1\0\75\uffff";
    static final String DFA188_maxS =
        "\1\u0080\1\0\75\uffff";
    static final String DFA188_acceptS =
        "\2\uffff\1\2\73\uffff\1\1";
    static final String DFA188_specialS =
        "\1\uffff\1\0\75\uffff}>";
    static final String[] DFA188_transitionS = {
            "\1\2\2\uffff\2\2\11\uffff\2\2\3\uffff\2\2\1\uffff\3\2\2\uffff"+
            "\3\2\3\uffff\6\2\11\uffff\1\2\2\uffff\1\2\1\uffff\4\2\2\uffff"+
            "\4\2\4\uffff\1\2\1\uffff\1\2\1\uffff\1\2\4\uffff\2\2\3\uffff"+
            "\2\2\4\uffff\10\2\1\uffff\6\2\1\1\4\2\1\uffff\1\2\1\uffff\2"+
            "\2\3\uffff\1\2\6\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA188_eot = DFA.unpackEncodedString(DFA188_eotS);
    static final short[] DFA188_eof = DFA.unpackEncodedString(DFA188_eofS);
    static final char[] DFA188_min = DFA.unpackEncodedStringToUnsignedChars(DFA188_minS);
    static final char[] DFA188_max = DFA.unpackEncodedStringToUnsignedChars(DFA188_maxS);
    static final short[] DFA188_accept = DFA.unpackEncodedString(DFA188_acceptS);
    static final short[] DFA188_special = DFA.unpackEncodedString(DFA188_specialS);
    static final short[][] DFA188_transition;

    static {
        int numStates = DFA188_transitionS.length;
        DFA188_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA188_transition[i] = DFA.unpackEncodedString(DFA188_transitionS[i]);
        }
    }

    class DFA188 extends DFA {

        public DFA188(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 188;
            this.eot = DFA188_eot;
            this.eof = DFA188_eof;
            this.min = DFA188_min;
            this.max = DFA188_max;
            this.accept = DFA188_accept;
            this.special = DFA188_special;
            this.transition = DFA188_transition;
        }
        public String getDescription() {
            return "1979:7: ( ( typeArgumentsStart )=> typeArguments )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA188_1 = input.LA(1);

                         
                        int index188_1 = input.index();
                        input.rewind();

                        s = -1;
                        if ( (synpred26_Ceylon()) ) {s = 62;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index188_1);

                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}

            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 188, _s, input);
            error(nvae);
            throw nvae;
        }

    }
 

    public static final BitSet FOLLOW_compilerAnnotations_in_compilationUnit86 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_compilationUnit96 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_importDeclaration_in_compilationUnit134 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_moduleDescriptor_in_compilationUnit177 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_packageDescriptor_in_compilationUnit220 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_toplevelDeclaration_in_compilationUnit248 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_RBRACE_in_compilationUnit268 = new BitSet(new long[]{0x0282000804801080L,0x200108010411082CL,0x000000000000000EL});
    public static final BitSet FOLLOW_EOF_in_compilationUnit295 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_toplevelDeclaration318 = new BitSet(new long[]{0x0202000800801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_declaration_in_toplevelDeclaration329 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_annotatedModuleDescriptorStart354 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000820L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_annotatedModuleDescriptorStart356 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_MODULE_in_annotatedModuleDescriptorStart358 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_annotatedPackageDescriptorStart375 = new BitSet(new long[]{0x0000000000000000L,0x0001000004000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_annotatedPackageDescriptorStart377 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_PACKAGE_in_annotatedPackageDescriptorStart379 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFBFFL,0x000000000000003FL});
    public static final BitSet FOLLOW_set_in_annotatedPackageDescriptorStart381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_moduleDescriptor403 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000820L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_moduleDescriptor405 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_MODULE_in_moduleDescriptor413 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_moduleDescriptor430 = new BitSet(new long[]{0x0000000000400000L,0x0001000000000000L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_moduleDescriptor456 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_moduleDescriptor484 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_importModuleList_in_moduleDescriptor510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_importModuleList539 = new BitSet(new long[]{0x0080000004000000L,0x0001000100000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_compilerAnnotations_in_importModuleList565 = new BitSet(new long[]{0x0080000000000000L,0x0001000000000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_importModuleList567 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_importModule_in_importModuleList577 = new BitSet(new long[]{0x0080000004000000L,0x0001000100000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_RBRACE_in_importModuleList604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_packageDescriptor633 = new BitSet(new long[]{0x0000000000000000L,0x0001000004000020L,0x0000000000000004L});
    public static final BitSet FOLLOW_annotations_in_packageDescriptor635 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_PACKAGE_in_packageDescriptor643 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_packageDescriptor660 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_packageDescriptor676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPORT_in_importModule705 = new BitSet(new long[]{0x0000000000400000L,0x2001000000000020L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_importModule734 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_importModule764 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_packagePath_in_importModule792 = new BitSet(new long[]{0x0000000000400000L,0x0001040000000000L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_importModule830 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_importModule860 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_importModule887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPORT_in_importDeclaration916 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000024L});
    public static final BitSet FOLLOW_packagePath_in_importDeclaration944 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_importElementList_in_importDeclaration980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_importElementList1022 = new BitSet(new long[]{0x0000004004000000L,0x2000000100000020L});
    public static final BitSet FOLLOW_importElement_in_importElementList1045 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_COMMA_in_importElementList1076 = new BitSet(new long[]{0x0000004005000000L,0x2000000100000020L});
    public static final BitSet FOLLOW_importElement_in_importElementList1111 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_importWildcard_in_importElementList1139 = new BitSet(new long[]{0x0000000001000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_importWildcard_in_importElementList1193 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_importElementList1208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_importElement1244 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_importName_in_importElement1254 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000004L});
    public static final BitSet FOLLOW_SPECIFY_in_importElement1273 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000024L});
    public static final BitSet FOLLOW_importName_in_importElement1307 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_importElementList_in_importElement1371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELLIPSIS_in_importWildcard1423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_importName1452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_importName1462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_packageName_in_packagePath1496 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_packagePath1527 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000420L});
    public static final BitSet FOLLOW_packageName_in_packagePath1562 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_packageName1627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_packageName1651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_typeName1680 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_annotationName1709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_memberName1738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_memberNameDeclaration1771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_memberNameDeclaration1789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_typeNameDeclaration1819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_typeNameDeclaration1837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_enumeratedObject1867 = new BitSet(new long[]{0x0000080000000000L,0x2000040000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_enumeratedObject1893 = new BitSet(new long[]{0x0000080000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_delegatedConstructor_in_enumeratedObject1932 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_block_in_enumeratedObject1969 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_enumeratedObject1999 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_objectDeclaration2042 = new BitSet(new long[]{0x0000080000000000L,0x2000048000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_objectDeclaration2068 = new BitSet(new long[]{0x0000080000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_extendedType_in_objectDeclaration2106 = new BitSet(new long[]{0x0000000000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_objectDeclaration2145 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_classBody_in_objectDeclaration2183 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_objectDeclaration2213 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_objectExpression2252 = new BitSet(new long[]{0x0000080000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_extendedType_in_objectExpression2279 = new BitSet(new long[]{0x0000000000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_objectExpression2318 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_classBody_in_objectExpression2356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_objectExpression2388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodDeclaration2446 = new BitSet(new long[]{0x0000000024000000L,0x30002C0000000124L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodDeclaration2466 = new BitSet(new long[]{0x0000000024000000L,0x30002C0000000124L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_voidOrInferredMethodDeclaration2502 = new BitSet(new long[]{0x0000000024000000L,0x10002C0000000104L});
    public static final BitSet FOLLOW_typeParameters_in_voidOrInferredMethodDeclaration2539 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_parameters_in_voidOrInferredMethodDeclaration2584 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_typeConstraints_in_voidOrInferredMethodDeclaration2628 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_voidOrInferredMethodDeclaration2676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_voidOrInferredMethodDeclaration2718 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_voidOrInferredMethodDeclaration2761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSIGN_in_setterDeclaration2810 = new BitSet(new long[]{0x0000000020000000L,0x2000240000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_setterDeclaration2837 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_setterDeclaration2876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_setterDeclaration2917 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_setterDeclaration2960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tuplePatternStart2995 = new BitSet(new long[]{0x0202000804801080L,0x200008002411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_compilerAnnotations_in_tuplePatternStart3013 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000020L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_tuplePatternStart3015 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_tuplePatternStart3018 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_tuplePatternStart3054 = new BitSet(new long[]{0x0202000800801080L,0x200008000411000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_tuplePatternStart3056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePatternStart_in_tuplePatternStart3075 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_variableOrTuplePattern3117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variablePattern_in_variableOrTuplePattern3140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyItemPattern_in_pattern3192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyItemPattern_in_pattern3230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_pattern3265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variablePattern_in_pattern3288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyItemPattern_in_tupleOrEntryPattern3340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_keyItemPattern_in_tupleOrEntryPattern3378 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_tupleOrEntryPattern3400 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_variablePattern3429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tuplePattern3458 = new BitSet(new long[]{0x0002000004000000L,0x200008022400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variadicPattern_in_tuplePattern3486 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_COMMA_in_tuplePattern3520 = new BitSet(new long[]{0x0002000004000000L,0x200008002400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variadicPattern_in_tuplePattern3560 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_tuplePattern3614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicVariable_in_variadicPattern3672 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_pattern_in_variadicPattern3701 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_variadicVariable3748 = new BitSet(new long[]{0x0000000000000000L,0x200008002400000CL});
    public static final BitSet FOLLOW_unionType_in_variadicVariable3774 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_variadicVariable3811 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_variadicVariable3855 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableOrTuplePattern_in_keyItemPattern3897 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_keyItemPattern3913 = new BitSet(new long[]{0x0002000004000002L,0x200008000400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variableOrTuplePattern_in_keyItemPattern3941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_destructure3981 = new BitSet(new long[]{0x0002000004000000L,0x200008000400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_tupleOrEntryPattern_in_destructure3997 = new BitSet(new long[]{0x0000000000000000L,0x0000240000000000L});
    public static final BitSet FOLLOW_specifier_in_destructure4023 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_destructure4060 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_inferredAttributeDeclaration4098 = new BitSet(new long[]{0x0000000020000000L,0x2000240000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_inferredAttributeDeclaration4125 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_specifier_in_inferredAttributeDeclaration4175 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_inferredAttributeDeclaration4210 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_inferredAttributeDeclaration4253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_inferredAttributeDeclaration4292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_typedMethodOrAttributeDeclaration4342 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_typedMethodOrAttributeDeclaration4362 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_typedMethodOrAttributeDeclaration4388 = new BitSet(new long[]{0x0000000020000000L,0x00002C0000000104L});
    public static final BitSet FOLLOW_typeParameters_in_typedMethodOrAttributeDeclaration4437 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_typedMethodOrAttributeDeclaration4482 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000104L});
    public static final BitSet FOLLOW_typeConstraints_in_typedMethodOrAttributeDeclaration4537 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_typedMethodOrAttributeDeclaration4597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_typedMethodOrAttributeDeclaration4647 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration4699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_in_typedMethodOrAttributeDeclaration4754 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_typedMethodOrAttributeDeclaration4792 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrAttributeDeclaration4838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_typedMethodOrAttributeDeclaration4879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_interfaceDeclaration4938 = new BitSet(new long[]{0x0000000024100000L,0x30002C8000000024L});
    public static final BitSet FOLLOW_DYNAMIC_in_interfaceDeclaration4967 = new BitSet(new long[]{0x0000000024100000L,0x30002C8000000024L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_interfaceDeclaration5003 = new BitSet(new long[]{0x0000000024100000L,0x10002C8000000004L});
    public static final BitSet FOLLOW_typeParameters_in_interfaceDeclaration5041 = new BitSet(new long[]{0x0000000024100000L,0x1000248000000004L});
    public static final BitSet FOLLOW_caseTypes_in_interfaceDeclaration5079 = new BitSet(new long[]{0x0000000024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_interfaceDeclaration5133 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000004L});
    public static final BitSet FOLLOW_typeConstraints_in_interfaceDeclaration5170 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_interfaceBody_in_interfaceDeclaration5217 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeSpecifier_in_interfaceDeclaration5258 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_interfaceDeclaration5302 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_classDeclaration5350 = new BitSet(new long[]{0x0000080024100000L,0x30002C8000000124L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_classDeclaration5377 = new BitSet(new long[]{0x0000080024100000L,0x10002C8000000104L});
    public static final BitSet FOLLOW_typeParameters_in_classDeclaration5414 = new BitSet(new long[]{0x0000080024100000L,0x1000248000000104L});
    public static final BitSet FOLLOW_parameters_in_classDeclaration5451 = new BitSet(new long[]{0x0000080024100000L,0x1000248000000004L});
    public static final BitSet FOLLOW_caseTypes_in_classDeclaration5488 = new BitSet(new long[]{0x0000080024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_extendedType_in_classDeclaration5534 = new BitSet(new long[]{0x0000000024000000L,0x1000248000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_classDeclaration5572 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000004L});
    public static final BitSet FOLLOW_typeConstraints_in_classDeclaration5609 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_classBody_in_classDeclaration5656 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classSpecifier_in_classDeclaration5697 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_classDeclaration5740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_constructor5779 = new BitSet(new long[]{0x0000080000000000L,0x2000040000000124L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_constructor5805 = new BitSet(new long[]{0x0000080000000000L,0x0000040000000104L});
    public static final BitSet FOLLOW_parameters_in_constructor5842 = new BitSet(new long[]{0x0000080000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_delegatedConstructor_in_constructor5881 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_block_in_constructor5918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_constructor5948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_delegatedConstructor5987 = new BitSet(new long[]{0x0000000000000002L,0x2020000004000020L});
    public static final BitSet FOLLOW_classInstantiation_in_delegatedConstructor6015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALIAS_in_aliasDeclaration6055 = new BitSet(new long[]{0x0000000024000000L,0x30002C0000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_aliasDeclaration6081 = new BitSet(new long[]{0x0000000024000000L,0x10002C0000000000L});
    public static final BitSet FOLLOW_typeParameters_in_aliasDeclaration6119 = new BitSet(new long[]{0x0000000024000000L,0x1000240000000000L});
    public static final BitSet FOLLOW_typeConstraints_in_aliasDeclaration6157 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000000L});
    public static final BitSet FOLLOW_typeSpecifier_in_aliasDeclaration6194 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_aliasDeclaration6229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotations_in_assertion6258 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_ASSERT_in_assertion6266 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_assertion6282 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_assertion6306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_block6335 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_block6362 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_block6389 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_interfaceBody6422 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_interfaceBody6449 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_interfaceBody6476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_classBody6505 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_declarationOrStatement_in_classBody6531 = new BitSet(new long[]{0x0343800B44C19880L,0x2E7508110619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_RBRACE_in_classBody6558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_extendedType6587 = new BitSet(new long[]{0x0000000000000002L,0x2020000004000020L});
    public static final BitSet FOLLOW_classInstantiation_in_extendedType6617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_classSpecifier6667 = new BitSet(new long[]{0x0000000000000002L,0x2020000004000020L});
    public static final BitSet FOLLOW_SPECIFY_in_classSpecifier6696 = new BitSet(new long[]{0x0000000000000002L,0x2020000004000020L});
    public static final BitSet FOLLOW_classInstantiation_in_classSpecifier6735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_packageQualifiedClass6784 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_packageQualifiedClass6812 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_packageQualifiedClass6846 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_packageQualifiedClass6887 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberNameWithArguments_in_packageQualifiedClass6917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_unqualifiedClass6995 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_unqualifiedClass7024 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberNameWithArguments_in_unqualifiedClass7058 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberNameWithArguments_in_unqualifiedClass7100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUPER_in_superQualifiedClass7138 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_superQualifiedClass7157 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_superQualifiedClass7185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberNameWithArguments_in_superQualifiedClass7216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_packageQualifiedClass_in_classInstantiation7276 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_unqualifiedClass_in_classInstantiation7304 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_superQualifiedClass_in_classInstantiation7332 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_positionalArguments_in_classInstantiation7368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiedTypes7418 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_primaryType_in_satisfiedTypes7448 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_satisfiedTypes7500 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_set_in_satisfiedTypes7535 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_primaryType_in_satisfiedTypes7585 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_CASE_TYPES_in_caseTypes7637 = new BitSet(new long[]{0x0000000000000000L,0x200008000400002CL});
    public static final BitSet FOLLOW_caseType_in_caseTypes7655 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_caseTypes7697 = new BitSet(new long[]{0x0000000000000000L,0x200008000400002CL});
    public static final BitSet FOLLOW_set_in_caseTypes7733 = new BitSet(new long[]{0x0000000000000000L,0x200008000400002CL});
    public static final BitSet FOLLOW_caseType_in_caseTypes7783 = new BitSet(new long[]{0x0400000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_primaryType_in_caseType7837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_caseType7854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ABSTRACTED_TYPE_in_abstractedType7889 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_primaryType_in_abstractedType7905 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_parameters7934 = new BitSet(new long[]{0x0002000804000000L,0x200108200400002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_parameterDeclarationOrRef_in_parameters7962 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_parameters7997 = new BitSet(new long[]{0x0002000805000000L,0x200108200400002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_parameterDeclarationOrRef_in_parameters8037 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_parameters8117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_parameter8146 = new BitSet(new long[]{0x0002000800000000L,0x200108000400002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotations_in_parameter8154 = new BitSet(new long[]{0x0002000800000000L,0x200008000400000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_parameterDeclaration_in_parameter8162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_parameterDeclaration8215 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_parameterDeclaration8235 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_parameterDeclaration8255 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_parameterDeclaration8275 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_parameterDeclaration8295 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_parameterDeclaration8321 = new BitSet(new long[]{0x0000000000000002L,0x0000280000000100L});
    public static final BitSet FOLLOW_specifier_in_parameterDeclaration8359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_parameterDeclaration8412 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_parameterDeclaration8457 = new BitSet(new long[]{0x0000000020000002L,0x0000200000000100L});
    public static final BitSet FOLLOW_functionSpecifier_in_parameterDeclaration8502 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_parameterRef8554 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_parameterRef8580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameterRef_in_parameterDeclarationOrRef8628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameter_in_parameterDeclarationOrRef8653 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeParameters8682 = new BitSet(new long[]{0x1000000004000000L,0x2000000001000020L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters8700 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_COMMA_in_typeParameters8728 = new BitSet(new long[]{0x1000000005000000L,0x2000000001000021L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters8762 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeParameters8813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_typeParameter8850 = new BitSet(new long[]{0x1000000000000000L,0x2000000001000020L});
    public static final BitSet FOLLOW_variance_in_typeParameter8869 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_typeParameter8898 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_typeDefault_in_typeParameter8924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_variance8972 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OUT_in_variance8988 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_typeConstraint9021 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_TYPE_CONSTRAINT_in_typeConstraint9029 = new BitSet(new long[]{0x0000000000100012L,0x2000088000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_typeConstraint9055 = new BitSet(new long[]{0x0000000000100012L,0x0000088000000000L});
    public static final BitSet FOLLOW_typeParameters_in_typeConstraint9093 = new BitSet(new long[]{0x0000000000100012L,0x0000008000000000L});
    public static final BitSet FOLLOW_caseTypes_in_typeConstraint9131 = new BitSet(new long[]{0x0000000000000012L,0x0000008000000000L});
    public static final BitSet FOLLOW_satisfiedTypes_in_typeConstraint9175 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_abstractedType_in_typeConstraint9213 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TYPE_CONSTRAINT_in_anonymousTypeConstraint9253 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_typeNameDeclaration_in_anonymousTypeConstraint9269 = new BitSet(new long[]{0x0000000000100002L,0x0000008000000000L});
    public static final BitSet FOLLOW_caseTypes_in_anonymousTypeConstraint9296 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000000L});
    public static final BitSet FOLLOW_satisfiedTypes_in_anonymousTypeConstraint9333 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeConstraint_in_typeConstraints9391 = new BitSet(new long[]{0x0000000004000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_anonymousTypeConstraint_in_anonymousTypeConstraints9449 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_stringLiteral_in_annotationListStart9486 = new BitSet(new long[]{0x0002000000000000L,0x2000000000000020L,0x000000000000000AL});
    public static final BitSet FOLLOW_annotation_in_annotationListStart9488 = new BitSet(new long[]{0x0002000000000000L,0x2000000000000020L,0x000000000000000AL});
    public static final BitSet FOLLOW_set_in_annotationListStart9498 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_destructureStart9525 = new BitSet(new long[]{0x0002000004000000L,0x2000000000000028L,0x000000000000000AL});
    public static final BitSet FOLLOW_compilerAnnotations_in_destructureStart9527 = new BitSet(new long[]{0x0002000000000000L,0x2000000000000028L,0x000000000000000AL});
    public static final BitSet FOLLOW_LBRACKET_in_destructureStart9537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_destructureStart9539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_destructureStart9541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_destructureStart9543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_destructureStart9545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_destructureStart9547 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_destructureStart9549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_declarationOrStatement9582 = new BitSet(new long[]{0x0343800B40C19880L,0x2E7508100619812CL,0x000000000000001EL});
    public static final BitSet FOLLOW_destructure_in_declarationOrStatement9606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_declarationOrStatement9634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assertion_in_declarationOrStatement9660 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaration_in_declarationOrStatement9688 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_declarationOrStatement9710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotations_in_declaration9766 = new BitSet(new long[]{0x0202000800801080L,0x200008000411000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_classDeclaration_in_declaration9789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceDeclaration_in_declaration9815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_aliasDeclaration_in_declaration9831 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectDeclaration_in_declaration9847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_setterDeclaration_in_declaration9863 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_voidOrInferredMethodDeclaration_in_declaration9879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_inferredAttributeDeclaration_in_declaration9895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typedMethodOrAttributeDeclaration_in_declaration9911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructor_in_declaration9949 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumeratedObject_in_declaration9965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotatedDeclarationStart10008 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_annotation_in_annotatedDeclarationStart10011 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_unambiguousType_in_annotatedDeclarationStart10028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_annotatedDeclarationStart10032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotatedAssertionStart10050 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotation_in_annotatedAssertionStart10053 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000020L});
    public static final BitSet FOLLOW_ASSERT_in_annotatedAssertionStart10056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_declarationStart10076 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_declarationStart10084 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart10086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_declarationStart10099 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart10101 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSIGN_in_declarationStart10114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_declarationStart10122 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_declarationStart10130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_declarationStart10138 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart10140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_declarationStart10153 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALIAS_in_declarationStart10161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_declarationStart10170 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_declarationStart10172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_declarationStart10180 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_set_in_declarationStart10182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10210 = new BitSet(new long[]{0x0000010000000000L,0x0000000000200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10230 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10234 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10236 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType10249 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10251 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10273 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_unambiguousType10284 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10293 = new BitSet(new long[]{0x0000010000000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10296 = new BitSet(new long[]{0x0000010000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10300 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10302 = new BitSet(new long[]{0x0000010000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType10322 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10324 = new BitSet(new long[]{0x0000000000000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10336 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10340 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10342 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_set_in_unambiguousType10362 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_unambiguousType10375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10383 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10392 = new BitSet(new long[]{0x0000010001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10395 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10399 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10401 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType10422 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10424 = new BitSet(new long[]{0x0000000001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10435 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10439 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10441 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_COMMA_in_unambiguousType10471 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10482 = new BitSet(new long[]{0x0000010001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10485 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10489 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10491 = new BitSet(new long[]{0x0000010001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_unambiguousType10516 = new BitSet(new long[]{0x0000000000000000L,0x2000080004000000L});
    public static final BitSet FOLLOW_qualifiedType_in_unambiguousType10518 = new BitSet(new long[]{0x0000000001000000L,0x0010000020200008L});
    public static final BitSet FOLLOW_OPTIONAL_in_unambiguousType10532 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_LBRACKET_in_unambiguousType10536 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10538 = new BitSet(new long[]{0x0000000001000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_set_in_unambiguousType10569 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_unambiguousType10582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_directiveStatement_in_statement10603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_controlStatement_in_statement10619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionOrSpecificationStatement_in_statement10635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_expressionOrSpecificationStatement10673 = new BitSet(new long[]{0x0000000021000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_expressionOrSpecificationStatement10709 = new BitSet(new long[]{0x0000000001000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_expressionOrSpecificationStatement10754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMMA_in_expressionOrSpecificationStatement10784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_directive_in_directiveStatement10833 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_directiveStatement10850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_returnDirective_in_directive10879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_throwDirective_in_directive10895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_breakDirective_in_directive10911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_continueDirective_in_directive10927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RETURN_in_returnDirective10956 = new BitSet(new long[]{0x0142800B00408002L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_returnDirective10983 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THROW_in_throwDirective11023 = new BitSet(new long[]{0x0100800B00408002L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_throwDirective11050 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BREAK_in_breakDirective11090 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CONTINUE_in_continueDirective11119 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_typeSpecifier11158 = new BitSet(new long[]{0x0000000000000002L,0x200008000400000CL});
    public static final BitSet FOLLOW_SPECIFY_in_typeSpecifier11187 = new BitSet(new long[]{0x0000000000000002L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_typeSpecifier11224 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_typeDefault11264 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_typeDefault11281 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_specifier11310 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_specifier11326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_lazySpecifier11355 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_lazySpecifier11371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_functionSpecifier11410 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_SPECIFY_in_functionSpecifier11438 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_functionSpecifier11464 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assignmentExpression_in_expression11501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonstringLiteral_in_base11530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringExpression_in_base11546 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaLiteral_in_base11562 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumeration_in_base11578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuple_in_base11594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dynamicObject_in_base11610 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectExpression_in_base11626 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parExpression_in_base11642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_baseReferenceOrParameterized_in_base11658 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_baseReferenceOrParameterized11714 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000100L});
    public static final BitSet FOLLOW_typeParameters_in_baseReferenceOrParameterized11740 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_baseReferenceOrParameterized11783 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_baseReference_in_baseReferenceOrParameterized11810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selfReference_in_baseReferenceOrParameterized11826 = new BitSet(new long[]{0x0000000000000002L,0x0000404000000400L});
    public static final BitSet FOLLOW_memberSelectionOperator_in_baseReferenceOrParameterized11874 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_baseReferenceOrParameterized11894 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000100L});
    public static final BitSet FOLLOW_typeParameters_in_baseReferenceOrParameterized11926 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_baseReferenceOrParameterized11977 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_memberReference_in_baseReference12043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeReference_in_baseReference12059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_base_in_primary12094 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_qualifiedReference_in_primary12116 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_indexOrIndexRange_in_primary12134 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_positionalArguments_in_primary12155 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_namedArguments_in_primary12176 = new BitSet(new long[]{0x0000000000000002L,0x000040400000050CL});
    public static final BitSet FOLLOW_LPAREN_in_specifierParametersStart12210 = new BitSet(new long[]{0x0202000804801080L,0x200108200411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_RPAREN_in_specifierParametersStart12226 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_SPECIFY_in_specifierParametersStart12229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_specifierParametersStart12231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifierParametersStart_in_specifierParametersStart12233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_specifierParametersStart12249 = new BitSet(new long[]{0x0202000800801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_specifierParametersStart12251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberSelectionOperator_in_qualifiedReference12278 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberReference_in_qualifiedReference12306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeReference_in_qualifiedReference12326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MEMBER_OP_in_memberSelectionOperator12393 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SAFE_MEMBER_OP_in_memberSelectionOperator12409 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPREAD_OP_in_memberSelectionOperator12425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_enumeration12454 = new BitSet(new long[]{0x0143800B04408000L,0x227508012618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_sequencedArgument_in_enumeration12482 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_enumeration12509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tuple12538 = new BitSet(new long[]{0x0143800B04408000L,0x227508022618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_sequencedArgument_in_tuple12565 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_tuple12592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_dynamicObject12634 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_LBRACKET_in_dynamicObject12636 = new BitSet(new long[]{0x0143800B04408000L,0x227508022618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgument_in_dynamicObject12687 = new BitSet(new long[]{0x0143800B04408000L,0x227508022618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_anonymousArgument_in_dynamicObject12721 = new BitSet(new long[]{0x0143800B04408000L,0x227508022618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_sequencedArgument_in_dynamicObject12759 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_dynamicObject12786 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionExpression_in_valueCaseList12829 = new BitSet(new long[]{0x0000000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_COMMA_in_valueCaseList12871 = new BitSet(new long[]{0x0100800B01408002L,0xA23500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_UNION_OP_in_valueCaseList12898 = new BitSet(new long[]{0x0100800B01408002L,0xA23500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_intersectionExpression_in_valueCaseList12944 = new BitSet(new long[]{0x0000000001000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_memberName_in_memberReference13009 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_memberReference13049 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_typeReference13089 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_typeReference13130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArgumentsStart13169 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000DL});
    public static final BitSet FOLLOW_type_in_typeArgumentsStart13183 = new BitSet(new long[]{0x0000000001000000L,0x0000080000000001L});
    public static final BitSet FOLLOW_set_in_typeArgumentsStart13191 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArgumentsStart13211 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeArgumentsStart13226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_indexOrIndexRange13274 = new BitSet(new long[]{0x0142804B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_ELLIPSIS_in_indexOrIndexRange13302 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange13324 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange13367 = new BitSet(new long[]{0x0000004000000000L,0x0000020280000000L});
    public static final BitSet FOLLOW_ELLIPSIS_in_indexOrIndexRange13401 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RANGE_OP_in_indexOrIndexRange13436 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange13463 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_indexOrIndexRange13488 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_index_in_indexOrIndexRange13514 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_functionOrExpression_in_indexOrIndexRange13550 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_indexOrIndexRange13576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_additiveExpression_in_index13605 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_namedArguments13635 = new BitSet(new long[]{0x0143800B04408000L,0x227508012618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgument_in_namedArguments13687 = new BitSet(new long[]{0x0143800B04408000L,0x227508012618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_anonymousArgument_in_namedArguments13721 = new BitSet(new long[]{0x0143800B04408000L,0x227508012618813CL,0x000000000000000EL});
    public static final BitSet FOLLOW_sequencedArgument_in_namedArguments13759 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_namedArguments13786 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_sequencedArgument13815 = new BitSet(new long[]{0x0143800B00408000L,0x227508002618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehension_in_sequencedArgument13871 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_positionalArgument_in_sequencedArgument13908 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_spreadArgument_in_sequencedArgument13944 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_COMMA_in_sequencedArgument13990 = new BitSet(new long[]{0x0143800B01408002L,0x227508002618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehension_in_sequencedArgument14056 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_positionalArgument_in_sequencedArgument14099 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_spreadArgument_in_sequencedArgument14142 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_namedArgument14227 = new BitSet(new long[]{0x0002000800000000L,0x200008000410002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_namedSpecifiedArgument_in_namedArgument14244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentDeclaration_in_namedArgument14266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_namedSpecifiedArgument14307 = new BitSet(new long[]{0x0000000000000000L,0x0000240000000000L});
    public static final BitSet FOLLOW_specifier_in_namedSpecifiedArgument14333 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_namedSpecifiedArgument14369 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_anonymousArgument14407 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_anonymousArgument14433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_objectArgument14462 = new BitSet(new long[]{0x0000080000000000L,0x2000048000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_objectArgument14489 = new BitSet(new long[]{0x0000080000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_extendedType_in_objectArgument14527 = new BitSet(new long[]{0x0000000000000000L,0x0000048000000004L});
    public static final BitSet FOLLOW_satisfiedTypes_in_objectArgument14566 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000004L});
    public static final BitSet FOLLOW_classBody_in_objectArgument14604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMICOLON_in_objectArgument14634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_voidOrInferredMethodArgument14691 = new BitSet(new long[]{0x0000000020000000L,0x20002C0000000124L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_voidOrInferredMethodArgument14719 = new BitSet(new long[]{0x0000000020000000L,0x20002C0000000124L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_voidOrInferredMethodArgument14756 = new BitSet(new long[]{0x0000000020000000L,0x00002C0000000104L});
    public static final BitSet FOLLOW_typeParameters_in_voidOrInferredMethodArgument14794 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_parameters_in_voidOrInferredMethodArgument14831 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_block_in_voidOrInferredMethodArgument14868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_voidOrInferredMethodArgument14909 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_voidOrInferredMethodArgument14952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_inferredGetterArgument15009 = new BitSet(new long[]{0x0000000020000000L,0x2000240000000024L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_inferredGetterArgument15036 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000004L});
    public static final BitSet FOLLOW_block_in_inferredGetterArgument15074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_in_inferredGetterArgument15115 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_inferredGetterArgument15151 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_inferredGetterArgument15195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typedMethodOrGetterArgument15263 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_DYNAMIC_in_typedMethodOrGetterArgument15292 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_memberNameDeclaration_in_typedMethodOrGetterArgument15318 = new BitSet(new long[]{0x0000000020000000L,0x00002C0000000104L});
    public static final BitSet FOLLOW_typeParameters_in_typedMethodOrGetterArgument15366 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_typedMethodOrGetterArgument15411 = new BitSet(new long[]{0x0000000020000000L,0x0000240000000104L});
    public static final BitSet FOLLOW_block_in_typedMethodOrGetterArgument15458 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionSpecifier_in_typedMethodOrGetterArgument15507 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument15560 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_typedMethodOrGetterArgument15626 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifier_in_typedMethodOrGetterArgument15675 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_typedMethodOrGetterArgument15717 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_typedMethodOrGetterArgument15771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_untypedMethodOrGetterArgument15843 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_untypedMethodOrGetterArgument15892 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_functionSpecifier_in_untypedMethodOrGetterArgument15937 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_lazySpecifier_in_untypedMethodOrGetterArgument16015 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_SEMICOLON_in_untypedMethodOrGetterArgument16061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectArgument_in_namedArgumentDeclaration16098 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typedMethodOrGetterArgument_in_namedArgumentDeclaration16114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_voidOrInferredMethodArgument_in_namedArgumentDeclaration16130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_inferredGetterArgument_in_namedArgumentDeclaration16146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_untypedMethodOrGetterArgument_in_namedArgumentDeclaration16162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_namedArgumentStart16190 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_specificationStart_in_namedArgumentStart16200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_namedArgumentStart16204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_namedAnnotationArgumentsStart16222 = new BitSet(new long[]{0x0302800B04C09080L,0x223508010619812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_namedArgumentStart_in_namedAnnotationArgumentsStart16229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_iterableArgumentStart_in_namedAnnotationArgumentsStart16233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RBRACE_in_namedAnnotationArgumentsStart16237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_iterableArgumentStart16255 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_iterableArgumentStart16257 = new BitSet(new long[]{0x0000000001000000L,0x0000040100000000L});
    public static final BitSet FOLLOW_set_in_iterableArgumentStart16259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_specificationStart16283 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_parameters_in_specificationStart16285 = new BitSet(new long[]{0x0000000020000000L,0x0000200000000100L});
    public static final BitSet FOLLOW_set_in_specificationStart16288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_parExpression16314 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_parExpression16331 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_parExpression16347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_positionalArguments16384 = new BitSet(new long[]{0x0143800B04408000L,0x227508202618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_sequencedArgument_in_positionalArguments16413 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_positionalArguments16440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_positionalArgument16477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_spreadArgument16506 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_unionExpression_in_spreadArgument16522 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_anonParametersStart16547 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_LPAREN_in_anonParametersStart16554 = new BitSet(new long[]{0x0202000804801080L,0x200108200411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_RPAREN_in_anonParametersStart16570 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_anonParametersStart16578 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_anonParametersStart16581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RPAREN_in_anonParametersStart16585 = new BitSet(new long[]{0x0000000020000000L,0x1000000000000004L});
    public static final BitSet FOLLOW_set_in_anonParametersStart16587 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_anonParametersStart16603 = new BitSet(new long[]{0x0202000800801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_anonParametersStart16605 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_nonemptyParametersStart16629 = new BitSet(new long[]{0x0202000804801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_compilerAnnotations_in_nonemptyParametersStart16631 = new BitSet(new long[]{0x0202000800801080L,0x200108000411002CL,0x000000000000000EL});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_nonemptyParametersStart16633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousFunction_in_functionOrExpression16670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_let_in_functionOrExpression16686 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifExpression_in_functionOrExpression16702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchExpression_in_functionOrExpression16718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_functionOrExpression16736 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_letClause_in_let16765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_patternStart16798 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_patternStart16800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePatternStart_in_patternStart16811 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_pattern_in_letVariable16848 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_variable_in_letVariable16876 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_letVariable16912 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LET_in_letClause16952 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_LPAREN_in_letClause16968 = new BitSet(new long[]{0x0002000004000000L,0x200008200400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_letVariable_in_letClause16996 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_letClause17028 = new BitSet(new long[]{0x0002000004000000L,0x200008000400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_letVariable_in_letClause17054 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_letClause17094 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_letClause17110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchHeader_in_switchExpression17139 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_caseExpressions_in_switchExpression17155 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_caseExpression_in_caseExpressions17202 = new BitSet(new long[]{0x0000008000080002L});
    public static final BitSet FOLLOW_defaultCaseExpression_in_caseExpressions17239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_CLAUSE_in_caseExpression17283 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_caseItemList_in_caseExpression17300 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_caseExpression17316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_defaultCaseExpression17345 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_defaultCaseExpression17362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_ifExpression17391 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_thenElseClauses_in_ifExpression17407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifExpression_in_conditionalBranch17436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_let_in_conditionalBranch17452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_disjunctionExpression_in_conditionalBranch17468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditions_in_thenElseClauses17497 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_THEN_CLAUSE_in_thenElseClauses17513 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_thenElseClauses17531 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_thenElseClauses17547 = new BitSet(new long[]{0x0140800B00408000L,0x223500000618813CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conditionalBranch_in_thenElseClauses17565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_anonymousFunction17613 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000100L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_anonymousFunction17641 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000100L});
    public static final BitSet FOLLOW_typeParameters_in_anonymousFunction17680 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_anonymousFunction17709 = new BitSet(new long[]{0x0000000024000000L,0x1000000000000104L});
    public static final BitSet FOLLOW_parameters_in_anonymousFunction17738 = new BitSet(new long[]{0x0000000024000000L,0x1000000000000104L});
    public static final BitSet FOLLOW_typeConstraints_in_anonymousFunction17777 = new BitSet(new long[]{0x0000000020000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_COMPUTE_in_anonymousFunction17815 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_anonymousFunction17836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_anonymousFunction17864 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forComprehensionClause_in_comprehension17912 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifComprehensionClause_in_comprehension17928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forComprehensionClause_in_comprehensionClause17957 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifComprehensionClause_in_comprehensionClause17992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionComprehensionClause_in_comprehensionClause18009 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_expressionComprehensionClause18039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_forComprehensionClause18076 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_forIterator_in_forComprehensionClause18092 = new BitSet(new long[]{0x0143800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehensionClause_in_forComprehensionClause18108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_ifComprehensionClause18141 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_ifComprehensionClause18157 = new BitSet(new long[]{0x0143800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_comprehensionClause_in_ifComprehensionClause18173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_thenElseExpression_in_assignmentExpression18217 = new BitSet(new long[]{0x0800000410000222L,0x0008200800801000L,0x0000000000000001L});
    public static final BitSet FOLLOW_assignmentOperator_in_assignmentExpression18243 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_assignmentExpression18266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SPECIFY_in_assignmentOperator18306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ADD_SPECIFY_in_assignmentOperator18316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUBTRACT_SPECIFY_in_assignmentOperator18326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MULTIPLY_SPECIFY_in_assignmentOperator18336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIVIDE_SPECIFY_in_assignmentOperator18346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REMAINDER_SPECIFY_in_assignmentOperator18356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERSECT_SPECIFY_in_assignmentOperator18366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNION_SPECIFY_in_assignmentOperator18376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPLEMENT_SPECIFY_in_assignmentOperator18386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AND_SPECIFY_in_assignmentOperator18396 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OR_SPECIFY_in_assignmentOperator18406 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_disjunctionExpression_in_thenElseExpression18431 = new BitSet(new long[]{0x0000008000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_thenElseOperator_in_thenElseExpression18457 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_disjunctionExpression_in_thenElseExpression18479 = new BitSet(new long[]{0x0000008000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_thenElseOperator18519 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THEN_CLAUSE_in_thenElseOperator18536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conjunctionExpression_in_disjunctionExpression18567 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_disjunctionOperator_in_disjunctionExpression18593 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_conjunctionExpression_in_disjunctionExpression18616 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_OR_OP_in_disjunctionOperator18656 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_conjunctionExpression18688 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_conjunctionOperator_in_conjunctionExpression18714 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_conjunctionExpression18737 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_AND_OP_in_conjunctionOperator18777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_notOperator_in_logicalNegationExpression18807 = new BitSet(new long[]{0x0100800B00408000L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_logicalNegationExpression_in_logicalNegationExpression18826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_equalityExpression_in_logicalNegationExpression18842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_notOperator18871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_comparisonExpression_in_equalityExpression18903 = new BitSet(new long[]{0x0020020000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_equalityOperator_in_equalityExpression18929 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_comparisonExpression_in_equalityExpression18952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EQUAL_OP_in_equalityOperator18992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_EQUAL_OP_in_equalityOperator19009 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTICAL_OP_in_equalityOperator19025 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression19056 = new BitSet(new long[]{0x3000080002100002L,0x0000188000000003L});
    public static final BitSet FOLLOW_comparisonOperator_in_comparisonExpression19084 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression19107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_largerOperator_in_comparisonExpression19129 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression19152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_smallerOperator_in_comparisonExpression19174 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression19197 = new BitSet(new long[]{0x0000000000000002L,0x0000180000000000L});
    public static final BitSet FOLLOW_smallerOperator_in_comparisonExpression19232 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_existenceEmptinessExpression_in_comparisonExpression19246 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeOperator_in_comparisonExpression19281 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_comparisonExpression19303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALL_AS_OP_in_smallerOperator19349 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_smallerOperator19365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGE_AS_OP_in_largerOperator19394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LARGER_OP_in_largerOperator19410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPARE_OP_in_comparisonOperator19439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_comparisonOperator19456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_typeOperator19485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_typeOperator19501 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_typeOperator19517 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_TYPES_in_typeOperator19533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_entryRangeExpression_in_existenceEmptinessExpression19564 = new BitSet(new long[]{0x0000040000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_existsNonemptyOperator_in_existenceEmptinessExpression19592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXISTS_in_existsNonemptyOperator19638 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NONEMPTY_in_existsNonemptyOperator19655 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_additiveExpression_in_entryRangeExpression19686 = new BitSet(new long[]{0x0000010000000002L,0x0000020080000000L});
    public static final BitSet FOLLOW_rangeIntervalEntryOperator_in_entryRangeExpression19712 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_additiveExpression_in_entryRangeExpression19735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RANGE_OP_in_rangeIntervalEntryOperator19775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_rangeIntervalEntryOperator19792 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ENTRY_OP_in_rangeIntervalEntryOperator19808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_scaleExpression_in_additiveExpression19839 = new BitSet(new long[]{0x0000000200000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_additiveOperator_in_additiveExpression19865 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_scaleExpression_in_additiveExpression19888 = new BitSet(new long[]{0x0000000200000002L,0x0010000000000000L});
    public static final BitSet FOLLOW_SUM_OP_in_additiveOperator19928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIFFERENCE_OP_in_additiveOperator19945 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_multiplicativeExpression_in_scaleExpression19974 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_scaleOperator_in_scaleExpression20000 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_scaleExpression_in_scaleExpression20022 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionExpression_in_multiplicativeExpression20064 = new BitSet(new long[]{0x0000000000000002L,0x0000000460000000L});
    public static final BitSet FOLLOW_multiplicativeOperator_in_multiplicativeExpression20090 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_unionExpression_in_multiplicativeExpression20113 = new BitSet(new long[]{0x0000000000000002L,0x0000000460000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_multiplicativeOperator20153 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QUOTIENT_OP_in_multiplicativeOperator20170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REMAINDER_OP_in_multiplicativeOperator20186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionExpression_in_unionExpression20217 = new BitSet(new long[]{0x0000000008000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_unionOperator_in_unionExpression20243 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_intersectionExpression_in_unionExpression20266 = new BitSet(new long[]{0x0000000008000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_unionOperator20310 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPLEMENT_OP_in_unionOperator20326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_negationComplementExpression_in_intersectionExpression20357 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_intersectionOperator_in_intersectionExpression20383 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_negationComplementExpression_in_intersectionExpression20406 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_intersectionOperator20450 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unaryMinusOrComplementOperator_in_negationComplementExpression20479 = new BitSet(new long[]{0x0100800B00408000L,0x223500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_negationComplementExpression_in_negationComplementExpression20498 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_exponentiationExpression_in_negationComplementExpression20514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DIFFERENCE_OP_in_unaryMinusOrComplementOperator20543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUM_OP_in_unaryMinusOrComplementOperator20560 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_incrementDecrementExpression_in_exponentiationExpression20589 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_exponentiationOperator_in_exponentiationExpression20615 = new BitSet(new long[]{0x0100800900408000L,0x222500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_exponentiationExpression_in_exponentiationExpression20637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_POWER_OP_in_exponentiationOperator20677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SCALE_OP_in_scaleOperator20707 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_prefixOperator_in_incrementDecrementExpression20737 = new BitSet(new long[]{0x0100800900408000L,0x222500000610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_incrementDecrementExpression_in_incrementDecrementExpression20755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_postfixIncrementDecrementExpression_in_incrementDecrementExpression20771 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DECREMENT_OP_in_prefixOperator20800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INCREMENT_OP_in_prefixOperator20817 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_in_postfixIncrementDecrementExpression20847 = new BitSet(new long[]{0x0100000100000002L});
    public static final BitSet FOLLOW_postfixOperator_in_postfixIncrementDecrementExpression20875 = new BitSet(new long[]{0x0100000100000002L});
    public static final BitSet FOLLOW_DECREMENT_OP_in_postfixOperator20915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INCREMENT_OP_in_postfixOperator20932 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THIS_in_selfReference20962 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUPER_in_selfReference20978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OUTER_in_selfReference20995 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_selfReference21011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NATURAL_LITERAL_in_nonstringLiteral21044 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FLOAT_LITERAL_in_nonstringLiteral21061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_LITERAL_in_nonstringLiteral21078 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_stringLiteral21108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VERBATIM_STRING_in_stringLiteral21125 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_stringExpression21165 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_START_in_stringExpression21181 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_stringExpression21199 = new BitSet(new long[]{0x0000000000000000L,0x0002800000000000L});
    public static final BitSet FOLLOW_STRING_MID_in_stringExpression21225 = new BitSet(new long[]{0x0142800B00408000L,0x227508000618813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_functionOrExpression_in_stringExpression21247 = new BitSet(new long[]{0x0000000000000000L,0x0002800000000000L});
    public static final BitSet FOLLOW_STRING_END_in_stringExpression21274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_typeArguments21312 = new BitSet(new long[]{0x1000000000000000L,0x200008000500000DL});
    public static final BitSet FOLLOW_variance_in_typeArguments21352 = new BitSet(new long[]{0x0000000001000000L,0x200008000400000DL});
    public static final BitSet FOLLOW_type_in_typeArguments21392 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_typeArguments21443 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_COMMA_in_typeArguments21489 = new BitSet(new long[]{0x1000000001000000L,0x200008000500000DL});
    public static final BitSet FOLLOW_variance_in_typeArguments21529 = new BitSet(new long[]{0x0000000001000000L,0x200008000400000DL});
    public static final BitSet FOLLOW_type_in_typeArguments21575 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_typeArguments21666 = new BitSet(new long[]{0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_typeArguments21752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_variadicType21800 = new BitSet(new long[]{0x0000000000000002L,0x0010000020000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_variadicType21826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUM_OP_in_variadicType21854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_variadicType21883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_defaultedType21929 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_defaultedType21955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variadicType_in_defaultedType21982 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_spreadType22020 = new BitSet(new long[]{0x0000000000000002L,0x200008000400000CL});
    public static final BitSet FOLLOW_unionType_in_spreadType22048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_tupleType22088 = new BitSet(new long[]{0x0000000000000000L,0x200008022400000CL});
    public static final BitSet FOLLOW_spreadType_in_tupleType22116 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_defaultedType_in_tupleType22146 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_COMMA_in_tupleType22180 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_defaultedType_in_tupleType22206 = new BitSet(new long[]{0x0000000001000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_tupleType22246 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SMALLER_OP_in_groupedType22275 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_groupedType22293 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LARGER_OP_in_groupedType22309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_iterableType22337 = new BitSet(new long[]{0x0000000000000000L,0x200008010400000CL});
    public static final BitSet FOLLOW_variadicType_in_iterableType22362 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_RBRACE_in_iterableType22386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_type22440 = new BitSet(new long[]{0x0000000020000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_anonymousTypeConstraints_in_type22467 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_COMPUTE_in_type22494 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_entryType_in_type22503 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_entryType_in_type22519 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_entryType22559 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_ENTRY_OP_in_entryType22585 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_unionType_in_entryType22619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intersectionType_in_unionType22684 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_UNION_OP_in_unionType22725 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_intersectionType_in_unionType22765 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
    public static final BitSet FOLLOW_primaryType_in_intersectionType22855 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_INTERSECTION_OP_in_intersectionType22896 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_primaryType_in_intersectionType22936 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_qualifiedType_in_atomicType23015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tupleType_in_atomicType23032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_iterableType_in_atomicType23049 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_atomicType_in_primaryType23087 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_OPTIONAL_in_primaryType23113 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_LBRACKET_in_primaryType23134 = new BitSet(new long[]{0x0000000000000000L,0x0000000200008000L});
    public static final BitSet FOLLOW_NATURAL_LITERAL_in_primaryType23166 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_RBRACKET_in_primaryType23200 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_LPAREN_in_primaryType23221 = new BitSet(new long[]{0x0000000000000000L,0x200008202400000CL});
    public static final BitSet FOLLOW_spreadType_in_primaryType23259 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_defaultedType_in_primaryType23301 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_primaryType23345 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_defaultedType_in_primaryType23379 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_primaryType23433 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200108L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_baseType23491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_groupedType_in_baseType23513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_baseType23529 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_baseType23545 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_baseType23563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_baseType_in_qualifiedType23592 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_qualifiedType23618 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeNameWithArguments_in_qualifiedType23630 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_typeName_in_typeNameWithArguments23670 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_typeNameWithArguments23697 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_memberNameWithArguments23741 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_memberNameWithArguments23768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_annotations23832 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotation_in_annotations23871 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotationName_in_annotation23912 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000104L});
    public static final BitSet FOLLOW_positionalArguments_in_annotation23935 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArguments_in_annotation23964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotation_in_compilerAnnotations24068 = new BitSet(new long[]{0x0000000004000002L});
    public static final BitSet FOLLOW_COMPILER_ANNOTATION_in_compilerAnnotation24108 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_annotationName_in_compilerAnnotation24125 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_SEGMENT_OP_in_compilerAnnotation24155 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_stringLiteral_in_compilerAnnotation24167 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_conditions24209 = new BitSet(new long[]{0x2142840B00408000L,0x227508A0061A813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_condition_in_conditions24235 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_conditions24255 = new BitSet(new long[]{0x2142840B01408000L,0x227508A0061A813CL,0x000000000000000CL});
    public static final BitSet FOLLOW_condition_in_conditions24290 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_conditions24352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_existsCondition_in_condition24381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonemptyCondition_in_condition24397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_isCondition_in_condition24413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_satisfiesCondition_in_condition24430 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_booleanCondition_in_condition24446 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_functionOrExpression_in_booleanCondition24487 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_existsCondition24530 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_EXISTS_in_existsCondition24557 = new BitSet(new long[]{0x0102800B04408000L,0x223508000618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_letVariable_in_existsCondition24615 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_existsCondition24649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_existsCondition24669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_nonemptyCondition24722 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_NONEMPTY_in_nonemptyCondition24749 = new BitSet(new long[]{0x0102800B04408000L,0x223508000618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_letVariable_in_nonemptyCondition24807 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_nonemptyCondition24841 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_nonemptyCondition24862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OP_in_isCondition24911 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_IS_OP_in_isCondition24938 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_isCondition24955 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_isConditionVariable_in_isCondition24999 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_impliedVariable_in_isCondition25027 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_isConditionVariable25076 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_isConditionVariable25092 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiesCondition25121 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_satisfiesCondition25138 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_typeName_in_satisfiesCondition25155 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifElse_in_controlStatement25184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchCaseElse_in_controlStatement25201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_whileLoop_in_controlStatement25218 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forElse_in_controlStatement25235 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tryCatchFinally_in_controlStatement25252 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dynamic_in_controlStatement25268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_controlBlock25306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_dynamic25372 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_dynamic25389 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifBlock_in_ifElse25426 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_elseBlock_in_ifElse25454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_ifBlock25494 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_ifBlock25511 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_ifBlock25527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_elseBlock25556 = new BitSet(new long[]{0x0040000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_elseIf_in_elseBlock25583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_elseBlock25613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifElse_in_elseIf25652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchHeader_in_switchCaseElse25689 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_cases_in_switchCaseElse25706 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SWITCH_CLAUSE_in_switchHeader25735 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_LPAREN_in_switchHeader25752 = new BitSet(new long[]{0x0102800B04408000L,0x223508200618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_switched_in_switchHeader25778 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_switchHeader25806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifiedVariable_in_switched25865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_switched25885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_caseBlock_in_cases25942 = new BitSet(new long[]{0x0000008000080002L});
    public static final BitSet FOLLOW_defaultCaseBlock_in_cases25979 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_CLAUSE_in_caseBlock26023 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_caseItemList_in_caseBlock26040 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_caseBlock26056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_defaultCaseBlock26085 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_block_in_defaultCaseBlock26102 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_caseItemList26131 = new BitSet(new long[]{0x2100800B00408000L,0x223500A00610812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_caseItem_in_caseItemList26152 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_caseItemList26179 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_isCaseCondition_in_caseItem26213 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_satisfiesCaseCondition_in_caseItem26234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_matchCaseCondition_in_caseItem26250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_valueCaseList_in_matchCaseCondition26279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_isCaseCondition26308 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_isCaseCondition26325 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_satisfiesCaseCondition26354 = new BitSet(new long[]{0x0000000000000000L,0x200008000400000CL});
    public static final BitSet FOLLOW_type_in_satisfiesCaseCondition26371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forBlock_in_forElse26408 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_failBlock_in_forElse26435 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_forBlock26475 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_forIterator_in_forBlock26492 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_forBlock26509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_CLAUSE_in_failBlock26538 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_failBlock26555 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_forIterator26593 = new BitSet(new long[]{0x0002000004000000L,0x200008200400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_pattern_in_forIterator26634 = new BitSet(new long[]{0x1000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_variable_in_forIterator26665 = new BitSet(new long[]{0x1000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_containment_in_forIterator26705 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_forIterator26741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_OP_in_containment26773 = new BitSet(new long[]{0x0100800B00408002L,0x223500000618812CL,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_containment26791 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_whileBlock_in_whileLoop26834 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_WHILE_CLAUSE_in_whileBlock26863 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_whileBlock26879 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_whileBlock26895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tryBlock_in_tryCatchFinally26932 = new BitSet(new long[]{0x0000400000200002L});
    public static final BitSet FOLLOW_catchBlock_in_tryCatchFinally26959 = new BitSet(new long[]{0x0000400000200002L});
    public static final BitSet FOLLOW_finallyBlock_in_tryCatchFinally26998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TRY_CLAUSE_in_tryBlock27038 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000104L});
    public static final BitSet FOLLOW_resources_in_tryBlock27065 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_tryBlock27085 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_tryBlock27113 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CATCH_CLAUSE_in_catchBlock27152 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_catchVariable_in_catchBlock27169 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_catchBlock27185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_catchVariable27214 = new BitSet(new long[]{0x0002000004000000L,0x200008200400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_variable_in_catchVariable27239 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_catchVariable27265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FINALLY_CLAUSE_in_finallyBlock27296 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_controlBlock_in_finallyBlock27313 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_resources27342 = new BitSet(new long[]{0x0102800B04408000L,0x223508200618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_resource_in_resources27368 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_COMMA_in_resources27399 = new BitSet(new long[]{0x0102800B04408000L,0x223508000618812CL,0x000000000000000EL});
    public static final BitSet FOLLOW_resource_in_resources27424 = new BitSet(new long[]{0x0000000001000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_RPAREN_in_resources27460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifiedVariable_in_resource27521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_resource27544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_specifiedVariable27575 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_specifier_in_specifiedVariable27602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_variable27642 = new BitSet(new long[]{0x0002000000000000L,0x200008000400002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_var_in_variable27650 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_var27710 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_var27740 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_var27769 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_var27798 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberName_in_var27826 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_var27856 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_memberName_in_var27900 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_parameters_in_var27928 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_memberName_in_impliedVariable27968 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeName_in_referencePathElement27998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_referencePathElement28015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_referencePathElement_in_referencePath28060 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_PACKAGE_in_referencePath28090 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_referencePath28110 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_referencePathElement_in_referencePath28130 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_referencePath28167 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000020L});
    public static final BitSet FOLLOW_referencePathElement_in_referencePath28179 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_MODULE_in_moduleLiteral28217 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_moduleLiteral28236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_packageLiteral28264 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000020L});
    public static final BitSet FOLLOW_packagePath_in_packageLiteral28283 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASS_DEFINITION_in_classLiteral28311 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_classLiteral28330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_interfaceLiteral28358 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_interfaceLiteral28377 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_newLiteral28405 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_newLiteral28424 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALIAS_in_aliasLiteral28452 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_aliasLiteral28471 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TYPE_CONSTRAINT_in_typeParameterLiteral28499 = new BitSet(new long[]{0x0000000000000002L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_typeParameterLiteral28518 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_MODIFIER_in_valueLiteral28555 = new BitSet(new long[]{0x0000000000000000L,0x2000000004000020L});
    public static final BitSet FOLLOW_OBJECT_DEFINITION_in_valueLiteral28577 = new BitSet(new long[]{0x0000000000000000L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_valueLiteral28599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_functionLiteral28622 = new BitSet(new long[]{0x0000000000000000L,0x2000000004000020L});
    public static final BitSet FOLLOW_referencePath_in_functionLiteral28636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberName_in_memberPathElement28661 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_typeArguments_in_memberPathElement28687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberPathElement_in_memberModelExpression28750 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_memberModelExpression28773 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_memberModelExpression28791 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberPathElement_in_memberModelExpression28809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primaryType_in_memberModelExpression28834 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_memberModelExpression28852 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_memberPathElement_in_memberModelExpression28870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typeModelExpression28909 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberModelExpression_in_modelExpression28961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeModelExpression_in_modelExpression28978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BACKTICK_in_metaLiteral29005 = new BitSet(new long[]{0x0202000000800080L,0x300008000411082CL,0x0000000000000002L});
    public static final BitSet FOLLOW_moduleLiteral_in_metaLiteral29022 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_packageLiteral_in_metaLiteral29059 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_classLiteral_in_metaLiteral29077 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_newLiteral_in_metaLiteral29095 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_interfaceLiteral_in_metaLiteral29113 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_aliasLiteral_in_metaLiteral29131 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_typeParameterLiteral_in_metaLiteral29149 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_valueLiteral_in_metaLiteral29167 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_functionLiteral_in_metaLiteral29185 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_modelExpression_in_metaLiteral29203 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_BACKTICK_in_metaLiteral29234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedModuleDescriptorStart_in_synpred1_Ceylon164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedPackageDescriptorStart_in_synpred2_Ceylon207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred3_Ceylon3037 = new BitSet(new long[]{0x0202000800801080L,0x200008000411000CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_synpred3_Ceylon3039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePatternStart_in_synpred4_Ceylon3112 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_synpred5_Ceylon3177 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred5_Ceylon3179 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_synpred6_Ceylon3215 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred6_Ceylon3217 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePatternStart_in_synpred7_Ceylon3253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_synpred8_Ceylon3325 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred8_Ceylon3327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tuplePattern_in_synpred9_Ceylon3363 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred9_Ceylon3365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred10_Ceylon3654 = new BitSet(new long[]{0x0000000000000000L,0x200008002400000CL});
    public static final BitSet FOLLOW_unionType_in_synpred10_Ceylon3656 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_PRODUCT_OP_in_synpred10_Ceylon3659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_destructureStart_in_synpred11_Ceylon9601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedDeclarationStart_in_synpred12_Ceylon9627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotatedAssertionStart_in_synpred13_Ceylon9655 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationListStart_in_synpred14_Ceylon9681 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_DEFINITION_in_synpred15_Ceylon9806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DYNAMIC_in_synpred15_Ceylon9808 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_UIDENTIFIER_in_synpred15_Ceylon9810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_synpred16_Ceylon9928 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000120L});
    public static final BitSet FOLLOW_LPAREN_in_synpred16_Ceylon9937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unambiguousType_in_synpred17_Ceylon10023 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred18_Ceylon11697 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000100L});
    public static final BitSet FOLLOW_typeParameters_in_synpred18_Ceylon11699 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_specifierParametersStart_in_synpred18_Ceylon11702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifierParametersStart_in_synpred19_Ceylon11778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MEMBER_OP_in_synpred20_Ceylon11853 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred20_Ceylon11855 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000100L});
    public static final BitSet FOLLOW_typeParameters_in_synpred20_Ceylon11857 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_specifierParametersStart_in_synpred20_Ceylon11860 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specifierParametersStart_in_synpred21_Ceylon11972 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred23_Ceylon12673 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousArgument_in_synpred24_Ceylon12708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeArgumentsStart_in_synpred25_Ceylon13036 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeArgumentsStart_in_synpred26_Ceylon13117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_index_in_synpred27_Ceylon13345 = new BitSet(new long[]{0x0000004000000000L,0x0000020080000000L});
    public static final BitSet FOLLOW_set_in_synpred27_Ceylon13347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred28_Ceylon13673 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousArgument_in_synpred29_Ceylon13708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_synpred30_Ceylon13846 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_synpred30_Ceylon13850 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_synpred30_Ceylon13852 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFEFFFFFFFFFFFFFFL,0x000000000000003FL});
    public static final BitSet FOLLOW_set_in_synpred30_Ceylon13854 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FOR_CLAUSE_in_synpred31_Ceylon14029 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_synpred31_Ceylon14033 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_synpred31_Ceylon14035 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFEFFFFFFFFFFFFFFL,0x000000000000003FL});
    public static final BitSet FOLLOW_set_in_synpred31_Ceylon14037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedArgumentStart_in_synpred32_Ceylon16226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FUNCTION_MODIFIER_in_synpred33_Ceylon16655 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_MODIFIER_in_synpred33_Ceylon16657 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonParametersStart_in_synpred33_Ceylon16659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variable_in_synpred34_Ceylon16791 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ENTRY_OP_in_synpred34_Ceylon16793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred35_Ceylon16843 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IF_CLAUSE_in_synpred36_Ceylon17975 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_conditions_in_synpred36_Ceylon17977 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFEFFFFFFFFFFFFFFL,0x000000000000003FL});
    public static final BitSet FOLLOW_set_in_synpred36_Ceylon17979 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unionType_in_synpred37_Ceylon21782 = new BitSet(new long[]{0x0000000000000000L,0x0010000020000000L});
    public static final BitSet FOLLOW_set_in_synpred37_Ceylon21784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_synpred38_Ceylon21913 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_synpred38_Ceylon21916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_synpred39_Ceylon22423 = new BitSet(new long[]{0x0000000020000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_set_in_synpred39_Ceylon22425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_namedAnnotationArgumentsStart_in_synpred40_Ceylon23952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred41_Ceylon24587 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred42_Ceylon24592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred42_Ceylon24596 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_synpred42_Ceylon24599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred42_Ceylon24601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred43_Ceylon24645 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred44_Ceylon24779 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred45_Ceylon24784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilerAnnotations_in_synpred45_Ceylon24788 = new BitSet(new long[]{0x0202000800801080L,0x200008000411002CL,0x000000000000000AL});
    public static final BitSet FOLLOW_declarationStart_in_synpred45_Ceylon24791 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred45_Ceylon24793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred46_Ceylon24837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred47_Ceylon24982 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_SPECIFY_in_synpred47_Ceylon24984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_synpred48_Ceylon25300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPILER_ANNOTATION_in_synpred49_Ceylon25847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_synpred49_Ceylon25849 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred49_Ceylon25851 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_OP_in_synpred50_Ceylon26210 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SATISFIES_in_synpred51_Ceylon26231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_patternStart_in_synpred52_Ceylon26629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPILER_ANNOTATION_in_synpred53_Ceylon27505 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declarationStart_in_synpred53_Ceylon27507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_specificationStart_in_synpred53_Ceylon27509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_synpred54_Ceylon28943 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_primaryType_in_synpred54_Ceylon28945 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_MEMBER_OP_in_synpred54_Ceylon28948 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_LIDENTIFIER_in_synpred54_Ceylon28952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_synpred55_Ceylon29041 = new BitSet(new long[]{0x0000000000008000L,0x0000000000000020L});
    public static final BitSet FOLLOW_set_in_synpred55_Ceylon29043 = new BitSet(new long[]{0x0000000000000002L});

}